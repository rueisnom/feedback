<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/541487">
    <body>
      <group id="541487">
        <trans-unit id="62d7599ad22b415fd81a46bb984ace574bdb41cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Runnable&lt;/code&gt; is a &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se8/html/jls-9.html#jls-9.8&quot;&gt;functional interface&lt;/a&gt;, which means that instances of it can be created with lambda expressions or method references.</source>
          <target state="translated">&lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se8/html/jls-9.html#jls-9.8&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;interfaz funcional&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , lo que significa que se pueden crear instancias con expresiones lambda o referencias de m&amp;eacute;todos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="116c0e349c8adf71e2851bf8b8e246107e3f91ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Runnable&lt;/code&gt; is an interface, while &lt;code&gt;Thread&lt;/code&gt; is a class which implements this interface. From a design point of view, there should be a clean separation between how a task is defined and between how it is executed. The former is the responsibility of a &lt;code&gt;Runnalbe&lt;/code&gt; implementation, and the latter is job of the &lt;code&gt;Thread&lt;/code&gt; class. In most of the cases implementing &lt;code&gt;Runnable&lt;/code&gt; is the right way to follow.</source>
          <target state="translated">&lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una interfaz, mientras que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una clase que implementa esta interfaz. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Desde el punto de vista del dise&amp;ntilde;o, debe haber una separaci&amp;oacute;n clara entre c&amp;oacute;mo se define una tarea y c&amp;oacute;mo se ejecuta. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El primero es responsabilidad de una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;implementaci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnalbe&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y el segundo es trabajo de la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;clase &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En la mayor&amp;iacute;a de los casos, la implementaci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es la forma correcta de seguir.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b86924146ba68c8bfd370d9c8cbb28aac882d4fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class Thread&lt;/code&gt;, I would say A very special class with the capability of starting a new Thread which actually enables multi-threading through its &lt;code&gt;start()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;class Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , dir&amp;iacute;a que es una clase muy especial con la capacidad de iniciar un nuevo subproceso que realmente permite m&amp;uacute;ltiples subprocesos a trav&amp;eacute;s de su &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;start()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c15dd2569a57d806fadcddf028f79b29110b61b8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;However, one &lt;strong&gt;significant difference&lt;/strong&gt; between implementing Runnable and extending Thread is that&lt;br/&gt;&lt;/em&gt;&lt;code&gt;by extending Thread, each of your threads has a unique object associated with it, whereas implementing Runnable, many threads can share the same object instance.&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, una &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;diferencia significativa&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; entre implementar Runnable y extender Thread es que &lt;/font&gt;&lt;/font&gt;&lt;br/&gt;&lt;/em&gt; &lt;code&gt;by extending Thread, each of your threads has a unique object associated with it, whereas implementing Runnable, many threads can share the same object instance.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b988bc45bc21ad749b545ef24e587c2b5f114b4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Inherit less, interface more.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Herede menos, interact&amp;uacute;e m&amp;aacute;s.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="30a1ec52c8acc5aaae9b6547af7f98134ab406ff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Inherit only if you want to override some behavior.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Herede solo si desea anular alg&amp;uacute;n comportamiento.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f852eec1c67548328367f539479b598b7a14ec96" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The most common difference is&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La diferencia m&amp;aacute;s com&amp;uacute;n es&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b223e924ba49f56988aa04f2055a59e975212ebd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;But&lt;/strong&gt; it is possible to create and run a thread only using &lt;code&gt;class Thread&lt;/code&gt; because Class &lt;code&gt;Thread&lt;/code&gt; implements &lt;code&gt;Runnable&lt;/code&gt; so we all know &lt;code&gt;Thread&lt;/code&gt; also is a &lt;code&gt;Runnable&lt;/code&gt; inside.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es posible crear y ejecutar un subproceso solo usando la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;class Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; porque Class &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; implementa &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; por lo que todos sabemos que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tambi&amp;eacute;n es un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;su&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; interior.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33dfb729fa599af728a752ed201e739a5d966fee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Caveat:&lt;/strong&gt; Around here, I strongly discourage the use of raw Threads.  I much prefer the use of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html&quot;&gt;Callables&lt;/a&gt; and &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html&quot;&gt;FutureTasks&lt;/a&gt; (From the javadoc: &quot;A cancellable asynchronous computation&quot;).  The integration of timeouts, proper cancelling and the thread pooling of the modern concurrency support are all much more useful to me than piles of raw Threads.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Advertencia:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Por aqu&amp;iacute;, desaconsejo el uso de hilos en bruto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Prefiero el uso de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Callables&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;FutureTasks&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (del javadoc: &quot;Un c&amp;aacute;lculo asincr&amp;oacute;nico cancelable&quot;). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La integraci&amp;oacute;n de los tiempos de espera, la cancelaci&amp;oacute;n adecuada y la agrupaci&amp;oacute;n de subprocesos del soporte de concurrencia moderna son mucho m&amp;aacute;s &amp;uacute;tiles para m&amp;iacute; que las pilas de subprocesos sin procesar.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4c85343fff48abdfd37e9a075ad989b17c7bcfbc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Finally &lt;code&gt;Thread&lt;/code&gt; and &lt;code&gt;Runnable&lt;/code&gt; are complement to each other for multithreading  not competitor or replacement.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Finalmente, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se complementan entre s&amp;iacute; para multiproceso, no para competidor o reemplazo.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0446a2d3bfa32a6642a07c8288096de869a468f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Follow-up:&lt;/strong&gt; there is a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html#FutureTask-java.lang.Runnable-V-&quot;&gt;&lt;code&gt;FutureTask&lt;/code&gt; constructor&lt;/a&gt; that allows you to use Runnables (if that's what you are most comfortable with) and still get the benefit of the modern concurrency tools.  &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html#FutureTask-java.lang.Runnable-V-&quot;&gt;To quote the javadoc&lt;/a&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Seguimiento:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; existe un &lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html#FutureTask-java.lang.Runnable-V-&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;constructor &lt;/font&gt;&lt;/a&gt;&lt;/font&gt; &lt;code&gt;FutureTask&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que le permite usar Runnables (si es con lo que se siente m&amp;aacute;s c&amp;oacute;modo) y a&amp;uacute;n as&amp;iacute; obtener el beneficio de las herramientas de concurrencia modernas. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html#FutureTask-java.lang.Runnable-V-&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para citar el javadoc&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="254579b24d70af9cbffecebd938228d377a4f136" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;However, the significant difference is.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, la diferencia significativa es.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fe49c0f5735c2402b764994567ccd17720327894" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output of the above program.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Salida del programa anterior.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5300730740365005553c18a35abea43a5b886fd1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Runnable:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Runnable:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="46f5806762d4667225feed291bd581c3cc082aba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Single inheritance&lt;/strong&gt;: If you extend Thread you cannot extend from any other class, so if that is what you need to do, you have to use Runnable.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Herencia &amp;uacute;nica&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : si extiende Thread no puede extenderlo desde ninguna otra clase, por lo que si eso es lo que necesita hacer, debe usar Runnable.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e3b390bbd2f268235c45e0aab537a5330726679c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The following example will help you to understand more clearly&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El siguiente ejemplo lo ayudar&amp;aacute; a comprender m&amp;aacute;s claramente.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="385cd01aebb4efad5824ac0762cc2e1fa2699741" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The most common difference is&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La diferencia m&amp;aacute;s com&amp;uacute;n es&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c55c19a3f218b2f4994d24908e37e4f7e7a0dba3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Thread:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Thread:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60dcf72cf52ecad4e2613a990dd2c8d245e153ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;When to use Runnable?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Cu&amp;aacute;ndo usar Runnable?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8dbac19e5f4c4ce89943b920969b5d590ef94fb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why not wise to compare?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Por qu&amp;eacute; no sabio comparar?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9a8977199b77ba714127ba9ccd60a24bc4d94016" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tl;dr: implements Runnable is better.  However, the caveat is important&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tl; dr: implementa Runnable es mejor. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, la advertencia es importante&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e28fab52450edf730501a2469988b5fa9d89f14c" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;thread&lt;/em&gt; embodies the &lt;strong&gt;running context&lt;/strong&gt; (as in execution context: stack frame, thread id, etc.) of the &lt;em&gt;asynchronous execution&lt;/em&gt; of a piece of code. That &lt;em&gt;piece of code&lt;/em&gt; ideally should be the same implementation, whether &lt;em&gt;synchronous&lt;/em&gt; or &lt;em&gt;asynchronous&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;hilo&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; encarna el &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;contexto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en ejecuci&amp;oacute;n (como en el contexto de ejecuci&amp;oacute;n: marco de pila, id de hilo, etc.) de la &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ejecuci&amp;oacute;n asincr&amp;oacute;nica&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de un fragmento de c&amp;oacute;digo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ese &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;c&amp;oacute;digo&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; idealmente deber&amp;iacute;a ser la misma implementaci&amp;oacute;n, ya sea &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;s&amp;iacute;ncrona&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;as&amp;iacute;ncrona&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dd27ec3a109b191a2b4337d0e189ff11a09daa24" translate="yes" xml:space="preserve">
          <source>A class that implements Runnable is not a thread and just a class. For a Runnable to become a Thread, You need to create an instance of Thread and passing itself in as the target.</source>
          <target state="translated">Una clase que implementa Runnable no es un hilo y sólo una clase.Para que un Runnable se convierta en un Thread,tienes que crear una instancia de Thread y pasarla a sí mismo como el objetivo.</target>
        </trans-unit>
        <trans-unit id="135959f92ccea58dd0ae914dbd2b7e95c97465fe" translate="yes" xml:space="preserve">
          <source>A) might give it a more useful name for debugging purposes</source>
          <target state="translated">A)podría darle un nombre más útil para fines de depuración</target>
        </trans-unit>
        <trans-unit id="8f75a870d262f786db6d8ecd48442db110ed4409" translate="yes" xml:space="preserve">
          <source>Actually, It is not wise to compare &lt;code&gt;Runnable&lt;/code&gt; and &lt;code&gt;Thread&lt;/code&gt; with each other.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En realidad, no es aconsejable comparar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; entre s&amp;iacute;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49c48e3500611ab4c25b532be6a67db336ad4144" translate="yes" xml:space="preserve">
          <source>Adding my two cents here -
&lt;strong&gt;Always whenever possible use &lt;code&gt;implements Runnable&lt;/code&gt; . Below are two caveats on why you should not use 
&lt;code&gt;extends Thread&lt;/code&gt;s&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Agregando mis dos centavos aqu&amp;iacute;: &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;siempre que sea posible, use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;implements Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A continuaci&amp;oacute;n se presentan dos advertencias sobre por qu&amp;eacute; no debe usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; s&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e21ccd7ef72f4e2238fd70d36dd64f5606395ac" translate="yes" xml:space="preserve">
          <source>Allows you to run your
runnable from a Thread Pool, the
event thread, or in any other way in
the future.</source>
          <target state="translated">Te permite ejecutar tu runnable desde un Thread Pool,el hilo del evento,o de cualquier otra forma en el futuro.</target>
        </trans-unit>
        <trans-unit id="c0eacf29e8e5fc23869b004f56ea19fe3149cb3d" translate="yes" xml:space="preserve">
          <source>Always remember &lt;code&gt;implements&lt;/code&gt; is specially used to impart a behaviour and &lt;code&gt;extends&lt;/code&gt; is used to impart a feature/property.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Recuerde siempre que los &lt;/font&gt;&lt;/font&gt; &lt;code&gt;implements&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se usan especialmente para impartir un comportamiento y los &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se usan para impartir una caracter&amp;iacute;stica / propiedad.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="41932dab476ae54b2ba9663f01438a39888a91f3" translate="yes" xml:space="preserve">
          <source>Another option that allows you to stay closer to Runnables is a &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html&quot;&gt;ThreadPoolExecutor&lt;/a&gt;.  You can use the &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html#execute%28java.lang.Runnable%29&quot;&gt;execute&lt;/a&gt; method to pass in a Runnable to execute &quot;the given task sometime in the future.&quot;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Otra opci&amp;oacute;n que le permite estar m&amp;aacute;s cerca de Runnables es un &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ThreadPoolExecutor&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede usar el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html#execute%28java.lang.Runnable%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ejecuci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para pasar un Runnable para ejecutar &quot;la tarea dada en alg&amp;uacute;n momento en el futuro&quot;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="26a30ff47e3f0bd898dc6328f6bd6e16780bde5b" translate="yes" xml:space="preserve">
          <source>B) are forcing that that name be used for all instances of that class (unless you ignore the fact that it is a thread and do the above with it as if it is a Runnable but we are talking about convention here in any case so can ignore that possibility I feel).</source>
          <target state="translated">B)están obligando a que ese nombre sea usado para todas las instancias de esa clase (a menos que ignoren el hecho de que es un hilo y hagan lo anterior con él como si fuera un Runnable pero estamos hablando de una convención aquí en cualquier caso así que puedo ignorar esa posibilidad que siento).</target>
        </trans-unit>
        <trans-unit id="9c33e4b992bcd5ad5f1c70acf00ed1d2876f6bf9" translate="yes" xml:space="preserve">
          <source>Because we need both of them for multi-threading.</source>
          <target state="translated">Porque los necesitamos a ambos para el multihilo.</target>
        </trans-unit>
        <trans-unit id="d79bf5095fe6c49cabb42938911118237ccae20d" translate="yes" xml:space="preserve">
          <source>Both approaches do the same job but there have been some differences.</source>
          <target state="translated">Ambos enfoques hacen el mismo trabajo,pero ha habido algunas diferencias.</target>
        </trans-unit>
        <trans-unit id="e47335bb4fee1525429811ff1fc770416433d4c1" translate="yes" xml:space="preserve">
          <source>Can we re-visit the basic reason we wanted our class to behave as a &lt;code&gt;Thread&lt;/code&gt;?
There is no reason at all, we just wanted to execute a task, most likely in an asynchronous mode, which precisely means that the execution of the task must branch from our main thread and the main thread if finishes early, may or may not wait for the branched path(task).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Podemos volver a visitar la raz&amp;oacute;n b&amp;aacute;sica por la que quer&amp;iacute;amos que nuestra clase se comportara como un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No hay ninguna raz&amp;oacute;n en absoluto, solo quer&amp;iacute;amos ejecutar una tarea, probablemente en un modo as&amp;iacute;ncrono, lo que significa que la ejecuci&amp;oacute;n de la tarea debe ramificarse desde nuestro hilo principal y el hilo principal si finaliza antes, puede o no esperar para la ruta ramificada (tarea).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8be41cdea7c33cb4adc7250b989a0c2044687900" translate="yes" xml:space="preserve">
          <source>Courtesy from &lt;a href=&quot;http://javarevisited.blogspot.com/2012/01/difference-thread-vs-runnable-interface.html&quot;&gt;javarevisited.blogspot.com&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cortes&amp;iacute;a de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://javarevisited.blogspot.com/2012/01/difference-thread-vs-runnable-interface.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;javarevisited.blogspot.com&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c9f7d1da0ff0684e9567952b066f07f4297dd22f" translate="yes" xml:space="preserve">
          <source>Difference between Extending Thread and Implementing Runnable are:</source>
          <target state="translated">La diferencia entre Extending Thread y Implementing Runnable son:</target>
        </trans-unit>
        <trans-unit id="74dcd980d3973daacec13a025b6f485731d7df7e" translate="yes" xml:space="preserve">
          <source>Difference between Thread and runnable
.If  we are creating Thread using Thread class then Number of thread equal to number of object we created  .
If we are creating thread  by implementing the runnable interface then we can use single object for creating multiple thread.So single object is shared by multiple Thread.So it will take less memory</source>
          <target state="translated">Diferencia entre Hilo y ejecutable.Si estamos creando un Hilo usando la clase Hilo,entonces el número de hilo es igual al número de objetos que hemos creado.Si estamos creando un hilo mediante la implementación de la interfaz ejecutable,entonces podemos utilizar un solo objeto para crear varios hilos.</target>
        </trans-unit>
        <trans-unit id="a7c47f8b2ce8dea4b0409949c8129ad4c6aedfc2" translate="yes" xml:space="preserve">
          <source>Edit: This originally said &quot;Implementing an interface requires less resources.&quot; as well, but you need to create a new Thread instance either way, so this was wrong.</source>
          <target state="translated">Edición:Esto originalmente decía &quot;Implementar una interfaz requiere menos recursos&quot; también,pero necesitas crear una nueva instancia de Thread de cualquier manera,así que esto estaba mal.</target>
        </trans-unit>
        <trans-unit id="de2f5151cd39d59bda01ca84b744dabe74b89f7a" translate="yes" xml:space="preserve">
          <source>Even if you don't need any of this now, you may in the future. Since there is no benefit to overriding Thread, Runnable is a better solution.</source>
          <target state="translated">Aunque no necesites nada de esto ahora,puede que en el futuro.Ya que no hay beneficio en anular el Hilo,Runnable es una mejor solución.</target>
        </trans-unit>
        <trans-unit id="db728c13fa2fea56c5941384a6f027e4f3d57e52" translate="yes" xml:space="preserve">
          <source>Everyone here seems to think that implementing Runnable is the way to go and I don't really disagree with them but there is also a case for extending Thread in my opinion, in fact you have sort of demonstrated it in your code.</source>
          <target state="translated">Todo el mundo aquí parece pensar que la implementación de Runnable es el camino a seguir y no estoy realmente en desacuerdo con ellos,pero también hay un caso de extensión de Thread en mi opinión,de hecho lo has demostrado en tu código.</target>
        </trans-unit>
        <trans-unit id="e327a40b4b2ef97c716273219e936462bc2ac116" translate="yes" xml:space="preserve">
          <source>ExecutorService vs Casual Thread Spawner</source>
          <target state="translated">ExecutorService vs Casual Thread Spawner</target>
        </trans-unit>
        <trans-unit id="873e43ca5da7a236c58074640430b89a7c6e98c1" translate="yes" xml:space="preserve">
          <source>Extends binds two class files very closely and can cause some pretty hard to deal with code.</source>
          <target state="translated">Extends une dos archivos de clase muy estrechamente y puede causar algunos bastante difíciles de tratar con el código.</target>
        </trans-unit>
        <trans-unit id="72c557fcc430efa3db736e13c6d814068b4763ce" translate="yes" xml:space="preserve">
          <source>For Example: If you create an applet then it must extends Applet class so here the only way to create thread is by implementing Runnable interface</source>
          <target state="translated">Por ejemplo:Si creas un applet entonces debe extender la clase Applet así que aquí la única manera de crear un hilo es implementando la interfaz Runnable</target>
        </trans-unit>
        <trans-unit id="4e0db58a3276b57e311061e331b51a908b0fdec0" translate="yes" xml:space="preserve">
          <source>For Multi-threading we need two things:</source>
          <target state="translated">Para el multi-hilo necesitamos dos cosas:</target>
        </trans-unit>
        <trans-unit id="ad0dd8459fdd20171f50f23ce34e179caa3828b9" translate="yes" xml:space="preserve">
          <source>For example, suppose there are two threads, &lt;strong&gt;thread1&lt;/strong&gt; puts an integer in an array and &lt;strong&gt;thread2&lt;/strong&gt; takes integers from the array when the array is filled up. Notice that in order for &lt;strong&gt;thread2&lt;/strong&gt; to work it needs to know the state of array, whether &lt;strong&gt;thread1&lt;/strong&gt; has filled it up or not.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo, supongamos que hay dos subprocesos, el &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;subproceso1&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; pone un n&amp;uacute;mero entero en una matriz y el &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;subproceso2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; toma enteros de la matriz cuando se llena la matriz. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que para que &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;thread2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; funcione, necesita saber el estado de la matriz, ya sea que &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;thread1 lo&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; haya llenado o no.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="027fc99eb14610b99442ecf66068ebe52172ab64" translate="yes" xml:space="preserve">
          <source>From what time I've spent with threads in Java, I've found these two ways to write threads:</source>
          <target state="translated">Desde el tiempo que he pasado con los hilos en Java,he encontrado estas dos maneras de escribir hilos:</target>
        </trans-unit>
        <trans-unit id="324d3a5aa1c2638d183de831f76dc3e117b5a876" translate="yes" xml:space="preserve">
          <source>Generally you don't need to override Thread behaviour. So &lt;strong&gt;implements Runnable&lt;/strong&gt; is preferred for most of the times.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo general, no es necesario anular el comportamiento del subproceso. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo tanto, los &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;implementos Runnable&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se prefieren la mayor&amp;iacute;a de las veces.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a1e0bf4d5d4a889893d51a1a1f5f32748103403" translate="yes" xml:space="preserve">
          <source>Have a look at this SE Question:</source>
          <target state="translated">Echa un vistazo a esta pregunta del SE:</target>
        </trans-unit>
        <trans-unit id="4a92b6fe7283d99b84d9efb43b57c328c5537197" translate="yes" xml:space="preserve">
          <source>Having said that you could of course also do the above in a generic way by creating an extension of the thread class which sets its name to a stack trace of its creation call and then use that with your Runnable implementations instead of the standard java Thread class (see below) but in addition to the stack trace there might be more context specific information that would be useful in the thread name for debugging (a reference to one of many queues or sockets it could processing for example in which case you might prefer to extend Thread specifically for that case so that you can have the compiler force you (or others using your libraries) to pass in certain info (e.g. the queue/socket in question) for use in the name).</source>
          <target state="translated">Dicho esto,por supuesto,también se podría hacer lo anterior de forma genérica creando una extensión de la clase de hilo que establezca su nombre a un rastro de pila de su llamada de creación y luego utilizarlo con sus implementaciones Runnable en lugar de la clase estándar de hilo java (véase más abajo),pero además del rastro de pila podría haber más información específica del contexto que sería útil en el nombre del hilo para la depuración (una referencia a una de las muchas colas o sockets que podría procesar,por ejemplo,en cuyo caso tal vez prefiera extender el hilo específicamente para ese caso de modo que el compilador le obligue a usted (o a otros que utilicen sus bibliotecas)a pasar cierta información (e.g.el queuesocket en cuestión)para su uso en el nombre).</target>
        </trans-unit>
        <trans-unit id="08c2a23ab0fb11ecbf096de100a93e5d6df911bf" translate="yes" xml:space="preserve">
          <source>Here's an example of the generic thread with the calling stack trace as its name:</source>
          <target state="translated">Aquí hay un ejemplo del hilo genérico con el rastro de la pila de llamadas como su nombre:</target>
        </trans-unit>
        <trans-unit id="85c6fc0c437b526c125958f58dea7f0a6304bc9d" translate="yes" xml:space="preserve">
          <source>I find it is most useful to use Runnable for all the reasons mentioned, but sometimes I like to extend Thread so I can create my own thread stopping method and call it directly on the thread I have created.</source>
          <target state="translated">Encuentro muy útil el uso de Runnable por todas las razones mencionadas,pero a veces me gusta extender Thread para poder crear mi propio método de detención de hilos y llamarlo directamente sobre el hilo que he creado.</target>
        </trans-unit>
        <trans-unit id="65e5522b9e1d0900d5cb4c27b63d9563294a2ca8" translate="yes" xml:space="preserve">
          <source>I hope this will help!</source>
          <target state="translated">¡Espero que esto ayude!</target>
        </trans-unit>
        <trans-unit id="ac79c883e4ced0595548e43e7b91c190d465117f" translate="yes" xml:space="preserve">
          <source>I would say there is a third way:</source>
          <target state="translated">Yo diría que hay una tercera manera:</target>
        </trans-unit>
        <trans-unit id="a5b37ac8da09cf214b5f808911594fe6e0322540" translate="yes" xml:space="preserve">
          <source>I would say, there is only one way for multi-threading with two steps. Let me make my point.</source>
          <target state="translated">Diría que sólo hay una forma de hacer multihilo con dos pasos.Déjenme aclarar mi punto.</target>
        </trans-unit>
        <trans-unit id="0ffd9431249fb87edb68e5ca0e5eadd333491c1d" translate="yes" xml:space="preserve">
          <source>I'm not an expert, but I can think of one reason to implement Runnable instead of extend Thread: Java only supports single inheritance, so you can only extend one class.</source>
          <target state="translated">No soy un experto,pero se me ocurre una razón para implementar Runnable en lugar de extender Thread:Java sólo soporta una herencia única,por lo que sólo se puede extender una clase.</target>
        </trans-unit>
        <trans-unit id="3d18427aa094ab6f29978b9fefeb6265b1bc5ba5" translate="yes" xml:space="preserve">
          <source>Ideally you should never extend the Thread class; the &lt;code&gt;Thread&lt;/code&gt; class should be made &lt;code&gt;final&lt;/code&gt;.
At least its methods like &lt;code&gt;thread.getId()&lt;/code&gt;. 
See &lt;a href=&quot;http://jsr166-concurrency.10961.n7.nabble.com/RRWL-with-bad-Thread-getId-implementations-tc9754.html&quot;&gt;this&lt;/a&gt; discussion for a bug related to extending &lt;code&gt;Thread&lt;/code&gt;s.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Idealmente, nunca debe extender la clase Thread; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;clase de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; debe ser &lt;/font&gt;&lt;/font&gt; &lt;code&gt;final&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Al menos sus m&amp;eacute;todos como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;thread.getId()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vea &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsr166-concurrency.10961.n7.nabble.com/RRWL-with-bad-Thread-getId-implementations-tc9754.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;esta&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; discusi&amp;oacute;n para un error relacionado con la extensi&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; s.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f44e3a1488fb5cf36acdf48aa499bffe3b7c9eea" translate="yes" xml:space="preserve">
          <source>If I am not wrong, it's more or less similar to</source>
          <target state="translated">Si no me equivoco,es más o menos similar a</target>
        </trans-unit>
        <trans-unit id="fc4df36da4c1e2f7c07b23a2de59954222a5db54" translate="yes" xml:space="preserve">
          <source>If You are already extending another class</source>
          <target state="translated">Si ya está extendiendo otra clase</target>
        </trans-unit>
        <trans-unit id="6342a47eeea1ceaf847f21eddecb3fe8da59af40" translate="yes" xml:space="preserve">
          <source>If the language you use supports partial classes or multiple inheritance, then you can segregate each cause in its own super class, but it boils down to the same as composing the two objects, since their feature sets don't overlap. That's for the theory.</source>
          <target state="translated">Si el lenguaje que usas soporta clases parciales o herencia múltiple,entonces puedes segregar cada causa en su propia superclase,pero se reduce a lo mismo que componer los dos objetos,ya que sus conjuntos de características no se superponen.Eso es para la teoría.</target>
        </trans-unit>
        <trans-unit id="b122904374814680e0c87c8ebb323dabf5fab2d4" translate="yes" xml:space="preserve">
          <source>If this is the whole purpose, then where do I see the need of a specialized Thread. This can be accomplished by picking up a RAW Thread from the System's Thread Pool and assigning it our task (may be an instance of our class) and that is it.</source>
          <target state="translated">Si este es el propósito,entonces,¿dónde veo la necesidad de un Hilo especializado.Esto se puede lograr recogiendo un Hilo Crudo del Fondo de Hilos del Sistema y asignándole nuestra tarea (puede ser una instancia de nuestra clase)y eso es todo.</target>
        </trans-unit>
        <trans-unit id="ef11e5e55d83ab9d5ce38a2d8df28f84ce13289e" translate="yes" xml:space="preserve">
          <source>If you are executing a fire and forget command</source>
          <target state="translated">Si estás ejecutando un incendio y olvidas la orden</target>
        </trans-unit>
        <trans-unit id="a150e16e712299b680363d48a4671c90d3457795" translate="yes" xml:space="preserve">
          <source>If you are interested in this question, you might be also interested in the &lt;a href=&quot;https://stackoverflow.com/questions/141284/the-difference-between-the-runnable-and-callable-interfaces-in-java&quot;&gt;difference between Callable and Runnable&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si est&amp;aacute; interesado en esta pregunta, tambi&amp;eacute;n podr&amp;iacute;a estar interesado en la &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/141284/the-difference-between-the-runnable-and-callable-interfaces-in-java&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;diferencia entre Callable y Runnable&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95cb8c47af9fbbf31a40163a2329471f34c2e617" translate="yes" xml:space="preserve">
          <source>If you bundle them together in one implementation, you give the resulting object two &lt;em&gt;unrelated&lt;/em&gt; causes of change:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si los agrupa en una implementaci&amp;oacute;n, le da al objeto resultante dos &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;causas de cambio &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no relacionadas&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f39c6fd9d3033b1b085b0b29ced0065c77ca5abd" translate="yes" xml:space="preserve">
          <source>If you develop your task as Runnable, you have &lt;strong&gt;all flexibility how to use it now and in the future&lt;/strong&gt;. You can have it run concurrently via Executors but also via Thread. And you still could also use/call it non-concurrently within the same thread just as any other ordinary type/object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si desarrolla su tarea como Runnable, tiene &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;toda la flexibilidad de c&amp;oacute;mo usarla ahora y en el futuro&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede ejecutarlo simult&amp;aacute;neamente a trav&amp;eacute;s de Ejecutores, pero tambi&amp;eacute;n a trav&amp;eacute;s de Thread. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Y a&amp;uacute;n podr&amp;iacute;a usarlo / llamarlo de manera no simult&amp;aacute;nea dentro del mismo hilo al igual que cualquier otro tipo / objeto ordinario.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b06233f340315d59abea0994a2ed12b611e3a1c" translate="yes" xml:space="preserve">
          <source>If you don't have to extend Thread class and modify Thread API default implementation</source>
          <target state="translated">Si no tienes que extender la clase de hilo y modificar la implementación por defecto de la API del hilo</target>
        </trans-unit>
        <trans-unit id="22ee7e19c4800fd711a27680a44778c07383aeee" translate="yes" xml:space="preserve">
          <source>If you don't need a particular result, consider using constructions of the form:</source>
          <target state="translated">Si no necesita un resultado en particular,considere el uso de construcciones de la forma:</target>
        </trans-unit>
        <trans-unit id="759d8c161af67860e42c2161b3f08627956f146f" translate="yes" xml:space="preserve">
          <source>If you extend Thread, you're basically preventing your logic to be executed by any other thread than 'this'. If you only want &lt;em&gt;some&lt;/em&gt; thread to execute your logic, it's better to just implement Runnable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si extiende Thread, b&amp;aacute;sicamente est&amp;aacute; evitando que su l&amp;oacute;gica sea ejecutada por cualquier otro hilo que no sea 'this'. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si solo desea que &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;un&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; hilo ejecute su l&amp;oacute;gica, es mejor implementar Runnable.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="60811860db91d34de647218919147c3c05adb03c" translate="yes" xml:space="preserve">
          <source>If you extend thread then the action you're doing is always going to be in a thread.  However, if you implement &lt;code&gt;Runnable&lt;/code&gt; it doesn't have to be.  You can run it in a thread, or pass it to some kind of executor service, or just pass it around as a task within a single threaded application (maybe to be run at a later time, but within the same thread).  The options are a lot more open if you just use &lt;code&gt;Runnable&lt;/code&gt; than if you bind yourself to &lt;code&gt;Thread&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si extiende el hilo, entonces la acci&amp;oacute;n que est&amp;aacute; haciendo siempre estar&amp;aacute; en un hilo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, si implementa &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , no tiene que ser as&amp;iacute;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede ejecutarlo en un subproceso, o pasarlo a alg&amp;uacute;n tipo de servicio ejecutor, o simplemente pasarlo como una tarea dentro de una sola aplicaci&amp;oacute;n con subprocesos (tal vez se ejecute en un momento posterior, pero dentro del mismo subproceso). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las opciones son mucho m&amp;aacute;s abiertas si solo usas &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que si te &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;unes&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="219f8fa29339e9ae2c73575ff9e7a44eb262ccff" translate="yes" xml:space="preserve">
          <source>If you have to override any of these &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html&quot;&gt;Thread&lt;/a&gt; methods as listed in oracle documentation page</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si tiene que anular cualquiera de estos &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todos de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;subprocesos&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; como se enumeran en la p&amp;aacute;gina de documentaci&amp;oacute;n de Oracle&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31e4b9a37e12329f07844fa1cd37f135389dc5c9" translate="yes" xml:space="preserve">
          <source>If you implement Runnable then the class that implements Runnable has no control over the thread name, it is the calling code that can set the thread name, like so:</source>
          <target state="translated">Si implementas Runnable entonces la clase que implementa Runnable no tiene control sobre el nombre del hilo,es el código de llamada el que puede establecer el nombre del hilo,así:</target>
        </trans-unit>
        <trans-unit id="13165552b81af3b7fdc922c6439175665b42c4cc" translate="yes" xml:space="preserve">
          <source>If you want to implements or extends any other class then &lt;code&gt;Runnable&lt;/code&gt; interface is most preferable, otherwise, if you do not want any other class to extend or implement then &lt;code&gt;Thread&lt;/code&gt; class is preferable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si desea implementar o extender cualquier otra clase, la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;interfaz &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es m&amp;aacute;s preferible, de lo contrario, si no desea que ninguna otra clase extienda o implemente, entonces &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;es preferible la clase &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="673d5926ca53942d7d830b2c33d0112b5231ecb4" translate="yes" xml:space="preserve">
          <source>If you'd like to try using a thread pool, the code fragment above would become something like the following (using the &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool%28%29&quot;&gt;Executors.newCachedThreadPool()&lt;/a&gt; factory method):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si desea intentar usar un grupo de subprocesos, el fragmento de c&amp;oacute;digo anterior se convertir&amp;iacute;a en algo similar a lo siguiente (usando el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo de f&amp;aacute;brica &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool%28%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Executors.newCachedThreadPool ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3f727775939919c6a445d2a7f83a71083b2d3a1b" translate="yes" xml:space="preserve">
          <source>Implementing &lt;code&gt;Runnable&lt;/code&gt; lets you to have this flexibility to share the object whereas &lt;code&gt;extends Thread&lt;/code&gt; makes you to create new objects for each threads therefore any update that is done by thread1 is lost to thread2.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La implementaci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; le&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; permite tener esta flexibilidad para compartir el objeto, mientras que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; le permite crear nuevos objetos para cada subproceso, por lo tanto, cualquier actualizaci&amp;oacute;n realizada por thread1 se pierde en thread2.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="452b22406c5a2c292e1d0351d7ee4d811df4b494" translate="yes" xml:space="preserve">
          <source>In &lt;em&gt;practical&lt;/em&gt; terms, it means you can implement &lt;code&gt;Runnable&lt;/code&gt; and extend from another class as well.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;t&amp;eacute;rminos &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;pr&amp;aacute;cticos&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , significa que puede implementar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y extenderse desde otra clase tambi&amp;eacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a917cf04e57360b680a976afe6c96e361e3d6f8" translate="yes" xml:space="preserve">
          <source>In Object-oriented programming, extending a class generally means, adding new functionality, and modifying or improving behaviors. If we are not making any modification on Thread then use Runnable interface instead.</source>
          <target state="translated">En la programación orientada a objetos,extender una clase generalmente significa,agregar nuevas funciones y modificar o mejorar los comportamientos.Si no estamos haciendo ninguna modificación en el Thread,entonces usa la interfaz Runnable en su lugar.</target>
        </trans-unit>
        <trans-unit id="073b55d5a0e2df99685e6167d705af287162c7a1" translate="yes" xml:space="preserve">
          <source>In general, I would recommend using something like &lt;code&gt;Runnable&lt;/code&gt; rather than &lt;code&gt;Thread&lt;/code&gt; because it allows you to keep your work only loosely coupled with your choice of concurrency.  For example, if you use a &lt;code&gt;Runnable&lt;/code&gt; and decide later on that this doesn't in fact require it's own &lt;code&gt;Thread&lt;/code&gt;, you can just call threadA.run().</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En general, recomendar&amp;iacute;a usar algo como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; en&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; lugar de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ya que le permite mantener su trabajo solo sin apretarlo con su elecci&amp;oacute;n de concurrencia. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo, si usa un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y decide m&amp;aacute;s adelante que esto no requiere su propio &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , puede llamar a threadA.run ().&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bce6d6dd7d4b58843b88abe31ec528c6228faba4" translate="yes" xml:space="preserve">
          <source>In most cases, the Runnable interface should be used if you are only planning to override the &lt;code&gt;run()&lt;/code&gt; method and no other Thread methods. This is important because classes should not be subclassed unless the programmer intends on modifying or enhancing the fundamental behavior of the class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En la mayor&amp;iacute;a de los casos, la interfaz Runnable debe usarse si solo planea anular el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;run()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y ning&amp;uacute;n otro m&amp;eacute;todo Thread. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto es importante porque las clases no deben subclasificarse a menos que el programador tenga la intenci&amp;oacute;n de modificar o mejorar el comportamiento fundamental de la clase.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49f3b20c1e64e8c4a79f4f7894f0ca27d29de597" translate="yes" xml:space="preserve">
          <source>In other words, implementing &lt;code&gt;Runnable&lt;/code&gt; will work in scenarios where your class extends a class other than &lt;code&gt;Thread&lt;/code&gt;. Java does not support multiple inheritance. Also, extending &lt;code&gt;Thread&lt;/code&gt; will not be possible when using some of the high-level thread management APIs. The only scenario where extending &lt;code&gt;Thread&lt;/code&gt; is preferable is in a small application that won't be subject to updates in future. It is almost always better to implement &lt;code&gt;Runnable&lt;/code&gt; as it is more flexible as your project grows. A design change won't have a major impact as you can implement many interfaces in java, but only extend one class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En otras palabras, la implementaci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; funcionar&amp;aacute; en escenarios en los que su clase ampl&amp;iacute;a una clase que no sea &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Java no admite herencia m&amp;uacute;ltiple. Adem&amp;aacute;s, extender &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no ser&amp;aacute; posible cuando se utilicen algunas de las API de administraci&amp;oacute;n de subprocesos de alto nivel. El &amp;uacute;nico escenario en el que &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;es preferible &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;extender &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es en una peque&amp;ntilde;a aplicaci&amp;oacute;n que no estar&amp;aacute; sujeta a actualizaciones en el futuro. Casi siempre es mejor implementar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ya que es m&amp;aacute;s flexible a medida que su proyecto crece. Un cambio de dise&amp;ntilde;o no tendr&amp;aacute; un impacto importante, ya que puede implementar muchas interfaces en Java, pero solo extender una clase.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a06c6d743450813788e9cb962ba45b9527d1353e" translate="yes" xml:space="preserve">
          <source>In practice, generally speaking, a programme does not need to carry more complexity than necessary. If you have one thread working on a specific task, without ever changing that task, there is probably no point in making the tasks separate classes, and your code remains simpler.</source>
          <target state="translated">En la práctica,en términos generales,un programa no tiene por qué ser más complejo de lo necesario.Si se tiene un hilo de trabajo en una tarea específica,sin cambiar nunca esa tarea,probablemente no tiene sentido hacer que las tareas sean clases separadas,y el código sigue siendo más simple.</target>
        </trans-unit>
        <trans-unit id="d75b75d2d148a11490f00c2bfaf95f291215fdf5" translate="yes" xml:space="preserve">
          <source>In the Runnable interface approach, only one instance of a class is being created and it has been shared by different threads. So the value of counter is incremented for each and every thread access.</source>
          <target state="translated">En el enfoque de la interfaz Runnable,sólo se crea una instancia de una clase y ha sido compartida por diferentes hilos.Así que el valor del contador se incrementa para todos y cada uno de los accesos de los hilos.</target>
        </trans-unit>
        <trans-unit id="2e0dbceaef5b924d0e8913609ad6fc3576fc58c5" translate="yes" xml:space="preserve">
          <source>In the context of &lt;em&gt;Java&lt;/em&gt;, since the facility is &lt;strong&gt;already there&lt;/strong&gt;, it is probably easier to start directly with stand alone &lt;code&gt;Runnable&lt;/code&gt; classes, and pass their instances to &lt;code&gt;Thread&lt;/code&gt; (or &lt;code&gt;Executor&lt;/code&gt;) instances. Once &lt;em&gt;used&lt;/em&gt; to that pattern, it is not harder to use (or even read) than the simple runnable thread case.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En el contexto de &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , dado que la instalaci&amp;oacute;n &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ya&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; est&amp;aacute; &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;all&amp;iacute;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , probablemente sea m&amp;aacute;s f&amp;aacute;cil comenzar directamente con &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;clases &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; independientes &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;y pasar sus instancias a instancias de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una vez &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;acostumbrado&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a ese patr&amp;oacute;n, no es m&amp;aacute;s dif&amp;iacute;cil de usar (o incluso leer) que el caso de subproceso ejecutable simple.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b57f0fd65a56e6310fbd2e370e043b419ea1c2d" translate="yes" xml:space="preserve">
          <source>In the same light, &lt;em&gt;if you don't need&lt;/em&gt; to &lt;strong&gt;inherit&lt;/strong&gt; thread methods, you can do without that &lt;strong&gt;overhead&lt;/strong&gt; by using Runnable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En la misma luz, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;si no es necesario&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;heredar los&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; m&amp;eacute;todos de rosca, se puede hacer sin que &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;sobrecarga&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; utilizando Ejecutable.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31dbde8d6d470fc93d0c6d746cadb9b08d447951" translate="yes" xml:space="preserve">
          <source>Inheriting all Thread methods are additional overhead just for representing a Task which can be done easily with Runnable.</source>
          <target state="translated">Heredar todos los métodos de Hilo es una sobrecarga adicional sólo por representar una tarea que se puede hacer fácilmente con Runnable.</target>
        </trans-unit>
        <trans-unit id="df0990131adc5c941ff4ae4bbd6a8a50be484743" translate="yes" xml:space="preserve">
          <source>Instantiating an interface gives a cleaner separation between your code and the implementation of threads, so I'd prefer to implement Runnable in this case.</source>
          <target state="translated">Instanciar una interfaz da una separación más limpia entre tu código y la implementación de los hilos,así que preferiría implementar Runnable en este caso.</target>
        </trans-unit>
        <trans-unit id="65f261489cb14059bf817628e87a457e1819026d" translate="yes" xml:space="preserve">
          <source>Is there any significant difference in these two blocks of code ?</source>
          <target state="translated">¿Hay alguna diferencia significativa en estos dos bloques de código?</target>
        </trans-unit>
        <trans-unit id="75d953bf184515f7db37b042665869e721abb6ca" translate="yes" xml:space="preserve">
          <source>It is good design to separate domain logic from technical means, in that sense it is better to have a Runnable task &lt;strong&gt;isolating&lt;/strong&gt; your &lt;strong&gt;task from&lt;/strong&gt; your &lt;strong&gt;runner&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es un buen dise&amp;ntilde;o separar la l&amp;oacute;gica del dominio de los medios t&amp;eacute;cnicos, en ese sentido es mejor tener una tarea Ejecutable que &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;a&amp;iacute;sle&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; su &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tarea de&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; su &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;corredor&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f74b9bbd8cab7122e230a1598d5c5ced2960aa7" translate="yes" xml:space="preserve">
          <source>Java designer recognizes this and that's why Executors accept Runnable as Task and they have worker thread which executes those task.</source>
          <target state="translated">El diseñador de Java reconoce esto y es por eso que los ejecutores aceptan Runnable como tarea y tienen un hilo de trabajo que ejecuta esa tarea.</target>
        </trans-unit>
        <trans-unit id="4447dcd2d3436db5024494dcd6f613fbd89e3c36" translate="yes" xml:space="preserve">
          <source>Java does not support multiple inheritence so if you extends Thread class then no other class will be extended.</source>
          <target state="translated">Java no soporta la herencia múltiple,por lo que si se extiende la clase Thread,no se extenderá ninguna otra clase.</target>
        </trans-unit>
        <trans-unit id="913e8e6cdbb4c34a3e226960b7e54039100ca3cd" translate="yes" xml:space="preserve">
          <source>Java doesn't support multiple inheritances, which means you can only extend one class in Java so once you extended Thread class you lost your chance and cannot extend or inherit another class in Java.</source>
          <target state="translated">Java no soporta múltiples herencias,lo que significa que sólo puedes extender una clase en Java,por lo que una vez que extendiste la clase Thread perdiste tu oportunidad y no puedes extender o heredar otra clase en Java.</target>
        </trans-unit>
        <trans-unit id="5d044bcb58e5016154e1cad7fca27ce7ed4fc5e8" translate="yes" xml:space="preserve">
          <source>Leaves more flexibility for the
Runnable implementation to extend
another class</source>
          <target state="translated">Deja más flexibilidad para que la implementación de Runnable extienda otra clase</target>
        </trans-unit>
        <trans-unit id="98425613abed9e740647c2930f1763994c890654" translate="yes" xml:space="preserve">
          <source>Maybe this is influenced a bit by my recent heavy usage of Javascript and Actionscript 3, but this way your class doesn't need to implement a pretty vague interface like &lt;code&gt;Runnable&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tal vez esto est&amp;eacute; influenciado un poco por mi uso intensivo reciente de Javascript y Actionscript 3, pero de esta manera su clase no necesita implementar una interfaz bastante vaga como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="21293106cdf6ab6f3aba39c897fb3eb39df7ff25" translate="yes" xml:space="preserve">
          <source>Moral of the story:</source>
          <target state="translated">La moraleja de la historia:</target>
        </trans-unit>
        <trans-unit id="b09331c5ece2c70336bb710a450b8995b6bbf69c" translate="yes" xml:space="preserve">
          <source>On a different note, using advanced &lt;code&gt;ExecutorService&lt;/code&gt; or &lt;code&gt;ThreadPoolExecutorService&lt;/code&gt; API provides more flexibility and control.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En una nota diferente, el uso de la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;API &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;avanzada &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ExecutorService&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ThreadPoolExecutorService&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; proporciona m&amp;aacute;s flexibilidad y control.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b72999a34ff38fba9e9f0fc91f3c9b60b6ccd67d" translate="yes" xml:space="preserve">
          <source>One reason you'd want to implement an interface rather than extend a base class is that you are already extending some other class. You can only extend one class, but you can implement any number of interfaces.</source>
          <target state="translated">Una de las razones por las que querrías implementar una interfaz en lugar de extender una clase base es que ya estás extendiendo alguna otra clase.Sólo puedes extender una clase,pero puedes implementar cualquier número de interfaces.</target>
        </trans-unit>
        <trans-unit id="e24c9399fb337a187f29d1b874c7dc1426f3c801" translate="yes" xml:space="preserve">
          <source>One thing that I'm surprised hasn't been mentioned yet is that implementing &lt;code&gt;Runnable&lt;/code&gt; makes your class more flexible.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una cosa que me sorprende a&amp;uacute;n no se ha mencionado es que la implementaci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; hace que su clase sea m&amp;aacute;s flexible.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e75803398e702c291b3769ca1fef0d0192f61423" translate="yes" xml:space="preserve">
          <source>Or rather it should be read as:</source>
          <target state="translated">O más bien debería ser leído como:</target>
        </trans-unit>
        <trans-unit id="6642beda0a630021ef91d010a61f8536e7c8420b" translate="yes" xml:space="preserve">
          <source>Or, with &lt;code&gt;extends Thread&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;O, con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b4f97ddaf0f12b6b4b1fe92d9e1887b45c3bdf8d" translate="yes" xml:space="preserve">
          <source>Please see  &lt;a href=&quot;http://pastebin.com/BjKNNs2G&quot;&gt;http://pastebin.com/BjKNNs2G&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Consulte &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://pastebin.com/BjKNNs2G&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://pastebin.com/BjKNNs2G&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aacd16ba0e272c55cc554ff9a6a907b81af5b8aa" translate="yes" xml:space="preserve">
          <source>Prefer &quot;&lt;strong&gt;&lt;em&gt;extends Thread&lt;/em&gt;&lt;/strong&gt;&quot; :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Prefiere &quot; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;hilo extendido&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b4cfb91a85e37aa98063528cdc4477e8ecf7747" translate="yes" xml:space="preserve">
          <source>Prefer &lt;strong&gt;&lt;em&gt;implements Runnable&lt;/em&gt;&lt;/strong&gt; :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Prefiere &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;implementos Runnable&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a503247ab3ac13abed963a23dc3f49ed043cfe87" translate="yes" xml:space="preserve">
          <source>Runnable because:</source>
          <target state="translated">Corre porque:</target>
        </trans-unit>
        <trans-unit id="96c8e4642e9d898ac2b452c9a7f1abc772be5375" translate="yes" xml:space="preserve">
          <source>Runnable interface represents a Task which can be executed by either plain Thread or Executors or any other means. so logical separation of Task as Runnable than Thread is a good design decision.</source>
          <target state="translated">La interfaz ejecutable representa una Tarea que puede ser ejecutada por un Hilo simple o por Ejecutores o cualquier otro medio.Por lo tanto,la separación lógica de la Tarea como Ejecutable que Hilo es una buena decisión de diseño.</target>
        </trans-unit>
        <trans-unit id="31a1077c4c1517e991c6895311d2a20b0384f711" translate="yes" xml:space="preserve">
          <source>Separates the code from
execution</source>
          <target state="translated">Separa el código de la ejecución</target>
        </trans-unit>
        <trans-unit id="3c0e7a1b5e34fd0115bf7d439c7677c9d16459dd" translate="yes" xml:space="preserve">
          <source>Separating task as Runnable means we can reuse the task and also has the liberty to execute it from different means. since you can not restart a Thread once it completes. again Runnable vs Thread for task, Runnable is winner.</source>
          <target state="translated">Separar la tarea como Runnable significa que podemos reutilizar la tarea y también tiene la libertad de ejecutarla de diferentes maneras.ya que no se puede reiniciar un Hilo una vez que se completa.de nuevo Runnable vs Hilo para la tarea,Runnable es el ganador.</target>
        </trans-unit>
        <trans-unit id="410028c9b92c6e44e7a330f143b936d87c5fd5c1" translate="yes" xml:space="preserve">
          <source>Separating the Thread class from the Runnable implementation also avoids potential synchronization problems between the thread and the run() method. A separate Runnable generally gives greater flexibility in the way that runnable code is referenced and executed.</source>
          <target state="translated">Separar la clase Thread de la implementación Runnable también evita posibles problemas de sincronización entre el hilo y el método run().Un Runnable separado generalmente da mayor flexibilidad en la forma en que el código runnable es referenciado y ejecutado.</target>
        </trans-unit>
        <trans-unit id="0daa17e77c542f541e21348f4cf8d158b7678ed4" translate="yes" xml:space="preserve">
          <source>Since this is a very popular topic and the good answers are spread all over and dealt with in great depth, I felt it is justifiable to compile the good answers from the others into a more concise form, so newcomers have an easy overview upfront:</source>
          <target state="translated">Como este es un tema muy popular y las buenas respuestas están esparcidas por todas partes y se tratan con gran profundidad,me pareció justificado recopilar las buenas respuestas de los demás en una forma más concisa,para que los recién llegados tengan una visión general fácil por adelantado:</target>
        </trans-unit>
        <trans-unit id="5b75e54af566c3e4cac465449dcdd22070551de1" translate="yes" xml:space="preserve">
          <source>So depending upon the requirement if our data is not senstive. So It can be shared between multiple Thread we can used Runnable interface.</source>
          <target state="translated">Así que dependiendo del requisito si nuestros datos no son sensibles.Así que puede ser compartido entre múltiples Hilos podemos usar la interfaz Runnable.</target>
        </trans-unit>
        <trans-unit id="cc2f18f715f887a38db2fac1b1241ec481846a98" translate="yes" xml:space="preserve">
          <source>So let us obey the OOPs concept and write a class of the type we need. There are many ways to do things, doing it in the right way matters.</source>
          <target state="translated">Así que obedezcamos el concepto de OOPs y escribamos una clase del tipo que necesitamos.Hay muchas maneras de hacer las cosas,hacerlo de la manera correcta importa.</target>
        </trans-unit>
        <trans-unit id="35d398a4b9b18fdc7eca96bc37d83626d17c05ac" translate="yes" xml:space="preserve">
          <source>So technically and theoretically  both of them is necessary to start a thread, one will &lt;strong&gt;run&lt;/strong&gt; and one will &lt;strong&gt;make it run&lt;/strong&gt; (Like &lt;strong&gt;&lt;code&gt;Wheel and Engine&lt;/code&gt;&lt;/strong&gt; of motor vehicle).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, t&amp;eacute;cnica y te&amp;oacute;ricamente, ambos son necesarios para iniciar un hilo, uno &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;correr&amp;aacute;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y otro lo &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;har&amp;aacute; correr&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (como la &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;Wheel and Engine&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; del veh&amp;iacute;culo de motor).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b545a2434898cfb8782ccf0a8d7e029fdb34da3" translate="yes" xml:space="preserve">
          <source>So the class &lt;code&gt;MyRunnable&lt;/code&gt; is nothing but a ordinary class with a &lt;code&gt;void run&lt;/code&gt; method.
And it's objects will be some ordinary objects with only a method &lt;code&gt;run&lt;/code&gt; which will execute normally when called.  (unless we pass the object in a thread).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, la clase &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyRunnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no es m&amp;aacute;s que una clase ordinaria con un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;void run&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Y es objetos ser&amp;aacute;n algunos de los objetos ordinarios, con s&amp;oacute;lo un m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;run&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que ejecutar&amp;aacute; normalmente cuando se le llama. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(a menos que pasemos el objeto en un hilo).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b54d7f8050854b9eb5a81cddc9af26dfd4b0ba6" translate="yes" xml:space="preserve">
          <source>So, if we replace their &lt;code&gt;runnable&lt;/code&gt; with your &lt;code&gt;threadA&lt;/code&gt;, we get the following:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, si reemplazamos su &lt;/font&gt;&lt;/font&gt; &lt;code&gt;runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; con su &lt;/font&gt;&lt;/font&gt; &lt;code&gt;threadA&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , obtenemos lo siguiente:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6400be6697fb840195678151fd7d93ac9d86eebe" translate="yes" xml:space="preserve">
          <source>Something That can start a new Thread (Thread).</source>
          <target state="translated">Algo que puede iniciar un nuevo Hilo (Hilo).</target>
        </trans-unit>
        <trans-unit id="fe268f9a806c7a97d6d78b294bdf3e80f71c44dd" translate="yes" xml:space="preserve">
          <source>Something that can run inside a Thread (Runnable).</source>
          <target state="translated">Algo que puede correr dentro de un Hilo (Corredizo).</target>
        </trans-unit>
        <trans-unit id="40efdd35ec1623fee9be759660a8c39ed3f0a7e0" translate="yes" xml:space="preserve">
          <source>That's the &lt;a href=&quot;http://en.wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;S&lt;/a&gt; of &lt;a href=&quot;http://en.wikipedia.org/wiki/SOLID_%28object-oriented_design%29&quot;&gt;SOLID&lt;/a&gt;: Single responsibility.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esa es la &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;S&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/SOLID_%28object-oriented_design%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;S&amp;Oacute;LIDO&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : responsabilidad &amp;uacute;nica.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad94796fb9f06c4d895e1c4991e7e6d3798f3795" translate="yes" xml:space="preserve">
          <source>That's why you can not start a thread with &lt;code&gt;MyRunnable&lt;/code&gt; you need to pass it to a instance of &lt;code&gt;Thread&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es por eso que no puede iniciar un hilo con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyRunnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , debe pasarlo a una instancia de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6aad014664026933196b93fc54db59834f16f791" translate="yes" xml:space="preserve">
          <source>The simplest explanation would be by implementing &lt;code&gt;Runnable&lt;/code&gt; we can assign the same object to multiple threads and each &lt;code&gt;Thread&lt;/code&gt; shares the same object states and behavior.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La explicaci&amp;oacute;n m&amp;aacute;s simple ser&amp;iacute;a mediante la implementaci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , podemos asignar el mismo objeto a m&amp;uacute;ltiples subprocesos y cada &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; comparte los mismos estados y comportamiento del objeto.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="df15d0f39c87e4500ca0893016552e9b7102d207" translate="yes" xml:space="preserve">
          <source>These are not only much shorter than your examples, but also come with many of the advantages stated in other answers of using &lt;code&gt;Runnable&lt;/code&gt; over &lt;code&gt;Thread&lt;/code&gt;, such as single responsibility and using composition because you're not specializing the thread's behaviour. This way also avoids creating an extra class if all you need is a &lt;code&gt;Runnable&lt;/code&gt; as you do in your examples.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Estos no solo son mucho m&amp;aacute;s cortos que sus ejemplos, sino que tambi&amp;eacute;n vienen con muchas de las ventajas establecidas en otras respuestas sobre el uso de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; sobre &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , como la responsabilidad individual y el uso de la composici&amp;oacute;n porque no se est&amp;aacute; especializando en el comportamiento del hilo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De esta forma tambi&amp;eacute;n evita crear una clase adicional si todo lo que necesita es un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; como lo hace en sus ejemplos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d96ffb505d8310ea93cce480e6ec5f788584907" translate="yes" xml:space="preserve">
          <source>These were some of the notable differences between Thread and Runnable in Java. If you know any other differences on Thread vs Runnable than please share it via comments. I personally use Runnable over Thread for this scenario and recommends to use Runnable or Callable interface based on your requirement.</source>
          <target state="translated">Estas fueron algunas de las notables diferencias entre Thread y Runnable en Java.Si conoces alguna otra diferencia en Thread vs Runnable,por favor compártela a través de los comentarios.Personalmente uso Runnable sobre Thread para este escenario y recomiendo el uso de la interfaz Runnable o Callable en base a tu requerimiento.</target>
        </trans-unit>
        <trans-unit id="1d5f2ab080cd9280dace153cfc8f38854287fa20" translate="yes" xml:space="preserve">
          <source>This is discussed in Oracle's &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/essential/concurrency/runthread.html&quot;&gt;Defining and Starting a Thread&lt;/a&gt; tutorial:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto se discute en el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tutorial &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/essential/concurrency/runthread.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Definici&amp;oacute;n e inicio de un hilo de&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Oracle &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c3cbfd343caf7d647d887a68ac7b8a4a7d179d6" translate="yes" xml:space="preserve">
          <source>This makes it also easier to &lt;strong&gt;separate&lt;/strong&gt; task-logic and concurrency &lt;strong&gt;aspects in&lt;/strong&gt; your &lt;strong&gt;unit tests&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto hace que sea tambi&amp;eacute;n m&amp;aacute;s f&amp;aacute;cil de &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;separar&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; las tareas de l&amp;oacute;gica y de concurrencia &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aspectos en&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; sus &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;pruebas de unidad&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="17fc026b83d7e393a11f6a13c3426f6521cd7eac" translate="yes" xml:space="preserve">
          <source>This might seem like a small thing but where you have a very complex application with a lot of threads and all of a sudden things 'have stopped' (either for reasons of deadlock or possibly because of a flaw in a network protocol which would be less obvious - or other endless reasons) then getting a stack dump from Java where all the threads are called 'Thread-1','Thread-2','Thread-3' is not always very useful (it depends on how your threads are structured and whether you can usefully tell which is which just by their stack trace - not always possible if you are using groups of multiple threads all running the same code).</source>
          <target state="translated">Esto puede parecer una cosa pequeña,pero cuando tienes una aplicación muy compleja con un montón de hilos y de repente las cosas &quot;se han detenido&quot; (ya sea por razones de bloqueo o posiblemente por un fallo en un protocolo de red que sería menos obvio-u otras razones interminables),entonces se obtiene un volcado de pila de Java donde todos los hilos se llaman &quot;Thread-1&quot;,Thread-2','Thread-3' no siempre es muy útil (depende de cómo estén estructurados tus hilos y de si puedes saber cuál es cuál con sólo trazar su pila-no siempre es posible si estás usando grupos de múltiples hilos que ejecutan todos el mismo código).</target>
        </trans-unit>
        <trans-unit id="87abb7dd8e4d3d728598faa0e9340d014165ffb3" translate="yes" xml:space="preserve">
          <source>This two have a dependency and relationship in multi-threading just like &lt;code&gt;Wheel and Engine&lt;/code&gt; relationship of motor vehicle.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Estos dos tienen una dependencia y una relaci&amp;oacute;n en subprocesos m&amp;uacute;ltiples al igual que la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;relaci&amp;oacute;n de la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Wheel and Engine&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; del veh&amp;iacute;culo de motor.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="373daad7e9321644f3a446ea6144ee0baecf6a48" translate="yes" xml:space="preserve">
          <source>Those who like to solve puzzles can see another side effect of extending Thread. The below code 
will print unreachable code when nobody is notifying them.</source>
          <target state="translated">Aquellos a los que les gusta resolver rompecabezas pueden ver otro efecto secundario de la extensión del Hilo.El código de abajo imprimirá un código inalcanzable cuando nadie les notifique.</target>
        </trans-unit>
        <trans-unit id="06e005b4dac28bdf9b9f2e738e74f67830824baf" translate="yes" xml:space="preserve">
          <source>Use Runnable interface when you want to access the same resources from the group of threads. Avoid using Thread class here, because multiple objects creation consumes more memory and it becomes a big performance overhead.</source>
          <target state="translated">Utilice la interfaz Runnable cuando quiera acceder a los mismos recursos del grupo de hilos.Evita usar la clase de Hilo aquí,porque la creación de múltiples objetos consume más memoria y se convierte en una gran sobrecarga de rendimiento.</target>
        </trans-unit>
        <trans-unit id="eae2c2b67ec1f551dfa203ea142e948ae61b60a7" translate="yes" xml:space="preserve">
          <source>We do not want the thread's property, instead we want our class to behave as a task which can be run.</source>
          <target state="translated">No queremos la propiedad del hilo,sino que queremos que nuestra clase se comporte como una tarea que se pueda ejecutar.</target>
        </trans-unit>
        <trans-unit id="2004802c1def0bfbaa1871673f394eaa9ff880af" translate="yes" xml:space="preserve">
          <source>We need a task, so write a task definition which can be run on a Thread. So use Runnable.</source>
          <target state="translated">Necesitamos una tarea,así que escribe una definición de tarea que pueda ser ejecutada en un Hilo.Así que usa Runnable.</target>
        </trans-unit>
        <trans-unit id="78e7a8e6346110b062184eb90a63bd6b750dbc8b" translate="yes" xml:space="preserve">
          <source>Well so many good Answers, I want to add more on this. This will help to understand &lt;code&gt;Extending v/s Implementing Thread&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bueno, muchas buenas respuestas, quiero agregar m&amp;aacute;s sobre esto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto ayudar&amp;aacute; a comprender la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Extending v/s Implementing Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b82c489f872b085a7ad003127345364fb69ed884" translate="yes" xml:space="preserve">
          <source>What is the difference between an interface and abstract class?</source>
          <target state="translated">¿Cuál es la diferencia entre una clase de interfaz y una clase abstracta?</target>
        </trans-unit>
        <trans-unit id="236d5cd63182e755c22e19a5adeee2748111f58c" translate="yes" xml:space="preserve">
          <source>When implementing &lt;code&gt;interface Runnable&lt;/code&gt; it means you are creating something which is &lt;code&gt;run able&lt;/code&gt; in a different thread. Now creating something which can run inside a thread (runnable inside a thread), doesn't mean to creating a Thread.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Al implementar la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;interface Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , significa que est&amp;aacute; creando algo que se &lt;/font&gt;&lt;/font&gt; &lt;code&gt;run able&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en un hilo diferente. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora, crear algo que pueda ejecutarse dentro de un hilo (ejecutable dentro de un hilo), no significa crear un hilo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3745fb71989a4e044c210feba42f4bf044bd3030" translate="yes" xml:space="preserve">
          <source>When there is a need to extend a superclass, implementing the Runnable interface is more appropriate than using the Thread class. Because we can extend another class while implementing Runnable interface to make a thread.</source>
          <target state="translated">Cuando hay necesidad de extender una superclase,implementar la interfaz Runnable es más apropiado que usar la clase Thread.Porque podemos extender otra clase mientras se implementa la interfaz Runnable para hacer un hilo.</target>
        </trans-unit>
        <trans-unit id="c5ff3968cb8985044c47e00b5cba9cc0fe8c5c1e" translate="yes" xml:space="preserve">
          <source>When you &lt;code&gt;extends Thread&lt;/code&gt; class, after that you can&amp;rsquo;t extend any other class which you required. (As you know, Java does not allow inheriting more than one class).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; clase &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Thread&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , despu&amp;eacute;s de eso no puede extender ninguna otra clase que necesita. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Como sabes, Java no permite heredar m&amp;aacute;s de una clase).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e17cab664efc85689b2242508d229076966d7955" translate="yes" xml:space="preserve">
          <source>When you &lt;code&gt;extends Thread&lt;/code&gt; class, each of your thread creates a unique object and associate with it.
When you &lt;code&gt;implements Runnable&lt;/code&gt;, it shares the same object to multiple threads.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; clase &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Thread&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , cada uno de sus hilos crea un objeto &amp;uacute;nico y se asocia con &amp;eacute;l. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;implements Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , comparte el mismo objeto con varios subprocesos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f2a76d24f44f7ae9e03bb03f42c6e15b134a771" translate="yes" xml:space="preserve">
          <source>When you &lt;code&gt;implements Runnable&lt;/code&gt;, you can save space for your class to extend any other class in the future or now.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;implements Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , puede ahorrar espacio para que su clase extienda cualquier otra clase en el futuro o ahora.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a128f112ee99f36368476f18bd5378db4c60d872" translate="yes" xml:space="preserve">
          <source>When you extend Thread class, after that you can&amp;rsquo;t extend any other class which you required. (As you know, Java does not allow inheriting more than one class).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando extiende la clase Thread, despu&amp;eacute;s de eso no puede extender ninguna otra clase que necesita. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Como sabes, Java no permite heredar m&amp;aacute;s de una clase).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd51cd51a205c0fcca4745df3354f5e1ab449908" translate="yes" xml:space="preserve">
          <source>When you implement Runnable, you can save space for your class to extend any other class in the future or now.</source>
          <target state="translated">Cuando implementes Runnable,puedes ahorrar espacio para que tu clase se extienda a cualquier otra clase en el futuro o ahora.</target>
        </trans-unit>
        <trans-unit id="0e0e6973934c399e783b81b4042172920b877a88" translate="yes" xml:space="preserve">
          <source>Whereas, Thread class approach, you must have to create separate instance for every thread access. Hence different memory is allocated for every class instances and each has separate counter, the value remains same, which means no increment will happen because none of the object reference is same.</source>
          <target state="translated">Mientras que,el enfoque de la clase de hilo,debes crear una instancia separada para cada acceso al hilo.Por lo tanto,se asigna una memoria diferente para cada instancia de clase y cada una tiene un contador separado,el valor permanece igual,lo que significa que no se producirá ningún incremento porque ninguna de las referencias del objeto es la misma.</target>
        </trans-unit>
        <trans-unit id="0ffdc76564caf2c123c9ca2dce9891279792861c" translate="yes" xml:space="preserve">
          <source>Which of these idioms should you use? The first idiom, which employs a
  Runnable object, is more general, because the Runnable object can
  subclass a class other than Thread. The second idiom is easier to use
  in simple applications, but is limited by the fact that your task
  class must be a descendant of Thread. This lesson focuses on the first
  approach, which separates the Runnable task from the Thread object
  that executes the task. Not only is this approach more flexible, but
  it is applicable to the high-level thread management APIs covered
  later.</source>
          <target state="translated">¿Cuál de estos modismos debería usar? El primer modismo,que emplea un objeto ejecutable,es más general,porque el objeto ejecutable puede subclasificar una clase que no sea Thread.La segunda es más fácil de usar en aplicaciones simples,pero está limitada por el hecho de que la clase de tarea debe ser descendiente de Thread.Esta lección se centra en el primer enfoque,que separa la tarea Runnable del objeto Thread que ejecuta la tarea.Este enfoque no sólo es más flexible,sino que también es aplicable a las API de gestión de hilos de alto nivel que se tratan más adelante.</target>
        </trans-unit>
        <trans-unit id="ff77565865db636f68fb467b8723798b53763440" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;implements Runnable&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;implements Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="853fa9256b5a0955063f44f7f3c0fb638d4ab72b" translate="yes" xml:space="preserve">
          <source>With the release of Java 8, there is now a third option.</source>
          <target state="translated">Con el lanzamiento de Java 8,ahora hay una tercera opción.</target>
        </trans-unit>
        <trans-unit id="a4d2dd0a50a02054e9052afd60821e047d2d17f3" translate="yes" xml:space="preserve">
          <source>Yes,
If you call ThreadA call , then  not need to call the start method and run method is call after call the ThreadA class only.
But If use the ThreadB call then need to necessary the start thread for call run method.
If you have any more help, reply me.</source>
          <target state="translated">Sí,si llamas a ThreadA call,entonces no es necesario llamar al método de inicio y el método de ejecución es llamar después de llamar a la clase ThreadA solamente.Pero si utilizas la llamada ThreadB,entonces necesitarás el método de hilo de inicio para la ejecución de la llamada.Si tienes más ayuda,contesta.</target>
        </trans-unit>
        <trans-unit id="c203d4090e273e2d4aba99a65662a708ee1a406f" translate="yes" xml:space="preserve">
          <source>Yes: implements &lt;code&gt;Runnable&lt;/code&gt; is the preferred way to do it, IMO. You're not really specialising the thread's behaviour.  You're just giving it something to run. That means &lt;a href=&quot;http://en.wikipedia.org/wiki/Object_composition&quot;&gt;composition&lt;/a&gt; is the &lt;em&gt;philosophically&lt;/em&gt; &quot;purer&quot; way to go.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;S&amp;iacute;: implementa &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es la forma preferida de hacerlo, en mi opini&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No est&amp;aacute;s realmente especializando el comportamiento del hilo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Solo le est&amp;aacute;s dando algo para correr. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Eso significa que la &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Object_composition&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;composici&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;camino &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;filos&amp;oacute;ficamente&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;m&amp;aacute;s puro&quot;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d7535bb12b09b60b4eaa34abc75b026915b88b7" translate="yes" xml:space="preserve">
          <source>You can &lt;strong&gt;execute&lt;/strong&gt; the same Runnable &lt;strong&gt;object multiple times&lt;/strong&gt;, a Thread object, however, can only be started once. (Maybe the reason, why Executors do accept Runnables, but not Threads.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ejecutar&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; el mismo &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Runnable &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;varias veces&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , sin embargo, un objeto Thread solo se puede iniciar una vez. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Quiz&amp;aacute;s la raz&amp;oacute;n por la cual los Ejecutores aceptan Runnables, pero no Threads).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10b3f87aede523f4acf1b8326dd109f256a041ff" translate="yes" xml:space="preserve">
          <source>You might even for example take a stack trace of its creation and use that as the thread name.  This might seem odd but depending on how your code is structured it can be very useful for debugging purposes.</source>
          <target state="translated">Incluso podrías,por ejemplo,tomar un rastro de la pila de su creación y usarlo como el nombre del hilo.Esto puede parecer extraño,pero dependiendo de cómo esté estructurado tu código puede ser muy útil para propósitos de depuración.</target>
        </trans-unit>
        <trans-unit id="c7ea60dfce8ee7cc8cc687888edf4b04532f8f6a" translate="yes" xml:space="preserve">
          <source>You should implement Runnable, but if you are running on Java 5 or higher, you should not start it with &lt;code&gt;new Thread&lt;/code&gt; but use an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html&quot;&gt;ExecutorService&lt;/a&gt; instead. For details see: &lt;a href=&quot;https://stackoverflow.com/questions/125333/how-to-implement-simple-threading-in-java&quot;&gt;How to implement simple threading in Java&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Debe implementar Runnable, pero si est&amp;aacute; ejecutando Java 5 o superior, no debe iniciarlo con un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; sino que debe usar un &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ExecutorService&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/125333/how-to-implement-simple-threading-in-java&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C&amp;oacute;mo implementar subprocesos simples en Java&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="00e264d4c0d3056d3f62ecbb163750347e769810" translate="yes" xml:space="preserve">
          <source>You usually extend a class to add or modify functionality. So, &lt;em&gt;if you don't want&lt;/em&gt; to &lt;strong&gt;overwrite&lt;/strong&gt; any &lt;strong&gt;Thread behavior&lt;/strong&gt;, then use Runnable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo general, extiende una clase para agregar o modificar la funcionalidad. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo tanto, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;si usted no quiere&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;sobrescribir&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cualquier &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;comportamiento del hilo&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , a continuaci&amp;oacute;n, utilizar Ejecutable.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b52ab0bbdc36fa3ce8200d348176405633795fd4" translate="yes" xml:space="preserve">
          <source>Your example can be replaced with:</source>
          <target state="translated">Su ejemplo puede ser reemplazado por:</target>
        </trans-unit>
        <trans-unit id="889fbbe3190eae4f82286aac9145244b9f720d11" translate="yes" xml:space="preserve">
          <source>algorithm implemented by the piece of code (the runnable part)</source>
          <target state="translated">algoritmo implementado por el pedazo de código (la parte ejecutable)</target>
        </trans-unit>
        <trans-unit id="831283a4238416a712158b2f309e2619a8e56f24" translate="yes" xml:space="preserve">
          <source>and here's a sample of the output comparing the two names:</source>
          <target state="translated">y aquí hay una muestra de la salida comparando los dos nombres:</target>
        </trans-unit>
        <trans-unit id="5a408b341b31218147e3d07a1b8bcf1d2dddf347" translate="yes" xml:space="preserve">
          <source>but if you extend Thread then you get to manage this within the class itself (just like in your example you name the thread 'ThreadB').  In this case you:</source>
          <target state="translated">pero si extiendes el Hilo entonces consigues manejarlo dentro de la propia clase (al igual que en tu ejemplo llamas al hilo 'HiloB').En este caso tú:</target>
        </trans-unit>
        <trans-unit id="bcc7a7abbf820d9dc66f259bff8b86536c17ffa6" translate="yes" xml:space="preserve">
          <source>extends establishes &quot;&lt;strong&gt;Is A&lt;/strong&gt;&quot; relation &amp;amp; interface provides &quot;&lt;strong&gt;Has a&lt;/strong&gt;&quot; capability.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;extiende establece la relaci&amp;oacute;n &quot; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es A&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot; y la interfaz proporciona la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;capacidad &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tiene una&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4e52aaa5198aa8b1154e2f65db0ea2273d0bc235" translate="yes" xml:space="preserve">
          <source>if you use runnable you can save the space to extend to any of your other class.</source>
          <target state="translated">si usas runnable puedes ahorrar el espacio para extenderte a cualquiera de tu otra clase.</target>
        </trans-unit>
        <trans-unit id="fbce27d51b99de0c79be3f3c9f8364605a9d2088" translate="yes" xml:space="preserve">
          <source>or if you want to use an &lt;code&gt;ExecutorService&lt;/code&gt; and a method reference:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;o si desea usar un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ExecutorService&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y una referencia de m&amp;eacute;todo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7fabc7ad01f56a22be539223a1585398a01c5e4a" translate="yes" xml:space="preserve">
          <source>thread handling in your application (ie. querying and modifying the execution context)</source>
          <target state="translated">manejo de hilos en su aplicación (es decir,consulta y modificación del contexto de ejecución)</target>
        </trans-unit>
        <trans-unit id="48daf3a4108e0153576830925850ba9eb4db5204" translate="yes" xml:space="preserve">
          <source>“implements Runnable” vs “extends Thread” in Java</source>
          <target state="translated">&quot;implementa Runnable&quot; vs &quot;extiende Thread&quot; en Java</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
