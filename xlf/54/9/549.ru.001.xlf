<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/549">
    <body>
      <group id="549">
        <trans-unit id="69df7b128404cdc2a24c0bfd9cd27a00e203a315" translate="yes" xml:space="preserve">
          <source>&quot;In a &lt;em&gt;corporate,&lt;/em&gt;&lt;strong&gt;intra-&lt;/strong&gt; net setting,&quot; most if not all of the foregoing might not apply!</source>
          <target state="translated">&amp;laquo;В &lt;em&gt;корпоративном&lt;/em&gt; сетевом окружении&amp;raquo; большинство, если не все вышеперечисленное, может не применяться!</target>
        </trans-unit>
        <trans-unit id="058f419589e9dd656281d473affa1f7e3ba832f9" translate="yes" xml:space="preserve">
          <source>&quot;Remember me&quot; checkbox</source>
          <target state="translated">флажок &quot;Запомнить меня&quot;</target>
        </trans-unit>
        <trans-unit id="7bfcf80c49fcc34753a9509db01b7f4fad1e8be7" translate="yes" xml:space="preserve">
          <source>1 failed attempt = 5 sec delay</source>
          <target state="translated">1 неудавшаяся попытка=5 секунд задержки</target>
        </trans-unit>
        <trans-unit id="4933c9e0a9a55746fe717a260189a4c3b7776226" translate="yes" xml:space="preserve">
          <source>1 failed attempt = no delay</source>
          <target state="translated">1 неудавшаяся попытка=нет задержки</target>
        </trans-unit>
        <trans-unit id="bda7f01ca3465367872dae9f245215d37c7e8f44" translate="yes" xml:space="preserve">
          <source>1-4 failed attempts = no delay</source>
          <target state="translated">1-4 неудачные попытки=без задержки</target>
        </trans-unit>
        <trans-unit id="935e9ab41e1866d02953c899137cc5bd98598cd6" translate="yes" xml:space="preserve">
          <source>2 failed attempts = 15 sec delay</source>
          <target state="translated">2 неудачные попытки=15-секундная задержка</target>
        </trans-unit>
        <trans-unit id="47aec48c770a6e89a9cdc96d4cfc0356ccf62251" translate="yes" xml:space="preserve">
          <source>2 failed attempts = 2 sec delay</source>
          <target state="translated">2 неудачные попытки=2 сек.задержка</target>
        </trans-unit>
        <trans-unit id="daa302056ffb870a1635435f22e21ea1dafe9e09" translate="yes" xml:space="preserve">
          <source>21 page academic article with many great tips.</source>
          <target state="translated">21-страничная академическая статья с множеством отличных советов.</target>
        </trans-unit>
        <trans-unit id="dd4616a9b5e7761604c57acbe22a9f66ccc224ba" translate="yes" xml:space="preserve">
          <source>3 failed attempts = 4 sec delay</source>
          <target state="translated">3 неудачные попытки=4 сек.задержка</target>
        </trans-unit>
        <trans-unit id="a2ab0f46bed565e502c16626cce6aa94ed0265ea" translate="yes" xml:space="preserve">
          <source>3+ failed attempts = 45 sec delay</source>
          <target state="translated">3+неудачные попытки=задержка 45 секунд</target>
        </trans-unit>
        <trans-unit id="5f26327f3b922c025c50d407447c515c8398f853" translate="yes" xml:space="preserve">
          <source>4 failed attempts = 8 sec delay</source>
          <target state="translated">4 неудачные попытки=задержка 8 секунд</target>
        </trans-unit>
        <trans-unit id="b410d68b441165f7e208e0c3606b2d34caa8f485" translate="yes" xml:space="preserve">
          <source>5 failed attempts = 15-30 min delay</source>
          <target state="translated">5 неудачных попыток=15-30 мин.задержка</target>
        </trans-unit>
        <trans-unit id="89eb27e67e97b23b39627fd0ebb7f6c8ddf3bf1d" translate="yes" xml:space="preserve">
          <source>5 failed attempts = 16 sec delay</source>
          <target state="translated">5 неудачных попыток=задержка 16 секунд</target>
        </trans-unit>
        <trans-unit id="3fe528174a0b4a8437fd8b6038b509f4f9de6167" translate="yes" xml:space="preserve">
          <source>5+ failed attempts = 20 sec delay</source>
          <target state="translated">5+неудачных попыток=задержка 20 секунд</target>
        </trans-unit>
        <trans-unit id="6921455f96323553f199528f7622f4a3b9a9786f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/SSL&quot;&gt;SSL&lt;/a&gt; client side - give the clients a public key certificate (support in all major browsers - but raises questions over client machine security).</source>
          <target state="translated">Клиентская сторона &lt;a href=&quot;http://en.wikipedia.org/wiki/SSL&quot;&gt;SSL&lt;/a&gt; - предоставляет клиентам сертификат открытого ключа (поддерживается во всех основных браузерах - но вызывает вопросы по поводу безопасности клиентского компьютера).</target>
        </trans-unit>
        <trans-unit id="45b4f07c39663a3e6c27f9302d6e20007ce9782d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/Secure_Remote_Password_protocol&quot;&gt;SRP&lt;/a&gt; - sort of clever password authentication without a trusted third party. But here we are getting into the realms of &quot;it's safer to use two-factor authentication, even if that's costlier&quot;</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Secure_Remote_Password_protocol&quot;&gt;SRP&lt;/a&gt; - своего рода умная аутентификация по паролю без доверенной третьей стороны. Но здесь мы попадаем в сферу &amp;laquo;безопаснее использовать двухфакторную аутентификацию, даже если это дороже&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="90f385f4e0a0b7f11399b82fc614984d76a16f3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/Session_hijacking&quot;&gt;Cookies can be hijacked&lt;/a&gt;: they are only as secure as the rest of the client's machine and other communications. They can be read from disk, sniffed in network traffic, lifted by a cross-site scripting attack, phished from a poisoned DNS so the client sends their cookies to the wrong servers. Don't send persistent cookies. Cookies should expire at the end of the client session (browser close or leaving your domain).</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Session_hijacking&quot;&gt;Файлы cookie могут быть похищены&lt;/a&gt; : они настолько безопасны, как и остальные части компьютера клиента и другие средства связи. Их можно прочитать с диска, прослушать в сетевом трафике, снять с помощью межсайтовой скриптинговой атаки, фишинговать с отравленного DNS, чтобы клиент отправлял свои куки на неправильные серверы. Не отправляйте постоянные куки. Срок действия файлов cookie истекает в конце клиентской сессии (браузер закрывается или покидает ваш домен).</target>
        </trans-unit>
        <trans-unit id="49f9e15c72f3955bacc5f154f5cca6c87bd5ba73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/CAPTCHA&quot;&gt;CAPTCHA&lt;/a&gt; is meant to thwart one specific category of attack: automated dictionary/brute force trial-and-error with no human operator. There is no doubt that this is a real threat, however, there are ways of dealing with it seamlessly that don't require a CAPTCHA, specifically properly designed server-side login throttling schemes - we'll discuss those later.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/CAPTCHA&quot;&gt;CAPTCHA&lt;/a&gt; предназначен для предотвращения одной конкретной категории атак: автоматический словарь / грубая сила методом проб и ошибок без участия оператора. Нет никаких сомнений в том, что это реальная угроза, однако есть способы беспрепятственного решения этой проблемы, для которых не требуется CAPTCHA, специально разработанные правильно разработанные схемы регулирования входа в систему на стороне сервера - мы обсудим это позже.</target>
        </trans-unit>
        <trans-unit id="4a414bc028ed50a0f3218630992fe44aa5dda99f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.owasp.org/index.php/Authentication_Cheat_Sheet&quot;&gt;OWASP Guide To Authentication&lt;/a&gt; / &lt;a href=&quot;https://www.owasp.org/index.php/Authentication_Cheat_Sheet&quot;&gt;OWASP Authentication Cheat Sheet&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.owasp.org/index.php/Authentication_Cheat_Sheet&quot;&gt;Руководство OWASP по проверке подлинности&lt;/a&gt; / &lt;a href=&quot;https://www.owasp.org/index.php/Authentication_Cheat_Sheet&quot;&gt;OWASP&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="350279b88821264707fd02b036767898b4c1bda2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;https://tech.dropbox.com/2012/04/zxcvbn-realistic-password-strength-estimation/&quot;&gt;Dropbox Tech Blog &amp;raquo; Blog Archive &amp;raquo; zxcvbn: realistic password strength estimation&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;https://tech.dropbox.com/2012/04/zxcvbn-realistic-password-strength-estimation/&quot;&gt;Технический блог Dropbox &amp;raquo;Архив блога&amp;raquo; zxcvbn: реалистичная оценка надежности пароля&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4a5383b5bd8ae9fa5958ef40b0e46c085b1e5259" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;As a rule of thumb, however, I would say: the stronger your password policy is, the less you have to bug users with delays. If you require strong (case-sensitive alphanumerics + required numbers and symbols) 9+ character passwords, you could give the users 2-4 non-delayed password attempts before activating the throttling.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Однако, как правило, я бы сказал: чем сильнее ваша политика паролей, тем меньше у вас проблем с задержками.&lt;/em&gt; &lt;em&gt;Если вам требуются надежные (чувствительные к регистру буквенно-цифровые символы + требуемые цифры и символы) пароли из 9 и более символов, вы можете дать пользователям 2-4 попытки без задержки ввода пароля перед активацией регулирования.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e4957adf699c8759c1e40cd9b96d75b27b268fc6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;and much more about&lt;/em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Form-based_authentication&quot;&gt;form based authentication&lt;/a&gt;...</source>
          <target state="translated">&lt;em&gt;и многое другое об&lt;/em&gt; &lt;a href=&quot;http://en.wikipedia.org/wiki/Form-based_authentication&quot;&gt;аутентификации на основе форм&lt;/a&gt; ...</target>
        </trans-unit>
        <trans-unit id="fcc4b958071127c62617da40ec128a417501f1df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;(Do not) Roll-your-own JavaScript encryption/hashing&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;(Не) Сверните свое собственное шифрование / хеширование JavaScript&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6dcdf8f937fc5401388255a12713637e49f4722f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best practice #1:&lt;/strong&gt; A short time delay that increases with the number of failed attempts, like:</source>
          <target state="translated">Рекомендация &lt;strong&gt;№ 1:&lt;/strong&gt; небольшая задержка, которая увеличивается с увеличением числа неудачных попыток, например:</target>
        </trans-unit>
        <trans-unit id="4359ce5b629b2c1989c0365aa8961ffd79ee0d06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best practice #2:&lt;/strong&gt; A medium length time delay that goes into effect after N failed attempts, like:</source>
          <target state="translated">Рекомендация &lt;strong&gt;№ 2:&lt;/strong&gt; задержка средней продолжительности, которая вступает в силу после N неудачных попыток, например:</target>
        </trans-unit>
        <trans-unit id="01abe219c5d4dda6367efc589d92ab2506211aad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best practice #3:&lt;/strong&gt; Combining the two approaches - either a fixed, short time delay that goes into effect after N failed attempts, like:</source>
          <target state="translated">&lt;strong&gt;Лучшая практика # 3:&lt;/strong&gt; объединение двух подходов - фиксированная кратковременная задержка, которая вступает в силу после N неудачных попыток, например:</target>
        </trans-unit>
        <trans-unit id="37c2926d835584f9eabb2cd451babd8b70ad6a67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CAPTCHAS against humanity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Капчи против человечности&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="516d16a7e5a12ca5bcd98935577ee8e1d46c30d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Don't implement 'secret questions'&lt;/strong&gt;. The 'secret questions' feature is a security anti-pattern. Read the paper from link number 4 from the MUST-READ list. You can ask Sarah Palin about that one, after her Yahoo! email account got hacked during a previous presidential campaign because the answer to her security question was... &quot;Wasilla High School&quot;!</source>
          <target state="translated">&lt;strong&gt;Не вводите &amp;laquo;секретные вопросы&amp;raquo;&lt;/strong&gt; . Функция &amp;laquo;секретных вопросов&amp;raquo; является антишаблоном безопасности. Прочитайте статью по ссылке № 4 из списка, который ДОЛЖЕН ПРОЧИТАТЬ. Вы можете спросить Сару Пэйлин об этом после ее Yahoo! учетная запись электронной почты была взломана во время предыдущей президентской кампании, потому что ответ на ее секретный вопрос был ... &quot;Средняя школа Василлы&quot;!</target>
        </trans-unit>
        <trans-unit id="ec175f6942cc7b1865ec041ac5613bc9f80c0eef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If you DO decide to implement persistent login cookies, this is how you do it:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Если вы решите внедрить постоянные файлы cookie для входа, вот как вы это делаете:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="637473bd2adb089039b0c89d6433ba778b84b474" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In case of a bot:&lt;/strong&gt; The bot will see a field whose type is &lt;code&gt;text&lt;/code&gt; and a name &lt;code&gt;email&lt;/code&gt; (or whatever it is you called it) and will logically attempt to fill it with appropriate data. It doesn't care if you styled the input form with some fancy CSS, web-developers do it all the time. Whatever the value in the dummy field is, we don't care as long as it's larger than &lt;code&gt;0&lt;/code&gt; characters.</source>
          <target state="translated">&lt;strong&gt;В случае с ботом:&lt;/strong&gt; бот увидит поле с типом &lt;code&gt;text&lt;/code&gt; и именем &lt;code&gt;email&lt;/code&gt; (или как он там называется) и будет логически пытаться заполнить его соответствующими данными. Неважно, стилизовали ли вы форму ввода с помощью какого-нибудь причудливого CSS, веб-разработчики делают это постоянно. Каким бы ни было значение в фиктивном поле, нам все равно, если оно больше &lt;code&gt;0&lt;/code&gt; символов.</target>
        </trans-unit>
        <trans-unit id="aae812a71f3bb70676afff65f15c280be558f9db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In case of a human:&lt;/strong&gt;
The user will not see the dummy field (in my case named &quot;email&quot;) and will not attempt to fill it. So the value of the dummy field should still be empty when the form has been sent.</source>
          <target state="translated">&lt;strong&gt;В случае человека:&lt;/strong&gt; пользователь не увидит фиктивное поле (в моем случае с именем &amp;laquo;электронная почта&amp;raquo;) и не будет пытаться заполнить его. Таким образом, значение пустого поля все еще должно быть пустым, когда форма была отправлена.</target>
        </trans-unit>
        <trans-unit id="0e6713aeddfc7a12a7fde3f069db7a29490d39d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In conclusion, security questions are inherently insecure in virtually all their forms and variations, and should not be employed in an authentication scheme for any reason.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;В заключение, вопросы безопасности по своей сути небезопасны практически во всех их формах и вариациях и не должны использоваться по какой-либо причине в схеме аутентификации.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5921de4d57a4fbc23f79b12ad7e9cdeb5fb7c8e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;It would, however, take an inordinate amount of time to crack even a 6-character password, &lt;em&gt;if you were limited to one attempt per second!&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Однако взломать даже 6-символьный пароль потребовалось бы слишком много времени, &lt;em&gt;если вы ограничены одной попыткой в ​​секунду!&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9fe7f6c15e0366087eea39f6e6266f59f5ea4149" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Locking accounts&lt;/strong&gt; and requiring email verification after N failed attempts (this is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Denial-of-service_attack&quot;&gt;DoS&lt;/a&gt; attack waiting to happen)</source>
          <target state="translated">&lt;strong&gt;Блокировка учетных записей&lt;/strong&gt; и требование проверки электронной почты после N неудачных попыток (это &lt;a href=&quot;https://en.wikipedia.org/wiki/Denial-of-service_attack&quot;&gt;DoS-&lt;/a&gt; атака, которая должна произойти)</target>
        </trans-unit>
        <trans-unit id="e90850633bfc5febc51640b8ccb1003e1a125b35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Session data - &quot;You are logged in as Spiderman69&quot;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Данные сеанса - &amp;laquo;Вы вошли как Spiderman69&amp;raquo;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fd9c2a725de6be5c8d8a56d77ade192b833ed89e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Storing Passwords / Verifying logins&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Хранение паролей / проверка логинов&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9bbd3f75083cc61c829eb8133833162ea78ad59c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To HTTPS or not to HTTPS?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;HTTPS или нет HTTPS?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aff7d87f4b6a1c8cb8a94e4e8a8d78776ee65e55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: Of course this method is not 100% foolproof. Bots can be programmed to ignore input fields with the style &lt;code&gt;display:none&lt;/code&gt; applied to it. You also have to think about people who use some form of auto-completion (like most browsers have built-in!) to auto-fill all form fields for them. They might just as well pick up a dummy field.</source>
          <target state="translated">&lt;strong&gt;Предупреждение&lt;/strong&gt; : Конечно, этот метод не на 100% надежен. Боты могут быть запрограммированы на игнорирование полей ввода с &lt;code&gt;display:none&lt;/code&gt; стиля : ни один из них не применяется к нему. Вы также должны подумать о людях, которые используют некоторую форму автозаполнения (как в большинстве браузеров встроено!) Для автоматического заполнения всех полей формы для них. С таким же успехом они могли бы взять фиктивное поле.</target>
        </trans-unit>
        <trans-unit id="5d5d1f9e278d3727050a077840f6bd8ade191eb6" translate="yes" xml:space="preserve">
          <source>A 'standard' secret question like mother's maiden name or favorite pet</source>
          <target state="translated">Стандартный&quot; секретный вопрос,как девичья фамилия матери или любимое домашнее животное.</target>
        </trans-unit>
        <trans-unit id="f64690874d20c3aeaa77943a06ac83d30946406d" translate="yes" xml:space="preserve">
          <source>A big user interface benefit being sought here is the &amp;ldquo;identity selector&amp;rdquo;. When a user visits a site and chooses to authenticate, their browser shows them a selection of email addresses (&amp;ldquo;personal&amp;rdquo;, &amp;ldquo;work&amp;rdquo;, &amp;ldquo;political activism&amp;rdquo;, etc.) they may use to identify themselves to the site.</source>
          <target state="translated">Большое преимущество пользовательского интерфейса, которое мы ищем, - это &amp;laquo;селектор идентичности&amp;raquo;. Когда пользователь посещает сайт и выбирает аутентификацию, его браузер показывает ему выбор адресов электронной почты (&amp;laquo;личный&amp;raquo;, &amp;laquo;рабочий&amp;raquo;, &amp;laquo;политический активизм&amp;raquo; и т. Д.), Которые они могут использовать для идентификации себя на сайте.</target>
        </trans-unit>
        <trans-unit id="20a4741b328cb885ac3f4e272309bb731bd02051" translate="yes" xml:space="preserve">
          <source>A cryptographic hash should not be used for password storage because user-selected passwords are not strong enough (i.e. do not usually contain enough entropy) and a password guessing attack could be completed in a relatively short time by an attacker with access to the hashes. This is why KDFs are used - these effectively &lt;a href=&quot;https://en.wikipedia.org/wiki/Key_stretching&quot;&gt;&quot;stretch the key&quot;&lt;/a&gt;, which means that every password guess an attacker makes causes multiple repetitions of the hash algorithm, for example 10,000 times, which causes the attacker to guess the password 10,000 times slower.</source>
          <target state="translated">Криптографический хеш не должен использоваться для хранения паролей, потому что выбранные пользователем пароли недостаточно надежны (то есть обычно не содержат достаточно энтропии), и атака по подбору пароля может быть завершена за относительно короткое время злоумышленником, имеющим доступ к хешам. Вот почему используются KDF - они эффективно &lt;a href=&quot;https://en.wikipedia.org/wiki/Key_stretching&quot;&gt;&amp;laquo;растягивают ключ&amp;raquo;&lt;/a&gt; , что означает, что каждое предположение о пароле, которое делает злоумышленник, вызывает многократное повторение алгоритма хеширования, например, 10 000 раз, что заставляет злоумышленника угадать пароль в 10000 раз медленнее.</target>
        </trans-unit>
        <trans-unit id="7590029be61bfd68fc48f94dac75c5aef9aad07f" translate="yes" xml:space="preserve">
          <source>A final note: always make sure your interface for entering the 'lost password code' is at least as secure as your login form itself, or an attacker will simply use this to gain access instead. Making sure you generate very long 'lost password codes' (for example, 16 case-sensitive alphanumeric characters) is a good start, but consider adding the same throttling scheme that you do for the login form itself.</source>
          <target state="translated">И последнее замечание:всегда убедитесь,что ваш интерфейс для ввода &quot;потерянного пароля&quot; по крайней мере так же безопасен,как и сама форма входа,иначе злоумышленник просто воспользуется этим для получения доступа.Убедитесь,что вы генерируете очень длинные 'коды потерянных паролей' (например,16 буквенно-цифровых символов с учетом регистра)-это хорошее начало,но подумайте о том,чтобы добавить ту же самую схему дросселирования,что и для самой формы входа.</target>
        </trans-unit>
        <trans-unit id="11d28e408d6e08e9bc8b44384de8740b08f464cd" translate="yes" xml:space="preserve">
          <source>A good article about realistic password strength estimation is:</source>
          <target state="translated">Хорошая статья о реалистичной оценке силы пароля:</target>
        </trans-unit>
        <trans-unit id="c73360d37de0cecf6fb825c8a88ccb92b682493b" translate="yes" xml:space="preserve">
          <source>A simple piece of trivia that anyone could lift from their blog, LinkedIn profile, or similar</source>
          <target state="translated">Простая мелочь,которую любой мог бы поднять из своего блога,профиля в LinkedIn или подобного.</target>
        </trans-unit>
        <trans-unit id="5d9880021de84dd0fea8123c504dd9636c53c978" translate="yes" xml:space="preserve">
          <source>Additionally, it makes sense to do more aggressive throttling on admin accounts, since those are the most attractive entry points</source>
          <target state="translated">Кроме того,имеет смысл делать более агрессивное дросселирование на учетных записях администраторов,так как это наиболее привлекательные точки входа</target>
        </trans-unit>
        <trans-unit id="d7e5b123cdf543d44b363c873a05a3315621a304" translate="yes" xml:space="preserve">
          <source>After the user logs in, the server sends the user a session cookie. The server can retrieve the username or id from the cookie, but nobody else can generate such a cookie (TODO explain mechanisms).</source>
          <target state="translated">После того,как пользователь входит в систему,сервер посылает пользователю сессионный файл cookie.Сервер может получить имя пользователя или идентификатор из куки,но никто другой не может сгенерировать такой куки (TODO объясняет механизмы).</target>
        </trans-unit>
        <trans-unit id="cf64446be670d9f89a6800352ab8de9cc2e9bb10" translate="yes" xml:space="preserve">
          <source>Always hash the lost password code/token in the database. &lt;strong&gt;&lt;em&gt;AGAIN&lt;/em&gt;&lt;/strong&gt;, this code is another example of a Password Equivalent, so it MUST be hashed in case an attacker got their hands on your database. When a lost password code is requested, send the plaintext code to the user's email address, then hash it, save the hash in your database -- and &lt;em&gt;throw away the original&lt;/em&gt;. Just like a password or a persistent login token.</source>
          <target state="translated">Всегда хэшируйте потерянный код / ​​токен в базе данных. &lt;strong&gt;&lt;em&gt;СНОВА&lt;/em&gt;&lt;/strong&gt; , этот код является еще одним примером эквивалента пароля, поэтому он ДОЛЖЕН быть хеширован на случай, если злоумышленник попадет в вашу базу данных. Когда запрашивается утерянный пароль, отправьте открытый текстовый код на адрес электронной почты пользователя, затем хешируйте его, сохраните хеш в своей базе данных и &lt;em&gt;выбросьте оригинал&lt;/em&gt; . Так же, как пароль или постоянный токен для входа.</target>
        </trans-unit>
        <trans-unit id="f8fa1c13ce1fcf0e5a7c7b34d06206e4a19a7e2d" translate="yes" xml:space="preserve">
          <source>And finally, &lt;strong&gt;login throttling&lt;/strong&gt;: that is, setting a time delay between attempts after N failed attempts (yes, DoS attacks are still possible, but at least they are far less likely and a lot more complicated to pull off).</source>
          <target state="translated">И, наконец, &lt;strong&gt;регулирование входа в систему&lt;/strong&gt; : то есть установка задержки между попытками после N неудачных попыток (да, атаки DoS все еще возможны, но, по крайней мере, они гораздо менее вероятны и намного сложнее осуществить).</target>
        </trans-unit>
        <trans-unit id="50261011750b3da345a0d096efbd266f05c0265c" translate="yes" xml:space="preserve">
          <source>And for a refreshing take on user-friendliness of high-entropy passwords, Randall Munroe's &lt;a href=&quot;https://xkcd.com/936/&quot;&gt;Password Strength xkcd&lt;/a&gt; is highly recommended.</source>
          <target state="translated">И для того, чтобы освежить восприятие удобных паролей с высокой энтропией, настоятельно рекомендуется использовать Randal Munroe &lt;a href=&quot;https://xkcd.com/936/&quot;&gt;Password Strength xkcd&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="17c338063d0906b9a8c9db49206427ff3518197a" translate="yes" xml:space="preserve">
          <source>And just to reiterate one of the most common pitfalls, &lt;strong&gt;DO NOT STORE THE PERSISTENT LOGIN COOKIE (TOKEN) IN YOUR DATABASE, ONLY A HASH OF IT!&lt;/strong&gt; The login token is Password Equivalent, so if an attacker got their hands on your database, they could use the tokens to log in to any account, just as if they were cleartext login-password combinations. Therefore, use hashing (according to &lt;a href=&quot;https://security.stackexchange.com/a/63438/5002&quot;&gt;https://security.stackexchange.com/a/63438/5002&lt;/a&gt; a weak hash will do just fine for this purpose) when storing persistent login tokens.</source>
          <target state="translated">И просто, чтобы повторить одну из самых распространенных ошибок, &lt;strong&gt;НЕ ХРАНИТЕ УСТОЙЧИВОГО ВХОДА COOKIE (TOKEN) В ВАШУ БАЗУ ДАННЫХ, ТОЛЬКО ХЭШ ЭТОГО!&lt;/strong&gt; Токен входа в систему эквивалентен паролю, поэтому, если злоумышленник попадет в вашу базу данных, он может использовать токены для входа в любую учетную запись, как если бы они были комбинациями логин-пароль в виде открытого текста. Поэтому используйте хеширование (согласно &lt;a href=&quot;https://security.stackexchange.com/a/63438/5002&quot;&gt;https://security.stackexchange.com/a/63438/5002&lt;/a&gt; слабый хеш отлично подойдет для этой цели) при хранении постоянных токенов входа.</target>
        </trans-unit>
        <trans-unit id="72316e90ea3528bdbe9b7197ccebf727fd3c4940" translate="yes" xml:space="preserve">
          <source>Another big user interface benefit being sought as part of this effort is &lt;a href=&quot;https://wiki.mozilla.org/Identity/Verified_Email_Protocol/Latest-Session&quot;&gt;helping the browser know more about the user&amp;rsquo;s session&lt;/a&gt; &amp;ndash; who they&amp;rsquo;re signed in as currently, primarily &amp;ndash; so it may display that in the browser chrome.</source>
          <target state="translated">Еще одно важное преимущество пользовательского интерфейса, которое мы ищем в рамках этих усилий, заключается в &lt;a href=&quot;https://wiki.mozilla.org/Identity/Verified_Email_Protocol/Latest-Session&quot;&gt;том, чтобы помочь браузеру узнать больше о сеансе пользователя&lt;/a&gt; - в первую очередь, в котором они вошли, - поэтому он может отображаться в браузере Chrome.</target>
        </trans-unit>
        <trans-unit id="705253cd657208d09c588cee3c6ce2acfa7a6043" translate="yes" xml:space="preserve">
          <source>Another warning about storing passwords in the database.</source>
          <target state="translated">Еще одно предупреждение о хранении паролей в базе данных.</target>
        </trans-unit>
        <trans-unit id="54b5a6243a4307025588c6723f58ebb3abfde047" translate="yes" xml:space="preserve">
          <source>Any question that is easier to answer than guessing their password. Which, for any decent password, is every question you can imagine</source>
          <target state="translated">На любой вопрос легче ответить,чем угадать пароль.Который,для любого приличного пароля,это каждый вопрос,который вы можете себе представить.</target>
        </trans-unit>
        <trans-unit id="ac85befbefb90c64bf699051a1715be6633e17ed" translate="yes" xml:space="preserve">
          <source>As a second level of expressing identity, each domain manages its own set of accounts.</source>
          <target state="translated">В качестве второго уровня выражения идентичности,каждый домен управляет своим собственным набором учетных записей.</target>
        </trans-unit>
        <trans-unit id="7fae24196de93a89f7bc9168355345ea97141c87" translate="yes" xml:space="preserve">
          <source>As nothing is more efficient than not doing it at all.</source>
          <target state="translated">Так как нет ничего эффективнее,чем не делать этого вообще.</target>
        </trans-unit>
        <trans-unit id="b9a023176b2c76e659482f620b9f75601624a29e" translate="yes" xml:space="preserve">
          <source>Ask YC: Best Practices for User Authentication</source>
          <target state="translated">Спросите у YC:Передовые методы аутентификации пользователей</target>
        </trans-unit>
        <trans-unit id="df15f74ac80c8dd3799c1c499d1cc92b7ae3c505" translate="yes" xml:space="preserve">
          <source>Authentication can be completely delegated to a single-sign-on service, where another provider handles collecting credentials. This pushes the problem to a trusted third party. Google and Twitter both provide standards-based SSO services, while Facebook provides a similar proprietary solution.</source>
          <target state="translated">Аутентификация может быть полностью делегирована сервису однократной регистрации,где другой провайдер занимается сбором учетных данных.Это толкает проблему к доверенной третьей стороне.Google и Twitter предоставляют стандартные услуги SSO,в то время как Facebook предоставляет аналогичное проприетарное решение.</target>
        </trans-unit>
        <trans-unit id="f70be28530087a7439a32ae20f152509cc4f41a4" translate="yes" xml:space="preserve">
          <source>Be creative!</source>
          <target state="translated">Будьте креативны!</target>
        </trans-unit>
        <trans-unit id="1de8c9a58ce4eebe00ed4c7a8a4c68f84a6b9ba8" translate="yes" xml:space="preserve">
          <source>Because of the distributed nature of this system, it avoids lock-in to major sites like Facebook, Twitter, Google, etc. Any individual can own their own domain and therefore act as their own identity provider.</source>
          <target state="translated">Из-за распределенной природы этой системы,она позволяет избежать блокировки на основных сайтах,таких как Facebook,Twitter,Google и т.д.Любой человек может владеть собственным доменом и,следовательно,выступать в качестве поставщика идентификационных данных.</target>
        </trans-unit>
        <trans-unit id="9f0cb361ff24b04aa6092ff32d4cb6f1c75f9ee1" translate="yes" xml:space="preserve">
          <source>Browser autocompletion of usernames and passwords</source>
          <target state="translated">Автозавершение имен пользователей и паролей в браузере</target>
        </trans-unit>
        <trans-unit id="5172cfd6482bd52a4f6c2f400ad548c6594c7e4b" translate="yes" xml:space="preserve">
          <source>But this is a &lt;em&gt;lot&lt;/em&gt; of a hassle, and not very web 2.0. However, it is the only secure way to create new accounts that have access to valuable information that is not self-created.</source>
          <target state="translated">Но это &lt;em&gt;много&lt;/em&gt; хлопот, и не очень Web 2.0. Тем не менее, это единственный безопасный способ создания новых учетных записей, которые имеют доступ к ценной информации, которая не создается самостоятельно.</target>
        </trans-unit>
        <trans-unit id="28c851e3c23baa12d952c7c21330cc5b4915d3fd" translate="yes" xml:space="preserve">
          <source>Checking password strength</source>
          <target state="translated">Проверка надежности пароля</target>
        </trans-unit>
        <trans-unit id="2099227ae53d0bb69ac620e426264f3954bf9b76" translate="yes" xml:space="preserve">
          <source>Credentials can be compromised, whether by exploits, passwords being written down and lost, laptops with keys being stolen, or users entering logins into phishing sites.  Logins can be further protected with two-factor authentication, which uses out-of-band factors such as single-use codes received from a phone call, SMS message, app, or dongle. Several providers offer two-factor authentication services.</source>
          <target state="translated">Учетные данные могут быть скомпрометированы,будь то эксплойты,записанные и потерянные пароли,ноутбуки с украденными ключами или пользователи,вводящие логины на фишинговые сайты.Логины могут быть дополнительно защищены двухфакторной аутентификацией,которая использует внеполосные факторы,такие как одноразовые коды,полученные от телефонного звонка,SMS-сообщения,приложения или донгл.Несколько провайдеров предлагают услуги двухфакторной аутентификации.</target>
        </trans-unit>
        <trans-unit id="5137f3cf30b10d748e2139da3d3ff6a7f14769cd" translate="yes" xml:space="preserve">
          <source>Definitive Article</source>
          <target state="translated">Определительная статья</target>
        </trans-unit>
        <trans-unit id="0852a700c5db81b3b623eebfdac10924f4cb53cc" translate="yes" xml:space="preserve">
          <source>Digest Authentication is a standards-based approach supported in all major browsers and servers, that will not send a password even over a secure channel.</source>
          <target state="translated">Digest Authentication-это стандартный подход,поддерживаемый во всех основных браузерах и серверах,который не посылает пароль даже по защищенному каналу.</target>
        </trans-unit>
        <trans-unit id="5724bf395ae05f9a76fbdee9b6b10fda30c0d956" translate="yes" xml:space="preserve">
          <source>Discussion about rainbow tables and how to defend against them, and against other threads. Includes extensive discussion.</source>
          <target state="translated">Обсуждение радужных столов и способов защиты от них,а также от других нитей.Включает широкое обсуждение.</target>
        </trans-unit>
        <trans-unit id="75200dc7711cafface63f254986b6f2ef192e789" translate="yes" xml:space="preserve">
          <source>Discussion: Coding Horror: You're Probably Storing Passwords Incorrectly</source>
          <target state="translated">Обсуждение:Кодирующий ужас:Ты,наверное,неправильно хранишь пароли.</target>
        </trans-unit>
        <trans-unit id="9700753881a2fcb4aa5513ef58545733b290ed25" translate="yes" xml:space="preserve">
          <source>Distributing the attempts on a botnet to prevent IP address flagging</source>
          <target state="translated">Распространение попыток в бот-сети для предотвращения помечания IP-адресов</target>
        </trans-unit>
        <trans-unit id="ac89eed1b4b4a5aef7852b1e48fc27ff64d4c4f4" translate="yes" xml:space="preserve">
          <source>Do NOT try to implement your own login form or database storage of passwords, unless 
the data being stored is valueless at account creation and self-generated (that is, web 2.0 style like Facebook, &lt;a href=&quot;http://en.wikipedia.org/wiki/Flickr&quot;&gt;Flickr&lt;/a&gt;, etc.)</source>
          <target state="translated">НЕ ПЫТАЙТЕСЬ реализовать собственную форму входа или хранилище паролей в базе данных, если только сохраняемые данные не имеют ценности при создании учетной записи и самогенерируются (то есть в стиле web 2.0, например, Facebook, &lt;a href=&quot;http://en.wikipedia.org/wiki/Flickr&quot;&gt;Flickr&lt;/a&gt; и т. Д.).</target>
        </trans-unit>
        <trans-unit id="b407c4a28fed3e87fb4c9cd858d136f953302fac" translate="yes" xml:space="preserve">
          <source>DoS attacking this final login throttling scheme would be &lt;strong&gt;&lt;em&gt;very&lt;/em&gt;&lt;/strong&gt; impractical. And as a final touch, always allow persistent (cookie) logins (and/or a CAPTCHA-verified login form) to pass through, so legitimate users won't even be delayed &lt;em&gt;while the attack is in progress&lt;/em&gt;. That way, the very impractical DoS attack becomes an &lt;em&gt;extremely&lt;/em&gt; impractical attack.</source>
          <target state="translated">DoS, атакующий эту последнюю схему регулирования входа в систему, будет &lt;strong&gt;&lt;em&gt;очень&lt;/em&gt;&lt;/strong&gt; непрактичным. И, наконец, всегда разрешайте проходить постоянные (cookie) входы в систему (и / или проверенную CAPTCHA форму входа), чтобы законные пользователи даже не задерживались &lt;em&gt;во время атаки&lt;/em&gt; . Таким образом, очень непрактичная DoS-атака становится &lt;em&gt;чрезвычайно&lt;/em&gt; непрактичной.</target>
        </trans-unit>
        <trans-unit id="9e7a3a3d5fd3f56cab117f9ef1747e6b549435b4" translate="yes" xml:space="preserve">
          <source>DoS attacking this scheme would be quite impractical, but certainly doable. Also, it might be relevant to note that such a long delay can be very annoying for a legitimate user. Forgetful users will dislike you.</source>
          <target state="translated">DoS-атака на эту схему была бы весьма непрактична,но,безусловно,выполнима.Также может быть уместно отметить,что такая длительная задержка может быть очень раздражающей для законного пользователя.Забывчивым пользователям вы будете неприятны.</target>
        </trans-unit>
        <trans-unit id="da0e8494de518dd7e8a6918d639ad934c79f4341" translate="yes" xml:space="preserve">
          <source>DoS attacking this scheme would be very impractical, since the resulting lockout time is slightly larger than the sum of the previous lockout times.</source>
          <target state="translated">DoS-атака на эту схему была бы очень непрактична,так как полученное время блокировки немного больше суммы предыдущих времен блокировки.</target>
        </trans-unit>
        <trans-unit id="0104c9c8e1e30ebe0dea4b4e83fd6608c1f8882a" translate="yes" xml:space="preserve">
          <source>Don't &lt;em&gt;reset&lt;/em&gt; a forgotten password to an autogenerated strong password - such passwords are notoriously hard to remember, which means the user must either change it or write it down - say, on a bright yellow Post-It on the edge of their monitor. Instead of setting a new password, just let users pick a new one right away - which is what they want to do anyway. (An exception to this might be if the users are universally using a password manager to store/manage passwords that would normally be impossible to remember without writing it down).</source>
          <target state="translated">Не &lt;em&gt;сбрасывайте&lt;/em&gt; забытый пароль на надежный автоматически сгенерированный пароль - такие пароли, как известно, трудно запомнить, а это означает, что пользователь должен либо изменить его, либо записать - скажем, на ярко-желтом пост-крае на краю монитора. Вместо того, чтобы устанавливать новый пароль, просто позвольте пользователям сразу выбрать новый - что они и хотят делать в любом случае. (Исключением из этого может быть, если пользователи повсеместно используют диспетчер паролей для хранения / управления паролями, которые обычно невозможно запомнить без записи).</target>
        </trans-unit>
        <trans-unit id="2de2a3f83a86845063f5b948c1410f326797445a" translate="yes" xml:space="preserve">
          <source>Don't ever store passwords as plaintext in the database. Not even if you don't care about the security of your own site. Assume that some of your users will reuse the password of their online bank account. So, store the hashed password, and throw away the original. And make sure the password doesn't show up in access logs or application logs. OWASP &lt;a href=&quot;https://www.owasp.org/index.php/Password_Storage_Cheat_Sheet#Impose_infeasible_verification_on_attacker&quot;&gt;recommends the use of Argon2&lt;/a&gt; as your first choice for new applications. If this is not available, PBKDF2 or scrypt should be used instead. And finally if none of the above are available, use bcrypt.</source>
          <target state="translated">Никогда не храните пароли в виде открытого текста в базе данных. Даже если вы не заботитесь о безопасности своего сайта. Предположим, что некоторые из ваших пользователей будут повторно использовать пароль своего банковского счета в Интернете. Итак, сохраните хешированный пароль и выбросьте оригинал. И убедитесь, что пароль не отображается в журналах доступа или журналах приложений. OWASP &lt;a href=&quot;https://www.owasp.org/index.php/Password_Storage_Cheat_Sheet#Impose_infeasible_verification_on_attacker&quot;&gt;рекомендует использовать Argon2 в&lt;/a&gt; качестве первого выбора для новых приложений. Если это недоступно, следует использовать PBKDF2 или scrypt. И, наконец, если ничего из перечисленного не доступно, используйте bcrypt.</target>
        </trans-unit>
        <trans-unit id="0ee655cfc09904ea89a7dd7a61686e2332a87c87" translate="yes" xml:space="preserve">
          <source>Dos and Don&amp;rsquo;ts of Client Authentication on the Web (very readable MIT research paper)</source>
          <target state="translated">Что нужно и чего не нужно для аутентификации клиентов в Интернете (очень читабельная статья MIT)</target>
        </trans-unit>
        <trans-unit id="a9d3cd24a6e8137771c2eb5231b4292534173c59" translate="yes" xml:space="preserve">
          <source>Dos and Don'ts of Client Authentication on the Web (PDF)</source>
          <target state="translated">Дос и не досмотр аутентификации клиентов в Интернете (PDF/англ.)</target>
        </trans-unit>
        <trans-unit id="a6df6aab068ddfca1dd445a099c04ab77b30380c" translate="yes" xml:space="preserve">
          <source>E-mail validation</source>
          <target state="translated">проверка электронной почты</target>
        </trans-unit>
        <trans-unit id="26a0e3922cf6459a169fb69c5cedf0594a660c30" translate="yes" xml:space="preserve">
          <source>Editing the official answer</source>
          <target state="translated">Редактирование официального ответа</target>
        </trans-unit>
        <trans-unit id="2a5bf7ecd3c3bb79697e4b75902e93bf1d1f63ef" translate="yes" xml:space="preserve">
          <source>Email providers are already the de-facto primary identity providers online. Current password reset flows usually let you take control of an account if you can prove that you control that account&amp;rsquo;s associated email address.</source>
          <target state="translated">Поставщики электронной почты уже де-факто являются основными поставщиками удостоверений в Интернете. Текущие потоки сброса пароля обычно позволяют вам контролировать учетную запись, если вы можете доказать, что вы контролируете адрес электронной почты, связанный с этой учетной записью.</target>
        </trans-unit>
        <trans-unit id="ca82a8d4544f8e713eb61230c51166734ade8bc0" translate="yes" xml:space="preserve">
          <source>Enough With The Rainbow Tables: What You Need To Know About Secure Password Schemes</source>
          <target state="translated">Хватит о &quot;Радужных таблицах&quot;:Что вам нужно знать о схемах безопасного использования паролей?</target>
        </trans-unit>
        <trans-unit id="2c81c599e2b514bdc593f3664a3e0b805bb4f759" translate="yes" xml:space="preserve">
          <source>Even with user-specified questions, it is highly likely that most users will choose either:</source>
          <target state="translated">Даже при наличии вопросов,заданных пользователем,весьма вероятно,что большинство пользователей выберет и то,и другое:</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="94eb0c2edb61f0c161e93c8ae7a3d970650bcabd" translate="yes" xml:space="preserve">
          <source>Financial websites such as banks and credit cards, on the other hand, only have sensitive data and should not allow auto-login or a low-security mode.</source>
          <target state="translated">Финансовые веб-сайты,такие как банки и кредитные карты,с другой стороны,имеют только конфиденциальные данные и не должны допускать автоматического входа в систему или режим низкой безопасности.</target>
        </trans-unit>
        <trans-unit id="055ea5e2a84b88f78196f3343fc0481996477833" translate="yes" xml:space="preserve">
          <source>First, a strong caveat that this answer is not the best fit for this exact question. It should definitely not be the top answer!</source>
          <target state="translated">Во-первых,сильная оговорка,что этот ответ не подходит для данного вопроса.Он определенно не должен быть лучшим ответом!</target>
        </trans-unit>
        <trans-unit id="6f4757517fb79956122368fef702663232eb1875" translate="yes" xml:space="preserve">
          <source>First, have a look at the numbers: &lt;a href=&quot;https://www.lockdown.co.uk/?pg=combi&amp;amp;s=articles&quot;&gt;Password Recovery Speeds - How long will your password stand up&lt;/a&gt;</source>
          <target state="translated">Во-первых, взгляните на цифры: &lt;a href=&quot;https://www.lockdown.co.uk/?pg=combi&amp;amp;s=articles&quot;&gt;скорость восстановления пароля - как долго будет&lt;/a&gt; действовать ваш пароль</target>
        </trans-unit>
        <trans-unit id="a0009187974f9e3ce61f9861d9dbd0e82cd7d920" translate="yes" xml:space="preserve">
          <source>First, take some time to read &lt;a href=&quot;https://paragonie.com/blog/2015/04/secure-authentication-php-with-long-term-persistence&quot;&gt;Paragon Initiative's article&lt;/a&gt; on the subject. You'll need to get a bunch of elements right, and the article does a great job of explaining each.</source>
          <target state="translated">Во-первых, найдите время, чтобы прочитать статью &lt;a href=&quot;https://paragonie.com/blog/2015/04/secure-authentication-php-with-long-term-persistence&quot;&gt;Paragon Initiative&lt;/a&gt; на эту тему. Вам нужно правильно составить кучу элементов, и статья отлично объясняет каждый из них.</target>
        </trans-unit>
        <trans-unit id="9983f7fe8e0548ed05592e10b4d8737faf0870ba" translate="yes" xml:space="preserve">
          <source>First, we are confusing the initial creation of an account (with a password) with the re-checking of the password subsequently. If I am Flickr and creating your site for the first time, the new user has access to zero value (blank web space). I truly do not care if the person creating the account is lying about their name. If I am creating an account of the hospital intranet/extranet, the value lies in all the medical records, and so I &lt;em&gt;do&lt;/em&gt; care about the identity (*) of the account creator.</source>
          <target state="translated">Во-первых, мы путаем первоначальное создание учетной записи (с паролем) с последующей повторной проверкой пароля. Если я Flickr и создаю ваш сайт впервые, новый пользователь имеет доступ к нулевому значению (пустое веб-пространство). Я действительно не волнуюсь, если человек, создающий учетную запись, лжет об их имени. Если я создаю учетную запись больничной интрасети / экстрасети, ценность заключается во всех медицинских записях, и поэтому меня волнует личность (*) создателя учетной записи.</target>
        </trans-unit>
        <trans-unit id="43fce5a38d3ccc4394c31ed312d1e3f3bbcdb4f5" translate="yes" xml:space="preserve">
          <source>First, you'll want to read this small article for a reality check: &lt;a href=&quot;http://www.whatsmypass.com/?p=415&quot;&gt;The 500 most common passwords&lt;/a&gt;</source>
          <target state="translated">Во-первых, вы захотите прочитать эту небольшую статью для проверки реальности: &lt;a href=&quot;http://www.whatsmypass.com/?p=415&quot;&gt;500 самых распространенных паролей&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fc25ac14ee563260aa5557fc0a6773974bd214de" translate="yes" xml:space="preserve">
          <source>For browsers that don&amp;rsquo;t support the Verified Email Protocol (currently all of them), Mozilla provides a shim which implements the protocol in client-side JavaScript code.</source>
          <target state="translated">Для браузеров, которые не поддерживают Проверенный протокол электронной почты (в настоящее время все они), Mozilla предоставляет оболочку, которая реализует протокол в клиентском коде JavaScript.</target>
        </trans-unit>
        <trans-unit id="a432583ba49ebf5724dd0a7840811c9356950ca3" translate="yes" xml:space="preserve">
          <source>For email services that don&amp;rsquo;t support the Verified Email Protocol, the protocol allows third parties to act as a trusted intermediary, asserting that they&amp;rsquo;ve verified a user&amp;rsquo;s ownership of an account. It is not desirable to have a large number of such third parties; this capability is intended only to allow an upgrade path, and it is much preferred that email services provide these assertions themselves.</source>
          <target state="translated">Для почтовых служб, которые не поддерживают проверенный почтовый протокол, этот протокол позволяет третьим сторонам выступать в качестве доверенных посредников, утверждая, что они подтвердили право собственности пользователя на учетную запись. Не желательно иметь большое количество таких третьих лиц; эта возможность предназначена только для разрешения пути обновления, и очень предпочтительно, чтобы службы электронной почты сами предоставляли эти утверждения.</target>
        </trans-unit>
        <trans-unit id="1a29c9f448b4e82925d7464abc91594ed7ceb096" translate="yes" xml:space="preserve">
          <source>Forgotten username/password functionality</source>
          <target state="translated">Забыли функциональность пароля пользователя</target>
        </trans-unit>
        <trans-unit id="4c44940eff64d8851ea63a4d7d267c3700ac7b6f" translate="yes" xml:space="preserve">
          <source>Form-based authentication for websites</source>
          <target state="translated">Форм-аутентификация для веб-сайтов</target>
        </trans-unit>
        <trans-unit id="8c3c600b9979573648ec2a7bc6061a82458b6242" translate="yes" xml:space="preserve">
          <source>Form-based authentication has a big drawback, which is an increased risk of &lt;a href=&quot;http://en.wikipedia.org/wiki/Phishing&quot;&gt;phishing&lt;/a&gt;. Users are asked to enter sensitive information into an area controlled by a remote entity, rather than an area controlled by their User Agent (browser).</source>
          <target state="translated">Аутентификация на основе форм имеет большой недостаток - повышенный риск &lt;a href=&quot;http://en.wikipedia.org/wiki/Phishing&quot;&gt;фишинга&lt;/a&gt; . Пользователей просят ввести конфиденциальную информацию в область, контролируемую удаленным объектом, а не в область, контролируемую их пользовательским агентом (браузером).</target>
        </trans-unit>
        <trans-unit id="0ef26769a71921c31789a2a8774d89fdae723d09" translate="yes" xml:space="preserve">
          <source>Forum discussion about a Coding Horror article.</source>
          <target state="translated">Обсуждение на форуме статьи об ужасе кодирования.</target>
        </trans-unit>
        <trans-unit id="c026b4ef95ca288f3bb81cc79228ab85b91d71b2" translate="yes" xml:space="preserve">
          <source>Forum discussion on the subject</source>
          <target state="translated">Обсуждение в рамках форума на эту тему</target>
        </trans-unit>
        <trans-unit id="da292fcb68a4e760db8e5e44afc487fef3ebd153" translate="yes" xml:space="preserve">
          <source>From your point-of-view, you simply know this: that &lt;em&gt;anyone&lt;/em&gt; who legitimately winds-up at your website &lt;em&gt;must&lt;/em&gt; be accompanied by [an environment-variable magically containing ...] a &quot;token.&quot; (&lt;em&gt;i.e.&lt;/em&gt; The absence of such a token must be immediate grounds for &lt;code&gt;404 Not Found&lt;/code&gt;.)</source>
          <target state="translated">С вашей точки зрения, вы просто знаете это: &lt;em&gt;любой,&lt;/em&gt; кто законно попадает на ваш сайт, &lt;em&gt;должен&lt;/em&gt; сопровождаться [переменным окружения, магически содержащим ...] &amp;laquo;жетон&amp;raquo;. ( &lt;em&gt;т.е.&lt;/em&gt; отсутствие такого токена должно быть непосредственным основанием для &lt;code&gt;404 Not Found&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="6711dc17a4ea41f713c35b2df6b7663446e7a514" translate="yes" xml:space="preserve">
          <source>Generally speaking, you have three choices that are all effective against brute-force attacks &lt;em&gt;(and dictionary attacks, but since you are already employing a strong passwords policy, they shouldn't be an issue)&lt;/em&gt;:</source>
          <target state="translated">Вообще говоря, у вас есть три варианта, которые эффективны против атак методом перебора &lt;em&gt;(и атак по словарю, но, поскольку вы уже используете политику надежных паролей, они не должны быть проблемой)&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="a740b3ba607923f583d5988ec528cdaf1406a543" translate="yes" xml:space="preserve">
          <source>Given the perceived (though now &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;avoidable&lt;/a&gt;) cost and technical difficulty of setting up an SSL certificate on your website, some developers are tempted to roll their own in-browser hashing or encryption schemes in order to avoid passing cleartext logins over an unsecured wire.</source>
          <target state="translated">Учитывая предполагаемую (хотя сейчас ее &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;можно избежать&lt;/a&gt; ) стоимость и техническую сложность настройки SSL-сертификата на вашем веб-сайте, некоторые разработчики испытывают желание использовать свои собственные схемы хеширования или шифрования в браузере, чтобы избежать передачи логинов в незашифрованном виде по незащищенному каналу.</target>
        </trans-unit>
        <trans-unit id="40da55bdbda9f92b4cb162d0fa0d30ae87ad8e57" translate="yes" xml:space="preserve">
          <source>HTTP basic authentication</source>
          <target state="translated">базовая аутентификация HTTP</target>
        </trans-unit>
        <trans-unit id="a7a3e467744831641be2fe6f9f61a5eb1eab7a0c" translate="yes" xml:space="preserve">
          <source>Hashes by themselves are also insecure. For instance, identical passwords mean identical hashes--this makes hash lookup tables an effective way of cracking lots of passwords at once. Instead, store the &lt;strong&gt;salted&lt;/strong&gt; hash. A salt is a string appended to the password prior to hashing - use a different (random) salt per user. The salt is a public value, so you can store them with the hash in the database. See &lt;a href=&quot;http://www.codeproject.com/Articles/704865/Salted-Password-Hashing-Doing-it-Right&quot;&gt;here&lt;/a&gt; for more on this.</source>
          <target state="translated">Хэши сами по себе также небезопасны. Например, идентичные пароли означают идентичные хэши - это делает таблицы поиска хешей эффективным способом взлома большого количества паролей одновременно. Вместо этого храните &lt;strong&gt;соленый&lt;/strong&gt; хеш. Соль - это строка, добавляемая к паролю перед хэшированием - используйте разные (случайные) соли для каждого пользователя. Соль является общедоступной ценностью, поэтому вы можете хранить их с хешем в базе данных. Смотрите &lt;a href=&quot;http://www.codeproject.com/Articles/704865/Salted-Password-Hashing-Doing-it-Right&quot;&gt;здесь&lt;/a&gt; для получения дополнительной информации об этом.</target>
        </trans-unit>
        <trans-unit id="fd6ee87981c059ffe762f87d9835ba6d3ad5cb0a" translate="yes" xml:space="preserve">
          <source>Here, the best practice would be &lt;strong&gt;logging the number of failed logins, system-wide&lt;/strong&gt;, and using a running average of your site's bad-login frequency as the basis for an upper limit that you then impose on all users.</source>
          <target state="translated">В этом случае лучше всего &lt;strong&gt;регистрировать количество неудачных входов в систему в масштабе всей системы&lt;/strong&gt; и использовать скользящее среднее значение частоты &lt;strong&gt;неудачных входов в систему&lt;/strong&gt; вашего сайта в качестве основы для верхнего предела, который вы затем устанавливаете для всех пользователей.</target>
        </trans-unit>
        <trans-unit id="fd97645c83ca1f0b0cb1e045d47f5c3cb7a28597" translate="yes" xml:space="preserve">
          <source>How to log in</source>
          <target state="translated">Как войти в систему</target>
        </trans-unit>
        <trans-unit id="2e2ac11edd26bbdc67b5b782fb1bfa9b679a85ca" translate="yes" xml:space="preserve">
          <source>How to log out</source>
          <target state="translated">Как выйти из системы</target>
        </trans-unit>
        <trans-unit id="b242ffd64cf4e91fee323fe99df436b843031995" translate="yes" xml:space="preserve">
          <source>How to remain logged in</source>
          <target state="translated">Как остаться зарегистрированным</target>
        </trans-unit>
        <trans-unit id="2a1b49d2e2c078dfbf427749a4c26aa10b7064f2" translate="yes" xml:space="preserve">
          <source>How to store passwords</source>
          <target state="translated">Как хранить пароли</target>
        </trans-unit>
        <trans-unit id="396f12c235f8be0ad58a8e4b445d0acff62942ae" translate="yes" xml:space="preserve">
          <source>However, I do not recommend this, except for public, low-value services. This is an issue with some of the other answers above - do not try an re-implement server-side authentication mechanisms - this problem has been solved and is supported by most major browsers. Do not use cookies. Do not store anything in your own hand-rolled database. Just ask, per request, if the request is authenticated. Everything else should be supported by configuration and third-party trusted software.</source>
          <target state="translated">Однако я не рекомендую этого,за исключением общественных,малоценных услуг.Это проблема,связанная с некоторыми другими ответами,приведенными выше-не пытайтесь повторно внедрить механизмы аутентификации на стороне сервера-эта проблема была решена и поддерживается большинством основных браузеров.Не используйте куки.Не храните ничего в собственной ручной базе данных.Просто спрашивайте по запросу,если запрос аутентифицирован.Все остальное должно поддерживаться конфигурацией и сторонним доверенным программным обеспечением.</target>
        </trans-unit>
        <trans-unit id="35336df7d00b75c54f5da32119b429c80525c3f8" translate="yes" xml:space="preserve">
          <source>I already mentioned why you should &lt;strong&gt;never use security questions&lt;/strong&gt; for handling forgotten/lost user passwords; it also goes without saying that you should never e-mail users their actual passwords. There are at least two more all-too-common pitfalls to avoid in this field:</source>
          <target state="translated">Я уже упоминал, почему вы &lt;strong&gt;никогда не&lt;/strong&gt; должны &lt;strong&gt;использовать вопросы безопасности&lt;/strong&gt; для обработки забытых / утерянных паролей пользователей; Само собой разумеется, что вы никогда не должны отправлять пользователям по электронной почте их действительные пароли. В этой области следует избегать как минимум еще двух слишком распространенных ошибок:</target>
        </trans-unit>
        <trans-unit id="359c53abe1e06714c19e031a3d67bc68ab3e0368" translate="yes" xml:space="preserve">
          <source>I also posted a question with &lt;a href=&quot;https://stackoverflow.com/questions/479233/what-is-the-best-distributed-brute-force-countermeasure&quot;&gt;more details and a really good discussion of how to avoid tricky pitfals&lt;/a&gt; in fending off distributed brute force attacks</source>
          <target state="translated">Я также опубликовал вопрос с &lt;a href=&quot;https://stackoverflow.com/questions/479233/what-is-the-best-distributed-brute-force-countermeasure&quot;&gt;более подробной информацией и действительно хорошим обсуждением того, как избежать хитрых питалов&lt;/a&gt; в отражении атак с использованием грубой силы.</target>
        </trans-unit>
        <trans-unit id="552c8b130191ea16fccf86d6a9186258c92a2d85" translate="yes" xml:space="preserve">
          <source>I believe this can also be used just fine with a login/authentication form.</source>
          <target state="translated">Я считаю,что это также может быть использовано в форме логинаутентификации.</target>
        </trans-unit>
        <trans-unit id="58d1e47f90e80b52a252896eadaa4328f0a6b31f" translate="yes" xml:space="preserve">
          <source>I call it the &lt;strong&gt;Dummy Field&lt;/strong&gt; (though I haven't invented this so don't credit me).</source>
          <target state="translated">Я называю это &lt;strong&gt;Пустышкой&lt;/strong&gt; (хотя я не изобрел этого, так что не надо мне доверять).</target>
        </trans-unit>
        <trans-unit id="51d616a1c6a5e687603e42051a1947e650345bcd" translate="yes" xml:space="preserve">
          <source>I do not think the above answer is &quot;wrong&quot; but there are large areas of authentication that are not touched upon (or rather the emphasis is on &quot;how to implement cookie sessions&quot;, not on &quot;what options are available and what are the trade-offs&quot;.</source>
          <target state="translated">Я не думаю,что вышеприведенный ответ &quot;неправильный&quot;,но есть большие области аутентификации,которые не затрагиваются (вернее,акцент делается на &quot;как реализовать куки-сессии&quot;,а не на &quot;какие опции доступны,и какие компромиссы&quot;).</target>
        </trans-unit>
        <trans-unit id="234454f3c20ac324649e33650f7a78ebefe0cf90" translate="yes" xml:space="preserve">
          <source>I dont't know whether it was best to answer this as an answer or as a comment. I opted for the first option.</source>
          <target state="translated">Я не знаю,лучше ли было ответить на это как на ответ или как на комментарий.Я выбрал первый вариант.</target>
        </trans-unit>
        <trans-unit id="090605f11afa494248191955e5ee70233bd277e2" translate="yes" xml:space="preserve">
          <source>I just thought I'd share this solution that I found to be working just fine.</source>
          <target state="translated">Я просто подумал,что поделюсь с тобой решением,которое,как мне кажется,отлично работает.</target>
        </trans-unit>
        <trans-unit id="846fe96011a7002d9135a22ab8068ef55c9146e6" translate="yes" xml:space="preserve">
          <source>I used this method on a guestbook in combination with &lt;a href=&quot;http://en.wikipedia.org/wiki/CAPTCHA&quot;&gt;CAPTCHA&lt;/a&gt;, and I haven't seen a single spam post since. I had used a CAPTCHA-only solution before, but eventually, it resulted in about five spam posts every hour. Adding the dummy field in the form has stopped (at least until now) all the spam from appearing.</source>
          <target state="translated">Я использовал этот метод в гостевой книге в сочетании с &lt;a href=&quot;http://en.wikipedia.org/wiki/CAPTCHA&quot;&gt;CAPTCHA&lt;/a&gt; , и с тех пор я не видел ни одного спам-сообщения. Раньше я использовал решение только для CAPTCHA, но в итоге оно получало около пяти спам-сообщений каждый час. Добавление фиктивного поля в форму остановило (по крайней мере до сих пор) появление всего спама.</target>
        </trans-unit>
        <trans-unit id="b6d4b92eeb3592863419cde2a6152c7de7c64e87" translate="yes" xml:space="preserve">
          <source>I will go ahead and mention Mozilla&amp;rsquo;s proposed &lt;a href=&quot;https://browserid.org/&quot;&gt;BrowserID&lt;/a&gt; (or perhaps more precisely, the &lt;a href=&quot;https://wiki.mozilla.org/Identity/Verified_Email_Protocol/Latest&quot;&gt;Verified Email Protocol&lt;/a&gt;) in the spirit of finding an upgrade path to better approaches to authentication in the future.</source>
          <target state="translated">Я продолжу и упомяну предложенный Mozilla &lt;a href=&quot;https://browserid.org/&quot;&gt;BrowserID&lt;/a&gt; (или, точнее, &lt;a href=&quot;https://wiki.mozilla.org/Identity/Verified_Email_Protocol/Latest&quot;&gt;Проверенный почтовый протокол&lt;/a&gt; ) в духе поиска пути обновления для улучшения подходов к аутентификации в будущем.</target>
        </trans-unit>
        <trans-unit id="bc9c11bf6ed7710b34884d2f00080ae405fc5189" translate="yes" xml:space="preserve">
          <source>I would like to add one very important comment: -</source>
          <target state="translated">Я хотел бы добавить один очень важный комментарий:-</target>
        </trans-unit>
        <trans-unit id="0ca82fef2a32b5097bc2b8a6714ceaa59492e5aa" translate="yes" xml:space="preserve">
          <source>I&amp;rsquo;ll summarize it this way:</source>
          <target state="translated">Я подведу итог так:</target>
        </trans-unit>
        <trans-unit id="083a429183d693f1046288e656d2da6a9a2af83c" translate="yes" xml:space="preserve">
          <source>I'd like to add one suggestion I've used, based on defense in depth. You don't need to have the same auth&amp;amp;auth system for admins as regular users. You can have a separate login form on a separate url executing separate code for requests that will grant high privileges. This one can make choices that would be a total pain to regular users. One such that I've used is to actually scramble the login URL for admin access and email the admin the new URL. Stops any brute force attack right away as your new URL can be arbitrarily difficult (very long random string) but your admin user's only inconvenience is following a link in their email. The attacker no longer knows where to even POST to.</source>
          <target state="translated">Я хотел бы добавить одно предложение, которое я использовал, основанное на глубокой защите. Вам не нужно иметь ту же систему аутентификации и авторизации для администраторов, что и для обычных пользователей. У вас может быть отдельная форма входа в систему на отдельном URL, выполняющая отдельный код для запросов, которые предоставят высокие привилегии. Это может сделать выбор, который будет общей болью для обычных пользователей. Один из таких примеров, который я использовал, заключается в том, чтобы фактически зашифровать URL-адрес для доступа администратора и отправить администратору новый URL-адрес. Немедленно останавливает любую грубую атаку, так как ваш новый URL может быть произвольно сложным (очень длинная случайная строка), но единственное неудобство вашего администратора - переход по ссылке в его электронном письме. Злоумышленник больше не знает, куда даже отправлять сообщения.</target>
        </trans-unit>
        <trans-unit id="f7d467c663e66cb7f264b6751a1994846cbe912f" translate="yes" xml:space="preserve">
          <source>If at all possible, make sure the session cookie has the secure and HTTP Only flags set when sent to the browser. The HttpOnly flag provides some protection against the cookie being read through XSS attack. The secure flag ensures that the cookie is only sent back via HTTPS, and therefore protects against network sniffing attacks. The value of the cookie should not be predictable. Where a cookie referencing a non-existent session is presented, its value should be replaced immediately to prevent &lt;a href=&quot;https://www.owasp.org/index.php/Session_fixation&quot;&gt;session fixation&lt;/a&gt;.</source>
          <target state="translated">Если это вообще возможно, убедитесь, что при отправке в браузер в файле cookie сеанса установлены флаги secure и HTTP Only. Флаг HttpOnly обеспечивает некоторую защиту от cookie, читаемого через XSS-атаку. Флаг безопасности гарантирует, что куки отправляются обратно только через HTTPS, и, следовательно, защищает от сетевых атак. Значение куки не должно быть предсказуемым. Если файл cookie ссылается на несуществующий сеанс, его значение следует немедленно заменить, чтобы предотвратить &lt;a href=&quot;https://www.owasp.org/index.php/Session_fixation&quot;&gt;фиксацию сеанса&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="05a40820406ffb4581e8e6750a3ac4b5784853e0" translate="yes" xml:space="preserve">
          <source>If the connection between the client and server is unencrypted, everything you do is &lt;a href=&quot;https://stackoverflow.com/questions/14907581/ssl-and-man-in-the-middle-misunderstanding&quot;&gt;vulnerable to man-in-the-middle attacks&lt;/a&gt;. An attacker could replace the incoming javascript to break the hashing or send all credentials to their server, they could listen to client responses and impersonate the users perfectly, etc. etc. SSL with trusted Certificate Authorities is designed to prevent MitM attacks.</source>
          <target state="translated">Если соединение между клиентом и сервером не зашифровано, все, что вы делаете, &lt;a href=&quot;https://stackoverflow.com/questions/14907581/ssl-and-man-in-the-middle-misunderstanding&quot;&gt;уязвимо для атак &amp;laquo;человек посередине&amp;raquo;&lt;/a&gt; . Злоумышленник может заменить входящий JavaScript-код, чтобы прервать хеширование или отправить все учетные данные на свой сервер, он может прослушивать ответы клиентов и идеально выдавать себя за пользователей и т. Д. И т. Д. SSL с доверенными центрами сертификации предназначен для предотвращения атак MitM.</target>
        </trans-unit>
        <trans-unit id="a005965818e2683004bec583de84ca2d5c7d5f8f" translate="yes" xml:space="preserve">
          <source>If you are unfamiliar with session data, here's how it works: A single randomly-generated string is stored in an expiring cookie and used to reference a collection of data - the session data - which is stored on the server. If you are using an MVC framework, this is undoubtedly handled already.</source>
          <target state="translated">Если вы не знакомы с данными сессии,вот как это работает:Одна случайно сгенерированная строка хранится в файле cookie,срок действия которого истекает,и используется для ссылки на коллекцию данных-данные о сессии,которая хранится на сервере.Если вы используете фреймворк MVC,то,несомненно,это уже обработано.</target>
        </trans-unit>
        <trans-unit id="9bf51661f29e2e2b97a777af17d93aa3c2ad75df" translate="yes" xml:space="preserve">
          <source>If you don't have the time to look through the tables in that link, here's the list of them:</source>
          <target state="translated">Если у вас нет времени на просмотр таблиц по этой ссылке,вот их список:</target>
        </trans-unit>
        <trans-unit id="a9f82947c6f8dcc354957eb7fe3f008ee9248d9d" translate="yes" xml:space="preserve">
          <source>If you want to autologin your users, you can set a persistent cookie, but it should be distinct from a full-session cookie. You can set an additional flag that the user has auto-logged in, and needs to log in for real for sensitive operations. This is popular with shopping sites that want to provide you with a seamless, personalized shopping experience but still protect your financial details. For example, when you return to visit Amazon, they show you a page that looks like you're logged in, but when you go to place an order (or change your shipping address, credit card etc.), they ask you to confirm your password.</source>
          <target state="translated">Если вы хотите провести автологизацию пользователей,вы можете установить постоянный куки-файл,но он должен отличаться от полносерийного куки-файла.Вы можете установить дополнительный флаг,который позволяет пользователю автоматически входить в систему,и который необходим для выполнения важных операций.Это популярно на сайтах,занимающихся шопингом,которые хотят предоставить вам бесшовные,персонализированные возможности для совершения покупок,но в то же время защищают ваши финансовые данные.Например,когда вы возвращаетесь на Amazon,они показывают вам страницу,которая выглядит так,как будто вы вошли в систему,но когда вы идете,чтобы разместить заказ (или изменить адрес доставки,кредитную карту и т.д.),они просят вас,чтобы подтвердить ваш пароль.</target>
        </trans-unit>
        <trans-unit id="2a3aa3e666ad28239fd17e0d9ca973882c20bb50" translate="yes" xml:space="preserve">
          <source>In essence, the only &lt;strong&gt;practical&lt;/strong&gt; way to protect against wiretapping/packet sniffing during login is by using HTTPS or another certificate-based encryption scheme (for example, &lt;a href=&quot;https://en.wikipedia.org/wiki/Transport_Layer_Security&quot;&gt;TLS&lt;/a&gt;) or a proven &amp;amp; tested challenge-response scheme (for example, the &lt;a href=&quot;https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange&quot;&gt;Diffie-Hellman&lt;/a&gt;-based SRP). &lt;em&gt;Any other method can be easily circumvented&lt;/em&gt; by an eavesdropping attacker.</source>
          <target state="translated">По сути, единственный &lt;strong&gt;практический&lt;/strong&gt; способ защиты от прослушивания телефонных разговоров / перехвата пакетов во время входа в систему заключается в использовании HTTPS или другой схемы шифрования на основе сертификатов (например, &lt;a href=&quot;https://en.wikipedia.org/wiki/Transport_Layer_Security&quot;&gt;TLS&lt;/a&gt; ) или проверенной и проверенной схемы запрос-ответ (например, &lt;a href=&quot;https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange&quot;&gt;Диффи-Хеллмана).&lt;/a&gt; SRP). &lt;em&gt;Любой другой метод может быть легко обойден&lt;/em&gt; подслушивающим злоумышленником.</target>
        </trans-unit>
        <trans-unit id="2544113bc111cfaa02b8dad7705eb320ec051b0e" translate="yes" xml:space="preserve">
          <source>In short: you just have to insert this into your &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; and check for it to be empty at when validating:</source>
          <target state="translated">Вкратце: вам просто нужно вставить это в вашу &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; и проверить, чтобы она была пустой при проверке:</target>
        </trans-unit>
        <trans-unit id="5889d9ac21ea7878fc3980b6f8fb4739068f29ad" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Remember your password&lt;/strong&gt; forms, an attacker could potentially check a full list of emails and detect which are registered to the system (see link below).</source>
          <target state="translated">В формах &amp;laquo; &lt;strong&gt;Запомнить ваш пароль&amp;raquo;&lt;/strong&gt; злоумышленник может проверить полный список электронных писем и определить, какие из них зарегистрированы в системе (см. Ссылку ниже).</target>
        </trans-unit>
        <trans-unit id="b63daf6854097ee286d453fcdaa4ea9d7d846b17" translate="yes" xml:space="preserve">
          <source>In the end, it's a tradeoff - what is the cost of a security breach vs the cost of implementing more secure approaches. One day, we may see a proper &lt;a href=&quot;http://en.wikipedia.org/wiki/Public-key_infrastructure&quot;&gt;PKI&lt;/a&gt; widely accepted and so no more own rolled authentication forms and databases. One day...</source>
          <target state="translated">В конце концов, это компромисс - какова стоимость нарушения безопасности по сравнению со стоимостью внедрения более безопасных подходов. Однажды, мы можем увидеть широкое признание правильной &lt;a href=&quot;http://en.wikipedia.org/wiki/Public-key_infrastructure&quot;&gt;PKI,&lt;/a&gt; и больше не будет собственных свернутых форм аутентификации и баз данных. Однажды...</target>
        </trans-unit>
        <trans-unit id="0635ff3ae1d3558d900b0d72cf905e6930f16a3d" translate="yes" xml:space="preserve">
          <source>Introductory article about storing passwords</source>
          <target state="translated">Вводная статья о хранении паролей</target>
        </trans-unit>
        <trans-unit id="5e735dc6ff9a579700296dcebbafce05242f5c1e" translate="yes" xml:space="preserve">
          <source>It should include topics such as:</source>
          <target state="translated">Она должна включать такие темы,как..:</target>
        </trans-unit>
        <trans-unit id="a6420257e778a00afc297ad00fbecf2ebe7c8b6a" translate="yes" xml:space="preserve">
          <source>It should not include things like:</source>
          <target state="translated">Это не должно включать в себя такие вещи:</target>
        </trans-unit>
        <trans-unit id="b1ce4421333cb720d377733655d21a7298f4e002" translate="yes" xml:space="preserve">
          <source>It takes &lt;em&gt;virtually no time&lt;/em&gt; to crack a weak password, even if you're cracking it with an abacus</source>
          <target state="translated">Взлом слабого пароля &lt;em&gt;практически не&lt;/em&gt; займет &lt;em&gt;времени&lt;/em&gt; , даже если вы взломаете его со счетом</target>
        </trans-unit>
        <trans-unit id="f95b8ec5420157ff1e1b91b761a8ebd2d92a665b" translate="yes" xml:space="preserve">
          <source>It takes &lt;em&gt;virtually no time&lt;/em&gt; to crack an alphanumeric 9-character password if it is &lt;strong&gt;case insensitive&lt;/strong&gt;</source>
          <target state="translated">Взлом буквенно-цифрового 9-символьного пароля &lt;em&gt;практически не&lt;/em&gt; занимает &lt;em&gt;времени,&lt;/em&gt; если он &lt;em&gt;не&lt;/em&gt; учитывает &lt;strong&gt;регистр&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2183ae63555a89f9b9da5626b8c677c779b62650" translate="yes" xml:space="preserve">
          <source>It takes &lt;em&gt;virtually no time&lt;/em&gt; to crack an intricate, symbols-and-letters-and-numbers, upper-and-lowercase password if it is &lt;strong&gt;less than 8 characters long&lt;/strong&gt; (a desktop PC can search the entire keyspace up to 7 characters in a matter of days or even hours)</source>
          <target state="translated">Для взлома сложного пароля, символов и букв, цифр, прописных и строчных букв &lt;em&gt;практически не&lt;/em&gt; требуется &lt;em&gt;времени,&lt;/em&gt; если его &lt;strong&gt;длина меньше 8 символов&lt;/strong&gt; (настольный ПК может выполнить поиск во всем пространстве ключей до 7 символов за раз дней или даже часов)</target>
        </trans-unit>
        <trans-unit id="ca83a47062492ece2469dd660cd19ba05f1e6542" translate="yes" xml:space="preserve">
          <source>Just as an aside, more advanced attackers will try to circumvent login throttling by 'spreading their activities':</source>
          <target state="translated">Подобно тому,как в стороне,более продвинутые злоумышленники будут пытаться обойти дросселирование входа,&quot;распространяя свою деятельность&quot;:</target>
        </trans-unit>
        <trans-unit id="454c33180f12a0ab4b94d928089179f2810d2e55" translate="yes" xml:space="preserve">
          <source>Kerberos and SPNEGO - single sign-on mechanisms with a trusted third party - basically the user verifies against a trusted third party. (NB this is not in any way the not to be trusted &lt;a href=&quot;http://en.wikipedia.org/wiki/OAuth&quot;&gt;OAuth&lt;/a&gt;)</source>
          <target state="translated">Kerberos и SPNEGO - механизмы единого входа с доверенной третьей стороной - в основном пользователь проверяет на соответствие доверенной третьей стороне. (NB это ни в коем случае не быть доверенным &lt;a href=&quot;http://en.wikipedia.org/wiki/OAuth&quot;&gt;OAuth&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="ef605fb60b2983e8337bddb62501975987044821" translate="yes" xml:space="preserve">
          <source>Know that CAPTCHA implementations are not created alike; they often aren't human-solvable, most of them are actually ineffective against bots, all of them are ineffective against cheap third-world labor (according to &lt;a href=&quot;https://en.wikipedia.org/wiki/OWASP&quot;&gt;OWASP&lt;/a&gt;, the current sweatshop rate is $12 per 500 tests), and some implementations may be technically illegal in some countries (see &lt;a href=&quot;https://www.owasp.org/index.php/Authentication_Cheat_Sheet&quot;&gt;OWASP Authentication Cheat Sheet&lt;/a&gt;). If you must use a CAPTCHA, use Google's &lt;a href=&quot;https://en.wikipedia.org/wiki/ReCAPTCHA&quot;&gt;reCAPTCHA&lt;/a&gt;, since it is OCR-hard by definition (since it uses already OCR-misclassified book scans) and tries very hard to be user-friendly.</source>
          <target state="translated">Знайте, что реализации CAPTCHA не созданы одинаково; они часто не поддаются решению человеком, большинство из них на самом деле неэффективны против ботов, все они неэффективны против дешевой рабочей силы в третьем мире (согласно &lt;a href=&quot;https://en.wikipedia.org/wiki/OWASP&quot;&gt;OWASP&lt;/a&gt; , текущая ставка в потогонной мастерской составляет $ 12 за 500 тестов), и некоторые реализации могут быть технически незаконно в некоторых странах (см. &lt;a href=&quot;https://www.owasp.org/index.php/Authentication_Cheat_Sheet&quot;&gt;бланк проверки подлинности OWASP&lt;/a&gt; ). Если вам необходимо использовать CAPTCHA, используйте &lt;a href=&quot;https://en.wikipedia.org/wiki/ReCAPTCHA&quot;&gt;reCAPTCHA от&lt;/a&gt; Google, поскольку по определению он является OCR-сложным (поскольку он использует уже неправильно классифицированное OCR сканирование книг) и очень старается быть удобным для пользователя.</target>
        </trans-unit>
        <trans-unit id="a204cab302bc515068a3e7ff919f172312b7a0da" translate="yes" xml:space="preserve">
          <source>List of external resources</source>
          <target state="translated">Список внешних ресурсов</target>
        </trans-unit>
        <trans-unit id="800d50f9971121d60ff4213c83ab585dc8eeb2d2" translate="yes" xml:space="preserve">
          <source>MUST-READ LINKS About Web Authentication</source>
          <target state="translated">ДОЛЖНЫ ЧИТАТЬ СЛОЖБЫ о веб-аутентификации</target>
        </trans-unit>
        <trans-unit id="e39ad0433ee22ae9d29fea44a1452bb36e98f70f" translate="yes" xml:space="preserve">
          <source>Managing cookies (including recommended settings)</source>
          <target state="translated">Управление куки-файлами (включая рекомендуемые настройки)</target>
        </trans-unit>
        <trans-unit id="13f082e2a62294764b183257e5521811d1761c76" translate="yes" xml:space="preserve">
          <source>Many corporations deploy &quot;internal use only&quot; websites which are, effectively, &quot;corporate applications&quot; that happen to have been implemented through URLs. These URLs can &lt;em&gt;(supposedly ...)&lt;/em&gt; only be resolved within &quot;the company's internal network.&quot; &lt;em&gt;(Which network magically includes all VPN-connected 'road warriors.')&lt;/em&gt;</source>
          <target state="translated">Многие корпорации развертывают веб-сайты &amp;laquo;только для внутреннего использования&amp;raquo;, которые, по сути, являются &amp;laquo;корпоративными приложениями&amp;raquo;, которые реализованы через URL-адреса. Эти URL-адреса могут &lt;em&gt;(предположительно ...)&lt;/em&gt; быть разрешены только внутри &amp;laquo;внутренней сети компании&amp;raquo;. &lt;em&gt;(Какая сеть волшебным образом включает в себя всех подключенных к VPN &amp;laquo;дорожных воинов&amp;raquo;.)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d428631e07ab70149afe871ed89abba6b41c7b09" translate="yes" xml:space="preserve">
          <source>Mozilla is a nonprofit with &lt;a href=&quot;http://www.mozilla.org/about/manifesto.en.html&quot;&gt;values&lt;/a&gt; that align well with finding good solutions to this problem.</source>
          <target state="translated">Mozilla - это некоммерческая организация со &lt;a href=&quot;http://www.mozilla.org/about/manifesto.en.html&quot;&gt;значениями,&lt;/a&gt; которые хорошо сочетаются с поиском хороших решений этой проблемы.</target>
        </trans-unit>
        <trans-unit id="f78a34f17d1960af584815ea7b1a57f63ea0b523" translate="yes" xml:space="preserve">
          <source>Mozilla offers their own service to act like such a trusted third party. Service Providers (that is, Relying Parties) implementing the Verified Email Protocol may choose to trust Mozilla's assertions or not. Mozilla&amp;rsquo;s service verifies users&amp;rsquo; account ownership using the conventional means of sending an email with a confirmation link.</source>
          <target state="translated">Mozilla предлагает свои собственные услуги, чтобы действовать как такая надежная третья сторона. Поставщики услуг (то есть проверяющие стороны), внедряющие проверенный протокол электронной почты, могут решить, доверять утверждениям Mozilla или нет. Сервис Mozilla проверяет принадлежность пользователя к учетной записи, используя обычные способы отправки электронного письма со ссылкой для подтверждения.</target>
        </trans-unit>
        <trans-unit id="498fc0cb3210a89a93612a59292b4e349dedcfe9" translate="yes" xml:space="preserve">
          <source>My favourite rule in regards to authentication systems: use passphrases, not passwords. Easy to remember, hard to crack.
More info: &lt;a href=&quot;http://www.codinghorror.com/blog/2005/07/passwords-vs-pass-phrases.html&quot;&gt;Coding Horror: Passwords vs. Pass Phrases&lt;/a&gt;</source>
          <target state="translated">Мое любимое правило в отношении систем аутентификации: используйте парольные фразы, а не пароли. Легко запомнить, трудно взломать. Больше информации: &lt;a href=&quot;http://www.codinghorror.com/blog/2005/07/passwords-vs-pass-phrases.html&quot;&gt;Код ужасов: пароли против парольных фраз&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="46d5ca1861ce7684ad68bb0fececc25f88365029" translate="yes" xml:space="preserve">
          <source>My suggested edits/answers are</source>
          <target state="translated">Мои предложения по редактированию</target>
        </trans-unit>
        <trans-unit id="a02f8183c755dd3e7c9319a28b14d5b05917066b" translate="yes" xml:space="preserve">
          <source>Never store passwords in a database!</source>
          <target state="translated">Никогда не храните пароли в базе данных!</target>
        </trans-unit>
        <trans-unit id="c3cad7a29e678534156a1c67fb73684d81f0154f" translate="yes" xml:space="preserve">
          <source>Of course, if you are willing to get a little bit impractical, you could also employ some form of two-factor authentication scheme (e.g. the Google Authenticator app, a physical 'cold war style' codebook, or an RSA key generator dongle). If applied correctly, this could work even with an unsecured connection, but it's hard to imagine that a dev would be willing to implement two-factor auth but not SSL.</source>
          <target state="translated">Конечно,если вы хотите стать немного непрактичным,вы также можете использовать какую-нибудь двухфакторную схему аутентификации (например,приложение Google Authenticator,физическую кодовую книгу в стиле &quot;холодной войны&quot;,или ключ-генератор RSA-ключей).При правильном применении,это может работать даже с незащищенным соединением,но трудно представить,что разработчик захочет реализовать двухфакторную аутентификацию,но не SSL.</target>
        </trans-unit>
        <trans-unit id="40746c6aaf7e82f6f6299e3405c2afa45a1ae213" translate="yes" xml:space="preserve">
          <source>Of course, some systems can't afford to have &lt;em&gt;any&lt;/em&gt; accounts hacked; for such systems, there is no way you can justify having persistent logins.</source>
          <target state="translated">Конечно, некоторые системы не могут позволить себе взломать какие- &lt;em&gt;либо&lt;/em&gt; учетные записи; для таких систем нет способа оправдать наличие постоянных входов в систему.</target>
        </trans-unit>
        <trans-unit id="d9bfdd2c36a6c3abb8c87cb643353651b30d90ae" translate="yes" xml:space="preserve">
          <source>Okay, so maybe the list isn't the &lt;em&gt;canonical&lt;/em&gt; list of most common passwords on &lt;em&gt;any&lt;/em&gt; system &lt;em&gt;anywhere ever&lt;/em&gt;, but it's a good indication of how poorly people will choose their passwords when there is no enforced policy in place. Plus, the list looks frighteningly close to home when you compare it to publicly available analyses of recently stolen passwords.</source>
          <target state="translated">Итак, возможно, этот список не является &lt;em&gt;каноническим&lt;/em&gt; списком самых распространенных паролей в &lt;em&gt;любой&lt;/em&gt; системе &lt;em&gt;где-либо когда-либо&lt;/em&gt; , но это хороший показатель того, насколько плохо люди будут выбирать свои пароли, когда нет обязательной политики. Кроме того, список выглядит пугающе близко к дому, если сравнивать его с общедоступным анализом недавно украденных паролей.</target>
        </trans-unit>
        <trans-unit id="dab5116e744a1fc1ff720960059dcea9695942af" translate="yes" xml:space="preserve">
          <source>Once the server has verified the login and password against your user database and found a match, the system needs a way to remember that the browser has been authenticated. This fact should only ever be stored server side in the session data.</source>
          <target state="translated">После того,как сервер проверил логин и пароль в вашей базе данных пользователей и нашел совпадение,системе нужен способ запомнить,что браузер был аутентифицирован.Этот факт должен храниться только на стороне сервера в данных сессии.</target>
        </trans-unit>
        <trans-unit id="472334b926db37e8b1ba9a091cdc0aa12469e6de" translate="yes" xml:space="preserve">
          <source>OpenID</source>
          <target state="translated">OpenID</target>
        </trans-unit>
        <trans-unit id="43d608c39c9af2e6d0b1f96b90ac641933e3c53f" translate="yes" xml:space="preserve">
          <source>Or, an increasing delay with a fixed upper bound, like:</source>
          <target state="translated">Или,увеличивающаяся задержка с фиксированной верхней границей,например:</target>
        </trans-unit>
        <trans-unit id="ee98feac3f48bf9954396afdbaec912b4b30373b" translate="yes" xml:space="preserve">
          <source>PART I: How To Log In</source>
          <target state="translated">ЧАСТЬ I:Как войти в систему</target>
        </trans-unit>
        <trans-unit id="373bd2e0e8256779823fc6ab870ebbbd9fc5217a" translate="yes" xml:space="preserve">
          <source>PART II: How To Remain Logged In - The Infamous &quot;Remember Me&quot; Checkbox</source>
          <target state="translated">ЧАСТЬ II:Как остаться незарегистрированным-флажок &quot;Запомнить меня&quot;.</target>
        </trans-unit>
        <trans-unit id="8dffe7fbee47b5816874a7c779754cfc07bb7637" translate="yes" xml:space="preserve">
          <source>PART III: Using Secret Questions</source>
          <target state="translated">ЧАСТЬ III:Использование секретных вопросов</target>
        </trans-unit>
        <trans-unit id="8dc18f138173394995a3a25ea9f93f0d9276d9d7" translate="yes" xml:space="preserve">
          <source>PART IV: Forgotten Password Functionality</source>
          <target state="translated">ЧАСТЬ IV:Забытый пароль Функциональность</target>
        </trans-unit>
        <trans-unit id="1bc7c0f4d41ebaa82c69b8f3e030406e7a778c30" translate="yes" xml:space="preserve">
          <source>PART V: Checking Password Strength</source>
          <target state="translated">ЧАСТЬ V:Проверка силы пароля</target>
        </trans-unit>
        <trans-unit id="f78f54dcfe36e53595355daeea59a314d68113c3" translate="yes" xml:space="preserve">
          <source>PART VI: Much More - Or: Preventing Rapid-Fire Login Attempts</source>
          <target state="translated">ЧАСТЬ VI:Больше-Или:Предотвращение попыток быстрого входа в систему</target>
        </trans-unit>
        <trans-unit id="d09120b5dd85861867d30d321dcb24147dc5181d" translate="yes" xml:space="preserve">
          <source>PART VII: Distributed Brute Force Attacks</source>
          <target state="translated">ЧАСТЬ VII:Распределенные нападения с применением грубой силы</target>
        </trans-unit>
        <trans-unit id="3dfbaba91066aa51a3ed68e104660765f9263364" translate="yes" xml:space="preserve">
          <source>PART VIII: Two-Factor Authentication and Authentication Providers</source>
          <target state="translated">ЧАСТЬ VIII:Провайдеры двухфакторной аутентификации и аутентификации</target>
        </trans-unit>
        <trans-unit id="fca31875c99e7a759095453f43a17f8d41cc70b3" translate="yes" xml:space="preserve">
          <source>Password cracking</source>
          <target state="translated">Взлом пароля</target>
        </trans-unit>
        <trans-unit id="146c22ca524a64487e2cc7bae8bcd42354c41547" translate="yes" xml:space="preserve">
          <source>Persistent Login Cookies (&quot;remember me&quot; functionality) are a danger zone; on the one hand, they are entirely as safe as conventional logins when users understand how to handle them; and on the other hand, they are an enormous security risk in the hands of careless users, who may use them on public computers and forget to log out, and who may not know what browser cookies are or how to delete them.</source>
          <target state="translated">Постоянные куки-файлы для входа в систему (&quot;помните меня&quot;)-это опасная зона;с одной стороны,они абсолютно так же безопасны,как и обычные логины,когда пользователи понимают,как с ними обращаться;с другой стороны,они представляют собой огромный риск безопасности в руках беспечных пользователей,которые могут использовать их на общедоступных компьютерах и забыть выйти из системы,а также которые могут не знать,что такое куки-файлы браузера или как их удалить.</target>
        </trans-unit>
        <trans-unit id="4deb1845003254bce090e7dce697fed2deca1d3f" translate="yes" xml:space="preserve">
          <source>Personal knowledge questions for fallback authentication: Security questions in the era of Facebook (very readable Berkeley research paper)</source>
          <target state="translated">Вопросы по личным знаниям для запасной аутентификации:Вопросы безопасности в эпоху Facebook (очень удобочитаемая исследовательская работа Беркли)</target>
        </trans-unit>
        <trans-unit id="8715dbe3e22e6a227a3a03c6e99bbe78ee4654ac" translate="yes" xml:space="preserve">
          <source>Personally, I like persistent logins for the websites I visit on a regular basis, but I know how to handle them safely. If you are positive that your users know the same, you can use persistent logins with a clean conscience. If not - well, then you may subscribe to the philosophy that users who are careless with their login credentials brought it upon themselves if they get hacked. It's not like we go to our user's houses and tear off all those facepalm-inducing Post-It notes with passwords they have lined up on the edge of their monitors, either.</source>
          <target state="translated">Лично мне нравятся постоянные логины для сайтов,которые я посещаю регулярно,но я знаю,как обращаться с ними безопасно.Если вы уверены,что ваши пользователи знают то же самое,вы можете использовать постоянные логины с чистой совестью.Если нет-ну,тогда вы можете согласиться с философией,согласно которой пользователи,небрежно относящиеся к своим учетным записям,в случае взлома,навлекают на себя ответственность.Мы же не ходим к пользователю домой и не отрываем все эти фасептики с паролями,которые они выстраивают на краю монитора.</target>
        </trans-unit>
        <trans-unit id="b5bc9ae9abb000e507efbc7f604f75840ed71637" translate="yes" xml:space="preserve">
          <source>Personally, I tend to find CAPTCHAS annoying, and use them only as a last resort when a user has failed to log in a number of times and throttling delays are maxed out. This will happen rarely enough to be acceptable, and it strengthens the system as a whole.</source>
          <target state="translated">Лично я склонен находить CAPTCHAS раздражающим,и использовать их только в качестве крайней меры,когда пользователь не входил в систему несколько раз и дросселирование задержки максимальны.Это случается достаточно редко,чтобы быть приемлемым,и это укрепляет систему в целом.</target>
        </trans-unit>
        <trans-unit id="e87d5138425a2b5a37293950847a50aac1982132" translate="yes" xml:space="preserve">
          <source>Please help us by:</source>
          <target state="translated">Пожалуйста,помогите нам:</target>
        </trans-unit>
        <trans-unit id="67d1467cdb0013316748d8f4abc7d3d3ed3d223d" translate="yes" xml:space="preserve">
          <source>Present a &lt;strong&gt;CAPTCHA&lt;/strong&gt; after N failed attempts (annoying as hell and often ineffective -- but I'm repeating myself here)</source>
          <target state="translated">Представьте &lt;strong&gt;CAPTCHA&lt;/strong&gt; после N неудачных попыток (раздражает чертовски часто и неэффективно - но я повторяюсь здесь)</target>
        </trans-unit>
        <trans-unit id="64a7e99339d587e4be9caac89b32728bfc07f27a" translate="yes" xml:space="preserve">
          <source>Rather than picking one user and trying the 50.000 most common passwords (which they can't, because of our throttling), they will pick THE most common password and try it against 50.000 users instead. That way, not only do they get around maximum-attempts measures like CAPTCHAs and login throttling, their chance of success increases as well, since the number 1 most common password is far more likely than number 49.995</source>
          <target state="translated">Вместо того,чтобы выбрать одного пользователя и попробовать 50.000 наиболее распространенных паролей (что они не могут сделать из-за нашего дросселирования),они выберут самый распространенный пароль и попробуют его против 50.000 пользователей.Таким образом,они не только обходят максимальные попытки таких мер,как CAPTCHA и дросселирование входа,их шансы на успех также увеличиваются,так как число 1 самый распространенный пароль гораздо более вероятно,чем число 49.995.</target>
        </trans-unit>
        <trans-unit id="d13b08c8870d8a1a7e6f0400242c035b1aa248ea" translate="yes" xml:space="preserve">
          <source>Regarding the Forgotten Password Form, I would add that it is a good idea to equal times between successful and unsucessful queries with some delay function.</source>
          <target state="translated">Относительно формы &quot;Забытый пароль&quot; я бы добавил,что неплохо было бы сравнить времена между успешными и неуспешными запросами с некоторой функцией задержки.</target>
        </trans-unit>
        <trans-unit id="4de0e7b256b6ff9364d661492733a75f01e5a749" translate="yes" xml:space="preserve">
          <source>Regarding the poing &lt;strong&gt;PART IV: Forgotten Password Functionality&lt;/strong&gt; in the first answer, I would make a point about Timing Attacks.</source>
          <target state="translated">Что касается постановки части &lt;strong&gt;ЧАСТЬ IV: Функциональность забытого пароля&lt;/strong&gt; в первом ответе, я бы остановился на моментах атаки.</target>
        </trans-unit>
        <trans-unit id="9586ca70862e87cb3f3f00c482403bfa49063bb2" translate="yes" xml:space="preserve">
          <source>Roles and authorization</source>
          <target state="translated">Роли и авторизация</target>
        </trans-unit>
        <trans-unit id="c2f60d05179df3c940cc3e88087d3b1e28775f9d" translate="yes" xml:space="preserve">
          <source>SSL/HTTPS encryption</source>
          <target state="translated">шифрование SSLHTTPS</target>
        </trans-unit>
        <trans-unit id="cda028908c5cf102590df2f37ad3e49bc40adb5c" translate="yes" xml:space="preserve">
          <source>Say your site has had an average of 120 bad logins per day over the past 3 months. Using that (running average), your system might set the global limit to 3 times that -- ie. 360 failed attempts over a 24 hour period. Then, if the total number of failed attempts across all accounts exceeds that number within one day (or even better, monitor the rate of acceleration and trigger on a calculated threshold), it activates system-wide login throttling - meaning short delays for ALL users (still, with the exception of cookie logins and/or backup CAPTCHA logins).</source>
          <target state="translated">Скажем,на вашем сайте за последние 3 месяца в среднем было 120 плохих входов в систему в день.Используя это (текущее среднее значение),ваша система может установить глобальный лимит в 3 раза превышающий-т.е.360 неудачных попыток в течение 24 часов.Затем,если общее количество неудачных попыток по всем учетным записям превысит это число в течение одного дня (или даже лучше,отслеживайте скорость ускорения и запускайте на рассчитанном пороге),она активирует дросселирование входа в систему-это означает короткие задержки для ВСЕХ пользователей (все равно,за исключением входа в систему с помощью cookie и резервного копирования CAPTCHA).</target>
        </trans-unit>
        <trans-unit id="976262d7d8f225a98d283e5a7e1b9cb193c18cf0" translate="yes" xml:space="preserve">
          <source>Secret URLs (public &lt;a href=&quot;https://en.wikipedia.org/wiki/Uniform_Resource_Locator&quot;&gt;URL&lt;/a&gt; protected by digest)</source>
          <target state="translated">Секретные URL (общедоступный &lt;a href=&quot;https://en.wikipedia.org/wiki/Uniform_Resource_Locator&quot;&gt;URL&lt;/a&gt; защищен дайджестом)</target>
        </trans-unit>
        <trans-unit id="77f6e374d07021931c1f95ca6fd95d57bd175cf9" translate="yes" xml:space="preserve">
          <source>Security questions</source>
          <target state="translated">Вопросы безопасности</target>
        </trans-unit>
        <trans-unit id="f96888df9de73f78978c270b888a8ed379132818" translate="yes" xml:space="preserve">
          <source>Security questions are insecure - avoid using them. Why? Anything a security question does, a password does better. Read &lt;strong&gt;&lt;em&gt;PART III: Using Secret Questions&lt;/em&gt;&lt;/strong&gt; in &lt;a href=&quot;http://srp.stanford.edu/license.txt&quot;&gt;@Jens Roland answer&lt;/a&gt; here in this wiki.</source>
          <target state="translated">Вопросы безопасности небезопасны - избегайте их использования. Почему? Что бы ни делал секретный вопрос, пароль работает лучше. Прочтите &lt;strong&gt;&lt;em&gt;ЧАСТЬ III: Использование секретных вопросов&lt;/em&gt;&lt;/strong&gt; в &lt;a href=&quot;http://srp.stanford.edu/license.txt&quot;&gt;ответе @Jens Roland&lt;/a&gt; здесь, в этой вики.</target>
        </trans-unit>
        <trans-unit id="2b50787548079d4d7d7960927c4abf6a9dbcfb40" translate="yes" xml:space="preserve">
          <source>Sending credentials</source>
          <target state="translated">Отправление реквизитов</target>
        </trans-unit>
        <trans-unit id="2e2996d4874beab228575a84252d47ac06b477f1" translate="yes" xml:space="preserve">
          <source>Service Providers may, of course, offer this protocol as an option in addition to any other method(s) of authentication they might wish to offer.</source>
          <target state="translated">Поставщики услуг,конечно,могут предложить этот протокол в качестве опции в дополнение к любым другим методам аутентификации,которые они могут предложить.</target>
        </trans-unit>
        <trans-unit id="a5de7556cf7bd4f9692d5121762b926c377ffd0d" translate="yes" xml:space="preserve">
          <source>Session cookies</source>
          <target state="translated">сессионные cookie-файлы</target>
        </trans-unit>
        <trans-unit id="93696b6328cb310229b7e31a446255308241cbe4" translate="yes" xml:space="preserve">
          <source>Since browsers are implicitly trusted (the whole idea of a User Agent is to act on behalf of the User), they can help improve this situation.</source>
          <target state="translated">Поскольку браузеры неявно доверяют друг другу (вся идея Агента пользователя заключается в том,чтобы действовать от имени пользователя),они могут помочь исправить эту ситуацию.</target>
        </trans-unit>
        <trans-unit id="17da9e369068d05b58adc834c73b72fa8baaef08" translate="yes" xml:space="preserve">
          <source>So ...</source>
          <target state="translated">Так что...</target>
        </trans-unit>
        <trans-unit id="8dfb410f25bb9c65cce4be237c8e98eed0a7cb91" translate="yes" xml:space="preserve">
          <source>So if you can't store the password, how do you check that the login+password combination POSTed from the login form is correct? The answer is hashing using a &lt;a href=&quot;https://en.wikipedia.org/wiki/Key_derivation_function&quot;&gt;key derivation function&lt;/a&gt;. Whenever a new user is created or a password is changed, you take the password and run it through a KDF, such as Argon2, bcrypt, scrypt or PBKDF2, turning the cleartext password (&quot;correcthorsebatterystaple&quot;) into a long, random-looking string, which is a lot safer to store in your database. To verify a login, you run the same hash function on the entered password, this time passing in the salt and compare the resulting hash string to the value stored in your database. Argon2, bcrypt and scrypt store the salt with the hash already. Check out this &lt;a href=&quot;https://security.stackexchange.com/a/31846/8340&quot;&gt;article&lt;/a&gt; on sec.stackexchange for more detailed information.</source>
          <target state="translated">Итак, если вы не можете сохранить пароль, как вы проверяете правильность комбинации логин + пароль, отправленной из формы входа? Ответ хэшируется с использованием &lt;a href=&quot;https://en.wikipedia.org/wiki/Key_derivation_function&quot;&gt;ключевой деривационной функции&lt;/a&gt; . Каждый раз, когда создается новый пользователь или изменяется пароль, вы берете пароль и запускаете его через KDF, например, Argon2, bcrypt, scrypt или PBKDF2, превращая пароль в виде открытого текста (&quot;correcthorsebatterystaple&quot;) в длинную строку случайного вида , который намного безопаснее хранить в вашей базе данных. Чтобы проверить логин, вы запускаете ту же хеш-функцию для введенного пароля, на этот раз передавая соль и сравнивая полученную хеш-строку со значением, хранящимся в вашей базе данных. Argon2, bcrypt и scrypt хранят соль уже с помощью хеша. Проверьте эту &lt;a href=&quot;https://security.stackexchange.com/a/31846/8340&quot;&gt;статью&lt;/a&gt; на sec.stackexchange для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="9c543295c769b88282780bf3ce124008f98174f5" translate="yes" xml:space="preserve">
          <source>So what can we learn from these numbers? Well, lots, but we can focus on the most important part: the fact that preventing large numbers of rapid-fire successive login attempts (ie. the &lt;em&gt;brute force&lt;/em&gt; attack) really isn't that difficult. But preventing it &lt;em&gt;right&lt;/em&gt; isn't as easy as it seems.</source>
          <target state="translated">Итак, что мы можем извлечь из этих чисел? Ну, много, но мы можем сосредоточиться на самой важной части: тот факт, что предотвращение большого количества быстрых последовательных попыток входа в систему (т. &lt;em&gt;Е.&lt;/em&gt; Атака &lt;em&gt;методом перебора&lt;/em&gt; ) на самом деле не так сложен. Но предотвратить это не так просто, как кажется.</target>
        </trans-unit>
        <trans-unit id="68e69724334b1e16fdb092289aa1cf8d11c40991" translate="yes" xml:space="preserve">
          <source>So: With no minimum password strength requirements, 2% of users use one of the top 20 most common passwords. Meaning: if an attacker gets just 20 attempts, 1 in 50 accounts on your website will be crackable.</source>
          <target state="translated">Итак:При отсутствии минимальных требований к надежности пароля,2% пользователей используют один из 20 наиболее распространенных паролей.Это означает:если взломщик получит всего 20 попыток,то каждый 50 аккаунтов на вашем сайте будут взламываться.</target>
        </trans-unit>
        <trans-unit id="d72444c8feb585090c34a3591bc5ac42a272168f" translate="yes" xml:space="preserve">
          <source>Spacing the login requests for each user account, say, 30 seconds apart, to sneak under the radar</source>
          <target state="translated">Расстояние между запросами на вход для каждой учетной записи пользователя,скажем,30 секунд,чтобы проскользнуть под радаром.</target>
        </trans-unit>
        <trans-unit id="8b54ab058e9d7a5ee0966df2639aa71cbd984855" translate="yes" xml:space="preserve">
          <source>Storing passwords</source>
          <target state="translated">Хранение паролей</target>
        </trans-unit>
        <trans-unit id="75d6fac1e47bc2b7e87cdd0dcf77828ce747bdff" translate="yes" xml:space="preserve">
          <source>Submitting good articles about this subject</source>
          <target state="translated">Подача хороших статей на эту тему</target>
        </trans-unit>
        <trans-unit id="075dae39a09962a66fc3b6dcab72dc07fce4b9c3" translate="yes" xml:space="preserve">
          <source>Suggesting subtopics</source>
          <target state="translated">Предлагаемые подтемы</target>
        </trans-unit>
        <trans-unit id="c82008d6dc532dd74a5b27dec8eb806cb6db97e4" translate="yes" xml:space="preserve">
          <source>The Verified Email Protocol was proposed to provide a secure method, based on public key cryptography, for streamlining the process of proving to domain B that you have an account on domain A.</source>
          <target state="translated">Протокол Verified Email был предложен для обеспечения безопасного метода,основанного на криптографии с открытым ключом,для упрощения процесса доказательства домену B того,что у вас есть учетная запись в домене A.</target>
        </trans-unit>
        <trans-unit id="873001bc6949e1b1e8ae1950e66e687b66728c5c" translate="yes" xml:space="preserve">
          <source>The definitive guide to form-based website authentication</source>
          <target state="translated">Окончательное руководство по аутентификации веб-сайтов на основе форм</target>
        </trans-unit>
        <trans-unit id="2f8b3b0b656f122876b0d5005972fd58779fb004" translate="yes" xml:space="preserve">
          <source>The faster you can create hashes, the faster any brute force checker can work. Slower hashes will therefore slow down brute forcing. A slow hash algorithm will make brute forcing impractical for longer passwords (8 digits +)</source>
          <target state="translated">Чем быстрее вы сможете создавать хэши,тем быстрее сможет работать любое устройство для проверки грубой силы.Поэтому,чем медленнее будут создаваться хэши,тем медленнее будет происходить форсирование грубой силы.Медленный алгоритм хэшей сделает переборку непрактичной для длинных паролей (8 цифр +).</target>
        </trans-unit>
        <trans-unit id="0c1bf73b4546848eba3244b4674b70975415dd39" translate="yes" xml:space="preserve">
          <source>The form &amp;ldquo;account&lt;code&gt;@&lt;/code&gt;domain&amp;rdquo; is concise and supported by a wide range of protocols and URI schemes. Such an identifier is, of course, most universally recognized as an email address.</source>
          <target state="translated">Форма &amp;laquo;account &lt;code&gt;@&lt;/code&gt; domain&amp;raquo; является краткой и поддерживается широким спектром протоколов и схем URI. Такой идентификатор, конечно, наиболее широко признан в качестве адреса электронной почты.</target>
        </trans-unit>
        <trans-unit id="39aa11169b685321ba98f52046fe4fdc8e18aa45" translate="yes" xml:space="preserve">
          <source>The hashed password received by the server is &lt;a href=&quot;https://security.stackexchange.com/questions/45254/owasp-recommendation-on-client-side-password-hashing&quot;&gt;less secure&lt;/a&gt; if you don't do additional, redundant work on the server.</source>
          <target state="translated">Полученный сервером хешированный пароль &lt;a href=&quot;https://security.stackexchange.com/questions/45254/owasp-recommendation-on-client-side-password-hashing&quot;&gt;менее безопасен,&lt;/a&gt; если вы не выполняете дополнительную избыточную работу на сервере.</target>
        </trans-unit>
        <trans-unit id="3b494303db06e8467fef215f068e1ef5ff334216" translate="yes" xml:space="preserve">
          <source>The only practical way to send credentials 100% securely is by using &lt;a href=&quot;http://en.wikipedia.org/wiki/SSL&quot;&gt;SSL&lt;/a&gt;. Using JavaScript to hash the password is not safe. Common pitfalls for client-side password hashing:</source>
          <target state="translated">Единственный практический способ безопасной отправки учетных данных - использование &lt;a href=&quot;http://en.wikipedia.org/wiki/SSL&quot;&gt;SSL&lt;/a&gt; . Использование JavaScript для хеширования пароля небезопасно. Распространенные ошибки при хешировании паролей на стороне клиента:</target>
        </trans-unit>
        <trans-unit id="d5ddceaf2ff3d13b24a879ec3ea4ed76cdfcfd28" translate="yes" xml:space="preserve">
          <source>The primary force holding back progress here is &lt;a href=&quot;http://www.w3.org/2011/identity-ws/papers/idbrowser2011_submission_10.pdf&quot;&gt;deployment deadlock&lt;/a&gt;. Solutions must be decomposed into steps which provide some incremental benefit on their own.</source>
          <target state="translated">Основной силой, сдерживающей прогресс, является &lt;a href=&quot;http://www.w3.org/2011/identity-ws/papers/idbrowser2011_submission_10.pdf&quot;&gt;тупик развертывания&lt;/a&gt; . Решения должны быть разбиты на этапы, которые сами по себе приносят дополнительные выгоды.</target>
        </trans-unit>
        <trans-unit id="c4641bb1386ab4039d988d9fed3b98531f88c493" translate="yes" xml:space="preserve">
          <source>The problem lies more in account setup than in password checking.</source>
          <target state="translated">Проблема заключается скорее в настройке учетной записи,чем в проверке пароля.</target>
        </trans-unit>
        <trans-unit id="30e901319f87b3eb9defafddfce85dc76b0c72c1" translate="yes" xml:space="preserve">
          <source>The reality today is that most websites use form-based authentication</source>
          <target state="translated">Сегодня реальность такова,что большинство веб-сайтов используют аутентификацию на основе форм.</target>
        </trans-unit>
        <trans-unit id="2d2c5891d4a87869d2517de039d313ea2d260b5b" translate="yes" xml:space="preserve">
          <source>The reason a salt is used is that hashing in itself is not sufficient -- you'll want to add a so-called 'salt' to protect the hash against &lt;a href=&quot;https://en.wikipedia.org/wiki/Rainbow_table&quot;&gt;rainbow tables&lt;/a&gt;. A salt effectively prevents two passwords that exactly match from being stored as the same hash value, preventing the whole database being scanned in one run if an attacker is executing a password guessing attack.</source>
          <target state="translated">Причина, по которой соль используется, заключается в том, что само по себе хэширования недостаточно - вы захотите добавить так называемую &amp;laquo;соль&amp;raquo;, чтобы защитить хеш от &lt;a href=&quot;https://en.wikipedia.org/wiki/Rainbow_table&quot;&gt;радужных таблиц&lt;/a&gt; . Соль эффективно предотвращает сохранение двух паролей, которые в точности совпадают, как одно и то же значение хеш-функции, предотвращая сканирование всей базы данных за один прогон, если злоумышленник выполняет атаку с целью подбора пароля.</target>
        </trans-unit>
        <trans-unit id="db6f1f3c4b6cc7ccfb89ce39aa7239fd8fe129e2" translate="yes" xml:space="preserve">
          <source>The simplest decentralized method for expressing an identity that is built into the internet infrastructure is the domain name.</source>
          <target state="translated">Самым простым децентрализованным методом выражения идентичности,встроенным в инфраструктуру Интернета,является доменное имя.</target>
        </trans-unit>
        <trans-unit id="5645d99ab2bd1ebc1c21888e2b9d0ac583d105e4" translate="yes" xml:space="preserve">
          <source>The token's value makes no sense to you, &lt;em&gt;but,&lt;/em&gt; should the need arise, &quot;appropriate means exist&quot; by which your website can &quot;[authoritatively] ask someone who knows (LDAP... etc.)&quot; about any &lt;em&gt;and every(!)&lt;/em&gt; question that you may have. In other words, you do &lt;strong&gt;not&lt;/strong&gt; avail yourself of &lt;em&gt;any&lt;/em&gt; &quot;home-grown logic.&quot; Instead, you inquire of The Authority and implicitly trust its verdict.</source>
          <target state="translated">Ценность токена не имеет для вас никакого смысла, &lt;em&gt;но&lt;/em&gt; в случае необходимости &amp;laquo;существуют соответствующие средства&amp;raquo;, с помощью которых ваш веб-сайт может &amp;laquo;[авторитетно] расспросить кого-либо, кто знает (LDAP ... и т. Д.)&amp;raquo; О любом &lt;em&gt;и каждом (!)&lt;/em&gt; вопрос, который у вас может возникнуть. Другими словами, вы &lt;strong&gt;не&lt;/strong&gt; пользуетесь &lt;em&gt;какой-либо&lt;/em&gt; &amp;laquo;доморощенной логикой&amp;raquo;. Вместо этого вы запрашиваете Управление и безоговорочно доверяете его вердикту.</target>
        </trans-unit>
        <trans-unit id="998a2bb8b6d5ada4705d13a767e1564f7753b72e" translate="yes" xml:space="preserve">
          <source>The trick is to fool a bot into thinking it has to insert data into a required field, that's why I named the input &quot;email&quot;. If you already have a field called email that you're using you should try naming the dummy field something else like &quot;company&quot;, &quot;phone&quot; or &quot;emailaddress&quot;. Just pick something you know you don't need and what sounds like something people would normally find logical to fill in into a web form. Now hide the &lt;code&gt;input&lt;/code&gt; field using CSS or JavaScript/jQuery - whatever fits you best - just &lt;strong&gt;don't&lt;/strong&gt; set the input &lt;code&gt;type&lt;/code&gt; to &lt;code&gt;hidden&lt;/code&gt; or else the bot won't fall for it.</source>
          <target state="translated">Хитрость заключается в том, чтобы обмануть бота, заставив его думать, что он должен вставить данные в обязательное поле, поэтому я назвал вход &amp;laquo;email&amp;raquo;. Если у вас уже есть поле под названием &amp;laquo;электронная почта&amp;raquo;, которое вы используете, попробуйте присвоить этому фиктивному полю другое имя, например &amp;laquo;компания&amp;raquo;, &amp;laquo;телефон&amp;raquo; или &amp;laquo;адрес электронной почты&amp;raquo;. Просто выберите то, что вам не нужно, и то, что люди обычно находят логичным для заполнения в веб-форме. Теперь скройте поле &lt;code&gt;input&lt;/code&gt; с помощью CSS или JavaScript / jQuery - что бы вам ни подходило - просто &lt;strong&gt;не&lt;/strong&gt; устанавливайте &lt;code&gt;type&lt;/code&gt; ввода &lt;code&gt;hidden&lt;/code&gt; иначе бот не подойдет для этого.</target>
        </trans-unit>
        <trans-unit id="34e257a9ce4c5bd6caca77d9bc6d2b2754dd5b72" translate="yes" xml:space="preserve">
          <source>The true reason why security questions even exist in the wild is that they conveniently save the cost of a few support calls from users who can't access their email to get to a reactivation code. This at the expense of security and Sarah Palin's reputation. Worth it? Probably not.</source>
          <target state="translated">Истинная причина,по которой вопросы безопасности даже существуют в дикой природе,заключается в том,что они удобно экономят на нескольких звонках в службу поддержки от пользователей,которые не могут получить доступ к своей электронной почте,чтобы получить код повторной активации.Это в ущерб безопасности и репутации Сары Пэйлин.Стоит? Скорее всего,нет.</target>
        </trans-unit>
        <trans-unit id="1e505b002c5044c3265daeba9329406fa68c57e8" translate="yes" xml:space="preserve">
          <source>The use of two-factor authentication is much more secure than more clever means of password encryption</source>
          <target state="translated">Использование двухфакторной аутентификации гораздо более безопасно,чем более умные средства шифрования паролей.</target>
        </trans-unit>
        <trans-unit id="5cdb1655b55ede36b4d163c4d821e27240908a02" translate="yes" xml:space="preserve">
          <source>There's another secure method called &lt;strong&gt;SRP&lt;/strong&gt;, but it's patented (although it is &lt;a href=&quot;http://srp.stanford.edu/license.txt&quot;&gt;freely licensed&lt;/a&gt;) and there are few good implementations available.</source>
          <target state="translated">Есть еще один безопасный метод, называемый &lt;strong&gt;SRP&lt;/strong&gt; , но он запатентован (хотя он &lt;a href=&quot;http://srp.stanford.edu/license.txt&quot;&gt;свободно лицензируется&lt;/a&gt; ), и есть несколько хороших доступных реализаций.</target>
        </trans-unit>
        <trans-unit id="e77a8bc439bb506043e4f2e70e1106ab5d80d188" translate="yes" xml:space="preserve">
          <source>This &quot;authentication + authorization&quot; service can be provided by several different technologies, such as LDAP &lt;em&gt;(Microsoft OpenDirectory)&lt;/em&gt;, or Kerberos.</source>
          <target state="translated">Эта услуга &amp;laquo;аутентификация + авторизация&amp;raquo; может предоставляться несколькими различными технологиями, такими как LDAP &lt;em&gt;(Microsoft OpenDirectory)&lt;/em&gt; или Kerberos.</target>
        </trans-unit>
        <trans-unit id="1613367f7592fc39a4fb19d5789345ac911f3f19" translate="yes" xml:space="preserve">
          <source>This avoids any need to have &quot;sessions&quot; or cookies as the browser itself will re-encrypt the communication each time. It is the most &quot;lightweight&quot; development approach.</source>
          <target state="translated">Это позволяет избежать необходимости наличия &quot;сеансов&quot; или куки-файлов,так как браузер сам будет каждый раз заново зашифровывать общение.Это наиболее &quot;легкий&quot; подход к разработке.</target>
        </trans-unit>
        <trans-unit id="2f8c91afeec66bcb11bbf481732a4120d32f6711" translate="yes" xml:space="preserve">
          <source>This final scheme was taken from the OWASP best-practices suggestions (link 1 from the MUST-READ list) and should be considered best practice, even if it is admittedly on the restrictive side.</source>
          <target state="translated">Эта окончательная схема была взята из предложений OWASP по лучшей практике (ссылка 1 из списка MUST-READ)и должна рассматриваться как лучшая практика,даже если она признана на ограничительной стороне.</target>
        </trans-unit>
        <trans-unit id="767b6b49b2a806781a3997fcd35e32349fa00635" translate="yes" xml:space="preserve">
          <source>This is not strictly &amp;ldquo;form-based authentication for websites&amp;rdquo;. But it is an effort to transition from the current norm of form-based authentication to something more secure: browser-supported authentication.</source>
          <target state="translated">Это не строго &amp;laquo;аутентификация на основе форм для веб-сайтов&amp;raquo;. Но это попытка перейти от текущей нормы аутентификации на основе форм к чему-то более безопасному: аутентификация с поддержкой браузера.</target>
        </trans-unit>
        <trans-unit id="708c1b02320666c817634aa6a6e7cde2ea43c78c" translate="yes" xml:space="preserve">
          <source>This is the very very hard part. The &lt;em&gt;only&lt;/em&gt; decent solution is a web of trust. For example, you join the hospital as a doctor. You create a web page hosted somewhere with your photo, your passport number, and a public key, and hash them all with the private key. You then visit the hospital and the system administrator looks at your passport, sees if the photo matches you, and then hashes the web page/photo hash with the hospital private key. From now on we can securely exchange keys and tokens. As can anyone who trusts the hospital (there is the secret sauce BTW). The system administrator can also give you an &lt;a href=&quot;http://en.wikipedia.org/wiki/RSA_%28security_firm%29&quot;&gt;RSA&lt;/a&gt; dongle or other two-factor authentication.</source>
          <target state="translated">Это очень очень сложная часть. &lt;em&gt;Единственное&lt;/em&gt; достойное решение - это сеть доверия. Например, вы вступаете в больницу в качестве врача. Вы создаете веб-страницу, размещенную где-то с вашей фотографией, номером паспорта и открытым ключом, и хешируете их все с помощью закрытого ключа. Затем вы посещаете больницу, и системный администратор просматривает ваш паспорт, проверяет, соответствует ли фотография вам, а затем хеширует веб-страницу / фотографию с помощью личного ключа больницы. Отныне мы можем безопасно обмениваться ключами и токенами. Как и любой, кто доверяет больнице (есть секретный соус, кстати). Системный администратор также может предоставить вам ключ &lt;a href=&quot;http://en.wikipedia.org/wiki/RSA_%28security_firm%29&quot;&gt;RSA&lt;/a&gt; или другую двухфакторную аутентификацию.</target>
        </trans-unit>
        <trans-unit id="9deba28d9534afcb8e520cdc7cf83311773566e5" translate="yes" xml:space="preserve">
          <source>This may finally be common knowledge after all the highly-publicized hacks and user data leaks we've seen in recent years, but it has to be said: Do not store passwords in cleartext in your database. User databases are routinely hacked, leaked or gleaned through SQL injection, and if you are storing raw, plaintext passwords, that is instant game over for your login security.</source>
          <target state="translated">В конце концов,это может быть общеизвестно после всех широко разрекламированных взломов и утечек пользовательских данных,которые мы наблюдали в последние годы,но это надо сказать:Не храните пароли в открытом виде в своей базе данных.Пользовательские базы данных регулярно взламываются,утеряются или собираются с помощью SQL инъекций,и если вы храните сырые,текстовые пароли,то это мгновенная игра для вашей безопасности входа в систему.</target>
        </trans-unit>
        <trans-unit id="e1ced78f2b800be0fb1dd40392fe018c4ecb6faf" translate="yes" xml:space="preserve">
          <source>This means that you can't send the user their forgotten passwords (because you only have the hash). Don't reset the user's password unless you have authenticated the user (users must prove that they are able to read emails sent to the stored (and validated) email address.)</source>
          <target state="translated">Это означает,что вы не можете отправить пользователю его забытый пароль (потому что у вас есть только хэш).Не сбрасывайте пароль пользователя,если вы не аутентифицировали его (пользователи должны доказать,что они могут читать сообщения,отправленные на сохраненный (и подтвержденный)электронный адрес).</target>
        </trans-unit>
        <trans-unit id="40c1ddc3ab72f671316ac6d8edab98496078d667" translate="yes" xml:space="preserve">
          <source>Thwarting this requires calculating the entropy of a password and then applying a threshold.  The National Institute of Standards and Technology (NIST) &lt;a href=&quot;https://en.wikipedia.org/wiki/Password_strength#NIST_Special_Publication_800-63&quot;&gt;Special Publication 800-63&lt;/a&gt; has a set of very good suggestions.  That, when combined with a dictionary and keyboard layout analysis (for example, 'qwertyuiop' is a bad password), can &lt;a href=&quot;https://cubicspot.blogspot.com/2012/01/how-to-calculate-password-strength-part.html&quot;&gt;reject 99% of all poorly selected passwords&lt;/a&gt; at a level of 18 bits of entropy.  Simply calculating password strength and &lt;a href=&quot;https://blogs.dropbox.com/tech/2012/04/zxcvbn-realistic-password-strength-estimation/&quot;&gt;showing a visual strength meter&lt;/a&gt; to a user is good, but insufficient.  Unless it is enforced, a lot of users will most likely ignore it.</source>
          <target state="translated">Чтобы помешать этому, необходимо вычислить энтропию пароля и затем применить пороговое значение. &lt;a href=&quot;https://en.wikipedia.org/wiki/Password_strength#NIST_Special_Publication_800-63&quot;&gt;Специальная публикация 800-63&lt;/a&gt; Национального института стандартов и технологий (NIST) содержит ряд очень хороших предложений. Это, в сочетании с анализом словаря и раскладки клавиатуры (например, &amp;laquo;qwertyuiop&amp;raquo; - неверный пароль), может &lt;a href=&quot;https://cubicspot.blogspot.com/2012/01/how-to-calculate-password-strength-part.html&quot;&gt;отклонить 99% всех плохо выбранных паролей&lt;/a&gt; на уровне 18-битной энтропии. Просто рассчитать надежность пароля и &lt;a href=&quot;https://blogs.dropbox.com/tech/2012/04/zxcvbn-realistic-password-strength-estimation/&quot;&gt;показать пользователю визуальный измеритель&lt;/a&gt; надежности это хорошо, но недостаточно. Если он не применяется принудительно, многие пользователи, скорее всего, будут его игнорировать.</target>
        </trans-unit>
        <trans-unit id="36f59e7438359f6b6dec486a56fd74055564200a" translate="yes" xml:space="preserve">
          <source>To clarify: The delay is &lt;em&gt;not&lt;/em&gt; a delay before returning the response to the browser. It is more like a timeout or refractory period during which login attempts to a specific account or from a specific IP address will not be accepted or evaluated at all. That is, correct credentials will not return in a successful login, and incorrect credentials will not trigger a delay increase.</source>
          <target state="translated">Для уточнения: Задержка &lt;em&gt;не&lt;/em&gt; задержка перед возвратом ответа в браузер. Это больше похоже на тайм-аут или рефрактерный период, в течение которого попытки входа в конкретную учетную запись или с определенного IP-адреса не будут приниматься или оцениваться вообще. То есть правильные учетные данные не будут возвращаться при успешном входе в систему, а неправильные учетные данные не будут вызывать увеличение задержки.</target>
        </trans-unit>
        <trans-unit id="d37cb16ef3fef2e7115eaa0053b26dfbe21af32e" translate="yes" xml:space="preserve">
          <source>Too abstract? Let me rephrase:</source>
          <target state="translated">Слишком абстрактно? Позволь мне перефразировать:</target>
        </trans-unit>
        <trans-unit id="94ed89c349e440a548a29267a028903c24ca14a6" translate="yes" xml:space="preserve">
          <source>Uh huh ... it's &lt;em&gt;quite&lt;/em&gt; a mental-switch from the &quot;wild-and-wooly Internet.&quot;</source>
          <target state="translated">Э-э-э ... это умственное переключение с &quot;дикого и шерстистого Интернета&quot;.</target>
        </trans-unit>
        <trans-unit id="4265473602814216b394ca2290e014784cf52b26" translate="yes" xml:space="preserve">
          <source>Unless the connection is already secure (that is, tunneled through HTTPS using SSL/TLS), your login form values will be sent in cleartext, which allows anyone eavesdropping on the line between browser and web server will be able to read logins as they pass through. This type of wiretapping is done routinely by governments, but in general, we won't address 'owned' wires other than to say this: Just use HTTPS.</source>
          <target state="translated">Если соединение уже не является безопасным (т.е.туннелируется через HTTPS с помощью SSLTLS),значения формы входа будут отправляться в чистом тексте,что позволяет любому,кто подслушивает на линии между браузером и веб-сервером,будет иметь возможность прочитать логины при их прохождении.Этот тип прослушивания выполняется правительствами в обычном порядке,но в общем,мы не будем обращаться к &quot;принадлежащим&quot; проводам,кроме как сказать это:Просто используйте HTTPS.</target>
        </trans-unit>
        <trans-unit id="fc20528d51ba47e05223bf0a781ff269bf656c20" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://openid.net/connect/&quot;&gt;OpenID Connect&lt;/a&gt; or &lt;a href=&quot;https://kantarainitiative.org/confluence/display/uma/Home&quot;&gt;User-Managed Access&lt;/a&gt;.</source>
          <target state="translated">Используйте &lt;a href=&quot;http://openid.net/connect/&quot;&gt;OpenID Connect&lt;/a&gt; или &lt;a href=&quot;https://kantarainitiative.org/confluence/display/uma/Home&quot;&gt;управляемый пользователем доступ&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="569514ecdf06ab5d5875ae06513d8acc92496198" translate="yes" xml:space="preserve">
          <source>Use of &lt;a href=&quot;https://en.wikipedia.org/wiki/Cryptographic_nonce&quot;&gt;nonces&lt;/a&gt; to prevent &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery&quot;&gt;cross-site request forgeries (CSRF)&lt;/a&gt;</source>
          <target state="translated">Использование &lt;a href=&quot;https://en.wikipedia.org/wiki/Cryptographic_nonce&quot;&gt;одноразовых номеров&lt;/a&gt; для предотвращения &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery&quot;&gt;подделки межсайтовых запросов (CSRF)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5692cfefa5a54d8be531f2dc6d33d0432dc849fe" translate="yes" xml:space="preserve">
          <source>Using secret questions</source>
          <target state="translated">Используя секретные вопросы</target>
        </trans-unit>
        <trans-unit id="0082a6cc3e0b2bbeae74eaf89dd9ed0c542121f9" translate="yes" xml:space="preserve">
          <source>Utilize Troy Hunt's &lt;a href=&quot;https://haveibeenpwned.com/API/&quot;&gt;Have I Been Pwned API&lt;/a&gt; to check users passwords against passwords compromised in public data breaches.</source>
          <target state="translated">Используйте &lt;a href=&quot;https://haveibeenpwned.com/API/&quot;&gt;API&lt;/a&gt; Troy Hunt &amp;laquo; I I Been Pwned&amp;raquo; для проверки паролей пользователей и паролей, скомпрометированных в результате взлома открытых данных.</target>
        </trans-unit>
        <trans-unit id="5a208e8a90fc7c482e752087202866b98cf9ae23" translate="yes" xml:space="preserve">
          <source>We believe that Stack&amp;nbsp;Overflow should not just be a resource for very specific technical questions, but also for general guidelines on how to solve variations on common problems. &quot;Form based authentication for websites&quot; should be a fine topic for such an experiment.</source>
          <target state="translated">Мы считаем, что переполнение стека должно быть не только ресурсом для очень специфических технических вопросов, но и для общих указаний о том, как решать различные проблемы. &amp;laquo;Проверка подлинности на основе форм для веб-сайтов&amp;raquo; должна стать прекрасной темой для такого эксперимента.</target>
        </trans-unit>
        <trans-unit id="27c0e1a0723aceee1fa3a38394e3557605e31eaa" translate="yes" xml:space="preserve">
          <source>We'll assume you already know how to build a login+password HTML form which POSTs the values to a script on the server side for authentication. The sections below will deal with patterns for sound practical auth, and how to avoid the most common security pitfalls.</source>
          <target state="translated">Мы предположим,что вы уже знаете,как построить HTML форму login+password,которая POST передает значения в скрипт на стороне сервера для аутентификации.В следующих разделах мы рассмотрим шаблоны звуковой практической аутентификации,а также то,как избежать наиболее распространенных ловушек безопасности.</target>
        </trans-unit>
        <trans-unit id="dbd15fa92d23c602686ecb421e837fa5c0100a95" translate="yes" xml:space="preserve">
          <source>When a user is dutifully-connected to the aforesaid network, their identity &lt;em&gt;(&quot;authentication&quot;)&lt;/em&gt; is [already ...] &quot;conclusively known,&quot; as is their permission &lt;em&gt;(&quot;authorization&quot;)&lt;/em&gt; to do certain things ... such as ... &quot;to access this website.&quot;</source>
          <target state="translated">Когда пользователь должным образом подключен к вышеупомянутой сети, его личность &lt;em&gt;(&amp;laquo;аутентификация&amp;raquo;)&lt;/em&gt; [уже ...] &amp;laquo;окончательно известна&amp;raquo;, как и его разрешение &lt;em&gt;(&amp;laquo;авторизация&amp;raquo;)&lt;/em&gt; на выполнение определенных действий ... таких как. .. &quot;чтобы получить доступ к этому сайту.&quot;</target>
        </trans-unit>
        <trans-unit id="6b7e7b430708b466db8f5dc96f8c359bf35d1a98" translate="yes" xml:space="preserve">
          <source>When hashing, don't use fast hash algorithms such as MD5 (many hardware implementations exist).  Use something like SHA-512.  For passwords, slower hashes are better.</source>
          <target state="translated">При хэшировании не используйте быстрые алгоритмы хэширования,такие как MD5 (существует множество аппаратных реализаций).Используйте что-то вроде SHA-512.Для паролей,более медленные хэши лучше.</target>
        </trans-unit>
        <trans-unit id="1b1261f95eb01d2a4a663842cd7729c9a950766b" translate="yes" xml:space="preserve">
          <source>When you are validating the form (either client or server side) check if your dummy field has been filled to determine if it was sent by a human or a bot.</source>
          <target state="translated">При проверке формы (либо на стороне клиента,либо на стороне сервера)проверьте,было ли заполнено ваше фиктивное поле,чтобы определить,было ли оно отправлено человеком или ботом.</target>
        </trans-unit>
        <trans-unit id="9990351cb6dc5a037c4956e9bc10cae3faf4b145" translate="yes" xml:space="preserve">
          <source>While it is true that hashing the password &lt;em&gt;can be&lt;/em&gt; effective against &lt;strong&gt;password disclosure&lt;/strong&gt;, it is vulnerable to replay attacks, Man-In-The-Middle attacks / hijackings (if an attacker can inject a few bytes into your unsecured HTML page before it reaches your browser, they can simply comment out the hashing in the JavaScript), or brute-force attacks (since you are handing the attacker both username, salt and hashed password).</source>
          <target state="translated">Несмотря на то, что хеширование пароля &lt;em&gt;может быть&lt;/em&gt; эффективным против &lt;strong&gt;раскрытия пароля&lt;/strong&gt; , оно уязвимо для атак повторного воспроизведения, атак / перехватов &amp;laquo;человек посередине&amp;raquo; (если злоумышленник может внедрить несколько байтов в вашу незащищенную HTML-страницу до того, как она достигнет вашей браузер, они могут просто закомментировать хеширование в JavaScript) или атаки методом грубой силы (поскольку вы передаете злоумышленнику как имя пользователя, соль, так и хешированный пароль).</target>
        </trans-unit>
        <trans-unit id="3584882b01cd0f3c5269eeae6ec1a2fd214b72e5" translate="yes" xml:space="preserve">
          <source>While this is a noble thought, it is essentially useless (and can be a &lt;a href=&quot;https://stackoverflow.com/questions/1380168/does-it-make-security-sense-to-hash-password-on-client-end&quot;&gt;security flaw&lt;/a&gt;) unless it is combined with one of the above - that is, either securing the line with strong encryption or using a tried-and-tested challenge-response mechanism (if you don't know what that is, just know that it is one of the most difficult to prove, most difficult to design, and most difficult to implement concepts in digital security).</source>
          <target state="translated">Хотя это благородная мысль, она, по сути, бесполезна (и может быть &lt;a href=&quot;https://stackoverflow.com/questions/1380168/does-it-make-security-sense-to-hash-password-on-client-end&quot;&gt;недостатком безопасности&lt;/a&gt; ), если она не сочетается с одним из вышеперечисленных - то есть либо для защиты линии с помощью надежного шифрования, либо с использованием проверенного ответа на запрос механизм (если вы не знаете, что это такое, просто знайте, что это один из самых трудных для доказательства, самый сложный для разработки и самый сложный для реализации концепций в области цифровой безопасности).</target>
        </trans-unit>
        <trans-unit id="33e6a957bfa924b65ff628b30fcdd2dbd1ba74b7" translate="yes" xml:space="preserve">
          <source>Wikipedia article on weaknesses of several password hashing schemes.</source>
          <target state="translated">Статья в Википедии о недостатках нескольких схем хэширования паролей.</target>
        </trans-unit>
        <trans-unit id="8643406d224fa433c9299efb0492bf78e73bb0e0" translate="yes" xml:space="preserve">
          <source>Wikipedia: HTTP cookie</source>
          <target state="translated">Википедия:HTTP-куки</target>
        </trans-unit>
        <trans-unit id="c67b948f981569ab7d4f3ea77c17d7b5eb452012" translate="yes" xml:space="preserve">
          <source>You can also vary this up a little by leaving the dummy field visible but outside the boundaries of the screen, but this is totally up to you.</source>
          <target state="translated">Вы также можете немного изменить это,оставив манекен поле видимым,но за пределами экрана,но это полностью зависит от вас.</target>
        </trans-unit>
        <trans-unit id="d0abd0a897c5f9b121995cd958577feb15f7b6ac" translate="yes" xml:space="preserve">
          <source>You're Probably Storing Passwords Incorrectly</source>
          <target state="translated">Ты,наверное,неправильно хранишь пароли.</target>
        </trans-unit>
        <trans-unit id="fb7f7c94028fe09a6d2d9b3bf0b8501eb7095619" translate="yes" xml:space="preserve">
          <source>etc.</source>
          <target state="translated">etc.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
