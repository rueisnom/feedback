<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/4456438">
    <body>
      <group id="4456438">
        <trans-unit id="6cac2a8923cad50dc4b6fa86c7f805e5d4428924" translate="yes" xml:space="preserve">
          <source>(I looked at Flex 4.5.1 SDK; line numbers may differ in other versions.)</source>
          <target state="translated">(Flex 4.5.1 SDK를 보았습니다. 행 번호는 다른 버전에서 다를 수 있습니다.)</target>
        </trans-unit>
        <trans-unit id="8ff6e962568098364f58d7c91b0955207ed8b001" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/Web_Services_Description_Language&quot;&gt;WSDL&lt;/a&gt; (&lt;a href=&quot;http://en.wikipedia.org/wiki/SOAP&quot;&gt;SOAP&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Web_Services_Description_Language&quot;&gt;WSDL&lt;/a&gt; ( &lt;a href=&quot;http://en.wikipedia.org/wiki/SOAP&quot;&gt;SOAP&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="2bb9cb996cb97333b57ef999e34e9e0a1d0874a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;11/16/2013 update&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;2013 년 11 월 16 일 업데이트&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="05fd1d8a238c98bd7809a8a2f3f4742e22c1d6c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CDATA values are the most appropriate way to mutate an entire text value that would otherwise cause encoding/decoding problems.&lt;/strong&gt; Hex encoding, for instance, is meant for individual characters. CDATA values are preferred when you're escaping the entire text of an element. The biggest reason for this is that it maintains human readability.</source>
          <target state="translated">&lt;strong&gt;CDATA 값은 전체 텍스트 값을 변경하여 인코딩 / 디코딩 문제를 발생시키는 가장 적절한 방법입니다.&lt;/strong&gt; 예를 들어 16 진 인코딩은 개별 문자를위한 것입니다. CDATA 값은 요소의 전체 텍스트를 이스케이프 처리 할 때 선호됩니다. 가장 큰 이유는 사람의 가독성을 유지하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="4a1d78f71f23b5449380ed2117df49c54f403d7e" translate="yes" xml:space="preserve">
          <source>@doc_180 had the right concept, except he is focused on numbers, whereas the original poster had issues with strings.</source>
          <target state="translated">@ doc_180은 숫자에 중점을 둔 것을 제외하고는 올바른 개념을 가지고 있었지만 원래 포스터에는 문자열에 문제가있었습니다.</target>
        </trans-unit>
        <trans-unit id="d26c1bc98a73499555fd3bc490de9db0216946e1" translate="yes" xml:space="preserve">
          <source>According to commenter Justin Mclean on bug report &lt;a href=&quot;https://issues.apache.org/jira/browse/FLEX-33644&quot;&gt;FLEX-33664&lt;/a&gt;, the following is the culprit (see last two tests in my &lt;a href=&quot;http://wonderfl.net/c/dd23/read&quot;&gt;fiddle&lt;/a&gt; which verify this):</source>
          <target state="translated">버그 리포트 &lt;a href=&quot;https://issues.apache.org/jira/browse/FLEX-33644&quot;&gt;FLEX-33664&lt;/a&gt; 에 대한 주석가 저스틴 맥클린 (Justin Mclean)에 따르면, 다음은 범인입니다 (내 &lt;a href=&quot;http://wonderfl.net/c/dd23/read&quot;&gt;바이올린의&lt;/a&gt; 마지막 두 가지 테스트에서이를 확인하십시오).</target>
        </trans-unit>
        <trans-unit id="27678fe1efb1fa49b717efd64777e21dc1aeaf6a" translate="yes" xml:space="preserve">
          <source>ActionScript 3</source>
          <target state="translated">액션 스크립트 3</target>
        </trans-unit>
        <trans-unit id="74a81ee6778205d748feb8dfc2b136f4bdd1429f" translate="yes" xml:space="preserve">
          <source>As a hack, you could consider having a special handling on the client side, converting 'Null' string to something that will never occur, for example, XXNULLXX and converting back on the server.</source>
          <target state="translated">해킹으로 클라이언트 측에서 특수 처리를 수행하여 'Null'문자열을 XXNULLXX와 같이 절대 발생하지 않는 것으로 변환하고 서버에서 다시 변환하는 것을 고려할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3c675a868e2dec5cd65501030e157606d7f53d8" translate="yes" xml:space="preserve">
          <source>At first I thought this was a coercion bug where &lt;code&gt;null&lt;/code&gt; was getting coerced to &lt;code&gt;&quot;null&quot;&lt;/code&gt; and a test of &lt;code&gt;&quot;null&quot; == null&lt;/code&gt; was passing. It's not. &lt;strong&gt;I was close, but so very, very wrong. Sorry about that!&lt;/strong&gt;</source>
          <target state="translated">처음에는 이것이 &lt;code&gt;null&lt;/code&gt; 이 &lt;code&gt;&quot;null&quot;&lt;/code&gt; 로 강제되고 &lt;code&gt;&quot;null&quot; == null&lt;/code&gt; 의 테스트가 통과하는 강제 버그라고 생각했습니다. 그렇지 않습니다. &lt;strong&gt;나는 가까웠지만 매우, 매우 틀렸다.&lt;/strong&gt; &lt;strong&gt;미안합니다!&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8470b4f25cd6939251ceccd15af508c130c5ae2" translate="yes" xml:space="preserve">
          <source>Basically, the validation fails because 'content is null' and therefore your argument is not added to the outgoing SOAP Packet; thus causing the missing parameter error.</source>
          <target state="translated">기본적으로 'content is null'이므로 유효성 검사가 실패하므로 인수가 발신 SOAP 패킷에 추가되지 않습니다. 따라서 누락 된 매개 변수 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="08f98583c1ffe2e492a2510d98ff6f120d45719e" translate="yes" xml:space="preserve">
          <source>Cause</source>
          <target state="translated">Cause</target>
        </trans-unit>
        <trans-unit id="0cffe9dd062bb7ea6125a13cd0b3302f51a551a9" translate="yes" xml:space="preserve">
          <source>Check like this:</source>
          <target state="translated">다음과 같이 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="18d983553cee8a428a8b60fd7d5d1209322abf98" translate="yes" xml:space="preserve">
          <source>ColdFusion 8</source>
          <target state="translated">ColdFusion 8</target>
        </trans-unit>
        <trans-unit id="2342d91901e383edbcd869c83ecd65b9a6927d0e" translate="yes" xml:space="preserve">
          <source>Cute, huh?</source>
          <target state="translated">귀여워?</target>
        </trans-unit>
        <trans-unit id="68a44c97554284cc327992b3e9b308ddb3fb9bf1" translate="yes" xml:space="preserve">
          <source>Edit 12/6/2013</source>
          <target state="translated">2013 년 12 월 6 일 수정</target>
        </trans-unit>
        <trans-unit id="f5024430161386c6c120ac4dd97af27cc5c5df24" translate="yes" xml:space="preserve">
          <source>Flex 3.5</source>
          <target state="translated">플렉스 3.5</target>
        </trans-unit>
        <trans-unit id="0b366dbd3b05ce6efa25c68180628b66e9afbb93" translate="yes" xml:space="preserve">
          <source>How to pass “Null” (a real surname!) to a SOAP web service in ActionScript 3</source>
          <target state="translated">ActionScript 3에서 &quot;Null&quot;(실제 성)을 SOAP 웹 서비스에 전달하는 방법</target>
        </trans-unit>
        <trans-unit id="f2890105f6ac201b38f805c3c637e5bb95f9a91b" translate="yes" xml:space="preserve">
          <source>I am using:</source>
          <target state="translated">나는 사용하고있다 :</target>
        </trans-unit>
        <trans-unit id="f887711dd0bd2bb0179c47ad24dd6334d01d3450" translate="yes" xml:space="preserve">
          <source>I guess getting this fixed in Apache Flex shouldn't be that hard to get done. I would recommend opening a Jira issue or to contact the guys of the apache-flex mailinglist. However this would only fix the client side. I can't say if ColdFusion will be able to work with null values encoded this way.</source>
          <target state="translated">Apache Flex 에서이 문제를 해결하는 것이 그렇게 어렵지 않아야한다고 생각합니다. Jira 이슈를 열거 나 아파치 플렉스 메일 링리스트에게 연락하는 것이 좋습니다. 그러나 이것은 클라이언트 측만 수정합니다. ColdFusion이이 방법으로 인코딩 된 null 값으로 작동 할 수 있는지 말할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e499efefe496fa4137c1893ca1d7acff3e02d988" translate="yes" xml:space="preserve">
          <source>I have one more recent addition to my last comment about RemoteObject/AMF. If you are using ColdFusion&amp;nbsp;10; then properties with a null value on an object are removed from the server-side object.  So, you have to check for the properties existence before accessing it or you will get a runtime error.</source>
          <target state="translated">RemoteObject / AMF에 대한 마지막 의견에 최근에 추가 된 내용이 하나 더 있습니다. ColdFusion 10을 사용하는 경우; 그런 다음 개체에 null 값을 가진 속성이 서버 쪽 개체에서 제거됩니다. 따라서 속성에 액세스하기 전에 속성 존재를 확인해야합니다. 그렇지 않으면 런타임 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="78de5fe306cec8b767a7e535af66f04834fac787" translate="yes" xml:space="preserve">
          <source>I spent a few hours on it, but I need to move on. It'll probably take a day or two.</source>
          <target state="translated">나는 그것에 몇 시간을 보냈지 만 계속 움직여야합니다. 아마 하루나 이틀 걸릴 것입니다.</target>
        </trans-unit>
        <trans-unit id="4939fdbb4371726272a03525f7ed94757131f5be" translate="yes" xml:space="preserve">
          <source>I'll also add that if you switch to using RemoteObject/AMF with ColdFusion, the null is passed without problems.</source>
          <target state="translated">또한 ColdFusion과 함께 RemoteObject / AMF를 사용하도록 전환하면 문제없이 null이 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="923ca09a476e98b2656a0f7e60dc711e4c4bcd6e" translate="yes" xml:space="preserve">
          <source>I've since done lots of &lt;a href=&quot;http://wonderfl.net/c/dd23/read&quot;&gt;fiddling on wonderfl.net&lt;/a&gt; and tracing through the code in &lt;code&gt;mx.rpc.xml.*&lt;/code&gt;. At line 1795 of &lt;code&gt;XMLEncoder&lt;/code&gt; (in the 3.5 source), in &lt;code&gt;setValue&lt;/code&gt;, all of the XMLEncoding boils down to</source>
          <target state="translated">그 후 &lt;a href=&quot;http://wonderfl.net/c/dd23/read&quot;&gt;wonderfl.net에서&lt;/a&gt; 많은 정보 를 수집 하고 &lt;code&gt;mx.rpc.xml.*&lt;/code&gt; 의 코드를 추적했습니다. 3.5 소스의 &lt;code&gt;XMLEncoder&lt;/code&gt; 의 1795 번째 줄에서, &lt;code&gt;setValue&lt;/code&gt; 의 모든 XMLEncoding은</target>
        </trans-unit>
        <trans-unit id="459b9ea209a7494b8c92a2d1d31e84cb370230cb" translate="yes" xml:space="preserve">
          <source>It is not clear from the question that this is the source of the problem, and given the solution noted in a comment to the first answer (embedding the parameters in a structure) it seems likely that it was something else.</source>
          <target state="translated">이것이 문제의 원인이라는 것은 확실하지 않으며, 첫 번째 답변에 대한 의견에 언급 된 해결책 (구조에 매개 변수 포함)이 다른 것으로 보였을 것입니다.</target>
        </trans-unit>
        <trans-unit id="ee4a52d6e3757ce3fd447feaf10944bce4b192c4" translate="yes" xml:space="preserve">
          <source>It is not pretty, but it may solve the issue for such a boundary case.</source>
          <target state="translated">그것은 예쁘지는 않지만 그러한 경계 사건의 문제를 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="193239475e3b806a6287a5e77abba8ea9bfa1720" translate="yes" xml:space="preserve">
          <source>It's a kludge, but assuming there's a minimum length for &lt;code&gt;SEARCHSTRING&lt;/code&gt;, for example 2 characters, &lt;code&gt;substring&lt;/code&gt; the &lt;code&gt;SEARCHSTRING&lt;/code&gt; parameter at the second character and pass it as two parameters instead: &lt;code&gt;SEARCHSTRING1 (&quot;Nu&quot;)&lt;/code&gt; and &lt;code&gt;SEARCHSTRING2 (&quot;ll&quot;).&lt;/code&gt;&lt;code&gt;Concatenate&lt;/code&gt; them back together when executing the query to the database.</source>
          <target state="translated">그것은 kludge이지만 &lt;code&gt;SEARCHSTRING&lt;/code&gt; 의 최소 ​​길이 (예 : 2 문자)가 있다고 가정하면 두 번째 문자에서 &lt;code&gt;SEARCHSTRING&lt;/code&gt; 매개 변수를 &lt;code&gt;substring&lt;/code&gt; 로 묶고 대신 &lt;code&gt;SEARCHSTRING1 (&quot;Nu&quot;)&lt;/code&gt; 및 &lt;code&gt;SEARCHSTRING2 (&quot;ll&quot;).&lt;/code&gt; 두 매개 변수로 전달하십시오 . 데이터베이스에 쿼리를 실행할 때 다시 &lt;code&gt;Concatenate&lt;/code&gt; 하십시오.</target>
        </trans-unit>
        <trans-unit id="e04aa290a2622809c682b07c373883d187c07cfb" translate="yes" xml:space="preserve">
          <source>My guess is, it's passed as &lt;a href=&quot;http://en.wikipedia.org/wiki/NaN&quot;&gt;NaN&lt;/a&gt; (Not a Number). This will mess up the SOAP message unmarshalling process sometime (most notably in the &lt;a href=&quot;http://en.wikipedia.org/wiki/JBoss&quot;&gt;JBoss&lt;/a&gt; 5 server...). I remember extending the SOAP encoder and performing an explicit check on how NaN is handled.</source>
          <target state="translated">내 생각에, 그것은 &lt;a href=&quot;http://en.wikipedia.org/wiki/NaN&quot;&gt;NaN&lt;/a&gt; (숫자가 아님)으로 전달됩니다. 이것은 SOAP 메시지 비 정렬 화 프로세스를 언젠가 (특히 &lt;a href=&quot;http://en.wikipedia.org/wiki/JBoss&quot;&gt;JBoss&lt;/a&gt; 5 서버에서 ...) 엉망으로 만듭니다. SOAP 인코더를 확장하고 NaN 처리 방법을 명시 적으로 확인하는 것을 기억합니다.</target>
        </trans-unit>
        <trans-unit id="406dc4db4b5708b0b40d3f692c5df3c98db2004d" translate="yes" xml:space="preserve">
          <source>Note that the error &lt;strong&gt;does not&lt;/strong&gt; occur when calling the webservice as an object from a ColdFusion page.</source>
          <target state="translated">ColdFusion 페이지에서 객체로 웹 서비스를 호출 할 때 에러 &lt;strong&gt;가&lt;/strong&gt; 발생 &lt;strong&gt;하지 않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="9a9eddbc3e121e428541aaa5054e27c42799aa6e" translate="yes" xml:space="preserve">
          <source>On the &lt;a href=&quot;http://xkcd.com/327/&quot;&gt;xkcd note&lt;/a&gt;, the &lt;a href=&quot;http://bobby-tables.com/&quot;&gt;Bobby Tables website&lt;/a&gt; has good advice for avoiding the improper interpretation of user data (in this case, the string &quot;Null&quot;) in SQL queries in various languages, including &lt;a href=&quot;http://en.wikipedia.org/wiki/Adobe_ColdFusion&quot;&gt;ColdFusion&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://xkcd.com/327/&quot;&gt;xkcd 노트&lt;/a&gt; 에서 &lt;a href=&quot;http://bobby-tables.com/&quot;&gt;Bobby Tables 웹 사이트&lt;/a&gt; 는 &lt;a href=&quot;http://en.wikipedia.org/wiki/Adobe_ColdFusion&quot;&gt;ColdFusion&lt;/a&gt; 등 다양한 언어로 된 SQL 질의에서 사용자 데이터 (이 경우 문자열 &quot;Null&quot;)의 부적절한 해석을 피하는 데 유용한 조언을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="29298d202cafc2e9cbd7bf061777d059150224b1" translate="yes" xml:space="preserve">
          <source>See also Radu Cotescu's blog post &lt;em&gt;&lt;a href=&quot;http://radu.cotescu.com/how-to-send-null-values-in-soapui-requests/&quot;&gt;How to send null values in soapUI requests&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">Radu Cotescu의 블로그 게시물 &lt;em&gt;&lt;a href=&quot;http://radu.cotescu.com/how-to-send-null-values-in-soapui-requests/&quot;&gt;soapUI 요청에서 null 값을 보내는 방법을&lt;/a&gt;&lt;/em&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2f900df805c38b70bf61dcf6d47cbf68f828d45e" translate="yes" xml:space="preserve">
          <source>Since there was a question about how nulls are treated, here is a quick sample application to demonstrate how a string &quot;null&quot; will relate to the reserved word null.</source>
          <target state="translated">널이 처리되는 방법에 대한 질문이 있으므로 다음은 문자열 &quot;널&quot;이 예약어 인 널과 어떻게 관련되는지를 보여주는 빠른 샘플 애플리케이션입니다.</target>
        </trans-unit>
        <trans-unit id="b4377ea37d839e24c2b395131b8a88aabc051919" translate="yes" xml:space="preserve">
          <source>So the value of &quot;Null&quot; would be nothing else than a valid string, which is exactly what you are looking for.</source>
          <target state="translated">따라서 &quot;Null&quot;의 값은 유효한 문자열 일뿐입니다. 바로 이것이 바로 당신이 찾고있는 것입니다.</target>
        </trans-unit>
        <trans-unit id="b4f91bdb0e1b0e40fff4debcd0fea22f1999f491" translate="yes" xml:space="preserve">
          <source>Solution</source>
          <target state="translated">Solution</target>
        </trans-unit>
        <trans-unit id="64918013817af7b320f2fbb9088501138b854d35" translate="yes" xml:space="preserve">
          <source>Stringifying a &lt;code&gt;null&lt;/code&gt; value in &lt;a href=&quot;http://en.wikipedia.org/wiki/ActionScript&quot;&gt;ActionScript&lt;/a&gt; will give the string &lt;code&gt;&quot;NULL&quot;&lt;/code&gt;. My suspicion is that someone has decided that it is, therefore, a good idea to decode the string &lt;code&gt;&quot;NULL&quot;&lt;/code&gt; as &lt;code&gt;null&lt;/code&gt;, causing the breakage you see here -- probably because they were passing in &lt;code&gt;null&lt;/code&gt; objects and getting strings in the database, when they didn't want that (so be sure to check for that kind of bug, too).</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/ActionScript&quot;&gt;ActionScript&lt;/a&gt; 에서 &lt;code&gt;null&lt;/code&gt; 값을 문자열 화하면 &lt;code&gt;&quot;NULL&quot;&lt;/code&gt; 문자열이 제공 됩니다 . 내 의혹은 누군가가 &lt;code&gt;&quot;NULL&quot;&lt;/code&gt; 문자열을 &lt;code&gt;null&lt;/code&gt; 로 디코딩하는 것이 좋은 생각이라고 결론 내렸다는 것입니다. 아마도 &lt;code&gt;null&lt;/code&gt; 객체를 전달하고 데이터베이스에서 문자열을 가져 왔기 때문에 여기에 표시되는 손상이 발생할 수 있습니다. 그들은 그것을 원하지 않았습니다 (그래서 그런 종류의 버그도 확인하십시오).</target>
        </trans-unit>
        <trans-unit id="40cc33374cf7887c1c959c3df228a5f8a4b57eba" translate="yes" xml:space="preserve">
          <source>The only reasonable workaround I can think of, short of fixing this bug in every damn version of ActionScript, is to test fields for &quot;null&quot; and &lt;strong&gt;escape them as &lt;a href=&quot;https://stackoverflow.com/q/1239466/203705&quot;&gt;CDATA values&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="translated">내가 생각할 수있는 유일한 합리적인 해결 방법은 ActionScript의 모든 버전 에서이 버그를 수정하지 않고 &quot;null&quot;에 대한 필드를 테스트 &lt;strong&gt;하고 &lt;a href=&quot;https://stackoverflow.com/q/1239466/203705&quot;&gt;CDATA 값&lt;/a&gt; 으로 이스케이프 처리하는 것입니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="96a8767d639dfeaacb6c5e2c25cd191c3aa44f4b" translate="yes" xml:space="preserve">
          <source>The parameter type is &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">매개 변수 유형은 &lt;code&gt;string&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ed6408b62ce617a2949536d36fd02090daeaf2b1" translate="yes" xml:space="preserve">
          <source>The problem could be in Flex's SOAP encoder. Try extending the SOAP encoder in your Flex application and debug the program to see how the null value is handled.</source>
          <target state="translated">Flex의 SOAP 인코더에 문제가있을 수 있습니다. Flex 애플리케이션에서 SOAP 인코더를 확장하고 프로그램을 디버그하여 널값 처리 방법을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="5c33891f4670754851f4c2504e15d0c2345bb5e9" translate="yes" xml:space="preserve">
          <source>The solution is to change the &lt;code&gt;mx.rpc.xml.XMLEncoder&lt;/code&gt; file. This is line 121:</source>
          <target state="translated">해결책은 &lt;code&gt;mx.rpc.xml.XMLEncoder&lt;/code&gt; 파일을 변경하는 것 입니다. 이것은 121 행입니다.</target>
        </trans-unit>
        <trans-unit id="de3d905c386aff3e6afe979f4b889a3e6f2b4ae5" translate="yes" xml:space="preserve">
          <source>The trace output is:</source>
          <target state="translated">추적 출력은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c097412282e2a65a24036f4f1ba00d085c44c3c3" translate="yes" xml:space="preserve">
          <source>This code, according to my original fiddle, returns an empty XML element. But why?</source>
          <target state="translated">내 원래 바이올린에 따르면이 코드는 빈 XML 요소를 반환합니다. 그런데 왜?</target>
        </trans-unit>
        <trans-unit id="773a00fdf7d4bdf7ceb62579e80b63e6c1c3c71d" translate="yes" xml:space="preserve">
          <source>This is a change in behavior from ColdFusion&amp;nbsp;9; where the null properties would turn into empty strings.</source>
          <target state="translated">이것은 ColdFusion 9에서 변경된 동작입니다. 여기서 null 속성은 빈 문자열로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="aa2029e27a48117d867c828563c3db0e4d59dce5" translate="yes" xml:space="preserve">
          <source>Tracking it down</source>
          <target state="translated">그것을 추적</target>
        </trans-unit>
        <trans-unit id="c2e57ef74d83eec884d8e558a640aaa52275a45a" translate="yes" xml:space="preserve">
          <source>Translate all characters into their hex-entity equivalents. In this case, &lt;code&gt;Null&lt;/code&gt; would be converted into &lt;code&gt;&amp;amp;#4E;&amp;amp;#75;&amp;amp;#6C;&amp;amp;#6C;&lt;/code&gt;</source>
          <target state="translated">모든 문자를 16 진 엔터티로 변환하십시오. 이 경우 &lt;code&gt;Null&lt;/code&gt; 은 &lt;code&gt;&amp;amp;#4E;&amp;amp;#75;&amp;amp;#6C;&amp;amp;#6C;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7cd4ebda0886a79f5011fb387c1a02284a7365b4" translate="yes" xml:space="preserve">
          <source>We have an employee whose surname is Null. Our employee lookup application is killed when that last name is used as the search term (which happens to be quite often now). The error received (thanks Fiddler!) is:</source>
          <target state="translated">성이 Null 인 직원이 있습니다. 직원 검색 응용 프로그램은 해당 성이 검색어로 사용될 때 종료됩니다 (지금은 자주 발생 함). 받은 오류 (Fiddler 덕분에) :</target>
        </trans-unit>
        <trans-unit id="308c89d30ee6db7b9ecb19b794091a75d123f307" translate="yes" xml:space="preserve">
          <source>Well, I guess that Flex' implementation of the SOAP Encoder seems to serialize null values incorrectly. Serializing them as a String Null doesn't seem to be a good solution. The formally correct version seems to be to pass a null value as:</source>
          <target state="translated">Flex의 SOAP Encoder 구현은 null 값을 잘못 직렬화하는 것 같습니다. 그것들을 String Null로 직렬화하는 것은 좋은 해결책이 아닌 것 같습니다. 공식적으로 올바른 버전은 다음과 같이 null 값을 전달하는 것으로 보입니다.</target>
        </trans-unit>
        <trans-unit id="c3a1f37a4e99f4ebffebe16b84941a43e3f41db2" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;currentChild.appendChild&lt;/code&gt; is passed the string &lt;code&gt;&quot;null&quot;&lt;/code&gt;, it first converts it to a root XML element with text &lt;code&gt;null&lt;/code&gt;, and then tests that element against the null literal. This is a weak equality test, so either the XML containing null is coerced to the null type, or the null type is coerced to a root xml element containing the string &quot;null&quot;, and the test passes where it arguably should fail. One fix might be to always use &lt;a href=&quot;http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/operators.html#strict_equality&quot;&gt;strict equality&lt;/a&gt; tests when checking XML (or anything, really) for &quot;nullness.&quot;</source>
          <target state="translated">&lt;code&gt;currentChild.appendChild&lt;/code&gt; 에 문자열 &lt;code&gt;&quot;null&quot;&lt;/code&gt; 이 전달되면 먼저 문자열이 &lt;code&gt;null&lt;/code&gt; 인 텍스트를 루트 XML 요소로 변환 한 다음 해당 요소를 null 리터럴에 대해 테스트합니다. 이것은 약한 동등성 테스트이므로 null을 포함하는 XML이 null 유형으로 강제 변환되거나 null 유형이 문자열 &quot;null&quot;을 포함하는 루트 xml 요소로 강제 변환되고 테스트가 실패 할 경우 통과합니다. 한 가지 수정은 &quot;널 (nullness)&quot;에 대해 XML (또는 실제로 무엇이든)을 확인할 때 항상 &lt;a href=&quot;http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/operators.html#strict_equality&quot;&gt;엄격한 동등성&lt;/a&gt; 테스트를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="877e7dcd369777017e172aa27033ac212b6f56e0" translate="yes" xml:space="preserve">
          <source>You have to extend this class to remove the validation.  Then there is a big snowball up the chain, modifying SOAPEncoder to use your modified XMLEncoder, and then modifying Operation to use your modified SOAPEncoder, and then moidfying WebService to use your alternate Operation class.</source>
          <target state="translated">유효성 검사를 제거하려면이 클래스를 확장해야합니다. 그런 다음 체인에 큰 눈덩이가있어 수정 된 XMLEncoder를 사용하도록 SOAPEncoder를 수정 한 다음 수정 된 SOAPEncoder를 사용하도록 Operation을 수정 한 다음 WebService를 moidfying하여 대체 Operation 클래스를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="3926523f25dc8876bc153f0713c91eb61a5a7e46" translate="yes" xml:space="preserve">
          <source>You may be able to just fix the XMLEncoder line and do some &lt;a href=&quot;https://en.wikipedia.org/wiki/Monkey_patch&quot;&gt;monkey patching&lt;/a&gt; to use your own class.</source>
          <target state="translated">XMLEncoder 줄을 수정하고 자신의 클래스를 사용하기 위해 &lt;a href=&quot;https://en.wikipedia.org/wiki/Monkey_patch&quot;&gt;원숭이 패치&lt;/a&gt; 를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c153947527842c1d4665c2d9e89c221f1fb7cde6" translate="yes" xml:space="preserve">
          <source>null string is not equal to null reserved word using the != condition</source>
          <target state="translated">null 문자열은! = 조건을 사용하여 null 예약어와 같지 않습니다</target>
        </trans-unit>
        <trans-unit id="d8e72b2c5ece5bbfd6ef420a56b1a98be5cf82da" translate="yes" xml:space="preserve">
          <source>null string is not equal to null reserved word using the == condition</source>
          <target state="translated">== 조건을 사용하여 널 문자열이 널 예약어와 같지 않음</target>
        </trans-unit>
        <trans-unit id="0e4d2e42ac5d9802583f1484a8d99ea986417b60" translate="yes" xml:space="preserve">
          <source>null string is not equal to null reserved word using the === condition</source>
          <target state="translated">=== 조건을 사용하여 널 문자열이 널 예약어와 같지 않음</target>
        </trans-unit>
        <trans-unit id="71fd2f675fdcd0012800f85123513f89ff946960" translate="yes" xml:space="preserve">
          <source>which is essentially the same as:</source>
          <target state="translated">본질적으로 다음과 같습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
