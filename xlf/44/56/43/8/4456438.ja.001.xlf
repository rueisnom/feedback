<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/4456438">
    <body>
      <group id="4456438">
        <trans-unit id="6cac2a8923cad50dc4b6fa86c7f805e5d4428924" translate="yes" xml:space="preserve">
          <source>(I looked at Flex 4.5.1 SDK; line numbers may differ in other versions.)</source>
          <target state="translated">(Flex 4.5.1 SDKを見てみました。他のバージョンでは行番号が異なる場合があります)</target>
        </trans-unit>
        <trans-unit id="8ff6e962568098364f58d7c91b0955207ed8b001" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/Web_Services_Description_Language&quot;&gt;WSDL&lt;/a&gt; (&lt;a href=&quot;http://en.wikipedia.org/wiki/SOAP&quot;&gt;SOAP&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Web_Services_Description_Language&quot;&gt;WSDL&lt;/a&gt; （ &lt;a href=&quot;http://en.wikipedia.org/wiki/SOAP&quot;&gt;SOAP&lt;/a&gt; ）</target>
        </trans-unit>
        <trans-unit id="2bb9cb996cb97333b57ef999e34e9e0a1d0874a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;11/16/2013 update&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;2013年11月16日更新&lt;/strong&gt; ：</target>
        </trans-unit>
        <trans-unit id="05fd1d8a238c98bd7809a8a2f3f4742e22c1d6c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CDATA values are the most appropriate way to mutate an entire text value that would otherwise cause encoding/decoding problems.&lt;/strong&gt; Hex encoding, for instance, is meant for individual characters. CDATA values are preferred when you're escaping the entire text of an element. The biggest reason for this is that it maintains human readability.</source>
          <target state="translated">&lt;strong&gt;CDATA値は、テキスト値全体を変更する最も適切な方法であり、そうしないとエンコード/デコードの問題が発生します。&lt;/strong&gt; たとえば、16進エンコーディングは個々の文字を対象としています。 要素のテキスト全体をエスケープする場合は、CDATA値が推奨されます。 これの最大の理由は、人間の可読性を維持することです。</target>
        </trans-unit>
        <trans-unit id="4a1d78f71f23b5449380ed2117df49c54f403d7e" translate="yes" xml:space="preserve">
          <source>@doc_180 had the right concept, except he is focused on numbers, whereas the original poster had issues with strings.</source>
          <target state="translated">元の投稿者が文字列の問題を抱えていたのに対し、彼は数字に焦点を当てていることを除けば、@doc_180は正しいコンセプトを持っていました。</target>
        </trans-unit>
        <trans-unit id="d26c1bc98a73499555fd3bc490de9db0216946e1" translate="yes" xml:space="preserve">
          <source>According to commenter Justin Mclean on bug report &lt;a href=&quot;https://issues.apache.org/jira/browse/FLEX-33644&quot;&gt;FLEX-33664&lt;/a&gt;, the following is the culprit (see last two tests in my &lt;a href=&quot;http://wonderfl.net/c/dd23/read&quot;&gt;fiddle&lt;/a&gt; which verify this):</source>
          <target state="translated">バグレポート&lt;a href=&quot;https://issues.apache.org/jira/browse/FLEX-33644&quot;&gt;FLEX-33664&lt;/a&gt;に関するコメント投稿者 Justin Mcleanによると、以下が原因です（これを確認する私の&lt;a href=&quot;http://wonderfl.net/c/dd23/read&quot;&gt;フィドルの&lt;/a&gt;最後の2つのテストを参照してください）。</target>
        </trans-unit>
        <trans-unit id="27678fe1efb1fa49b717efd64777e21dc1aeaf6a" translate="yes" xml:space="preserve">
          <source>ActionScript 3</source>
          <target state="translated">ActionScript 3</target>
        </trans-unit>
        <trans-unit id="74a81ee6778205d748feb8dfc2b136f4bdd1429f" translate="yes" xml:space="preserve">
          <source>As a hack, you could consider having a special handling on the client side, converting 'Null' string to something that will never occur, for example, XXNULLXX and converting back on the server.</source>
          <target state="translated">ハックとして、クライアント側で特別な処理をして、'Null'の文字列をXXNULLXXのような絶対に発生しないものに変換して、サーバー側で変換し直すことを検討してみてはいかがでしょうか。</target>
        </trans-unit>
        <trans-unit id="a3c675a868e2dec5cd65501030e157606d7f53d8" translate="yes" xml:space="preserve">
          <source>At first I thought this was a coercion bug where &lt;code&gt;null&lt;/code&gt; was getting coerced to &lt;code&gt;&quot;null&quot;&lt;/code&gt; and a test of &lt;code&gt;&quot;null&quot; == null&lt;/code&gt; was passing. It's not. &lt;strong&gt;I was close, but so very, very wrong. Sorry about that!&lt;/strong&gt;</source>
          <target state="translated">最初、私はこれが、 &lt;code&gt;null&lt;/code&gt; が &lt;code&gt;&quot;null&quot;&lt;/code&gt; 強制変換されており、 &lt;code&gt;&quot;null&quot; == null&lt;/code&gt; テストに合格した強制バグだと思っていました。 そうではありません。 &lt;strong&gt;私は近くにいたが、それは非常に間違っていた。&lt;/strong&gt; &lt;strong&gt;申し訳ありません！&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8470b4f25cd6939251ceccd15af508c130c5ae2" translate="yes" xml:space="preserve">
          <source>Basically, the validation fails because 'content is null' and therefore your argument is not added to the outgoing SOAP Packet; thus causing the missing parameter error.</source>
          <target state="translated">基本的には、「content is null」のために検証に失敗し、引数が送信する SOAP パケットに追加されないため、パラメータ不足のエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="08f98583c1ffe2e492a2510d98ff6f120d45719e" translate="yes" xml:space="preserve">
          <source>Cause</source>
          <target state="translated">Cause</target>
        </trans-unit>
        <trans-unit id="0cffe9dd062bb7ea6125a13cd0b3302f51a551a9" translate="yes" xml:space="preserve">
          <source>Check like this:</source>
          <target state="translated">こんな感じでチェックしてみてください。</target>
        </trans-unit>
        <trans-unit id="18d983553cee8a428a8b60fd7d5d1209322abf98" translate="yes" xml:space="preserve">
          <source>ColdFusion 8</source>
          <target state="translated">ColdFusion 8</target>
        </trans-unit>
        <trans-unit id="2342d91901e383edbcd869c83ecd65b9a6927d0e" translate="yes" xml:space="preserve">
          <source>Cute, huh?</source>
          <target state="translated">可愛いでしょ?</target>
        </trans-unit>
        <trans-unit id="68a44c97554284cc327992b3e9b308ddb3fb9bf1" translate="yes" xml:space="preserve">
          <source>Edit 12/6/2013</source>
          <target state="translated">編集 1262013</target>
        </trans-unit>
        <trans-unit id="f5024430161386c6c120ac4dd97af27cc5c5df24" translate="yes" xml:space="preserve">
          <source>Flex 3.5</source>
          <target state="translated">フレックス3.5</target>
        </trans-unit>
        <trans-unit id="0b366dbd3b05ce6efa25c68180628b66e9afbb93" translate="yes" xml:space="preserve">
          <source>How to pass “Null” (a real surname!) to a SOAP web service in ActionScript 3</source>
          <target state="translated">ActionScript 3でSOAPウェブサービスに &quot;Null&quot;(本当の苗字!)を渡す方法</target>
        </trans-unit>
        <trans-unit id="f2890105f6ac201b38f805c3c637e5bb95f9a91b" translate="yes" xml:space="preserve">
          <source>I am using:</source>
          <target state="translated">使っています。</target>
        </trans-unit>
        <trans-unit id="f887711dd0bd2bb0179c47ad24dd6334d01d3450" translate="yes" xml:space="preserve">
          <source>I guess getting this fixed in Apache Flex shouldn't be that hard to get done. I would recommend opening a Jira issue or to contact the guys of the apache-flex mailinglist. However this would only fix the client side. I can't say if ColdFusion will be able to work with null values encoded this way.</source>
          <target state="translated">Apache Flex でこれを修正するのはそれほど難しくないと思います。Jira の問題を開くか、apache-flex メーリングリストに連絡することをお勧めします。しかし、これはクライアント側を修正するだけです。ColdFusion がこの方法でエンコードされた null 値で動作するかどうかはわかりません。</target>
        </trans-unit>
        <trans-unit id="e499efefe496fa4137c1893ca1d7acff3e02d988" translate="yes" xml:space="preserve">
          <source>I have one more recent addition to my last comment about RemoteObject/AMF. If you are using ColdFusion&amp;nbsp;10; then properties with a null value on an object are removed from the server-side object.  So, you have to check for the properties existence before accessing it or you will get a runtime error.</source>
          <target state="translated">RemoteObject / AMFに関する私の最後のコメントに、もう1つ最近追加しました。 ColdFusion 10を使用している場合。 次に、オブジェクトにnull値を持つプロパティがサーバー側オブジェクトから削除されます。 そのため、アクセスする前にプロパティの存在を確認する必要があります。そうしないと、ランタイムエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="78de5fe306cec8b767a7e535af66f04834fac787" translate="yes" xml:space="preserve">
          <source>I spent a few hours on it, but I need to move on. It'll probably take a day or two.</source>
          <target state="translated">数時間かけてやってみたけど、そろそろ先に進まないと。1日か2日はかかるだろう。</target>
        </trans-unit>
        <trans-unit id="4939fdbb4371726272a03525f7ed94757131f5be" translate="yes" xml:space="preserve">
          <source>I'll also add that if you switch to using RemoteObject/AMF with ColdFusion, the null is passed without problems.</source>
          <target state="translated">また、ColdFusionでRemoteObjectAMFを使うように切り替えると、問題なくnullが渡されることも付け加えておきます。</target>
        </trans-unit>
        <trans-unit id="923ca09a476e98b2656a0f7e60dc711e4c4bcd6e" translate="yes" xml:space="preserve">
          <source>I've since done lots of &lt;a href=&quot;http://wonderfl.net/c/dd23/read&quot;&gt;fiddling on wonderfl.net&lt;/a&gt; and tracing through the code in &lt;code&gt;mx.rpc.xml.*&lt;/code&gt;. At line 1795 of &lt;code&gt;XMLEncoder&lt;/code&gt; (in the 3.5 source), in &lt;code&gt;setValue&lt;/code&gt;, all of the XMLEncoding boils down to</source>
          <target state="translated">それ以来&lt;a href=&quot;http://wonderfl.net/c/dd23/read&quot;&gt;、wonderfl.net&lt;/a&gt;をいじくり回したり、 &lt;code&gt;mx.rpc.xml.*&lt;/code&gt; コードをたどったりしてきました。 &lt;code&gt;XMLEncoder&lt;/code&gt; の 1795行目 （3.5ソース内）の &lt;code&gt;setValue&lt;/code&gt; では、すべてのXMLEncodingが次のように要約されます。</target>
        </trans-unit>
        <trans-unit id="459b9ea209a7494b8c92a2d1d31e84cb370230cb" translate="yes" xml:space="preserve">
          <source>It is not clear from the question that this is the source of the problem, and given the solution noted in a comment to the first answer (embedding the parameters in a structure) it seems likely that it was something else.</source>
          <target state="translated">これが問題の原因であることは質問からは明らかではありませんし、最初の解答へのコメントで指摘されている解決策(構造体にパラメータを埋め込む)を考えると、それは他の何かである可能性が高いように思えます。</target>
        </trans-unit>
        <trans-unit id="ee4a52d6e3757ce3fd447feaf10944bce4b192c4" translate="yes" xml:space="preserve">
          <source>It is not pretty, but it may solve the issue for such a boundary case.</source>
          <target state="translated">きれいごとではありませんが、このような境界の場合は解決するかもしれません。</target>
        </trans-unit>
        <trans-unit id="193239475e3b806a6287a5e77abba8ea9bfa1720" translate="yes" xml:space="preserve">
          <source>It's a kludge, but assuming there's a minimum length for &lt;code&gt;SEARCHSTRING&lt;/code&gt;, for example 2 characters, &lt;code&gt;substring&lt;/code&gt; the &lt;code&gt;SEARCHSTRING&lt;/code&gt; parameter at the second character and pass it as two parameters instead: &lt;code&gt;SEARCHSTRING1 (&quot;Nu&quot;)&lt;/code&gt; and &lt;code&gt;SEARCHSTRING2 (&quot;ll&quot;).&lt;/code&gt;&lt;code&gt;Concatenate&lt;/code&gt; them back together when executing the query to the database.</source>
          <target state="translated">これは厄介ですが、SEARCHSTRINGの最小の長さ（たとえば2文字）があると仮定して、2番目の文字で &lt;code&gt;SEARCHSTRING&lt;/code&gt; パラメーターを &lt;code&gt;substring&lt;/code&gt; 化し、代わりに2つのパラメーターとして渡します： &lt;code&gt;SEARCHSTRING1 (&quot;Nu&quot;)&lt;/code&gt; および &lt;code&gt;SEARCHSTRING2 (&quot;ll&quot;).&lt;/code&gt; データベースへのクエリを実行するときに、それらを &lt;code&gt;Concatenate&lt;/code&gt; して戻します。</target>
        </trans-unit>
        <trans-unit id="e04aa290a2622809c682b07c373883d187c07cfb" translate="yes" xml:space="preserve">
          <source>My guess is, it's passed as &lt;a href=&quot;http://en.wikipedia.org/wiki/NaN&quot;&gt;NaN&lt;/a&gt; (Not a Number). This will mess up the SOAP message unmarshalling process sometime (most notably in the &lt;a href=&quot;http://en.wikipedia.org/wiki/JBoss&quot;&gt;JBoss&lt;/a&gt; 5 server...). I remember extending the SOAP encoder and performing an explicit check on how NaN is handled.</source>
          <target state="translated">私の推測では、 &lt;a href=&quot;http://en.wikipedia.org/wiki/NaN&quot;&gt;NaN&lt;/a&gt; （Not a Number）として渡されます。 これはSOAPメッセージの非整列化プロセスを混乱させることがあります（特に&lt;a href=&quot;http://en.wikipedia.org/wiki/JBoss&quot;&gt;JBoss&lt;/a&gt; 5サーバーで...）。 SOAPエンコーダーを拡張し、NaNの処理方法を明示的に確認したことを覚えています。</target>
        </trans-unit>
        <trans-unit id="406dc4db4b5708b0b40d3f692c5df3c98db2004d" translate="yes" xml:space="preserve">
          <source>Note that the error &lt;strong&gt;does not&lt;/strong&gt; occur when calling the webservice as an object from a ColdFusion page.</source>
          <target state="translated">このエラー&lt;strong&gt;は&lt;/strong&gt; 、ColdFusionページからオブジェクトとしてWebサービスを呼び出す場合に&lt;strong&gt;は&lt;/strong&gt;発生&lt;strong&gt;しません&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a9eddbc3e121e428541aaa5054e27c42799aa6e" translate="yes" xml:space="preserve">
          <source>On the &lt;a href=&quot;http://xkcd.com/327/&quot;&gt;xkcd note&lt;/a&gt;, the &lt;a href=&quot;http://bobby-tables.com/&quot;&gt;Bobby Tables website&lt;/a&gt; has good advice for avoiding the improper interpretation of user data (in this case, the string &quot;Null&quot;) in SQL queries in various languages, including &lt;a href=&quot;http://en.wikipedia.org/wiki/Adobe_ColdFusion&quot;&gt;ColdFusion&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://xkcd.com/327/&quot;&gt;xkcd note&lt;/a&gt;で、 &lt;a href=&quot;http://bobby-tables.com/&quot;&gt;Bobby TablesのWebサイトに&lt;/a&gt;は、 &lt;a href=&quot;http://en.wikipedia.org/wiki/Adobe_ColdFusion&quot;&gt;ColdFusion&lt;/a&gt;を含むさまざまな言語のSQLクエリでユーザーデータ（この場合は文字列 &quot;Null&quot;）が正しく解釈されないようにするための良いアドバイスがあります。</target>
        </trans-unit>
        <trans-unit id="29298d202cafc2e9cbd7bf061777d059150224b1" translate="yes" xml:space="preserve">
          <source>See also Radu Cotescu's blog post &lt;em&gt;&lt;a href=&quot;http://radu.cotescu.com/how-to-send-null-values-in-soapui-requests/&quot;&gt;How to send null values in soapUI requests&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">Radu Cotescuのブログ投稿&lt;em&gt;&lt;a href=&quot;http://radu.cotescu.com/how-to-send-null-values-in-soapui-requests/&quot;&gt;「soapUIリクエストでnull値を送信する方法&lt;/a&gt;&lt;/em&gt; 」も参照してください。</target>
        </trans-unit>
        <trans-unit id="2f900df805c38b70bf61dcf6d47cbf68f828d45e" translate="yes" xml:space="preserve">
          <source>Since there was a question about how nulls are treated, here is a quick sample application to demonstrate how a string &quot;null&quot; will relate to the reserved word null.</source>
          <target state="translated">ヌルがどのように扱われるかについての質問がありましたので、ここでは文字列「null」が予約語「null」とどのように関係するかを示す簡単なサンプルアプリケーションをご紹介します。</target>
        </trans-unit>
        <trans-unit id="b4377ea37d839e24c2b395131b8a88aabc051919" translate="yes" xml:space="preserve">
          <source>So the value of &quot;Null&quot; would be nothing else than a valid string, which is exactly what you are looking for.</source>
          <target state="translated">つまり、&quot;Null &quot;の値は有効な文字列以外の何物でもないということです。</target>
        </trans-unit>
        <trans-unit id="b4f91bdb0e1b0e40fff4debcd0fea22f1999f491" translate="yes" xml:space="preserve">
          <source>Solution</source>
          <target state="translated">Solution</target>
        </trans-unit>
        <trans-unit id="64918013817af7b320f2fbb9088501138b854d35" translate="yes" xml:space="preserve">
          <source>Stringifying a &lt;code&gt;null&lt;/code&gt; value in &lt;a href=&quot;http://en.wikipedia.org/wiki/ActionScript&quot;&gt;ActionScript&lt;/a&gt; will give the string &lt;code&gt;&quot;NULL&quot;&lt;/code&gt;. My suspicion is that someone has decided that it is, therefore, a good idea to decode the string &lt;code&gt;&quot;NULL&quot;&lt;/code&gt; as &lt;code&gt;null&lt;/code&gt;, causing the breakage you see here -- probably because they were passing in &lt;code&gt;null&lt;/code&gt; objects and getting strings in the database, when they didn't want that (so be sure to check for that kind of bug, too).</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/ActionScript&quot;&gt;ActionScriptで&lt;/a&gt; &lt;code&gt;null&lt;/code&gt; 値を文字列化すると、文字列 &lt;code&gt;&quot;NULL&quot;&lt;/code&gt; が返されます 。 私の疑いは、したがって、誰かが文字列 &lt;code&gt;&quot;NULL&quot;&lt;/code&gt; を &lt;code&gt;null&lt;/code&gt; としてデコードして、ここで見られる破損を引き起こすことは良い考えだと誰かが決定したということです-おそらく、それらが &lt;code&gt;null&lt;/code&gt; オブジェクトを渡してデータベースで文字列を取得していたためです。彼らはそれを望んでいませんでした（そのようなバグも必ず確認してください）。</target>
        </trans-unit>
        <trans-unit id="40cc33374cf7887c1c959c3df228a5f8a4b57eba" translate="yes" xml:space="preserve">
          <source>The only reasonable workaround I can think of, short of fixing this bug in every damn version of ActionScript, is to test fields for &quot;null&quot; and &lt;strong&gt;escape them as &lt;a href=&quot;https://stackoverflow.com/q/1239466/203705&quot;&gt;CDATA values&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="translated">私が考えることができる唯一の合理的な回避策は、ActionScriptのすべてのいまいましいバージョンでこのバグを修正する前に、フィールドを「null」かどうかテスト&lt;strong&gt;して&lt;a href=&quot;https://stackoverflow.com/q/1239466/203705&quot;&gt;CDATA値&lt;/a&gt;としてエスケープすることです 。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="96a8767d639dfeaacb6c5e2c25cd191c3aa44f4b" translate="yes" xml:space="preserve">
          <source>The parameter type is &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">パラメータタイプは &lt;code&gt;string&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ed6408b62ce617a2949536d36fd02090daeaf2b1" translate="yes" xml:space="preserve">
          <source>The problem could be in Flex's SOAP encoder. Try extending the SOAP encoder in your Flex application and debug the program to see how the null value is handled.</source>
          <target state="translated">問題はFlexのSOAPエンコーダにある可能性があります。FlexアプリケーションでSOAPエンコーダを拡張してみて、NULL値がどのように処理されるかを確認するためにプログラムをデバッグします。</target>
        </trans-unit>
        <trans-unit id="5c33891f4670754851f4c2504e15d0c2345bb5e9" translate="yes" xml:space="preserve">
          <source>The solution is to change the &lt;code&gt;mx.rpc.xml.XMLEncoder&lt;/code&gt; file. This is line 121:</source>
          <target state="translated">解決策は、 &lt;code&gt;mx.rpc.xml.XMLEncoder&lt;/code&gt; ファイルを変更することです。 これは121行目です。</target>
        </trans-unit>
        <trans-unit id="de3d905c386aff3e6afe979f4b889a3e6f2b4ae5" translate="yes" xml:space="preserve">
          <source>The trace output is:</source>
          <target state="translated">トレース出力は</target>
        </trans-unit>
        <trans-unit id="c097412282e2a65a24036f4f1ba00d085c44c3c3" translate="yes" xml:space="preserve">
          <source>This code, according to my original fiddle, returns an empty XML element. But why?</source>
          <target state="translated">このコードは、私のオリジナルのフィドルによると、空のXML要素を返します。しかし、なぜでしょうか?</target>
        </trans-unit>
        <trans-unit id="773a00fdf7d4bdf7ceb62579e80b63e6c1c3c71d" translate="yes" xml:space="preserve">
          <source>This is a change in behavior from ColdFusion&amp;nbsp;9; where the null properties would turn into empty strings.</source>
          <target state="translated">これは、ColdFusion 9からの動作の変更です。 nullプロパティは空の文字列になります。</target>
        </trans-unit>
        <trans-unit id="aa2029e27a48117d867c828563c3db0e4d59dce5" translate="yes" xml:space="preserve">
          <source>Tracking it down</source>
          <target state="translated">それを追跡する</target>
        </trans-unit>
        <trans-unit id="c2e57ef74d83eec884d8e558a640aaa52275a45a" translate="yes" xml:space="preserve">
          <source>Translate all characters into their hex-entity equivalents. In this case, &lt;code&gt;Null&lt;/code&gt; would be converted into &lt;code&gt;&amp;amp;#4E;&amp;amp;#75;&amp;amp;#6C;&amp;amp;#6C;&lt;/code&gt;</source>
          <target state="translated">すべての文字を対応する16進エンティティに変換します。 この場合、 &lt;code&gt;Null&lt;/code&gt; は &lt;code&gt;&amp;amp;#4E;&amp;amp;#75;&amp;amp;#6C;&amp;amp;#6C;&lt;/code&gt; に変換されます。</target>
        </trans-unit>
        <trans-unit id="7cd4ebda0886a79f5011fb387c1a02284a7365b4" translate="yes" xml:space="preserve">
          <source>We have an employee whose surname is Null. Our employee lookup application is killed when that last name is used as the search term (which happens to be quite often now). The error received (thanks Fiddler!) is:</source>
          <target state="translated">苗字がNullの従業員がいます。その苗字が検索語として使用されると、当社の従業員検索アプリケーションは終了してしまいます(今ではよくあることですが)。受信したエラーは(Fiddlerさんありがとうございます!)。</target>
        </trans-unit>
        <trans-unit id="308c89d30ee6db7b9ecb19b794091a75d123f307" translate="yes" xml:space="preserve">
          <source>Well, I guess that Flex' implementation of the SOAP Encoder seems to serialize null values incorrectly. Serializing them as a String Null doesn't seem to be a good solution. The formally correct version seems to be to pass a null value as:</source>
          <target state="translated">さて、私はFlexのSOAPエンコーダの実装は、NULL値を誤ってシリアライズするようです。文字列 Null としてシリアライズすることは良い解決策ではないようです。形式的に正しいバージョンは、NULL 値を</target>
        </trans-unit>
        <trans-unit id="c3a1f37a4e99f4ebffebe16b84941a43e3f41db2" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;currentChild.appendChild&lt;/code&gt; is passed the string &lt;code&gt;&quot;null&quot;&lt;/code&gt;, it first converts it to a root XML element with text &lt;code&gt;null&lt;/code&gt;, and then tests that element against the null literal. This is a weak equality test, so either the XML containing null is coerced to the null type, or the null type is coerced to a root xml element containing the string &quot;null&quot;, and the test passes where it arguably should fail. One fix might be to always use &lt;a href=&quot;http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/operators.html#strict_equality&quot;&gt;strict equality&lt;/a&gt; tests when checking XML (or anything, really) for &quot;nullness.&quot;</source>
          <target state="translated">&lt;code&gt;currentChild.appendChild&lt;/code&gt; に文字列 &lt;code&gt;&quot;null&quot;&lt;/code&gt; が渡されると、文字列nullを持つルートXML要素に変換され、次にその要素がnullリテラルに対してテストされます。 これは弱い等価性テストであるため、nullを含むXMLがnull型に強制変換されるか、null型が文字列 &quot;null&quot;を含むルートxml要素に強制変換され、テストは間違いなく失敗するはずです。 1つの修正は、XML（または実際には何でも）の「ヌル性」をチェックするときに常に&lt;a href=&quot;http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/operators.html#strict_equality&quot;&gt;厳密な等価&lt;/a&gt;テストを使用することです。</target>
        </trans-unit>
        <trans-unit id="877e7dcd369777017e172aa27033ac212b6f56e0" translate="yes" xml:space="preserve">
          <source>You have to extend this class to remove the validation.  Then there is a big snowball up the chain, modifying SOAPEncoder to use your modified XMLEncoder, and then modifying Operation to use your modified SOAPEncoder, and then moidfying WebService to use your alternate Operation class.</source>
          <target state="translated">このクラスを拡張してバリデーションを削除しなければなりません。次に、SOAPEncoderを修正してXMLEncoderを使用し、Operationを修正してSOAPEncoderを使用し、WebServiceをmoidfyingして別のOperationクラスを使用するという、連鎖的に大きな雪だるま式の展開があります。</target>
        </trans-unit>
        <trans-unit id="3926523f25dc8876bc153f0713c91eb61a5a7e46" translate="yes" xml:space="preserve">
          <source>You may be able to just fix the XMLEncoder line and do some &lt;a href=&quot;https://en.wikipedia.org/wiki/Monkey_patch&quot;&gt;monkey patching&lt;/a&gt; to use your own class.</source>
          <target state="translated">XMLEncoder行を修正して、独自のクラスを使用するために&lt;a href=&quot;https://en.wikipedia.org/wiki/Monkey_patch&quot;&gt;サルのパッチ&lt;/a&gt;を適用できる場合があります。</target>
        </trans-unit>
        <trans-unit id="c153947527842c1d4665c2d9e89c221f1fb7cde6" translate="yes" xml:space="preserve">
          <source>null string is not equal to null reserved word using the != condition</source>
          <target state="translated">null文字列は、!=条件を使用してnull予約語と等しくない。</target>
        </trans-unit>
        <trans-unit id="d8e72b2c5ece5bbfd6ef420a56b1a98be5cf82da" translate="yes" xml:space="preserve">
          <source>null string is not equal to null reserved word using the == condition</source>
          <target state="translated">null文字列は==条件を使用してもnull予約語とは一致しません。</target>
        </trans-unit>
        <trans-unit id="0e4d2e42ac5d9802583f1484a8d99ea986417b60" translate="yes" xml:space="preserve">
          <source>null string is not equal to null reserved word using the === condition</source>
          <target state="translated">null文字列は、===条件を使用してnull予約語と等しくありません。</target>
        </trans-unit>
        <trans-unit id="71fd2f675fdcd0012800f85123513f89ff946960" translate="yes" xml:space="preserve">
          <source>which is essentially the same as:</source>
          <target state="translated">と本質的に同じです。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
