<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/1783405">
    <body>
      <group id="1783405">
        <trans-unit id="d52b4e0086f79ba4d073889dc3329ba6c06f9233" translate="yes" xml:space="preserve">
          <source>(note that it is 'test' not 'origin/test') to perform magical &lt;a href=&quot;http://en.wikipedia.org/wiki/DWIM&quot;&gt;DWIM&lt;/a&gt;-mery and create local branch 'test' for you, for which upstream would be remote-tracking branch 'origin/test'.</source>
          <target state="translated">（请注意，执行神奇的&lt;a href=&quot;http://en.wikipedia.org/wiki/DWIM&quot;&gt;DWIM&lt;/a&gt; -mery并为您创建本地分支&amp;ldquo;测试&amp;rdquo;是&amp;ldquo;测试&amp;rdquo;而非&amp;ldquo;起源/测试&amp;rdquo;），上游将是远程跟踪分支&amp;ldquo;起源/测试&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="c969d5139901c8d5c70186a55342861edc775d97" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/a/1783426/456814&quot;&gt;Accepted answer&lt;/a&gt; not working for you?</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/a/1783426/456814&quot;&gt;接受的答案&lt;/a&gt;对您不起作用？</target>
        </trans-unit>
        <trans-unit id="c748573797721636262c209434a6011f79e74d35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/a/1787014/456814&quot;&gt;Jakub's answer&lt;/a&gt; actually improves on this. With Git versions &amp;ge; 1.6.6, with only one remote, you can just do:</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/a/1787014/456814&quot;&gt;雅库布的答案&lt;/a&gt;实际上对此有所改善。 对于Git&amp;ge;1.6.6，只有一个遥控器，您可以执行以下操作：</target>
        </trans-unit>
        <trans-unit id="9eb27270ad2fb239858ed69a8410fc6c5615895b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-b&lt;/code&gt; will create new branch in specified name from your selected remote branch.</source>
          <target state="translated">&lt;code&gt;-b&lt;/code&gt; 将在您选择的远程分支中以指定名称创建新分支。</target>
        </trans-unit>
        <trans-unit id="84fd480a45ddb5b6cb20fc7ba21c136ea807313f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Does nothing&lt;/code&gt; doesn't equal &lt;code&gt;doesn't work&lt;/code&gt;, so I guess when you type 'git checkout test' in your terminal and press enter key, no message appears and no error occurs. Am I right?</source>
          <target state="translated">&lt;code&gt;Does nothing&lt;/code&gt; 是 &lt;code&gt;doesn't work&lt;/code&gt; ，所以我猜想当您在终端中键入&amp;ldquo; git checkout test&amp;rdquo;并按回车键时，没有消息出现，也没有错误发生。 我对吗？</target>
        </trans-unit>
        <trans-unit id="2a80001e211fe08602828551945921f16d94175c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git branch -r&lt;/code&gt; says the object name is invalid, because that branch name isn't in Git's local branch list. Update your local branch list from origin with:</source>
          <target state="translated">&lt;code&gt;git branch -r&lt;/code&gt; 表示对象名称无效，因为该分支名称不在Git的本地分支列表中。 使用以下命令从来源更新本地分支列表：</target>
        </trans-unit>
        <trans-unit id="921425d4ec26abea3d5a4274f8ec0ebb6494c39f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git checkout origin/test&lt;/code&gt; gives &lt;code&gt;* (no branch)&lt;/code&gt;. Which is confusing. How can I be on &quot;no branch&quot;?</source>
          <target state="translated">&lt;code&gt;git checkout origin/test&lt;/code&gt; 给出 &lt;code&gt;* (no branch)&lt;/code&gt; 。 这令人困惑。 我该如何&amp;ldquo;无分支&amp;rdquo;？</target>
        </trans-unit>
        <trans-unit id="29d6e830f73868dfc46f67d4480145ae5ca15485" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git checkout test&lt;/code&gt; which does nothing</source>
          <target state="translated">&lt;code&gt;git checkout test&lt;/code&gt; ，什么都不做</target>
        </trans-unit>
        <trans-unit id="dec64bf739a5b20ba9aa1a3eb7c0d57b52239a89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git fetch&lt;/code&gt; # If you don't know about branch name</source>
          <target state="translated">&lt;code&gt;git fetch&lt;/code&gt; ＃如果您不知道分支名称</target>
        </trans-unit>
        <trans-unit id="af3cfa402703ddfe4fd05cf2ea4854a1319cdf88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Sidenote:&lt;/em&gt;&lt;/strong&gt; With modern Git (&amp;gt;= &lt;a href=&quot;https://raw.github.com/git/git/master/Documentation/RelNotes/1.6.6.txt&quot;&gt;1.6.6&lt;/a&gt;), you are able to use just</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;旁注：&lt;/em&gt;&lt;/strong&gt;使用现代Git（&amp;gt; = &lt;a href=&quot;https://raw.github.com/git/git/master/Documentation/RelNotes/1.6.6.txt&quot;&gt;1.6.6&lt;/a&gt; ），您可以仅使用</target>
        </trans-unit>
        <trans-unit id="b9841b73bfbd385ce90a7cd726adcc4a9e58772c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OK&lt;/strong&gt;, the answer is easy... You basically see the branch, but you don't have a local copy yet!...</source>
          <target state="translated">&lt;strong&gt;好的&lt;/strong&gt; ，答案很简单...您基本上可以看到分支，但是您还没有本地副本！...</target>
        </trans-unit>
        <trans-unit id="a96f249bd27f6e0b842e9614729af6419d6b6642" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To get newly created branches&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;获取新创建的分支&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9c24d42bf2d7a36e26b8bb53f2802007675c9acf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To switch into another branch&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;切换到另一个分支&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="171c6e1d6cc99fab24f26e3df39af771e662f4d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;git checkout -b &quot;Branch_name&quot; [ B means Create local branch]&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;git checkout -b&amp;ldquo; Branch_name&amp;rdquo; [B表示创建本地分支]&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5c24f42fbe74596235325d83f1856235c7c6b767" translate="yes" xml:space="preserve">
          <source>And then try checking out your remote branch again.</source>
          <target state="translated">然后再试着检查一下你的远程分支。</target>
        </trans-unit>
        <trans-unit id="7a8978d0732a00ff3d60ccf8161da9af03eb0241" translate="yes" xml:space="preserve">
          <source>As user masukomi points out in a comment, &lt;code&gt;git checkout test&lt;/code&gt; will NOT work in modern git if you have multiple remotes. In this case use</source>
          <target state="translated">正如用户masukomi在评论中指出的那样，如果您有多个遥控器，则 &lt;code&gt;git checkout test&lt;/code&gt; 在现代git中将不起作用。 在这种情况下使用</target>
        </trans-unit>
        <trans-unit id="a9ef2fb4ebb1239a389cae68b7086a0fd01c1b69" translate="yes" xml:space="preserve">
          <source>As you can see, running &lt;code&gt;git fetch origin&lt;/code&gt; retrieved any remote branches we were not yet setup to track on our local machine. From there, since we now have a ref to the remote branch, we can simply run &lt;code&gt;git checkout remote_branch&lt;/code&gt; and we'll gain the benefits of remote tracking.</source>
          <target state="translated">如您所见，运行 &lt;code&gt;git fetch origin&lt;/code&gt; 会检索我们尚未设置要在本地计算机上跟踪的任何远程分支。 从那里开始，由于我们现在有了对远程分支的引用，因此我们只需运行 &lt;code&gt;git checkout remote_branch&lt;/code&gt; 即可获得远程跟踪的好处。</target>
        </trans-unit>
        <trans-unit id="b167bc9b1527a0d6a8fea98cc4d4ea2155a04588" translate="yes" xml:space="preserve">
          <source>Before you can start working locally on a remote branch, you need to fetch it as called out in answers below.</source>
          <target state="translated">在你可以开始在本地工作的远程分支之前,你需要按照下面的答案中的调用获取它。</target>
        </trans-unit>
        <trans-unit id="c2901c80e326c0e88e39db0b829feb137cba0dfa" translate="yes" xml:space="preserve">
          <source>Both will create a &lt;code&gt;latest fixes_for_dev&lt;/code&gt; from &lt;code&gt;development&lt;/code&gt;</source>
          <target state="translated">两者都会从 &lt;code&gt;development&lt;/code&gt; 创建 &lt;code&gt;latest fixes_for_dev&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="45e5f3f72e961cb70134ba35f7a27a9620e515f7" translate="yes" xml:space="preserve">
          <source>Commands</source>
          <target state="translated">Commands</target>
        </trans-unit>
        <trans-unit id="5438a1884539d16e13bde917763faaf2eb4bb18d" translate="yes" xml:space="preserve">
          <source>Did you intend to checkout 'origin/remote_branch' which can not be resolved as commit?</source>
          <target state="translated">你是否打算把'originremote_branch'结账,无法解析为提交?</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="e9656fda095be85a55c47e88f0f2142837377331" translate="yes" xml:space="preserve">
          <source>E.g.:</source>
          <target state="translated">E.g.:</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="94470ebc5419b0928fcff5c6ed5a42eb6ad0ce96" translate="yes" xml:space="preserve">
          <source>Fetch from the remote and checkout the branch.</source>
          <target state="translated">从远程获取并结账的分支。</target>
        </trans-unit>
        <trans-unit id="1753d0500d4beb0e06174bf3ee26e61f0833f605" translate="yes" xml:space="preserve">
          <source>First, you need to do:</source>
          <target state="translated">首先,你需要做的是。</target>
        </trans-unit>
        <trans-unit id="78b576eeb16ea5a47239699f699e69007893206f" translate="yes" xml:space="preserve">
          <source>Fix it by using &lt;code&gt;*&lt;/code&gt; and fetch the new information from origin:</source>
          <target state="translated">使用 &lt;code&gt;*&lt;/code&gt; 进行修复，并从来源获取新信息：</target>
        </trans-unit>
        <trans-unit id="b975ccd2922e46c3a54f83ba261085da3f38f3b9" translate="yes" xml:space="preserve">
          <source>For example, I tried to checkout a remote branch named as &lt;code&gt;#9773&lt;/code&gt; but the command didn't work properly, as shown in the picture below:</source>
          <target state="translated">例如，我尝试签 &lt;code&gt;#9773&lt;/code&gt; 为＃9773的远程分支，但是该命令无法正常工作，如下图所示：</target>
        </trans-unit>
        <trans-unit id="1247ae4eb1e5a21a2deb6b10090b843e015065de" translate="yes" xml:space="preserve">
          <source>For list all your branches</source>
          <target state="translated">为您列出所有的分支机构</target>
        </trans-unit>
        <trans-unit id="e73c15da328e7d6ce2ee34a4171d140e73177383" translate="yes" xml:space="preserve">
          <source>For some reason I wondered if the sharp symbol (#) could have something to do with it, and then I tried surrounding the branch name with single quotes, like &lt;code&gt;'#9773'&lt;/code&gt; rathen than just &lt;code&gt;#9773&lt;/code&gt;, and fortunately it worked fine.</source>
          <target state="translated">由于某种原因，我想知道尖锐的符号（＃）是否与它有关，然后我尝试将分支名称用单引号引起来，例如 &lt;code&gt;'#9773'&lt;/code&gt; 9773'rathen而不是 &lt;code&gt;#9773&lt;/code&gt; ，幸运的是它可以正常工作。</target>
        </trans-unit>
        <trans-unit id="ed732d24ea2e0b7b0dca6a2f890e13e7d0930302" translate="yes" xml:space="preserve">
          <source>For us, it seems the &lt;code&gt;remote.origin.fetch&lt;/code&gt; configuration gave a problem. Therefore, we could not see any other remote branches than &lt;code&gt;master&lt;/code&gt;, so &lt;code&gt;git fetch [--all]&lt;/code&gt; did not help. Neither &lt;code&gt;git checkout mybranch&lt;/code&gt; nor &lt;code&gt;git checkout -b mybranch --track origin/mybranch&lt;/code&gt; did work, although it certainly was at remote.</source>
          <target state="translated">对于我们来说，似乎 &lt;code&gt;remote.origin.fetch&lt;/code&gt; 配置出现了问题。 因此，除了 &lt;code&gt;master&lt;/code&gt; 之外，我们看不到其他任何远程分支，因此 &lt;code&gt;git fetch [--all]&lt;/code&gt; 没有帮助。 &lt;code&gt;git checkout mybranch&lt;/code&gt; 或 &lt;code&gt;git checkout -b mybranch --track origin/mybranch&lt;/code&gt; 都没有用，尽管它肯定在远程。</target>
        </trans-unit>
        <trans-unit id="944e5bc34e204f6b7844ac8401597d07918eddcf" translate="yes" xml:space="preserve">
          <source>Git looks on &lt;code&gt;xxx&lt;/code&gt; as a branch name at first, but there isn't any branch named test.</source>
          <target state="translated">Git首先将 &lt;code&gt;xxx&lt;/code&gt; 作为分支名称，但是没有任何名为test的分支。</target>
        </trans-unit>
        <trans-unit id="6840459a8a26012d7372ef73ae39b44152fbf369" translate="yes" xml:space="preserve">
          <source>Here is also a single-line version:</source>
          <target state="translated">这里还有一个单行版。</target>
        </trans-unit>
        <trans-unit id="fccd1632cbae273c32046ebe55af346ce9b14be6" translate="yes" xml:space="preserve">
          <source>How do I check out a remote Git branch</source>
          <target state="translated">如何查看远程Git分支</target>
        </trans-unit>
        <trans-unit id="003f6ff7b7de7578e6028e8e8e5c8c7e59493ea4" translate="yes" xml:space="preserve">
          <source>How do I check out a remote Git branch?</source>
          <target state="translated">如何查看远程Git分支?</target>
        </trans-unit>
        <trans-unit id="dda325d72064e8aaa136c6eb122c0091c8821c18" translate="yes" xml:space="preserve">
          <source>However, if that branch name is found in more than one remote, this won't work as Git doesn't know which to use. In that case you can use either:</source>
          <target state="translated">但是,如果该分支名称在多个远程中找到,这将不起作用,因为Git不知道该用哪个。在这种情况下,你可以使用两种方法。</target>
        </trans-unit>
        <trans-unit id="225dd0dd63f0b1ad1c374cbfb49fbc7df321ac01" translate="yes" xml:space="preserve">
          <source>I also created the image below for you to share the differences, look at how &lt;code&gt;fetch&lt;/code&gt; works and also how it's different to &lt;code&gt;pull&lt;/code&gt;:</source>
          <target state="translated">我还创建了下面的图像，以供您共享差异，查看 &lt;code&gt;fetch&lt;/code&gt; 工作方式以及 &lt;code&gt;pull&lt;/code&gt; 的不同之处：</target>
        </trans-unit>
        <trans-unit id="a46072c40514d1cee33e9a98b3d58b32dd8490fc" translate="yes" xml:space="preserve">
          <source>I believe &lt;code&gt;git fetch&lt;/code&gt; pulls in &lt;em&gt;all&lt;/em&gt; remote branches, which is not what the original poster wanted.</source>
          <target state="translated">我相信 &lt;code&gt;git fetch&lt;/code&gt; 会拉入&lt;em&gt;所有&lt;/em&gt;远程分支，这不是原始发布者想要的。</target>
        </trans-unit>
        <trans-unit id="130d5240805efa00f360c411b9c14d8c953e1d7e" translate="yes" xml:space="preserve">
          <source>I tried the above solution, but it didn't work. Try this, it works:</source>
          <target state="translated">我试过上面的方法,但没有效果。试试这个,很管用。</target>
        </trans-unit>
        <trans-unit id="524d82cc31759fc08ed539d1e11b053f3e54e419" translate="yes" xml:space="preserve">
          <source>I use the following command:</source>
          <target state="translated">我用的是以下命令。</target>
        </trans-unit>
        <trans-unit id="e48e43c619717be0ded569ccd986d336a2e19c8d" translate="yes" xml:space="preserve">
          <source>I was stuck in a situation seeing &lt;code&gt;error: pathspec 'desired-branch' did not match any file(s) known to git.&lt;/code&gt; for all of the suggestions above. I'm on git version 1.8.3.1.</source>
          <target state="translated">我陷入了看到 &lt;code&gt;error: pathspec 'desired-branch' did not match any file(s) known to git.&lt;/code&gt; 的情况：pathspec'desired-branch'与git已知的任何文件都不匹配。 以上所有建议。 我正在使用git版本1.8.3.1。</target>
        </trans-unit>
        <trans-unit id="d5b78408e8cdedd0bed8bab8bb5ac81d1715c29d" translate="yes" xml:space="preserve">
          <source>I've tried:</source>
          <target state="translated">我试过了。</target>
        </trans-unit>
        <trans-unit id="9fa51ace133a66a5dd208d56fc12ff03c0baf388" translate="yes" xml:space="preserve">
          <source>If the answer is 'yes', I can tell you the cause.</source>
          <target state="translated">如果答案是 &quot;是&quot;,我可以告诉你原因。</target>
        </trans-unit>
        <trans-unit id="93120007b36bbfde972f9c4c0f57b1535c82fad3" translate="yes" xml:space="preserve">
          <source>If the branch is on something other than the &lt;code&gt;origin&lt;/code&gt; remote I like to do the following:</source>
          <target state="translated">如果分支不在 &lt;code&gt;origin&lt;/code&gt; 远程站点上，则我要执行以下操作：</target>
        </trans-unit>
        <trans-unit id="3acba91d754062f6ccd20acd2dc53b035251b0a2" translate="yes" xml:space="preserve">
          <source>If the remote branch name begins with special characteres you need to use single quotes around it in the checkout command, or else git won't know which branch you are talking about.</source>
          <target state="translated">如果远程分支名称以特殊字符开头,你需要在checkout命令中使用单引号,否则git不会知道你说的是哪个分支。</target>
        </trans-unit>
        <trans-unit id="58b0d8261e88485550ce1dedb2d80e92cf03ae65" translate="yes" xml:space="preserve">
          <source>If there isn't file named &lt;code&gt;xxx&lt;/code&gt; either, then Git will try to create the &lt;code&gt;xxx&lt;/code&gt; according to some rules. One of the rules is create a branch named &lt;code&gt;xxx&lt;/code&gt; if &lt;code&gt;remotes/origin/xxx&lt;/code&gt; exists.</source>
          <target state="translated">如果也没有名为 &lt;code&gt;xxx&lt;/code&gt; 的文件，则Git将尝试根据一些规则创建 &lt;code&gt;xxx&lt;/code&gt; 。 规则之一是如果存在 &lt;code&gt;remotes/origin/xxx&lt;/code&gt; ,则创建一个名为 &lt;code&gt;xxx&lt;/code&gt; 的分支。</target>
        </trans-unit>
        <trans-unit id="9725f4bb2746945cdd84369519318479d62d81ed" translate="yes" xml:space="preserve">
          <source>If you receive this message, you must first do a &lt;code&gt;git fetch origin&lt;/code&gt; where &lt;code&gt;origin&lt;/code&gt; is the name of the remote repository prior to running &lt;code&gt;git checkout remote_branch&lt;/code&gt;. Here's a full example with responses:</source>
          <target state="translated">如果收到此消息，则必须首先执行 &lt;code&gt;git fetch origin&lt;/code&gt; ，其中 &lt;code&gt;origin&lt;/code&gt; 是远程存储库的名称，然后再运行 &lt;code&gt;git checkout remote_branch&lt;/code&gt; 。 这是带有响应的完整示例：</target>
        </trans-unit>
        <trans-unit id="710b778362e1a157fdf0f6689a515149f6c4d181" translate="yes" xml:space="preserve">
          <source>If you want to override your local branch name on checkout:</source>
          <target state="translated">如果你想在结账时覆盖你的本地分支名称。</target>
        </trans-unit>
        <trans-unit id="5709b13d4cb5e11b2713c0b8e665c0810e70d381" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://github.com/git/git/blob/master/Documentation/RelNotes/2.19.0.txt&quot;&gt;2.19&lt;/a&gt;, Git learned the &lt;a href=&quot;https://git-scm.com/docs/git-config#Documentation/git-config.txt-checkoutdefaultRemote&quot;&gt;&lt;code&gt;checkout.defaultRemote&lt;/code&gt;&lt;/a&gt; configuration, which specifies a remote to default to when resolving such an ambiguity.</source>
          <target state="translated">在&lt;a href=&quot;https://github.com/git/git/blob/master/Documentation/RelNotes/2.19.0.txt&quot;&gt;2.19中&lt;/a&gt; ，Git学习了&lt;a href=&quot;https://git-scm.com/docs/git-config#Documentation/git-config.txt-checkoutdefaultRemote&quot;&gt; &lt;code&gt;checkout.defaultRemote&lt;/code&gt; &lt;/a&gt;配置，该配置指定了解决这种歧义时默认使用的远程。</target>
        </trans-unit>
        <trans-unit id="a91403cd8b325d47cd111990eace4f3e6ec785bb" translate="yes" xml:space="preserve">
          <source>In earlier versions of &lt;code&gt;git&lt;/code&gt;, you needed an explicit &lt;code&gt;--track&lt;/code&gt; option, but that is the default now when you are branching off a remote branch.</source>
          <target state="translated">在 &lt;code&gt;git&lt;/code&gt; 的早期版本中，您需要一个显式的 &lt;code&gt;--track&lt;/code&gt; 选项，但这是从远程分支分支时的默认选项。</target>
        </trans-unit>
        <trans-unit id="6a7d6bd1fb274dbd4fbd933a035ba698f0a4fd29" translate="yes" xml:space="preserve">
          <source>In this case, you probably want to create a local &lt;code&gt;test&lt;/code&gt; branch which is tracking the remote &lt;code&gt;test&lt;/code&gt; branch:</source>
          <target state="translated">在这种情况下，您可能想要创建一个跟踪远程 &lt;code&gt;test&lt;/code&gt; 分支的本地测试分支：</target>
        </trans-unit>
        <trans-unit id="b2fe93d1843a6c213febf628ee3169b9f6743a7f" translate="yes" xml:space="preserve">
          <source>No idea how this config ended up in our local repo.</source>
          <target state="translated">不知道这个配置怎么会出现在我们的本地版本中。</target>
        </trans-unit>
        <trans-unit id="53c85bcb2a017b1abbb7fda7cfe4ddea8f2a2b14" translate="yes" xml:space="preserve">
          <source>Now I'm trying to check out the remote &lt;code&gt;test&lt;/code&gt; branch.</source>
          <target state="translated">现在，我正在尝试签出远程 &lt;code&gt;test&lt;/code&gt; 分支。</target>
        </trans-unit>
        <trans-unit id="da0908afa2347931cf2b5668b0cc9e3f5392dca9" translate="yes" xml:space="preserve">
          <source>Now we could &lt;code&gt;git checkout&lt;/code&gt; the remote branch locally.</source>
          <target state="translated">现在我们可以在本地 &lt;code&gt;git checkout&lt;/code&gt; 远程分支。</target>
        </trans-unit>
        <trans-unit id="3be15f362e4a2f4c71bf34f6d6e1b18c36206d8f" translate="yes" xml:space="preserve">
          <source>Now your local branch name is &lt;code&gt;enhancement&lt;/code&gt;, but your remote branch name is &lt;code&gt;future_branch&lt;/code&gt;.</source>
          <target state="translated">现在，您的本地分支名称是 &lt;code&gt;future_branch&lt;/code&gt; ，但是您的远程分支名称是future_branch 。</target>
        </trans-unit>
        <trans-unit id="c998f7080f77f2a9ed3959f32c60e568b6a584d9" translate="yes" xml:space="preserve">
          <source>Old Answer</source>
          <target state="translated">旧答案</target>
        </trans-unit>
        <trans-unit id="2bf0c49baafe696508e7274afd6b3ffa1a0fddb3" translate="yes" xml:space="preserve">
          <source>Other answers do not work with modern Git in my benign case. You might need to pull first if the remote branch is new, but I haven't checked that case.</source>
          <target state="translated">其他的答案在我这个良性的情况下,用现代Git是不行的。如果远程分支是新的,你可能需要先拉,但我没有检查过这种情况。</target>
        </trans-unit>
        <trans-unit id="0782eecb3ac24107d3a5a615471047c19512121e" translate="yes" xml:space="preserve">
          <source>Other guys and gals give the solutions, but maybe I can tell you why.</source>
          <target state="translated">别的男生和女生给出了解决方案,但也许我可以告诉你原因。</target>
        </trans-unit>
        <trans-unit id="9ebfada552792dfe1540c065403592b0efe862c7" translate="yes" xml:space="preserve">
          <source>Please follow the command to create an empty folder. Enter that and use this command:</source>
          <target state="translated">请按照该命令创建一个空文件夹。输入后使用这个命令。</target>
        </trans-unit>
        <trans-unit id="45799aa638555ae87b151a87a8b7ce6e49389fba" translate="yes" xml:space="preserve">
          <source>Second, you can check out remote branch into your local by:</source>
          <target state="translated">其次,你可以通过查看远程分支到你的本地,通过。</target>
        </trans-unit>
        <trans-unit id="a6e13b651bb1d6481fd832705fd5ee40032486ad" translate="yes" xml:space="preserve">
          <source>Simply run &lt;code&gt;git checkout&lt;/code&gt; with the name of the remote branch. Git will &lt;a href=&quot;https://git-scm.com/book/id/v2/Git-Branching-Remote-Branches#_tracking_branches&quot;&gt;automatically create&lt;/a&gt; a local branch that tracks the remote one:</source>
          <target state="translated">只需使用远程分支的名称运行 &lt;code&gt;git checkout&lt;/code&gt; 。 Git将&lt;a href=&quot;https://git-scm.com/book/id/v2/Git-Branching-Remote-Branches#_tracking_branches&quot;&gt;自动创建&lt;/a&gt;一个跟踪远程分支的本地分支：</target>
        </trans-unit>
        <trans-unit id="c2d6b5812d0e00208d8372bdfa9bfb41b7210dda" translate="yes" xml:space="preserve">
          <source>So this &lt;strong&gt;worked for me&lt;/strong&gt;:</source>
          <target state="translated">所以这&lt;strong&gt;对我有用&lt;/strong&gt; ：</target>
        </trans-unit>
        <trans-unit id="b4f91bdb0e1b0e40fff4debcd0fea22f1999f491" translate="yes" xml:space="preserve">
          <source>Solution</source>
          <target state="translated">Solution</target>
        </trans-unit>
        <trans-unit id="339b768cc71e0e02860dad32045b2663d3766e6d" translate="yes" xml:space="preserve">
          <source>Somebody pushed a branch called &lt;code&gt;test&lt;/code&gt; with &lt;code&gt;git push origin test&lt;/code&gt; to a shared repository. I can see the branch with &lt;code&gt;git branch -r&lt;/code&gt;.</source>
          <target state="translated">有人用 &lt;code&gt;git push origin test&lt;/code&gt; 将一个名为 &lt;code&gt;test&lt;/code&gt; 的分支推送到共享存储库。 我可以看到 &lt;code&gt;git branch -r&lt;/code&gt; 的分支 。</target>
        </trans-unit>
        <trans-unit id="04c7467072bc00eccfbb82d3b1a8bb6575a44fd4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;* (no branch)&lt;/code&gt; in &lt;code&gt;git branch&lt;/code&gt; output means that you are on unnamed branch, in so called &quot;detached HEAD&quot; state (HEAD points directly to commit, and is not symbolic reference to some local branch).  If you made some commits on this unnamed branch, you can always create local branch off current commit:</source>
          <target state="translated">&lt;code&gt;git branch&lt;/code&gt; 输出中的 &lt;code&gt;* (no branch)&lt;/code&gt; 表示您处于未命名分支，处于所谓的&amp;ldquo;分离的HEAD&amp;rdquo;状态（HEAD指向直接提交，而不是对某些本地分支的符号引用）。 如果您在此未命名分支上进行了一些提交，则始终可以从当前提交创建本地分支：</target>
        </trans-unit>
        <trans-unit id="0dbb9cf7d1244183bcfe225998b3c14419997bfe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;git remote show &amp;lt;origin name&amp;gt;&lt;/code&gt; command will list all branches (including un-tracked branches). Then you can find the remote branch name that you need to fetch.</source>
          <target state="translated">&lt;code&gt;git remote show &amp;lt;origin name&amp;gt;&lt;/code&gt; 命令将列出所有分支（包括未跟踪的分支）。 然后，您可以找到需要获取的远程分支名称。</target>
        </trans-unit>
        <trans-unit id="a8fa18bf4e9ee0884349bb9292b32f0bf882b090" translate="yes" xml:space="preserve">
          <source>The above command checks out all of the branches, but only the &lt;code&gt;master&lt;/code&gt; branch will be initialized. If you want to checkout the other branches, do:</source>
          <target state="translated">上面的命令签出所有分支，但是只有 &lt;code&gt;master&lt;/code&gt; 分支会被初始化。 如果要结帐其他分支，请执行以下操作：</target>
        </trans-unit>
        <trans-unit id="d69680170fcfebd668037ca3ac1b54f23c0028fe" translate="yes" xml:space="preserve">
          <source>The cause is that there is a file (or folder) named 'test' in your work tree.</source>
          <target state="translated">原因是你的工作树里有一个名为 &quot;test &quot;的文件(或文件夹)。</target>
        </trans-unit>
        <trans-unit id="583185263935914c46a50db440da4466c666d5ab" translate="yes" xml:space="preserve">
          <source>The explanation behind is that I've noticed that when fetching the remote branch, it was fetched to FETCH_HEAD:</source>
          <target state="translated">后面的解释是,我注意到在取远程分支时,被取到FETCH_HEAD。</target>
        </trans-unit>
        <trans-unit id="e5bf16eee9440e4868280ed540a42ff03be26149" translate="yes" xml:space="preserve">
          <source>The first tells Git the remote exists, the second gets the commits.</source>
          <target state="translated">前者告诉Git远程存在,后者获取提交。</target>
        </trans-unit>
        <trans-unit id="0653722976a3d33c763e1e8849d3fe2b26852358" translate="yes" xml:space="preserve">
          <source>The previous configuration only allowed &lt;code&gt;master&lt;/code&gt; to be fetched:</source>
          <target state="translated">先前的配置仅允许获取 &lt;code&gt;master&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="add3ee214d4fc0f3ba587a683020678164e7f157" translate="yes" xml:space="preserve">
          <source>Then Git thinks &lt;code&gt;xxx&lt;/code&gt; is a path, and fortunately (or unfortunately), there is a file named test. So &lt;code&gt;git checkout xxx&lt;/code&gt; means discard any modification in &lt;code&gt;xxx&lt;/code&gt; file.</source>
          <target state="translated">然后，Git认为 &lt;code&gt;xxx&lt;/code&gt; 是路径，幸运的是（或不幸的是）有一个名为test的文件。 因此 &lt;code&gt;git checkout xxx&lt;/code&gt; 意味着放弃 &lt;code&gt;xxx&lt;/code&gt; 文件中的任何修改。</target>
        </trans-unit>
        <trans-unit id="fd798ec0bd73887cd0876063107e59285fcd0ac9" translate="yes" xml:space="preserve">
          <source>This command checks out the remote branch, and your local branch name will be same as the remote branch.</source>
          <target state="translated">这个命令会检查出远程分支,你的本地分支名称将与远程分支相同。</target>
        </trans-unit>
        <trans-unit id="0f1e1d718e7c7b2f3d2334868edf47b645934e4e" translate="yes" xml:space="preserve">
          <source>This will &lt;a href=&quot;https://en.wikipedia.org/wiki/DWIM&quot;&gt;DWIM&lt;/a&gt; for a remote not named origin (&lt;a href=&quot;http://www.kernel.org/pub/software/scm/git/docs/git-checkout.html&quot;&gt;documentation&lt;/a&gt;):</source>
          <target state="translated">这将对未命名的远程&lt;a href=&quot;https://en.wikipedia.org/wiki/DWIM&quot;&gt;DWIM&lt;/a&gt; （ &lt;a href=&quot;http://www.kernel.org/pub/software/scm/git/docs/git-checkout.html&quot;&gt;文档&lt;/a&gt; ）：</target>
        </trans-unit>
        <trans-unit id="4b0f56452cbd415f9ad2ddae7a4db2496d4c73cb" translate="yes" xml:space="preserve">
          <source>This will checkout the &lt;code&gt;next&lt;/code&gt; branch on the &lt;code&gt;upstream&lt;/code&gt; remote in to a local branch called &lt;code&gt;second/next&lt;/code&gt;. Which means if you already have a local branch named next it will not conflict.</source>
          <target state="translated">这会将签出 &lt;code&gt;upstream&lt;/code&gt; 远程服务器上的 &lt;code&gt;next&lt;/code&gt; 分支签入名为 &lt;code&gt;second/next&lt;/code&gt; 的本地分支。 这意味着，如果您已经有一个名为next的本地分支，则不会发生冲突。</target>
        </trans-unit>
        <trans-unit id="ab8dfb113a789a4fa297915e1347047fe4a8aeca" translate="yes" xml:space="preserve">
          <source>This will fetch all of the remote branches for you. You can see the branches available for checkout with:</source>
          <target state="translated">这将为你获取所有的远程分支。你可以看到可供结账的分支。</target>
        </trans-unit>
        <trans-unit id="739ee086733ea3fb321776d7a3c80a9b4f5269d5" translate="yes" xml:space="preserve">
          <source>This will fetch the remote branch and create a new local branch (if not exists already) with name &lt;code&gt;local_branch_name&lt;/code&gt; and track the remote one in it.</source>
          <target state="translated">这将获取远程分支并创建一个名为 &lt;code&gt;local_branch_name&lt;/code&gt; 的新本地分支（如果尚不存在），并在其中跟踪远程分支。</target>
        </trans-unit>
        <trans-unit id="7782c41db83521bdf64890eb7c00bd75290d1d90" translate="yes" xml:space="preserve">
          <source>This worked for me.</source>
          <target state="translated">这对我来说很有效。</target>
        </trans-unit>
        <trans-unit id="582a172c0509d9380faa6d6d56f9a076479d6c1e" translate="yes" xml:space="preserve">
          <source>To add a new remote, you will need to do the following first:</source>
          <target state="translated">要添加一个新的遥控器,你需要先进行以下操作。</target>
        </trans-unit>
        <trans-unit id="e83031a19ff7ec727db3717f9744c8ad8762136a" translate="yes" xml:space="preserve">
          <source>To checkout/change a branch</source>
          <target state="translated">结账时,要更改一个分支</target>
        </trans-unit>
        <trans-unit id="8f4f37c55cb856da3053c261978f48fc3f431e38" translate="yes" xml:space="preserve">
          <source>To clone a Git repository, do:</source>
          <target state="translated">要克隆一个Git仓库,请这样做。</target>
        </trans-unit>
        <trans-unit id="8ab73e824f91ac294e1002868c8c86435d716aaf" translate="yes" xml:space="preserve">
          <source>To fetch a branch, you simply need to:</source>
          <target state="translated">要获取一个分支,你只需要。</target>
        </trans-unit>
        <trans-unit id="567ea58a588580e16bff2bb35f61cb8590cbd14f" translate="yes" xml:space="preserve">
          <source>To list remote branches:</source>
          <target state="translated">要列出远程分支。</target>
        </trans-unit>
        <trans-unit id="fb91e24fa52d8d2b32937bf04d843f730319a902" translate="yes" xml:space="preserve">
          <source>Update</source>
          <target state="translated">Update</target>
        </trans-unit>
        <trans-unit id="3529574e5ade74c79d80ffde723e308e6ae88e4f" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;fetch&lt;/code&gt; to pull all your remote</source>
          <target state="translated">使用 &lt;code&gt;fetch&lt;/code&gt; 来拉动所有遥控器</target>
        </trans-unit>
        <trans-unit id="e82e0e89de4b2950b305c134a4d5fec2f0b6e582" translate="yes" xml:space="preserve">
          <source>Use these steps to fetch remote branches:</source>
          <target state="translated">使用这些步骤来获取远程分支。</target>
        </trans-unit>
        <trans-unit id="bc0e34154d952ed72b15f5d9618112640d548177" translate="yes" xml:space="preserve">
          <source>Use:</source>
          <target state="translated">Use:</target>
        </trans-unit>
        <trans-unit id="40accb4e47ae8af9b52ccc00d13f7e9046fb61e0" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;git checkout xxx&lt;/code&gt; parsed,</source>
          <target state="translated">当 &lt;code&gt;git checkout xxx&lt;/code&gt; 被解析时，</target>
        </trans-unit>
        <trans-unit id="f4e7078ce60c936cd5f69e83df90dec9c7471037" translate="yes" xml:space="preserve">
          <source>While the first and selected answer is technically &lt;em&gt;correct&lt;/em&gt;, there's the possibility you have not yet retrieved all objects and refs from the remote repository. If that is the case, you'll receive the following error:</source>
          <target state="translated">尽管第一个选择的答案在技术上是&lt;em&gt;正确的&lt;/em&gt; ，但有可能您尚未从远程存储库中检索所有对象和引用。 如果是这种情况，您将收到以下错误：</target>
        </trans-unit>
        <trans-unit id="e11ce179a3c4f6e2965bc7f88cee98a4d912498a" translate="yes" xml:space="preserve">
          <source>With the remote branches in hand, you now  need to check out the branch you are interested in, giving you a local working copy:</source>
          <target state="translated">手里有了远程分支,你现在需要查看一下你感兴趣的分支,给你一个当地的工作拷贝。</target>
        </trans-unit>
        <trans-unit id="baa724bb34ddb3b890602004e5327b415d229a33" translate="yes" xml:space="preserve">
          <source>You can simply fetch and then checkout to the branch, use the one line command below to do that:</source>
          <target state="translated">你可以简单的提取,然后结账到分支,使用下面的单行命令来完成。</target>
        </trans-unit>
        <trans-unit id="ce49ad5096e8e2b424e46c7b229e7a3755607e58" translate="yes" xml:space="preserve">
          <source>You can start tracking all remote branches with the following Bash script:</source>
          <target state="translated">你可以用下面的Bash脚本开始跟踪所有的远程分支。</target>
        </trans-unit>
        <trans-unit id="1a17a1d8b6c67017fe46b4245e46b22c7b82e61f" translate="yes" xml:space="preserve">
          <source>You can try</source>
          <target state="translated">你可以试试</target>
        </trans-unit>
        <trans-unit id="b95abc595614e3d8247b570adc8b1e4d6776f038" translate="yes" xml:space="preserve">
          <source>You need to &lt;code&gt;fetch&lt;/code&gt; the branch...</source>
          <target state="translated">您需要 &lt;code&gt;fetch&lt;/code&gt; 分支...</target>
        </trans-unit>
        <trans-unit id="a357a0b3b6bb01e41a042b584904f6b12375f3f1" translate="yes" xml:space="preserve">
          <source>and then</source>
          <target state="translated">而后</target>
        </trans-unit>
        <trans-unit id="f570bd69a546209e588006accbd8b646f4ee7b1a" translate="yes" xml:space="preserve">
          <source>are equal to</source>
          <target state="translated">等于</target>
        </trans-unit>
        <trans-unit id="7cfc3acc894349e1a2bf9edf47413fc59b757d31" translate="yes" xml:space="preserve">
          <source>fatal: git checkout: updating paths is incompatible with switching branches.</source>
          <target state="translated">fatal:git checkout:更新路径与切换分支不兼容。</target>
        </trans-unit>
        <trans-unit id="844a30721d219ca64f182132b851a218fe0621fd" translate="yes" xml:space="preserve">
          <source>git branch</source>
          <target state="translated">git分支</target>
        </trans-unit>
        <trans-unit id="35d89fc53de390864eaebd4010f0c3998bb8c3e0" translate="yes" xml:space="preserve">
          <source>git branch --all</source>
          <target state="translated">git分支 --all</target>
        </trans-unit>
        <trans-unit id="141573ccae9f164d4edd79b2c7159d29cbd58f03" translate="yes" xml:space="preserve">
          <source>git checkout -b &quot;Your Branch name&quot;</source>
          <target state="translated">git checkout -b &quot;你的分支名称&quot;</target>
        </trans-unit>
        <trans-unit id="70d49069cd0b4f79cd1245a2e136fa74e68c58bf" translate="yes" xml:space="preserve">
          <source>git checkout test which does nothing</source>
          <target state="translated">git结账测试,什么都不做</target>
        </trans-unit>
        <trans-unit id="14e259e6dfe74f7af161bc2de832db67644ab8d2" translate="yes" xml:space="preserve">
          <source>git fetch origin &amp;amp;&amp;amp; git checkout feature/XYZ-1234-Add-alerts</source>
          <target state="translated">git fetch origin &amp;amp;&amp;amp; git checkout功能/ XYZ-1234-添加警报</target>
        </trans-unit>
        <trans-unit id="f4797c87582aa2c67f9b07ccc5570a633c468ea2" translate="yes" xml:space="preserve">
          <source>none of these answers worked for me. this worked:</source>
          <target state="translated">这些答案对我来说都没用,这个有用。</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="9a0a77dcbd920a3b8610bbda370b5131ad088d5c" translate="yes" xml:space="preserve">
          <source>or the shorthand</source>
          <target state="translated">或速记</target>
        </trans-unit>
        <trans-unit id="9f133caaf75f0810347ac6b72de7730359e1af31" translate="yes" xml:space="preserve">
          <source>successfully checkout from the master branch to dev branch</source>
          <target state="translated">成功从主分支结账到开发分支</target>
        </trans-unit>
        <trans-unit id="b6eae5547ffe81dbfcf771b4265e6586eb0a0404" translate="yes" xml:space="preserve">
          <source>then checkout to the branch :</source>
          <target state="translated">然后结账到分行。</target>
        </trans-unit>
        <trans-unit id="c13863bf665d134fee832842530df9ac7f11556f" translate="yes" xml:space="preserve">
          <source>to get all remote branches use this :</source>
          <target state="translated">要获得所有的远程分支,使用这个.NET Framework 3.0来获取所有的远程分支。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
