<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/1783405">
    <body>
      <group id="1783405">
        <trans-unit id="d52b4e0086f79ba4d073889dc3329ba6c06f9233" translate="yes" xml:space="preserve">
          <source>(note that it is 'test' not 'origin/test') to perform magical &lt;a href=&quot;http://en.wikipedia.org/wiki/DWIM&quot;&gt;DWIM&lt;/a&gt;-mery and create local branch 'test' for you, for which upstream would be remote-tracking branch 'origin/test'.</source>
          <target state="translated">마법 &lt;a href=&quot;http://en.wikipedia.org/wiki/DWIM&quot;&gt;DWIM&lt;/a&gt; -mery를 수행하고 로컬 분기 'test'를 만드는 것은 업스트림이 원격 추적 분기 'origin / test'가 될 것입니다 ( 'origin / test'가 아니라 'test'입니다).</target>
        </trans-unit>
        <trans-unit id="c969d5139901c8d5c70186a55342861edc775d97" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/a/1783426/456814&quot;&gt;Accepted answer&lt;/a&gt; not working for you?</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/a/1783426/456814&quot;&gt;수락 된 답변&lt;/a&gt; 이 효과가 없습니까?</target>
        </trans-unit>
        <trans-unit id="c748573797721636262c209434a6011f79e74d35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/a/1787014/456814&quot;&gt;Jakub's answer&lt;/a&gt; actually improves on this. With Git versions &amp;ge; 1.6.6, with only one remote, you can just do:</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/a/1787014/456814&quot;&gt;야 쿠브의 대답은&lt;/a&gt; 실제로 이것에서 개선됩니다. Git 버전이 &amp;ge; 1.6.6 인 경우 리모콘이 하나만 있으면 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9eb27270ad2fb239858ed69a8410fc6c5615895b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-b&lt;/code&gt; will create new branch in specified name from your selected remote branch.</source>
          <target state="translated">&lt;code&gt;-b&lt;/code&gt; 는 선택한 원격 지점에서 지정된 이름으로 새 지점을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="84fd480a45ddb5b6cb20fc7ba21c136ea807313f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Does nothing&lt;/code&gt; doesn't equal &lt;code&gt;doesn't work&lt;/code&gt;, so I guess when you type 'git checkout test' in your terminal and press enter key, no message appears and no error occurs. Am I right?</source>
          <target state="translated">동일 &lt;code&gt;doesn't work&lt;/code&gt; 터미널에 'git checkout test'를 입력하고 Enter 키를 누르면 메시지가 나타나지 않고 오류가 발생하지 않습니다. 내가 맞아?</target>
        </trans-unit>
        <trans-unit id="2a80001e211fe08602828551945921f16d94175c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git branch -r&lt;/code&gt; says the object name is invalid, because that branch name isn't in Git's local branch list. Update your local branch list from origin with:</source>
          <target state="translated">&lt;code&gt;git branch -r&lt;/code&gt; 은 해당 분기 이름이 Git의 로컬 분기 목록에 없기 때문에 객체 이름이 유효하지 않다고 말합니다. 다음을 사용하여 출발지에서 로컬 지점 목록을 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="921425d4ec26abea3d5a4274f8ec0ebb6494c39f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git checkout origin/test&lt;/code&gt; gives &lt;code&gt;* (no branch)&lt;/code&gt;. Which is confusing. How can I be on &quot;no branch&quot;?</source>
          <target state="translated">&lt;code&gt;git checkout origin/test&lt;/code&gt; 는 &lt;code&gt;* (no branch)&lt;/code&gt; 합니다. 혼란 스럽습니다. &quot;지점 없음&quot;에 어떻게 참여할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="29d6e830f73868dfc46f67d4480145ae5ca15485" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git checkout test&lt;/code&gt; which does nothing</source>
          <target state="translated">아무것도하지 않는 &lt;code&gt;git checkout test&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dec64bf739a5b20ba9aa1a3eb7c0d57b52239a89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git fetch&lt;/code&gt; # If you don't know about branch name</source>
          <target state="translated">&lt;code&gt;git fetch&lt;/code&gt; # 브랜치 이름을 모른다면</target>
        </trans-unit>
        <trans-unit id="af3cfa402703ddfe4fd05cf2ea4854a1319cdf88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Sidenote:&lt;/em&gt;&lt;/strong&gt; With modern Git (&amp;gt;= &lt;a href=&quot;https://raw.github.com/git/git/master/Documentation/RelNotes/1.6.6.txt&quot;&gt;1.6.6&lt;/a&gt;), you are able to use just</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;주석 :&lt;/em&gt;&lt;/strong&gt; 현대 Git (&amp;gt; = &lt;a href=&quot;https://raw.github.com/git/git/master/Documentation/RelNotes/1.6.6.txt&quot;&gt;1.6.6&lt;/a&gt; )을 사용하면</target>
        </trans-unit>
        <trans-unit id="b9841b73bfbd385ce90a7cd726adcc4a9e58772c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OK&lt;/strong&gt;, the answer is easy... You basically see the branch, but you don't have a local copy yet!...</source>
          <target state="translated">&lt;strong&gt;좋아요&lt;/strong&gt; , 대답은 쉽습니다 ... 당신은 기본적으로 지점을 볼 수 있지만 아직 로컬 사본이 없습니다! ...</target>
        </trans-unit>
        <trans-unit id="a96f249bd27f6e0b842e9614729af6419d6b6642" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To get newly created branches&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;새로 만든 지점을 얻으려면&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9c24d42bf2d7a36e26b8bb53f2802007675c9acf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To switch into another branch&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;다른 지점으로 전환하려면&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="171c6e1d6cc99fab24f26e3df39af771e662f4d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;git checkout -b &quot;Branch_name&quot; [ B means Create local branch]&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;git checkout -b &quot;Branch_name&quot;[B는 로컬 브랜치 생성을 의미합니다]&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5c24f42fbe74596235325d83f1856235c7c6b767" translate="yes" xml:space="preserve">
          <source>And then try checking out your remote branch again.</source>
          <target state="translated">그런 다음 원격 지점을 다시 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="7a8978d0732a00ff3d60ccf8161da9af03eb0241" translate="yes" xml:space="preserve">
          <source>As user masukomi points out in a comment, &lt;code&gt;git checkout test&lt;/code&gt; will NOT work in modern git if you have multiple remotes. In this case use</source>
          <target state="translated">사용자 masukomi가 주석에서 지적한 것처럼 &lt;code&gt;git checkout test&lt;/code&gt; 는 여러 리모컨이있는 경우 최신 git에서 작동하지 않습니다. 이 경우 사용</target>
        </trans-unit>
        <trans-unit id="a9ef2fb4ebb1239a389cae68b7086a0fd01c1b69" translate="yes" xml:space="preserve">
          <source>As you can see, running &lt;code&gt;git fetch origin&lt;/code&gt; retrieved any remote branches we were not yet setup to track on our local machine. From there, since we now have a ref to the remote branch, we can simply run &lt;code&gt;git checkout remote_branch&lt;/code&gt; and we'll gain the benefits of remote tracking.</source>
          <target state="translated">보시다시피, &lt;code&gt;git fetch origin&lt;/code&gt; 을 실행하면 아직 로컬 컴퓨터에서 추적하도록 설정되지 않은 원격 분기를 검색했습니다. 이제 원격 브랜치에 대한 참조가 있으므로 &lt;code&gt;git checkout remote_branch&lt;/code&gt; 를 실행하면 원격 추적의 이점을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b167bc9b1527a0d6a8fea98cc4d4ea2155a04588" translate="yes" xml:space="preserve">
          <source>Before you can start working locally on a remote branch, you need to fetch it as called out in answers below.</source>
          <target state="translated">원격 브랜치에서 로컬로 작업을 시작하기 전에 아래 답변에 나와있는대로 가져와야합니다.</target>
        </trans-unit>
        <trans-unit id="c2901c80e326c0e88e39db0b829feb137cba0dfa" translate="yes" xml:space="preserve">
          <source>Both will create a &lt;code&gt;latest fixes_for_dev&lt;/code&gt; from &lt;code&gt;development&lt;/code&gt;</source>
          <target state="translated">둘 다 &lt;code&gt;development&lt;/code&gt; 에서 &lt;code&gt;latest fixes_for_dev&lt;/code&gt; 를 만들 것입니다</target>
        </trans-unit>
        <trans-unit id="45e5f3f72e961cb70134ba35f7a27a9620e515f7" translate="yes" xml:space="preserve">
          <source>Commands</source>
          <target state="translated">Commands</target>
        </trans-unit>
        <trans-unit id="5438a1884539d16e13bde917763faaf2eb4bb18d" translate="yes" xml:space="preserve">
          <source>Did you intend to checkout 'origin/remote_branch' which can not be resolved as commit?</source>
          <target state="translated">커밋으로 해결할 수없는 'origin / remote_branch'를 체크 아웃하려고 했습니까?</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="e9656fda095be85a55c47e88f0f2142837377331" translate="yes" xml:space="preserve">
          <source>E.g.:</source>
          <target state="translated">E.g.:</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="94470ebc5419b0928fcff5c6ed5a42eb6ad0ce96" translate="yes" xml:space="preserve">
          <source>Fetch from the remote and checkout the branch.</source>
          <target state="translated">리모콘에서 가져와 분기를 체크 아웃하십시오.</target>
        </trans-unit>
        <trans-unit id="1753d0500d4beb0e06174bf3ee26e61f0833f605" translate="yes" xml:space="preserve">
          <source>First, you need to do:</source>
          <target state="translated">먼저 다음을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="78b576eeb16ea5a47239699f699e69007893206f" translate="yes" xml:space="preserve">
          <source>Fix it by using &lt;code&gt;*&lt;/code&gt; and fetch the new information from origin:</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; 를 사용하여 수정하고 출처에서 새 정보를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="b975ccd2922e46c3a54f83ba261085da3f38f3b9" translate="yes" xml:space="preserve">
          <source>For example, I tried to checkout a remote branch named as &lt;code&gt;#9773&lt;/code&gt; but the command didn't work properly, as shown in the picture below:</source>
          <target state="translated">예를 들어, 이름이 &lt;code&gt;#9773&lt;/code&gt; 인 원격 브랜치를 체크 아웃하려고했지만 아래 그림과 같이 명령이 제대로 작동하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="1247ae4eb1e5a21a2deb6b10090b843e015065de" translate="yes" xml:space="preserve">
          <source>For list all your branches</source>
          <target state="translated">모든 지점을 나열하려면</target>
        </trans-unit>
        <trans-unit id="e73c15da328e7d6ce2ee34a4171d140e73177383" translate="yes" xml:space="preserve">
          <source>For some reason I wondered if the sharp symbol (#) could have something to do with it, and then I tried surrounding the branch name with single quotes, like &lt;code&gt;'#9773'&lt;/code&gt; rathen than just &lt;code&gt;#9773&lt;/code&gt;, and fortunately it worked fine.</source>
          <target state="translated">어떤 이유로 나는 날카로운 기호 (#)가 그것과 관련이 있는지 궁금해했으며, &lt;code&gt;'#9773'&lt;/code&gt; 보다 '# 9773'rathen 과 같이 작은 따옴표로 분기 이름을 둘러 보았지만 다행히도 잘 작동했습니다.</target>
        </trans-unit>
        <trans-unit id="ed732d24ea2e0b7b0dca6a2f890e13e7d0930302" translate="yes" xml:space="preserve">
          <source>For us, it seems the &lt;code&gt;remote.origin.fetch&lt;/code&gt; configuration gave a problem. Therefore, we could not see any other remote branches than &lt;code&gt;master&lt;/code&gt;, so &lt;code&gt;git fetch [--all]&lt;/code&gt; did not help. Neither &lt;code&gt;git checkout mybranch&lt;/code&gt; nor &lt;code&gt;git checkout -b mybranch --track origin/mybranch&lt;/code&gt; did work, although it certainly was at remote.</source>
          <target state="translated">우리에게는 &lt;code&gt;remote.origin.fetch&lt;/code&gt; 구성에 문제가있는 것 같습니다. 따라서 &lt;code&gt;master&lt;/code&gt; 이외의 다른 원격 브랜치를 볼 수 없으므로 &lt;code&gt;git fetch [--all]&lt;/code&gt; 이 도움이되지 않았습니다. &lt;code&gt;git checkout mybranch&lt;/code&gt; 또는 &lt;code&gt;git checkout -b mybranch --track origin/mybranch&lt;/code&gt; 는 모두 원격에 있었지만 작동하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="944e5bc34e204f6b7844ac8401597d07918eddcf" translate="yes" xml:space="preserve">
          <source>Git looks on &lt;code&gt;xxx&lt;/code&gt; as a branch name at first, but there isn't any branch named test.</source>
          <target state="translated">Git은 처음에 &lt;code&gt;xxx&lt;/code&gt; 를 분기 이름으로 보지만 test라는 이름의 분기는 없습니다.</target>
        </trans-unit>
        <trans-unit id="6840459a8a26012d7372ef73ae39b44152fbf369" translate="yes" xml:space="preserve">
          <source>Here is also a single-line version:</source>
          <target state="translated">한 줄 버전도 있습니다 :</target>
        </trans-unit>
        <trans-unit id="fccd1632cbae273c32046ebe55af346ce9b14be6" translate="yes" xml:space="preserve">
          <source>How do I check out a remote Git branch</source>
          <target state="translated">원격 Git 브랜치를 어떻게 확인합니까?</target>
        </trans-unit>
        <trans-unit id="003f6ff7b7de7578e6028e8e8e5c8c7e59493ea4" translate="yes" xml:space="preserve">
          <source>How do I check out a remote Git branch?</source>
          <target state="translated">원격 Git 브랜치를 어떻게 확인합니까?</target>
        </trans-unit>
        <trans-unit id="dda325d72064e8aaa136c6eb122c0091c8821c18" translate="yes" xml:space="preserve">
          <source>However, if that branch name is found in more than one remote, this won't work as Git doesn't know which to use. In that case you can use either:</source>
          <target state="translated">그러나 해당 분기 이름이 둘 이상의 원격에서 발견되면 Git이 사용할 것을 알 수 없으므로 작동하지 않습니다. 이 경우 다음 중 하나를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="225dd0dd63f0b1ad1c374cbfb49fbc7df321ac01" translate="yes" xml:space="preserve">
          <source>I also created the image below for you to share the differences, look at how &lt;code&gt;fetch&lt;/code&gt; works and also how it's different to &lt;code&gt;pull&lt;/code&gt;:</source>
          <target state="translated">차이점을 공유하기 위해 아래 이미지를 만들었습니다. &lt;code&gt;fetch&lt;/code&gt; 작동 방식과 &lt;code&gt;pull&lt;/code&gt; 의 차이점을 살펴보십시오.</target>
        </trans-unit>
        <trans-unit id="a46072c40514d1cee33e9a98b3d58b32dd8490fc" translate="yes" xml:space="preserve">
          <source>I believe &lt;code&gt;git fetch&lt;/code&gt; pulls in &lt;em&gt;all&lt;/em&gt; remote branches, which is not what the original poster wanted.</source>
          <target state="translated">&lt;code&gt;git fetch&lt;/code&gt; 가 &lt;em&gt;모든&lt;/em&gt; 원격 브랜치를 가져 오는 것으로 생각합니다. 원래 포스터가 원하는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="130d5240805efa00f360c411b9c14d8c953e1d7e" translate="yes" xml:space="preserve">
          <source>I tried the above solution, but it didn't work. Try this, it works:</source>
          <target state="translated">위의 솔루션을 시도했지만 작동하지 않았습니다. 이것을 시도하십시오, 그것은 작동합니다 :</target>
        </trans-unit>
        <trans-unit id="524d82cc31759fc08ed539d1e11b053f3e54e419" translate="yes" xml:space="preserve">
          <source>I use the following command:</source>
          <target state="translated">다음 명령을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="e48e43c619717be0ded569ccd986d336a2e19c8d" translate="yes" xml:space="preserve">
          <source>I was stuck in a situation seeing &lt;code&gt;error: pathspec 'desired-branch' did not match any file(s) known to git.&lt;/code&gt; for all of the suggestions above. I'm on git version 1.8.3.1.</source>
          <target state="translated">&lt;code&gt;error: pathspec 'desired-branch' did not match any file(s) known to git.&lt;/code&gt; 위의 모든 제안에 대해 git 버전 1.8.3.1을 사용하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="d5b78408e8cdedd0bed8bab8bb5ac81d1715c29d" translate="yes" xml:space="preserve">
          <source>I've tried:</source>
          <target state="translated">난 노력 했어:</target>
        </trans-unit>
        <trans-unit id="9fa51ace133a66a5dd208d56fc12ff03c0baf388" translate="yes" xml:space="preserve">
          <source>If the answer is 'yes', I can tell you the cause.</source>
          <target state="translated">대답이 '예'인 경우 원인을 알려줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="93120007b36bbfde972f9c4c0f57b1535c82fad3" translate="yes" xml:space="preserve">
          <source>If the branch is on something other than the &lt;code&gt;origin&lt;/code&gt; remote I like to do the following:</source>
          <target state="translated">지점이 &lt;code&gt;origin&lt;/code&gt; 원격이 아닌 다른 곳에 있으면 다음을 수행하고 싶습니다.</target>
        </trans-unit>
        <trans-unit id="3acba91d754062f6ccd20acd2dc53b035251b0a2" translate="yes" xml:space="preserve">
          <source>If the remote branch name begins with special characteres you need to use single quotes around it in the checkout command, or else git won't know which branch you are talking about.</source>
          <target state="translated">원격 브랜치 이름이 특수 문자로 시작하는 경우 checkout 명령에서 작은 따옴표를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="58b0d8261e88485550ce1dedb2d80e92cf03ae65" translate="yes" xml:space="preserve">
          <source>If there isn't file named &lt;code&gt;xxx&lt;/code&gt; either, then Git will try to create the &lt;code&gt;xxx&lt;/code&gt; according to some rules. One of the rules is create a branch named &lt;code&gt;xxx&lt;/code&gt; if &lt;code&gt;remotes/origin/xxx&lt;/code&gt; exists.</source>
          <target state="translated">&lt;code&gt;xxx&lt;/code&gt; 라는 이름의 파일이 없으면 Git은 일부 규칙에 따라 &lt;code&gt;xxx&lt;/code&gt; 를 만들려고 시도합니다. &lt;code&gt;remotes/origin/xxx&lt;/code&gt; 가 존재하는 경우 규칙 중 하나는 &lt;code&gt;xxx&lt;/code&gt; 라는 분기를 작성하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="9725f4bb2746945cdd84369519318479d62d81ed" translate="yes" xml:space="preserve">
          <source>If you receive this message, you must first do a &lt;code&gt;git fetch origin&lt;/code&gt; where &lt;code&gt;origin&lt;/code&gt; is the name of the remote repository prior to running &lt;code&gt;git checkout remote_branch&lt;/code&gt;. Here's a full example with responses:</source>
          <target state="translated">이 메시지를 수신하면 먼저 &lt;code&gt;git checkout remote_branch&lt;/code&gt; 를 실행하기 전에 &lt;code&gt;origin&lt;/code&gt; 이 원격 저장소의 이름 인 &lt;code&gt;git fetch origin&lt;/code&gt; 을 수행해야합니다. 응답이 포함 된 전체 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="710b778362e1a157fdf0f6689a515149f6c4d181" translate="yes" xml:space="preserve">
          <source>If you want to override your local branch name on checkout:</source>
          <target state="translated">체크 아웃시 로컬 지점 이름을 대체하려는 경우 :</target>
        </trans-unit>
        <trans-unit id="5709b13d4cb5e11b2713c0b8e665c0810e70d381" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://github.com/git/git/blob/master/Documentation/RelNotes/2.19.0.txt&quot;&gt;2.19&lt;/a&gt;, Git learned the &lt;a href=&quot;https://git-scm.com/docs/git-config#Documentation/git-config.txt-checkoutdefaultRemote&quot;&gt;&lt;code&gt;checkout.defaultRemote&lt;/code&gt;&lt;/a&gt; configuration, which specifies a remote to default to when resolving such an ambiguity.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/git/git/blob/master/Documentation/RelNotes/2.19.0.txt&quot;&gt;2.19&lt;/a&gt; 에서 Git은 &lt;a href=&quot;https://git-scm.com/docs/git-config#Documentation/git-config.txt-checkoutdefaultRemote&quot;&gt; &lt;code&gt;checkout.defaultRemote&lt;/code&gt; &lt;/a&gt; 구성을 배웠습니다. 이러한 원격 구성은 이러한 모호성을 해결할 때 기본값으로 원격을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a91403cd8b325d47cd111990eace4f3e6ec785bb" translate="yes" xml:space="preserve">
          <source>In earlier versions of &lt;code&gt;git&lt;/code&gt;, you needed an explicit &lt;code&gt;--track&lt;/code&gt; option, but that is the default now when you are branching off a remote branch.</source>
          <target state="translated">이전 버전의 &lt;code&gt;git&lt;/code&gt; 에서는 명시 적 &lt;code&gt;--track&lt;/code&gt; 옵션이 필요했지만 원격 브랜치에서 분기 할 때 이것이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="6a7d6bd1fb274dbd4fbd933a035ba698f0a4fd29" translate="yes" xml:space="preserve">
          <source>In this case, you probably want to create a local &lt;code&gt;test&lt;/code&gt; branch which is tracking the remote &lt;code&gt;test&lt;/code&gt; branch:</source>
          <target state="translated">이 경우 원격 &lt;code&gt;test&lt;/code&gt; 분기를 추적하는 로컬 &lt;code&gt;test&lt;/code&gt; 분기를 작성하려고합니다.</target>
        </trans-unit>
        <trans-unit id="b2fe93d1843a6c213febf628ee3169b9f6743a7f" translate="yes" xml:space="preserve">
          <source>No idea how this config ended up in our local repo.</source>
          <target state="translated">이 설정이 로컬 리포지토리에서 어떻게 끝났는지 모르겠습니다.</target>
        </trans-unit>
        <trans-unit id="53c85bcb2a017b1abbb7fda7cfe4ddea8f2a2b14" translate="yes" xml:space="preserve">
          <source>Now I'm trying to check out the remote &lt;code&gt;test&lt;/code&gt; branch.</source>
          <target state="translated">이제 원격 &lt;code&gt;test&lt;/code&gt; 분기를 확인하려고합니다.</target>
        </trans-unit>
        <trans-unit id="da0908afa2347931cf2b5668b0cc9e3f5392dca9" translate="yes" xml:space="preserve">
          <source>Now we could &lt;code&gt;git checkout&lt;/code&gt; the remote branch locally.</source>
          <target state="translated">이제 원격 브랜치를 로컬로 &lt;code&gt;git checkout&lt;/code&gt; 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3be15f362e4a2f4c71bf34f6d6e1b18c36206d8f" translate="yes" xml:space="preserve">
          <source>Now your local branch name is &lt;code&gt;enhancement&lt;/code&gt;, but your remote branch name is &lt;code&gt;future_branch&lt;/code&gt;.</source>
          <target state="translated">이제 로컬 지점 이름은 &lt;code&gt;enhancement&lt;/code&gt; 되었지만 원격 지점 이름은 &lt;code&gt;future_branch&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c998f7080f77f2a9ed3959f32c60e568b6a584d9" translate="yes" xml:space="preserve">
          <source>Old Answer</source>
          <target state="translated">기존 답변</target>
        </trans-unit>
        <trans-unit id="2bf0c49baafe696508e7274afd6b3ffa1a0fddb3" translate="yes" xml:space="preserve">
          <source>Other answers do not work with modern Git in my benign case. You might need to pull first if the remote branch is new, but I haven't checked that case.</source>
          <target state="translated">내 양성의 경우 현대적인 Git과 다른 답변은 작동하지 않습니다. 원격 브랜치가 새로운 경우 먼저 당겨야 할 수도 있지만 그 경우는 확인하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="0782eecb3ac24107d3a5a615471047c19512121e" translate="yes" xml:space="preserve">
          <source>Other guys and gals give the solutions, but maybe I can tell you why.</source>
          <target state="translated">다른 남자들과 여자들은 해결책을 제시하지만 그 이유를 말해 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ebfada552792dfe1540c065403592b0efe862c7" translate="yes" xml:space="preserve">
          <source>Please follow the command to create an empty folder. Enter that and use this command:</source>
          <target state="translated">빈 폴더를 만들려면 명령을 따르십시오. 이를 입력하고 다음 명령을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="45799aa638555ae87b151a87a8b7ce6e49389fba" translate="yes" xml:space="preserve">
          <source>Second, you can check out remote branch into your local by:</source>
          <target state="translated">둘째, 다음을 통해 로컬로 원격 지점을 체크 아웃 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6e13b651bb1d6481fd832705fd5ee40032486ad" translate="yes" xml:space="preserve">
          <source>Simply run &lt;code&gt;git checkout&lt;/code&gt; with the name of the remote branch. Git will &lt;a href=&quot;https://git-scm.com/book/id/v2/Git-Branching-Remote-Branches#_tracking_branches&quot;&gt;automatically create&lt;/a&gt; a local branch that tracks the remote one:</source>
          <target state="translated">원격 지사 이름으로 &lt;code&gt;git checkout&lt;/code&gt; 을 실행하면됩니다. Git은 원격 지점을 추적하는 로컬 지점을 &lt;a href=&quot;https://git-scm.com/book/id/v2/Git-Branching-Remote-Branches#_tracking_branches&quot;&gt;자동으로 만듭니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c2d6b5812d0e00208d8372bdfa9bfb41b7210dda" translate="yes" xml:space="preserve">
          <source>So this &lt;strong&gt;worked for me&lt;/strong&gt;:</source>
          <target state="translated">그래서 이것은 &lt;strong&gt;나를 위해 일했습니다&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="b4f91bdb0e1b0e40fff4debcd0fea22f1999f491" translate="yes" xml:space="preserve">
          <source>Solution</source>
          <target state="translated">Solution</target>
        </trans-unit>
        <trans-unit id="339b768cc71e0e02860dad32045b2663d3766e6d" translate="yes" xml:space="preserve">
          <source>Somebody pushed a branch called &lt;code&gt;test&lt;/code&gt; with &lt;code&gt;git push origin test&lt;/code&gt; to a shared repository. I can see the branch with &lt;code&gt;git branch -r&lt;/code&gt;.</source>
          <target state="translated">누군가 &lt;code&gt;git push origin test&lt;/code&gt; 와 함께 &lt;code&gt;test&lt;/code&gt; 라는 브랜치를 공유 리포지토리에 푸시했습니다 . &lt;code&gt;git branch -r&lt;/code&gt; 으로 분기를 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="04c7467072bc00eccfbb82d3b1a8bb6575a44fd4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;* (no branch)&lt;/code&gt; in &lt;code&gt;git branch&lt;/code&gt; output means that you are on unnamed branch, in so called &quot;detached HEAD&quot; state (HEAD points directly to commit, and is not symbolic reference to some local branch).  If you made some commits on this unnamed branch, you can always create local branch off current commit:</source>
          <target state="translated">&lt;code&gt;git branch&lt;/code&gt; 출력에서 &lt;code&gt;* (no branch)&lt;/code&gt; 는 &quot;분리 된 HEAD&quot;상태 (명명 된 HEAD가 직접 커밋을 가리키며 일부 로컬 분기에 대한 기호 참조가 아님)에서 이름이없는 분기에 있음을 의미합니다. 이 명명되지 않은 브랜치에서 커밋을 한 경우 항상 현재 커밋에서 로컬 브랜치를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0dbb9cf7d1244183bcfe225998b3c14419997bfe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;git remote show &amp;lt;origin name&amp;gt;&lt;/code&gt; command will list all branches (including un-tracked branches). Then you can find the remote branch name that you need to fetch.</source>
          <target state="translated">&lt;code&gt;git remote show &amp;lt;origin name&amp;gt;&lt;/code&gt; 명령은 모든 분기 (추적되지 않은 분기 포함)를 나열합니다. 그런 다음 가져와야하는 원격 지점 이름을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8fa18bf4e9ee0884349bb9292b32f0bf882b090" translate="yes" xml:space="preserve">
          <source>The above command checks out all of the branches, but only the &lt;code&gt;master&lt;/code&gt; branch will be initialized. If you want to checkout the other branches, do:</source>
          <target state="translated">위의 명령은 모든 분기를 체크 아웃하지만 &lt;code&gt;master&lt;/code&gt; 분기 만 초기화됩니다. 다른 지점을 체크 아웃하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="d69680170fcfebd668037ca3ac1b54f23c0028fe" translate="yes" xml:space="preserve">
          <source>The cause is that there is a file (or folder) named 'test' in your work tree.</source>
          <target state="translated">작업 트리에 'test'라는 파일 (또는 폴더)이 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="583185263935914c46a50db440da4466c666d5ab" translate="yes" xml:space="preserve">
          <source>The explanation behind is that I've noticed that when fetching the remote branch, it was fetched to FETCH_HEAD:</source>
          <target state="translated">뒤에 나오는 설명은 원격 브랜치를 가져올 때 FETCH_HEAD로 페치되었음을 알았습니다.</target>
        </trans-unit>
        <trans-unit id="e5bf16eee9440e4868280ed540a42ff03be26149" translate="yes" xml:space="preserve">
          <source>The first tells Git the remote exists, the second gets the commits.</source>
          <target state="translated">첫 번째는 Git에 원격이 있음을 알리고 두 번째는 커밋을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="0653722976a3d33c763e1e8849d3fe2b26852358" translate="yes" xml:space="preserve">
          <source>The previous configuration only allowed &lt;code&gt;master&lt;/code&gt; to be fetched:</source>
          <target state="translated">이전 구성에서는 &lt;code&gt;master&lt;/code&gt; 를 가져올 수만있었습니다.</target>
        </trans-unit>
        <trans-unit id="add3ee214d4fc0f3ba587a683020678164e7f157" translate="yes" xml:space="preserve">
          <source>Then Git thinks &lt;code&gt;xxx&lt;/code&gt; is a path, and fortunately (or unfortunately), there is a file named test. So &lt;code&gt;git checkout xxx&lt;/code&gt; means discard any modification in &lt;code&gt;xxx&lt;/code&gt; file.</source>
          <target state="translated">그런 다음 Git은 &lt;code&gt;xxx&lt;/code&gt; 가 경로라고 생각하고 불행하게도 (또는 불행히도) test라는 파일이 있다고 생각합니다. 따라서 &lt;code&gt;git checkout xxx&lt;/code&gt; 는 &lt;code&gt;xxx&lt;/code&gt; 파일의 수정 사항을 버리는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="fd798ec0bd73887cd0876063107e59285fcd0ac9" translate="yes" xml:space="preserve">
          <source>This command checks out the remote branch, and your local branch name will be same as the remote branch.</source>
          <target state="translated">이 명령은 원격 지점을 체크 아웃하며 로컬 지점 이름은 원격 지점과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="0f1e1d718e7c7b2f3d2334868edf47b645934e4e" translate="yes" xml:space="preserve">
          <source>This will &lt;a href=&quot;https://en.wikipedia.org/wiki/DWIM&quot;&gt;DWIM&lt;/a&gt; for a remote not named origin (&lt;a href=&quot;http://www.kernel.org/pub/software/scm/git/docs/git-checkout.html&quot;&gt;documentation&lt;/a&gt;):</source>
          <target state="translated">이것은 이름이 지정되지 않은 원격 ( &lt;a href=&quot;http://www.kernel.org/pub/software/scm/git/docs/git-checkout.html&quot;&gt;documentation&lt;/a&gt; )의 &lt;a href=&quot;https://en.wikipedia.org/wiki/DWIM&quot;&gt;DWIM&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4b0f56452cbd415f9ad2ddae7a4db2496d4c73cb" translate="yes" xml:space="preserve">
          <source>This will checkout the &lt;code&gt;next&lt;/code&gt; branch on the &lt;code&gt;upstream&lt;/code&gt; remote in to a local branch called &lt;code&gt;second/next&lt;/code&gt;. Which means if you already have a local branch named next it will not conflict.</source>
          <target state="translated">그러면 &lt;code&gt;upstream&lt;/code&gt; 리모컨의 &lt;code&gt;next&lt;/code&gt; 분기가 &lt;code&gt;second/next&lt;/code&gt; 라는 로컬 분기로 체크 아웃됩니다. 즉, next라는 로컬 지점이 이미 있으면 충돌하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ab8dfb113a789a4fa297915e1347047fe4a8aeca" translate="yes" xml:space="preserve">
          <source>This will fetch all of the remote branches for you. You can see the branches available for checkout with:</source>
          <target state="translated">이것은 당신을 위해 모든 원격 브랜치를 가져옵니다. 다음을 통해 결제에 사용할 수있는 지점을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="739ee086733ea3fb321776d7a3c80a9b4f5269d5" translate="yes" xml:space="preserve">
          <source>This will fetch the remote branch and create a new local branch (if not exists already) with name &lt;code&gt;local_branch_name&lt;/code&gt; and track the remote one in it.</source>
          <target state="translated">이것은 원격 브랜치를 페치하고 이름이 &lt;code&gt;local_branch_name&lt;/code&gt; 인 새 로컬 브랜치를 작성하고 (아직 존재하지 않는 경우) 원격 브랜치 를 추적합니다.</target>
        </trans-unit>
        <trans-unit id="7782c41db83521bdf64890eb7c00bd75290d1d90" translate="yes" xml:space="preserve">
          <source>This worked for me.</source>
          <target state="translated">이것은 나를 위해 일했습니다.</target>
        </trans-unit>
        <trans-unit id="582a172c0509d9380faa6d6d56f9a076479d6c1e" translate="yes" xml:space="preserve">
          <source>To add a new remote, you will need to do the following first:</source>
          <target state="translated">새 리모컨을 추가하려면 먼저 다음을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="e83031a19ff7ec727db3717f9744c8ad8762136a" translate="yes" xml:space="preserve">
          <source>To checkout/change a branch</source>
          <target state="translated">지점을 체크 아웃 / 변경하려면</target>
        </trans-unit>
        <trans-unit id="8f4f37c55cb856da3053c261978f48fc3f431e38" translate="yes" xml:space="preserve">
          <source>To clone a Git repository, do:</source>
          <target state="translated">Git 리포지토리를 복제하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="8ab73e824f91ac294e1002868c8c86435d716aaf" translate="yes" xml:space="preserve">
          <source>To fetch a branch, you simply need to:</source>
          <target state="translated">지점을 가져 오려면 다음을 수행하면됩니다.</target>
        </trans-unit>
        <trans-unit id="567ea58a588580e16bff2bb35f61cb8590cbd14f" translate="yes" xml:space="preserve">
          <source>To list remote branches:</source>
          <target state="translated">원격 브랜치를 나열하려면 :</target>
        </trans-unit>
        <trans-unit id="fb91e24fa52d8d2b32937bf04d843f730319a902" translate="yes" xml:space="preserve">
          <source>Update</source>
          <target state="translated">Update</target>
        </trans-unit>
        <trans-unit id="3529574e5ade74c79d80ffde723e308e6ae88e4f" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;fetch&lt;/code&gt; to pull all your remote</source>
          <target state="translated">&lt;code&gt;fetch&lt;/code&gt; 를 사용하여 모든 리모컨을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="e82e0e89de4b2950b305c134a4d5fec2f0b6e582" translate="yes" xml:space="preserve">
          <source>Use these steps to fetch remote branches:</source>
          <target state="translated">원격 브랜치를 가져 오려면 다음 단계를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="bc0e34154d952ed72b15f5d9618112640d548177" translate="yes" xml:space="preserve">
          <source>Use:</source>
          <target state="translated">Use:</target>
        </trans-unit>
        <trans-unit id="40accb4e47ae8af9b52ccc00d13f7e9046fb61e0" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;git checkout xxx&lt;/code&gt; parsed,</source>
          <target state="translated">&lt;code&gt;git checkout xxx&lt;/code&gt; 가 파싱되면</target>
        </trans-unit>
        <trans-unit id="f4e7078ce60c936cd5f69e83df90dec9c7471037" translate="yes" xml:space="preserve">
          <source>While the first and selected answer is technically &lt;em&gt;correct&lt;/em&gt;, there's the possibility you have not yet retrieved all objects and refs from the remote repository. If that is the case, you'll receive the following error:</source>
          <target state="translated">첫 번째 답변과 선택한 답변은 기술적으로 &lt;em&gt;정확&lt;/em&gt; 하지만 원격 저장소에서 모든 객체와 참조를 아직 검색하지 않았을 가능성이 있습니다. 이 경우 다음과 같은 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e11ce179a3c4f6e2965bc7f88cee98a4d912498a" translate="yes" xml:space="preserve">
          <source>With the remote branches in hand, you now  need to check out the branch you are interested in, giving you a local working copy:</source>
          <target state="translated">원격 지점을 보유한 경우 이제 관심있는 지점을 확인하여 로컬 작업 사본을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="baa724bb34ddb3b890602004e5327b415d229a33" translate="yes" xml:space="preserve">
          <source>You can simply fetch and then checkout to the branch, use the one line command below to do that:</source>
          <target state="translated">간단히 브랜치를 가져오고 체크 아웃 할 수 있습니다. 아래 한 줄 명령을 사용하여 그렇게하십시오.</target>
        </trans-unit>
        <trans-unit id="ce49ad5096e8e2b424e46c7b229e7a3755607e58" translate="yes" xml:space="preserve">
          <source>You can start tracking all remote branches with the following Bash script:</source>
          <target state="translated">다음 Bash 스크립트를 사용하여 모든 원격 지점 추적을 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a17a1d8b6c67017fe46b4245e46b22c7b82e61f" translate="yes" xml:space="preserve">
          <source>You can try</source>
          <target state="translated">당신은 시도 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="b95abc595614e3d8247b570adc8b1e4d6776f038" translate="yes" xml:space="preserve">
          <source>You need to &lt;code&gt;fetch&lt;/code&gt; the branch...</source>
          <target state="translated">지점을 &lt;code&gt;fetch&lt;/code&gt; 합니다 ...</target>
        </trans-unit>
        <trans-unit id="a357a0b3b6bb01e41a042b584904f6b12375f3f1" translate="yes" xml:space="preserve">
          <source>and then</source>
          <target state="translated">그리고</target>
        </trans-unit>
        <trans-unit id="f570bd69a546209e588006accbd8b646f4ee7b1a" translate="yes" xml:space="preserve">
          <source>are equal to</source>
          <target state="translated">같다</target>
        </trans-unit>
        <trans-unit id="7cfc3acc894349e1a2bf9edf47413fc59b757d31" translate="yes" xml:space="preserve">
          <source>fatal: git checkout: updating paths is incompatible with switching branches.</source>
          <target state="translated">치명적 : git checkout : 경로 업데이트는 스위칭 브랜치와 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="844a30721d219ca64f182132b851a218fe0621fd" translate="yes" xml:space="preserve">
          <source>git branch</source>
          <target state="translated">자식 지점</target>
        </trans-unit>
        <trans-unit id="35d89fc53de390864eaebd4010f0c3998bb8c3e0" translate="yes" xml:space="preserve">
          <source>git branch --all</source>
          <target state="translated">자식 분기-모두</target>
        </trans-unit>
        <trans-unit id="141573ccae9f164d4edd79b2c7159d29cbd58f03" translate="yes" xml:space="preserve">
          <source>git checkout -b &quot;Your Branch name&quot;</source>
          <target state="translated">git checkout -b &quot;지사 이름&quot;</target>
        </trans-unit>
        <trans-unit id="70d49069cd0b4f79cd1245a2e136fa74e68c58bf" translate="yes" xml:space="preserve">
          <source>git checkout test which does nothing</source>
          <target state="translated">아무것도하지 않는 git checkout test</target>
        </trans-unit>
        <trans-unit id="14e259e6dfe74f7af161bc2de832db67644ab8d2" translate="yes" xml:space="preserve">
          <source>git fetch origin &amp;amp;&amp;amp; git checkout feature/XYZ-1234-Add-alerts</source>
          <target state="translated">git fetch origin &amp;amp;&amp;amp; git checkout 기능 / XYZ-1234-Add-alerts</target>
        </trans-unit>
        <trans-unit id="f4797c87582aa2c67f9b07ccc5570a633c468ea2" translate="yes" xml:space="preserve">
          <source>none of these answers worked for me. this worked:</source>
          <target state="translated">이 답변들 중 어느 것도 나를 위해 일하지 않았습니다. 이것은 효과가 있었다 :</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="9a0a77dcbd920a3b8610bbda370b5131ad088d5c" translate="yes" xml:space="preserve">
          <source>or the shorthand</source>
          <target state="translated">또는 속기</target>
        </trans-unit>
        <trans-unit id="9f133caaf75f0810347ac6b72de7730359e1af31" translate="yes" xml:space="preserve">
          <source>successfully checkout from the master branch to dev branch</source>
          <target state="translated">마스터 브랜치에서 dev 브랜치로 성공적으로 체크 아웃</target>
        </trans-unit>
        <trans-unit id="b6eae5547ffe81dbfcf771b4265e6586eb0a0404" translate="yes" xml:space="preserve">
          <source>then checkout to the branch :</source>
          <target state="translated">그런 다음 지점으로 체크 아웃하십시오.</target>
        </trans-unit>
        <trans-unit id="c13863bf665d134fee832842530df9ac7f11556f" translate="yes" xml:space="preserve">
          <source>to get all remote branches use this :</source>
          <target state="translated">모든 원격 브랜치를 사용하려면 다음을 사용하십시오.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
