<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/1720421">
    <body>
      <group id="1720421">
        <trans-unit id="be1a0b56303fd0b9bbf9531e3f49bcf95efeba05" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;https://docs.python.org/2/library/itertools.html&quot;&gt;https://docs.python.org/2/library/itertools.html&lt;/a&gt;), so I took inspiration from here and wrote something along these lines:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(ver &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/library/itertools.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://docs.python.org/2/library/itertools.html&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), as&amp;iacute; que me inspir&amp;eacute; aqu&amp;iacute; y escrib&amp;iacute; algo en este sentido:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1e0e466be49f136484d1886eb38ef60da4e08130" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a += b&lt;/code&gt; and &lt;code&gt;a.extend(b)&lt;/code&gt; are more or less equivalent for all practical purposes. &lt;code&gt;+=&lt;/code&gt; when called on a list will internally call
  &lt;code&gt;list.__iadd__&lt;/code&gt;, which extends the first list by the second.</source>
          <target state="translated">&lt;code&gt;a += b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.extend(b)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; son m&amp;aacute;s o menos equivalente a todos los efectos pr&amp;aacute;cticos. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;+=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cuando se llama en una lista internamente llamar&amp;aacute; a la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;list.__iadd__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que extiende la primera lista por la segunda.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e922d9ceaa1f3a6fe873ade8c47f8fd3e9433721" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for i in b: a.append(i)&lt;/code&gt; is more wordy, and slower than &lt;code&gt;a.extend(b)&lt;/code&gt;, which is single function call and more idiomatic. &lt;code&gt;append&lt;/code&gt; is slower because of the semantics with which memory is allocated and grown for lists. See &lt;a href=&quot;https://stackoverflow.com/questions/537086/reserve-memory-for-list-in-python&quot;&gt;here&lt;/a&gt; for a similar discussion.</source>
          <target state="translated">&lt;code&gt;for i in b: a.append(i)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es m&amp;aacute;s prolijo y m&amp;aacute;s lento que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.extend(b)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que es llamada de funci&amp;oacute;n &amp;uacute;nica y m&amp;aacute;s idiom&amp;aacute;tico. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;append&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es m&amp;aacute;s lento debido a la sem&amp;aacute;ntica con la que se asigna y crece la memoria para las listas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ver &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/537086/reserve-memory-for-list-in-python&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aqu&amp;iacute;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para una discusi&amp;oacute;n similar.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c1ec351ce90ecb1038e62f007f84dba4a7b7853b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;heapq.merge&lt;/code&gt; will work, but its use case is for merging sorted lists in linear time. Using it in any other situation is an anti-pattern.</source>
          <target state="translated">&lt;code&gt;heapq.merge&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; funcionar&amp;aacute;, pero su caso de uso es para fusionar listas ordenadas en tiempo lineal. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Usarlo en cualquier otra situaci&amp;oacute;n es un antipatr&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="592ab6ce9ca57c8648a73e135a1fcea56bb8a989" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operator.add(a, b)&lt;/code&gt; is an acceptable functional equivalent to &lt;code&gt;a + b&lt;/code&gt;. It's use cases are mainly for dynamic method dispatch. Otherwise, prefer &lt;code&gt;a + b&lt;/code&gt; which is shorter and more readable, &lt;em&gt;in my opinion&lt;/em&gt;. YMMV.</source>
          <target state="translated">&lt;code&gt;operator.add(a, b)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es un equivalente funcional aceptable a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a + b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sus casos de uso son principalmente para el env&amp;iacute;o de m&amp;eacute;todos din&amp;aacute;micos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De lo contrario, prefiero &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a + b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que es m&amp;aacute;s corto y m&amp;aacute;s legible, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en mi opini&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;YMMV.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a11bdae46caffba581318f2d0957fa2af9c3ac99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yield&lt;/code&gt;ing list elements from a function is an acceptable method, but &lt;code&gt;chain&lt;/code&gt; does this faster and better (it has a code path in C, so it is fast).</source>
          <target state="translated">&lt;code&gt;yield&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; elementos de la lista desde una funci&amp;oacute;n es un m&amp;eacute;todo aceptable, pero la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;chain&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; hace m&amp;aacute;s r&amp;aacute;pido y mejor (tiene una ruta de c&amp;oacute;digo en C, por lo que es r&amp;aacute;pido).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de42f7c31d42397c35ebc7422f968530d1db1c85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2-List Concatenation&lt;/strong&gt;&lt;sup&gt;1&lt;/sup&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Concatenaci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2 &lt;/font&gt;&lt;/sup&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;listas &lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f9d0589258e9e8ba207b25d0fe609e7bbcac1357" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Footnotes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Footnotes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee2e62ac9741160d2de68a3aef71345b9787adc7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How do I concatenate two lists in Python?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;C&amp;oacute;mo concateno dos listas en Python?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f90a541028494515aedb2b24afa35fb0cc03b07c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;N-List Concatenation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Concatenaci&amp;oacute;n de lista N&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ef9cc6984f84dde569e12f00d89e4e4a9d0d9ab5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old Answer&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vieja respuesta&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3ccfff51da82250c6945871fe29c0806ff574c48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Output:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9e7f1677112d600ebcad4d3b1187915b56c96db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Python &lt;code&gt;&amp;gt;= 3.5&lt;/code&gt; alternative: &lt;code&gt;[*l1, *l2]&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;gt;= 3.5&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; alternativa: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[*l1, *l2]&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="200627b0eb37efd54845f9a6bd7c0133da5e8d51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Update&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d0317ae29056a24314cf2f8d74b6072c14a478df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Using &lt;code&gt;+&lt;/code&gt;&lt;/strong&gt;: It creates a new list from provided lists</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Usando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;+&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : crea una nueva lista a partir de las listas proporcionadas&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de26e80cc06229e9fc52ff4246bf10dbc1b03c30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Using extend&lt;/strong&gt;: It appends new list to existing list. That means it does not create a separate list.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Usando extender&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : agrega una nueva lista a la lista existente. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Eso significa que no crea una lista separada.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9466355b5e39ba3f4ff4bf5112251dfea4caa2fd" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;
1. Note that &lt;code&gt;chain.from_iterable()&lt;/code&gt; is available in Python 2.6 and later. In other versions, use &lt;code&gt;chain(*l)&lt;/code&gt;.
&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 1. Tenga en cuenta que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;chain.from_iterable()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; est&amp;aacute; disponible en Python 2.6 y versiones posteriores. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En otras versiones, use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;chain(*l)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="9c06a4c8027002d85e220d5c33cf79b041654aed" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;1. The &lt;code&gt;iadd&lt;/code&gt; (&lt;code&gt;+=&lt;/code&gt;) and &lt;code&gt;extend&lt;/code&gt; methods operate in-place, so a copy has to be generated each time before testing. To keep things fair, all methods have a pre-copy step for the left-hand list which can be ignored.&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1. Los &lt;/font&gt;&lt;/font&gt; &lt;code&gt;iadd&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;+=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extend&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; funcionan en el lugar, por lo que se debe generar una copia cada vez antes de realizar la prueba. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para mantener las cosas justas, todos los m&amp;eacute;todos tienen un paso previo a la copia para la lista de la izquierda que puede ignorarse.&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="cee5390fc66c7a99468a05a575711dfce66ee4ee" translate="yes" xml:space="preserve">
          <source>A really concise way to combine a list of lists is</source>
          <target state="translated">Una forma realmente concisa de combinar una lista de listas es</target>
        </trans-unit>
        <trans-unit id="45c2de05b124dbfc1c1f52ac51d5ea10fb7a8dd8" translate="yes" xml:space="preserve">
          <source>Also, if you want the values in the merged list to be unique you can do:</source>
          <target state="translated">Además,si quieres que los valores de la lista fusionada sean únicos,puedes hacerlo:</target>
        </trans-unit>
        <trans-unit id="ad4f4fbb55abf9c0d56003af65c406997d01aee8" translate="yes" xml:space="preserve">
          <source>Alternative suggested by Patrick Collins in the comments could also work for you:</source>
          <target state="translated">La alternativa sugerida por Patrick Collins en los comentarios también podría funcionar para usted:</target>
        </trans-unit>
        <trans-unit id="c96e6e777bbf8fb253ab8365cf00e2d50f1f044a" translate="yes" xml:space="preserve">
          <source>Alternatively, you could also use the &lt;code&gt;__add__&lt;/code&gt;&lt;a href=&quot;https://wiki.python.org/moin/DunderAlias&quot;&gt;dunder&lt;/a&gt; function:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Alternativamente, tambi&amp;eacute;n puede usar la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__add__&lt;/code&gt; &lt;a href=&quot;https://wiki.python.org/moin/DunderAlias&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;dunder&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba3429cdab8fe6d431cb6f2ab49984f86321b0cb" translate="yes" xml:space="preserve">
          <source>Another alternative has been introduced via the acceptance of &lt;strong&gt;&lt;a href=&quot;https://www.python.org/dev/peps/pep-0448/&quot;&gt;&lt;code&gt;PEP 448&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; which deserves mentioning.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se ha introducido otra alternativa a trav&amp;eacute;s de la aceptaci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;a href=&quot;https://www.python.org/dev/peps/pep-0448/&quot;&gt; &lt;code&gt;PEP 448&lt;/code&gt; &lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que merece ser mencionada.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="daf811604eefe2768ca9614b135fd22b01de1b39" translate="yes" xml:space="preserve">
          <source>Any method that uses &lt;code&gt;set&lt;/code&gt; will drop duplicates and lose ordering. Use with caution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cualquier m&amp;eacute;todo que use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;set&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; eliminar&amp;aacute; duplicados y perder&amp;aacute; el orden. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Usar con precauci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="519f0b8f8b32ac738a70582c35f96801fca74143" translate="yes" xml:space="preserve">
          <source>As a more general way for more lists you can put them within a list and use the &lt;code&gt;itertools.chain.from_iterable()&lt;/code&gt;&lt;sup&gt;1&lt;/sup&gt; function which based on &lt;a href=&quot;https://stackoverflow.com/a/953097/2867928&quot;&gt;&lt;em&gt;this&lt;/em&gt; answer&lt;/a&gt; is the best way for flatting a nested list:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como una forma m&amp;aacute;s general de obtener m&amp;aacute;s listas, puede colocarlas dentro de una lista y usar la funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;itertools.chain.from_iterable()&lt;/code&gt; &lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que, seg&amp;uacute;n &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/953097/2867928&quot;&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;esta&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; respuesta,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es la mejor manera de aplanar una lista anidada:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b9063ac1918dd0e2b94250316b872965ecc71400" translate="yes" xml:space="preserve">
          <source>As already pointed out by many, &lt;code&gt;itertools.chain()&lt;/code&gt; is the way to go if one needs to apply &lt;em&gt;exactly the same treatment&lt;/em&gt; to both lists. In my case, I had a label and a flag which were different from one list to the other, so I needed something slightly more complex. As it turns out, behind the scenes &lt;code&gt;itertools.chain()&lt;/code&gt; simply does the following:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como ya se&amp;ntilde;alaron muchos, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;itertools.chain()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es el camino a seguir si uno necesita aplicar &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;exactamente el mismo tratamiento&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a ambas listas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En mi caso, ten&amp;iacute;a una etiqueta y una bandera que eran diferentes de una lista a otra, por lo que necesitaba algo un poco m&amp;aacute;s complejo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como resultado, detr&amp;aacute;s de escena &lt;/font&gt;&lt;/font&gt; &lt;code&gt;itertools.chain()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; simplemente hace lo siguiente:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b39a30ea51049073e1b98708229a08323d870d44" translate="yes" xml:space="preserve">
          <source>As of 3.7, these are the most popular stdlib methods for concatenating two (or more) lists in python.</source>
          <target state="translated">A partir del 3,7,estos son los métodos stdlib más populares para concatenar dos (o más)listas en la pitón.</target>
        </trans-unit>
        <trans-unit id="a1bffaab7d05954bfb42a1e79541557123a6456e" translate="yes" xml:space="preserve">
          <source>As with the other approaches, this too &lt;em&gt;creates as shallow copy&lt;/em&gt; of the elements in the corresponding lists.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Al igual que con los otros enfoques, esto tambi&amp;eacute;n &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;crea una copia superficial&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de los elementos en las listas correspondientes.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0d5b259a613175f7271c083683a6d4aa75c41104" translate="yes" xml:space="preserve">
          <source>Comments on Other Solutions</source>
          <target state="translated">Comentarios sobre otras soluciones</target>
        </trans-unit>
        <trans-unit id="227b5cf8a812766db01e65ece6f3b57abefc5f9d" translate="yes" xml:space="preserve">
          <source>Consider this more generic approach:</source>
          <target state="translated">Considere este enfoque más genérico:</target>
        </trans-unit>
        <trans-unit id="a180393247f6db0db54c663b46da65c03d6e1ea6" translate="yes" xml:space="preserve">
          <source>DO NOT USE THE DUNDER METHOD &lt;code&gt;list.__add__&lt;/code&gt; directly in any way, shape or form. In fact, stay clear of dunder methods, and use the operators and &lt;code&gt;operator&lt;/code&gt; functions like they were designed for. Python has careful semantics baked into these which are more complicated than just calling the dunder directly. Here is &lt;a href=&quot;https://stackoverflow.com/a/53984203/4909087&quot;&gt;an example&lt;/a&gt;. So, to summarise, &lt;code&gt;a.__add__(b)&lt;/code&gt; =&amp;gt; BAD; &lt;code&gt;a + b&lt;/code&gt; =&amp;gt; GOOD.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NO UTILICE EL M&amp;Eacute;TODO DUNDER &lt;/font&gt;&lt;/font&gt; &lt;code&gt;list.__add__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; directamente de ninguna manera o forma. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De hecho, mant&amp;eacute;ngase alejado de los m&amp;eacute;todos dunder y use los operadores y las &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funciones del &lt;/font&gt;&lt;/font&gt; &lt;code&gt;operator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que fueron dise&amp;ntilde;ados. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python tiene una sem&amp;aacute;ntica cuidadosa que es m&amp;aacute;s complicada que simplemente llamar directamente al dunder. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; hay &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/53984203/4909087&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;un ejemplo&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, para resumir, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.__add__(b)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; =&amp;gt; MALO; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a + b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; =&amp;gt; BUENO.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="959a888bede3613004c44525e2bb11e95192ab07" translate="yes" xml:space="preserve">
          <source>Expected outcome:</source>
          <target state="translated">El resultado esperado:</target>
        </trans-unit>
        <trans-unit id="c9954d157471b9b4ea276dc1030744ffb933eaae" translate="yes" xml:space="preserve">
          <source>How do I concatenate two lists in Python</source>
          <target state="translated">¿Cómo concateno dos listas en Python</target>
        </trans-unit>
        <trans-unit id="c6e16b38adec97b6bd84536341ba9d13b25dbf57" translate="yes" xml:space="preserve">
          <source>How do I concatenate two lists in Python?</source>
          <target state="translated">¿Cómo concateno dos listas en Python?</target>
        </trans-unit>
        <trans-unit id="479ecf09499a2c64998aa198a5c2e1e84494f287" translate="yes" xml:space="preserve">
          <source>However, this can be done more efficiently with &lt;code&gt;itertools&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, esto se puede hacer de manera m&amp;aacute;s eficiente con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;itertools&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0dbf87e9b52e75ddcae67a6fa705f383e886bd1b" translate="yes" xml:space="preserve">
          <source>I think the best option is to use list comprehensions:</source>
          <target state="translated">Creo que la mejor opción es usar las listas de comprensión:</target>
        </trans-unit>
        <trans-unit id="fd1711615c44e00ef1fbffe5c037486e23fc9985" translate="yes" xml:space="preserve">
          <source>If an iterable (tuple, list, generator, etc.) is the input, the &lt;code&gt;from_iterable&lt;/code&gt; class method may be used:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si la entrada es un iterable (tupla, lista, generador, etc.), se &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;puede usar el m&amp;eacute;todo de clase &lt;/font&gt;&lt;/font&gt; &lt;code&gt;from_iterable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f50d1b375ae2165aeb599d9ba3006695db5b4101" translate="yes" xml:space="preserve">
          <source>If you can't use the plus operator (&lt;code&gt;+&lt;/code&gt;),  you can use the &lt;code&gt;operator&lt;/code&gt; import:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si no puede usar el operador m&amp;aacute;s ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;+&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), puede usar la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;importaci&amp;oacute;n del &lt;/font&gt;&lt;/font&gt; &lt;code&gt;operator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b7b34b22f36bb4327c919231b198a7740dcc28e3" translate="yes" xml:space="preserve">
          <source>If you don't need a &lt;code&gt;list&lt;/code&gt;, but just an iterable, omit &lt;code&gt;list()&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si no necesita una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;list&lt;/code&gt; a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , sino solo una iterable, omita la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;list()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1e734e0d8f217513b7519a6a982f0de657074db4" translate="yes" xml:space="preserve">
          <source>If you need to merge two ordered lists with complicated sorting rules, you might have to roll it yourself like in the following code (using a simple sorting rule for readability :-) ).</source>
          <target state="translated">Si necesitas fusionar dos listas ordenadas con complicadas reglas de clasificación,puede que tengas que enrollarlo tú mismo como en el siguiente código (usando una simple regla de clasificación para la legibilidad :-)).</target>
        </trans-unit>
        <trans-unit id="542a085902bf9240766d71cad4d43dde1d4a5da3" translate="yes" xml:space="preserve">
          <source>If you want to merge the two lists in sorted form, you can use the &lt;code&gt;merge&lt;/code&gt; function from the &lt;code&gt;heapq&lt;/code&gt; library.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si desea fusionar las dos listas en forma ordenada, puede usar la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;merge&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;biblioteca &lt;/font&gt;&lt;/font&gt; &lt;code&gt;heapq&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fa4486ac0375ecac47c9a2f9f0e57eabbe48bf3d" translate="yes" xml:space="preserve">
          <source>If you wanted a new list whilst keeping the two old lists:</source>
          <target state="translated">Si quisieras una nueva lista mientras mantienes las dos viejas listas:</target>
        </trans-unit>
        <trans-unit id="6dc3815661dd63125a7c2eed9a52281f70c3e6e6" translate="yes" xml:space="preserve">
          <source>In Python you can concatenate two arrays of compatible dimensions with this command</source>
          <target state="translated">En Python puedes concatenar dos matrices de dimensiones compatibles con este comando</target>
        </trans-unit>
        <trans-unit id="dbd3e7878a80ade3661fa63bf851bb0f3114871d" translate="yes" xml:space="preserve">
          <source>It has all the advantages of the newest approach of using &lt;a href=&quot;https://www.python.org/dev/peps/pep-0448/&quot;&gt;Additional Unpacking Generalizations&lt;/a&gt; - i.e. you can concatenate an arbitrary number of different iterables (for example, lists, tuples, ranges, and generators) that way - and it's not limited to Python 3.5 or later.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tiene todas las ventajas del enfoque m&amp;aacute;s nuevo de usar &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.python.org/dev/peps/pep-0448/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Generalizaciones de desempaquetado adicionales&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , es decir, puede concatenar un n&amp;uacute;mero arbitrario de iterables diferentes (por ejemplo, listas, tuplas, rangos y generadores) de esa manera, y no se limita a Python 3.5 o posterior .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7ccd71fdaef84071aef9831d91894d945e1221ee" translate="yes" xml:space="preserve">
          <source>It's also possible to create a generator that simply iterates over the items in both lists using &lt;a href=&quot;https://docs.python.org/library/itertools.html#itertools.chain&quot;&gt;&lt;code&gt;itertools.chain()&lt;/code&gt;&lt;/a&gt;. This allows you to chain lists (or any iterable) together for processing without copying the items to a new list:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n es posible crear un generador que simplemente itera sobre los elementos en ambas listas usando &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/library/itertools.html#itertools.chain&quot;&gt; &lt;code&gt;itertools.chain()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto le permite encadenar listas (o cualquier iterable) para procesarlas sin copiar los elementos a una nueva lista:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="326e9d617ecd25a070ffc103e151476d31112c70" translate="yes" xml:space="preserve">
          <source>It's worth noting that the &lt;code&gt;itertools.chain&lt;/code&gt; function accepts variable number of arguments:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vale la pena se&amp;ntilde;alar que la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;itertools.chain&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; acepta un n&amp;uacute;mero variable de argumentos:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cdf123c7037369c65f2632d1d987a33b00f31e42" translate="yes" xml:space="preserve">
          <source>Note, this also works correctly when &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;[]&lt;/code&gt; or &lt;code&gt;[[1,2,3]]&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que esto tambi&amp;eacute;n funciona correctamente cuando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[1,2,3]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a5d9a80a30f2911d5bae08783a642fb54901b96c" translate="yes" xml:space="preserve">
          <source>Or, if you want to support an arbitrary number of iterators:</source>
          <target state="translated">O,si quieres apoyar un número arbitrario de iteradores:</target>
        </trans-unit>
        <trans-unit id="00fcdda14949d42c1610edfba9ca80d41d59564f" translate="yes" xml:space="preserve">
          <source>Or:</source>
          <target state="translated">Or:</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="6c13db221b3c075581fb42743ffcfb98e217ffb7" translate="yes" xml:space="preserve">
          <source>Plots have been generated using the &lt;a href=&quot;https://github.com/nschloe/perfplot&quot;&gt;perfplot&lt;/a&gt; module. &lt;a href=&quot;https://gist.github.com/Coldsp33d/0a0e0e0eee8377489aed01358fe33a47&quot;&gt;Code, for your reference.&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las parcelas se han generado utilizando el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;oacute;dulo &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/nschloe/perfplot&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;perfplot&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://gist.github.com/Coldsp33d/0a0e0e0eee8377489aed01358fe33a47&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C&amp;oacute;digo, para su referencia.&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6c68b7a668ba36e76597cef1d8261628893dbf4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://docs.python.org/3/library/itertools.html#itertools.chain&quot;&gt;&lt;code&gt;chain&lt;/code&gt;&lt;/a&gt;
  and
  &lt;a href=&quot;https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable&quot;&gt;&lt;code&gt;chain.from_iterable&lt;/code&gt;&lt;/a&gt;
  from the docs. You will need to &lt;code&gt;import itertools&lt;/code&gt; first.
  Concatenation is linear in memory, so this is the best in terms of
  performance and version compatibility. &lt;code&gt;chain.from_iterable&lt;/code&gt; was introduced in 2.6.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ver &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/library/itertools.html#itertools.chain&quot;&gt; &lt;code&gt;chain&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable&quot;&gt; &lt;code&gt;chain.from_iterable&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de los documentos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tendr&amp;aacute; que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;import itertools&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; primero las &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;herramientas de iterto&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La concatenaci&amp;oacute;n es lineal en la memoria, por lo que es la mejor en t&amp;eacute;rminos de rendimiento y compatibilidad de versiones. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;chain.from_iterable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se introdujo en 2.6.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f9c430ad7e0baed5500c3068fc7382335126b05" translate="yes" xml:space="preserve">
          <source>So there are two easy ways.</source>
          <target state="translated">Así que hay dos maneras fáciles.</target>
        </trans-unit>
        <trans-unit id="0d615b803d881e41520964c9fbe73ed49fb4b7ff" translate="yes" xml:space="preserve">
          <source>So while addition with &lt;code&gt;+&lt;/code&gt; would raise a &lt;code&gt;TypeError&lt;/code&gt; due to type mismatch:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, si bien la adici&amp;oacute;n con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;+&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; generar&amp;iacute;a un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; debido a la falta de coincidencia de tipos:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="87b40fdd501bbca9eeed8dab7ff6ab14e4b68d68" translate="yes" xml:space="preserve">
          <source>Some answers here offer &lt;code&gt;reduce(operator.add, [a, b])&lt;/code&gt; for pairwise concatenation -- this is the same as &lt;code&gt;sum([a, b], [])&lt;/code&gt; only more wordy.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Algunas respuestas aqu&amp;iacute; ofrecen &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reduce(operator.add, [a, b])&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para la concatenaci&amp;oacute;n por pares; esto es lo mismo que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sum([a, b], [])&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; solo m&amp;aacute;s prolijo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4fb18f2a73fd36fb1256b20a6a3aa645a33b8b00" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;upside&lt;/strong&gt; to this approach is that you really don't need lists in order to perform it, anything that is iterable will do. As stated in the PEP:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ventaja&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de este enfoque es que realmente no necesita listas para realizarlo, cualquier cosa que sea iterable servir&amp;aacute;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como se indica en el PEP:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29ee0c43914a84cbf5850bfdecd1018f4252ab2e" translate="yes" xml:space="preserve">
          <source>The PEP, titled &lt;strong&gt;&lt;em&gt;Additional Unpacking Generalizations&lt;/em&gt;&lt;/strong&gt;, generally reduced some syntactic restrictions when using the starred &lt;code&gt;*&lt;/code&gt; expression in Python; with it, joining two lists (applies to any iterable) can now also be done with:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El PEP, titulado &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Generalizaciones de desempaquetado adicionales&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , generalmente redujo algunas restricciones sint&amp;aacute;cticas al usar la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;expresi&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;*&lt;/code&gt; con&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; estrella &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en Python; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;con &amp;eacute;l, ahora tambi&amp;eacute;n se puede unir dos listas (se aplica a cualquier iterable) con:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="58e4df2685380bf9649b893a4dd7e0621f339dda" translate="yes" xml:space="preserve">
          <source>The above code, does not preserve order, removes duplicate from each list (but not from the concatenated list)</source>
          <target state="translated">El código anterior,no preserva el orden,elimina los duplicados de cada lista (pero no de la lista concatenada)</target>
        </trans-unit>
        <trans-unit id="bd1b833c43d1e56d7c42cb4518394b596baccd85" translate="yes" xml:space="preserve">
          <source>The following won't:</source>
          <target state="translated">Los siguientes no lo harán:</target>
        </trans-unit>
        <trans-unit id="6a7fa471f07ba07f9c337422f202a854c43615b3" translate="yes" xml:space="preserve">
          <source>The main points to understand here are that lists are just a special case of iterable, which are objects like any other; and that &lt;code&gt;for ... in&lt;/code&gt; loops in python can work with tuple variables, so it is simple to loop on multiple variables at the same time.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los puntos principales a entender aqu&amp;iacute; son que las listas son solo un caso especial de iterable, que son objetos como cualquier otro; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;y eso &lt;/font&gt;&lt;/font&gt; &lt;code&gt;for ... in&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; bucles en python puede funcionar con variables de tupla, por lo que es simple recorrer m&amp;uacute;ltiples variables al mismo tiempo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ae62b519705b165b3ac65a5ad4a8899aba240c14" translate="yes" xml:space="preserve">
          <source>There are multiple ways to concatenete lists in python.</source>
          <target state="translated">Hay múltiples maneras de concatenar listas en pitón.</target>
        </trans-unit>
        <trans-unit id="7a1c082b60b661824dc8f8c247956b56de3addbe" translate="yes" xml:space="preserve">
          <source>This functionality &lt;em&gt;was defined for Python &lt;code&gt;3.5&lt;/code&gt;&lt;/em&gt; it hasn't been backported to previous versions in the &lt;code&gt;3.x&lt;/code&gt; family. In unsupported versions a &lt;code&gt;SyntaxError&lt;/code&gt; is going to be raised.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta funcionalidad &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se defini&amp;oacute; para Python &lt;/font&gt;&lt;/font&gt; &lt;code&gt;3.5&lt;/code&gt; &lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , no se ha respaldado a versiones anteriores en la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;familia &lt;/font&gt;&lt;/font&gt; &lt;code&gt;3.x&lt;/code&gt; .&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En versiones no compatibles, se &lt;/font&gt;&lt;/font&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SyntaxError&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5a22117063d975d97df2c7ada073fff316224dfc" translate="yes" xml:space="preserve">
          <source>This is a slick solution because of its succinctness. But &lt;code&gt;sum&lt;/code&gt; performs concatenation in a pairwise fashion, which means this is a
  quadratic operation as memory has to be allocated for each step. DO
  NOT USE if your lists are large.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta es una soluci&amp;oacute;n resbaladiza debido a su brevedad. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sum&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; realiza la concatenaci&amp;oacute;n en forma de pares, lo que significa que esta es una operaci&amp;oacute;n cuadr&amp;aacute;tica ya que la memoria debe asignarse para cada paso. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NO LO USE si sus listas son grandes.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e9d17ea02c270f5e5de2e94e872aec7ec91ece8" translate="yes" xml:space="preserve">
          <source>This is also useful as a more readable way of summing iterables into a
  list, such as &lt;code&gt;my_list + list(my_tuple) + list(my_range)&lt;/code&gt; which is now
  equivalent to just &lt;code&gt;[*my_list, *my_tuple, *my_range]&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto tambi&amp;eacute;n es &amp;uacute;til como una forma m&amp;aacute;s legible de sumar iterables en una lista, como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;my_list + list(my_tuple) + list(my_range)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que ahora es equivalente a solo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[*my_list, *my_tuple, *my_range]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="162427ce28290eb3e8323a7e7b40c360b0ed4bbf" translate="yes" xml:space="preserve">
          <source>This is quite simple, and I think it was even shown in &lt;a href=&quot;http://docs.python.org/tutorial/&quot;&gt;the tutorial&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto es bastante simple, y creo que incluso se mostr&amp;oacute; en &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/tutorial/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;el tutorial&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a58f18a95772d572738f6632b8d69645ef55fced" translate="yes" xml:space="preserve">
          <source>This method uses &lt;a href=&quot;https://www.python.org/dev/peps/pep-0448/&quot;&gt;Additional Unpacking Generalizations (PEP 448)&lt;/a&gt;, but cannot
  generalize to N lists unless you manually unpack each one yourself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Este m&amp;eacute;todo utiliza &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.python.org/dev/peps/pep-0448/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Generalizaciones de&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; desempaquetado &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;adicionales (PEP 448)&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero no puede generalizar a N listas a menos que desembale manualmente cada una.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="87e6a672f4dc01200853a4a519e93f5f54cb8859" translate="yes" xml:space="preserve">
          <source>This question directly asks about joining two lists. However it's pretty high in search even when you are looking for a way of joining many lists (including the case when you joining zero lists).</source>
          <target state="translated">Esta pregunta se refiere directamente a la unión de dos listas.Sin embargo,es bastante alta en la búsqueda,incluso cuando se busca una manera de unirse a muchas listas (incluyendo el caso de unirse a listas de cero).</target>
        </trans-unit>
        <trans-unit id="e460911fdbc6e2cc4b3ec8fe826bd1644eb57278" translate="yes" xml:space="preserve">
          <source>Thus we see that out of two of most popular methods, &lt;code&gt;extend&lt;/code&gt; is efficient.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo tanto, vemos que de dos de los m&amp;eacute;todos m&amp;aacute;s populares, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extend&lt;/code&gt; er&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es eficiente.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e18346fc80a5cb9a96e5d2d20ae0a95cf449485f" translate="yes" xml:space="preserve">
          <source>Use a simple list comprehension:</source>
          <target state="translated">Use una simple comprensión de la lista:</target>
        </trans-unit>
        <trans-unit id="d713ca8d870cdfeb112abd654479d42242f3e918" translate="yes" xml:space="preserve">
          <source>Will output:</source>
          <target state="translated">Saldrá:</target>
        </trans-unit>
        <trans-unit id="eeb633b129106de5ffd83074bf674dd64894c0c8" translate="yes" xml:space="preserve">
          <source>With Python 3.3+ you can use &lt;a href=&quot;https://docs.python.org/3/whatsnew/3.3.html#pep-380&quot;&gt;yield from&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Con Python 3.3+ puedes usar el &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/whatsnew/3.3.html#pep-380&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;rendimiento de&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65608d57191f0bf7507a5f73439db1a8cf274c09" translate="yes" xml:space="preserve">
          <source>You can create generators as well:</source>
          <target state="translated">También puedes crear generadores:</target>
        </trans-unit>
        <trans-unit id="40ae1ac00fb60cbce139db9afa81afd3900d7547" translate="yes" xml:space="preserve">
          <source>You can use sets to obtain merged list of unique values</source>
          <target state="translated">Se pueden utilizar conjuntos para obtener una lista fusionada de valores únicos</target>
        </trans-unit>
        <trans-unit id="3b56a519ff8ad55d053ec7a441faa2e32f799d99" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;+&lt;/code&gt; operator to combine them:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede usar el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador &lt;/font&gt;&lt;/font&gt; &lt;code&gt;+&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para combinarlos:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67af00d68f562e2ef748726af3c3b179fb162cba" translate="yes" xml:space="preserve">
          <source>You could also use &lt;a href=&quot;https://docs.python.org/2.7/tutorial/datastructures.html#more-on-lists&quot;&gt;&lt;code&gt;extend&lt;/code&gt;&lt;/a&gt; in order to add a &lt;code&gt;list&lt;/code&gt; to the end of another one:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n puede usar &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2.7/tutorial/datastructures.html#more-on-lists&quot;&gt; &lt;code&gt;extend&lt;/code&gt; er&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para agregar una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;list&lt;/code&gt; a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; al final de otra:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e9c29555b7f6a5405882804f841c24cc7e091695" translate="yes" xml:space="preserve">
          <source>You could simply use the &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;+=&lt;/code&gt; operator as follows:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Simplemente puede usar el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador &lt;/font&gt;&lt;/font&gt; &lt;code&gt;+&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;+=&lt;/code&gt; de la&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; siguiente manera:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6cabeef5eff9234f33f4525bb384d4a685ba1df0" translate="yes" xml:space="preserve">
          <source>You could use the &lt;code&gt;append()&lt;/code&gt; method defined on &lt;code&gt;list&lt;/code&gt; objects:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede usar el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;append()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; definido en los &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos de la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;list&lt;/code&gt; a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="383beb77d50bc632aeb315ed0f75c9e1cbc18bee" translate="yes" xml:space="preserve">
          <source>because it will first unpack the contents of the iterables and then simply create a &lt;code&gt;list&lt;/code&gt; from the contents.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;porque primero desempaquetar&amp;aacute; el contenido de los iterables y luego simplemente crear&amp;aacute; una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;list&lt;/code&gt; a a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; partir de los contenidos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dbcb6a0b5e7038d6ef0b99dac67f92e80028b17f" translate="yes" xml:space="preserve">
          <source>which gives us</source>
          <target state="translated">que nos da</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
