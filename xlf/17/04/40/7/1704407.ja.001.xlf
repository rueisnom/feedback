<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/1704407">
    <body>
      <group id="1704407">
        <trans-unit id="4c06f197535f845de8e951a4af288d9adfb825e1" translate="yes" xml:space="preserve">
          <source>&amp;mdash; that is, the DBJ object can't be changed via p.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;mdash;つまり、DBJオブジェクトはpを介して変更できません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6cace867261b8005f8fc0621c9d44931647deff7" translate="yes" xml:space="preserve">
          <source>&amp;mdash; that is, you can change the DBJ object via p, but you can't change the pointer p itself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、pを介してDBJオブジェクトを変更できますが、ポインタp自体を変更することはできません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3d7e02271cc5726b695c32a0104eea96c15697d6" translate="yes" xml:space="preserve">
          <source>&amp;mdash; that is, you can't change the pointer p itself, nor can you change the DBJ object via p.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、ポインタp自体を変更することも、pを介してDBJオブジェクトを変更することもできません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="76e5aa633bfd014bc6bd793ba9d5c061438c942a" translate="yes" xml:space="preserve">
          <source>(Assumption is you are using C++ compiler, of course ?)</source>
          <target state="translated">(もちろんC++コンパイラを使っていることが前提ですが)</target>
        </trans-unit>
        <trans-unit id="2bf0eb94e42758ec8fbd572b831d446f35796f94" translate="yes" xml:space="preserve">
          <source>--DBJ</source>
          <target state="translated">--DBJ</target>
        </trans-unit>
        <trans-unit id="6f4f9823718a35a3ce0df5bf6d6359ac144110be" translate="yes" xml:space="preserve">
          <source>5 In translation phase 7, a byte or code of value zero is appended to each multibyte
  character sequence that results from a string literal or literals. The multibyte character
  sequence is then used to initialize an array of static storage duration and length just
  sufficient to contain the sequence. For character string literals, the array elements have
  type char, and are initialized with the individual bytes of the multibyte character
  sequence [...]</source>
          <target state="translated">5 翻訳フェーズ7では、文字列リテラルまたはリテラルから得られる各マルチバイト文字列に、値ゼロのバイトまたはコードが付加されます。次に、マルチバイト文字列は、その配列を格納するのに十分な長さと持続時間を持つ配列を初期化するために使用されます。文字列リテラルの場合、配列要素はchar型を持ち、マルチバイト文字列の個々のバイトで初期化されます。</target>
        </trans-unit>
        <trans-unit id="cd7322bb185146ef549f5a00c1243d9e4faecc12" translate="yes" xml:space="preserve">
          <source>6 It is unspecified whether these arrays are distinct provided their elements have the
  appropriate values. If the program attempts to modify such an array, the behavior is
  undefined.</source>
          <target state="translated">6 これらの配列が,その要素が適切な値を持っていれば別個の配列であるかどうかは不定です.プログラムがこのような配列を変更しようとした場合の動作は未定義です。</target>
        </trans-unit>
        <trans-unit id="fac3ed3a23c3121f9d9408f6549bff597dc35ee0" translate="yes" xml:space="preserve">
          <source>6.7.8/32 &quot;Initialization&quot; gives a direct example:</source>
          <target state="translated">6.7.832 「初期化」は直接の例を示しています。</target>
        </trans-unit>
        <trans-unit id="8d896f283ef65b6d8a150878a4ee09e288b16424" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s0&lt;/code&gt; and &lt;code&gt;s1&lt;/code&gt; are interchangeable in most contexts; here are the exceptions:</source>
          <target state="translated">&lt;code&gt;s0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;s1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はほとんどのコンテキストで交換可能です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここに例外があります：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="989caef3a70ec06f60e066ab0e2e395d4de66975" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C99 N1256 draft&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C99 N1256ドラフト&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b7c1aaf324c090633cc6b151399499e5ec81a78b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GCC 4.8 x86-64 ELF implementation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;GCC 4.8 x86-64 ELF実装&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="07f57e15a56c7c66864c7b7e2f58465494aa6409" translate="yes" xml:space="preserve">
          <source>A string literal is used to create these character blocks somewhere in the memory which this pointer &lt;code&gt;s&lt;/code&gt; is pointing to. We can here reassign the object it is pointing to by changing that, but as long as it points to a string literal the block of characters to which it points can't be changed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列リテラルは、このポインター&lt;/font&gt;&lt;/font&gt; &lt;code&gt;s&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が指して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いるメモリのどこかにこれらの文字ブロックを作成するために使用されます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで、オブジェクトを変更することで、それが指しているオブジェクトを再割り当てできますが、それが文字列リテラルを指している限り、それが指している文字のブロックは変更できません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cbd97cb6ba42b992540a09774cb2c6478490196a" translate="yes" xml:space="preserve">
          <source>An array of character type may be initialized by a character string literal, optionally
  enclosed in braces. Successive characters of the character string literal (including the
  terminating null character if there is room or if the array is of unknown size) initialize the
  elements of the array.</source>
          <target state="translated">文字型の配列は、中括弧で囲まれた文字列リテラルで初期化することができます。文字列リテラルの連続した文字(余裕がある場合や配列のサイズが不明な場合は終了するヌル文字を含む)が配列の要素を初期化します。</target>
        </trans-unit>
        <trans-unit id="f29a859de34d8206276e4fbe86c78577ef463680" translate="yes" xml:space="preserve">
          <source>And:</source>
          <target state="translated">And:</target>
        </trans-unit>
        <trans-unit id="0f4ef970f160bc7dbbaa49a698a428bde26253b6" translate="yes" xml:space="preserve">
          <source>As an addition, consider that, as for read-only purposes the use of both is identical, you can access a char by indexing either with &lt;code&gt;[]&lt;/code&gt; or &lt;code&gt;*(&amp;lt;var&amp;gt; + &amp;lt;index&amp;gt;)&lt;/code&gt;
format:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さらに、読み取り専用の目的では両方の使用が同じであるため、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;*(&amp;lt;var&amp;gt; + &amp;lt;index&amp;gt;)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 形式の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いずれかでインデックスを作成することにより、charにアクセスできることを考慮してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba418f779211dc16118c995bc268bb892861f9d3" translate="yes" xml:space="preserve">
          <source>As mentioned above, for an array &lt;code&gt;'\0'&lt;/code&gt; will be allocated as the final element.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記のように、配列&lt;/font&gt;&lt;/font&gt; &lt;code&gt;'\0'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「\ 0」&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が最後の要素として割り当てられます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8646ef6ae439093b3a509c848a73e94716034cd4" translate="yes" xml:space="preserve">
          <source>Compile and decompile:</source>
          <target state="translated">コンパイルして逆コンパイルします。</target>
        </trans-unit>
        <trans-unit id="88ec39701a0c4df5266196b2dee36c3fa2c11fef" translate="yes" xml:space="preserve">
          <source>Conclusion: GCC stores &lt;code&gt;char*&lt;/code&gt; it in &lt;code&gt;.rodata&lt;/code&gt; section, not in &lt;code&gt;.text&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;結論：GCCは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;char*&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; it &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt; &lt;code&gt;.text&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;ではなく&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.rodata&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;セクションに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;格納&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;し&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="44ea0910f7b1b1bf4bc9f8f9067836950c34f470" translate="yes" xml:space="preserve">
          <source>Creates &lt;em&gt;one&lt;/em&gt; object - a &lt;code&gt;char&lt;/code&gt; array of size 6, called &lt;code&gt;s&lt;/code&gt;, initialised with the values &lt;code&gt;'h', 'e', 'l', 'l', 'o', '\0'&lt;/code&gt;.  Where this array is allocated in memory, and how long it lives for, depends on where the declaration appears.  If the declaration is within a function, it will live until the end of the block that it is declared in, and almost certainly be allocated on the stack; if it's outside a function, it will &lt;em&gt;probably&lt;/em&gt; be stored within an &quot;initialised data segment&quot; that is loaded from the executable file into writeable memory when the program is run.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1つの&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作成します&lt;/font&gt; &lt;code&gt;s&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼ばれるサイズ6の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;char&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、値&lt;/font&gt; &lt;code&gt;'h', 'e', 'l', 'l', 'o', '\0'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;で初期化されます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この配列がメモリ内で割り当てられる場所、およびその配列の存続期間は、宣言が表示される場所によって異なります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;宣言が関数内にある場合、宣言されたブロックの終わりまで存続し、ほぼ確実にスタックに割り当てられます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それは関数の外だ場合、それがされます&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;おそらく&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、プログラムの実行時に書き込み可能なメモリに実行ファイルからロードされた「初期化データセグメント」内に格納します。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de276ab771c3621e7894bf1c2c958c9a70bf84db" translate="yes" xml:space="preserve">
          <source>Creates &lt;em&gt;two&lt;/em&gt; objects:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2つの&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作成し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64ca5ab0ff194c61c227c75f16866d610381468c" translate="yes" xml:space="preserve">
          <source>EXAMPLE 8: The declaration</source>
          <target state="translated">EXAMPLE 8.宣言</target>
        </trans-unit>
        <trans-unit id="b49f26538d1a0c9d00371595f47f04f2343158a4" translate="yes" xml:space="preserve">
          <source>Enough melodrama, here is what one can achieve when adorning pointers with &quot;const&quot;.
(Note: One has to read pointer declarations right-to-left.)
Here are the 3 different ways to protect yourself when playing with pointers :</source>
          <target state="translated">メロドラマはもういい、ここではポインタを &quot;const &quot;で飾るときに何ができるかを説明します。(注意:ポインタ宣言を右から左に読まなければなりません。)ポインタを使って遊ぶときに自分自身を守るための3つの方法を紹介します。</target>
        </trans-unit>
        <trans-unit id="3b35a62bda88de385c42aaf857d1210eaf12a76e" translate="yes" xml:space="preserve">
          <source>Everywhere else: it generates an:</source>
          <target state="translated">他の場所:それは生成されます。</target>
        </trans-unit>
        <trans-unit id="b8852e8d729b944c29bf89e536dbaa3aa1697670" translate="yes" xml:space="preserve">
          <source>First off, in function arguments, they are exactly equivalent:</source>
          <target state="translated">まず、関数の引数では、両者は全く同じです。</target>
        </trans-unit>
        <trans-unit id="98cd6a2aa95aa1f324ccb59f694660ae77115b49" translate="yes" xml:space="preserve">
          <source>For more details, please go through the similar question:</source>
          <target state="translated">詳しくは似たような質問をスルーしてください。</target>
        </trans-unit>
        <trans-unit id="58b1d45df7f8d2a23270dc794f6e580aa8fa4bbf" translate="yes" xml:space="preserve">
          <source>Given the declarations</source>
          <target state="translated">宣言を考えると</target>
        </trans-unit>
        <trans-unit id="0cff31b7624ef0770d2b53ebd59adf0457111768" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;s&lt;/code&gt; is an array of characters, which can be overwritten if we wish.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;s&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は文字の配列であり、必要に応じて上書きできます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e4a74d7c2b64d7e553896ae694bd2e41e0a154b" translate="yes" xml:space="preserve">
          <source>However the array only lives as long as its contaning scope, so if you do this in a function, don't return or leak a pointer to this array - make a copy instead with &lt;code&gt;strdup()&lt;/code&gt; or similar. If the array is allocated in global scope, of course, no problem.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、配列はそのスコープの範囲内でのみ存続するため、これを関数で実行する場合は、この配列へのポインターを返したりリークしたりしないでください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代わりに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;strdup()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コピーを作成して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もちろん、配列がグローバルスコープで割り当てられていれば問題ありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fcf9bd7f6f632d83d63a2a6cecbb14e0e50ea42e" translate="yes" xml:space="preserve">
          <source>If we do the same for &lt;code&gt;char[]&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同じことを&lt;/font&gt;&lt;/font&gt; &lt;code&gt;char[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に対して行う場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3868e5d3f8360da6aec691b06cd1160776b4d76d" translate="yes" xml:space="preserve">
          <source>In C, one can use a string literal in a declaration like this:</source>
          <target state="translated">C言語では、このような宣言で文字列リテラルを使うことができます。</target>
        </trans-unit>
        <trans-unit id="7c78de80795861d0161ced8b462a47bcb8b195d0" translate="yes" xml:space="preserve">
          <source>In other contexts, &lt;code&gt;char *&lt;/code&gt; allocates a pointer, while &lt;code&gt;char []&lt;/code&gt; allocates an array. Where does the string go in the former case, you ask? The compiler secretly allocates a static anonymous array to hold the string literal. So:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他のコンテキストでは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;char *&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はポインタを割り当て、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;char []&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は配列を割り当てます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;前者の場合、文字列はどこに行くのですか？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンパイラは、文字列リテラルを保持するために静的匿名配列を密かに割り当てます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そう：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="91aee306e0db067a91d992a548f5fa66a86b83c9" translate="yes" xml:space="preserve">
          <source>In the case of:</source>
          <target state="translated">の場合。</target>
        </trans-unit>
        <trans-unit id="69e2fe74ae96ffca314557e030bc812da7ecb496" translate="yes" xml:space="preserve">
          <source>In the light of comments here it should be obvious that : char * s = &quot;hello&quot; ;
Is a bad idea, and should be used in very narrow scope.</source>
          <target state="translated">ここでのコメントの光の中で、それは明らかであるべきである:char*s=&quot;hello&quot;;悪い考えであり、非常に狭い範囲で使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="10fd75efad3719fe3bb4eb8209929e181c321d6b" translate="yes" xml:space="preserve">
          <source>Initialize &lt;code&gt;char[]&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;char[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;初期化し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de6b4c46a6f5f2fb24f2220df0e12ff5f0be28bf" translate="yes" xml:space="preserve">
          <source>Just to add: you also get different values for their sizes.</source>
          <target state="translated">追加すると、サイズの異なる値を取得することもできます。</target>
        </trans-unit>
        <trans-unit id="71621f4c0ca35b4b447632316c08b9f646620f62" translate="yes" xml:space="preserve">
          <source>Like any other regular array, &lt;code&gt;c&lt;/code&gt; can be modified.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他の通常の配列と同様に、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は変更できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3febe76dc46b0930a1af4c3b3a0b1070c58e677d" translate="yes" xml:space="preserve">
          <source>Note however that the default linker script puts &lt;code&gt;.rodata&lt;/code&gt; and &lt;code&gt;.text&lt;/code&gt; in the same &lt;a href=&quot;https://stackoverflow.com/questions/14361248/whats-the-difference-of-section-and-segment-in-elf-file-format/38117710#38117710&quot;&gt;segment&lt;/a&gt;, which has execute but no write permission. This can be observed with:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、デフォルトのリンカースクリプトは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.rodata&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.text&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を同じ&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/14361248/whats-the-difference-of-section-and-segment-in-elf-file-format/38117710#38117710&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;セグメント&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配置することに注意してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。これは実行はできますが、書き込み権限はありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは次のようにして観察できます：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7903f746d64cdddc76ea59f3f10e9d48fce6545b" translate="yes" xml:space="preserve">
          <source>Note that you must not ever attempt to modify the contents of this anonymous array via this pointer; the effects are undefined (often meaning a crash):</source>
          <target state="translated">このポインタを使ってこの匿名配列の内容を変更しようとしてはいけないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="f4e329055872d3c12f2cc484b260a44f643d9971" translate="yes" xml:space="preserve">
          <source>Note the implicit cast from &lt;code&gt;char[]&lt;/code&gt; to &lt;code&gt;char *&lt;/code&gt;, which is always legal.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;char[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から&lt;/font&gt;&lt;/font&gt; &lt;code&gt;char *&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;へ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の暗黙のキャストに注意してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。これは常に有効です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f31bdfa738e8e02cfa2084c5d2c212f0d3931a2d" translate="yes" xml:space="preserve">
          <source>Obviously, if you attempt to do</source>
          <target state="translated">明らかに</target>
        </trans-unit>
        <trans-unit id="6da11f85e0ba08ebe59eb3c68ddfa15550bdb668" translate="yes" xml:space="preserve">
          <source>On the other hand, this declaration:</source>
          <target state="translated">一方で、この宣言。</target>
        </trans-unit>
        <trans-unit id="86546a25fe2d8c85ef2156d6bfee43929dbe1777" translate="yes" xml:space="preserve">
          <source>Output contains:</source>
          <target state="translated">出力が含まれています。</target>
        </trans-unit>
        <trans-unit id="79e5360bcf55c6212f0b1414e9099c15ef47ee22" translate="yes" xml:space="preserve">
          <source>Program:</source>
          <target state="translated">Program:</target>
        </trans-unit>
        <trans-unit id="1332c2aeb09d0c1817fe85b41907f9631446a288" translate="yes" xml:space="preserve">
          <source>So this is just a shortcut for:</source>
          <target state="translated">ということで、これはただの近道です。</target>
        </trans-unit>
        <trans-unit id="8668c2d74677de13318edd0e99679ab1849a11b0" translate="yes" xml:space="preserve">
          <source>So what is the difference? I want to know what actually happens in terms of storage duration, both at compile and run time.</source>
          <target state="translated">では、何が違うのでしょうか?私は、コンパイル時と実行時の両方で、ストレージの持続時間の点で実際に何が起こるのかを知りたいのです。</target>
        </trans-unit>
        <trans-unit id="b5698d0895816d08e306d72f3fb561310cfca67f" translate="yes" xml:space="preserve">
          <source>So when you write:</source>
          <target state="translated">だから、書くときは</target>
        </trans-unit>
        <trans-unit id="d2d585b4155e73366c54a363a927d03ca0333476" translate="yes" xml:space="preserve">
          <source>The above sets str to point to the literal value &quot;Hello&quot; which is hard-coded in the program's binary image, which is flagged as read-only in memory, means any change in this String literal is illegal and that would throw segmentation faults.</source>
          <target state="translated">上記では、プログラムのバイナリイメージにハードコードされたリテラル値 &quot;Hello&quot; を指すように str を設定していますが、これはメモリ上で読み取り専用としてフラグが立てられているため、この String リテラルの変更は不正であり、セグメンテーションフォールトが発生します。</target>
        </trans-unit>
        <trans-unit id="af5b4181887adb17c079d2ba90c26ce6b8194e5b" translate="yes" xml:space="preserve">
          <source>The contents of the arrays are modifiable. On the other hand, the declaration</source>
          <target state="translated">配列の内容は変更可能です。一方で、宣言</target>
        </trans-unit>
        <trans-unit id="eafb897c5874cb3b3d65e56a726f16304e827455" translate="yes" xml:space="preserve">
          <source>The difference here is that</source>
          <target state="translated">ここでの違いは</target>
        </trans-unit>
        <trans-unit id="820a63b5cf59a73478d199c383559bed5a5ea90d" translate="yes" xml:space="preserve">
          <source>The errors related to attempted const-ant mutations are caught at compile time. There is no runtime space or speed penalty for const.</source>
          <target state="translated">const-antの突然変異の試みに関連するエラーはコンパイル時に捕捉されます。constの実行時のスペースや速度のペナルティはありません。</target>
        </trans-unit>
        <trans-unit id="aadca0f8a80a4a50095ad4e6b56ce361c1429e29" translate="yes" xml:space="preserve">
          <source>The line</source>
          <target state="translated">ライン</target>
        </trans-unit>
        <trans-unit id="4617df20e0ca41d66b81afabf923b84cb6057a62" translate="yes" xml:space="preserve">
          <source>The string literal &lt;code&gt;&quot;hello world&quot;&lt;/code&gt; is a 12-element array of &lt;code&gt;char&lt;/code&gt; (&lt;code&gt;const char&lt;/code&gt; in C++) with static storage duration, meaning that the memory for it is allocated when the program starts up and remains allocated until the program terminates.  Attempting to modify the contents of a string literal invokes undefined behavior.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列リテラル&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;hello world&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;静的ストレージ期間を持つ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;char&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 12要素配列&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C ++では&lt;/font&gt;&lt;/font&gt; &lt;code&gt;const char&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）です。つまり、そのメモリはプログラムの起動時に割り当てられ、プログラムが終了するまで割り当てられたままになります。文字列リテラルの内容を変更しようとすると、未定義の動作が発生します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b18772339cc0040dd0a7449751647c2da3630170" translate="yes" xml:space="preserve">
          <source>The unnamed read-only array is typically located in the &quot;text&quot; segment of the program, which means it is loaded from disk into read-only memory, along with the code itself.  The location of the &lt;code&gt;s&lt;/code&gt; pointer variable in memory depends on where the declaration appears (just like in the first example).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名前のない読み取り専用配列は通常、プログラムの「テキスト」セグメントにあります。これは、コード自体とともにディスクから読み取り専用メモリに読み込まれることを意味します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メモリ内&lt;/font&gt;&lt;/font&gt; &lt;code&gt;s&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ポインタ変数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の場所は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;宣言がどこにあるかによって異なります（最初の例と同様）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="51a8d743261763d0c5ba6a3d8400bee365d6b7e1" translate="yes" xml:space="preserve">
          <source>Then if you modify &lt;code&gt;c[0]&lt;/code&gt;, you also modify &lt;code&gt;__unnamed&lt;/code&gt;, which is UB.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;c[0]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変更する&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__unnamed&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、UBである&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;__unnamed&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も変更されます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="04c2442ba0cb356bca376365107aaf0cde3ee082" translate="yes" xml:space="preserve">
          <source>There are two different uses of character string literals:</source>
          <target state="translated">文字列リテラルには2つの異なる用途があります。</target>
        </trans-unit>
        <trans-unit id="8e34f037d3b8729159339c78ec31107ef278d97a" translate="yes" xml:space="preserve">
          <source>This declaration is identical to</source>
          <target state="translated">この宣言は</target>
        </trans-unit>
        <trans-unit id="ac756e47d78d7b840b8404b5954318def0889344" translate="yes" xml:space="preserve">
          <source>This declaration:</source>
          <target state="translated">この宣言。</target>
        </trans-unit>
        <trans-unit id="f06c9be022ff454489265524b61c1f9972fefa06" translate="yes" xml:space="preserve">
          <source>This is &quot;more magic&quot;, and described at 6.7.8/14 &quot;Initialization&quot;:</source>
          <target state="translated">これは「より多くの魔法」であり、6.7.814「初期化」に記載されています。</target>
        </trans-unit>
        <trans-unit id="33114f84c8b259a7d360bf056480d7a655a4fe82" translate="yes" xml:space="preserve">
          <source>This is documented at 6.4.5 &quot;String literals&quot;:</source>
          <target state="translated">これは6.4.5「文字列リテラル」で説明されています。</target>
        </trans-unit>
        <trans-unit id="21b0b9815b988cab4a0b05332115eaf25e71b859" translate="yes" xml:space="preserve">
          <source>This is similar to:</source>
          <target state="translated">と似ています。</target>
        </trans-unit>
        <trans-unit id="eb8be68a5f711bdd01ca34fa11ff42c4427ca406" translate="yes" xml:space="preserve">
          <source>This might be a good opportunity to point out that &quot;const correctness&quot; is a &quot;good thing&quot;. Whenever and wherever You can, use the &quot;const&quot; keyword to protect your code, from &quot;relaxed&quot; callers or programmers, which are usually most &quot;relaxed&quot; when pointers come into play.</source>
          <target state="translated">これは、「constの正しさ」が「良いこと」であることを指摘する良い機会かもしれません。いつでも、どこでも、&quot;const&quot; キーワードを使って、ポインタが登場したときに、通常は最も &quot;リラックスした &quot;呼び出し元やプログラマからコードを保護してください。</target>
        </trans-unit>
        <trans-unit id="ba21e22c4214f52ef8c5497e964d026d2eaf3e07" translate="yes" xml:space="preserve">
          <source>Using the array syntax directly allocates it into new memory. Thus modification is safe:</source>
          <target state="translated">配列構文を使用すると、新しいメモリに直接割り当てられます。したがって、変更は安全です。</target>
        </trans-unit>
        <trans-unit id="94f1e48d106f36584418335d943751063fb82ea5" translate="yes" xml:space="preserve">
          <source>What is the difference between char s[] and char *s</source>
          <target state="translated">char s[]とchar *sの違いは何ですか?</target>
        </trans-unit>
        <trans-unit id="a64c3692202ee1627e05b1805bec013537327582" translate="yes" xml:space="preserve">
          <source>While doing:</source>
          <target state="translated">やっている間に。</target>
        </trans-unit>
        <trans-unit id="027283df8fa127f36c097b4ed1939f7fa3359405" translate="yes" xml:space="preserve">
          <source>Why do I get a segmentation fault when writing to a string initialized with &quot;char *s&quot; but not &quot;char s[]&quot;?</source>
          <target state="translated">char *s &quot;で初期化された文字列に書き込んでも、&quot;char s[]&quot;ではなく &quot;char *s &quot;で初期化された文字列に書き込んでも、セグメンテーションエラーが発生するのはなぜですか?</target>
        </trans-unit>
        <trans-unit id="d9bc24bfca9d3310fc35b3fb5bbe3f0b6e952532" translate="yes" xml:space="preserve">
          <source>You can reassign the variable &lt;code&gt;s0&lt;/code&gt; to point to a different string literal or to another variable.  You cannot reassign the variable &lt;code&gt;s1&lt;/code&gt; to point to a different array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;s0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;再割り当てし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て、別の文字列リテラルまたは別の変数を指す&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことができ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;s1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を別の配列を指すように&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;再割り当てすることはできません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="779e6e4d9f015d128ee78a71daf817074109dab9" translate="yes" xml:space="preserve">
          <source>You will probably get a Segmentation Fault, as you are trying to access read-only memory.</source>
          <target state="translated">読み取り専用メモリにアクセスしようとしているので、おそらくセグメンテーション・フォルトが発生するでしょう。</target>
        </trans-unit>
        <trans-unit id="b27ddef4e21a7318833287143b16d88e42574eb4" translate="yes" xml:space="preserve">
          <source>a &lt;strong&gt;read-only&lt;/strong&gt; array of 6 &lt;code&gt;char&lt;/code&gt;s containing the values &lt;code&gt;'h', 'e', 'l', 'l', 'o', '\0'&lt;/code&gt;, which has no name and has &lt;em&gt;static storage duration&lt;/em&gt; (meaning that it lives for the entire life of the program); and</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;読み取り専用&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 6の配列&lt;/font&gt;&lt;/font&gt; &lt;code&gt;char&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の値を含む&lt;/font&gt;&lt;/font&gt; &lt;code&gt;'h', 'e', 'l', 'l', 'o', '\0'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名前がないとされ、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;静的記憶期間は&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（それことを意味しますプログラムの全期間中生きます）; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そして&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d74edc97917f9b8bc9f02225b7a3068a75325068" translate="yes" xml:space="preserve">
          <source>a variable of type pointer-to-char, called &lt;code&gt;s&lt;/code&gt;, which is initialised with the location of the first character in that unnamed, read-only array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名前のない読み取り専用配列の最初の文字の位置で初期化さ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れる、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;s&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼ばれるタイプポインターへの変数の変数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="938eeebcc6d366c0b191b2f834fbc620432d9112" translate="yes" xml:space="preserve">
          <source>array of char &lt;a href=&quot;https://stackoverflow.com/questions/2245664/what-is-the-type-of-string-literals-in-c-c&quot;&gt;What is the type of string literals in C and C++?&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;charの配列&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2245664/what-is-the-type-of-string-literals-in-c-c&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CおよびC ++の文字列リテラルのタイプは何ですか？&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e38378fb262f6ac47c79fe636ef1edbfbf3167a5" translate="yes" xml:space="preserve">
          <source>assume the following hypothetical memory map:</source>
          <target state="translated">以下のような仮想記憶マップを想定します。</target>
        </trans-unit>
        <trans-unit id="b3213a8bc18779d0b2b8c0252c1df80a0443119c" translate="yes" xml:space="preserve">
          <source>copies the string to newly allocated memory on the stack. Thus making any change in it is allowed and legal.</source>
          <target state="translated">は文字列をスタック上の新たに確保されたメモリにコピーします。このように、文字列に変更を加えることは許可されており、合法です。</target>
        </trans-unit>
        <trans-unit id="a6c80db10bcf2e627c4f009a571dd75a73161a4a" translate="yes" xml:space="preserve">
          <source>declares &lt;code&gt;s&lt;/code&gt; to be a pointer to one or more (in this case more) &lt;code&gt;char&lt;/code&gt;s and points it directly at a fixed (read-only) location containing the literal &lt;code&gt;&quot;hello&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;s&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を1つまたは複数（この場合は複数）の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;char&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;へのポインタとして&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;宣言し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、リテラル&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;hello&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を含む固定（読み取り専用）の場所を直接指し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="80cee7a323663e4cd293b2cae94f272012e17b2b" translate="yes" xml:space="preserve">
          <source>declares &lt;code&gt;s&lt;/code&gt; to be an array of &lt;code&gt;char&lt;/code&gt; which is long enough to hold the initializer (5 + 1 &lt;code&gt;char&lt;/code&gt;s) and initializes the array by copying the members of the given string literal into the array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;初期化子（5 + 1 &lt;/font&gt; &lt;code&gt;char&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; s）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を保持するのに十分な長さ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt; &lt;code&gt;char&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列として&lt;/font&gt;&lt;/font&gt; &lt;code&gt;s&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;宣言し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、指定された文字列リテラルのメンバーを配列にコピーすることによって配列を初期化します。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f64bf1221a6ac522194ae0c7ab90762fb2e7ca99" translate="yes" xml:space="preserve">
          <source>defines &quot;plain&quot; char array objects &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt; whose elements are initialized with character string literals.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要素が文字列リテラルで初期化される&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「プレーン」なchar配列オブジェクト&lt;/font&gt;&lt;/font&gt; &lt;code&gt;s&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;t&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定義し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f9173e3cc5a32f0d4ae02383bf750ccb501d24de" translate="yes" xml:space="preserve">
          <source>defines &lt;code&gt;p&lt;/code&gt; with type &quot;pointer to char&quot; and initializes it to point to an object with type &quot;array of char&quot; with length 4 whose elements are initialized with a character string literal. If an attempt is made to use &lt;code&gt;p&lt;/code&gt; to modify the contents of the array, the behavior is undefined.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タイプ &quot;pointer to char&quot;で&lt;/font&gt;&lt;/font&gt; &lt;code&gt;p&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定義し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、要素を文字列リテラルで初期化する長さ4のタイプ &quot;array of char&quot;のオブジェクトを指すように初期化します。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;p&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て配列の内容を変更&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しようとした場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の動作は未定義です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b1a5c8f504403c9ec88f17716b5a8b9d78f46f59" translate="yes" xml:space="preserve">
          <source>defines &lt;code&gt;s0&lt;/code&gt; as a pointer to &lt;code&gt;char&lt;/code&gt; with auto storage duration (meaning the variable &lt;code&gt;s0&lt;/code&gt; only exists for the scope in which it is declared) and copies the &lt;em&gt;address&lt;/em&gt; of the string literal (&lt;code&gt;0x00008000&lt;/code&gt; in this example) to it. Note that since &lt;code&gt;s0&lt;/code&gt; points to a string literal, it should not be used as an argument to any function that would try to modify it (e.g., &lt;code&gt;strtok()&lt;/code&gt;, &lt;code&gt;strcat()&lt;/code&gt;, &lt;code&gt;strcpy()&lt;/code&gt;, etc.).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;s0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を自動ストレージ期間を持つ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;char&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;へのポインターとして&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定義し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（変数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;s0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は宣言されたスコープにのみ存在することを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;意味します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、文字列リテラル（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この例では&lt;/font&gt; &lt;code&gt;0x00008000&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;）の&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アドレス&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それにコピーし&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。以来という注意&lt;/font&gt; &lt;code&gt;s0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列リテラルを指し、それは（例えば、それを変更しようとする任意の関数の引数として使用すべきではない&lt;/font&gt; &lt;code&gt;strtok()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;strcat()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;strcpy()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;など）。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c92da05c1dd3a6b7b21dd85dd014fd8ae50573ee" translate="yes" xml:space="preserve">
          <source>defines &lt;code&gt;s1&lt;/code&gt; as a 12-element array of &lt;code&gt;char&lt;/code&gt; (length is taken from the string literal) with auto storage duration and copies the &lt;em&gt;contents&lt;/em&gt; of the literal to the array.  As you can see from the memory map, we have two copies of the string &lt;code&gt;&quot;hello world&quot;&lt;/code&gt;; the difference is that you can modify the string contained in &lt;code&gt;s1&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;s1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を自動保存期間&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を持つ12要素の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;char&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（長さは文字列リテラルから取得）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;として&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定義し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、リテラル&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内容&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を配列に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コピーし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メモリマップからわかるように、文字列&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;hello world&quot;&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コピーが2つあり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;違いは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;s1&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;含まれる文字列を変更できることです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f817d5ddac7f65d5bd9c6b95fe7951ec56f65748" translate="yes" xml:space="preserve">
          <source>legal.</source>
          <target state="translated">legal.</target>
        </trans-unit>
        <trans-unit id="98658dbce77e0b4aea26c71003da55e305bd7c92" translate="yes" xml:space="preserve">
          <source>or like this:</source>
          <target state="translated">とかこんな感じで。</target>
        </trans-unit>
        <trans-unit id="86a9744a601f74b8ba4b3ba50d1904f999973752" translate="yes" xml:space="preserve">
          <source>puts the literal string in read-only memory and copies the string to newly allocated memory on the stack. Thus making</source>
          <target state="translated">はリテラル文字列を読み込み専用メモリに置き、スタック上の新たに確保されたメモリに文字列をコピーします。このようにして</target>
        </trans-unit>
        <trans-unit id="b54d50ef4ba8196181cb1705327251659b50884e" translate="yes" xml:space="preserve">
          <source>so it gets stored in the stack (relative to &lt;code&gt;%rbp&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのため、スタックに格納されます（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;%rbp&lt;/code&gt; に対して&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d5607fe56fc2010bb7d690790ccafa089c8db902" translate="yes" xml:space="preserve">
          <source>that gives UB if modified</source>
          <target state="translated">これは、変更された場合にUBを与える</target>
        </trans-unit>
        <trans-unit id="867b9a00623e417b4844f0dffcffb808848bad58" translate="yes" xml:space="preserve">
          <source>unnamed</source>
          <target state="translated">unnamed</target>
        </trans-unit>
        <trans-unit id="82b76e320e6a246cb2b9c19bd7c16502ea374dee" translate="yes" xml:space="preserve">
          <source>we obtain:</source>
          <target state="translated">を得ることができます。</target>
        </trans-unit>
        <trans-unit id="b30fcd4fae496a47d73de21913c424b6de7ef0a5" translate="yes" xml:space="preserve">
          <source>which contains:</source>
          <target state="translated">が含まれています。</target>
        </trans-unit>
        <trans-unit id="ebe65bb44543f9999baa28c392cf31565e962809" translate="yes" xml:space="preserve">
          <source>will change the str to &quot;Mello&quot;.</source>
          <target state="translated">を実行すると、strが &quot;Mello &quot;に変更されます。</target>
        </trans-unit>
        <trans-unit id="6a7dd118b609966c8661d41bf617b9302f9ee02b" translate="yes" xml:space="preserve">
          <source>will place &lt;code&gt;&quot;Hello world&quot;&lt;/code&gt; in the &lt;em&gt;read-only parts of the memory&lt;/em&gt;, and making &lt;code&gt;s&lt;/code&gt; a pointer to that makes any writing operation on this memory illegal.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配置されます&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;Hello world&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;中で&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、メモリの読み取り専用の部品&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、およびその製造&lt;/font&gt;&lt;/font&gt; &lt;code&gt;s&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このメモリ上の任意の書き込み動作が不正になることへのポインタを。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6dcfd341c68e6a635162413a9b37b77231e5afb8" translate="yes" xml:space="preserve">
          <source>with static storage</source>
          <target state="translated">静的記憶装置付き</target>
        </trans-unit>
        <trans-unit id="3bc23fb8ce4366e63eff6c026826916a5a8f5320" translate="yes" xml:space="preserve">
          <source>x is an &lt;a href=&quot;http://en.wikipedia.org/wiki/Lvalue&quot;&gt;lvalue&lt;/a&gt; -- it can be assigned to. But in the case of:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;xは&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Lvalue&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;左辺値です&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -代入できます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、次の場合：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ce6abc8b51ef9d95b761f6bb6a1c2a4b09654301" translate="yes" xml:space="preserve">
          <source>x is not an lvalue, it is an rvalue -- you cannot assign to it.</source>
          <target state="translated">xはlvalueではなくrvalueです。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
