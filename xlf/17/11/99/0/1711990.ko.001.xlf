<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/1711990">
    <body>
      <group id="1711990">
        <trans-unit id="7e613a7fd1e7d5e6f85e01029fdf991003a2e323" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://isocpp.org/wiki/faq/ctors#init-lists&quot;&gt;You should, in most cases, initialize all member objects in the member initialization list&lt;/a&gt; (however, do note the exceptions listed at the end of the FAQ entry).</source>
          <target state="translated">&lt;a href=&quot;https://isocpp.org/wiki/faq/ctors#init-lists&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대부분의 경우 멤버 초기화 목록에서 모든 멤버 객체를 초기화해야합니다&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (단, FAQ 항목 끝에 나열된 예외 사항에 유의하십시오).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0affe1016f32ebe788878059fc8f6a0d6e0fcff2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MyClass2&lt;/code&gt; doesn't have a default constructor so it has to be initialized through member initializer list.</source>
          <target state="translated">&lt;code&gt;MyClass2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에는 기본 생성자가 없으므로 멤버 이니셜 라이저 목록을 통해 초기화해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0fa11c708f799df07b6fe7753cfc3ade770847aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Class Member variables are always initialized in the order in which they are declared in the class.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 멤버 변수는 항상 클래스에서 선언 된 순서대로 초기화됩니다.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6add4fbc53e49dcfb16f8b88345c049d16c11f9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Member Assignment:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;회원 할당 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2626806f810bf48f086a62858d2a704dff9a0ace" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Member Initialization:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;회원 초기화 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="09eed7418f9ab3d9eb803cfb772c473cc23d481b" translate="yes" xml:space="preserve">
          <source>A code example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드 예 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="880601c71d36a994eccfb7ce4ad4fd51a6c30393" translate="yes" xml:space="preserve">
          <source>All other things being equal, your code will run faster if you use initialization lists rather than assignment.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 모든 것은 동일합니다. 할당 대신 초기화 목록을 사용하면 코드가 더 빠르게 실행됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="180cb3c011eede67ffe110f2ff78f8224e8ea8dc" translate="yes" xml:space="preserve">
          <source>As you see there is an additional overhead of creation &amp;amp; assignment in the latter, which might be considerable for user defined classes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;보시다시피 후자에는 생성 및 할당에 대한 추가 오버 헤드가 있으며 이는 사용자 정의 클래스에 상당 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5ae4863e1b55c5a2c25e012120fa8f7aa48c74fc" translate="yes" xml:space="preserve">
          <source>Base class &lt;code&gt;MyClass&lt;/code&gt; does not have a default constructor, So to initialize its member one will need to use Member Initializer List.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본 클래스 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyClass&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에는 기본 생성자가 없으므로 멤버를 초기화하려면 Member Initializer List를 사용해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="63a748cf820d91dfb1d14d29c01dd52d4c07e9c1" translate="yes" xml:space="preserve">
          <source>Basically, in your case, &lt;code&gt;x&lt;/code&gt; will be initialized with &lt;code&gt;_x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; with &lt;code&gt;_y&lt;/code&gt;, &lt;code&gt;z&lt;/code&gt; with &lt;code&gt;_z&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본적으로 귀하의 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;_x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;_y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;z&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;_z&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 초기화됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7a7b310d2495e484fea1ff460e80d2fdad0204cf" translate="yes" xml:space="preserve">
          <source>Consider these two examples:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 두 가지 예를 고려하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5947803b4e3a9b081b26bdb9af02f24e3aff8f35" translate="yes" xml:space="preserve">
          <source>For an inbuilt (your code example) or POD class members there is no practical overhead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내장 (코드 예제) 또는 POD 클래스 멤버의 경우 실질적인 오버 헤드가 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b72847121d3d265625d8bf2b51578b60dd777ed" translate="yes" xml:space="preserve">
          <source>For initialization of base class members or</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본 클래스 멤버의 초기화 또는&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ddc1f915dfc6e4275e2f889ff9d789e04740f007" translate="yes" xml:space="preserve">
          <source>Given the above it is always a good practice to maintain the same order of members for Member initialization as the order in which they are declared in the class definition. This is because compilers do not warn if the two orders are different but a relatively new user might confuse member Initializer list as the order of initialization and write some code dependent on that.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위와 같이 멤버 초기화를 위해 멤버 정의에서 클래스 정의에 선언 된 순서와 동일한 순서를 유지하는 것이 좋습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 순서가 다르면 컴파일러가 경고하지 않지만 비교적 새로운 사용자는 초기화 순서로 멤버 이니셜 라이저 목록을 혼동하고 이에 따라 일부 코드를 작성할 수 있기 때문입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3790df37f778ce461ee2b133fb28189aa9b894d5" translate="yes" xml:space="preserve">
          <source>I don't know how you could miss this one, it's pretty basic. That's the syntax for initializing member variables or base class constructors.  It works for plain old data types as well as class objects.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 당신이 이것을 놓칠 수있는 방법을 모른다. 그것은 매우 기본적이다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;멤버 변수 또는 기본 클래스 생성자를 초기화하는 구문입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 객체뿐만 아니라 평범한 오래된 데이터 유형에서도 작동합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db3a2761f5ab5a4ef0eced07df4683018bca3199" translate="yes" xml:space="preserve">
          <source>I just want to note that the syntax that, as you said, &quot;looks like a constructor call&quot;, is not necessarily a constructor call. In C++ language the &lt;code&gt;()&lt;/code&gt; syntax is just one standard form of &lt;em&gt;initialization syntax&lt;/em&gt;. It is interpreted differently for different types. For class types with user-defined constructor it means one thing (it is indeed a constructor call), for class types without user-defined constructor it means another thing (so called &lt;a href=&quot;http://en.cppreference.com/w/cpp/language/value_initialization&quot;&gt;&lt;strong&gt;&lt;em&gt;value initialization&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt; ) for empty &lt;code&gt;()&lt;/code&gt;) and for non-class types it again means something different (since non-class types have no constructors).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신이 말했듯이 &quot;생성자 호출처럼 보이는&quot;구문이 반드시 생성자 호출은 아니라는 점에 주목하고 싶습니다. C ++ 언어에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 구문은 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;초기화 구문의&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 표준 형식 중 하나 일뿐 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다. 유형에 따라 다르게 해석됩니다. 사용자 정의 생성자가있는 클래스 유형의 경우 한 가지 의미 (실제로 생성자 호출 임), 사용자 정의 생성자가없는 클래스 유형의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경우 비어있는 &lt;/font&gt; &lt;code&gt;()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) 및 클래스가 아닌 유형의 경우 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 의미 ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/language/value_initialization&quot;&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값 초기화&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스가 아닌 유형에는 생성자가 없으므로 다른 것을 의미합니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d4f8139120d4e5b6f293692eeb62c98dded902e2" translate="yes" xml:space="preserve">
          <source>If you use &lt;strong&gt;&lt;em&gt;assignment&lt;/em&gt;&lt;/strong&gt; then the fields will be first initialized with default constructors and then reassigned (via assignment operator) with actual values.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;할당&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 필드가 먼저 기본 생성자로 초기화되고 할당 연산자를 통해 실제 값으로 다시 할당됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4c351d217baf85075ad72e3f0aaf960f97f95b8d" translate="yes" xml:space="preserve">
          <source>Important points to Note while using Member Initializer Lists:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;멤버 이니셜 라이저 목록을 사용할 때 유의해야 할 사항 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a7edaa552efcdfe234d7e029e132172a0f954dfa" translate="yes" xml:space="preserve">
          <source>In example 1:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예 1 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ceb343a2f455b8a75b5bd2c0c3cfeca03b83227e" translate="yes" xml:space="preserve">
          <source>In example 2:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예 2 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6ac34c875da4aeca70449d729ca98a5b2a40d12a" translate="yes" xml:space="preserve">
          <source>In short, Member initialization list does not determine the order of initialization.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉, 멤버 초기화 목록은 초기화 순서를 결정하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9e65ca2b7c2ace33af0e94d035c5832c4cf30d57" translate="yes" xml:space="preserve">
          <source>In the first example, str will be initialized by its no-argument constructor</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째 예에서 str은 인수가없는 생성자에 의해 초기화됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="55ed577fb0966ae0522ac54e43678f540485e57b" translate="yes" xml:space="preserve">
          <source>In your case the data member has type &lt;code&gt;int&lt;/code&gt;. &lt;code&gt;int&lt;/code&gt; is not a class type, so it has no constructor. For type &lt;code&gt;int&lt;/code&gt; this syntax means simply &quot;initialize &lt;code&gt;bar&lt;/code&gt; with the value of &lt;code&gt;num&lt;/code&gt;&quot; and that's it. It is done just like that, directly, no constructors involved, since, once again, &lt;code&gt;int&lt;/code&gt; is not a class type of therefore it can't have any constructors.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;귀하의 경우 데이터 멤버의 유형은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 클래스 유형이 아니므로 생성자가 없습니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 유형의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경우이 구문은 단순히 &quot; &lt;/font&gt; &lt;code&gt;num&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 값을 가진 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 초기화&quot;를 의미 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. &lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 클래스 유형이 아니므로 생성자를 가질 수 없기 때문에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생성자가 직접 포함되지 않는 것처럼 수행됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6001cad2b42815ecb51dcec682bd3d238b96ce1b" translate="yes" xml:space="preserve">
          <source>It's a &lt;em&gt;member initialization list&lt;/em&gt;.  You should find information about it in any &lt;a href=&quot;https://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list&quot;&gt;good C++ book&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 A의 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;멤버 초기화 목록&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;좋은 C ++ 서적&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 이에 대한 정보를 찾아야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f795a937da21ee6744d6cdfa79812d7c84f12c0c" translate="yes" xml:space="preserve">
          <source>It's all about efficiency.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;효율성에 관한 모든 것.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea8ebfb20a1664723438a91d0ac1c4f927a3ce70" translate="yes" xml:space="preserve">
          <source>It's an initialization list for the constructor. Instead of default constructing &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;z&lt;/code&gt; and then assigning them the values received in the parameters, those members will be initialized with those values right off the bat. This may not seem terribly useful for &lt;code&gt;float&lt;/code&gt;s, but it can be quite a timesaver with custom classes that are expensive to construct.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생성자의 초기화 목록입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본적으로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;z&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 구성한 다음 매개 변수에 수신 된 값을 할당하는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대신 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해당 멤버는 해당 값을 바로 사용하여 초기화합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 굉장히 유용한 것 같지는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;않지만 구성하는 데 비용이 많이 드는 커스텀 클래스를 사용하면 시간을 절약 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="61c4bedc7ad1b0462f4a43d5cf2914409a9b6514" translate="yes" xml:space="preserve">
          <source>Not mentioned yet on this thread: since C++11, the member initializer list can use list-initialization  (aka. &quot;uniform initialization&quot;, &quot;braced initialization&quot;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 스레드에서는 아직 언급되지 않았습니다. C ++ 11부터 멤버 이니셜 라이저 목록은 목록 초기화 (일명 &quot;균일 초기화&quot;, &quot;중괄 초기화&quot;)를 사용할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dcf5e42daec51eb7f8764c8bfdf463e6ff5ceff4" translate="yes" xml:space="preserve">
          <source>Recently I've seen an example like the following:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;최근에 다음과 같은 예를 보았습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b932af732e5e21996073c6dbbc9ef6f4f02b7b7c" translate="yes" xml:space="preserve">
          <source>Simply said, it &lt;strong&gt;initializes&lt;/strong&gt; your member &lt;code&gt;bar&lt;/code&gt; to a value &lt;code&gt;num&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;간단히 말해 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;멤버 &lt;/font&gt; &lt;code&gt;bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 값 &lt;/font&gt; &lt;code&gt;num&lt;/code&gt; 으로&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;초기화&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ab5ce908762849ae0fa009c66f046b08095ef51d" translate="yes" xml:space="preserve">
          <source>That's constructor initialisation.  It is the correct way to initialise members in a class constructor, as it prevents the default constructor being invoked.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 생성자 초기화입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본 생성자가 호출되지 않도록 클래스 생성자에서 멤버를 초기화하는 올바른 방법입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="66b048d42e6a3eb9a43bc6d9950d55ff9153c23f" translate="yes" xml:space="preserve">
          <source>The latter is actually equivalent to:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;후자는 실제로 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="755c8932e2b5791a3e63356c6600a12413babfc2" translate="yes" xml:space="preserve">
          <source>The other already explained to you that the syntax that you observe is called &quot;constructor initializer list&quot;. This syntax lets you to custom-initialize base subobjects and member subobjects of the class (as opposed to allowing them to default-initialize or to remain uninitialized).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 하나는 이미 관찰 한 구문을 &quot;생성자 초기화 목록&quot;이라고 설명했습니다. 이 구문을 사용하면 클래스의 기본 하위 개체 및 멤버 하위 개체를 사용자 정의 초기화 할 수 있습니다 (기본 초기화 또는 초기화되지 않은 상태 유지).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a6f2d7f773eb92a407018d744440a2466c739cd7" translate="yes" xml:space="preserve">
          <source>The takeaway point from the FAQ entry is that,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;FAQ 항목에서 가져온 점은&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="32fc652b48d905fd3b8d9f3fdb3679d254cd248a" translate="yes" xml:space="preserve">
          <source>There is a significant difference between Initializing a member using Member initializer list and assigning it an value inside the constructor body.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;멤버 이니셜 라이저 목록을 사용하여 멤버를 초기화하는 것과 생성자 본문 내부에 값을 할당하는 것에는 큰 차이가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c8c2868665fe6c6390704b375f2aa729b9f62f88" translate="yes" xml:space="preserve">
          <source>They are &lt;strong&gt;not&lt;/strong&gt; initialized in the order in which they are specified in the Member Initializer List.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그들은되어 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있지&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 그들이 회원 이니셜 라이저 목록에 지정된 순서대로 초기화.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f4e030af718c825592a70f61c77350972f7863b" translate="yes" xml:space="preserve">
          <source>This construct is called a &lt;strong&gt;Member Initializer List&lt;/strong&gt; in C++.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 구성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을 C ++에서 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;멤버 이니셜 라이저 목록&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이라고합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5fa57f50540c7770916fd7d1b857c2b9643f6dc1" translate="yes" xml:space="preserve">
          <source>This is an initialization list. It'll initialize the members before the constructor body is run.
Consider</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 초기화 목록입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생성자 본문이 실행되기 전에 멤버를 초기화합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;치다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0ac464d5399e0c8a011ca0211c64d3ce9fe9b1b4" translate="yes" xml:space="preserve">
          <source>This is called an initialization list.  It is a way of initializing class members.  There are benefits to using this instead of simply assigning new values to the members in the body of the constructor, but if you have class members which are &lt;em&gt;constants&lt;/em&gt; or &lt;em&gt;references&lt;/em&gt; they &lt;em&gt;must&lt;/em&gt; be initialized.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것을 초기화 목록이라고합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;반원을 초기화하는 방법입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이이를 사용하는 대신에 단순히 생성자의 본문에 회원들에게 새로운 가치를 할당하는 장점이 있지만, 당신은 클래스 멤버가있는 경우 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;상수&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조를&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 그들은 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해야한다&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 초기화.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a6750f4aaeae63e5720e3a68b65e1980f6a1bbc" translate="yes" xml:space="preserve">
          <source>This is not obscure, it's the &lt;a href=&quot;http://en.cppreference.com/w/cpp/language/initializer_list&quot;&gt;C++ initialization list syntax&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 모호하지 않으며 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/language/initializer_list&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C ++ 초기화 목록 구문입니다.&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53c1aabc06f6027cf4e5ec9fd20c49a7d15c2b30" translate="yes" xml:space="preserve">
          <source>What does this strange &lt;code&gt;: bar(num)&lt;/code&gt; mean? It somehow seems to initialize the member variable but I've never seen this syntax before. It looks like a function/constructor call but for an &lt;code&gt;int&lt;/code&gt;?  Makes no sense for me. Perhaps someone could enlighten me. And, by the way, are there any other esoteric language features like this, you'll never find in an ordinary C++ book?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 이상한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;: bar(num)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 무엇을 의미합니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어떻게 든 멤버 변수를 초기화하는 것처럼 보이지만 이전에는이 ​​구문을 본 적이 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수 / 생성자 호출처럼 보이지만 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나에게 이해가되지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아마도 누군가 나를 깨우칠 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런데, 이와 같은 다른 난해한 언어 기능이 있습니까? 평범한 C ++ 책에서는 결코 찾을 수 없습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="82c7641717ae11ba8d702ebd047eff90f7d6d49b" translate="yes" xml:space="preserve">
          <source>What is the difference between Initializing and Assignment inside a constructor?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생성자 내에서 초기화와 할당의 차이점은 무엇입니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="11aeeccb080ea4fb19b9b6094aec75cf3c865822" translate="yes" xml:space="preserve">
          <source>What is this weird colon-member (“ : ”) syntax in the constructor</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생성자에서이 이상한 콜론 멤버 (&amp;ldquo;:&amp;rdquo;) 구문은 무엇입니까&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="72d60b81e1762c8994f2d868ffbbc8abc0b41996" translate="yes" xml:space="preserve">
          <source>When constructor&amp;rsquo;s parameter name is same as data member(this is not really a MUST)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생성자의 매개 변수 이름이 데이터 멤버와 동일 할 때 (실제로 필수는 아님)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9dc941a8bb728953e774cb706496f3e48243ca02" translate="yes" xml:space="preserve">
          <source>When do you HAVE TO use Member Initializer list?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;언제 멤버 이니셜 라이저 목록을 사용해야합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e0c6c8d417ff6627a0124a08de7883ae7511f3ca" translate="yes" xml:space="preserve">
          <source>When you &lt;strong&gt;&lt;em&gt;initialize&lt;/em&gt;&lt;/strong&gt; fields via Member initializer list the constructors will be called once and the object will be constructed and initialized in one operation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 때 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;초기화&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 목록 초기화 회원을 통해 필드를 생성자는 한 번만 호출되고 개체가 건설하고 한 번의 작업으로 초기화됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ebc3241919665078364a95d52a9165e822dc30ca" translate="yes" xml:space="preserve">
          <source>Wheras in the second example, str will be initialized directly by
calling its constructor</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째 예에서 str은 생성자를 호출하여 직접 초기화됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f4f0ac48cffd6745ff6a32fae3ea98141ca1b17d" translate="yes" xml:space="preserve">
          <source>While the former is equivalent to just:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전자는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de9d44bf598487e6479a23193a3096783d76ab83" translate="yes" xml:space="preserve">
          <source>You are correct, this is indeed a way to initialize member variables.  I'm not sure that there's much benefit to this, other than clearly expressing that it's an initialization.  Having a &quot;bar=num&quot; inside the code could get moved around, deleted, or misinterpreted much more easily.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;맞습니다. 실제로 멤버 변수를 초기화하는 방법입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;초기화라는 것을 분명히 표현하는 것 외에는 이것에 많은 이점이 있는지 확실하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드 내부에 &quot;bar = num&quot;이 있으면 훨씬 쉽게 이동, 삭제 또는 잘못 해석 될 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a0b51ff8c41793d2f3b977e8288cd747edace1ff" translate="yes" xml:space="preserve">
          <source>You will &lt;strong&gt;have(rather forced) to&lt;/strong&gt; use a Member Initializer list if:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 것 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을 (오히려 강제)를 한&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 멤버 초기화 목록 경우를 사용 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="533c067aff470ecf1cf17ea337acd7f17a55966e" translate="yes" xml:space="preserve">
          <source>Your class has a non static const member or</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;귀하의 클래스는 정적이 아닌 const 멤버 또는&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fb2245c596d643b069e12828278627408eeb08f6" translate="yes" xml:space="preserve">
          <source>Your class has a reference member</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수업에 참조 멤버가 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e4c1e66d85c1552339e63362828ab9cb1289cf6c" translate="yes" xml:space="preserve">
          <source>Your class member doesn't have a default constructor or</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 멤버에게 기본 생성자가 없거나&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d17e61782e975aad8a59ebfd95fe42b0b27b1fff" translate="yes" xml:space="preserve">
          <source>before the body of the Foo constructor. Inside the foo constructor, the</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Foo 생성자의 본문 앞에. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;foo 생성자 안에서&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fe4b03553c2242b7ac87e5d19342918dba0fe01f" translate="yes" xml:space="preserve">
          <source>if the member variable type does not support null initialization or if its a reference (which cannot be null initialized) then you have no choice but to supply an initialization list</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;멤버 변수 유형이 널 초기화를 지원하지 않거나 참조 (널 초기화 될 수 없음) 인 경우 초기화 목록을 제공 할 수밖에 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="099996239a56eb00959aaef16cb395d5af7872ab" translate="yes" xml:space="preserve">
          <source>there is another 'benefit'</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또 다른 '혜택'이 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="691a77cd21a31b1b144537311a05b0bb5ff8fd2d" translate="yes" xml:space="preserve">
          <source>vs</source>
          <target state="translated">vs</target>
        </trans-unit>
        <trans-unit id="c7eee21b85191d8de6dded55dbd1cdf406ea62a5" translate="yes" xml:space="preserve">
          <source>which has the same semantics as list-initialization in other contexts.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 컨텍스트에서 목록 초기화와 동일한 의미를 갖습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="94cc7ffc6a8d9e66ec197544cce625140bb41602" translate="yes" xml:space="preserve">
          <source>will be called on 'str' as you do   str = p;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;str = p와 같이 'str'에서 호출됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3cf1ebb407c1ed531cfe3fe98ecbcd216dfee228" translate="yes" xml:space="preserve">
          <source>with 'p' as an argument.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'p'를 인수로 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
