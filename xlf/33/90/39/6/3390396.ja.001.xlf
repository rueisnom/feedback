<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/3390396">
    <body>
      <group id="3390396">
        <trans-unit id="036f9679a19a03925b061ea8fd132be088e7ea8a" translate="yes" xml:space="preserve">
          <source>(If you are still scared of &lt;code&gt;undefined&lt;/code&gt; being redefined, why are you blindly integrating untested library code into your code base? Or even simpler: a linting tool.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が再&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定義&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;されるの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がまだ怖いのなら&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、なぜテストされていないライブラリコードを盲目的にコードベースに統合しているのですか？あるいはもっと簡単な：リンティングツールです。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8380b58ae18915f7a471e4010665110260b1bee9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if (window.myVar)&lt;/code&gt; will also include these falsy values, so it's not very robust:</source>
          <target state="translated">&lt;code&gt;if (window.myVar)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;にもこれらの偽の値が含まれるため、それほど堅牢ではありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9c0eca093d608d52888040610ad0fea09fe42fae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(Note that the use of &lt;code&gt;var&lt;/code&gt; for &lt;code&gt;in&lt;/code&gt; tests make a difference when in a scoped wrapper)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;（テストでの &lt;code&gt;var&lt;/code&gt; の使用は、スコープ付きラッパーの場合に違いがあることに注意してください）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="863e91564b01c84a7808a88c5ddf783197703de1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2020 Update&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2020年の更新&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7219b826595514574004d8c03bbfd3fb30ad514e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Original answer from 2010&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2010年の元の回答&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="610619cc11e3f0d3c676f106c2cfe06e49af51e2" translate="yes" xml:space="preserve">
          <source>Also, like the &lt;code&gt;typeof&lt;/code&gt; approach, this technique can &quot;detect&quot; undeclared variables:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アプローチ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と同様に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、この手法は宣言されていない変数を「検出」できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="63b964d88fc95bd706292cbaa247b9c16e2755e4" translate="yes" xml:space="preserve">
          <source>And results:</source>
          <target state="translated">そして結果。</target>
        </trans-unit>
        <trans-unit id="c5e955c7a8e1fcb5bbc7691bf4dec9e562312c02" translate="yes" xml:space="preserve">
          <source>As @CMS pointed out, this has been patched in ECMAScript 5th ed., and &lt;code&gt;undefined&lt;/code&gt; is non-writable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@CMSが指摘したように、これはECMAScript 5th ed。でパッチされており、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は書き込み不可です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="891184fb51a72882eb0575630e1c6f88aafcabb6" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;typeof&lt;/code&gt; and &lt;code&gt;void&lt;/code&gt; were significantly faster than comparing directly against &lt;code&gt;undefined&lt;/code&gt;.  I used the following test format in the Chrome developer console:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どちらも&lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; 演算&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;void&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に対して直接比較するよりも大幅に高速化した&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Chromeデベロッパーコンソールで次のテスト形式を使用しました：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f8f85e4ff5c950a4919ba8530c43aa65837031a8" translate="yes" xml:space="preserve">
          <source>Bottom line, the &quot;it can be redefined&quot; argument to not use a raw &lt;code&gt;=== undefined&lt;/code&gt; is bogus.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;=== undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;として、生の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;===未定義を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用しないように「再定義できる」引数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は偽です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac97dcc4e4ff3594aedc2d7087cff3fed316961a" translate="yes" xml:space="preserve">
          <source>But both these techniques leak in their abstraction. I urge you not to use this or even</source>
          <target state="translated">しかし、これらの技術はどちらも抽象化されていて漏れるのです。これを使わないことを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="9c4bab2499bacc0ba37f000beaf71f817e0234a7" translate="yes" xml:space="preserve">
          <source>But this may not be the intended result for some cases, since the variable or property was declared but just not initialized. Use the &lt;code&gt;in&lt;/code&gt; operator for a more robust check.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、変数またはプロパティが宣言されただけで初期化されていないため、これは意図した結果にならない場合があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;より堅牢なチェックを行うに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;in&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;演算子を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2cd895b9232cf916e72f7f58cb962500a1139395" translate="yes" xml:space="preserve">
          <source>But wait! There's more! What if some prototype chain magic is happening&amp;hellip;? Now even the superior &lt;code&gt;in&lt;/code&gt; operator does not suffice. (Okay, I'm done here about this part except to say that for 99% of the time, &lt;code&gt;=== undefined&lt;/code&gt; (and ****cough**** &lt;code&gt;typeof&lt;/code&gt;) works just fine. If you really care, you can read about this subject on its own.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ちょっと待って！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もっとあります！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロトタイプチェーンマジックが発生している場合はどうなりますか？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さて、上司&lt;/font&gt;&lt;/font&gt; &lt;code&gt;in&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さえ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;十分ではありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（わかりました。この部分については、99％の時間、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;=== undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（および**** cough **** &lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）が問題なく機能する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことを除いて、ここで完了です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。本当に気にする場合は、この主題については、単独で読んでください。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1daf4b17726ef0dab632dbab9c7df1fe0d5f44a0" translate="yes" xml:space="preserve">
          <source>Code for reference:</source>
          <target state="translated">参照用のコードです。</target>
        </trans-unit>
        <trans-unit id="75e291169a2ebb63c935a5de7382990c0513d618" translate="yes" xml:space="preserve">
          <source>Consider:</source>
          <target state="translated">Consider:</target>
        </trans-unit>
        <trans-unit id="e063b5c49b21cace8dccb290c9ce5c6adcd6b62c" translate="yes" xml:space="preserve">
          <source>Cool. I know this. Then again, most variables in Javascript can be redefined. Should you never use any built-in identifier that can be redefined?</source>
          <target state="translated">いいね これは知っています。それからまた、Javascriptのほとんどの変数は再定義可能です。再定義可能な組み込みの識別子は絶対に使うべきではないでしょうか?</target>
        </trans-unit>
        <trans-unit id="9b738c26bdc79e4e3b044e9a0a99168e19631674" translate="yes" xml:space="preserve">
          <source>Direct comparisons against &lt;code&gt;undefined&lt;/code&gt; are troublesome as &lt;code&gt;undefined&lt;/code&gt; can be overwritten.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上書きされる可能性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があるため、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;との直接比較&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は面倒&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6abe413a2e6b17508003e9e05c3f341cfabc0986" translate="yes" xml:space="preserve">
          <source>Even when I modified the tests to prevent Chrome from optimizing them away, the differences were insignificant.  As such, I'd now recommend &lt;code&gt;abc === undefined&lt;/code&gt; for clarity.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Chromeで最適化されないようにテストを変更しても、違いはわずかでした。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、明確にするために、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;abc === undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;お勧めし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9090c046d1d7690edf12a4a7546ac6e90c5da28" translate="yes" xml:space="preserve">
          <source>Google Chrome: 67.0.3396.99 (Official Build) (64-bit) (cohort: Stable)</source>
          <target state="translated">Google Chrome:67.0.3396.99 (Official Build)(64bit)(cohort:Stable)</target>
        </trans-unit>
        <trans-unit id="0f5b9a21217a6bfc5056d59a0ebc370ace34dd13" translate="yes" xml:space="preserve">
          <source>How to check for “undefined” in JavaScript</source>
          <target state="translated">JavaScriptで「undefined」をチェックする方法</target>
        </trans-unit>
        <trans-unit id="21bfdb58b5ccdc9d074abb97aed25029a77100a5" translate="yes" xml:space="preserve">
          <source>I do not like &lt;code&gt;typeof myVar === &quot;undefined&quot;&lt;/code&gt;. I think it is long winded and unnecessary. (I can get the same done in less code.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;typeof myVar === &quot;undefined&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は好きではありません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;長く巻かれている必要はないと思います。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（私は同じことをより少ないコードで行うことができます。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="837239f84c03db48b25cd02d54ccef8624219048" translate="yes" xml:space="preserve">
          <source>I personally use</source>
          <target state="translated">個人的には</target>
        </trans-unit>
        <trans-unit id="3a587a71145cb66dde25364482b235097ac53119" translate="yes" xml:space="preserve">
          <source>I prefer to have the approach of using</source>
          <target state="translated">を使用するアプローチの方が好きです。</target>
        </trans-unit>
        <trans-unit id="f85e4ad7ecb33ce36e35b0511a305a408cc70a63" translate="yes" xml:space="preserve">
          <source>I use it as a function parameter and exclude it on function execution that way I get the &quot;real&quot; undefined. Although it does require you to put your code inside a function. I found this while reading the jQuery source.</source>
          <target state="translated">私はこれを関数のパラメータとして使用し、関数の実行時に除外しています。この方法では、コードを関数の中に入れる必要がありますが。jQueryのソースを読んでいて見つけました。</target>
        </trans-unit>
        <trans-unit id="78e7c4311b187a14063b76e8a907d67fcead4136" translate="yes" xml:space="preserve">
          <source>I've a variable name, but I am not sure if it is declared somewhere or not.</source>
          <target state="translated">変数名があるのですが、どこかで宣言されているのかどうかわかりません。</target>
        </trans-unit>
        <trans-unit id="0961c0ef1f441777abe4f3f5150855d2b2b86ec4" translate="yes" xml:space="preserve">
          <source>If I forget to declare &lt;code&gt;myVar&lt;/code&gt; in my code, then I'll get &lt;code&gt;myVar is not defined&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コードで&lt;/font&gt;&lt;/font&gt; &lt;code&gt;myVar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を宣言し忘れた場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;myVar is not defined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d207dcda0acbda834e73b38bbe24319219b7380d" translate="yes" xml:space="preserve">
          <source>If it is undefined, it will not be equal to a string that contains the characters &quot;undefined&quot;, as the string is not undefined.</source>
          <target state="translated">未定義であれば、「未定義」という文字を含む文字列は未定義ではないので、等しくなりません。</target>
        </trans-unit>
        <trans-unit id="8b444c05d69df48afc81e4a4c28f760d933ecf18" translate="yes" xml:space="preserve">
          <source>If you are interested in finding out whether a variable has been declared regardless of its value, then using the &lt;code&gt;in&lt;/code&gt; operator is the safest way to go. Consider this example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数がその値に関係なく宣言されているかどうかを確認したい場合は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;in&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;演算子&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用するの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最も安全な方法です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この例を考えてみましょう：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dccb6f93c99ea2e5d53ad54fe01f5209d66b8b51" translate="yes" xml:space="preserve">
          <source>If you are interested in knowing whether the variable hasn't been declared or has the value &lt;code&gt;undefined&lt;/code&gt;, then use the &lt;code&gt;typeof&lt;/code&gt; operator, which is guaranteed to return a string:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数が宣言されていないか、値が&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;である&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;かを知りたい場合は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、文字列を返すことが保証されて&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いる&lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;演算子を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8524101bb6147c315f60a2c545ded3897121ed58" translate="yes" xml:space="preserve">
          <source>If you follow this rule, good for you: you aren't a hypocrite.</source>
          <target state="translated">このルールに従えば、あなたは偽善者ではありません。</target>
        </trans-unit>
        <trans-unit id="b9cc616779f14ef3d7fe3cc7f1ba7a78ed0139f5" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;http://flippinawesome.org/2013/12/09/exploring-the-abyss-of-null-and-undefined-in-javascript/&quot;&gt;this article&lt;/a&gt; I read that frameworks like &lt;a href=&quot;https://en.wikipedia.org/wiki/Underscore.js&quot;&gt;Underscore.js&lt;/a&gt; use this function:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://flippinawesome.org/2013/12/09/exploring-the-abyss-of-null-and-undefined-in-javascript/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、この記事で&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私はのようなフレームワークという読み&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Underscore.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Underscore.jsは&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、この機能を使用します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9d707e91fdd06ca21ae1620197a60f887de79e70" translate="yes" xml:space="preserve">
          <source>In Google Chrome, the following was ever so slightly faster than a &lt;code&gt;typeof&lt;/code&gt; test:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Google Chromeでは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テスト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;よりもわずかに高速でした&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f47bc0504968198e7a9aad9fead17f55b1479bec" translate="yes" xml:space="preserve">
          <source>It's been nearly five years since this post was first made, and JavaScript has come a long way.  In repeating the tests in the original post, I found no consistent difference between the following test methods:</source>
          <target state="translated">この投稿を始めてから5年近くになりますが、JavaScriptはずいぶん前のことになります。元の投稿のテストを繰り返してみると、以下のテスト方法に一貫した違いは見当たりませんでした。</target>
        </trans-unit>
        <trans-unit id="6e25cd0cbb467e4367475caa7430a3a6caa8db70" translate="yes" xml:space="preserve">
          <source>JavaScript: V8 6.7.288.46</source>
          <target state="translated">JavaScriptを使用しています。V8 6.7.288.46</target>
        </trans-unit>
        <trans-unit id="3c27b4f37b8b28f0fa4dc3a2ed1f2c54995c3f68" translate="yes" xml:space="preserve">
          <source>Let's take a real example:</source>
          <target state="translated">実際の例を挙げてみましょう。</target>
        </trans-unit>
        <trans-unit id="a4e0282b3c094f4a7692b78292d7eb02ee73b487" translate="yes" xml:space="preserve">
          <source>Note that strict comparison (&lt;code&gt;!==&lt;/code&gt;) is not necessary in this case, since &lt;code&gt;typeof&lt;/code&gt; will always return a string.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;は常に文字列を返す&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、この場合は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;厳密な比較（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;!==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）は必要ありません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f102acbfa4bc49aa9a7a3cbadc4d73217724fd9" translate="yes" xml:space="preserve">
          <source>Note that the first row is in &lt;em&gt;milli&lt;/em&gt;seconds, while the second row is in &lt;em&gt;nano&lt;/em&gt;seconds.  A difference of 3.4 nanoseconds is nothing.  The times were pretty consistent in subsequent tests.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初の行は&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ミリ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;秒単位であり、2番目の行は&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ナノ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;秒単位である&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことに注意してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3.4ナノ秒の違いは何もありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その後のテストでは、時間はほぼ一定でした。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fdffad749a6f7e578c7918e1cd12c8d2ef8e8594" translate="yes" xml:space="preserve">
          <source>Now some people will keel over in pain when they read this, screaming: &quot;Wait! WAAITTT!!! &lt;code&gt;undefined&lt;/code&gt; can be redefined!&quot;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを読んだとき、何人かの人々はこれを読んで苦痛を感じ、「待って！WAAITTT !!! &lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は再&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定義&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;できる！」&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="44a646f251727768fe37e510f39a7644777f4383" translate="yes" xml:space="preserve">
          <source>OS: Windows</source>
          <target state="translated">OS:Windows</target>
        </trans-unit>
        <trans-unit id="9a91bdb65f4e452ba390a53e3070e0bf039376b7" translate="yes" xml:space="preserve">
          <source>Of course you could just use &lt;code&gt;typeof&lt;/code&gt; though. But all my code is usually inside a containing function anyways, so using this method probably saves me a few bytes here and there.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もちろん、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用することもでき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、私のコードは通常、とにかく包含関数の内部にあるので、この方法を使用すると、たまに数バイト節約できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6cdba8a15ae46ecace67ac22308d0e62822c60df" translate="yes" xml:space="preserve">
          <source>On the contrary of @Thomas Eding answer:</source>
          <target state="translated">逆に@Thomas Edingの答え。</target>
        </trans-unit>
        <trans-unit id="e9255449decece5c678359f4160f8daf8c1f4e50" translate="yes" xml:space="preserve">
          <source>One of my reasons for preferring a &lt;code&gt;typeof&lt;/code&gt; check (namely, that &lt;code&gt;undefined&lt;/code&gt; can be redefined) became irrelevant with the mass adoption of ECMAScript 5. The other, that you can use &lt;code&gt;typeof&lt;/code&gt; to check the type of an undeclared variable, was always niche. Therefore, I'd now recommend using a direct comparison in most situations:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;チェック&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を好む理由の1つ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（つまり、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を再&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定義&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;できること）は、ECMAScript 5の大量採用とは無関係になりました。もう1つは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て宣言されていない変数のタイプをチェック&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;できること&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で、常にニッチでした。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、ほとんどの状況で直接比較を使用することをお勧めします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e72184f55cc026514b7160d78c3c5aef63c2a050" translate="yes" xml:space="preserve">
          <source>Or</source>
          <target state="translated">Or</target>
        </trans-unit>
        <trans-unit id="5d84c0fac9c1e813f54dc6ba7a9c0add32f74381" translate="yes" xml:space="preserve">
          <source>Original post 2013-11-01</source>
          <target state="translated">元の投稿 2013-11-01</target>
        </trans-unit>
        <trans-unit id="ae72b6dfe2307a3bfaab883fe06620341efa6b9f" translate="yes" xml:space="preserve">
          <source>Personally, I always use the following:</source>
          <target state="translated">個人的にはいつも使っています。</target>
        </trans-unit>
        <trans-unit id="b8513c68f2b3ffd84a63bbda4036432a9ed705bf" translate="yes" xml:space="preserve">
          <source>Relevant content from &lt;code&gt;chrome://version&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;chrome://version&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関連コンテンツ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0cc2125dad04fd7cf13e20fcbf9a61af6e47b00e" translate="yes" xml:space="preserve">
          <source>Revision: a337fbf3c2ab8ebc6b64b0bfdce73a20e2e2252b-refs/branch-heads/3396@{#790}</source>
          <target state="translated">リビジョン:a337fbf3c2ab8ebc6b64b0bfdce73a20e2e2252b-refsbranch-heads3396@{#790}.</target>
        </trans-unit>
        <trans-unit id="ea12f21322093c973aa3aa61d719da7c057265d3" translate="yes" xml:space="preserve">
          <source>Since none of the other answers helped me, I suggest doing this. It worked for me in Internet&amp;nbsp;Explorer&amp;nbsp;8:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他の回答はどれも役に立たなかったので、これを行うことをお勧めします。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それは私のためにInternet Explorer 8で働いた：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="141f21882b084552acee073fca83c3cc0c42e7c8" translate="yes" xml:space="preserve">
          <source>Some scenarios illustrating the results of the various answers:
&lt;a href=&quot;http://jsfiddle.net/drzaus/UVjM4/&quot;&gt;http://jsfiddle.net/drzaus/UVjM4/&lt;/a&gt;</source>
          <target state="translated">さまざまな回答の結果を示すいくつかのシナリオ： &lt;a href=&quot;http://jsfiddle.net/drzaus/UVjM4/&quot;&gt;http&lt;/a&gt; : //jsfiddle.net/drzaus/UVjM4/</target>
        </trans-unit>
        <trans-unit id="e5cb351dceddd5a6638fdb2ec96b65c236b7419f" translate="yes" xml:space="preserve">
          <source>Sometimes you don't even have to check the type. If the value of the variable can't evaluate to false when it's set (for example if it's a function), then you can just evalue the variable. Example:</source>
          <target state="translated">型をチェックする必要すらないこともあります。変数の値が設定されたときに false を評価できない場合 (例えば関数の場合)、その変数を evalue にすればよいのです。例</target>
        </trans-unit>
        <trans-unit id="86035bde0e6218c029d17172912dcf56857f9c98" translate="yes" xml:space="preserve">
          <source>Thanks to @CMS for pointing out that your third case - &lt;code&gt;if (myVariable)&lt;/code&gt; can also throw an error in two cases. The first is when the variable hasn't been defined which throws a &lt;code&gt;ReferenceError&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3番目のケース-if（myVariable &lt;/font&gt;&lt;/font&gt; &lt;code&gt;if (myVariable)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も2つのケースでエラーをスローする可能性があること&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を指摘してくれた@CMSに感謝します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1つ目は、変数が定義されていない場合で、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ReferenceError&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をスローし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="18d6e1e8a8cde5e712ea840cf732ba15e21b1ee3" translate="yes" xml:space="preserve">
          <source>The difference was negligible.  However, this code is more concise, and clearer at a glance to someone who knows what &lt;code&gt;void 0&lt;/code&gt; means. Note, however, that &lt;code&gt;abc&lt;/code&gt;&lt;strong&gt;must still be declared&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;違いはごくわずかでした。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、このコードはより簡潔で、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;void 0&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;意味&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を知っている人には一目でわかりやすくなってい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;abc&lt;/code&gt; &lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は宣言する必要があります&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9df62aecb43a62a0df7a083b2a87f852726763be" translate="yes" xml:space="preserve">
          <source>The most reliable way I know of checking for &lt;code&gt;undefined&lt;/code&gt; is to use &lt;code&gt;void 0&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のチェックについて知っている最も信頼できる方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;void 0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用すること&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa600fe1d12288ee250c04283a672496e70f9065" translate="yes" xml:space="preserve">
          <source>The other case is when the variable has been defined, but has a getter function which throws an error when invoked. For example,</source>
          <target state="translated">もう一つは、変数が定義されているにもかかわらず、ゲッター関数を持っていて呼び出されたときにエラーが発生する場合です。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="c2945db92377c52a57faa70915c7d63fd6280394" translate="yes" xml:space="preserve">
          <source>The results were as follows:</source>
          <target state="translated">結果は以下の通りでした。</target>
        </trans-unit>
        <trans-unit id="7d71b72f466baa4d447bb0c8c1550436347d31bf" translate="yes" xml:space="preserve">
          <source>The thing is, in order to do lots of real work in JS, developers need to rely on redefinable identifiers to be what they are. I don't hear people telling me that I shouldn't use &lt;code&gt;setTimeout&lt;/code&gt; because someone can</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際のところ、JSで多くの実際の作業を行うには、開発者は再定義可能な識別子に依存して、それらを特定する必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;誰かができるので&lt;/font&gt;&lt;/font&gt; &lt;code&gt;setTimeout&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使うべきではないという人々からの声は聞こえません&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bfd3b3048b2c1f2f0245b436f28c4c9b26ef014c" translate="yes" xml:space="preserve">
          <source>The window.undefined property is non-writable in all modern browsers (JavaScript 1.8.5 or later). From Mozilla's documentation: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&lt;/a&gt;, I see this: One reason to use typeof() is that it does not throw an error if the variable has not been defined.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;window.undefinedプロパティは、すべての最新ブラウザー（JavaScript 1.8.5以降）では書き込み不可です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mozillaのドキュメントから：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、私はこれを見ます：typeof（）を使用する1つの理由は、次の場合にエラーをスローしないことです変数が定義されていません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="81b8ff05913881cf785f1f4ff3dcde5d7a7a854e" translate="yes" xml:space="preserve">
          <source>Then @Anurag's answer will help:</source>
          <target state="translated">ならば、@Anuragさんの回答が参考になります。</target>
        </trans-unit>
        <trans-unit id="84ada2ed9ab8007c92500c35d67b1bd8e71005f9" translate="yes" xml:space="preserve">
          <source>This is compatible with newer and older browsers, alike, and cannot be overwritten like &lt;code&gt;window.undefined&lt;/code&gt; can in some cases.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは新旧のブラウザと互換性があり、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合によっては&lt;/font&gt;&lt;/font&gt; &lt;code&gt;window.undefined&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ように上書きできません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="11de9b9e81c934e545cf369d127de9791c657448" translate="yes" xml:space="preserve">
          <source>To catch whether or not that variable is declared or not, you may need to resort to the &lt;code&gt;in&lt;/code&gt; operator. (In many cases, you can simply read the code O_o).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その変数が宣言されているかどうかをキャッチするには、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;in&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;演算子&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用する必要がある場合があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（多くの場合、単にコードO_oを読み取ることができます）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f8a1667049e5062ddb5a52bb046a302072e2382" translate="yes" xml:space="preserve">
          <source>Update 2018-07-25</source>
          <target state="translated">更新 2018-07-25</target>
        </trans-unit>
        <trans-unit id="5db9fd1ef6221d091026d2663ba87630129e785c" translate="yes" xml:space="preserve">
          <source>User Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36</source>
          <target state="translated">ユーザーエージェント:Mozilla5.0 (Windows NT 10.0;Win64;x64)AppleWebKit537.36 (KHTML,like Gecko)Chrome67.0.3396.99 Safari537.36</target>
        </trans-unit>
        <trans-unit id="443ce1db6f78622870c189e2a5a80efde3bb98ef" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;typeof&lt;/code&gt; is my preference. It will work when the variable has never been declared, unlike any comparison with the &lt;code&gt;==&lt;/code&gt; or &lt;code&gt;===&lt;/code&gt; operators or type coercion using &lt;code&gt;if&lt;/code&gt;. (&lt;code&gt;undefined&lt;/code&gt;, unlike &lt;code&gt;null&lt;/code&gt;, may also be redefined in ECMAScript 3 environments, making it unreliable for comparison, although nearly all common environments now are compliant with ECMAScript 5 or above).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用するの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が私の好みです。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;演算子&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;との比較&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;や&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;if&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用した型強制&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;とは異なり、変数が宣言されていない&lt;/font&gt;&lt;/font&gt; &lt;code&gt;if&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;とは異なり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はECMAScript 3環境でも再定義される可能性があるため、比較の信頼性が低くなりますが、ほとんどすべての一般的な環境はECMAScript 5以降に準拠しています）。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="daadc88f50e351a260107dfbd04356a44100c7cf" translate="yes" xml:space="preserve">
          <source>Warning: Please note that &lt;code&gt;===&lt;/code&gt; is used over &lt;code&gt;==&lt;/code&gt; and that &lt;code&gt;myVar&lt;/code&gt; has been previously &lt;em&gt;declared&lt;/em&gt; (not &lt;em&gt;defined&lt;/em&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;警告：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; より&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も使用され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;myVar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は以前に&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;宣言&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;されている&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（未&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定義&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a035a07e35c35159e93d00b1a9a86853148672c2" translate="yes" xml:space="preserve">
          <source>What is the most appropriate way to test if a variable is undefined in JavaScript? I've seen several possible ways:</source>
          <target state="translated">JavaScriptで変数が未定義かどうかをテストする最も適切な方法は何ですか?いくつか考えられる方法を見てきました。</target>
        </trans-unit>
        <trans-unit id="da39f3e0fb541620dfcd1c9c11f29dd0c307de15" translate="yes" xml:space="preserve">
          <source>You can check the type of the variable:</source>
          <target state="translated">変数の型を確認することができます。</target>
        </trans-unit>
        <trans-unit id="034b751eaed396e9ec97fd4420584a5830149c00" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;typeof&lt;/code&gt;, like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ように&lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="071b92537c6143d60455c9758100443c10e7e3dd" translate="yes" xml:space="preserve">
          <source>because it fails and blows up in my face rather than silently passing/failing if x has not been declared before. This alerts me that x is not declared. I believe all variables used in JavaScript should be declared.</source>
          <target state="translated">なぜなら、xが以前に宣言されていない場合は、黙ってfailingを渡すのではなく、失敗して私の目の前で吹っ飛んでしまうからです。これは x が宣言されていないことを警告します。私は、JavaScriptで使用されるすべての変数は宣言されるべきだと考えています。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
