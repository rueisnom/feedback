<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/3390396">
    <body>
      <group id="3390396">
        <trans-unit id="036f9679a19a03925b061ea8fd132be088e7ea8a" translate="yes" xml:space="preserve">
          <source>(If you are still scared of &lt;code&gt;undefined&lt;/code&gt; being redefined, why are you blindly integrating untested library code into your code base? Or even simpler: a linting tool.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（如果您仍然担心&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;被重新定义，为什么要盲目地将未经测试的库代码集成到您的代码库中？或更简单的是：一种整理工具。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8380b58ae18915f7a471e4010665110260b1bee9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if (window.myVar)&lt;/code&gt; will also include these falsy values, so it's not very robust:</source>
          <target state="translated">&lt;code&gt;if (window.myVar)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;还将包含这些伪造的值，因此它不是很可靠：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9c0eca093d608d52888040610ad0fea09fe42fae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(Note that the use of &lt;code&gt;var&lt;/code&gt; for &lt;code&gt;in&lt;/code&gt; tests make a difference when in a scoped wrapper)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;（请注意，在范围内的包装器中， &lt;code&gt;in&lt;/code&gt; 测试中使用 &lt;code&gt;var&lt;/code&gt; 会有所不同）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="863e91564b01c84a7808a88c5ddf783197703de1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2020 Update&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2020更新&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7219b826595514574004d8c03bbfd3fb30ad514e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Original answer from 2010&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2010年的原始答案&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="610619cc11e3f0d3c676f106c2cfe06e49af51e2" translate="yes" xml:space="preserve">
          <source>Also, like the &lt;code&gt;typeof&lt;/code&gt; approach, this technique can &quot;detect&quot; undeclared variables:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;另外，像&lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法一样，此技术可以&amp;ldquo;检测&amp;rdquo;未声明的变量：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="63b964d88fc95bd706292cbaa247b9c16e2755e4" translate="yes" xml:space="preserve">
          <source>And results:</source>
          <target state="translated">和结果。</target>
        </trans-unit>
        <trans-unit id="c5e955c7a8e1fcb5bbc7691bf4dec9e562312c02" translate="yes" xml:space="preserve">
          <source>As @CMS pointed out, this has been patched in ECMAScript 5th ed., and &lt;code&gt;undefined&lt;/code&gt; is non-writable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正如@CMS所指出的，此问题已在ECMAScript第5版中进行了修补，并且&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是不可写的。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="891184fb51a72882eb0575630e1c6f88aafcabb6" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;typeof&lt;/code&gt; and &lt;code&gt;void&lt;/code&gt; were significantly faster than comparing directly against &lt;code&gt;undefined&lt;/code&gt;.  I used the following test format in the Chrome developer console:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;双方&lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;void&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;均显著快于直接针对比较&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我在Chrome开发者控制台中使用了以下测试格式：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f8f85e4ff5c950a4919ba8530c43aa65837031a8" translate="yes" xml:space="preserve">
          <source>Bottom line, the &quot;it can be redefined&quot; argument to not use a raw &lt;code&gt;=== undefined&lt;/code&gt; is bogus.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最重要的是，&amp;ldquo;可以重新定义&amp;rdquo;参数不使用原始&lt;/font&gt;&lt;/font&gt; &lt;code&gt;=== undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是伪造的。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac97dcc4e4ff3594aedc2d7087cff3fed316961a" translate="yes" xml:space="preserve">
          <source>But both these techniques leak in their abstraction. I urge you not to use this or even</source>
          <target state="translated">但这两种技术都是在抽象中泄漏的。我劝你不要用这种方法,甚至是</target>
        </trans-unit>
        <trans-unit id="9c4bab2499bacc0ba37f000beaf71f817e0234a7" translate="yes" xml:space="preserve">
          <source>But this may not be the intended result for some cases, since the variable or property was declared but just not initialized. Use the &lt;code&gt;in&lt;/code&gt; operator for a more robust check.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但这在某些情况下可能不是预期的结果，因为已声明但未初始化变量或属性。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;in&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运算符可以进行更强大的检查。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2cd895b9232cf916e72f7f58cb962500a1139395" translate="yes" xml:space="preserve">
          <source>But wait! There's more! What if some prototype chain magic is happening&amp;hellip;? Now even the superior &lt;code&gt;in&lt;/code&gt; operator does not suffice. (Okay, I'm done here about this part except to say that for 99% of the time, &lt;code&gt;=== undefined&lt;/code&gt; (and ****cough**** &lt;code&gt;typeof&lt;/code&gt;) works just fine. If you really care, you can read about this subject on its own.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可是等等！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;还有更多！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果某些原型链魔术正在发生&amp;hellip;&amp;hellip;该怎么办？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，即使是上级&lt;/font&gt;&lt;/font&gt; &lt;code&gt;in&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运营商是不够的。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（好，我在这里完成了这一部分，只是说在99％的时间里，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;=== undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（和**** cough **** &lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）都很好。如果您真的很在意，可以单独阅读此主题。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1daf4b17726ef0dab632dbab9c7df1fe0d5f44a0" translate="yes" xml:space="preserve">
          <source>Code for reference:</source>
          <target state="translated">代码供参考。</target>
        </trans-unit>
        <trans-unit id="75e291169a2ebb63c935a5de7382990c0513d618" translate="yes" xml:space="preserve">
          <source>Consider:</source>
          <target state="translated">Consider:</target>
        </trans-unit>
        <trans-unit id="e063b5c49b21cace8dccb290c9ce5c6adcd6b62c" translate="yes" xml:space="preserve">
          <source>Cool. I know this. Then again, most variables in Javascript can be redefined. Should you never use any built-in identifier that can be redefined?</source>
          <target state="translated">酷啊 我知道这一点。然后,再说一遍,Javascript中的大多数变量都是可以重新定义的。你永远不应该使用任何可以重新定义的内置标识符吗?</target>
        </trans-unit>
        <trans-unit id="9b738c26bdc79e4e3b044e9a0a99168e19631674" translate="yes" xml:space="preserve">
          <source>Direct comparisons against &lt;code&gt;undefined&lt;/code&gt; are troublesome as &lt;code&gt;undefined&lt;/code&gt; can be overwritten.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;直接比较&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非常麻烦，因为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可能会被覆盖。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6abe413a2e6b17508003e9e05c3f341cfabc0986" translate="yes" xml:space="preserve">
          <source>Even when I modified the tests to prevent Chrome from optimizing them away, the differences were insignificant.  As such, I'd now recommend &lt;code&gt;abc === undefined&lt;/code&gt; for clarity.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;即使我修改了测试以防止Chrome对其进行优化，两者之间的差异也很小。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为了清楚起见&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，我现在建议&lt;/font&gt;&lt;/font&gt; &lt;code&gt;abc === undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9090c046d1d7690edf12a4a7546ac6e90c5da28" translate="yes" xml:space="preserve">
          <source>Google Chrome: 67.0.3396.99 (Official Build) (64-bit) (cohort: Stable)</source>
          <target state="translated">谷歌浏览器:67.0.3396.99 (官方版本)(64位)(组队:稳定)</target>
        </trans-unit>
        <trans-unit id="0f5b9a21217a6bfc5056d59a0ebc370ace34dd13" translate="yes" xml:space="preserve">
          <source>How to check for “undefined” in JavaScript</source>
          <target state="translated">如何检查JavaScript中的 &quot;undefined&quot;?</target>
        </trans-unit>
        <trans-unit id="21bfdb58b5ccdc9d074abb97aed25029a77100a5" translate="yes" xml:space="preserve">
          <source>I do not like &lt;code&gt;typeof myVar === &quot;undefined&quot;&lt;/code&gt;. I think it is long winded and unnecessary. (I can get the same done in less code.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我不喜欢&lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof myVar === &quot;undefined&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我认为这是漫长而不必要的。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（我可以用更少的代码来完成相同的工作。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="837239f84c03db48b25cd02d54ccef8624219048" translate="yes" xml:space="preserve">
          <source>I personally use</source>
          <target state="translated">我个人用的是</target>
        </trans-unit>
        <trans-unit id="3a587a71145cb66dde25364482b235097ac53119" translate="yes" xml:space="preserve">
          <source>I prefer to have the approach of using</source>
          <target state="translated">我更喜欢采用的方法是</target>
        </trans-unit>
        <trans-unit id="f85e4ad7ecb33ce36e35b0511a305a408cc70a63" translate="yes" xml:space="preserve">
          <source>I use it as a function parameter and exclude it on function execution that way I get the &quot;real&quot; undefined. Although it does require you to put your code inside a function. I found this while reading the jQuery source.</source>
          <target state="translated">我把它作为一个函数参数,并在函数执行时将其排除,这样我就可以得到 &quot;真正的 &quot;未定义。虽然它确实需要你把你的代码放在一个函数里面。我在阅读jQuery的源码时发现了这个问题。</target>
        </trans-unit>
        <trans-unit id="78e7c4311b187a14063b76e8a907d67fcead4136" translate="yes" xml:space="preserve">
          <source>I've a variable name, but I am not sure if it is declared somewhere or not.</source>
          <target state="translated">我有一个变量名称,但我不确定它是否在哪里声明了。</target>
        </trans-unit>
        <trans-unit id="0961c0ef1f441777abe4f3f5150855d2b2b86ec4" translate="yes" xml:space="preserve">
          <source>If I forget to declare &lt;code&gt;myVar&lt;/code&gt; in my code, then I'll get &lt;code&gt;myVar is not defined&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果我忘记&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在代码中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明&lt;/font&gt;&lt;/font&gt; &lt;code&gt;myVar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，那么我将得到&lt;/font&gt;&lt;/font&gt; &lt;code&gt;myVar is not defined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d207dcda0acbda834e73b38bbe24319219b7380d" translate="yes" xml:space="preserve">
          <source>If it is undefined, it will not be equal to a string that contains the characters &quot;undefined&quot;, as the string is not undefined.</source>
          <target state="translated">如果是未定义的,它将不等于包含 &quot;未定义 &quot;字符的字符串,因为该字符串不是未定义的。</target>
        </trans-unit>
        <trans-unit id="8b444c05d69df48afc81e4a4c28f760d933ecf18" translate="yes" xml:space="preserve">
          <source>If you are interested in finding out whether a variable has been declared regardless of its value, then using the &lt;code&gt;in&lt;/code&gt; operator is the safest way to go. Consider this example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您有兴趣查找变量是否已声明而无论其值如何，那么使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;in&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运算符是最安全的方法。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;考虑以下示例：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dccb6f93c99ea2e5d53ad54fe01f5209d66b8b51" translate="yes" xml:space="preserve">
          <source>If you are interested in knowing whether the variable hasn't been declared or has the value &lt;code&gt;undefined&lt;/code&gt;, then use the &lt;code&gt;typeof&lt;/code&gt; operator, which is guaranteed to return a string:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您想知道变量是否尚未声明或值是否为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，请使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运算符，该运算符可确保返回字符串：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8524101bb6147c315f60a2c545ded3897121ed58" translate="yes" xml:space="preserve">
          <source>If you follow this rule, good for you: you aren't a hypocrite.</source>
          <target state="translated">如果你遵守这个规则,对你有好处:你不是一个伪君子。</target>
        </trans-unit>
        <trans-unit id="b9cc616779f14ef3d7fe3cc7f1ba7a78ed0139f5" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;http://flippinawesome.org/2013/12/09/exploring-the-abyss-of-null-and-undefined-in-javascript/&quot;&gt;this article&lt;/a&gt; I read that frameworks like &lt;a href=&quot;https://en.wikipedia.org/wiki/Underscore.js&quot;&gt;Underscore.js&lt;/a&gt; use this function:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://flippinawesome.org/2013/12/09/exploring-the-abyss-of-null-and-undefined-in-javascript/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这篇文章中&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我读到这样的框架&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Underscore.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Underscore.js&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用此功能：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9d707e91fdd06ca21ae1620197a60f887de79e70" translate="yes" xml:space="preserve">
          <source>In Google Chrome, the following was ever so slightly faster than a &lt;code&gt;typeof&lt;/code&gt; test:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在Google Chrome浏览器中，以下内容比&lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;测试&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要快得多&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f47bc0504968198e7a9aad9fead17f55b1479bec" translate="yes" xml:space="preserve">
          <source>It's been nearly five years since this post was first made, and JavaScript has come a long way.  In repeating the tests in the original post, I found no consistent difference between the following test methods:</source>
          <target state="translated">从发这个帖子到现在已经快5年了,JavaScript已经走过了很长的路。在重复原帖的测试中,我发现下面的测试方法没有一致的区别。</target>
        </trans-unit>
        <trans-unit id="6e25cd0cbb467e4367475caa7430a3a6caa8db70" translate="yes" xml:space="preserve">
          <source>JavaScript: V8 6.7.288.46</source>
          <target state="translated">JavaScript。V8 6.7.288.46</target>
        </trans-unit>
        <trans-unit id="3c27b4f37b8b28f0fa4dc3a2ed1f2c54995c3f68" translate="yes" xml:space="preserve">
          <source>Let's take a real example:</source>
          <target state="translated">我们来举个真实的例子。</target>
        </trans-unit>
        <trans-unit id="a4e0282b3c094f4a7692b78292d7eb02ee73b487" translate="yes" xml:space="preserve">
          <source>Note that strict comparison (&lt;code&gt;!==&lt;/code&gt;) is not necessary in this case, since &lt;code&gt;typeof&lt;/code&gt; will always return a string.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请注意，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在这种情况下，不必进行&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;严格比较（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;!==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;），因为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将始终返回字符串。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f102acbfa4bc49aa9a7a3cbadc4d73217724fd9" translate="yes" xml:space="preserve">
          <source>Note that the first row is in &lt;em&gt;milli&lt;/em&gt;seconds, while the second row is in &lt;em&gt;nano&lt;/em&gt;seconds.  A difference of 3.4 nanoseconds is nothing.  The times were pretty consistent in subsequent tests.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请注意，第一行以&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;毫秒为&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;单位，而第二行以&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;纳秒为&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;单位。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相差3.4纳秒没什么。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在随后的测试中，时间是相当一致的。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fdffad749a6f7e578c7918e1cd12c8d2ef8e8594" translate="yes" xml:space="preserve">
          <source>Now some people will keel over in pain when they read this, screaming: &quot;Wait! WAAITTT!!! &lt;code&gt;undefined&lt;/code&gt; can be redefined!&quot;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，有些人在读这篇文章时会痛苦地大叫：&amp;ldquo;等等！WAAITTT !!! &lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以重新定义！&amp;rdquo;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="44a646f251727768fe37e510f39a7644777f4383" translate="yes" xml:space="preserve">
          <source>OS: Windows</source>
          <target state="translated">操作系统:Windows</target>
        </trans-unit>
        <trans-unit id="9a91bdb65f4e452ba390a53e3070e0bf039376b7" translate="yes" xml:space="preserve">
          <source>Of course you could just use &lt;code&gt;typeof&lt;/code&gt; though. But all my code is usually inside a containing function anyways, so using this method probably saves me a few bytes here and there.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当然，您可以只使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是无论如何，我的所有代码通常通常都包含在一个包含函数中，因此使用此方法可能会在这里和那里节省一些字节。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6cdba8a15ae46ecace67ac22308d0e62822c60df" translate="yes" xml:space="preserve">
          <source>On the contrary of @Thomas Eding answer:</source>
          <target state="translated">与@Thomas Eding的回答相反。</target>
        </trans-unit>
        <trans-unit id="e9255449decece5c678359f4160f8daf8c1f4e50" translate="yes" xml:space="preserve">
          <source>One of my reasons for preferring a &lt;code&gt;typeof&lt;/code&gt; check (namely, that &lt;code&gt;undefined&lt;/code&gt; can be redefined) became irrelevant with the mass adoption of ECMAScript 5. The other, that you can use &lt;code&gt;typeof&lt;/code&gt; to check the type of an undeclared variable, was always niche. Therefore, I'd now recommend using a direct comparison in most situations:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我偏爱&lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;检查（即&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以重新定义&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;原因之一&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;与ECMAScript 5的大量采用无关。另一个原因是，您可以使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来检查未声明变量的类型，这一直都是利基。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，我现在建议在大多数情况下使用直接比较：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e72184f55cc026514b7160d78c3c5aef63c2a050" translate="yes" xml:space="preserve">
          <source>Or</source>
          <target state="translated">Or</target>
        </trans-unit>
        <trans-unit id="5d84c0fac9c1e813f54dc6ba7a9c0add32f74381" translate="yes" xml:space="preserve">
          <source>Original post 2013-11-01</source>
          <target state="translated">原帖 2013-11-01</target>
        </trans-unit>
        <trans-unit id="ae72b6dfe2307a3bfaab883fe06620341efa6b9f" translate="yes" xml:space="preserve">
          <source>Personally, I always use the following:</source>
          <target state="translated">就我个人而言,我一直用的是以下几种。</target>
        </trans-unit>
        <trans-unit id="b8513c68f2b3ffd84a63bbda4036432a9ed705bf" translate="yes" xml:space="preserve">
          <source>Relevant content from &lt;code&gt;chrome://version&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;chrome://version&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相关内容&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0cc2125dad04fd7cf13e20fcbf9a61af6e47b00e" translate="yes" xml:space="preserve">
          <source>Revision: a337fbf3c2ab8ebc6b64b0bfdce73a20e2e2252b-refs/branch-heads/3396@{#790}</source>
          <target state="translated">修订版:a337fbf3c2ab8ebc6b64b0bfdce73a20e2e2252b-refsbranch-heads3396@{#790}</target>
        </trans-unit>
        <trans-unit id="ea12f21322093c973aa3aa61d719da7c057265d3" translate="yes" xml:space="preserve">
          <source>Since none of the other answers helped me, I suggest doing this. It worked for me in Internet&amp;nbsp;Explorer&amp;nbsp;8:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;既然没有其他答案对我有帮助，我建议您这样做。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它在Internet Explorer 8中对我有用：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="141f21882b084552acee073fca83c3cc0c42e7c8" translate="yes" xml:space="preserve">
          <source>Some scenarios illustrating the results of the various answers:
&lt;a href=&quot;http://jsfiddle.net/drzaus/UVjM4/&quot;&gt;http://jsfiddle.net/drzaus/UVjM4/&lt;/a&gt;</source>
          <target state="translated">一些场景说明了各种答案的结果： &lt;a href=&quot;http://jsfiddle.net/drzaus/UVjM4/&quot;&gt;http&lt;/a&gt; : //jsfiddle.net/drzaus/UVjM4/</target>
        </trans-unit>
        <trans-unit id="e5cb351dceddd5a6638fdb2ec96b65c236b7419f" translate="yes" xml:space="preserve">
          <source>Sometimes you don't even have to check the type. If the value of the variable can't evaluate to false when it's set (for example if it's a function), then you can just evalue the variable. Example:</source>
          <target state="translated">有时候,你甚至不需要检查类型。如果变量的值在被设置时不能赋值为false(例如,如果它是一个函数),那么你可以直接对变量进行赋值。举例说明。</target>
        </trans-unit>
        <trans-unit id="86035bde0e6218c029d17172912dcf56857f9c98" translate="yes" xml:space="preserve">
          <source>Thanks to @CMS for pointing out that your third case - &lt;code&gt;if (myVariable)&lt;/code&gt; can also throw an error in two cases. The first is when the variable hasn't been defined which throws a &lt;code&gt;ReferenceError&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;感谢@CMS指出您的第三种情况&lt;/font&gt;&lt;/font&gt; &lt;code&gt;if (myVariable)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在两种情况下也会引发错误。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;第一个是未定义变量时抛出&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ReferenceError&lt;/code&gt; 的情况&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="18d6e1e8a8cde5e712ea840cf732ba15e21b1ee3" translate="yes" xml:space="preserve">
          <source>The difference was negligible.  However, this code is more concise, and clearer at a glance to someone who knows what &lt;code&gt;void 0&lt;/code&gt; means. Note, however, that &lt;code&gt;abc&lt;/code&gt;&lt;strong&gt;must still be declared&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;差异可忽略不计。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，此代码更简洁，对于知道&lt;/font&gt;&lt;/font&gt; &lt;code&gt;void 0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;意味着&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;什么的人来说一目了然&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是请注意，&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仍然必须声明&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt; &lt;code&gt;abc&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9df62aecb43a62a0df7a083b2a87f852726763be" translate="yes" xml:space="preserve">
          <source>The most reliable way I know of checking for &lt;code&gt;undefined&lt;/code&gt; is to use &lt;code&gt;void 0&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我知道检查&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的最可靠方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;void 0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa600fe1d12288ee250c04283a672496e70f9065" translate="yes" xml:space="preserve">
          <source>The other case is when the variable has been defined, but has a getter function which throws an error when invoked. For example,</source>
          <target state="translated">另一种情况是当变量已经定义好了,但有一个getter函数,在调用时抛出一个错误。比如说。</target>
        </trans-unit>
        <trans-unit id="c2945db92377c52a57faa70915c7d63fd6280394" translate="yes" xml:space="preserve">
          <source>The results were as follows:</source>
          <target state="translated">结果如下:</target>
        </trans-unit>
        <trans-unit id="7d71b72f466baa4d447bb0c8c1550436347d31bf" translate="yes" xml:space="preserve">
          <source>The thing is, in order to do lots of real work in JS, developers need to rely on redefinable identifiers to be what they are. I don't hear people telling me that I shouldn't use &lt;code&gt;setTimeout&lt;/code&gt; because someone can</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;事实是，为了在JS中完成大量实际工作，开发人员需要依靠可重定义的标识符来实现它们。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我没有听到有人告诉我我不应该使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;setTimeout&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因为有人可以&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bfd3b3048b2c1f2f0245b436f28c4c9b26ef014c" translate="yes" xml:space="preserve">
          <source>The window.undefined property is non-writable in all modern browsers (JavaScript 1.8.5 or later). From Mozilla's documentation: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&lt;/a&gt;, I see this: One reason to use typeof() is that it does not throw an error if the variable has not been defined.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在所有现代浏览器（JavaScript 1.8.5或更高版本）中，window.undefined属性都是不可写的。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从Mozilla的文档中：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，我看到了：使用typeof（）的一个原因是，如果出现以下情况，它不会引发错误：该变量尚未定义。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="81b8ff05913881cf785f1f4ff3dcde5d7a7a854e" translate="yes" xml:space="preserve">
          <source>Then @Anurag's answer will help:</source>
          <target state="translated">那么@Anurag的回答就能帮到你了。</target>
        </trans-unit>
        <trans-unit id="84ada2ed9ab8007c92500c35d67b1bd8e71005f9" translate="yes" xml:space="preserve">
          <source>This is compatible with newer and older browsers, alike, and cannot be overwritten like &lt;code&gt;window.undefined&lt;/code&gt; can in some cases.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这与新旧浏览器兼容，并且不能像&lt;/font&gt;&lt;/font&gt; &lt;code&gt;window.undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这样覆盖&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="11de9b9e81c934e545cf369d127de9791c657448" translate="yes" xml:space="preserve">
          <source>To catch whether or not that variable is declared or not, you may need to resort to the &lt;code&gt;in&lt;/code&gt; operator. (In many cases, you can simply read the code O_o).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要了解是否声明了该变量，您可能需要求助于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;in&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运算符。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（在许多情况下，您可以简单地读取代码O_o）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f8a1667049e5062ddb5a52bb046a302072e2382" translate="yes" xml:space="preserve">
          <source>Update 2018-07-25</source>
          <target state="translated">2018-07-25更新</target>
        </trans-unit>
        <trans-unit id="5db9fd1ef6221d091026d2663ba87630129e785c" translate="yes" xml:space="preserve">
          <source>User Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36</source>
          <target state="translated">用户代理:Mozilla5.0 (Windows NT 10.0;Win64;x64)AppleWebKit537.36 (KHTML,如Gecko)Chrome67.0.3396.99 Safari537.36</target>
        </trans-unit>
        <trans-unit id="443ce1db6f78622870c189e2a5a80efde3bb98ef" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;typeof&lt;/code&gt; is my preference. It will work when the variable has never been declared, unlike any comparison with the &lt;code&gt;==&lt;/code&gt; or &lt;code&gt;===&lt;/code&gt; operators or type coercion using &lt;code&gt;if&lt;/code&gt;. (&lt;code&gt;undefined&lt;/code&gt;, unlike &lt;code&gt;null&lt;/code&gt;, may also be redefined in ECMAScript 3 environments, making it unreliable for comparison, although nearly all common environments now are compliant with ECMAScript 5 or above).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我喜欢&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当从未声明变量时，它将起作用，这与与&lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运算符进行&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;任何比较，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;if&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;强制输入类型进行比较&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不同于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它也可以在ECMAScript 3环境中重新定义，因此比较起来不可靠，尽管现在几乎所有常见环境都符合ECMAScript 5或更高版本。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="daadc88f50e351a260107dfbd04356a44100c7cf" translate="yes" xml:space="preserve">
          <source>Warning: Please note that &lt;code&gt;===&lt;/code&gt; is used over &lt;code&gt;==&lt;/code&gt; and that &lt;code&gt;myVar&lt;/code&gt; has been previously &lt;em&gt;declared&lt;/em&gt; (not &lt;em&gt;defined&lt;/em&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;警告：请注意，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;myVar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，并且&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;myVar&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;先前已&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;未定义&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a035a07e35c35159e93d00b1a9a86853148672c2" translate="yes" xml:space="preserve">
          <source>What is the most appropriate way to test if a variable is undefined in JavaScript? I've seen several possible ways:</source>
          <target state="translated">在JavaScript中测试一个变量是否未定义,最合适的方法是什么?我看到过几种可能的方法。</target>
        </trans-unit>
        <trans-unit id="da39f3e0fb541620dfcd1c9c11f29dd0c307de15" translate="yes" xml:space="preserve">
          <source>You can check the type of the variable:</source>
          <target state="translated">你可以检查变量的类型。</target>
        </trans-unit>
        <trans-unit id="034b751eaed396e9ec97fd4420584a5830149c00" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;typeof&lt;/code&gt;, like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，如下所示：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="071b92537c6143d60455c9758100443c10e7e3dd" translate="yes" xml:space="preserve">
          <source>because it fails and blows up in my face rather than silently passing/failing if x has not been declared before. This alerts me that x is not declared. I believe all variables used in JavaScript should be declared.</source>
          <target state="translated">因为如果x之前没有被声明过,它就会失败并在我的脸上炸开,而不是默默地通过failing。这提醒我,x没有声明。我认为在JavaScript中使用的所有变量都应该被声明。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
