<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/332365">
    <body>
      <group id="332365">
        <trans-unit id="f5dccbefc9eb641263e9035c2feacfbb42ddecab" translate="yes" xml:space="preserve">
          <source>' )</source>
          <target state="translated">' )</target>
        </trans-unit>
        <trans-unit id="a0f651cde227a7b6a2f745cc1abcae1e478af7dd" translate="yes" xml:space="preserve">
          <source>(&lt;em&gt;All code examples in this answer were run on a PostgreSQL 9.1.2 database server.&lt;/em&gt;)</source>
          <target state="translated">( &lt;em&gt;Todos los ejemplos de c&amp;oacute;digo en esta respuesta se ejecutaron en un servidor de base de datos PostgreSQL 9.1.2&lt;/em&gt; ) &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2e2f5034350c8def8869f07ee89d9d21bf27cfa2" translate="yes" xml:space="preserve">
          <source>(for example) to add the new student, where the &lt;code&gt;$xxx&lt;/code&gt; variable contents was taken directly out of an HTML form, without checking format nor escaping special characters.</source>
          <target state="translated">(por ejemplo) para agregar el nuevo alumno, donde el contenido de la variable &lt;code&gt;$xxx&lt;/code&gt; se tom&amp;oacute; directamente de un formulario HTML, sin verificar el formato ni escapar caracteres especiales.</target>
        </trans-unit>
        <trans-unit id="fdfe2e70fde31449eb3c2bab22ca555028d85e07" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(Source: &lt;a href=&quot;https://xkcd.com/327/&quot;&gt;https://xkcd.com/327/&lt;/a&gt;)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(Fuente: &lt;a href=&quot;https://xkcd.com/327/&quot;&gt;https://xkcd.com/327/&lt;/a&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="22e2aaa76f874c66b707cacfaa9f76f22b05d735" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;It drops the students table.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Se cae la mesa de los alumnos.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7df5880bf1ba6e654e04c1e22cc8c944922f40cc" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;sup&gt;Edited &lt;strong&gt;&lt;em&gt;again&lt;/em&gt;&lt;/strong&gt; as per &lt;a href=&quot;https://stackoverflow.com/users/287586/dan04&quot;&gt;dan04&lt;/a&gt;'s astute comment&lt;/sup&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;sup&gt;Editado &lt;strong&gt;&lt;em&gt;nuevamente&lt;/em&gt;&lt;/strong&gt; seg&amp;uacute;n el astuto comentario de &lt;a href=&quot;https://stackoverflow.com/users/287586/dan04&quot;&gt;dan04&lt;/a&gt;&lt;/sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="bb625ab0058fc67ab4b565ae8d8e1039f625de02" translate="yes" xml:space="preserve">
          <source>A single quote is the start and end of a string. A semicolon is the end of a statement. So if they were doing a select like this:</source>
          <target state="translated">Una sola cita es el principio y el final de una cadena.Un punto y coma es el final de una declaración.Así que si estuvieran haciendo una selección como esta:</target>
        </trans-unit>
        <trans-unit id="019a59a22cb46f0149dfc5d8931593e59be710d8" translate="yes" xml:space="preserve">
          <source>Add a new record to the Students table with a Name value of 'Robert'</source>
          <target state="translated">Añade un nuevo registro a la tabla de estudiantes con un valor de nombre de 'Robert'.</target>
        </trans-unit>
        <trans-unit id="9fc8a6c3ef2f442e2ab6de0ab4090a41c331c51f" translate="yes" xml:space="preserve">
          <source>After the values from the first name, middle name textbox &lt;em&gt;FNMName.Text&lt;/em&gt; (which is &lt;code&gt;Robert'); DROP TABLE STUDENTS; --&lt;/code&gt;) and the last name textbox &lt;em&gt;LName.Text&lt;/em&gt; (let's call it &lt;code&gt;Derper&lt;/code&gt;) are concatenated with the rest of the query, the result is now actually &lt;em&gt;two queries&lt;/em&gt; separated by the &lt;a href=&quot;http://en.wikipedia.org/wiki/SQL#Language_elements&quot;&gt;statement terminator&lt;/a&gt; (semicolon).  The second query has been &lt;strong&gt;injected&lt;/strong&gt; into the first.  When the code executes this query against the database, it will look like this</source>
          <target state="translated">Despu&amp;eacute;s de los valores del primer nombre, cuadro de texto del segundo nombre &lt;em&gt;FNMName.Text&lt;/em&gt; (que es &lt;code&gt;Robert'); DROP TABLE STUDENTS; --&lt;/code&gt; ESTUDIANTES DE CUADRO - ) y el cuadro de texto de apellido &lt;em&gt;LName.Text&lt;/em&gt; (llam&amp;eacute;moslo &lt;code&gt;Derper&lt;/code&gt; ) se concatenan con el resto de la consulta, el resultado ahora es en realidad &lt;em&gt;dos consultas&lt;/em&gt; separadas por el &lt;a href=&quot;http://en.wikipedia.org/wiki/SQL#Language_elements&quot;&gt;terminador de sentencia&lt;/a&gt; (punto y coma). La segunda consulta se ha &lt;strong&gt;inyectado&lt;/strong&gt; en la primera. Cuando el c&amp;oacute;digo ejecuta esta consulta en la base de datos, se ver&amp;aacute; as&amp;iacute;</target>
        </trans-unit>
        <trans-unit id="131934a34697f59c9b548cee1ee07df44489f026" translate="yes" xml:space="preserve">
          <source>And someone enters the name &lt;code&gt;Robert'); DROP TABLE STUDENTS; --&lt;/code&gt;</source>
          <target state="translated">Y alguien ingresa el nombre &lt;code&gt;Robert'); DROP TABLE STUDENTS; --&lt;/code&gt; ESTUDIANTES DE TABLA DE GOTA; -</target>
        </trans-unit>
        <trans-unit id="b200166f579d9d7d277600fbbc63e5e7c3c3bd94" translate="yes" xml:space="preserve">
          <source>As everyone else has pointed out already, the &lt;code&gt;');&lt;/code&gt; closes the original statement and then a second statement follows. Most frameworks, including languages like PHP, have default security settings by now that don't allow multiple statements in one SQL string. In PHP, for example, you can only run multiple statements in one SQL string by using the &lt;code&gt;mysqli_multi_query&lt;/code&gt; function.</source>
          <target state="translated">Como todos los dem&amp;aacute;s ya han se&amp;ntilde;alado, el &lt;code&gt;');&lt;/code&gt; cierra la declaraci&amp;oacute;n original y luego sigue una segunda declaraci&amp;oacute;n. La mayor&amp;iacute;a de los marcos, incluidos los lenguajes como PHP, tienen configuraciones de seguridad predeterminadas que no permiten m&amp;uacute;ltiples sentencias en una cadena SQL. En PHP, por ejemplo, solo puede ejecutar varias declaraciones en una cadena SQL utilizando la funci&amp;oacute;n &lt;code&gt;mysqli_multi_query&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa7e84b685e35609e43c1cebf379c461d7c891aa" translate="yes" xml:space="preserve">
          <source>As noted by the XKCD comic, one way of protecting against SQL injection attacks is to sanitize database inputs, such as by escaping special characters, so that they cannot modify the underlying SQL command and therefore cannot cause execution of arbitrary SQL code.  If you use parameterized queries, such as by using &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/yy6y35y8.aspx&quot;&gt;&lt;code&gt;SqlParameter&lt;/code&gt;&lt;/a&gt; in ADO.NET, the input will, at minimum, be automatically sanitized to guard against SQL injection.</source>
          <target state="translated">Como se&amp;ntilde;al&amp;oacute; el c&amp;oacute;mic XKCD, una forma de protegerse contra los ataques de inyecci&amp;oacute;n SQL es desinfectar las entradas de la base de datos, como escapar caracteres especiales, para que no puedan modificar el comando SQL subyacente y, por lo tanto, no puedan causar la ejecuci&amp;oacute;n de c&amp;oacute;digo SQL arbitrario. Si utiliza consultas parametrizadas, como mediante el uso de &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/yy6y35y8.aspx&quot;&gt; &lt;code&gt;SqlParameter&lt;/code&gt; &lt;/a&gt; en ADO.NET, la entrada, como m&amp;iacute;nimo, se desinfectar&amp;aacute; autom&amp;aacute;ticamente para evitar la inyecci&amp;oacute;n de SQL.</target>
        </trans-unit>
        <trans-unit id="87829ea42fc70807b5291e8b0b9f0e46c8bca893" translate="yes" xml:space="preserve">
          <source>But a clever user can supply whatever they want:</source>
          <target state="translated">Pero un usuario inteligente puede suministrar lo que quiera:</target>
        </trans-unit>
        <trans-unit id="ce2f5da38f14260cb520df0b6cf6ea2e91248b7c" translate="yes" xml:space="preserve">
          <source>Delete the Students table</source>
          <target state="translated">Eliminar la mesa de los estudiantes</target>
        </trans-unit>
        <trans-unit id="c5a98777d68005235e5c5992186f39d71f52499d" translate="yes" xml:space="preserve">
          <source>Everything past the second query is &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms181627.aspx&quot;&gt;marked as a comment&lt;/a&gt;:  &lt;code&gt;--', 'Derper')&lt;/code&gt;</source>
          <target state="translated">Todo lo que haya pasado la segunda consulta se &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms181627.aspx&quot;&gt;marca como un comentario&lt;/a&gt; : &lt;code&gt;--', 'Derper')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f33300310e5de518f91c41d40a5ef517fad1fdfe" translate="yes" xml:space="preserve">
          <source>Everything's fine. Now imagine you provide this string as the password:</source>
          <target state="translated">Todo está bien.Ahora imagina que proporcionas esta cadena como la contraseña:</target>
        </trans-unit>
        <trans-unit id="c187e1d066434050adebcb225730c5347293b540" translate="yes" xml:space="preserve">
          <source>Example of PHP vulnerable code using PDO:</source>
          <target state="translated">Ejemplo de código vulnerable de PHP usando PDO:</target>
        </trans-unit>
        <trans-unit id="26ed4305eca2e4ca311ed3cb1f6c8de24c1bae8b" translate="yes" xml:space="preserve">
          <source>FWIW, I also think the comic in question has an important detail wrong: if you're thinking about &lt;em&gt;sanitizing&lt;/em&gt; your database inputs, as the comic suggests, you're still doing it wrong. Instead, you should think in terms of &lt;em&gt;quarantining&lt;/em&gt; your database inputs, and the correct way to do this is via parameterized queries.</source>
          <target state="translated">FWIW, tambi&amp;eacute;n creo que el c&amp;oacute;mic en cuesti&amp;oacute;n tiene un detalle importante incorrecto: si est&amp;aacute; pensando en &lt;em&gt;desinfectar las&lt;/em&gt; entradas de su base de datos, como sugiere el c&amp;oacute;mic, todav&amp;iacute;a lo est&amp;aacute; haciendo mal. En cambio, debe pensar en t&amp;eacute;rminos de &lt;em&gt;poner&lt;/em&gt; en &lt;em&gt;cuarentena las&lt;/em&gt; entradas de su base de datos, y la forma correcta de hacerlo es mediante consultas parametrizadas.</target>
        </trans-unit>
        <trans-unit id="8379d9d413b61d4aa6abb0ecd900209b2ade4480" translate="yes" xml:space="preserve">
          <source>How does the SQL injection from the “Bobby Tables” XKCD comic work</source>
          <target state="translated">¿Cómo funciona la inyección SQL del cómic XKCD &quot;Tablas de Bobby&quot;?</target>
        </trans-unit>
        <trans-unit id="7764fec83ece4bf060d4c0efc0b3928e567ed559" translate="yes" xml:space="preserve">
          <source>However, sanitizing inputs at the application level may not stop more advanced SQL injection techniques. For example, &lt;a href=&quot;https://stackoverflow.com/questions/5741187/sql-injection-that-gets-around-mysql-real-escape-string&quot;&gt;there are ways to circumvent the &lt;code&gt;mysql_real_escape_string&lt;/code&gt; PHP function&lt;/a&gt;. For added protection, many database systems support &lt;a href=&quot;https://en.wikipedia.org/wiki/Prepared_statement&quot;&gt;&lt;em&gt;prepared statements&lt;/em&gt;&lt;/a&gt;. If properly implemented in the backend, prepared statements can make SQL injection impossible by treating data inputs as semantically separate from the rest of the command.</source>
          <target state="translated">Sin embargo, las entradas de desinfecci&amp;oacute;n a nivel de aplicaci&amp;oacute;n pueden no detener las t&amp;eacute;cnicas de inyecci&amp;oacute;n SQL m&amp;aacute;s avanzadas. Por ejemplo, &lt;a href=&quot;https://stackoverflow.com/questions/5741187/sql-injection-that-gets-around-mysql-real-escape-string&quot;&gt;hay formas de eludir la funci&amp;oacute;n PHP &lt;code&gt;mysql_real_escape_string&lt;/code&gt; &lt;/a&gt; . Para mayor protecci&amp;oacute;n, muchos sistemas de bases de datos admiten &lt;a href=&quot;https://en.wikipedia.org/wiki/Prepared_statement&quot;&gt;&lt;em&gt;declaraciones preparadas&lt;/em&gt;&lt;/a&gt; . Si se implementa correctamente en el backend, las declaraciones preparadas pueden hacer que la inyecci&amp;oacute;n de SQL sea imposible al tratar las entradas de datos como sem&amp;aacute;nticamente separadas del resto del comando.</target>
        </trans-unit>
        <trans-unit id="9c5cfce95e395b48a50005b91951a8e612e3b5b9" translate="yes" xml:space="preserve">
          <source>I know both &lt;code&gt;'&lt;/code&gt; and &lt;code&gt;--&lt;/code&gt; are for comments, but doesn't the word &lt;code&gt;DROP&lt;/code&gt; get commented as well since it is part of the same line?</source>
          <target state="translated">S&amp;eacute; que ambos y &lt;code&gt;--&lt;/code&gt; son para comentarios, pero &amp;iquest;no se comenta tambi&amp;eacute;n la palabra &lt;code&gt;DROP&lt;/code&gt; ya que es parte de la misma l&amp;iacute;nea?</target>
        </trans-unit>
        <trans-unit id="a604718c1a9d707cb8e65adc266b636e6570cdff" translate="yes" xml:space="preserve">
          <source>INSERT INTO Students VALUES ( '</source>
          <target state="translated">INSERTAR EN LOS VALORES DE LOS ESTUDIANTES('</target>
        </trans-unit>
        <trans-unit id="461191a3dafd5a83379f796a40bfa1b1193c6cd3" translate="yes" xml:space="preserve">
          <source>If student_name is the one given, that does the selection with the name &quot;Robert&quot; and then drops the table.  The &quot;-- &quot; part changes the rest of the given query into a comment.</source>
          <target state="translated">Si el nombre del estudiante es el que se da,eso hace la selección con el nombre &quot;Robert&quot; y luego deja caer la tabla.La parte &quot;--&quot; cambia el resto de la consulta dada en un comentario.</target>
        </trans-unit>
        <trans-unit id="139dafd9d52972e29c58ae782bf096e4a550dcc5" translate="yes" xml:space="preserve">
          <source>If you provide &lt;code&gt;peter&lt;/code&gt; as the username and &lt;code&gt;secret&lt;/code&gt; as the password, the resulting SQL string would look like this:</source>
          <target state="translated">Si proporciona &lt;code&gt;peter&lt;/code&gt; como nombre de usuario y &lt;code&gt;secret&lt;/code&gt; o como contrase&amp;ntilde;a, la cadena SQL resultante se ver&amp;iacute;a as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="9bdf72b4d7e09fec8b6e948d4c391a1889ecf5d9" translate="yes" xml:space="preserve">
          <source>In this case, ' is not a comment character.  It's used to delimit string literals.  The comic artist is banking on the idea that the school in question has dynamic sql somewhere that looks something like this:</source>
          <target state="translated">En este caso,no es un personaje de comentario.Se usa para delimitar los literales de la cadena.El dibujante de cómics se basa en la idea de que la escuela en cuestión tiene un cuadrado dinámico en algún lugar que se parece a esto:</target>
        </trans-unit>
        <trans-unit id="19c6a7a74341e9efe95de0fdb1852846d3f4021e" translate="yes" xml:space="preserve">
          <source>It's important to notice that during the &lt;code&gt;INSERT&lt;/code&gt; operation the application isn't checking the input for any special characters, and is therefore allowing arbitrary input to be entered into the SQL command. This means that a malicious user can insert, into a field normally intended for user input, special symbols such as quotes along with arbitrary SQL code to cause the database system to execute it, hence &lt;a href=&quot;http://en.wikipedia.org/wiki/SQL_injection&quot;&gt;SQL&amp;nbsp;&lt;em&gt;injection&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">Es importante tener en cuenta que durante la operaci&amp;oacute;n &lt;code&gt;INSERT&lt;/code&gt; la aplicaci&amp;oacute;n no verifica la entrada de caracteres especiales y, por lo tanto, permite la entrada arbitraria en el comando SQL. Esto significa que un usuario malintencionado puede insertar, en un campo normalmente destinado a la entrada del usuario, s&amp;iacute;mbolos especiales como comillas junto con un c&amp;oacute;digo SQL arbitrario para hacer que el sistema de base de datos lo ejecute, por lo tanto, la &lt;a href=&quot;http://en.wikipedia.org/wiki/SQL_injection&quot;&gt;&lt;em&gt;inyecci&amp;oacute;n&lt;/em&gt; SQL&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a912262d2aa40547772a8e800c0f213bec8d8d54" translate="yes" xml:space="preserve">
          <source>Just looking at:</source>
          <target state="translated">Sólo miraba:</target>
        </trans-unit>
        <trans-unit id="49aa9e517ee2cc59732b724e9ab3b7522a1ed9ce" translate="yes" xml:space="preserve">
          <source>Let's assume the application uses the following SQL to insert data into the table:</source>
          <target state="translated">Supongamos que la aplicación utiliza el siguiente SQL para insertar datos en la tabla:</target>
        </trans-unit>
        <trans-unit id="30b44dcf7150c4c363ba1edcf66e4cf3db5207e2" translate="yes" xml:space="preserve">
          <source>Let's say the name was used in a variable, &lt;code&gt;$Name&lt;/code&gt;.  You then run this query:</source>
          <target state="translated">Digamos que el nombre se us&amp;oacute; en una variable, &lt;code&gt;$Name&lt;/code&gt; . Luego ejecuta esta consulta:</target>
        </trans-unit>
        <trans-unit id="8d860cdc3777611007e2d6ff4d20e28c2a6d7ead" translate="yes" xml:space="preserve">
          <source>Mmm, I am too slow, I see already 8 answers before mine in the orange band... :-) A popular topic, it seems.</source>
          <target state="translated">Mmm,soy demasiado lento,ya veo 8 respuestas antes que la mía en la banda naranja...:-)Un tema popular,parece.</target>
        </trans-unit>
        <trans-unit id="d91e053c54896e652403b7bc76d0d5c47b82c0e8" translate="yes" xml:space="preserve">
          <source>Mom supposed the database programmer made a request looking like:</source>
          <target state="translated">Mamá supuso que el programador de la base de datos hizo una petición que parecía:</target>
        </trans-unit>
        <trans-unit id="96bb971af970b55c072ef0967dfb0650a326ca16" translate="yes" xml:space="preserve">
          <source>Mostly we will try to patch forms input. But this is not the only place where you can get attacked with SQL injection. You can do very simple attack with URL which send data through GET request;
Consider the fallowing example:</source>
          <target state="translated">La mayoría de las veces intentaremos parchear las formas de entrada.Pero este no es el único lugar donde puedes ser atacado con inyección SQL.Puedes hacer un ataque muy simple con URL que envían datos a través de una petición GET;considera el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="bc011a90b27267bbf94983c51810cde1d11b8154" translate="yes" xml:space="preserve">
          <source>No one pointed this out before so through I might alert some of you.</source>
          <target state="translated">Nadie ha señalado esto antes,así que a través de mí podría alertar a algunos de ustedes.</target>
        </trans-unit>
        <trans-unit id="db882356d5143646304aa5d620f5a86bb8a20a10" translate="yes" xml:space="preserve">
          <source>No, &lt;code&gt;'&lt;/code&gt; isn't a comment in SQL, but a delimiter.</source>
          <target state="translated">No &lt;code&gt;'&lt;/code&gt; no es un comentario en SQL, sino un delimitador.</target>
        </trans-unit>
        <trans-unit id="4d11e639fabc057421eb05c7aa5bad84e45a7b76" translate="yes" xml:space="preserve">
          <source>Now someone could try something like this</source>
          <target state="translated">Ahora alguien podría intentar algo como esto</target>
        </trans-unit>
        <trans-unit id="de20cc0fa527aedc63635b0e9bb07117e87ba818" translate="yes" xml:space="preserve">
          <source>Now the query would be something like this (to search the student table)</source>
          <target state="translated">Ahora la consulta sería algo así (para buscar en la mesa de los estudiantes)</target>
        </trans-unit>
        <trans-unit id="7646e113eeae59dc18798a0466c8a3f0c8a20b6b" translate="yes" xml:space="preserve">
          <source>On some systems, the &lt;code&gt;select&lt;/code&gt; would get ran first followed by the &lt;code&gt;drop&lt;/code&gt; statement! The message is: DONT EMBED VALUES INTO YOUR SQL. Instead use parameters!</source>
          <target state="translated">&amp;iexcl;En algunos sistemas, la &lt;code&gt;select&lt;/code&gt; se ejecuta primero seguida de la declaraci&amp;oacute;n de &lt;code&gt;drop&lt;/code&gt; ! El mensaje es: NO INCORPORE VALORES EN SU SQL. En su lugar, use par&amp;aacute;metros.</target>
        </trans-unit>
        <trans-unit id="983c898ac23c7963028dec422bc84cc391ab0264" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;foobar&lt;/code&gt; with the actual name of the student. A normal insert operation would look like this:</source>
          <target state="translated">Reemplace &lt;code&gt;foobar&lt;/code&gt; con el nombre real del alumno. Una operaci&amp;oacute;n de inserci&amp;oacute;n normal se ver&amp;iacute;a as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="6245c95fed8f15a937f9961aafd6f5047abf8924" translate="yes" xml:space="preserve">
          <source>Robert Tables</source>
          <target state="translated">Robert Tablas</target>
        </trans-unit>
        <trans-unit id="0c2b7d925905b95e3db45c6bf19999ae433aedd2" translate="yes" xml:space="preserve">
          <source>Robert'); DROP TABLE Students; --</source>
          <target state="translated">Robert');estudiantes de DROP TABLE;--</target>
        </trans-unit>
        <trans-unit id="37120a5976df382d07bdbca079622bcbe6aa10b9" translate="yes" xml:space="preserve">
          <source>SQL injection is the database equivalent of a remote &lt;a href=&quot;http://en.wikipedia.org/wiki/Arbitrary_code_execution&quot;&gt;arbitrary code execution&lt;/a&gt; vulnerability in an operating system or application.  The potential impact of a successful SQL injection attack cannot be underestimated--depending on the database system and application configuration, it can be used by an attacker to cause data loss (as in this case), gain unauthorized access to data, or even execute arbitrary code on the host machine itself.</source>
          <target state="translated">La inyecci&amp;oacute;n SQL es el equivalente de la base de datos de una vulnerabilidad de &lt;a href=&quot;http://en.wikipedia.org/wiki/Arbitrary_code_execution&quot;&gt;ejecuci&amp;oacute;n&lt;/a&gt; remota de c&amp;oacute;digo arbitrario en un sistema operativo o aplicaci&amp;oacute;n. El impacto potencial de un ataque de inyecci&amp;oacute;n SQL exitoso no puede subestimarse; seg&amp;uacute;n el sistema de la base de datos y la configuraci&amp;oacute;n de la aplicaci&amp;oacute;n, un atacante puede usarlo para causar p&amp;eacute;rdida de datos (como en este caso), obtener acceso no autorizado a los datos o incluso ejecutar c&amp;oacute;digo arbitrario en la m&amp;aacute;quina host misma.</target>
        </trans-unit>
        <trans-unit id="3026fffcc7a3643389d223c1b0e95482127105a3" translate="yes" xml:space="preserve">
          <source>Say you naively wrote a student creation method like this:</source>
          <target state="translated">Digamos que ingenuamente escribiste un método de creación de estudiantes como este:</target>
        </trans-unit>
        <trans-unit id="ddb93c7ca1ae41e329036ba77ece07624d6a8bbd" translate="yes" xml:space="preserve">
          <source>Since the admin account has high privileges deleting the table from this account is possible.</source>
          <target state="translated">Dado que la cuenta de administración tiene altos privilegios,es posible borrar la tabla de esta cuenta.</target>
        </trans-unit>
        <trans-unit id="9663830b177751610a508e2d8647db1deab1d0cb" translate="yes" xml:space="preserve">
          <source>Since the user input is not sanitized, The above query has is manipulated into 2 parts</source>
          <target state="translated">Dado que la entrada del usuario no está saneada,la consulta anterior se ha manipulado en 2 partes</target>
        </trans-unit>
        <trans-unit id="dd9a0d6b67b9bbba7661f7e23c2b4420d6344c6e" translate="yes" xml:space="preserve">
          <source>So if &lt;code&gt;$firstName&lt;/code&gt; contains &lt;code&gt;Robert'); DROP TABLE students; --&lt;/code&gt; the database program will execute the following request directly on the DB:</source>
          <target state="translated">Entonces, si &lt;code&gt;$firstName&lt;/code&gt; contiene &lt;code&gt;Robert'); DROP TABLE students; --&lt;/code&gt; DROP TABLE estudiantes; - el programa de la base de datos ejecutar&amp;aacute; la siguiente solicitud directamente en la base de datos:</target>
        </trans-unit>
        <trans-unit id="a465c66b5dc128bd57f8fcdcf456255c8a8a7859" translate="yes" xml:space="preserve">
          <source>So now the ' character ends the string literal before the programmer was expecting it.  Combined with the ; character to end the statement, an attacker can now add whatever sql they want.  The -- comment at the end is to make sure any remaining sql in the original statement does not prevent the query from compiling on the server.</source>
          <target state="translated">Así que ahora el personaje termina la cadena literalmente antes de que el programador lo esperara.Combinado con el carácter;para terminar la declaración,un atacante puede ahora añadir cualquier cantidad de sql que quiera.El comentario --al final es para asegurarse de que el resto de sql en la declaración original no impide que la consulta se compile en el servidor.</target>
        </trans-unit>
        <trans-unit id="5e96ce08b6516eb0bdfd1e8209b76ce5401e37a1" translate="yes" xml:space="preserve">
          <source>Solution - use PDO prepare() &amp;amp; bindParam() methods:</source>
          <target state="translated">Soluci&amp;oacute;n: utilice los m&amp;eacute;todos PDO prepare () y bindParam ():</target>
        </trans-unit>
        <trans-unit id="5ff57f4185e884322f43c9c59da60f12f41285ea" translate="yes" xml:space="preserve">
          <source>TL;DR</source>
          <target state="translated">TL;DR</target>
        </trans-unit>
        <trans-unit id="ed7851e23950df599910f44b392a86be5fb06a01" translate="yes" xml:space="preserve">
          <source>That would enable you to log in to any account without knowing the password. So you don't need to be able to use two statements in order to use SQL injection, although you can do more destructive things if you are able to supply multiple statements.</source>
          <target state="translated">Eso le permitiría acceder a cualquier cuenta sin saber la contraseña.Por lo tanto,no es necesario que puedas usar dos sentencias para usar la inyección SQL,aunque puedes hacer cosas más destructivas si eres capaz de suministrar varias sentencias.</target>
        </trans-unit>
        <trans-unit id="6f01ea093d0abce096b0f1ba94e2bd02ddf0d650" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;');&lt;/code&gt; ends the query, it doesn't start a comment. Then it drops the students table and comments the rest of the query that was supposed to be executed.</source>
          <target state="translated">El &lt;code&gt;');&lt;/code&gt; finaliza la consulta, no comienza un comentario. Luego, suelta la tabla de estudiantes y comenta el resto de la consulta que se supon&amp;iacute;a que deb&amp;iacute;a ejecutarse.</target>
        </trans-unit>
        <trans-unit id="2d5e55ae2ea8efc24225552a86bfc8c2a77c138d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'&lt;/code&gt; character in SQL is used  for string constants. In this case it is used for ending the string constant and not for comment.</source>
          <target state="translated">El &lt;code&gt;'&lt;/code&gt; car&amp;aacute;cter en SQL se usa para constantes de cadena. En este caso, se utiliza para finalizar la cadena constante y no para comentarios.</target>
        </trans-unit>
        <trans-unit id="f92ff1774fac1c9b4900067042e78a60943008ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'&lt;/code&gt; in the student's name is not a comment, it's the closing &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms179899.aspx&quot;&gt;string delimiter&lt;/a&gt;.  Since the student's name is a string, it's needed syntactically to complete the hypothetical query.  Injection attacks only work &lt;em&gt;when the SQL query they inject results in valid SQL&lt;/em&gt;.</source>
          <target state="translated">El &lt;code&gt;'&lt;/code&gt; en el nombre del alumno no es un comentario, es el &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms179899.aspx&quot;&gt;delimitador de cadena de&lt;/a&gt; cierre. Como el nombre del alumno es una cadena, se necesita sint&amp;aacute;cticamente para completar la consulta hipot&amp;eacute;tica. Los ataques de inyecci&amp;oacute;n solo funcionan &lt;em&gt;cuando la consulta SQL que inyectan da como resultado un SQL v&amp;aacute;lido&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="aceae0413666e84da23e62ac60c8bac74e2f5d8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--&lt;/code&gt; only comments the remainder of the line.</source>
          <target state="translated">El &lt;code&gt;--&lt;/code&gt; solo comenta el resto de la l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="74098fc9f260146c228104b6c65f525edc48784f" translate="yes" xml:space="preserve">
          <source>The SQL injection here is the result of the name of the student terminating the statement and including a separate &lt;code&gt;DROP TABLE&lt;/code&gt; command; the two dashes at the end of the input are intended to comment out any leftover code that would otherwise cause an error. The last line of the output confirms that the database server has dropped the table.</source>
          <target state="translated">La inyecci&amp;oacute;n SQL aqu&amp;iacute; es el resultado del nombre del estudiante que termina la declaraci&amp;oacute;n e incluye un comando &lt;code&gt;DROP TABLE&lt;/code&gt; separado; los dos guiones al final de la entrada tienen la intenci&amp;oacute;n de comentar cualquier c&amp;oacute;digo sobrante que de otro modo causar&amp;iacute;a un error. La &amp;uacute;ltima l&amp;iacute;nea de la salida confirma que el servidor de bases de datos ha descartado la tabla.</target>
        </trans-unit>
        <trans-unit id="d2e3583e0dbe2234f515adc562e653eb57e46697" translate="yes" xml:space="preserve">
          <source>The SQL would become:</source>
          <target state="translated">El SQL se convertiría:</target>
        </trans-unit>
        <trans-unit id="98ed052ab768c42b4c51024ac95005d02b55e79b" translate="yes" xml:space="preserve">
          <source>The code is mistakenly placing anything the user supplied as the variable. You wanted the SQL to be:</source>
          <target state="translated">El código está colocando erróneamente todo lo que el usuario suministró como la variable.Usted quería que el SQL fuera:</target>
        </trans-unit>
        <trans-unit id="1a1f5503c8dacf159b36aa6dc81597f075d43234" translate="yes" xml:space="preserve">
          <source>The code to retrieve user name from request is</source>
          <target state="translated">El código para recuperar el nombre de usuario de la solicitud es</target>
        </trans-unit>
        <trans-unit id="133d738d5f98f614bed15f518ef065e70ac0ec32" translate="yes" xml:space="preserve">
          <source>The double dash (--) will just comment out remaining part of the query.</source>
          <target state="translated">El doble guión (--)sólo comentará la parte restante de la consulta.</target>
        </trans-unit>
        <trans-unit id="1504af61394d6829bd808405ed9344a3c5620dec" translate="yes" xml:space="preserve">
          <source>The first one will do the normal search.</source>
          <target state="translated">El primero hará la búsqueda normal.</target>
        </trans-unit>
        <trans-unit id="c406de1c10a6141ff755969fdb6d8f9fd28f392b" translate="yes" xml:space="preserve">
          <source>The original code in the school's program probably looks something like</source>
          <target state="translated">El código original del programa de la escuela probablemente se parece a algo como</target>
        </trans-unit>
        <trans-unit id="1f92ec13c954912f1e1bcc65272443cfb80a31ce" translate="yes" xml:space="preserve">
          <source>The result?</source>
          <target state="translated">¿El resultado?</target>
        </trans-unit>
        <trans-unit id="c762df0f9ec734a489ffde76def0caa39fa5c6bb" translate="yes" xml:space="preserve">
          <source>The resultant query becomes</source>
          <target state="translated">La consulta resultante se convierte en</target>
        </trans-unit>
        <trans-unit id="5df6724d22e0babfe904b6b14173f098d3dab8ae" translate="yes" xml:space="preserve">
          <source>The second one will drop the table student if the account has sufficient privileges (Generally the school admin account will run such query and will have the privileges talked about above).</source>
          <target state="translated">El segundo dejará al estudiante de la mesa si la cuenta tiene suficientes privilegios (Por lo general,la cuenta de administración de la escuela ejecutará dicha consulta y tendrá los privilegios mencionados anteriormente).</target>
        </trans-unit>
        <trans-unit id="2d104507ada99e5d8537b24476a8fdc95e35ad06" translate="yes" xml:space="preserve">
          <source>The semicolon ends the insert command and starts another; the -- comments out the rest of the line. The DROP TABLE command is executed...</source>
          <target state="translated">El punto y coma termina el comando de inserción y comienza otro;el --comenta el resto de la línea.El comando DROP TABLE se ejecuta...</target>
        </trans-unit>
        <trans-unit id="30ed2dd959ffaed009b9812f05737346b7e5d2ed" translate="yes" xml:space="preserve">
          <source>The writer of the database probably did a</source>
          <target state="translated">El escritor de la base de datos probablemente hizo un</target>
        </trans-unit>
        <trans-unit id="0f86d3dd6c873d977a65f9095a5db0a162d4537d" translate="yes" xml:space="preserve">
          <source>Then the resulting SQL string would be this:</source>
          <target state="translated">Entonces la cadena SQL resultante sería esta:</target>
        </trans-unit>
        <trans-unit id="5c1a493136ed3ba8c5afdcf8999adbcbf6478f23" translate="yes" xml:space="preserve">
          <source>This drops (deletes) the student table.</source>
          <target state="translated">Esto deja caer (borra)la mesa de los estudiantes.</target>
        </trans-unit>
        <trans-unit id="09d35ca1f5c9f54142fbc66f3b9ae42880e84716" translate="yes" xml:space="preserve">
          <source>This is dangerous as it can nullify password authentication, if present</source>
          <target state="translated">Esto es peligroso ya que puede anular la autentificación de la contraseña,si está presente.</target>
        </trans-unit>
        <trans-unit id="8a2d0b2b0e59d3e8ece42c60838ae2d5a4cbdb6e" translate="yes" xml:space="preserve">
          <source>This is how it works:
Lets suppose the administrator is looking for records of student</source>
          <target state="translated">Así es como funciona:Supongamos que el administrador está buscando los registros de los estudiantes</target>
        </trans-unit>
        <trans-unit id="fe81f720466bedf90225a9b8c3c25cc2caad04a3" translate="yes" xml:space="preserve">
          <source>This is the naive way to add text input into a query, and is &lt;em&gt;very bad&lt;/em&gt;, as you will see.</source>
          <target state="translated">Esta es la forma ingenua de agregar entradas de texto en una consulta, y es &lt;em&gt;muy mala&lt;/em&gt; , como ver&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="f4b6f2ee70fc32667125f99134f18f48f6d5e0e2" translate="yes" xml:space="preserve">
          <source>This is why bind parameters are a good thing.</source>
          <target state="translated">Por eso los parámetros de unión son algo bueno.</target>
        </trans-unit>
        <trans-unit id="f34eda5ca211eb3175806664d5fd38d21af5eda6" translate="yes" xml:space="preserve">
          <source>To make it clear what's happening, let's try this with a simple table containing only the name field and add a single row:</source>
          <target state="translated">Para aclarar lo que está sucediendo,intentemos esto con una simple tabla que contenga sólo el campo del nombre y agreguemos una sola fila:</target>
        </trans-unit>
        <trans-unit id="69e18205e6435018fec90b85d4e3a87afed1d5d3" translate="yes" xml:space="preserve">
          <source>Try to replace table_name with the real table name. If he get your table name right they would empty your table! &lt;strong&gt;(It is very easy to brut force this URL with simple script)&lt;/strong&gt;</source>
          <target state="translated">Intente reemplazar table_name con el nombre real de la tabla. Si acertaba el nombre de su mesa, &amp;iexcl;vaciar&amp;iacute;an su mesa! &lt;strong&gt;(Es muy f&amp;aacute;cil forzar esta URL con un script simple)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bafa483229452946a2498bdf56c79df0cbc5f7e3" translate="yes" xml:space="preserve">
          <source>What does this SQL do:</source>
          <target state="translated">¿Qué hace este SQL:</target>
        </trans-unit>
        <trans-unit id="e256ca0ab96555169f167cecea8df3dedc1d6266" translate="yes" xml:space="preserve">
          <source>What gets run on the database is this query:</source>
          <target state="translated">Lo que se ejecuta en la base de datos es esta consulta:</target>
        </trans-unit>
        <trans-unit id="21339d9c4840b2a2bb4902b933d347e8cb815a77" translate="yes" xml:space="preserve">
          <source>What happens when we insert Little Bobby Tables's name into the table?</source>
          <target state="translated">¿Qué pasa cuando insertamos el nombre del pequeño Bobby Tablas en la mesa?</target>
        </trans-unit>
        <trans-unit id="daa8241056744ddd3490433b4056a17c6aaf1a07" translate="yes" xml:space="preserve">
          <source>What you get is:</source>
          <target state="translated">Lo que obtienes es:</target>
        </trans-unit>
        <trans-unit id="1ce587cc039592196a56f7601d62743da75474c3" translate="yes" xml:space="preserve">
          <source>When we query the table, we get this:</source>
          <target state="translated">Cuando consultamos la mesa,obtenemos esto:</target>
        </trans-unit>
        <trans-unit id="a0a70210ca826c39f74e99f7815e7828691e7797" translate="yes" xml:space="preserve">
          <source>You can, however, manipulate an existing SQL statement via SQL injection without having to add a second statement. Let's say you have a login system which checks a username and a password with this simple select:</source>
          <target state="translated">Sin embargo,puede manipular una declaración SQL existente mediante inyección SQL sin tener que añadir una segunda declaración.Digamos que tienes un sistema de acceso que comprueba un nombre de usuario y una contraseña con esta simple selección:</target>
        </trans-unit>
        <trans-unit id="b1d33b75385409327c7ad149de2f5700e2332439" translate="yes" xml:space="preserve">
          <source>You don't need to input form data to make SQL injection.</source>
          <target state="translated">No es necesario introducir los datos de los formularios para hacer la inyección SQL.</target>
        </trans-unit>
        <trans-unit id="506b8b70be03f131ecad01eb971b38a21bfc62da" translate="yes" xml:space="preserve">
          <source>Your query would look something like this...</source>
          <target state="translated">Su consulta se vería algo así...</target>
        </trans-unit>
        <trans-unit id="84e0def289034c082b05baf61e91d33a82183f27" translate="yes" xml:space="preserve">
          <source>Your url would look 
&lt;a href=&quot;http://yoursite.com/show?id=1&quot;&gt;http://yoursite.com/show?id=1&lt;/a&gt;</source>
          <target state="translated">Tu url se ver&amp;iacute;a &lt;a href=&quot;http://yoursite.com/show?id=1&quot;&gt;http://yoursite.com/show?id=1&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5150b572e20984159df6524b5d5ea5e28030eaec" translate="yes" xml:space="preserve">
          <source>` )</source>
          <target state="translated">` )</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="6bd9dfe1efad33667e69e751d695397aab30aac7" translate="yes" xml:space="preserve">
          <source>ie. it will terminate early the insert statement, execute whatever malicious code the cracker wants, then comment out whatever remainder of code there might be.</source>
          <target state="translated">es decir,terminará pronto la declaración de inserción,ejecutará cualquier código malicioso que el cracker quiera,y luego comentará cualquier resto de código que pueda haber.</target>
        </trans-unit>
        <trans-unit id="7eace1c108e9774e1c99d6e09e4b22fb30e874ff" translate="yes" xml:space="preserve">
          <source>which, in plain English, roughly translates to the two queries:</source>
          <target state="translated">que,en inglés,se traduce aproximadamente a las dos preguntas:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
