<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/7244321">
    <body>
      <group id="7244321">
        <trans-unit id="837239dc1752aa33767206805faadce95726829a" translate="yes" xml:space="preserve">
          <source>(I use Android Studio 3.0 with &quot;Git integration&quot; and &quot;GitHub&quot; plugins.)</source>
          <target state="translated">(Я использую Android Studio 3.0 с плагинами &quot;Git-интеграция&quot; и &quot;GitHub&quot;).</target>
        </trans-unit>
        <trans-unit id="f7bddf7f104c215149d89a27e04f9f82c5bdae57" translate="yes" xml:space="preserve">
          <source>, all commits will be made &quot;with&quot; you, the original PRs will link to your PR, and GitHub will display &lt;code&gt;This branch is X commits ahead, Y commits behind &amp;lt;original fork&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">все коммиты будут сделаны &quot;с вами&quot;, исходные PR свяжутся с вашим PR, и GitHub покажет. &lt;code&gt;This branch is X commits ahead, Y commits behind &amp;lt;original fork&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa18006684a6730be7d42134f2ce945e1ca9dfd5" translate="yes" xml:space="preserve">
          <source>, but don't click anything yet.</source>
          <target state="translated">но пока ничего не нажимай.</target>
        </trans-unit>
        <trans-unit id="aed7f30b6eec6bdad869eaf0cc6d252d35ce10dd" translate="yes" xml:space="preserve">
          <source>. By default, GitHub will compare the original with your fork, and there shouldn't be anything to compare if you didn't make any changes.</source>
          <target state="translated">.По умолчанию GitHub сравнивает оригинал с вашей вилкой,и не должно быть ничего,что можно было бы сравнить,если бы вы не внесли никаких изменений.</target>
        </trans-unit>
        <trans-unit id="9e288959c997c74dcab4f214316ce37256bb0e82" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Create Pull Request&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Создать запрос на извлечение&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1dec1ee12cc0ee47690f681d5af701402e2a059e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Rebase my GitHub fork&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Перебазировать мою вилку GitHub&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c23532b197c28f5e2c167d5de1d1410ac36f24a8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Tip: If you want to update your repository on GitHub, follow the instructions &lt;a href=&quot;https://help.github.com/articles/pushing-to-a-remote#pushing-a-branch&quot;&gt;here&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Совет: если вы хотите обновить свой репозиторий на GitHub, следуйте инструкциям &lt;a href=&quot;https://help.github.com/articles/pushing-to-a-remote#pushing-a-branch&quot;&gt;здесь&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9ef67562961602cb5e06540f46c6ad69d781b01e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Tip: Syncing your fork only updates your local copy of the repository; it does not update your repository on GitHub.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Совет: синхронизация вашего форка только обновляет вашу локальную копию репозитория;&lt;/em&gt; &lt;em&gt;он не обновляет ваш репозиторий на GitHub.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="091a67df8cb7e3a2e39438a2304cecc9cfcd7fa7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1. Create the branches&lt;/strong&gt; from the fork master and &lt;strong&gt;do changes there&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;1. Создайте ветви&lt;/strong&gt; из master-вилки и &lt;strong&gt;сделайте там изменения&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ace59f481ab2e485809074bf3421337f65d1e484" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2. Create a scheduled job&lt;/strong&gt; for the fork master to &lt;strong&gt;do update automatically&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;2. Создайте запланированное задание&lt;/strong&gt; для мастера вилки, чтобы оно &lt;strong&gt;автоматически обновлялось&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="8c6ef361872ea9dca75b25f08ab190d9ab77471d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Checkout to your branch&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Оформить заказ в вашем филиале&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7cba2c022702bc7188073aa3405c4473f2a91a47" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; git checkout master</source>
          <target state="translated">&lt;strong&gt;Пример:&lt;/strong&gt; мастер git checkout</target>
        </trans-unit>
        <trans-unit id="d2f1180576dd05c72a3829a89721f20a338e1252" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; git pull &lt;a href=&quot;https://github.com/ORIGINAL_OWNER/ORIGINAL_REPO.git&quot;&gt;https://github.com/ORIGINAL_OWNER/ORIGINAL_REPO.git&lt;/a&gt; BRANCH_NAME</source>
          <target state="translated">&lt;strong&gt;Пример:&lt;/strong&gt; git pull &lt;a href=&quot;https://github.com/ORIGINAL_OWNER/ORIGINAL_REPO.git&quot;&gt;https://github.com/ORIGINAL_OWNER/ORIGINAL_REPO.git&lt;/a&gt; BRANCH_NAME</target>
        </trans-unit>
        <trans-unit id="038223c0b4eee8eb40e89e3334da6a52eeaaf53d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Foreword:&lt;/strong&gt; Your fork is the &quot;origin&quot; and the repository you forked from is the &quot;upstream&quot;.</source>
          <target state="translated">&lt;strong&gt;Предисловие:&lt;/strong&gt; ваш форк - это &amp;laquo;источник&amp;raquo;, а репозиторий, из которого вы разветвлены, - &amp;laquo;восходящий&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="83675adcd63528ba85b7735bf175b9ad961c21e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If that is given then you need to continue in this order:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Если это дано, вам нужно продолжить в следующем порядке:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0d7bc8b4919bc01d463826deb19d44e1b4e26951" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In the meantime, GitHub user bardiharborow has created a tool to do just this:&lt;/strong&gt;&lt;a href=&quot;https://upriver.github.io/&quot;&gt;https://upriver.github.io/&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Тем временем, пользователь GitHub bardiharborow создал инструмент для этого:&lt;/strong&gt; &lt;a href=&quot;https://upriver.github.io/&quot;&gt;https://upriver.github.io/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c53483308246ab7077bf1fbd5790e40c6ffb4674" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pull source repository branch for getting the latest code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Потяните ветку репозитория исходного кода для получения последней версии кода.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39f7deb9c8e2585fec4fb5fb5b57b3fefb8ec63d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Syntax:&lt;/strong&gt; git branch yourDevelopmentBranch</source>
          <target state="translated">&lt;strong&gt;Синтаксис:&lt;/strong&gt; git branch yourDevelopmentBranch</target>
        </trans-unit>
        <trans-unit id="30519498f0f744e1c306f5deb9b11dd9dc3422bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Syntax:&lt;/strong&gt; git pull &lt;a href=&quot;https://github.com/tastejs/awesome-app-ideas&quot;&gt;https://github.com/tastejs/awesome-app-ideas&lt;/a&gt; master</source>
          <target state="translated">&lt;strong&gt;Синтаксис:&lt;/strong&gt; git pull &lt;a href=&quot;https://github.com/tastejs/awesome-app-ideas&quot;&gt;https://github.com/tastejs/awesome-app-ideas&lt;/a&gt; master</target>
        </trans-unit>
        <trans-unit id="c22468d3a019b313d1bce8c15882b7e2dc72ab9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This branch is even with &lt;code&gt;&amp;lt;upstream&amp;gt;&lt;/code&gt;:master&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;Эта ветка даже с &lt;code&gt;&amp;lt;upstream&amp;gt;&lt;/code&gt; : master&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="836dd07f6d51bd7c72878311bf22a4ef9c537100" translate="yes" xml:space="preserve">
          <source>A few days later another change was made by another contributor. So my fork doesn't contain that change.</source>
          <target state="translated">Через несколько дней еще одно изменение было внесено другим участником.Так что моя вилка не содержит этих изменений.</target>
        </trans-unit>
        <trans-unit id="d111dda0df7611e4a760ea8349943d255c38c603" translate="yes" xml:space="preserve">
          <source>A lot of answers end up moving your fork &lt;strong&gt;one commit ahead&lt;/strong&gt; of the parent repository. This answer summarizes the steps found &lt;a href=&quot;http://2buntu.com/articles/1459/keeping-your-forked-repo-synced-with-the-upstream-source/&quot;&gt;here&lt;/a&gt; which will &lt;strong&gt;move your fork to the same commit as the parent&lt;/strong&gt;.</source>
          <target state="translated">Множество ответов в конечном итоге перемещают ваш форк на &lt;strong&gt;один коммит вперед&lt;/strong&gt; от родительского репозитория. Этот ответ суммирует шаги, найденные &lt;a href=&quot;http://2buntu.com/articles/1459/keeping-your-forked-repo-synced-with-the-upstream-source/&quot;&gt;здесь,&lt;/a&gt; которые &lt;strong&gt;переместят ваш форк в тот же коммит, что и родительский&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="a571dcfb301530d4534f671f455e5eca37543f4b" translate="yes" xml:space="preserve">
          <source>Actually, it is possible to create a branch in your fork from any commit of the upstream in the browser:</source>
          <target state="translated">На самом деле,можно создать ветку в вашей развилке из любого коммита в браузере:</target>
        </trans-unit>
        <trans-unit id="5f88b6685a748abb35be251ed6735d785185f6ea" translate="yes" xml:space="preserve">
          <source>Add the &quot;upstream&quot; to your cloned repository (&quot;origin&quot;):</source>
          <target state="translated">Добавьте &quot;вверх по течению&quot; к вашему клонированному репозиторию (&quot;происхождение&quot;):</target>
        </trans-unit>
        <trans-unit id="5a08ed9da2ad311b22c813f50ad5770b2a215a0a" translate="yes" xml:space="preserve">
          <source>Add the parent as a remote repository, &lt;code&gt;git remote add upstream &amp;lt;repo-location&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Добавьте родителя как удаленный репозиторий, &lt;code&gt;git remote add upstream &amp;lt;repo-location&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a67e617a769c44bdd8f8d877909cfd92bf6f9b61" translate="yes" xml:space="preserve">
          <source>And pay attention to the two last popup menu items:</source>
          <target state="translated">И обратите внимание на два последних всплывающих пункта меню:</target>
        </trans-unit>
        <trans-unit id="77b29e62e23f78b86305bbbc7a82f5e4ee0b7dd6" translate="yes" xml:space="preserve">
          <source>And there you are good to go. All updated changes in the main repository will be pushed into your fork repository.</source>
          <target state="translated">А вот и ты.Все обновленные изменения в основном репозитории будут перенесены в ваш репозиторий вилок.</target>
        </trans-unit>
        <trans-unit id="735bbd6e19a781c73f9b39e632cb76b45edb8e9a" translate="yes" xml:space="preserve">
          <source>Android Studio now has learned to work with GitHub fork repositories (you don't even have to add &quot;upstream&quot; remote repository by console command).</source>
          <target state="translated">Android Studio теперь научилась работать с форковыми репозиториями GitHub (вам даже не нужно добавлять &quot;вверх по течению&quot; удалённый репозиторий по консольной команде).</target>
        </trans-unit>
        <trans-unit id="b862909c99578f4b84baffee2fcba870c7bb3d2b" translate="yes" xml:space="preserve">
          <source>Any of these branch sync commands may fail for one of two reasons: either the &lt;em&gt;upstream&lt;/em&gt; branch have been rewritten, or you have pushed commits on that branch to your fork. In the first case where you haven't committed anything to the branch on your fork it is safe to push forcefully (Add the &lt;strong&gt;-f&lt;/strong&gt; switch; i.e. &lt;code&gt;git push -f&lt;/code&gt; in the command above). In the other case this is normal as your fork branch have diverged and you can't expect the sync command to work until your commits have been merged back into &lt;em&gt;upstream&lt;/em&gt;.</source>
          <target state="translated">Любая из этих команд синхронизации веток может завершиться с ошибкой по одной из двух причин: либо ветка &lt;em&gt;upstream&lt;/em&gt; была переписана, либо вы передали коммиты в этой ветке на ваш форк. В первом случае, когда вы ничего не добавили в ветку на своей вилке, можно безопасно принудительно нажать (добавьте ключ &lt;strong&gt;-f&lt;/strong&gt; ; т.е. &lt;code&gt;git push -f&lt;/code&gt; в приведенной выше команде). В другом случае это нормально, так как ваша ветвь ветвления разошлась, и вы не можете ожидать, что команда sync сработает, пока ваши коммиты не будут объединены обратно в &lt;em&gt;апстрим&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="2bc1aaa72c608f4cf6f7c42e3a16c71cd5f587a7" translate="yes" xml:space="preserve">
          <source>As a complement to this answer, I was looking for a way to update all remote branches of my cloned repo (&lt;em&gt;origin&lt;/em&gt;) from &lt;em&gt;upstream&lt;/em&gt; branches in one go. This is how I did it.</source>
          <target state="translated">В качестве дополнения к этому ответу я искал способ обновить все удаленные ветки моего клонированного репо ( &lt;em&gt;источника&lt;/em&gt; ) из &lt;em&gt;вышестоящих&lt;/em&gt; веток за один раз. Вот как я это сделал.</target>
        </trans-unit>
        <trans-unit id="a9b4790fc412d85990b1d6a052f870d7a70a17fe" translate="yes" xml:space="preserve">
          <source>As of the date of this answer, GitHub has not (&lt;a href=&quot;https://github.com/blog/266-fast-forward-your-fork&quot;&gt;or shall I say no longer?&lt;/a&gt;) this feature in the web interface. You can, however, ask &lt;code&gt;support@github.com&lt;/code&gt; to add your vote for that.</source>
          <target state="translated">На момент получения этого ответа GitHub не имеет ( &lt;a href=&quot;https://github.com/blog/266-fast-forward-your-fork&quot;&gt;или я больше не скажу?&lt;/a&gt; ) Этой функции в веб-интерфейсе. Однако вы можете попросить &lt;code&gt;support@github.com&lt;/code&gt; добавить свой голос за это.</target>
        </trans-unit>
        <trans-unit id="1adc04b7dba016a901bd1df1b78a3ab6cd41900e" translate="yes" xml:space="preserve">
          <source>Assuming you never committed anything on master yourself you should be done already. Now you can push your local master to your origin remote GitHub fork. You could also rebase your development branch on your now up-to-date local master.</source>
          <target state="translated">Предположив,что ты сам никогда ничего не делал на хозяина,ты уже должен был это сделать.Теперь вы можете подтолкнуть местного мастера к удалённой вилке GitHub.Вы также можете переделать вашу ветку разработки на вашем современном локальном мастере.</target>
        </trans-unit>
        <trans-unit id="07e2084f9d86a95da2e8d3b95a5ce00601649747" translate="yes" xml:space="preserve">
          <source>At this stage you check that commits what will be merged by typing &lt;code&gt;git status&lt;/code&gt;</source>
          <target state="translated">На этом этапе вы проверяете, что фиксирует то, что будет объединено, набирая &lt;code&gt;git status&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b9ae2528623f4113c5de53633d5a27b55e035549" translate="yes" xml:space="preserve">
          <source>Before you can sync, you need to add a remote that points to the upstream repository. You may have done this when you originally forked.</source>
          <target state="translated">Перед тем,как синхронизировать,вам нужно добавить удаленный файл,который указывает на репозиторий,расположенный вверху по течению.Возможно,вы сделали это,когда изначально вилкой.</target>
        </trans-unit>
        <trans-unit id="47e8690455bc45922966085b3d33db413219f0a2" translate="yes" xml:space="preserve">
          <source>Change directory to your local repository.</source>
          <target state="translated">Изменить каталог в вашем локальном репозитории.</target>
        </trans-unit>
        <trans-unit id="3fd8a96d486985aff675e7a9223f2ee169b4d761" translate="yes" xml:space="preserve">
          <source>Check your forked repository. From time to time it will always show this notification:</source>
          <target state="translated">Проверьте свой вилочный репозиторий.Время от времени оно всегда будет показывать это уведомление:</target>
        </trans-unit>
        <trans-unit id="79cbc5eb672a54c2b82572afd52f2a6a4f85e598" translate="yes" xml:space="preserve">
          <source>Click</source>
          <target state="translated">Click</target>
        </trans-unit>
        <trans-unit id="071cff0034f6979c282cf4b38b624dc0f9e36bf0" translate="yes" xml:space="preserve">
          <source>Click &quot;Update from user/branch&quot; button the top.</source>
          <target state="translated">Нажмите кнопку &quot;Обновить из пользовательского интерфейса&quot; вверху.</target>
        </trans-unit>
        <trans-unit id="ca543cc44bf3a211828d947a183b294a7e9af7ad" translate="yes" xml:space="preserve">
          <source>Click on</source>
          <target state="translated">щёлкнуть на</target>
        </trans-unit>
        <trans-unit id="3332bb0a8aaeddbc5c4c764802dab7eac1b229dd" translate="yes" xml:space="preserve">
          <source>Click on the &quot;Tree: ....&quot; button.</source>
          <target state="translated">Нажмите на кнопку &quot;Дерево:....&quot;.</target>
        </trans-unit>
        <trans-unit id="f15f54a10c34d555b72ff683c2e2ac900e98d76a" translate="yes" xml:space="preserve">
          <source>Create pull request</source>
          <target state="translated">Создать запрос на вытаскивание</target>
        </trans-unit>
        <trans-unit id="2b9eceb7a86a9f577ef80586c5c1d7fde9ff493d" translate="yes" xml:space="preserve">
          <source>Enter</source>
          <target state="translated">Enter</target>
        </trans-unit>
        <trans-unit id="5b40a987f771c491468f8d2c27086ff8829378a5" translate="yes" xml:space="preserve">
          <source>Fetch the commits (and branches) from the &quot;upstream&quot;:</source>
          <target state="translated">Возьмите коммиты (и ветки)из &quot;вверх по течению&quot;:</target>
        </trans-unit>
        <trans-unit id="8794810c9e1140dda7a53c49126aeec77324d72d" translate="yes" xml:space="preserve">
          <source>Fetching</source>
          <target state="translated">Fetching</target>
        </trans-unit>
        <trans-unit id="de8ecbd3f82de881ecb335599deb8883e5dcdb55" translate="yes" xml:space="preserve">
          <source>Fetching from the remote repository will bring in its branches and their respective commits. These are stored in your local repository under special branches.</source>
          <target state="translated">Получение из удаленного репозитория приведет к появлению в его ветках и соответствующих коммитов.Они хранятся в вашем локальном репозитории в специальных ветках.</target>
        </trans-unit>
        <trans-unit id="ad5e28ad709967562cc9a234219d9cd5ce08ca14" translate="yes" xml:space="preserve">
          <source>Follow the below steps. I tried them and it helped me.</source>
          <target state="translated">Выполните следующие шаги.Я попробовал их,и это помогло мне.</target>
        </trans-unit>
        <trans-unit id="aac6c9184d41f07130651418971dab1ad3bb3d7a" translate="yes" xml:space="preserve">
          <source>For more information about these commands, refer to &lt;a href=&quot;http://2buntu.com/articles/1459/keeping-your-forked-repo-synced-with-the-upstream-source/&quot;&gt;step 3&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации об этих командах обратитесь к &lt;a href=&quot;http://2buntu.com/articles/1459/keeping-your-forked-repo-synced-with-the-upstream-source/&quot;&gt;шагу 3&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4daf005c65a6710994eea45279ec8f0858cdce7c" translate="yes" xml:space="preserve">
          <source>From the local clone of your fork, create your upstream remote. You only need to do that once:</source>
          <target state="translated">Из локального клона вашей вилки,создайте свой восходящий удаленный.Вам нужно сделать это только один раз:</target>
        </trans-unit>
        <trans-unit id="7e8949b82184a3f3fa7e043499748855d5ab06a6" translate="yes" xml:space="preserve">
          <source>Get back your stashed changes (if any)</source>
          <target state="translated">Возвращайте припрятанные изменения (если таковые имеются).</target>
        </trans-unit>
        <trans-unit id="0af551dae4561b188cfce1916f265f84a1900eff" translate="yes" xml:space="preserve">
          <source>GitHub also provides instructions for this topic: &lt;a href=&quot;https://help.github.com/articles/syncing-a-fork/&quot;&gt;Syncing a fork&lt;/a&gt;</source>
          <target state="translated">GitHub также предоставляет инструкции по этой теме: &lt;a href=&quot;https://help.github.com/articles/syncing-a-fork/&quot;&gt;Синхронизация форка&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e718004f95ed97d308f5c3b90b16f79859f4e3a" translate="yes" xml:space="preserve">
          <source>Here is GitHub's official document on &lt;a href=&quot;https://help.github.com/articles/syncing-a-fork&quot;&gt;Syncing a fork&lt;/a&gt;:</source>
          <target state="translated">Вот официальный документ GitHub по &lt;a href=&quot;https://help.github.com/articles/syncing-a-fork&quot;&gt;синхронизации форка&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="9b2ec29532190fe18af38b3ec081dc17c3f39aab" translate="yes" xml:space="preserve">
          <source>Here two &lt;code&gt;mergemethods&lt;/code&gt; are into play, one is &lt;code&gt;hardreset&lt;/code&gt; which helps force sync changes in the &lt;code&gt;master&lt;/code&gt; branch of the forked repo with the parent repo and the other method is &lt;code&gt;merge&lt;/code&gt;. This method is used to merge changes done by you in the &lt;code&gt;feature&lt;/code&gt; branch and changes done due to force sync in the &lt;code&gt;master&lt;/code&gt; branch. In case of merge conflict, the pull app will allow you to choose the next course of action during the pull request.</source>
          <target state="translated">Здесь в игру &lt;code&gt;mergemethods&lt;/code&gt; два метода слияния , один из которых &lt;code&gt;hardreset&lt;/code&gt; что помогает принудительно синхронизировать изменения в &lt;code&gt;master&lt;/code&gt; ветви разветвленного репо с родительским репо, а другой - &lt;code&gt;merge&lt;/code&gt; . Этот метод используется для объединения изменений, выполненных вами в ветви &lt;code&gt;feature&lt;/code&gt; и изменений, выполненных из-за принудительной синхронизации в &lt;code&gt;master&lt;/code&gt; ветви. В случае конфликта слияния приложение pull позволит вам выбрать следующий порядок действий при запросе на слияние.</target>
        </trans-unit>
        <trans-unit id="b5feec425815667dd7926e4b4daeaf95a1186782" translate="yes" xml:space="preserve">
          <source>How can I get that change into my fork? Do I need to delete and re-create my fork when I have further changes to contribute? Or is there an update button?</source>
          <target state="translated">Как я могу достать эту мелочь в вилку? Нужно ли мне удалять и воссоздавать вилку,когда у меня есть дополнительные изменения? Или есть кнопка обновления?</target>
        </trans-unit>
        <trans-unit id="df3f50d03f3257c40379dd4c99a541c8b77c103e" translate="yes" xml:space="preserve">
          <source>How do I update a GitHub forked repository</source>
          <target state="translated">Как обновить вилочный репозиторий GitHub.</target>
        </trans-unit>
        <trans-unit id="2a343e9b11ae32ded7d0e7a5911f54356160ee28" translate="yes" xml:space="preserve">
          <source>How it works (it is a guess, I don't know how exactly GitHub does it): forks share object storage and use &lt;a href=&quot;https://git-scm.com/docs/gitnamespaces&quot;&gt;namespaces&lt;/a&gt; to separate users' references. So you can access all commits through your fork, even if they did not exist by the time of forking.</source>
          <target state="translated">Как это работает (это предположение, я не знаю, как именно GitHub это делает): вилки совместно используют хранилище объектов и используют &lt;a href=&quot;https://git-scm.com/docs/gitnamespaces&quot;&gt;пространства имен&lt;/a&gt; для разделения ссылок пользователей. Таким образом, вы можете получить доступ ко всем коммитам через ваш форк, даже если они не существовали на момент разветвления.</target>
        </trans-unit>
        <trans-unit id="a7a6d461704fadab40e3cbdcaa120b732e90a03d" translate="yes" xml:space="preserve">
          <source>I am currently using this configuration in my forked repo &lt;a href=&quot;https://github.com/Saurabh702/notepad-plus-plus&quot;&gt;here&lt;/a&gt; to make sure an enhancement requested &lt;a href=&quot;https://stackoverflow.com/q/20700696/10155936&quot;&gt;here&lt;/a&gt; stays updated.</source>
          <target state="translated">В настоящее время я использую эту конфигурацию в своем разветвленном репо, чтобы убедиться, что запрошенное &lt;a href=&quot;https://stackoverflow.com/q/20700696/10155936&quot;&gt;здесь&lt;/a&gt; обновление будет обновлено.</target>
        </trans-unit>
        <trans-unit id="78d7a9033ce91a4b7b3a7701acdd5a29798f8a71" translate="yes" xml:space="preserve">
          <source>I recently forked a project and applied several fixes. I then created a pull request which was then accepted.</source>
          <target state="translated">Недавно я вил проект и применил несколько исправлений.Затем я создал запрос на вытаскивание,который затем был принят.</target>
        </trans-unit>
        <trans-unit id="b68acdee24b57f33bdc001ed632493c5aacf71af" translate="yes" xml:space="preserve">
          <source>I update my forked repos with this one line:</source>
          <target state="translated">Я обновляю свой вилочный репозиторий этой единственной строкой:</target>
        </trans-unit>
        <trans-unit id="3d1755748b7a1f154a7eb20aaa1e789b4626379d" translate="yes" xml:space="preserve">
          <source>I would like to add on to &lt;a href=&quot;https://stackoverflow.com/users/946850/krlmlr&quot;&gt;@krlmlr's&lt;/a&gt;&lt;a href=&quot;https://stackoverflow.com/a/58965171/10155936&quot;&gt;answer&lt;/a&gt;.</source>
          <target state="translated">Я хотел бы добавить к &lt;a href=&quot;https://stackoverflow.com/users/946850/krlmlr&quot;&gt;ответу @ krlmlr&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="71af5f6a415612676d1ad958b19ac1026d89b7ad" translate="yes" xml:space="preserve">
          <source>If it's quite a big repository you may have wanted to manage it in a special way (e.g. drop history). Basically, you can get differences between current and upstream versions, commit them and then cherry pick back to master.</source>
          <target state="translated">Если это довольно большой репозиторий,то,возможно,вы захотите управлять им особым образом (например,история падений).В основном,вы можете получить различия между текущей и предыдущей версиями,зафиксировать их,а затем вернуть вишню обратно в мастер.</target>
        </trans-unit>
        <trans-unit id="f360336737f9708dddf596319f29f29ec83c7e7f" translate="yes" xml:space="preserve">
          <source>If you are using GitHub for Windows or Mac then now they have a one-click feature to update forks:</source>
          <target state="translated">Если вы используете GitHub для Windows или Mac,то теперь у них есть функция обновления вилок одним щелчком мыши:</target>
        </trans-unit>
        <trans-unit id="d583b891b833ad9366a05e0e74488e8f90cc70ea" translate="yes" xml:space="preserve">
          <source>If you click</source>
          <target state="translated">Если вы нажмёте</target>
        </trans-unit>
        <trans-unit id="8cd173ef4abf2972ff0859ffa0e0e3238865ce10" translate="yes" xml:space="preserve">
          <source>If you click the dropdown and choose &quot;Squash and merge&quot;, all intervening commits will be squashed into one. This is most often something you don't want.</source>
          <target state="translated">Если нажать на выпадающий список и выбрать &quot;Сжать и объединить&quot;,все промежуточные коммиты будут сжаты в один.Чаще всего это то,чего вы не хотите.</target>
        </trans-unit>
        <trans-unit id="90d18659a140ac7f945393381c5f3b9ca34813b7" translate="yes" xml:space="preserve">
          <source>If you don't want to rewrite the history of your master branch, (for example because other people may have cloned it) then you should replace the last command with &lt;code&gt;git merge upstream/master&lt;/code&gt;.  However, for making further pull requests that are as clean as possible, it's probably better to rebase.</source>
          <target state="translated">Если вы не хотите переписывать историю вашей основной ветки (например, потому что другие люди могли ее клонировать), тогда вам следует заменить последнюю команду на &lt;code&gt;git merge upstream/master&lt;/code&gt; . Тем не менее, для дальнейших запросов на получение максимально чистых данных, вероятно, лучше выполнить ребазинг.</target>
        </trans-unit>
        <trans-unit id="f776089b6ff08edf49e6864a333020e225edb195" translate="yes" xml:space="preserve">
          <source>If you set your upstream. Check with &lt;code&gt;git remote -v&lt;/code&gt;, then this will suffice.</source>
          <target state="translated">Если вы установите свой апстрим. Проверьте с помощью &lt;code&gt;git remote -v&lt;/code&gt; , тогда этого будет достаточно.</target>
        </trans-unit>
        <trans-unit id="eecc136151fb2163383b33ace6b3000a063ca69a" translate="yes" xml:space="preserve">
          <source>If you want the forked repository to be in sync with the parent repository, you could set up a config file(&lt;code&gt;pull.yml&lt;/code&gt;) for the &lt;a href=&quot;https://github.com/apps/pull&quot;&gt;Pull app&lt;/a&gt; (&lt;em&gt;in the feature branch&lt;/em&gt;), like this:</source>
          <target state="translated">Если вы хотите, чтобы разветвленный репозиторий синхронизировался с родительским репозиторием, вы можете настроить файл конфигурации ( &lt;code&gt;pull.yml&lt;/code&gt; ) для &lt;a href=&quot;https://github.com/apps/pull&quot;&gt;приложения Pull&lt;/a&gt; ( &lt;em&gt;в ветви функций&lt;/em&gt; ), например:</target>
        </trans-unit>
        <trans-unit id="77060506139f0b51bcc1b4098f77874ee60d9177" translate="yes" xml:space="preserve">
          <source>If you've rebased your branch onto &lt;code&gt;upstream/master&lt;/code&gt; you may need to force the push in order to push it to your own forked repository on GitHub.  You'd do that with:</source>
          <target state="translated">Если вы переместили свою ветку на &lt;code&gt;upstream/master&lt;/code&gt; , вам может потребоваться принудительно отправить ее, чтобы перенести ее в свой собственный разветвленный репозиторий на GitHub. Вы бы сделали это с:</target>
        </trans-unit>
        <trans-unit id="000a1d52ae55ce4b3bb388299603fc6d81fc1724" translate="yes" xml:space="preserve">
          <source>If your local branch didn't have any unique commits, git will instead perform a &quot;fast-forward&quot;:</source>
          <target state="translated">Если в вашей локальной ветке не было уникальных коммитов,то вместо этого git выполнит &quot;быструю перемотку&quot;:</target>
        </trans-unit>
        <trans-unit id="d61bf845eb2e03fe01a1bce8c1c5087cb5e173fb" translate="yes" xml:space="preserve">
          <source>If, like me, you &lt;strong&gt;never commit anything directly to master&lt;/strong&gt;, which you should really, you can do the following.</source>
          <target state="translated">Если, как и я, вы &lt;strong&gt;никогда не&lt;/strong&gt; делаете &lt;strong&gt;что-либо напрямую, чтобы овладеть&lt;/strong&gt; , что вам действительно нужно, вы можете сделать следующее.</target>
        </trans-unit>
        <trans-unit id="ba7ece19362b2a8c4dc2565657e3511e377c5240" translate="yes" xml:space="preserve">
          <source>In your local clone of your forked repository, you can add the original GitHub repository as a &quot;remote&quot;.  (&quot;Remotes&quot; are like nicknames for the URLs of repositories - &lt;code&gt;origin&lt;/code&gt; is one, for example.)  Then you can fetch all the branches from that upstream repository, and rebase your work to continue working on the upstream version.  In terms of commands that might look like:</source>
          <target state="translated">В локальном клоне вашего разветвленного репозитория вы можете добавить исходный репозиторий GitHub в качестве &amp;laquo;удаленного&amp;raquo;. (&amp;laquo;Remotes&amp;raquo; похожи на псевдонимы для URL репозиториев - например, &lt;code&gt;origin&lt;/code&gt; - один.) Затем вы можете получить все ветви из этого репозитория upstream и перебазировать свою работу, чтобы продолжить работу над версией upstream. С точки зрения команд, которые могут выглядеть так:</target>
        </trans-unit>
        <trans-unit id="4f76a37b2e9c82019debf694fc201830d540f64f" translate="yes" xml:space="preserve">
          <source>Initially, the forked repository has one branch named : &lt;code&gt;master&lt;/code&gt;. If you are working on a new feature or a fix, you would generally create a new branch &lt;code&gt;feature&lt;/code&gt; and make the changes.</source>
          <target state="translated">Первоначально у разветвленного репозитория есть одна ветвь с именем: &lt;code&gt;master&lt;/code&gt; . Если вы работаете над новой функцией или исправлением, вы обычно создаете новую &lt;code&gt;feature&lt;/code&gt; ветки и вносите изменения.</target>
        </trans-unit>
        <trans-unit id="567aa3a9c463f855ebdc229f01b738038656dcf5" translate="yes" xml:space="preserve">
          <source>Issue &lt;code&gt;git fetch upstream&lt;/code&gt;</source>
          <target state="translated">Выпуск &lt;code&gt;git fetch upstream&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2904cebb10ab5eec224d68ccddd840625ed8a542" translate="yes" xml:space="preserve">
          <source>Issue &lt;code&gt;git push origin master&lt;/code&gt;</source>
          <target state="translated">Выпуск &lt;code&gt;git push origin master&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a713068b13d135dfba7a6c9428bd80843ed4c780" translate="yes" xml:space="preserve">
          <source>Issue &lt;code&gt;git rebase upstream/master&lt;/code&gt;</source>
          <target state="translated">Выпуск &lt;code&gt;git rebase upstream/master&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19c5df0feb2b0529669b5279411c78a559c787e9" translate="yes" xml:space="preserve">
          <source>Let's assume that you cloned already your fork to your computer with a command like this:</source>
          <target state="translated">Предположим,что вы уже клонировали вилку к компьютеру с помощью такой команды:</target>
        </trans-unit>
        <trans-unit id="a456f552d2cbe2b0b026d5f4dc290bf6543ca035" translate="yes" xml:space="preserve">
          <source>Merge pull request</source>
          <target state="translated">Объединить запрос тянуть</target>
        </trans-unit>
        <trans-unit id="1504d9472f1d9c97375340082225d911a0b0b19e" translate="yes" xml:space="preserve">
          <source>Merge the changes from the &quot;master&quot; branch of the &quot;upstream&quot; into your the &quot;master&quot; branch of your &quot;origin&quot;:</source>
          <target state="translated">Объедините изменения из &quot;мастер&quot; ветви &quot;вверх по течению&quot; в &quot;мастер&quot; ветви вашего &quot;происхождения&quot;:</target>
        </trans-unit>
        <trans-unit id="40de0d4de887a374168bf79e72c7aa0fa4594d6e" translate="yes" xml:space="preserve">
          <source>Merging</source>
          <target state="translated">Merging</target>
        </trans-unit>
        <trans-unit id="c46dcb747276ef7e8abc1bb08d26a98e6491aa62" translate="yes" xml:space="preserve">
          <source>New Pull Request</source>
          <target state="translated">Новый запрос на вытаскивание</target>
        </trans-unit>
        <trans-unit id="7fb9ddf13694977e0cf256f6247e6abd2cc1d409" translate="yes" xml:space="preserve">
          <source>Note: Since the feature request is unofficial it is also advisable to contact &lt;code&gt;support@github.com&lt;/code&gt; to add your support for a feature like this to be implemented. The unofficial feature request above could be used as evidence of the amount of interest in this being implemented.</source>
          <target state="translated">Примечание. Поскольку запрос функции является неофициальным, рекомендуется также связаться с &lt;code&gt;support@github.com&lt;/code&gt; , чтобы добавить свою поддержку для реализации подобной функции. Вышеупомянутый неофициальный запрос может быть использован как свидетельство заинтересованности в этом.</target>
        </trans-unit>
        <trans-unit id="90ec6d50e987929ac6a45b7b32db268e747b1c74" translate="yes" xml:space="preserve">
          <source>Now that we have fetched the upstream repository, we want to merge its changes into our local branch. This will bring that branch into sync with the upstream, without losing our local changes.</source>
          <target state="translated">Теперь,когда мы получили исходный репозиторий,мы хотим слить его изменения в нашу локальную ветку.Это позволит синхронизировать это ответвление с восходящим потоком,не теряя при этом наши локальные изменения.</target>
        </trans-unit>
        <trans-unit id="fd009286901c837efdaef58b7a10f3197c9d3276" translate="yes" xml:space="preserve">
          <source>Now you have three options, but each will lead to a less-than-clean commit history.</source>
          <target state="translated">Теперь у вас есть три варианта,но каждый из них приведет к менее чистой истории коммитов.</target>
        </trans-unit>
        <trans-unit id="8bf2ab2b4594a56cd8b9fb6f9bdbeec3bb92f849" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;https://github.com/&amp;lt;repo&amp;gt;/commits/&amp;lt;hash&amp;gt;&lt;/code&gt;, where &lt;em&gt;repo&lt;/em&gt; is your fork, and &lt;em&gt;hash&lt;/em&gt; is full hash of commit which you can find in the upstream web interface. For example, I can open &lt;a href=&quot;https://github.com/max630/linux/commits/0aa0313f9d576affd7747cc3f179feb097d28990&quot;&gt;https://github.com/max630/linux/commits/0aa0313f9d576affd7747cc3f179feb097d28990&lt;/a&gt;, which points to &lt;code&gt;linux&lt;/code&gt;&lt;code&gt;master&lt;/code&gt; as time of writing.</source>
          <target state="translated">Откройте &lt;code&gt;https://github.com/&amp;lt;repo&amp;gt;/commits/&amp;lt;hash&amp;gt;&lt;/code&gt; , где &lt;em&gt;repo&lt;/em&gt; - это ваш форк, а &lt;em&gt;hash&lt;/em&gt; - полный хэш коммита, который вы можете найти в вышестоящем веб-интерфейсе. Например, я могу открыть &lt;a href=&quot;https://github.com/max630/linux/commits/0aa0313f9d576affd7747cc3f179feb097d28990&quot;&gt;https://github.com/max630/linux/commits/0aa0313f9d576affd7747cc3f179feb097d28990&lt;/a&gt; , который указывает на &lt;code&gt;master&lt;/code&gt; &lt;code&gt;linux&lt;/code&gt; как время написания.</target>
        </trans-unit>
        <trans-unit id="bf7747d9aa574b4704007bf15ba2ed436f66d151" translate="yes" xml:space="preserve">
          <source>Open menu &lt;em&gt;VCS&lt;/em&gt; &amp;rarr; &lt;em&gt;Git&lt;/em&gt;</source>
          <target state="translated">Откройте меню &lt;em&gt;VCS&lt;/em&gt; &amp;rarr; &lt;em&gt;Git&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="234ae272ca6f312c89a8e8df6909fdfb0acb3451" translate="yes" xml:space="preserve">
          <source>Open your fork on GitHub.</source>
          <target state="translated">Открой вилку на GitHub.</target>
        </trans-unit>
        <trans-unit id="27ac6148008f56cd689f0438348c712daa89325f" translate="yes" xml:space="preserve">
          <source>Past the initial upstream setup and master checkout, all you need to do is run the following command to sync your master with upstream: &lt;strong&gt;git pull upstream master&lt;/strong&gt;.</source>
          <target state="translated">После первоначальной настройки восходящего потока и проверки мастера все, что вам нужно сделать, это запустить следующую команду, чтобы синхронизировать ваш мастер с вышестоящим: &lt;strong&gt;git pull upstream master&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="30ab8d084e2209d47a1dc198c8de1e251f390a94" translate="yes" xml:space="preserve">
          <source>Pull Requests</source>
          <target state="translated">Тяните запросы</target>
        </trans-unit>
        <trans-unit id="ae6fc052a45c770a9169a7ab638bc505e00bb03c" translate="yes" xml:space="preserve">
          <source>Push the changes to your fork</source>
          <target state="translated">Нажмите изменения вилки</target>
        </trans-unit>
        <trans-unit id="5693314a70b827fd392394697ad3e48be809f455" translate="yes" xml:space="preserve">
          <source>Rebase and merge</source>
          <target state="translated">Переосмыслить и объединить</target>
        </trans-unit>
        <trans-unit id="2be8b8a63ab459b9cea7716971f0b489291f8f7d" translate="yes" xml:space="preserve">
          <source>Resolve merge conflicts if any and commit your merge</source>
          <target state="translated">Разрешите конфликты слияния,если таковые возникнут,и выполните слияние.</target>
        </trans-unit>
        <trans-unit id="d4af81a4796c3cb95c1f56e0df4695725005f254" translate="yes" xml:space="preserve">
          <source>Scroll down to</source>
          <target state="translated">Прокрутите вниз до</target>
        </trans-unit>
        <trans-unit id="d61c5e591073d46124cf6b9aecef7a23df6ba7fd" translate="yes" xml:space="preserve">
          <source>Select the repository in the UI.</source>
          <target state="translated">Выберите хранилище в пользовательском интерфейсе.</target>
        </trans-unit>
        <trans-unit id="e7e619212ed526f7f497ba569b8215af3e6930ce" translate="yes" xml:space="preserve">
          <source>Since November 2013 there has been an unofficial feature request open with GitHub to ask them to add a very simple and intuitive method to keep a local fork in sync with upstream:</source>
          <target state="translated">С ноября 2013 года в GitHub открыт неофициальный запрос на добавление очень простого и интуитивно понятного метода синхронизации локальной развилки с апстримом:</target>
        </trans-unit>
        <trans-unit id="7471ffd6ac4a8061b4408edaa480bb1bc093a600" translate="yes" xml:space="preserve">
          <source>So when your &lt;em&gt;Pull Request&lt;/em&gt; is accepted then you can safely delete the branch as your contributed code will be then live in your master of your forked repository when you update it with the upstream. By this your master will always be in clean condition to create a new branch to do another change.</source>
          <target state="translated">Поэтому, когда ваш &lt;em&gt;запрос на извлечение&lt;/em&gt; будет принят, вы можете безопасно удалить ветку, так как введенный вами код будет жить в вашем мастере вашего разветвленного репозитория, когда вы обновите его с помощью апстрима. Таким образом, ваш мастер всегда будет в чистом состоянии, чтобы создать новую ветку, чтобы сделать еще одно изменение.</target>
        </trans-unit>
        <trans-unit id="bde179cf043a598d6ebae765e11145b2713e12da" translate="yes" xml:space="preserve">
          <source>So yes, you can keep your repo updated with its upstream using the GitHub web UI, but doing so will sully your commit history. Stick to &lt;a href=&quot;https://stackoverflow.com/questions/7244321/how-do-i-update-a-github-forked-repository/7244456#7244456&quot;&gt;the command line&lt;/a&gt; instead - it's easy.</source>
          <target state="translated">Так что да, вы можете поддерживать свое репо в обновленном состоянии с помощью веб-интерфейса GitHub, но это приведет к потере истории ваших коммитов. Вместо этого придерживайтесь &lt;a href=&quot;https://stackoverflow.com/questions/7244321/how-do-i-update-a-github-forked-repository/7244456#7244456&quot;&gt;командной строки&lt;/a&gt; - это легко.</target>
        </trans-unit>
        <trans-unit id="af3d4309c9cbe26ad276b210691bac0fd29af135" translate="yes" xml:space="preserve">
          <source>Source is here: &lt;a href=&quot;https://github.com/upriver/upriver.github.io&quot;&gt;https://github.com/upriver/upriver.github.io&lt;/a&gt;</source>
          <target state="translated">Источник находится здесь: &lt;a href=&quot;https://github.com/upriver/upriver.github.io&quot;&gt;https://github.com/upriver/upriver.github.io&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2b25a8ecb73ab17a486ebf26f4dc535e692fd1d" translate="yes" xml:space="preserve">
          <source>Starting in May 2014, it is possible to update a fork directly from GitHub. This still works as of September 2017, &lt;strong&gt;BUT&lt;/strong&gt; it will lead to a dirty commit history.</source>
          <target state="translated">Начиная с мая 2014 года можно обновлять форк напрямую с GitHub. Это все еще работает с сентября 2017 года, &lt;strong&gt;НО&lt;/strong&gt; это приведет к грязной истории коммитов.</target>
        </trans-unit>
        <trans-unit id="94232c5c336a258f43a35d0ed1f8564a260b87f4" translate="yes" xml:space="preserve">
          <source>Stash the changes of your &quot;master&quot; branch:</source>
          <target state="translated">Сохраните изменения вашего &quot;хозяина&quot; филиала:</target>
        </trans-unit>
        <trans-unit id="00b47bb1619911e7792fe20f714c21d2a1fc7eab" translate="yes" xml:space="preserve">
          <source>Switch to master branch if you are not &lt;code&gt;git checkout master&lt;/code&gt;</source>
          <target state="translated">Переключитесь на ветку master, если вы не являетесь &lt;code&gt;git checkout master&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="550dbb15410741b3ec255e0399965d535e2b1607" translate="yes" xml:space="preserve">
          <source>Switch to the &quot;master&quot; branch of your fork (&quot;origin&quot;):</source>
          <target state="translated">Переключитесь на ветку &quot;мастер&quot; вилки (&quot;происхождение&quot;):</target>
        </trans-unit>
        <trans-unit id="4ae6fa22bc9918cf39eb8d8cef197a88e78982e8" translate="yes" xml:space="preserve">
          <source>Syncing</source>
          <target state="translated">Syncing</target>
        </trans-unit>
        <trans-unit id="a95b37b3017effb7b215d767ac0e2211e6aa724b" translate="yes" xml:space="preserve">
          <source>Syncing a fork</source>
          <target state="translated">Синхронизация вилки</target>
        </trans-unit>
        <trans-unit id="f6cab97732eaeae1f3f5633b252cbea26c2cada7" translate="yes" xml:space="preserve">
          <source>That depends on the size of your repository and how you forked it.</source>
          <target state="translated">Это зависит от размера вашего репозитория и от того,как вы его вкололи.</target>
        </trans-unit>
        <trans-unit id="5dc7ae634569e14ec7d42e039a67f21cd21cbe73" translate="yes" xml:space="preserve">
          <source>The &quot;fetch&quot; command is indispensable for staying up-to-date in a project: only when performing a &quot;git fetch&quot; will you be informed about the changes your colleagues pushed to the remote server.</source>
          <target state="translated">Команда &quot;fetch&quot; незаменима для того,чтобы оставаться в проекте в актуальном состоянии:только при выполнении &quot;git-фетча&quot; вы будете проинформированы об изменениях,которые ваши коллеги перенесли на удалённый сервер.</target>
        </trans-unit>
        <trans-unit id="aaf533ccf7e6caa9b7b03a28b06c9bac28a5ee27" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/apps/pull&quot;&gt;&quot;Pull&quot; app&lt;/a&gt; is an automatic set-up-and-forget solution. It will sync the default branch of your fork with the upstream repository.</source>
          <target state="translated">Приложение &lt;a href=&quot;https://github.com/apps/pull&quot;&gt;&quot;Pull&quot;&lt;/a&gt; - это решение для автоматической настройки и забывания. Он будет синхронизировать ветку по умолчанию вашего форка с репозиторием восходящего потока.</target>
        </trans-unit>
        <trans-unit id="0b41a8d83b439c9b4f4885f64b9339a1c1d30a13" translate="yes" xml:space="preserve">
          <source>The Setup</source>
          <target state="translated">Установка</target>
        </trans-unit>
        <trans-unit id="264bd0e9406f8519a0848bd766d97c323e32936c" translate="yes" xml:space="preserve">
          <source>The branch is updated once per hour directly on GitHub, on your local machine you need to pull the master branch to ensure that your local copy is in sync.</source>
          <target state="translated">Веточка обновляется один раз в час непосредственно на GitHub,на локальном компьютере вам нужно вытащить основную ветку,чтобы убедиться,что ваша локальная копия синхронизирована.</target>
        </trans-unit>
        <trans-unit id="8f7c026574a5c8cfd1326e6ff76ca5c776670d83" translate="yes" xml:space="preserve">
          <source>The default will create an ugly merge commit.</source>
          <target state="translated">По умолчанию создается уродливый коммит слияния.</target>
        </trans-unit>
        <trans-unit id="6f1ebfb3019b0fae6470df879b3b87ef304817de" translate="yes" xml:space="preserve">
          <source>The first part of this command lists all heads in the &lt;em&gt;upstream&lt;/em&gt; remote repo and removes the SHA-1 followed by &lt;code&gt;refs/heads/&lt;/code&gt; branch name prefix.</source>
          <target state="translated">Первая часть этой команды перечисляет все головы в удаленном репо по &lt;em&gt;восходящему&lt;/em&gt; каналу и удаляет SHA-1, за которым следует префикс &lt;code&gt;refs/heads/&lt;/code&gt; name.</target>
        </trans-unit>
        <trans-unit id="0fd61e5b8cc0dcec4af47834c1c482a521206bf7" translate="yes" xml:space="preserve">
          <source>Then for each of these branches, it pushes the local copy of the &lt;em&gt;upstream&lt;/em&gt; remote tracking branch (&lt;code&gt;refs/remotes/upstream/&amp;lt;branch&amp;gt;&lt;/code&gt; on local side) directly to the remote branch on &lt;em&gt;origin&lt;/em&gt; (&lt;code&gt;refs/heads/&amp;lt;branch&amp;gt;&lt;/code&gt; on remote side).</source>
          <target state="translated">Затем для каждой из этих ветвей она отправляет локальную копию &lt;em&gt;восходящей&lt;/em&gt; удаленной ветви отслеживания ( &lt;code&gt;refs/remotes/upstream/&amp;lt;branch&amp;gt;&lt;/code&gt; на локальной стороне) непосредственно в удаленную ветку в &lt;em&gt;источнике&lt;/em&gt; ( &lt;code&gt;refs/heads/&amp;lt;branch&amp;gt;&lt;/code&gt; на удаленной стороне ).</target>
        </trans-unit>
        <trans-unit id="c40a11b834f4f1e641021d97be329e8b5d0b544e" translate="yes" xml:space="preserve">
          <source>Then run:</source>
          <target state="translated">Тогда беги:</target>
        </trans-unit>
        <trans-unit id="4e3c3ccfe5c2a2ebf037580df28bcb9fb26dc642" translate="yes" xml:space="preserve">
          <source>Then whenever you want to catch up with the upstream repository master branch you need to:</source>
          <target state="translated">Затем,когда вы захотите догнать основную ветку репозитория вверх по течению,вам это понадобится:</target>
        </trans-unit>
        <trans-unit id="55f2ca371ae7e64950478e9d947b56fc79a8fc12" translate="yes" xml:space="preserve">
          <source>There are two main things on keeping a forked repository always update for good.</source>
          <target state="translated">Есть две основные вещи в том,чтобы держать вилочный репозиторий всегда обновленным навсегда.</target>
        </trans-unit>
        <trans-unit id="8b85c401196c95bfb03457e3a7d6a5d80620657f" translate="yes" xml:space="preserve">
          <source>There are two steps required to sync your repository with the upstream: first you must fetch from the remote, then you must merge the desired branch into your local branch.</source>
          <target state="translated">Есть два шага,необходимых для синхронизации вашего репозитория с восходящим потоком:сначала вы должны получить данные с удалённого устройства,затем вы должны слить желаемое ответвление в ваше локальное.</target>
        </trans-unit>
        <trans-unit id="8c4a41363b12f65f41188e7ab9b8178b65cd6f00" translate="yes" xml:space="preserve">
          <source>This assumes you have already configured an &lt;em&gt;upstream&lt;/em&gt; remote pointing at the source repository (where &lt;em&gt;origin&lt;/em&gt; was forked from) and have synced it with &lt;code&gt;git fetch upstream&lt;/code&gt;.</source>
          <target state="translated">Предполагается, что вы уже настроили удаленный входящий поток, указывающий на исходный репозиторий (откуда был разветвлен источник), и синхронизировали его с &lt;code&gt;git fetch upstream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3f73d1133e9c4aa6c1cb82052b4e208866b9e1e" translate="yes" xml:space="preserve">
          <source>This can be done with &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Cron&quot;&gt;cron&lt;/a&gt;&lt;/em&gt;. Here is for an example code if you do it in linux.</source>
          <target state="translated">Это можно сделать с &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Cron&quot;&gt;помощью cron&lt;/a&gt;&lt;/em&gt; . Вот пример кода, если вы делаете это в Linux.</target>
        </trans-unit>
        <trans-unit id="3c04d0e03a98055770769ef6c37adf6dffe58c36" translate="yes" xml:space="preserve">
          <source>This keeps the &lt;code&gt;master&lt;/code&gt; branch of the forked repo up-to-date with the parent repo.  It keeps the &lt;code&gt;feature&lt;/code&gt; branch of the forked repo updated via the &lt;code&gt;master&lt;/code&gt; branch of the forked repo by merging the same. This assumes that the &lt;code&gt;feature&lt;/code&gt; branch is the default branch which contains the config file.</source>
          <target state="translated">Это поддерживает ветвь &lt;code&gt;master&lt;/code&gt; ветвленного репо в актуальном состоянии с родительским репо. Он сохраняет ветвь функций разветвленного репо через &lt;code&gt;master&lt;/code&gt; ветвь разветвленного репо, объединяя ее. Это предполагает, что ветвь &lt;code&gt;feature&lt;/code&gt; является веткой по умолчанию, которая содержит файл конфигурации.</target>
        </trans-unit>
        <trans-unit id="ab33c2f98bee89af79c24e3347a9eca7e1e6213d" translate="yes" xml:space="preserve">
          <source>Try reading &lt;a href=&quot;https://www.atlassian.com/blog/git/handle-big-repositories-git&quot;&gt;this one&lt;/a&gt;. It describes how to handle big Git repositories and how to upstream them with latest changes.</source>
          <target state="translated">Попробуйте прочитать &lt;a href=&quot;https://www.atlassian.com/blog/git/handle-big-repositories-git&quot;&gt;это&lt;/a&gt; . В нем описывается, как обращаться с большими репозиториями Git и как добавлять в них последние изменения.</target>
        </trans-unit>
        <trans-unit id="7348e561a5ae9cb8353b257c56d9e4058e561c43" translate="yes" xml:space="preserve">
          <source>Try them. I use the first one to synchronize my local repository. Anyway the branches from the parent remote repository (&quot;upstream&quot;) will be accessible in Android Studio after you click &quot;Rebase my GitHub fork&quot;, and you will be able to operate with them easily.</source>
          <target state="translated">Попробуй их.Я использую первый,чтобы синхронизировать мой локальный репозиторий.В любом случае ветки из родительского удалённого репозитория (&quot;upstream&quot;)будут доступны в Android Studio после нажатия кнопки &quot;Перезагрузить мою GitHub-вилку&quot;,и вы сможете легко с ними работать.</target>
        </trans-unit>
        <trans-unit id="05a79fa3f7b71ff3af83543b0a99f9e7dc46d22d" translate="yes" xml:space="preserve">
          <source>Type name of the new branch and press</source>
          <target state="translated">Введите название нового филиала и нажмите</target>
        </trans-unit>
        <trans-unit id="48d7f3aad1014aaefe582d965a38754ca3c81e6d" translate="yes" xml:space="preserve">
          <source>Use these commands (in lucky case)</source>
          <target state="translated">Используйте эти команды (в случае удачи).</target>
        </trans-unit>
        <trans-unit id="c958a967cc046028cbaa999ed165b1df294e56ca" translate="yes" xml:space="preserve">
          <source>Use this if you dont want to add another remote endpoint to your project, as other solutions posted here.</source>
          <target state="translated">Используйте это,если вы не хотите добавлять еще одну удаленную конечную точку в ваш проект,как другие решения,размещенные здесь.</target>
        </trans-unit>
        <trans-unit id="113dabb069eb5c3615ca09078051fb9bfe028789" translate="yes" xml:space="preserve">
          <source>Visit the URL, click the green &quot;Install&quot; button and select the repositories where you want to enable automatic synchronization.</source>
          <target state="translated">Посетите URL-адрес,нажмите зеленую кнопку &quot;Install&quot; (Установить)и выберите репозитории,в которых вы хотите включить автоматическую синхронизацию.</target>
        </trans-unit>
        <trans-unit id="9e41c53b0c9e900eb8c17dcec719e6c5e2cda65e" translate="yes" xml:space="preserve">
          <source>We now have the upstream's master branch stored in a local branch, upstream/master</source>
          <target state="translated">Теперь у нас есть главная ветка вверх по течению,которая хранится в локальной ветке,вверх по течению.</target>
        </trans-unit>
        <trans-unit id="70996155aeb81fb8f674121234ed3c2b155fbcc6" translate="yes" xml:space="preserve">
          <source>When you have cloned your forked repository, go to the directory path where your clone resides and the few lines in your Git Bash Terminal.</source>
          <target state="translated">Когда вы клонировали ваш вилочный репозиторий,перейдите к пути к каталогу,где находится ваш клон и несколько строк в Git Bash Terminal.</target>
        </trans-unit>
        <trans-unit id="b4273e60bfcbcab2ec3724e77b23410fb74fa6aa" translate="yes" xml:space="preserve">
          <source>You can read about basic and advanced configs and various &lt;code&gt;mergemethods&lt;/code&gt;&lt;a href=&quot;https://github.com/wei/pull/#getting-started&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Вы можете прочитать об основных и расширенных конфигурациях и различных &lt;code&gt;mergemethods&lt;/code&gt; &lt;a href=&quot;https://github.com/wei/pull/#getting-started&quot;&gt;здесь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a5a7f7e1f68353d42fb1d08559607349859cb7d0" translate="yes" xml:space="preserve">
          <source>You can still visit &lt;a href=&quot;https://help.github.com/articles/fetching-a-remote/&quot;&gt;here&lt;/a&gt; for further queries</source>
          <target state="translated">Вы все еще можете посетить &lt;a href=&quot;https://help.github.com/articles/fetching-a-remote/&quot;&gt;здесь&lt;/a&gt; для дальнейших запросов</target>
        </trans-unit>
        <trans-unit id="ff6f510068911753cb9bd5368c75b45cf289df57" translate="yes" xml:space="preserve">
          <source>You can then fetch that branch to your local clone, and you won't have to push all that data back to GitHub when you push edits on top of that commit. Or use the web interface to change something in that branch.</source>
          <target state="translated">Затем вы можете забрать эту ветку в свой локальный клон,и вам не придётся проталкивать все эти данные обратно в GitHub,когда вы проталкиваете правки поверх этого коммита.Или использовать веб-интерфейс для изменения чего-либо в этой ветке.</target>
        </trans-unit>
        <trans-unit id="39a2962d24c5da003463d40c3ba453db9e711b97" translate="yes" xml:space="preserve">
          <source>You only need to use the &lt;code&gt;-f&lt;/code&gt; the first time after you've rebased.</source>
          <target state="translated">Вам нужно использовать &lt;code&gt;-f&lt;/code&gt; только в первый раз после того, как вы перебазировали.</target>
        </trans-unit>
        <trans-unit id="c434032ffe13d43d03ab1c4fccc8af93e0a936ea" translate="yes" xml:space="preserve">
          <source>You're done! Congratulations!</source>
          <target state="translated">С тобой покончено! Поздравляю!</target>
        </trans-unit>
        <trans-unit id="a746abb742e0859202204870a3d7b7c8a1cc09c0" translate="yes" xml:space="preserve">
          <source>and assign a predictable name to your pull request (e.g., &lt;code&gt;Update from original&lt;/code&gt;).</source>
          <target state="translated">и назначьте предсказуемое имя для вашего запроса извлечения (например, &lt;code&gt;Update from original&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="df21a3d2fd99b84fa7cb13ec4ad8cb363da327a4" translate="yes" xml:space="preserve">
          <source>base fork</source>
          <target state="translated">базовая вилка</target>
        </trans-unit>
        <trans-unit id="532f130ef6fb0e430af8a5beabc44c9f973fffb7" translate="yes" xml:space="preserve">
          <source>drop down to your fork, and the</source>
          <target state="translated">упасть к твоей вилке,и</target>
        </trans-unit>
        <trans-unit id="2fea52e0bcab5f5be75f35cc928f2d5d550f6363" translate="yes" xml:space="preserve">
          <source>head fork</source>
          <target state="translated">вилка</target>
        </trans-unit>
        <trans-unit id="adddb4502940da2585c73da6895d602125b04b64" translate="yes" xml:space="preserve">
          <source>if you see that link. Otherwise, manually set the</source>
          <target state="translated">если вы увидите эту ссылку.В противном случае,вручную установите</target>
        </trans-unit>
        <trans-unit id="4f4d58ad0cad805b755078913c2a8c10b63617f7" translate="yes" xml:space="preserve">
          <source>put this code on the &lt;code&gt;crontab file&lt;/code&gt; to execute the job in hourly basis.</source>
          <target state="translated">поместите этот код в &lt;code&gt;crontab file&lt;/code&gt; чтобы выполнять работу каждый час.</target>
        </trans-unit>
        <trans-unit id="2b5782d6a2c529fd97cbf05eb0094e6162849111" translate="yes" xml:space="preserve">
          <source>switching the base</source>
          <target state="translated">переключение базы</target>
        </trans-unit>
        <trans-unit id="d057e0f6d02a5d2cb09ee3e8d5bcb43e5378e0b5" translate="yes" xml:space="preserve">
          <source>then create the &lt;code&gt;cron.sh&lt;/code&gt; script file and a &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/a/56304600/4058484&quot;&gt;git interaction&lt;/a&gt;&lt;/em&gt; with &lt;em&gt;&lt;a href=&quot;https://www.ssh.com/ssh/agent&quot;&gt;ssh-agent&lt;/a&gt;&lt;/em&gt; and/or &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/a/55779022/4058484&quot;&gt;expect&lt;/a&gt;&lt;/em&gt; as below</source>
          <target state="translated">затем создайте &lt;code&gt;cron.sh&lt;/code&gt; сценария cron.sh и &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/a/56304600/4058484&quot;&gt;git-взаимодействие&lt;/a&gt;&lt;/em&gt; с &lt;em&gt;&lt;a href=&quot;https://www.ssh.com/ssh/agent&quot;&gt;ssh-agent&lt;/a&gt;&lt;/em&gt; и / или &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/a/55779022/4058484&quot;&gt;ожидайте,&lt;/a&gt;&lt;/em&gt; как показано ниже</target>
        </trans-unit>
        <trans-unit id="e94efa29d42e9ae0e72fe4835a46e739de853f87" translate="yes" xml:space="preserve">
          <source>to the upstream. Now GitHub will compare your fork with the original, and you should see all the latest changes.</source>
          <target state="translated">вверх по течению.Теперь GitHub сравнит вашу вилку с оригиналом,и вы должны увидеть все последние изменения.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
