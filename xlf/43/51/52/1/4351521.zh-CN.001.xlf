<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/4351521">
    <body>
      <group id="4351521">
        <trans-unit id="b50e86e761f82efa200e9eca818a5d105f496d51" translate="yes" xml:space="preserve">
          <source>2018 answer based on current trends in the wild:</source>
          <target state="translated">2018年的答案是根据目前野外的发展趋势。</target>
        </trans-unit>
        <trans-unit id="bb81f365acb453f994bd5895b3d229d80facd16f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/75lb/command-line-args/&quot;&gt;command-line-args&lt;/a&gt; is worth a look!</source>
          <target state="translated">&lt;a href=&quot;https://github.com/75lb/command-line-args/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;命令行参数&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;值得一看！&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="752d538acc99c28e358b2d57743da75a77ce6844" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/75lb/command-line-args/wiki/Implement-command-parsing-(git-style)&quot;&gt;Command-based syntax&lt;/a&gt; (git style) in the form:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/75lb/command-line-args/wiki/Implement-command-parsing-(git-style)&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;基于命令的语法&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（git样式），形式为：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9bada59fc9d7241a2c55376f715bcb383ae29163" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/75lb/command-line-args/wiki/Implement-multiple-command-parsing-(docker-style)&quot;&gt;Command and sub-command syntax&lt;/a&gt; (docker style) in the form:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/75lb/command-line-args/wiki/Implement-multiple-command-parsing-(docker-style)&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;命令和子命令语法&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（docker风格），形式为：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0ae55c031f4e381953992c261ce54003509dee9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.npmjs.com/package/yargs&quot;&gt;Yargs&lt;/a&gt; is one of the fun ones, its docs are cool to read.</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/package/yargs&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Yargs&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是有趣的工具之一，其文档很酷。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a30a515a4867e1a1eec7f9ff356c377f624c7ea2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; : The directory of node.exe in your maching (C:\Program Files\nodejs\node.exe')</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：您的机器中的node.exe目录（C：\ Program Files \ nodejs \ node.exe'）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5df65ac620831e0d7463844911c43948cc6e3c26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; :  The directory of your project file. (proj.js)</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：项目文件的目录。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（proj.js）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a4b2a7d26f25ae5b8a265f8eeeafee1a34acd48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&lt;/code&gt; :  Your first argument to node (arg1)</source>
          <target state="translated">&lt;code&gt;2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：您对节点（arg1）的第一个参数&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6a72f3e4d2fab1f28e76d22d0db5042ac355a6bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;3&lt;/code&gt; :  Your second argument to node (arg2)</source>
          <target state="translated">&lt;code&gt;3&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：您对节点（arg2）的第二个参数&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ef62555e09875f9f3ccbced379f11dd7b6446b58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;4&lt;/code&gt; :  Your third argument to node (arg3)</source>
          <target state="translated">&lt;code&gt;4&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：您对节点（arg3）的第三个参数&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65218cdc84483e0511071a41bce00bdba8c3bb8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; now looks like this:</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在看起来像这样：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d46f061ffde5e9aff0afce4576a442ceeb16080" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;process.argv&lt;/code&gt; is an array containing the command line arguments. The first element will be 'node', the second element will be the name of the JavaScript file. The next elements will be any additional command line arguments.</source>
          <target state="translated">&lt;code&gt;process.argv&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是一个包含命令行参数的数组。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;第一个元素是'node'，第二个元素是JavaScript文件的名称。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;接下来的元素将是任何其他命令行参数。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="937db6c89bcef40136859fb1f69a06629f232d10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;process.argv&lt;/code&gt; is your friend, capturing command line args is natively supported in Node JS. See example below::</source>
          <target state="translated">&lt;code&gt;process.argv&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是您的朋友，Node JS本身支持捕获命令行args。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请参见以下示例：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b54402ce04102aaa277ed94dea9f7e1116815f61" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/bcoe/yargs&quot;&gt;Yargs&lt;/a&gt;&lt;/strong&gt;: More sophisticated argument parsing (heavy).</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/bcoe/yargs&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Yargs&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：更复杂的参数解析（繁重）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a66a9047c82d3da887937e77a571720471260824" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/dthree/vorpal&quot;&gt;Vorpal.js&lt;/a&gt;&lt;/strong&gt;: Mature / interactive command-line applications with argument parsing.</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/dthree/vorpal&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vorpal.js&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：具有参数解析功能的成熟/交互式命令行应用程序。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e420a2bc8c3c0e3197d6efaf9e501a612011c41a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/sindresorhus/meow&quot;&gt;Meow&lt;/a&gt;&lt;/strong&gt;: Lighter alternative to Commander.js</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/sindresorhus/meow&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;喵呜声&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：Commander.js的更轻替代&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="82c07a16cd78edb692ac42957cce83760e612bfb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/substack/minimist&quot;&gt;Minimist&lt;/a&gt;&lt;/strong&gt;: For minimal argument parsing.</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/substack/minimist&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Minimist&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：用于最少的参数解析。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6910ce6c0c504d91dd2f9153e595ef5a056d2ff6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/tj/commander.js&quot;&gt;Commander.js&lt;/a&gt;&lt;/strong&gt;: Most adopted module for argument parsing.</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/tj/commander.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Commander.js&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：最常用的参数解析模块。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed77d83383147cb6090e012892a2a54d203a7deb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Explaination:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Explaination:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a4ac08b102e6d45b1e7de120f5170845f8f28050" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Result:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Result:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7eaf275bb731e5ef3ccedc471ed49543201814ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Terminal:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Terminal:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="200627b0eb37efd54845f9a6bd7c0133da5e8d51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Update&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e76e6ef23ac67349e0dc8a4655d2cf6cf212efcf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;proj.js&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;proj.js&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="589ef7f726c7d060767690de33c0b21ef8bc1d6d" translate="yes" xml:space="preserve">
          <source>A typical usage guide example.</source>
          <target state="translated">一个典型的使用指南范例。</target>
        </trans-unit>
        <trans-unit id="25fc0855d05d55e0fe1e2fbcf405cf07b187d824" translate="yes" xml:space="preserve">
          <source>A usage guide (typically printed when &lt;code&gt;--help&lt;/code&gt; is set) can be generated using &lt;a href=&quot;https://github.com/75lb/command-line-usage&quot;&gt;command-line-usage&lt;/a&gt;. See the examples below and &lt;a href=&quot;https://github.com/75lb/command-line-usage&quot;&gt;read the documentation&lt;/a&gt; for instructions how to create them.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以使用&lt;/font&gt;&lt;a href=&quot;https://github.com/75lb/command-line-usage&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;command-line-usage&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;生成使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指南（通常在&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;设置&lt;/font&gt;&lt;/font&gt; &lt;code&gt;--help&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;时打印&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请参阅下面的示例，并&lt;/font&gt;&lt;a href=&quot;https://github.com/75lb/command-line-usage&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;阅读文档&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以获取有关如何创建它们的说明。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5126940d744a6dff391a643edf858b06f00785ed" translate="yes" xml:space="preserve">
          <source>Advanced usage</source>
          <target state="translated">高级用途</target>
        </trans-unit>
        <trans-unit id="d3856495df63d2738bca0e86a9e1efd1b6c6b91c" translate="yes" xml:space="preserve">
          <source>All this script does is loop through the process.argv array and prints the indexes, along with the elements stored in those indexes. It's very useful for debugging if you ever question what arguments you're receiving, and in what order.</source>
          <target state="translated">这个脚本所做的就是循环遍历 process.argv 数组,并打印出索引以及存储在这些索引中的元素。它对于调试非常有用,如果你怀疑你收到的是什么参数,以及按照什么顺序接收的参数。</target>
        </trans-unit>
        <trans-unit id="65fe6d76ce856d8ae664c0384ae9fc2b1aae5568" translate="yes" xml:space="preserve">
          <source>Although Above answers are perfect, and someone has already suggested yargs, using the package is really easy.
This is a nice package which makes passing arguments to command line really easy.</source>
          <target state="translated">虽然上面的答案很完美,而且已经有人提出了yargs,但是使用这个包真的很简单。这是个不错的软件包,它能让向命令行传递参数真的很容易。</target>
        </trans-unit>
        <trans-unit id="3c89c266f535f51f9afb5ea78b504b60888af477" translate="yes" xml:space="preserve">
          <source>And this command</source>
          <target state="translated">而这个命令</target>
        </trans-unit>
        <trans-unit id="bb5aa68344884a3a391ef2950153ef8869d1eb19" translate="yes" xml:space="preserve">
          <source>Beside the above typical usage, you can configure command-line-args to accept more advanced syntax forms.</source>
          <target state="translated">除了上述的典型用法外,你还可以配置命令行-args来接受更高级的语法形式。</target>
        </trans-unit>
        <trans-unit id="65fa4768386f834bba7ce3151e0c68a039303335" translate="yes" xml:space="preserve">
          <source>Check out &lt;a href=&quot;https://github.com/substack/node-optimist&quot;&gt;optimist library&lt;/a&gt;, it is much better than parsing command line options by hand.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;签出&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/substack/node-optimist&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;乐观主义者的图书馆&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它比手动分析命令行选项好得多。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1ff2cd1997d7df965a378de168754dbe1161362f" translate="yes" xml:space="preserve">
          <source>Co-Prompt</source>
          <target state="translated">Co-Prompt</target>
        </trans-unit>
        <trans-unit id="40af9b6b625ab6e11bf854606683b1110ab94985" translate="yes" xml:space="preserve">
          <source>Commander.js</source>
          <target state="translated">Commander.js</target>
        </trans-unit>
        <trans-unit id="5b78cf19b0d40bedf91b76ee41d66d1548ce2c4e" translate="yes" xml:space="preserve">
          <source>ES6-style no-dependencies solution:</source>
          <target state="translated">ES6风格的无依赖性解决方案。</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="0ea2cfd5eced6b829685f7e261982b7326d50ec4" translate="yes" xml:space="preserve">
          <source>File : args.js</source>
          <target state="translated">文件:args.js</target>
        </trans-unit>
        <trans-unit id="3af446e6b080a84c55dc959a39a6abf2539dcde7" translate="yes" xml:space="preserve">
          <source>For example, assuming the following script for process-args.js:</source>
          <target state="translated">例如,假设以下脚本为process-args.js。</target>
        </trans-unit>
        <trans-unit id="2f42ece28b7e9e63b840a5e75141439ae2c615b2" translate="yes" xml:space="preserve">
          <source>For example.</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="bafd4b54282745a2bed1442852b73f4b3189a77a" translate="yes" xml:space="preserve">
          <source>Further Reading</source>
          <target state="translated">延伸阅读</target>
        </trans-unit>
        <trans-unit id="ed4fe0948b981c16cf662cf6315e1acec1be4818" translate="yes" xml:space="preserve">
          <source>Furthermore, &lt;code&gt;stdio&lt;/code&gt; can generate a help/usage output automatically. If you call &lt;code&gt;ops.printHelp()&lt;/code&gt; you'll get the following:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此外，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;stdio&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以自动生成帮助/使用输出。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果调用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ops.printHelp()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，将得到以下内容：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bbc5030df62c84387667f984cdb00e1214f65716" translate="yes" xml:space="preserve">
          <source>Grouped options are also supported, so you can write &lt;code&gt;-om&lt;/code&gt; instead of &lt;code&gt;-o -m&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;还支持分组选项，因此您可以编写&lt;/font&gt;&lt;/font&gt; &lt;code&gt;-om&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而不是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;-o -m&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ce1e89075407e7cf52f1f745a8c491853b8bb95c" translate="yes" xml:space="preserve">
          <source>Here are &lt;a href=&quot;http://nodejs.org/docs/latest/api/process.html#process_process_argv&quot;&gt;the node docs on handling command line args:&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下是&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://nodejs.org/docs/latest/api/process.html#process_process_argv&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有关处理命令行参数的节点文档：&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d5d765cf314fefa592250785adabf3a8d4c89166" translate="yes" xml:space="preserve">
          <source>Here is an example of how to use it taken straight from the minimist documentation:</source>
          <target state="translated">下面是一个直接从最小化文档中获取的使用方法的例子。</target>
        </trans-unit>
        <trans-unit id="4d64e1fe797fbf1357ef66fb228a630b9d1277f2" translate="yes" xml:space="preserve">
          <source>Here's an example from the github/npm page:</source>
          <target state="translated">下面是githubnpm页面上的一个例子。</target>
        </trans-unit>
        <trans-unit id="886217bbe0cdb0c05f434b499768c081f9b6b668" translate="yes" xml:space="preserve">
          <source>Here's my 0-dep solution for named arguments:</source>
          <target state="translated">以下是我对命名参数的0-dep解决方案。</target>
        </trans-unit>
        <trans-unit id="e9fbf17a6548642de16b88d64ebe53d423e42d9a" translate="yes" xml:space="preserve">
          <source>How do I pass command line arguments to a Node.js program</source>
          <target state="translated">如何向Node.js程序传递命令行参数?</target>
        </trans-unit>
        <trans-unit id="d918b0fc08ee41ac31b9e7540fdf28c1874a3c48" translate="yes" xml:space="preserve">
          <source>How would I access those arguments in JavaScript? Somehow I was not able to find this information on the web.</source>
          <target state="translated">我如何在JavaScript中访问这些参数?不知为何,我在网上找不到这些信息。</target>
        </trans-unit>
        <trans-unit id="f14e51f959c27e0063550081dc1cba5c6585e662" translate="yes" xml:space="preserve">
          <source>I have a web server written in &lt;a href=&quot;http://en.wikipedia.org/wiki/Node.js&quot;&gt;Node.js&lt;/a&gt; and I would like to launch with a specific folder. I'm not sure how to access arguments in JavaScript. I'm running node like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我有一个用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Node.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Node.js&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;编写的Web服务器&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，我想使用一个特定的文件夹启动。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我不确定如何在JavaScript中访问参数。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我正在像这样运行节点：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bbde77c5d612087bb178616603de29b090fed523" translate="yes" xml:space="preserve">
          <source>If you run script with below atguments</source>
          <target state="translated">如果你运行的脚本有以下参数</target>
        </trans-unit>
        <trans-unit id="30b7ad7dbb43d31ca2f0ec2a2ec90b0df6ba5a83" translate="yes" xml:space="preserve">
          <source>If you run the previous code with this command:</source>
          <target state="translated">如果你用这个命令运行前面的代码。</target>
        </trans-unit>
        <trans-unit id="2bac81a5d58f2961da48768f8916935ba7fb1a35" translate="yes" xml:space="preserve">
          <source>If you want to create one with no dependencies I've got one on my Github if you wanna check it out, it's actually quite simple and easy to use, click &lt;a href=&quot;https://github.com/madhur-acharya/Node-js-CLI&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您想创建一个没有依赖性的程序，我想在Github上创建一个程序，如果您想查看它，它实际上非常简单易用，请单击&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/madhur-acharya/Node-js-CLI&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此处&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="973419cde9e00588e98d6d1eb72b63fe594b09f5" translate="yes" xml:space="preserve">
          <source>If you want to do this in vanilla JS/ES6 you can use the following solution</source>
          <target state="translated">如果你想在vanilla JSES6中实现这个功能,你可以使用以下解决方案</target>
        </trans-unit>
        <trans-unit id="5758ef0c7438eba0aa3fa73a6af442223e084036" translate="yes" xml:space="preserve">
          <source>If you want to run something like this :</source>
          <target state="translated">如果你想运行这样的东西。</target>
        </trans-unit>
        <trans-unit id="c60577f76009422a43b9a231506003e7a2ebb044" translate="yes" xml:space="preserve">
          <source>If your script is called myScript.js and you want to pass the first and last name, 'Sean Worthington', as arguments like below:</source>
          <target state="translated">如果你的脚本名为myScript.js,并且你想把名字和姓氏'Sean Worthington'作为参数,就像下面这样。</target>
        </trans-unit>
        <trans-unit id="858cf305b0472a596a69cacc9ae7f9720579acd5" translate="yes" xml:space="preserve">
          <source>Input: &lt;code&gt;ts-node index.js -p param --parameter parameter&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;输入：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ts-node index.js -p param --parameter parameter&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="efd358a5b860b29b38c37faca0ec4302082eed29" translate="yes" xml:space="preserve">
          <source>It helps you work with configuration files, environment variables, command-line arguments.</source>
          <target state="translated">它可以帮助你处理配置文件、环境变量、命令行参数。</target>
        </trans-unit>
        <trans-unit id="92e88c28a84dc04f243f2ff82f9667f39cdbdb5f" translate="yes" xml:space="preserve">
          <source>It's probably a good idea to manage your configuration in a centralized manner using something like &lt;strong&gt;nconf&lt;/strong&gt;&lt;a href=&quot;https://github.com/flatiron/nconf&quot;&gt;https://github.com/flatiron/nconf&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nconf &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;https://github.com/flatiron/nconf&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://github.com/flatiron/nconf之&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类的方式以集中方式管理您的配置可能是一个好主意&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6bc20c61136fc1600ffcbdcd1653b39eee12f4de" translate="yes" xml:space="preserve">
          <source>Joseph Merdrignac posted a beautiful one using reduce, but it relied on a &lt;code&gt;key=value&lt;/code&gt; syntax instead of &lt;code&gt;-k value&lt;/code&gt; and &lt;code&gt;--key value&lt;/code&gt;. I rewrote it much uglier and longer to use that second standard, and I'll post it as an answer because it wouldn't fit as a commentary. But it does get the job done.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;约瑟夫&amp;middot; &lt;/font&gt; &lt;code&gt;--key value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; Joseph Merdrignac）发布了一个漂亮的使用reduce的代码，但它依靠的是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;key=value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;语法，而不是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;-k value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;--key value&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我将其重写为更丑陋且使用第二标准的时间更长，我将其发布为答案，因为它不适合用作评论。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但这确实完成了工作。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3dcbad204095230ea14447be64d133cef03f50d2" translate="yes" xml:space="preserve">
          <source>Launching the Node.js process as:</source>
          <target state="translated">启动Node.js进程为。</target>
        </trans-unit>
        <trans-unit id="7f8f716e4ad184201e53449fdd650f558428bbcc" translate="yes" xml:space="preserve">
          <source>Most of the people have given good answers. I would also like to contribute something here. I am providing the answer using &lt;code&gt;lodash&lt;/code&gt; library to iterate through all command line arguments we pass while starting the app:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;大多数人都给出了很好的答案。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我也想在这里做点贡献。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;lodash&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;库&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;提供了答案，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以迭代我们在启动应用程序时传递的所有命令行参数：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6fa3b3cdf5618c2536d68c5d2e1028e8baa9d62d" translate="yes" xml:space="preserve">
          <source>Most used NPM packages for argument parsing:</source>
          <target state="translated">最常用的NPM包用于参数解析。</target>
        </trans-unit>
        <trans-unit id="bc25956dc16bc60662a48b538baa2e898a248fb8" translate="yes" xml:space="preserve">
          <source>Next, parse the options using &lt;a href=&quot;https://github.com/75lb/command-line-args/blob/master/doc/API.md#commandlineargsoptiondefinitions-options--object-&quot;&gt;commandLineArgs()&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;接下来，使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/75lb/command-line-args/blob/master/doc/API.md#commandlineargsoptiondefinitions-options--object-&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;commandLineArgs（）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;解析选项&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cfdcb68614b400f2a4251009bb7a3a158c2e7511" translate="yes" xml:space="preserve">
          <source>No Libs with Flags Formatted into a Simple Object</source>
          <target state="translated">没有将旗帜格式化为简单对象的 Libs 文件</target>
        </trans-unit>
        <trans-unit id="9d3413faa926a713ec29f338d39ec4c5f7d522d1" translate="yes" xml:space="preserve">
          <source>Note that the first arg is usually the path to nodejs, and the second arg is the location of the script you're executing.</source>
          <target state="translated">注意,第一个参数通常是到nodejs的路径,第二个参数是你要执行的脚本的位置。</target>
        </trans-unit>
        <trans-unit id="a37f1e2a489eb94699842058efe8da1ade3fce1c" translate="yes" xml:space="preserve">
          <source>Note: Naturally this will fail when the argument contains a &lt;code&gt;=&lt;/code&gt;. This is only for very simple usage.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意：当参数包含&lt;/font&gt;&lt;/font&gt; &lt;code&gt;=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;时，这自然会失败&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这仅用于非常简单的用法。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8ab622e3476f5540010ffb8f1e7d7df461f6a652" translate="yes" xml:space="preserve">
          <source>Note: you should use named arguments like &lt;code&gt;file.js x=1 y=2&lt;/code&gt; to use
  this solution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意：您应该使用诸如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file.js x=1 y=2&lt;/code&gt; 之&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类的命名参数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来使用此解决方案。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3f80ea00ca969abbe7141b32ca301328d0eef806" translate="yes" xml:space="preserve">
          <source>Official docs</source>
          <target state="translated">正式文件</target>
        </trans-unit>
        <trans-unit id="f5ce25b2dbe78589edce688d17adebc8ab75261d" translate="yes" xml:space="preserve">
          <source>Optimist (node-optimist)</source>
          <target state="translated">乐观主义者(节点-乐观主义者)</target>
        </trans-unit>
        <trans-unit id="a28ae0cf1465b13bae2f953795bb9a036445fc42" translate="yes" xml:space="preserve">
          <source>Optimist is deprecated. Try &lt;a href=&quot;https://github.com/yargs/yargs&quot;&gt;yargs&lt;/a&gt; which is an active fork of optimist.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不赞成使用乐观主义者。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;尝试&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/yargs/yargs&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;yargs&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它是乐观主义者的积极分支。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="39d98be8265956bb176749fb305e15d1090980bb" translate="yes" xml:space="preserve">
          <source>Or something like :</source>
          <target state="translated">或者类似于....:</target>
        </trans-unit>
        <trans-unit id="188629c6a4bcd5d21ba41fd02c0f915eb7c3e9bd" translate="yes" xml:space="preserve">
          <source>Output is here (it reads options with dashes etc, short and long, numeric etc).</source>
          <target state="translated">输出在这里(它可以读取带破折号等、长短、数字等选项)。</target>
        </trans-unit>
        <trans-unit id="55e2af166b6568c5e7f9fc67c3095d791499588c" translate="yes" xml:space="preserve">
          <source>Output: &lt;code&gt;{ p: 'param ', parameter: 'parameter' }&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;输出：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;{ p: 'param ', parameter: 'parameter' }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60f02abe75a746e51f59fa9aeac2b09ba633dd9f" translate="yes" xml:space="preserve">
          <source>Passing arguments is easy, and receiving them is just a matter of reading the process.argv array Node makes accessible from everywhere, basically. But you're sure to want to read them as key/value pairs, so you'll need a piece to script to interpret it.</source>
          <target state="translated">传递参数很容易,而接收参数只需读取process.argv数组Node让你从任何地方访问,基本上就可以了。但你肯定想把它们当作key-value对来读,所以你需要一个块到脚本来解释。</target>
        </trans-unit>
        <trans-unit id="df02d8e14263b0c3ac9386c7ea60b93bc7511285" translate="yes" xml:space="preserve">
          <source>Passing,parsing arguments is an easy process. Node provides you with the process.argv property, which is an array of strings, which are the arguments that were used when Node was invoked. 
The first entry of the array is the Node executable, and the second entry is the name of your script.</source>
          <target state="translated">传递,解析参数是一个简单的过程。Node为你提供了process.argv属性,这是一个字符串数组,是调用Node时使用的参数。数组的第一个条目是Node的可执行文件,第二个条目是你的脚本名称。</target>
        </trans-unit>
        <trans-unit id="31b1d455981218fd338af1eb59dc92557466e6c5" translate="yes" xml:space="preserve">
          <source>Please visit &lt;a href=&quot;https://yargs.js.org/&quot;&gt;https://yargs.js.org/&lt;/a&gt; for more info.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请访问&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://yargs.js.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://yargs.js.org/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;了解更多信息。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3dd155672d015f7145686598ed40f3dcff2c0c56" translate="yes" xml:space="preserve">
          <source>Promptly</source>
          <target state="translated">Promptly</target>
        </trans-unit>
        <trans-unit id="095c451a2e9ce2021d38bf795774b05403fc75f1" translate="yes" xml:space="preserve">
          <source>Real World</source>
          <target state="translated">真实的世界</target>
        </trans-unit>
        <trans-unit id="771c61b85a0458c0070026fd061c5bff792a3801" translate="yes" xml:space="preserve">
          <source>Several great answers here, but it all seems very complex. This is very similar to how bash scripts access argument values and it's already provided standard with node.js as MooGoo pointed out.
(Just to make it understandable to somebody that's new to node.js)</source>
          <target state="translated">这里有几个很好的答案,但看起来都很复杂。这和bash脚本如何访问参数值非常相似,而且正如MooGoo指出的那样,它已经在node.js中提供了标准的参数值。(只是为了让刚接触node.js的人能够理解)</target>
        </trans-unit>
        <trans-unit id="de72ea9e60d3b0389fb7873c1d21268b088fa6d4" translate="yes" xml:space="preserve">
          <source>Simple</source>
          <target state="translated">Simple</target>
        </trans-unit>
        <trans-unit id="c1c59d44f221600e0fedde4bad87ad2ce83d52a1" translate="yes" xml:space="preserve">
          <source>So you can use it as you want. For instance:</source>
          <target state="translated">所以,你可以根据自己的喜好来使用。比如说。</target>
        </trans-unit>
        <trans-unit id="447e1dada2c34f5547f0f4ecd4f1651b8ee14c0f" translate="yes" xml:space="preserve">
          <source>Standard Method (no library)</source>
          <target state="translated">标准方法(无图书馆)</target>
        </trans-unit>
        <trans-unit id="98786c8ded5c4925f866199ff3fdbba7c3833a93" translate="yes" xml:space="preserve">
          <source>Stdio Library</source>
          <target state="translated">卫星图书馆</target>
        </trans-unit>
        <trans-unit id="b21eb38584d9dc99b6d1c74d50e6bb8905e37736" translate="yes" xml:space="preserve">
          <source>Than just do:</source>
          <target state="translated">比只是做。</target>
        </trans-unit>
        <trans-unit id="66e6c00f58cf5213ed7068fee38612f5dd0e0d5c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/Polymer/polymer-cli/&quot;&gt;polymer-cli&lt;/a&gt; usage guide is a good real-life example.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所述&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/Polymer/polymer-cli/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;聚合物-CLI&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用指南是一个很好的真实的例子。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f6656d01bd381427a9c2598d07646da6efdb4a22" translate="yes" xml:space="preserve">
          <source>The arguments are stored in &lt;code&gt;process.argv&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参数存储在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;process.argv&lt;/code&gt; 中</target>
        </trans-unit>
        <trans-unit id="34f1e0c5b16b43b8ba7eaab3f715e781b26a6e3b" translate="yes" xml:space="preserve">
          <source>The best way to pass command line arguments to a Node.js program is by using a Command Line Interface (CLI)</source>
          <target state="translated">向Node.js程序传递命令行参数的最好方法是使用命令行接口(CLI)</target>
        </trans-unit>
        <trans-unit id="79bec65ce5b835ae870afaa0d7f7c180db45a8f5" translate="yes" xml:space="preserve">
          <source>The easiest way to parse command-line arguments in NodeJS is using the &lt;a href=&quot;http://sgmonda.github.io/stdio/&quot;&gt;stdio&lt;/a&gt; module. Inspired by UNIX &lt;code&gt;getopt&lt;/code&gt; utility, it is as trivial as follows:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在NodeJS中解析命令行参数的最简单方法是使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://sgmonda.github.io/stdio/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;stdio&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;模块。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;受UNIX &lt;/font&gt;&lt;/font&gt; &lt;code&gt;getopt&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实用程序的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;启发&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它很简单，如下所示：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a490939206ac0bcf2c8796dd7db3adff8c887101" translate="yes" xml:space="preserve">
          <source>The first element of the process.argv array will always be a file system path pointing to the node executable. The second element is the name of the JavaScript file that is being executed. And the third element is the first argument that was actually passed by the user.</source>
          <target state="translated">process.argv数组的第一个元素永远是指向节点可执行的文件系统路径。第二个元素是正在执行的JavaScript文件的名称。而第三个元素是用户实际传递的第一个参数。</target>
        </trans-unit>
        <trans-unit id="94bfae1be55dc1be5d8966f9970c35d33520328d" translate="yes" xml:space="preserve">
          <source>The previous message is shown also if a mandatory option is not given (preceded by the error message) or if it is mispecified (for instance, if you specify a single arg for an option and it needs 2).</source>
          <target state="translated">如果没有给出一个强制性的选项(前面有错误信息),或者是误指定的选项(例如,如果你为一个选项指定了一个arg,而它需要2个),那么前面的信息也会显示出来。</target>
        </trans-unit>
        <trans-unit id="4e00afb986323ba904efea3a982c45371e5a241e" translate="yes" xml:space="preserve">
          <source>The result will be:</source>
          <target state="translated">其结果将是。</target>
        </trans-unit>
        <trans-unit id="8e61792efbb2a00f2d19a8492d5e0f9c7e664466" translate="yes" xml:space="preserve">
          <source>The simplest way of retrieving arguments in Node.js is via the process.argv array. This is a global object that you can use without importing any additional libraries to use it. You simply need to pass arguments to a Node.js application, just like we showed earlier, and these arguments can be accessed within the application via the process.argv array.</source>
          <target state="translated">Node.js中最简单的检索参数的方法是通过process.argv数组。这是一个全局对象,你不需要导入任何额外的库就可以使用它。你只需要将参数传递给Node.js应用程序,就像我们前面展示的那样,这些参数可以通过process.argv数组在应用程序中访问。</target>
        </trans-unit>
        <trans-unit id="adeacc8cb473b0de32dd12d815a19627d86a73ab" translate="yes" xml:space="preserve">
          <source>The up-to-date &lt;em&gt;right&lt;/em&gt; answer for this it to use the &lt;a href=&quot;https://www.npmjs.org/package/minimist&quot;&gt;minimist&lt;/a&gt; library. We used to use &lt;a href=&quot;https://github.com/substack/node-optimist#deprecation-notice&quot;&gt;node-optimist&lt;/a&gt; but it has since been deprecated.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该跟上时代的&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正确&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的这一点，答案使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.npmjs.org/package/minimist&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;minimist&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;库。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们曾经使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/substack/node-optimist#deprecation-notice&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;节点优化器，&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但此后不推荐使用。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de2c0dae54857e630d36f4345a1690b8f9dcbce1" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;ops&lt;/code&gt; object will be as follows:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;然后&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ops&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象将如下所示：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db54c202e0621fd1d87d03e9536302ed081947a3" translate="yes" xml:space="preserve">
          <source>Then within your script you write:</source>
          <target state="translated">然后在你的剧本里写。</target>
        </trans-unit>
        <trans-unit id="b7c6247b3c78dfd2b63296f63ec0558ad05d6b3d" translate="yes" xml:space="preserve">
          <source>There is a nifty npm module called &lt;a href=&quot;https://www.npmjs.com/package/nodejs-cli&quot;&gt;nodejs-cli&lt;/a&gt; that you can use.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个漂亮的npm模块，称为&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.npmjs.com/package/nodejs-cli&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nodejs-cli&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2625f0b6b968f23ea4f270de943e3bb4598ab6c8" translate="yes" xml:space="preserve">
          <source>There is plenty more to learn, please see &lt;a href=&quot;https://github.com/75lb/command-line-args/wiki&quot;&gt;the wiki&lt;/a&gt; for examples and documentation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;还有很多要学习的内容，请参阅&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/75lb/command-line-args/wiki&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Wiki&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;中的示例和文档。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fbc6043817243caf00612cf2fda71c54cc719358" translate="yes" xml:space="preserve">
          <source>There's an app for that. Well, module. Well, more than one, probably hundreds.</source>
          <target state="translated">有一个应用程序。嗯,模块。嗯,不止一个,可能有几百个。</target>
        </trans-unit>
        <trans-unit id="d28cff60d61dc085d6b30a2e3e934f664a04d523" translate="yes" xml:space="preserve">
          <source>This returns:</source>
          <target state="translated">这就返回。</target>
        </trans-unit>
        <trans-unit id="02eb50512f6212b38a5f022b6eb6b5e324c5192f" translate="yes" xml:space="preserve">
          <source>This will generate:</source>
          <target state="translated">这将产生。</target>
        </trans-unit>
        <trans-unit id="bbf00088b3655e5973eb3ae8a7959ae7301af9eb" translate="yes" xml:space="preserve">
          <source>To access the values, first create a list of &lt;a href=&quot;https://github.com/75lb/command-line-args/blob/master/doc/option-definition.md&quot;&gt;option definitions&lt;/a&gt; describing the options your application accepts. The &lt;a href=&quot;https://github.com/75lb/command-line-args/blob/master/doc/option-definition.md#optiontype--function&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; property is a setter function (the value supplied is passed through this), giving you full control over the value received.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要访问这些值，请首先创建一个&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/75lb/command-line-args/blob/master/doc/option-definition.md&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;选项定义&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;列表，以&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;描述应用程序接受的选项。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/75lb/command-line-args/blob/master/doc/option-definition.md#optiontype--function&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性是setter函数（提供通过此传递的值），让您对收到的数值完全控制。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="48d1e59036ae728f35fa7a8a010a58bfabbbb1ae" translate="yes" xml:space="preserve">
          <source>To normalize the arguments like a regular javascript function would receive, I do this in my node.js shell scripts:</source>
          <target state="translated">为了像普通的javascript函数那样将参数规范化,我在node.js的shell脚本中这样做。</target>
        </trans-unit>
        <trans-unit id="24baec3bfe1e8be16495676bb16578a5607ee8cb" translate="yes" xml:space="preserve">
          <source>To run above code just run following commands:</source>
          <target state="translated">要运行上述代码,只需运行以下命令。</target>
        </trans-unit>
        <trans-unit id="acfbeece7160a297ee93766c93e330dcdd905fd3" translate="yes" xml:space="preserve">
          <source>TypeScript solution with no libraries:</source>
          <target state="translated">没有库的TypeScript解决方案。</target>
        </trans-unit>
        <trans-unit id="e8e0ac79a91bda2bae9e427a10855845cb26d841" translate="yes" xml:space="preserve">
          <source>Usage guide generation</source>
          <target state="translated">使用指南的生成</target>
        </trans-unit>
        <trans-unit id="89f79145ae2743d46b0ebe880623e1fae41e00aa" translate="yes" xml:space="preserve">
          <source>Vanilla javascript argument parsing:</source>
          <target state="translated">Vanilla javascript参数解析。</target>
        </trans-unit>
        <trans-unit id="53f8749917b838d87adb674f1fe0057c16fb4fa2" translate="yes" xml:space="preserve">
          <source>With this code a command &lt;code&gt;node script.js alpha beta -charlie delta --echo foxtrot&lt;/code&gt; would give you the following object</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用此代码，命令&lt;/font&gt;&lt;/font&gt; &lt;code&gt;node script.js alpha beta -charlie delta --echo foxtrot&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将为您提供以下对象&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="13a7b094914885992d22a9b97eb8504002e93d0d" translate="yes" xml:space="preserve">
          <source>Without libraries</source>
          <target state="translated">没有图书馆</target>
        </trans-unit>
        <trans-unit id="382db5d58593bc1bc08b91f8846f1721d22d7d9a" translate="yes" xml:space="preserve">
          <source>Works great for defining your options, actions, and arguments. It also generates the help pages for you.</source>
          <target state="translated">对于定义你的选项、操作和参数来说,它的作用非常大。它还可以为你生成帮助页面。</target>
        </trans-unit>
        <trans-unit id="c15f6f770026f97d27cbe656470403ca88a0889f" translate="yes" xml:space="preserve">
          <source>Works great for getting input from the user, if you like the callback approach.</source>
          <target state="translated">如果你喜欢回调的方法,对于获取用户的输入很有效果。</target>
        </trans-unit>
        <trans-unit id="473471155d4a7a83d7f92d29c9bcb1bafb1fbed1" translate="yes" xml:space="preserve">
          <source>Works great for getting input from the user, if you like the generator approach.</source>
          <target state="translated">对于获取用户的输入,如果你喜欢发电机的方法,效果很好。</target>
        </trans-unit>
        <trans-unit id="a1423e2e798a017cd435a74859b4b48f6c9e1eba" translate="yes" xml:space="preserve">
          <source>Would generate the output:</source>
          <target state="translated">会产生输出。</target>
        </trans-unit>
        <trans-unit id="e6a8d7ad44c0d9a42de45cbe309cf3b743e6d0bd" translate="yes" xml:space="preserve">
          <source>You can also use libraries like yargs for working with commnadline arguments.</source>
          <target state="translated">你也可以使用yargs等库来处理commnadline参数。</target>
        </trans-unit>
        <trans-unit id="3e28006573e1ab87e416f5be4413df95ab4020d9" translate="yes" xml:space="preserve">
          <source>You can install &lt;a href=&quot;http://sgmonda.github.io/stdio/&quot;&gt;stdio&lt;/a&gt; module using &lt;a href=&quot;https://npmjs.org/&quot;&gt;NPM&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;a href=&quot;https://npmjs.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NPM&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;安装&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://sgmonda.github.io/stdio/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;stdio&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;模块&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b9f3161ee5ad6eacb3b18a0ab698589d55ba148f" translate="yes" xml:space="preserve">
          <source>You can parse all arguments and check if they exist.</source>
          <target state="translated">你可以解析所有的参数并检查它们是否存在。</target>
        </trans-unit>
        <trans-unit id="c1dc71d7dc7761b7a86f52d7d564010770178342" translate="yes" xml:space="preserve">
          <source>You can reach command line arguments using &lt;code&gt;system.args&lt;/code&gt;. And i use the solution below to parse arguments into an object, so i can get which one i want by name.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;system.args&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;到达命令行参数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我使用下面的解决方案将参数解析为一个对象，这样我就可以通过名称获得想要的参数。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3112d26df959d9deb1f3350462cb3753848ae2ce" translate="yes" xml:space="preserve">
          <source>You can set options using the main notation standards (&lt;a href=&quot;https://github.com/75lb/command-line-args/wiki/Notation-rules&quot;&gt;learn more&lt;/a&gt;). These commands are all equivalent, setting the same values:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以使用主要的注释标准来设置选项（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/75lb/command-line-args/wiki/Notation-rules&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;了解更多信息&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这些命令都是等效的，设置相同的值：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="903542c19856a746c883bee0316f78acaba71a6d" translate="yes" xml:space="preserve">
          <source>You will get array like</source>
          <target state="translated">你会得到如下数组</target>
        </trans-unit>
        <trans-unit id="ce49f129bd52a562f2092f8536e7e4d5aff72065" translate="yes" xml:space="preserve">
          <source>also,</source>
          <target state="translated">also,</target>
        </trans-unit>
        <trans-unit id="dd07cba2970065ea73307a57be1fc94a63d737c5" translate="yes" xml:space="preserve">
          <source>as stated in the node docs 
The process.argv property returns an array containing the command line arguments passed when the Node.js process was launched.</source>
          <target state="translated">如node docs中所述,process.argv属性返回一个数组,包含Node.js进程启动时传递的命令行参数。</target>
        </trans-unit>
        <trans-unit id="9d76a54140fa1df73a1d38af7bd7ce360160c3cf" translate="yes" xml:space="preserve">
          <source>by (much longer)</source>
          <target state="translated">由(更久</target>
        </trans-unit>
        <trans-unit id="3c8cc960bbae72e229f0adb785fb3133f7f99fb4" translate="yes" xml:space="preserve">
          <source>file: parse-cli-arguments.js:</source>
          <target state="translated">file:parse-cli-arguments.js:</target>
        </trans-unit>
        <trans-unit id="73abb53d7a7001f667a704428cb4d4154a801c91" translate="yes" xml:space="preserve">
          <source>for this command &lt;code&gt;node index.js count=2 print debug=false msg=hi&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于此命令&lt;/font&gt;&lt;/font&gt; &lt;code&gt;node index.js count=2 print debug=false msg=hi&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a97be680aa341a5c54d245984576a76607020e45" translate="yes" xml:space="preserve">
          <source>here &lt;code&gt;server.js&lt;/code&gt; is my server code. Node.js help says this is possible:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;server.js&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是我的服务器代码。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Node.js帮助说这是可能的：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="140f86aae51ab9e1cda9b4254fe98a74eb54c1a1" translate="yes" xml:space="preserve">
          <source>input</source>
          <target state="translated">input</target>
        </trans-unit>
        <trans-unit id="01a6fb64c0b1be91983ada3e62141b0ea9180144" translate="yes" xml:space="preserve">
          <source>now you don't need to know the index of the argument. use it like &lt;code&gt;args.whatever&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在您不需要知道参数的索引。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;像&lt;/font&gt; &lt;code&gt;args.whatever&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;一样使用它&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1029d67644815d428f554e390aa966d57a0b29b8" translate="yes" xml:space="preserve">
          <source>output</source>
          <target state="translated">output</target>
        </trans-unit>
        <trans-unit id="c64c661af526e8fa80b386b5f86da2012516db38" translate="yes" xml:space="preserve">
          <source>p.s. Please correct the code in map and reduce function
if you find more elegant solution, thanks ;)</source>
          <target state="translated">p.s.s.如果你找到了更优雅的解决方案,请改正map和reduce函数中的代码,谢谢;)</target>
        </trans-unit>
        <trans-unit id="190be81e1d481ec40e17306a257611162f4265dd" translate="yes" xml:space="preserve">
          <source>to auto parse Boolean &amp;amp; Number</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自动解析布尔值和数字&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d1ebdfa4aa20b3d74e1a72ab8cbb79749ebd5a74" translate="yes" xml:space="preserve">
          <source>we can change</source>
          <target state="translated">我们可以改变</target>
        </trans-unit>
        <trans-unit id="086954a0fa962f9fac2e9fb7545767b96c30fcb0" translate="yes" xml:space="preserve">
          <source>whithout librairies: using Array.prototype.reduce()</source>
          <target state="translated">whithout librairies:using Array.prototype.reduce()</target>
        </trans-unit>
        <trans-unit id="878970969c5931b99d39520e12633461705e930a" translate="yes" xml:space="preserve">
          <source>will produce the following result</source>
          <target state="translated">将产生以下结果</target>
        </trans-unit>
        <trans-unit id="226bed19707ee74ab3ec8f9a776242ace57828a4" translate="yes" xml:space="preserve">
          <source>worked only in &lt;strong&gt;NodeJS &amp;gt; 6&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仅在&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NodeJS&amp;gt; 6中有效&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="79c876f9ad3ef8ff31b9707488caeb5bb46ef222" translate="yes" xml:space="preserve">
          <source>your actual arguments start form &lt;code&gt;2nd&lt;/code&gt; index of &lt;code&gt;argv&lt;/code&gt; array, that is &lt;code&gt;process.argv[2]&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您的实际参数从&lt;/font&gt; &lt;code&gt;argv&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;数组的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;2nd&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;索引&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;开始&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，即&lt;/font&gt; &lt;code&gt;process.argv[2]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
