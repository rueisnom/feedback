<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/4351521">
    <body>
      <group id="4351521">
        <trans-unit id="b50e86e761f82efa200e9eca818a5d105f496d51" translate="yes" xml:space="preserve">
          <source>2018 answer based on current trends in the wild:</source>
          <target state="translated">2018年の回答は、現在の野良の傾向を踏まえたものです。</target>
        </trans-unit>
        <trans-unit id="bb81f365acb453f994bd5895b3d229d80facd16f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/75lb/command-line-args/&quot;&gt;command-line-args&lt;/a&gt; is worth a look!</source>
          <target state="translated">&lt;a href=&quot;https://github.com/75lb/command-line-args/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コマンドライン引数&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は一見の価値があります！&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="752d538acc99c28e358b2d57743da75a77ce6844" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/75lb/command-line-args/wiki/Implement-command-parsing-(git-style)&quot;&gt;Command-based syntax&lt;/a&gt; (git style) in the form:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/75lb/command-line-args/wiki/Implement-command-parsing-(git-style)&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の形式の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コマンドベースの構文&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（gitスタイル）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9bada59fc9d7241a2c55376f715bcb383ae29163" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/75lb/command-line-args/wiki/Implement-multiple-command-parsing-(docker-style)&quot;&gt;Command and sub-command syntax&lt;/a&gt; (docker style) in the form:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/75lb/command-line-args/wiki/Implement-multiple-command-parsing-(docker-style)&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次の形式のコマンドおよびサブコマンド構文&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（dockerスタイル）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0ae55c031f4e381953992c261ce54003509dee9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.npmjs.com/package/yargs&quot;&gt;Yargs&lt;/a&gt; is one of the fun ones, its docs are cool to read.</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/package/yargs&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Yargs&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は楽しいものの1つであり、そのドキュメントは読みやすいです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a30a515a4867e1a1eec7f9ff356c377f624c7ea2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; : The directory of node.exe in your maching (C:\Program Files\nodejs\node.exe')</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：マシン内のnode.exeのディレクトリ（C：\ Program Files \ nodejs \ node.exe '）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5df65ac620831e0d7463844911c43948cc6e3c26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; :  The directory of your project file. (proj.js)</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：プロジェクトファイルのディレクトリ。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（proj.js）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a4b2a7d26f25ae5b8a265f8eeeafee1a34acd48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&lt;/code&gt; :  Your first argument to node (arg1)</source>
          <target state="translated">&lt;code&gt;2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：ノードの最初の引数（arg1）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6a72f3e4d2fab1f28e76d22d0db5042ac355a6bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;3&lt;/code&gt; :  Your second argument to node (arg2)</source>
          <target state="translated">&lt;code&gt;3&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：ノードへの2番目の引数（arg2）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ef62555e09875f9f3ccbced379f11dd7b6446b58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;4&lt;/code&gt; :  Your third argument to node (arg3)</source>
          <target state="translated">&lt;code&gt;4&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：ノードへの3番目の引数（arg3）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65218cdc84483e0511071a41bce00bdba8c3bb8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; now looks like this:</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は次のようになります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d46f061ffde5e9aff0afce4576a442ceeb16080" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;process.argv&lt;/code&gt; is an array containing the command line arguments. The first element will be 'node', the second element will be the name of the JavaScript file. The next elements will be any additional command line arguments.</source>
          <target state="translated">&lt;code&gt;process.argv&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、コマンドライン引数を含む配列です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初の要素は「ノード」、2番目の要素はJavaScriptファイルの名前になります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次の要素は、追加のコマンドライン引数になります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="937db6c89bcef40136859fb1f69a06629f232d10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;process.argv&lt;/code&gt; is your friend, capturing command line args is natively supported in Node JS. See example below::</source>
          <target state="translated">&lt;code&gt;process.argv&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は友だちです。コマンドライン引数のキャプチャはNode JSでネイティブにサポートされています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下の例を参照してください：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b54402ce04102aaa277ed94dea9f7e1116815f61" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/bcoe/yargs&quot;&gt;Yargs&lt;/a&gt;&lt;/strong&gt;: More sophisticated argument parsing (heavy).</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/bcoe/yargs&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Yargs&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：より高度な引数解析（重い）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a66a9047c82d3da887937e77a571720471260824" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/dthree/vorpal&quot;&gt;Vorpal.js&lt;/a&gt;&lt;/strong&gt;: Mature / interactive command-line applications with argument parsing.</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/dthree/vorpal&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vorpal.js&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：引数を解析する成熟した/インタラクティブなコマンドラインアプリケーション。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e420a2bc8c3c0e3197d6efaf9e501a612011c41a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/sindresorhus/meow&quot;&gt;Meow&lt;/a&gt;&lt;/strong&gt;: Lighter alternative to Commander.js</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/sindresorhus/meow&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ニャー&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：Commander.jsの軽量版&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="82c07a16cd78edb692ac42957cce83760e612bfb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/substack/minimist&quot;&gt;Minimist&lt;/a&gt;&lt;/strong&gt;: For minimal argument parsing.</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/substack/minimist&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Minimist&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：最小限の引数解析用。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6910ce6c0c504d91dd2f9153e595ef5a056d2ff6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/tj/commander.js&quot;&gt;Commander.js&lt;/a&gt;&lt;/strong&gt;: Most adopted module for argument parsing.</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/tj/commander.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Commander.js&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：引数の解析に最も採用されているモジュール。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed77d83383147cb6090e012892a2a54d203a7deb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Explaination:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Explaination:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a4ac08b102e6d45b1e7de120f5170845f8f28050" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Result:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Result:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7eaf275bb731e5ef3ccedc471ed49543201814ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Terminal:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Terminal:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="200627b0eb37efd54845f9a6bd7c0133da5e8d51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Update&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e76e6ef23ac67349e0dc8a4655d2cf6cf212efcf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;proj.js&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;proj.js&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="589ef7f726c7d060767690de33c0b21ef8bc1d6d" translate="yes" xml:space="preserve">
          <source>A typical usage guide example.</source>
          <target state="translated">典型的な使用ガイドの例。</target>
        </trans-unit>
        <trans-unit id="25fc0855d05d55e0fe1e2fbcf405cf07b187d824" translate="yes" xml:space="preserve">
          <source>A usage guide (typically printed when &lt;code&gt;--help&lt;/code&gt; is set) can be generated using &lt;a href=&quot;https://github.com/75lb/command-line-usage&quot;&gt;command-line-usage&lt;/a&gt;. See the examples below and &lt;a href=&quot;https://github.com/75lb/command-line-usage&quot;&gt;read the documentation&lt;/a&gt; for instructions how to create them.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用法ガイド（通常&lt;/font&gt;&lt;/font&gt; &lt;code&gt;--help&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が設定&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;されている場合に印刷され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）は、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/75lb/command-line-usage&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;command-line-usageを使用して&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;生成でき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下の例を参照し、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それらを作成する方法について&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/75lb/command-line-usage&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、ドキュメント&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をお&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;読み&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5126940d744a6dff391a643edf858b06f00785ed" translate="yes" xml:space="preserve">
          <source>Advanced usage</source>
          <target state="translated">高度な使い方</target>
        </trans-unit>
        <trans-unit id="d3856495df63d2738bca0e86a9e1efd1b6c6b91c" translate="yes" xml:space="preserve">
          <source>All this script does is loop through the process.argv array and prints the indexes, along with the elements stored in those indexes. It's very useful for debugging if you ever question what arguments you're receiving, and in what order.</source>
          <target state="translated">このスクリプトが行うのは、process.argv配列をループしてインデックスを表示し、それらのインデックスに格納されている要素を表示するだけです。どのような引数を受け取っているのか、どのような順番で受け取っているのか疑問に思ったときにデバッグするのに非常に便利です。</target>
        </trans-unit>
        <trans-unit id="65fe6d76ce856d8ae664c0384ae9fc2b1aae5568" translate="yes" xml:space="preserve">
          <source>Although Above answers are perfect, and someone has already suggested yargs, using the package is really easy.
This is a nice package which makes passing arguments to command line really easy.</source>
          <target state="translated">上記の答えは完璧で、すでに誰かが yargs を提案していますが、パッケージを使うのは本当に簡単です。これはコマンドラインに引数を渡すのが本当に簡単になる素敵なパッケージです。</target>
        </trans-unit>
        <trans-unit id="3c89c266f535f51f9afb5ea78b504b60888af477" translate="yes" xml:space="preserve">
          <source>And this command</source>
          <target state="translated">そして、この命令は</target>
        </trans-unit>
        <trans-unit id="bb5aa68344884a3a391ef2950153ef8869d1eb19" translate="yes" xml:space="preserve">
          <source>Beside the above typical usage, you can configure command-line-args to accept more advanced syntax forms.</source>
          <target state="translated">上記の典型的な使用法の他に、より高度な構文を受け入れるようにコマンドライン引数を設定することができます。</target>
        </trans-unit>
        <trans-unit id="65fa4768386f834bba7ce3151e0c68a039303335" translate="yes" xml:space="preserve">
          <source>Check out &lt;a href=&quot;https://github.com/substack/node-optimist&quot;&gt;optimist library&lt;/a&gt;, it is much better than parsing command line options by hand.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/substack/node-optimist&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オプティミストライブラリを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;確認してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。コマンドラインオプションを手動で解析するよりもはるかに優れています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1ff2cd1997d7df965a378de168754dbe1161362f" translate="yes" xml:space="preserve">
          <source>Co-Prompt</source>
          <target state="translated">Co-Prompt</target>
        </trans-unit>
        <trans-unit id="40af9b6b625ab6e11bf854606683b1110ab94985" translate="yes" xml:space="preserve">
          <source>Commander.js</source>
          <target state="translated">Commander.js</target>
        </trans-unit>
        <trans-unit id="5b78cf19b0d40bedf91b76ee41d66d1548ce2c4e" translate="yes" xml:space="preserve">
          <source>ES6-style no-dependencies solution:</source>
          <target state="translated">ES6風の依存性のないソリューション。</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="0ea2cfd5eced6b829685f7e261982b7326d50ec4" translate="yes" xml:space="preserve">
          <source>File : args.js</source>
          <target state="translated">ファイル名:args.js</target>
        </trans-unit>
        <trans-unit id="3af446e6b080a84c55dc959a39a6abf2539dcde7" translate="yes" xml:space="preserve">
          <source>For example, assuming the following script for process-args.js:</source>
          <target state="translated">例えば、process-args.jsのスクリプトを以下のように想定します。</target>
        </trans-unit>
        <trans-unit id="2f42ece28b7e9e63b840a5e75141439ae2c615b2" translate="yes" xml:space="preserve">
          <source>For example.</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="bafd4b54282745a2bed1442852b73f4b3189a77a" translate="yes" xml:space="preserve">
          <source>Further Reading</source>
          <target state="translated">続きを読む</target>
        </trans-unit>
        <trans-unit id="ed4fe0948b981c16cf662cf6315e1acec1be4818" translate="yes" xml:space="preserve">
          <source>Furthermore, &lt;code&gt;stdio&lt;/code&gt; can generate a help/usage output automatically. If you call &lt;code&gt;ops.printHelp()&lt;/code&gt; you'll get the following:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さらに、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;stdio&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はヘルプ/使用法の出力を自動的に生成できます。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ops.printHelp()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を呼び出すと&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、次のようになります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bbc5030df62c84387667f984cdb00e1214f65716" translate="yes" xml:space="preserve">
          <source>Grouped options are also supported, so you can write &lt;code&gt;-om&lt;/code&gt; instead of &lt;code&gt;-o -m&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;グループ化されたオプションもサポートされているので&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;-o -m&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代わりに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;-om&lt;/code&gt; と&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;書くことができます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ce1e89075407e7cf52f1f745a8c491853b8bb95c" translate="yes" xml:space="preserve">
          <source>Here are &lt;a href=&quot;http://nodejs.org/docs/latest/api/process.html#process_process_argv&quot;&gt;the node docs on handling command line args:&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここにある&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://nodejs.org/docs/latest/api/process.html#process_process_argv&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コマンドライン引数を処理上のノードのドキュメントは：&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d5d765cf314fefa592250785adabf3a8d4c89166" translate="yes" xml:space="preserve">
          <source>Here is an example of how to use it taken straight from the minimist documentation:</source>
          <target state="translated">ここでは、minimist のドキュメントから直接取得した使用方法の例を示します。</target>
        </trans-unit>
        <trans-unit id="4d64e1fe797fbf1357ef66fb228a630b9d1277f2" translate="yes" xml:space="preserve">
          <source>Here's an example from the github/npm page:</source>
          <target state="translated">以下はgithubnpmのページからの例です。</target>
        </trans-unit>
        <trans-unit id="886217bbe0cdb0c05f434b499768c081f9b6b668" translate="yes" xml:space="preserve">
          <source>Here's my 0-dep solution for named arguments:</source>
          <target state="translated">ここに名前付き引数のための私の0-depソリューションがあります。</target>
        </trans-unit>
        <trans-unit id="e9fbf17a6548642de16b88d64ebe53d423e42d9a" translate="yes" xml:space="preserve">
          <source>How do I pass command line arguments to a Node.js program</source>
          <target state="translated">Node.js プログラムにコマンドライン引数を渡す方法</target>
        </trans-unit>
        <trans-unit id="d918b0fc08ee41ac31b9e7540fdf28c1874a3c48" translate="yes" xml:space="preserve">
          <source>How would I access those arguments in JavaScript? Somehow I was not able to find this information on the web.</source>
          <target state="translated">JavaScriptでこれらの引数にアクセスするにはどうすればいいのでしょうか?どういうわけか、この情報をウェブ上で見つけることができませんでした。</target>
        </trans-unit>
        <trans-unit id="f14e51f959c27e0063550081dc1cba5c6585e662" translate="yes" xml:space="preserve">
          <source>I have a web server written in &lt;a href=&quot;http://en.wikipedia.org/wiki/Node.js&quot;&gt;Node.js&lt;/a&gt; and I would like to launch with a specific folder. I'm not sure how to access arguments in JavaScript. I'm running node like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Node.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Node.js&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;記述されたWebサーバー&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があり、特定のフォルダーで起動したいと思います。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptで引数にアクセスする方法がわかりません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私はこのようなノードを実行しています：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bbde77c5d612087bb178616603de29b090fed523" translate="yes" xml:space="preserve">
          <source>If you run script with below atguments</source>
          <target state="translated">以下の引数を指定してスクリプトを実行すると</target>
        </trans-unit>
        <trans-unit id="30b7ad7dbb43d31ca2f0ec2a2ec90b0df6ba5a83" translate="yes" xml:space="preserve">
          <source>If you run the previous code with this command:</source>
          <target state="translated">このコマンドで先ほどのコードを実行すると</target>
        </trans-unit>
        <trans-unit id="2bac81a5d58f2961da48768f8916935ba7fb1a35" translate="yes" xml:space="preserve">
          <source>If you want to create one with no dependencies I've got one on my Github if you wanna check it out, it's actually quite simple and easy to use, click &lt;a href=&quot;https://github.com/madhur-acharya/Node-js-CLI&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;依存関係のないものを作成したい場合は、Githubで入手できます。チェックアウトしたい場合は、非常にシンプルで使いやすい&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/madhur-acharya/Node-js-CLI&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここをクリックして&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="973419cde9e00588e98d6d1eb72b63fe594b09f5" translate="yes" xml:space="preserve">
          <source>If you want to do this in vanilla JS/ES6 you can use the following solution</source>
          <target state="translated">バニラのJSES6でこれを行いたい場合は、以下のような解決策があります。</target>
        </trans-unit>
        <trans-unit id="5758ef0c7438eba0aa3fa73a6af442223e084036" translate="yes" xml:space="preserve">
          <source>If you want to run something like this :</source>
          <target state="translated">このようなものを実行したい場合は .</target>
        </trans-unit>
        <trans-unit id="c60577f76009422a43b9a231506003e7a2ebb044" translate="yes" xml:space="preserve">
          <source>If your script is called myScript.js and you want to pass the first and last name, 'Sean Worthington', as arguments like below:</source>
          <target state="translated">myScript.jsという名前のスクリプトで、以下のように最初と最後の名前である'Sean Worthington'を引数に渡したいとします。</target>
        </trans-unit>
        <trans-unit id="858cf305b0472a596a69cacc9ae7f9720579acd5" translate="yes" xml:space="preserve">
          <source>Input: &lt;code&gt;ts-node index.js -p param --parameter parameter&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;入力：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ts-node index.js -p param --parameter parameter&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="efd358a5b860b29b38c37faca0ec4302082eed29" translate="yes" xml:space="preserve">
          <source>It helps you work with configuration files, environment variables, command-line arguments.</source>
          <target state="translated">設定ファイル、環境変数、コマンドライン引数を操作するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="92e88c28a84dc04f243f2ff82f9667f39cdbdb5f" translate="yes" xml:space="preserve">
          <source>It's probably a good idea to manage your configuration in a centralized manner using something like &lt;strong&gt;nconf&lt;/strong&gt;&lt;a href=&quot;https://github.com/flatiron/nconf&quot;&gt;https://github.com/flatiron/nconf&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nconf &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;https://github.com/flatiron/nconf&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://github.com/flatiron/nconfの&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ようなものを使用して集中的な方法で構成を管理することはおそらく良い考えです&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6bc20c61136fc1600ffcbdcd1653b39eee12f4de" translate="yes" xml:space="preserve">
          <source>Joseph Merdrignac posted a beautiful one using reduce, but it relied on a &lt;code&gt;key=value&lt;/code&gt; syntax instead of &lt;code&gt;-k value&lt;/code&gt; and &lt;code&gt;--key value&lt;/code&gt;. I rewrote it much uglier and longer to use that second standard, and I'll post it as an answer because it wouldn't fit as a commentary. But it does get the job done.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Joseph Merdrignacはreduceを使用して美しいものを投稿しましたが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;-k value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt; &lt;code&gt;--key value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;ではなく&lt;/font&gt;&lt;/font&gt; &lt;code&gt;key=value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;構文に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;依存していました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私はその2番目の標準を使用するためにずっと醜く、より長く書き直しました。コメントとしては適合しないので、それを回答として投稿します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、それは仕事を成し遂げます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3dcbad204095230ea14447be64d133cef03f50d2" translate="yes" xml:space="preserve">
          <source>Launching the Node.js process as:</source>
          <target state="translated">としてNode.jsのプロセスを起動します。</target>
        </trans-unit>
        <trans-unit id="7f8f716e4ad184201e53449fdd650f558428bbcc" translate="yes" xml:space="preserve">
          <source>Most of the people have given good answers. I would also like to contribute something here. I am providing the answer using &lt;code&gt;lodash&lt;/code&gt; library to iterate through all command line arguments we pass while starting the app:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ほとんどの人が良い答えを出しました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで何か貢献したいです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アプリの起動時に渡すすべてのコマンドライン引数を反復処理するために&lt;/font&gt;&lt;/font&gt; &lt;code&gt;lodash&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ライブラリを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して答えを提供します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6fa3b3cdf5618c2536d68c5d2e1028e8baa9d62d" translate="yes" xml:space="preserve">
          <source>Most used NPM packages for argument parsing:</source>
          <target state="translated">引数解析に最もよく使われるNPMパッケージ。</target>
        </trans-unit>
        <trans-unit id="bc25956dc16bc60662a48b538baa2e898a248fb8" translate="yes" xml:space="preserve">
          <source>Next, parse the options using &lt;a href=&quot;https://github.com/75lb/command-line-args/blob/master/doc/API.md#commandlineargsoptiondefinitions-options--object-&quot;&gt;commandLineArgs()&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/75lb/command-line-args/blob/master/doc/API.md#commandlineargsoptiondefinitions-options--object-&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;commandLineArgs（）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用してオプションを解析します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cfdcb68614b400f2a4251009bb7a3a158c2e7511" translate="yes" xml:space="preserve">
          <source>No Libs with Flags Formatted into a Simple Object</source>
          <target state="translated">シンプルなオブジェクトにフォーマットされたフラグを持つ Lib はありません。</target>
        </trans-unit>
        <trans-unit id="9d3413faa926a713ec29f338d39ec4c5f7d522d1" translate="yes" xml:space="preserve">
          <source>Note that the first arg is usually the path to nodejs, and the second arg is the location of the script you're executing.</source>
          <target state="translated">最初の引数は通常nodejsのパスであり、2番目の引数は実行しているスクリプトの場所であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a37f1e2a489eb94699842058efe8da1ade3fce1c" translate="yes" xml:space="preserve">
          <source>Note: Naturally this will fail when the argument contains a &lt;code&gt;=&lt;/code&gt;. This is only for very simple usage.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注：引数に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が含まれている場合、これは当然失敗します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは非常に単純な使用法のみです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8ab622e3476f5540010ffb8f1e7d7df461f6a652" translate="yes" xml:space="preserve">
          <source>Note: you should use named arguments like &lt;code&gt;file.js x=1 y=2&lt;/code&gt; to use
  this solution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注：&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このソリューションを使用するには、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file.js x=1 y=2&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ような名前付き引数を使用する必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3f80ea00ca969abbe7141b32ca301328d0eef806" translate="yes" xml:space="preserve">
          <source>Official docs</source>
          <target state="translated">公式ドキュメント</target>
        </trans-unit>
        <trans-unit id="f5ce25b2dbe78589edce688d17adebc8ab75261d" translate="yes" xml:space="preserve">
          <source>Optimist (node-optimist)</source>
          <target state="translated">オプティミスト(ノードオプティミスト</target>
        </trans-unit>
        <trans-unit id="a28ae0cf1465b13bae2f953795bb9a036445fc42" translate="yes" xml:space="preserve">
          <source>Optimist is deprecated. Try &lt;a href=&quot;https://github.com/yargs/yargs&quot;&gt;yargs&lt;/a&gt; which is an active fork of optimist.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Optimistは非推奨です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;楽観主義者のアクティブなフォークである&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/yargs/yargs&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;yargs&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;試してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="39d98be8265956bb176749fb305e15d1090980bb" translate="yes" xml:space="preserve">
          <source>Or something like :</source>
          <target state="translated">または、何かのようなもの。</target>
        </trans-unit>
        <trans-unit id="188629c6a4bcd5d21ba41fd02c0f915eb7c3e9bd" translate="yes" xml:space="preserve">
          <source>Output is here (it reads options with dashes etc, short and long, numeric etc).</source>
          <target state="translated">出力はこちら(ダッシュなどのオプション、短・長、数値などを読み込んでくれます)。</target>
        </trans-unit>
        <trans-unit id="55e2af166b6568c5e7f9fc67c3095d791499588c" translate="yes" xml:space="preserve">
          <source>Output: &lt;code&gt;{ p: 'param ', parameter: 'parameter' }&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;出力：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;{ p: 'param ', parameter: 'parameter' }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60f02abe75a746e51f59fa9aeac2b09ba633dd9f" translate="yes" xml:space="preserve">
          <source>Passing arguments is easy, and receiving them is just a matter of reading the process.argv array Node makes accessible from everywhere, basically. But you're sure to want to read them as key/value pairs, so you'll need a piece to script to interpret it.</source>
          <target state="translated">引数を渡すのは簡単で、引数を受け取るのは、基本的にNodeがどこからでもアクセスできるようにするprocess.argv配列を読むだけです。しかし、それらをキー値のペアとして読みたいのは確かなので、それを解釈するためのスクリプトのピースが必要になります。</target>
        </trans-unit>
        <trans-unit id="df02d8e14263b0c3ac9386c7ea60b93bc7511285" translate="yes" xml:space="preserve">
          <source>Passing,parsing arguments is an easy process. Node provides you with the process.argv property, which is an array of strings, which are the arguments that were used when Node was invoked. 
The first entry of the array is the Node executable, and the second entry is the name of your script.</source>
          <target state="translated">引数を渡したり、解析したりするのは簡単な処理です。これは文字列の配列で、Nodeが起動されたときに使用された引数です。配列の最初のエントリはNodeの実行ファイルで、2番目のエントリはスクリプトの名前です。</target>
        </trans-unit>
        <trans-unit id="31b1d455981218fd338af1eb59dc92557466e6c5" translate="yes" xml:space="preserve">
          <source>Please visit &lt;a href=&quot;https://yargs.js.org/&quot;&gt;https://yargs.js.org/&lt;/a&gt; for more info.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細については、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://yargs.js.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https：//yargs.js.org/にアクセス&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;してください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3dd155672d015f7145686598ed40f3dcff2c0c56" translate="yes" xml:space="preserve">
          <source>Promptly</source>
          <target state="translated">Promptly</target>
        </trans-unit>
        <trans-unit id="095c451a2e9ce2021d38bf795774b05403fc75f1" translate="yes" xml:space="preserve">
          <source>Real World</source>
          <target state="translated">現実世界</target>
        </trans-unit>
        <trans-unit id="771c61b85a0458c0070026fd061c5bff792a3801" translate="yes" xml:space="preserve">
          <source>Several great answers here, but it all seems very complex. This is very similar to how bash scripts access argument values and it's already provided standard with node.js as MooGoo pointed out.
(Just to make it understandable to somebody that's new to node.js)</source>
          <target state="translated">ここにはいくつかの素晴らしい回答がありますが、すべてが非常に複雑に思えます。これはbashスクリプトが引数の値にアクセスする方法と非常に似ていて、MooGooさんが指摘されているようにnode.jsではすでに標準で提供されています。(初めてnode.jsを使う人にもわかりやすくするために)</target>
        </trans-unit>
        <trans-unit id="de72ea9e60d3b0389fb7873c1d21268b088fa6d4" translate="yes" xml:space="preserve">
          <source>Simple</source>
          <target state="translated">Simple</target>
        </trans-unit>
        <trans-unit id="c1c59d44f221600e0fedde4bad87ad2ce83d52a1" translate="yes" xml:space="preserve">
          <source>So you can use it as you want. For instance:</source>
          <target state="translated">なので、好きなように使えます。例えば</target>
        </trans-unit>
        <trans-unit id="447e1dada2c34f5547f0f4ecd4f1651b8ee14c0f" translate="yes" xml:space="preserve">
          <source>Standard Method (no library)</source>
          <target state="translated">標準法(ライブラリなし</target>
        </trans-unit>
        <trans-unit id="98786c8ded5c4925f866199ff3fdbba7c3833a93" translate="yes" xml:space="preserve">
          <source>Stdio Library</source>
          <target state="translated">Stdio ライブラリ</target>
        </trans-unit>
        <trans-unit id="b21eb38584d9dc99b6d1c74d50e6bb8905e37736" translate="yes" xml:space="preserve">
          <source>Than just do:</source>
          <target state="translated">ただやるだけではなく。</target>
        </trans-unit>
        <trans-unit id="66e6c00f58cf5213ed7068fee38612f5dd0e0d5c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/Polymer/polymer-cli/&quot;&gt;polymer-cli&lt;/a&gt; usage guide is a good real-life example.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/Polymer/polymer-cli/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ポリマー-CLI&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の使用ガイドは良い現実の例です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f6656d01bd381427a9c2598d07646da6efdb4a22" translate="yes" xml:space="preserve">
          <source>The arguments are stored in &lt;code&gt;process.argv&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引数は&lt;/font&gt; &lt;code&gt;process.argv&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;格納され&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="34f1e0c5b16b43b8ba7eaab3f715e781b26a6e3b" translate="yes" xml:space="preserve">
          <source>The best way to pass command line arguments to a Node.js program is by using a Command Line Interface (CLI)</source>
          <target state="translated">Node.js プログラムにコマンドライン引数を渡す最良の方法は、コマンドラインインターフェイス (CLI)を使用することです。</target>
        </trans-unit>
        <trans-unit id="79bec65ce5b835ae870afaa0d7f7c180db45a8f5" translate="yes" xml:space="preserve">
          <source>The easiest way to parse command-line arguments in NodeJS is using the &lt;a href=&quot;http://sgmonda.github.io/stdio/&quot;&gt;stdio&lt;/a&gt; module. Inspired by UNIX &lt;code&gt;getopt&lt;/code&gt; utility, it is as trivial as follows:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NodeJSでコマンドライン引数を解析する最も簡単な方法は、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://sgmonda.github.io/stdio/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;stdio&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;モジュール&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用すること&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;UNIX &lt;/font&gt;&lt;/font&gt; &lt;code&gt;getopt&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ユーティリティに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;触発され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、次のように簡単です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a490939206ac0bcf2c8796dd7db3adff8c887101" translate="yes" xml:space="preserve">
          <source>The first element of the process.argv array will always be a file system path pointing to the node executable. The second element is the name of the JavaScript file that is being executed. And the third element is the first argument that was actually passed by the user.</source>
          <target state="translated">process.argv配列の最初の要素は、常に実行可能なノードを指すファイルシステムのパスになります。2番目の要素は、実行されるJavaScriptファイルの名前です。そして3番目の要素は、ユーザが実際に渡した最初の引数です。</target>
        </trans-unit>
        <trans-unit id="94bfae1be55dc1be5d8966f9970c35d33520328d" translate="yes" xml:space="preserve">
          <source>The previous message is shown also if a mandatory option is not given (preceded by the error message) or if it is mispecified (for instance, if you specify a single arg for an option and it needs 2).</source>
          <target state="translated">前のメッセージは、必須オプションが与えられていない場合 (エラーメッセージの前に表示されます)や、それが誤って指定されている場合 (例えば、オプションに単一のargを指定していて、それが2を必要としている場合)にも表示されます。</target>
        </trans-unit>
        <trans-unit id="4e00afb986323ba904efea3a982c45371e5a241e" translate="yes" xml:space="preserve">
          <source>The result will be:</source>
          <target state="translated">結果が出てきます。</target>
        </trans-unit>
        <trans-unit id="8e61792efbb2a00f2d19a8492d5e0f9c7e664466" translate="yes" xml:space="preserve">
          <source>The simplest way of retrieving arguments in Node.js is via the process.argv array. This is a global object that you can use without importing any additional libraries to use it. You simply need to pass arguments to a Node.js application, just like we showed earlier, and these arguments can be accessed within the application via the process.argv array.</source>
          <target state="translated">Node.jsで引数を取得する最もシンプルな方法はprocess.argv配列を利用することです。これはグローバルオブジェクトで、これを使用するために追加のライブラリをインポートすることなく使用することができます。先ほど示したようにNode.jsアプリケーションに引数を渡すだけで、これらの引数はprocess.argv配列を介してアプリケーション内でアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="adeacc8cb473b0de32dd12d815a19627d86a73ab" translate="yes" xml:space="preserve">
          <source>The up-to-date &lt;em&gt;right&lt;/em&gt; answer for this it to use the &lt;a href=&quot;https://www.npmjs.org/package/minimist&quot;&gt;minimist&lt;/a&gt; library. We used to use &lt;a href=&quot;https://github.com/substack/node-optimist#deprecation-notice&quot;&gt;node-optimist&lt;/a&gt; but it has since been deprecated.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最新の&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;権利&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、それは使用するには、このための答え&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.npmjs.org/package/minimist&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;minimist&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ライブラリを。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以前は&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/substack/node-optimist#deprecation-notice&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ノードオプティミスト&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いましたが、それ以降非推奨になりました。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de2c0dae54857e630d36f4345a1690b8f9dcbce1" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;ops&lt;/code&gt; object will be as follows:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その場合、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ops&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトは次のようになります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db54c202e0621fd1d87d03e9536302ed081947a3" translate="yes" xml:space="preserve">
          <source>Then within your script you write:</source>
          <target state="translated">そして、あなたのスクリプトの中で書きます。</target>
        </trans-unit>
        <trans-unit id="b7c6247b3c78dfd2b63296f63ec0558ad05d6b3d" translate="yes" xml:space="preserve">
          <source>There is a nifty npm module called &lt;a href=&quot;https://www.npmjs.com/package/nodejs-cli&quot;&gt;nodejs-cli&lt;/a&gt; that you can use.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用できる&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.npmjs.com/package/nodejs-cli&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nodejs-cli&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼ばれる気の利いたnpmモジュール&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2625f0b6b968f23ea4f270de943e3bb4598ab6c8" translate="yes" xml:space="preserve">
          <source>There is plenty more to learn, please see &lt;a href=&quot;https://github.com/75lb/command-line-args/wiki&quot;&gt;the wiki&lt;/a&gt; for examples and documentation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さらに学ぶべきことがたくさん&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あります。例とドキュメント&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;について&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/75lb/command-line-args/wiki&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はwiki&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を参照し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fbc6043817243caf00612cf2fda71c54cc719358" translate="yes" xml:space="preserve">
          <source>There's an app for that. Well, module. Well, more than one, probably hundreds.</source>
          <target state="translated">そのためのアプリがあります。まあ、モジュール。まあ、1つだけじゃなくて、たぶん何百個も。</target>
        </trans-unit>
        <trans-unit id="d28cff60d61dc085d6b30a2e3e934f664a04d523" translate="yes" xml:space="preserve">
          <source>This returns:</source>
          <target state="translated">これが返ってくる。</target>
        </trans-unit>
        <trans-unit id="02eb50512f6212b38a5f022b6eb6b5e324c5192f" translate="yes" xml:space="preserve">
          <source>This will generate:</source>
          <target state="translated">これで生成されます。</target>
        </trans-unit>
        <trans-unit id="bbf00088b3655e5973eb3ae8a7959ae7301af9eb" translate="yes" xml:space="preserve">
          <source>To access the values, first create a list of &lt;a href=&quot;https://github.com/75lb/command-line-args/blob/master/doc/option-definition.md&quot;&gt;option definitions&lt;/a&gt; describing the options your application accepts. The &lt;a href=&quot;https://github.com/75lb/command-line-args/blob/master/doc/option-definition.md#optiontype--function&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; property is a setter function (the value supplied is passed through this), giving you full control over the value received.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値にアクセスするには、まず&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、アプリケーションが受け入れるオプションを説明する&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/75lb/command-line-args/blob/master/doc/option-definition.md&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オプション定義の&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;リストを作成し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/75lb/command-line-args/blob/master/doc/option-definition.md#optiontype--function&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティを使用すると、受信した値を完全に制御を与えるsetter関数（これを通過する供給値）、です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="48d1e59036ae728f35fa7a8a010a58bfabbbb1ae" translate="yes" xml:space="preserve">
          <source>To normalize the arguments like a regular javascript function would receive, I do this in my node.js shell scripts:</source>
          <target state="translated">通常のjavascript関数が受け取るような引数を正規化するには、node.jsのシェルスクリプトでこれを行います。</target>
        </trans-unit>
        <trans-unit id="24baec3bfe1e8be16495676bb16578a5607ee8cb" translate="yes" xml:space="preserve">
          <source>To run above code just run following commands:</source>
          <target state="translated">上記のコードを実行するには、以下のコマンドを実行するだけです。</target>
        </trans-unit>
        <trans-unit id="acfbeece7160a297ee93766c93e330dcdd905fd3" translate="yes" xml:space="preserve">
          <source>TypeScript solution with no libraries:</source>
          <target state="translated">ライブラリを持たないTypeScriptソリューション。</target>
        </trans-unit>
        <trans-unit id="e8e0ac79a91bda2bae9e427a10855845cb26d841" translate="yes" xml:space="preserve">
          <source>Usage guide generation</source>
          <target state="translated">利用ガイド生成</target>
        </trans-unit>
        <trans-unit id="89f79145ae2743d46b0ebe880623e1fae41e00aa" translate="yes" xml:space="preserve">
          <source>Vanilla javascript argument parsing:</source>
          <target state="translated">バニラjavascriptの引数解析。</target>
        </trans-unit>
        <trans-unit id="53f8749917b838d87adb674f1fe0057c16fb4fa2" translate="yes" xml:space="preserve">
          <source>With this code a command &lt;code&gt;node script.js alpha beta -charlie delta --echo foxtrot&lt;/code&gt; would give you the following object</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このコードを使用すると、コマンド&lt;/font&gt;&lt;/font&gt; &lt;code&gt;node script.js alpha beta -charlie delta --echo foxtrot&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は次のオブジェクトを提供します&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="13a7b094914885992d22a9b97eb8504002e93d0d" translate="yes" xml:space="preserve">
          <source>Without libraries</source>
          <target state="translated">ライブラリなし</target>
        </trans-unit>
        <trans-unit id="382db5d58593bc1bc08b91f8846f1721d22d7d9a" translate="yes" xml:space="preserve">
          <source>Works great for defining your options, actions, and arguments. It also generates the help pages for you.</source>
          <target state="translated">オプション、アクション、引数の定義に最適です。また、あなたのためにヘルプページを生成します。</target>
        </trans-unit>
        <trans-unit id="c15f6f770026f97d27cbe656470403ca88a0889f" translate="yes" xml:space="preserve">
          <source>Works great for getting input from the user, if you like the callback approach.</source>
          <target state="translated">コールバックのアプローチが好きなら、ユーザーからの入力を取得するのに最適です。</target>
        </trans-unit>
        <trans-unit id="473471155d4a7a83d7f92d29c9bcb1bafb1fbed1" translate="yes" xml:space="preserve">
          <source>Works great for getting input from the user, if you like the generator approach.</source>
          <target state="translated">ジェネレーターのアプローチが好きなら、ユーザーからの入力を得るのに最適です。</target>
        </trans-unit>
        <trans-unit id="a1423e2e798a017cd435a74859b4b48f6c9e1eba" translate="yes" xml:space="preserve">
          <source>Would generate the output:</source>
          <target state="translated">出力を生成します。</target>
        </trans-unit>
        <trans-unit id="e6a8d7ad44c0d9a42de45cbe309cf3b743e6d0bd" translate="yes" xml:space="preserve">
          <source>You can also use libraries like yargs for working with commnadline arguments.</source>
          <target state="translated">yargs のようなライブラリを使って commnadline の引数を操作することもできます。</target>
        </trans-unit>
        <trans-unit id="3e28006573e1ab87e416f5be4413df95ab4020d9" translate="yes" xml:space="preserve">
          <source>You can install &lt;a href=&quot;http://sgmonda.github.io/stdio/&quot;&gt;stdio&lt;/a&gt; module using &lt;a href=&quot;https://npmjs.org/&quot;&gt;NPM&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;https://npmjs.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NPM&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://sgmonda.github.io/stdio/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;stdio&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;モジュールを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インストールでき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b9f3161ee5ad6eacb3b18a0ab698589d55ba148f" translate="yes" xml:space="preserve">
          <source>You can parse all arguments and check if they exist.</source>
          <target state="translated">すべての引数を解析して、その引数が存在するかどうかを確認することができます。</target>
        </trans-unit>
        <trans-unit id="c1dc71d7dc7761b7a86f52d7d564010770178342" translate="yes" xml:space="preserve">
          <source>You can reach command line arguments using &lt;code&gt;system.args&lt;/code&gt;. And i use the solution below to parse arguments into an object, so i can get which one i want by name.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;system.args&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用してコマンドライン引数にアクセスできます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そして、私は以下の解決策を使用して引数をオブジェクトに解析するので、必要なものを名前で取得できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3112d26df959d9deb1f3350462cb3753848ae2ce" translate="yes" xml:space="preserve">
          <source>You can set options using the main notation standards (&lt;a href=&quot;https://github.com/75lb/command-line-args/wiki/Notation-rules&quot;&gt;learn more&lt;/a&gt;). These commands are all equivalent, setting the same values:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メインの表記法の標準を使用してオプションを設定できます（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/75lb/command-line-args/wiki/Notation-rules&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらのコマンドはすべて同等で、同じ値を設定します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="903542c19856a746c883bee0316f78acaba71a6d" translate="yes" xml:space="preserve">
          <source>You will get array like</source>
          <target state="translated">以下のような配列が得られます。</target>
        </trans-unit>
        <trans-unit id="ce49f129bd52a562f2092f8536e7e4d5aff72065" translate="yes" xml:space="preserve">
          <source>also,</source>
          <target state="translated">also,</target>
        </trans-unit>
        <trans-unit id="dd07cba2970065ea73307a57be1fc94a63d737c5" translate="yes" xml:space="preserve">
          <source>as stated in the node docs 
The process.argv property returns an array containing the command line arguments passed when the Node.js process was launched.</source>
          <target state="translated">ノードのドキュメントに記載されているように process.argv プロパティは、Node.js プロセスが起動したときに渡されたコマンドライン引数を含む配列を返します。</target>
        </trans-unit>
        <trans-unit id="9d76a54140fa1df73a1d38af7bd7ce360160c3cf" translate="yes" xml:space="preserve">
          <source>by (much longer)</source>
          <target state="translated">までに</target>
        </trans-unit>
        <trans-unit id="3c8cc960bbae72e229f0adb785fb3133f7f99fb4" translate="yes" xml:space="preserve">
          <source>file: parse-cli-arguments.js:</source>
          <target state="translated">ファイル:parse-cli-arguments.js。</target>
        </trans-unit>
        <trans-unit id="73abb53d7a7001f667a704428cb4d4154a801c91" translate="yes" xml:space="preserve">
          <source>for this command &lt;code&gt;node index.js count=2 print debug=false msg=hi&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このコマンド&lt;/font&gt;&lt;/font&gt; &lt;code&gt;node index.js count=2 print debug=false msg=hi&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a97be680aa341a5c54d245984576a76607020e45" translate="yes" xml:space="preserve">
          <source>here &lt;code&gt;server.js&lt;/code&gt; is my server code. Node.js help says this is possible:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで&lt;/font&gt;&lt;/font&gt; &lt;code&gt;server.js&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は私のサーバーコードです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Node.jsのヘルプでは、これが可能であるとしています：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="140f86aae51ab9e1cda9b4254fe98a74eb54c1a1" translate="yes" xml:space="preserve">
          <source>input</source>
          <target state="translated">input</target>
        </trans-unit>
        <trans-unit id="01a6fb64c0b1be91983ada3e62141b0ea9180144" translate="yes" xml:space="preserve">
          <source>now you don't need to know the index of the argument. use it like &lt;code&gt;args.whatever&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;今、あなたは引数のインデックスを知る必要はありません。&lt;/font&gt; &lt;code&gt;args.whatever&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ように使用し&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1029d67644815d428f554e390aa966d57a0b29b8" translate="yes" xml:space="preserve">
          <source>output</source>
          <target state="translated">output</target>
        </trans-unit>
        <trans-unit id="c64c661af526e8fa80b386b5f86da2012516db38" translate="yes" xml:space="preserve">
          <source>p.s. Please correct the code in map and reduce function
if you find more elegant solution, thanks ;)</source>
          <target state="translated">p.s.もっとエレガントな解決策があれば、mapとreduce関数のコードを修正してください。)</target>
        </trans-unit>
        <trans-unit id="190be81e1d481ec40e17306a257611162f4265dd" translate="yes" xml:space="preserve">
          <source>to auto parse Boolean &amp;amp; Number</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ブール値と数値を自動解析する&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d1ebdfa4aa20b3d74e1a72ab8cbb79749ebd5a74" translate="yes" xml:space="preserve">
          <source>we can change</source>
          <target state="translated">変われる</target>
        </trans-unit>
        <trans-unit id="086954a0fa962f9fac2e9fb7545767b96c30fcb0" translate="yes" xml:space="preserve">
          <source>whithout librairies: using Array.prototype.reduce()</source>
          <target state="translated">librairiesがない場合:Array.prototype.reduce()を使って</target>
        </trans-unit>
        <trans-unit id="878970969c5931b99d39520e12633461705e930a" translate="yes" xml:space="preserve">
          <source>will produce the following result</source>
          <target state="translated">は次のような結果になります。</target>
        </trans-unit>
        <trans-unit id="226bed19707ee74ab3ec8f9a776242ace57828a4" translate="yes" xml:space="preserve">
          <source>worked only in &lt;strong&gt;NodeJS &amp;gt; 6&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NodeJS&amp;gt; 6で&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のみ&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;機能&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="79c876f9ad3ef8ff31b9707488caeb5bb46ef222" translate="yes" xml:space="preserve">
          <source>your actual arguments start form &lt;code&gt;2nd&lt;/code&gt; index of &lt;code&gt;argv&lt;/code&gt; array, that is &lt;code&gt;process.argv[2]&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際の引数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt; &lt;code&gt;argv&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;2nd&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インデックス&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、つまり&lt;/font&gt; &lt;code&gt;process.argv[2]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;から始まります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
