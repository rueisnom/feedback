<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/3653462">
    <body>
      <group id="3653462">
        <trans-unit id="d68ac24c321858792a3fd7d90f6c8f7e5621af67" translate="yes" xml:space="preserve">
          <source>&quot;One reason was laziness&quot;.</source>
          <target state="translated">&quot;Una razón fue la pereza&quot;.</target>
        </trans-unit>
        <trans-unit id="1e15595d4b61fc0c392aa5cde87d99860881780b" translate="yes" xml:space="preserve">
          <source>(Some users would dispute the statement in my previous paragraph, saying that &quot;you can never know what requirements will be added in the future&quot;. These users are either misguided or stating a religious conviction. Sometimes it is advantageous to work to the requirements you have before you.)</source>
          <target state="translated">(Algunos usuarios refutarían la afirmación del párrafo anterior,diciendo que &quot;nunca se puede saber qué requisitos se añadirán en el futuro&quot;.Estos usuarios están equivocados o declaran una convicción religiosa.A veces es ventajoso trabajar con los requisitos que tienes ante ti).</target>
        </trans-unit>
        <trans-unit id="308f7be66f9bcb2ede05a32d3482ece472e075d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/questions/6097849/querying-an-xml-list-in-sql-server-using-xquery&quot;&gt;querying an XML list in sql server using Xquery&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/6097849/querying-an-xml-list-in-sql-server-using-xquery&quot;&gt;consultar una lista XML en el servidor sql usando Xquery&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2af6a2d81420798d27f429d6e245a10ba6797ca1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;idlist REGEXP '[[:&amp;lt;:]]2[[:&amp;gt;:]]'&lt;/code&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;idlist REGEXP '[[:&amp;lt;:]]2[[:&amp;gt;:]]'&lt;/code&gt; &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1ceb7c30bd62e944fe612dfbf214d0de8dd27f5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With CSV:&lt;/strong&gt; Can't delete a value from the list without fetching the whole list.</source>
          <target state="translated">&lt;strong&gt;Con CSV:&lt;/strong&gt; no se puede eliminar un valor de la lista sin recuperar toda la lista.</target>
        </trans-unit>
        <trans-unit id="9e16ed75068d203de985c0f7cace1deb2bdec614" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With CSV:&lt;/strong&gt; Can't enforce uniqueness: no way to prevent 1,2,3,3,3,5</source>
          <target state="translated">&lt;strong&gt;Con CSV:&lt;/strong&gt; No se puede hacer cumplir la unicidad: no hay forma de prevenir 1,2,3,3,3,5</target>
        </trans-unit>
        <trans-unit id="56d2e6fab6ec52b379ff543420fc07624f74b279" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With CSV:&lt;/strong&gt; Can't ensure that each value is the right data type: no way to prevent 1,2,3,banana,5</source>
          <target state="translated">&lt;strong&gt;Con CSV:&lt;/strong&gt; no se puede garantizar que cada valor sea el tipo de datos correcto: no hay forma de evitar 1,2,3, banana, 5</target>
        </trans-unit>
        <trans-unit id="ee8fce5b979b677ccbf13f03d48f11ac6dc3093e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With CSV:&lt;/strong&gt; Can't use foreign key constraints to link values to a lookup table; no way to enforce referential integrity.</source>
          <target state="translated">&lt;strong&gt;Con CSV:&lt;/strong&gt; no se pueden usar restricciones de clave externa para vincular valores a una tabla de b&amp;uacute;squeda; No hay forma de hacer cumplir la integridad referencial.</target>
        </trans-unit>
        <trans-unit id="207282a8a3febbda7d40ff068fc2fae70d0a5488" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With CSV:&lt;/strong&gt; Hard to count elements in the list, or do other aggregate queries.**</source>
          <target state="translated">&lt;strong&gt;Con CSV:&lt;/strong&gt; elementos dif&amp;iacute;ciles de contar en la lista, o hacer otras consultas agregadas. **</target>
        </trans-unit>
        <trans-unit id="3591709e1dc9bf747156834af12cddd44e3c1158" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With CSV:&lt;/strong&gt; Hard to fetch the list in sorted order.</source>
          <target state="translated">&lt;strong&gt;Con CSV: es&lt;/strong&gt; dif&amp;iacute;cil obtener la lista en orden ordenado.</target>
        </trans-unit>
        <trans-unit id="d546b408530db95f4a006946947eeefa1dfca92e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With CSV:&lt;/strong&gt; Hard to join the values to the lookup table they reference.**</source>
          <target state="translated">&lt;strong&gt;Con CSV:&lt;/strong&gt; Dif&amp;iacute;cil unir los valores a la tabla de b&amp;uacute;squeda a la que hacen referencia. **</target>
        </trans-unit>
        <trans-unit id="ec63eb94e2584480f09be601555ff5cb30795b74" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With CSV:&lt;/strong&gt; Hard to search for all entities with a given value in the list; you have to use an inefficient table-scan.</source>
          <target state="translated">&lt;strong&gt;Con CSV:&lt;/strong&gt; Dif&amp;iacute;cil de buscar todas las entidades con un valor dado en la lista; tienes que usar un escaneo de tabla ineficiente.</target>
        </trans-unit>
        <trans-unit id="166b5d1f8e15e8d1cec21bf82cd86ed9b8b02ff7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With CSV:&lt;/strong&gt; Plus a lot of comma characters.</source>
          <target state="translated">&lt;strong&gt;Con CSV:&lt;/strong&gt; Adem&amp;aacute;s de muchos caracteres de coma.</target>
        </trans-unit>
        <trans-unit id="de8b7eba7a8dee55ede44f1d46b07f0db2f694d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With CSV:&lt;/strong&gt; Storing integers as strings takes about twice as much space as storing binary integers.</source>
          <target state="translated">&lt;strong&gt;Con CSV:&lt;/strong&gt; almacenar enteros como cadenas ocupa aproximadamente el doble de espacio que almacenar enteros binarios.</target>
        </trans-unit>
        <trans-unit id="345c84752cdc393407da764c9c782bfd2c02f009" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With XML:&lt;/strong&gt; not particularly hard</source>
          <target state="translated">&lt;strong&gt;Con XML:&lt;/strong&gt; no particularmente dif&amp;iacute;cil</target>
        </trans-unit>
        <trans-unit id="d52f99f730e5b0559ad92a5581464421c481b313" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With XML:&lt;/strong&gt; single items can be removed</source>
          <target state="translated">&lt;strong&gt;Con XML:&lt;/strong&gt; se pueden eliminar elementos individuales</target>
        </trans-unit>
        <trans-unit id="d127c28ca1579d55218956f68a9f58909c540d73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With XML:&lt;/strong&gt; still an issue</source>
          <target state="translated">&lt;strong&gt;Con XML:&lt;/strong&gt; sigue siendo un problema</target>
        </trans-unit>
        <trans-unit id="b345e440db0366b1bc401363308731d2d7f1508a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With XML:&lt;/strong&gt; storage is even worse than a csv</source>
          <target state="translated">&lt;strong&gt;Con XML: el&lt;/strong&gt; almacenamiento es incluso peor que un csv</target>
        </trans-unit>
        <trans-unit id="4b44193a79ad8c85453d9ca9ede7d0699345d2a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With XML:&lt;/strong&gt; tags are used instead of commas</source>
          <target state="translated">&lt;strong&gt;Con XML:&lt;/strong&gt; se usan etiquetas en lugar de comas</target>
        </trans-unit>
        <trans-unit id="299faa449be7786936f6646db5550c3571502592" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With XML:&lt;/strong&gt; values in a tag can be forced to be the correct type</source>
          <target state="translated">&lt;strong&gt;Con XML: los&lt;/strong&gt; valores en una etiqueta pueden ser forzados a ser del tipo correcto</target>
        </trans-unit>
        <trans-unit id="7ee5b742559eada20e128ff736b7d14932603b20" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With XML:&lt;/strong&gt; xml field can be indexed</source>
          <target state="translated">&lt;strong&gt;Con XML: el&lt;/strong&gt; campo xml se puede indexar</target>
        </trans-unit>
        <trans-unit id="a713f943138b961f296abe723ab2d81166668115" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;*&lt;/sup&gt; MySQL 8.0 no longer supports this word-boundary expression syntax.</source>
          <target state="translated">&lt;sup&gt;*&lt;/sup&gt; MySQL 8.0 ya no admite esta sintaxis de expresi&amp;oacute;n de l&amp;iacute;mite de palabra.</target>
        </trans-unit>
        <trans-unit id="8c451c3b9291f22b6c5debc7170bb7a45e6b2675" translate="yes" xml:space="preserve">
          <source>A second criticism is that putting raw input results directly into a database, without any validation or binding at all, leaves you open to SQL injection attacks.</source>
          <target state="translated">Una segunda crítica es que poner los resultados de entrada crudos directamente en una base de datos,sin ninguna validación o vinculación en absoluto,te deja abierto a los ataques de inyección SQL.</target>
        </trans-unit>
        <trans-unit id="0043a32ea8c37d6143e889a94b95144c1d95ef21" translate="yes" xml:space="preserve">
          <source>Another problem with the comma separated list is ensuring the values are consistent - storing text means the possibility of typos...</source>
          <target state="translated">Otro problema con la lista separada por comas es asegurar que los valores sean consistentes-almacenar texto significa la posibilidad de errores tipográficos...</target>
        </trans-unit>
        <trans-unit id="0a5772680ad6d9e0da29214f7d7a90bd5bce7f2a" translate="yes" xml:space="preserve">
          <source>By being an xml field, some of the concerns can be addressed.</source>
          <target state="translated">Al ser un campo xml,algunas de las preocupaciones pueden ser abordadas.</target>
        </trans-unit>
        <trans-unit id="96484fc83fcf63f76507517efe55769d93c8351d" translate="yes" xml:space="preserve">
          <source>Can&amp;rsquo;t delete a value from the list without fetching the whole list.</source>
          <target state="translated">No se puede eliminar un valor de la lista sin recuperar toda la lista.</target>
        </trans-unit>
        <trans-unit id="5e342bb4206cf556c313a7fa707fa608068f4d41" translate="yes" xml:space="preserve">
          <source>Can&amp;rsquo;t enforce uniqueness: no way to prevent &lt;em&gt;1,2,3,3,3,5&lt;/em&gt;</source>
          <target state="translated">No se puede hacer cumplir la unicidad: no hay forma de prevenir &lt;em&gt;1,2,3,3,3,5&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d1e23e394102b96f65790a58c9b56d3fa91be9c" translate="yes" xml:space="preserve">
          <source>Can&amp;rsquo;t ensure that each value is the right data type: no way to prevent &lt;em&gt;1,2,3,banana,5&lt;/em&gt;</source>
          <target state="translated">No puedo asegurar que cada valor sea el tipo de datos correcto: no hay forma de evitar &lt;em&gt;1,2,3, banana, 5&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="64461d6b927467f175babcaa6dfee593f032e245" translate="yes" xml:space="preserve">
          <source>Can&amp;rsquo;t use foreign key constraints to link values to a lookup table; no way to enforce referential integrity.</source>
          <target state="translated">No se pueden usar restricciones de clave externa para vincular valores a una tabla de b&amp;uacute;squeda; No hay forma de hacer cumplir la integridad referencial.</target>
        </trans-unit>
        <trans-unit id="d4903c42663fd89a04a7592de03256b26c309966" translate="yes" xml:space="preserve">
          <source>Can't store a list longer than what fits in the string column.</source>
          <target state="translated">No se puede almacenar una lista más larga de lo que cabe en la columna de cuerdas.</target>
        </trans-unit>
        <trans-unit id="082848626a434057c827806a8fd39ae812f9ff3e" translate="yes" xml:space="preserve">
          <source>Comma-separated lists are wrong enough that I made this the first chapter in my book: &lt;a href=&quot;http://www.pragprog.com/titles/bksqla/sql-antipatterns&quot;&gt;SQL Antipatterns: Avoiding the Pitfalls of Database Programming&lt;/a&gt;.</source>
          <target state="translated">Las listas separadas por comas son lo suficientemente err&amp;oacute;neas como para que este sea el primer cap&amp;iacute;tulo de mi libro: &lt;a href=&quot;http://www.pragprog.com/titles/bksqla/sql-antipatterns&quot;&gt;Antipatterns SQL: Evitar las trampas de la programaci&amp;oacute;n de bases de datos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5a1b0d85f6d36e43dd10314a16ce8957095a7c74" translate="yes" xml:space="preserve">
          <source>Hard to count elements in the list, or do other aggregate queries.</source>
          <target state="translated">Es difícil contar los elementos de la lista,o hacer otras consultas agregadas.</target>
        </trans-unit>
        <trans-unit id="823a889b45ed2185a283c44397992f042154b32a" translate="yes" xml:space="preserve">
          <source>Hard to fetch the list in sorted order.</source>
          <target state="translated">Es difícil conseguir la lista en orden.</target>
        </trans-unit>
        <trans-unit id="569f55146a5b0b5ccc52a1131e4d457a3d13e287" translate="yes" xml:space="preserve">
          <source>Hard to join the values to the lookup table they reference.</source>
          <target state="translated">Es difícil unir los valores a la tabla de búsqueda a la que hacen referencia.</target>
        </trans-unit>
        <trans-unit id="0d810b097c19e6f50b0523535bfffff879a11570" translate="yes" xml:space="preserve">
          <source>Hard to search for all entities with a given value in the list; you have to use an inefficient table-scan. May have to resort to regular expressions, for example in MySQL:</source>
          <target state="translated">Es difícil buscar todas las entidades con un valor determinado en la lista;hay que utilizar un escáner de mesa ineficiente.Puede que tenga que recurrir a expresiones regulares,por ejemplo en MySQL:</target>
        </trans-unit>
        <trans-unit id="1f7c041a1a12ca4cd5aea56bdf5e32098bb7611a" translate="yes" xml:space="preserve">
          <source>Having said this: if the data you are choosing to store this way is data that you will never need to query by, then there may be a case for storing it in the way you have chosen.</source>
          <target state="translated">Dicho esto:si los datos que eliges almacenar de esta manera son datos que nunca necesitarás consultar,entonces puede haber un caso para almacenarlos de la manera que has elegido.</target>
        </trans-unit>
        <trans-unit id="c16c6ccd0c663eeab5678238a0bfe5252ec79798" translate="yes" xml:space="preserve">
          <source>I needed a multi-value column, it could be implemented as an xml field</source>
          <target state="translated">Necesitaba una columna de valores múltiples,que pudiera ser implementada como un campo xml</target>
        </trans-unit>
        <trans-unit id="10dc0ee5f03cdb71f15e2cb4aa8c52ef1963754e" translate="yes" xml:space="preserve">
          <source>I thought the saved time and simpler code was worth it in my situation, is this a defensible design choice, or should I have normalized it from the start?</source>
          <target state="translated">Pensé que el tiempo ahorrado y el código más simple valía la pena en mi situación,¿es una elección de diseño defendible,o debería haberlo normalizado desde el principio?</target>
        </trans-unit>
        <trans-unit id="28e7a833b484b5bd612c1994a32514df4ed75fdb" translate="yes" xml:space="preserve">
          <source>I would probably take the middle ground: make each field in the CSV into a separate column in the database, but not worry much about normalization (at least for now). At some point, normalization &lt;em&gt;might&lt;/em&gt; become interesting, but with all the data shoved into a single column you're gaining virtually no benefit from using a database at all. You need to separate the data into logical fields/columns/whatever you want to call them before you can manipulate it meaningfully at all.</source>
          <target state="translated">Probablemente tomar&amp;iacute;a el t&amp;eacute;rmino medio: convierta cada campo en el CSV en una columna separada en la base de datos, pero no se preocupe mucho por la normalizaci&amp;oacute;n (al menos por ahora). En alg&amp;uacute;n momento, la normalizaci&amp;oacute;n &lt;em&gt;puede&lt;/em&gt; volverse interesante, pero con todos los datos en una sola columna, pr&amp;aacute;cticamente no obtendr&amp;aacute; ning&amp;uacute;n beneficio al usar una base de datos. Debe separar los datos en campos l&amp;oacute;gicos / columnas / como quiera llamarlos antes de poder manipularlos de manera significativa.</target>
        </trans-unit>
        <trans-unit id="b03148bc19d2bd86b90c069d0d7ac9d993ddaf36" translate="yes" xml:space="preserve">
          <source>If you have a fixed number of boolean fields, you could use a &lt;code&gt;INT(1) NOT NULL&lt;/code&gt; (or &lt;code&gt;BIT NOT NULL&lt;/code&gt; if it exists) or &lt;code&gt;CHAR (0)&lt;/code&gt; (nullable) for each. You could also use a &lt;code&gt;SET&lt;/code&gt; (I forget the exact syntax).</source>
          <target state="translated">Si tiene un n&amp;uacute;mero fijo de campos booleanos, puede usar un &lt;code&gt;INT(1) NOT NULL&lt;/code&gt; (o &lt;code&gt;BIT NOT NULL&lt;/code&gt; si existe) o &lt;code&gt;CHAR (0)&lt;/code&gt; (anulable) para cada uno. Tambi&amp;eacute;n podr&amp;iacute;a usar un &lt;code&gt;SET&lt;/code&gt; (olvido la sintaxis exacta).</target>
        </trans-unit>
        <trans-unit id="b51caecb70bf82d71efd94cda96a700d5ee3373c" translate="yes" xml:space="preserve">
          <source>Imagine a web form with a set of check boxes (any or all of them can be selected). I chose to save them in a comma separated list of values stored in one column of the database table.</source>
          <target state="translated">Imagina un formulario web con un conjunto de casillas de verificación (cualquiera o todas pueden ser seleccionadas).Elegí guardarlos en una lista separada por comas de valores almacenados en una columna de la tabla de la base de datos.</target>
        </trans-unit>
        <trans-unit id="d3cb8dde911f769cd7183cd9cc767ec03b879e9f" translate="yes" xml:space="preserve">
          <source>In addition to violating &lt;a href=&quot;http://en.wikipedia.org/wiki/1NF&quot;&gt;First Normal Form&lt;/a&gt; because of the repeating group of values stored in a single column, comma-separated lists have a lot of other more practical problems:</source>
          <target state="translated">Adem&amp;aacute;s de violar la &lt;a href=&quot;http://en.wikipedia.org/wiki/1NF&quot;&gt;Primera forma normal&lt;/a&gt; debido al grupo repetitivo de valores almacenados en una sola columna, las listas separadas por comas tienen muchos otros problemas m&amp;aacute;s pr&amp;aacute;cticos:</target>
        </trans-unit>
        <trans-unit id="fe2e1c3207f9e33e8e2f1f3d075479803691398e" translate="yes" xml:space="preserve">
          <source>In general anything can be defensible if it meets the requirements of your project.  This doesn't mean that people will agree with or want to defend your decision...</source>
          <target state="translated">En general,cualquier cosa puede ser defendible si cumple con los requisitos de su proyecto.Esto no significa que la gente esté de acuerdo o quiera defender su decisión...</target>
        </trans-unit>
        <trans-unit id="e3701cdbecde26ed063beb5e13072aaf223d9db1" translate="yes" xml:space="preserve">
          <source>In general, storing data in this way is suboptimal (e.g. harder to do efficient queries) and may cause maintenance issues if you modify the items in your form.  Perhaps you could have found a middle ground and used an integer representing a set of bit flags instead?</source>
          <target state="translated">En general,el almacenamiento de datos de esta manera no es óptimo (por ejemplo,es más difícil hacer consultas eficientes)y puede causar problemas de mantenimiento si se modifican los elementos de su formulario.¿Quizás podría haber encontrado un término medio y haber usado un entero que representara un conjunto de banderas de bits en su lugar?</target>
        </trans-unit>
        <trans-unit id="a3bf060c7229a7de0c733617110b5fb79a611283" translate="yes" xml:space="preserve">
          <source>In short, using XML gets around some of the issues with delimited list AND can be converted to a delimited list as needed</source>
          <target state="translated">En resumen,el uso de XML evita algunos de los problemas con la lista delimitada Y se puede convertir en una lista delimitada según sea necesario</target>
        </trans-unit>
        <trans-unit id="aeac6386d7b159eafa028850b5bc0c1ef63f2fb4" translate="yes" xml:space="preserve">
          <source>Is storing a delimited list in a database column really that bad</source>
          <target state="translated">¿Realmente es tan malo almacenar una lista delimitada en una columna de la base de datos</target>
        </trans-unit>
        <trans-unit id="97e14d78d8fcd13dfe964f4b10dc17b1a77e933f" translate="yes" xml:space="preserve">
          <source>It breaks first normal form.</source>
          <target state="translated">Rompe la primera forma normal.</target>
        </trans-unit>
        <trans-unit id="80115ba213ccc5865ea9eacf73cb79e12bcf165b" translate="yes" xml:space="preserve">
          <source>It could be converted to a comma delimited as necessary</source>
          <target state="translated">Podría convertirse en una coma delimitada según sea necesario</target>
        </trans-unit>
        <trans-unit id="912626e5ca115be5c77c6a33ebf715da01ac2286" translate="yes" xml:space="preserve">
          <source>Now, I know that the correct solution would be to create a second table and properly normalize the database. It was quicker to implement the easy solution, and I wanted to have a proof-of-concept of that application quickly and without having to spend too much time on it.</source>
          <target state="translated">Ahora,sé que la solución correcta sería crear una segunda tabla y normalizar adecuadamente la base de datos.Era más rápido implementar la solución fácil,y quería tener una prueba de concepto de esa aplicación rápidamente y sin tener que gastar mucho tiempo en ella.</target>
        </trans-unit>
        <trans-unit id="6ac999a9ea9159ccedab7c41ae7027da9d5975cb" translate="yes" xml:space="preserve">
          <source>Or leave it as it is and learn the painful lesson of a SQL injection attack.</source>
          <target state="translated">O dejarlo como está y aprender la dolorosa lección de un ataque de inyección SQL.</target>
        </trans-unit>
        <trans-unit id="b4fd9c9094921aa024f79d741e132ebfd65b918a" translate="yes" xml:space="preserve">
          <source>Some more context, this is a small internal application that essentially replaces an Excel file that was stored on a shared folder. I'm also asking because I'm thinking about cleaning up the program and make it more maintainable. There are some things in there I'm not entirely happy with, one of them is the topic of this question.</source>
          <target state="translated">Un poco más de contexto,se trata de una pequeña aplicación interna que esencialmente sustituye a un archivo de Excel que estaba almacenado en una carpeta compartida.También pregunto porque estoy pensando en limpiar el programa y hacerlo más mantenible.Hay algunas cosas ahí con las que no estoy del todo contento,una de ellas es el tema de esta pregunta.</target>
        </trans-unit>
        <trans-unit id="1e1888bea44887d7106486a4c61a983782604b84" translate="yes" xml:space="preserve">
          <source>There are numerous questions on SO asking:</source>
          <target state="translated">Hay numerosas preguntas en el SO que se hacen:</target>
        </trans-unit>
        <trans-unit id="9a84b7e969e00182b83777fed2208ed47140465d" translate="yes" xml:space="preserve">
          <source>There are times when you need to employ denormalization, but as &lt;a href=&quot;https://stackoverflow.com/a/3653507/578288&quot;&gt;@OMG Ponies mentions&lt;/a&gt;, these are exception cases.  Any non-relational &amp;ldquo;optimization&amp;rdquo; benefits one type of query at the expense of other uses of the data, so be sure you know which of your queries need to be treated so specially that they deserve denormalization.</source>
          <target state="translated">Hay momentos en los que necesita emplear la desnormalizaci&amp;oacute;n, pero como &lt;a href=&quot;https://stackoverflow.com/a/3653507/578288&quot;&gt;menciona @OMG Ponies&lt;/a&gt; , estos son casos excepcionales. Cualquier &quot;optimizaci&amp;oacute;n&quot; no relacional beneficia un tipo de consulta a expensas de otros usos de los datos, as&amp;iacute; que aseg&amp;uacute;rese de saber cu&amp;aacute;les de sus consultas deben tratarse de manera tan especial que merezcan la desnormalizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a69f4ce2a888b0fa6f01d65a683a22ce67bbfb61" translate="yes" xml:space="preserve">
          <source>These are all symptoms of denormalized data, and highlight why you should always model for normalized data.  Denormalization &lt;em&gt;can&lt;/em&gt; be a query optimization, &lt;strong&gt;&lt;em&gt;to be applied when the need actually presents itself&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">Todos estos son s&amp;iacute;ntomas de datos desnormalizados y destacan por qu&amp;eacute; siempre debe modelar para datos normalizados. La desnormalizaci&amp;oacute;n &lt;em&gt;puede&lt;/em&gt; ser una optimizaci&amp;oacute;n de consulta, &lt;strong&gt;&lt;em&gt;que se aplica cuando la necesidad realmente se presenta&lt;/em&gt;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="78c32156deeaf2132bbf7495a555c415ae3d6de1" translate="yes" xml:space="preserve">
          <source>This rings alarm bells. The only reason you should do something like this is that you know how to do it &quot;the right way&quot; but you have come to the conclusion that there is a tangible reason not to do it that way.</source>
          <target state="translated">Esto hace sonar las alarmas.La única razón por la que deberías hacer algo así es que sabes cómo hacerlo &quot;de la manera correcta&quot; pero has llegado a la conclusión de que hay una razón tangible para no hacerlo de esa manera.</target>
        </trans-unit>
        <trans-unit id="80ae79906b4af913c8570f4d8e489f10152b94c4" translate="yes" xml:space="preserve">
          <source>To solve these problems, you have to write tons of application code, reinventing functionality that the RDBMS &lt;em&gt;already provides much more efficiently&lt;/em&gt;.</source>
          <target state="translated">Para resolver estos problemas, debe escribir toneladas de c&amp;oacute;digo de aplicaci&amp;oacute;n, reinventando la funcionalidad que el RDBMS &lt;em&gt;ya proporciona de manera mucho m&amp;aacute;s eficiente&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="4a2f298a9edab70d9b108437f88211587fed4d83" translate="yes" xml:space="preserve">
          <source>Well I've been using a key/value pair tab separated list in a NTEXT column in SQL Server for more than 4 years now and it works. You do lose the flexibility of making queries but on the other hand, if you have a library that persists/derpersists the key value pair then it's not a that bad idea.</source>
          <target state="translated">Bueno,he estado usando una lista separada de pares de valores clave en una columna NTEXT en SQL Server durante más de 4 años y funciona.Pierdes la flexibilidad de hacer consultas pero por otro lado,si tienes una biblioteca que persiste en el par de valores clave,entonces no es tan mala idea.</target>
        </trans-unit>
        <trans-unit id="23b6479b9f4b73c294ee003479355e4d49c741ed" translate="yes" xml:space="preserve">
          <source>What you're calling laziness and lack of SQL knowledge is the stuff that neophytes are made of.  I'd recommend taking the time to do it properly and view it as an opportunity to learn.</source>
          <target state="translated">Lo que usted llama pereza y falta de conocimiento de SQL es la materia de la que están hechos los neófitos.Recomendaría tomarse el tiempo para hacerlo correctamente y verlo como una oportunidad para aprender.</target>
        </trans-unit>
        <trans-unit id="0da840e085ebfe0f26931a3075af7cadfe521dc0" translate="yes" xml:space="preserve">
          <source>Yes, I would say that it really is that bad.  It's a defensible choice, but that doesn't make it correct or good.</source>
          <target state="translated">Sí,yo diría que es realmente tan malo.Es una elección defendible,pero eso no lo hace correcto o bueno.</target>
        </trans-unit>
        <trans-unit id="9c0421fdef72069541967dceb38557cfa5b088a0" translate="yes" xml:space="preserve">
          <source>Yes, it &lt;em&gt;is&lt;/em&gt; that bad.  My view is that if you don't like using relational databases then look for an alternative that suits you better, there are lots of interesting &quot;NOSQL&quot; projects out there with some really advanced features.</source>
          <target state="translated">S&amp;iacute;, &lt;em&gt;es&lt;/em&gt; tan malo. Mi opini&amp;oacute;n es que si no le gusta usar bases de datos relacionales, busque una alternativa que se adapte mejor a usted, hay muchos proyectos interesantes &quot;NOSQL&quot; con algunas caracter&amp;iacute;sticas realmente avanzadas.</target>
        </trans-unit>
        <trans-unit id="ac1512f8b79726851af69c8b05819175a17cd5cc" translate="yes" xml:space="preserve">
          <source>how to get a count of specific values from the comma separated list</source>
          <target state="translated">cómo obtener un recuento de valores específicos de la lista separada por comas</target>
        </trans-unit>
        <trans-unit id="22bb0c71811e7ae7fb998abd6e1d9e06140ec61b" translate="yes" xml:space="preserve">
          <source>how to get records that have only the same 2/3/etc specific value from that comma separated list</source>
          <target state="translated">cómo obtener registros que sólo tienen el mismo valor específico 23etc de esa lista separada por comas</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
