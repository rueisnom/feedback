<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/3653462">
    <body>
      <group id="3653462">
        <trans-unit id="d68ac24c321858792a3fd7d90f6c8f7e5621af67" translate="yes" xml:space="preserve">
          <source>&quot;One reason was laziness&quot;.</source>
          <target state="translated">&quot;Одной из причин была лень&quot;.</target>
        </trans-unit>
        <trans-unit id="1e15595d4b61fc0c392aa5cde87d99860881780b" translate="yes" xml:space="preserve">
          <source>(Some users would dispute the statement in my previous paragraph, saying that &quot;you can never know what requirements will be added in the future&quot;. These users are either misguided or stating a religious conviction. Sometimes it is advantageous to work to the requirements you have before you.)</source>
          <target state="translated">(Некоторые пользователи оспорили бы утверждение в моем предыдущем пункте,заявив,что &quot;никогда не знаешь,какие требования будут добавлены в будущем&quot;.Эти пользователи либо вводят в заблуждение,либо заявляют о своих религиозных убеждениях.Иногда выгодно работать с требованиями,которые у вас есть перед собой).</target>
        </trans-unit>
        <trans-unit id="308f7be66f9bcb2ede05a32d3482ece472e075d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/questions/6097849/querying-an-xml-list-in-sql-server-using-xquery&quot;&gt;querying an XML list in sql server using Xquery&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/6097849/querying-an-xml-list-in-sql-server-using-xquery&quot;&gt;запрос списка XML на сервере sql с использованием Xquery&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2af6a2d81420798d27f429d6e245a10ba6797ca1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;idlist REGEXP '[[:&amp;lt;:]]2[[:&amp;gt;:]]'&lt;/code&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;idlist REGEXP '[[:&amp;lt;:]]2[[:&amp;gt;:]]'&lt;/code&gt; &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1ceb7c30bd62e944fe612dfbf214d0de8dd27f5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With CSV:&lt;/strong&gt; Can't delete a value from the list without fetching the whole list.</source>
          <target state="translated">&lt;strong&gt;С CSV:&lt;/strong&gt; невозможно удалить значение из списка без извлечения всего списка.</target>
        </trans-unit>
        <trans-unit id="9e16ed75068d203de985c0f7cace1deb2bdec614" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With CSV:&lt;/strong&gt; Can't enforce uniqueness: no way to prevent 1,2,3,3,3,5</source>
          <target state="translated">&lt;strong&gt;С CSV:&lt;/strong&gt; не может обеспечить уникальность: нет способа предотвратить 1,2,3,3,3,5</target>
        </trans-unit>
        <trans-unit id="56d2e6fab6ec52b379ff543420fc07624f74b279" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With CSV:&lt;/strong&gt; Can't ensure that each value is the right data type: no way to prevent 1,2,3,banana,5</source>
          <target state="translated">&lt;strong&gt;С CSV:&lt;/strong&gt; не может гарантировать, что каждое значение является правильным типом данных: нет способа предотвратить 1,2,3, банан, 5</target>
        </trans-unit>
        <trans-unit id="ee8fce5b979b677ccbf13f03d48f11ac6dc3093e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With CSV:&lt;/strong&gt; Can't use foreign key constraints to link values to a lookup table; no way to enforce referential integrity.</source>
          <target state="translated">&lt;strong&gt;С CSV:&lt;/strong&gt; нельзя использовать ограничения внешнего ключа, чтобы связать значения с таблицей поиска; нет способа обеспечить ссылочную целостность.</target>
        </trans-unit>
        <trans-unit id="207282a8a3febbda7d40ff068fc2fae70d0a5488" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With CSV:&lt;/strong&gt; Hard to count elements in the list, or do other aggregate queries.**</source>
          <target state="translated">&lt;strong&gt;С CSV:&lt;/strong&gt; трудно подсчитать элементы в списке или выполнить другие агрегированные запросы. **</target>
        </trans-unit>
        <trans-unit id="3591709e1dc9bf747156834af12cddd44e3c1158" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With CSV:&lt;/strong&gt; Hard to fetch the list in sorted order.</source>
          <target state="translated">&lt;strong&gt;С CSV:&lt;/strong&gt; трудно получить список в отсортированном порядке.</target>
        </trans-unit>
        <trans-unit id="d546b408530db95f4a006946947eeefa1dfca92e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With CSV:&lt;/strong&gt; Hard to join the values to the lookup table they reference.**</source>
          <target state="translated">&lt;strong&gt;С CSV:&lt;/strong&gt; сложно объединить значения в справочную таблицу, на которую они ссылаются. **</target>
        </trans-unit>
        <trans-unit id="ec63eb94e2584480f09be601555ff5cb30795b74" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With CSV:&lt;/strong&gt; Hard to search for all entities with a given value in the list; you have to use an inefficient table-scan.</source>
          <target state="translated">&lt;strong&gt;С CSV:&lt;/strong&gt; трудно найти все объекты с данным значением в списке; Вы должны использовать неэффективное сканирование таблицы.</target>
        </trans-unit>
        <trans-unit id="166b5d1f8e15e8d1cec21bf82cd86ed9b8b02ff7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With CSV:&lt;/strong&gt; Plus a lot of comma characters.</source>
          <target state="translated">&lt;strong&gt;С CSV:&lt;/strong&gt; плюс много запятых.</target>
        </trans-unit>
        <trans-unit id="de8b7eba7a8dee55ede44f1d46b07f0db2f694d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With CSV:&lt;/strong&gt; Storing integers as strings takes about twice as much space as storing binary integers.</source>
          <target state="translated">&lt;strong&gt;С CSV:&lt;/strong&gt; Хранение целых чисел в виде строк занимает примерно вдвое больше места, чем хранение двоичных чисел.</target>
        </trans-unit>
        <trans-unit id="345c84752cdc393407da764c9c782bfd2c02f009" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With XML:&lt;/strong&gt; not particularly hard</source>
          <target state="translated">&lt;strong&gt;С XML:&lt;/strong&gt; не особенно сложно</target>
        </trans-unit>
        <trans-unit id="d52f99f730e5b0559ad92a5581464421c481b313" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With XML:&lt;/strong&gt; single items can be removed</source>
          <target state="translated">&lt;strong&gt;С XML:&lt;/strong&gt; отдельные элементы могут быть удалены</target>
        </trans-unit>
        <trans-unit id="d127c28ca1579d55218956f68a9f58909c540d73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With XML:&lt;/strong&gt; still an issue</source>
          <target state="translated">&lt;strong&gt;С XML:&lt;/strong&gt; все еще проблема</target>
        </trans-unit>
        <trans-unit id="b345e440db0366b1bc401363308731d2d7f1508a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With XML:&lt;/strong&gt; storage is even worse than a csv</source>
          <target state="translated">&lt;strong&gt;С XML:&lt;/strong&gt; хранилище еще хуже, чем CSV</target>
        </trans-unit>
        <trans-unit id="4b44193a79ad8c85453d9ca9ede7d0699345d2a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With XML:&lt;/strong&gt; tags are used instead of commas</source>
          <target state="translated">&lt;strong&gt;С XML:&lt;/strong&gt; теги используются вместо запятых</target>
        </trans-unit>
        <trans-unit id="299faa449be7786936f6646db5550c3571502592" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With XML:&lt;/strong&gt; values in a tag can be forced to be the correct type</source>
          <target state="translated">&lt;strong&gt;С XML:&lt;/strong&gt; значения в теге могут быть принудительного типа</target>
        </trans-unit>
        <trans-unit id="7ee5b742559eada20e128ff736b7d14932603b20" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With XML:&lt;/strong&gt; xml field can be indexed</source>
          <target state="translated">&lt;strong&gt;С XML:&lt;/strong&gt; поле XML может быть проиндексировано</target>
        </trans-unit>
        <trans-unit id="a713f943138b961f296abe723ab2d81166668115" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;*&lt;/sup&gt; MySQL 8.0 no longer supports this word-boundary expression syntax.</source>
          <target state="translated">&lt;sup&gt;*&lt;/sup&gt; MySQL 8.0 больше не поддерживает этот синтаксис выражения границы слова.</target>
        </trans-unit>
        <trans-unit id="8c451c3b9291f22b6c5debc7170bb7a45e6b2675" translate="yes" xml:space="preserve">
          <source>A second criticism is that putting raw input results directly into a database, without any validation or binding at all, leaves you open to SQL injection attacks.</source>
          <target state="translated">Вторая критика заключается в том,что помещение исходных результатов ввода непосредственно в базу данных,без какой-либо проверки или привязки вообще,оставляет вас открытым для атак SQL-инъекций.</target>
        </trans-unit>
        <trans-unit id="0043a32ea8c37d6143e889a94b95144c1d95ef21" translate="yes" xml:space="preserve">
          <source>Another problem with the comma separated list is ensuring the values are consistent - storing text means the possibility of typos...</source>
          <target state="translated">Другая проблема со списком,разделенным запятыми-обеспечение согласованности значений-хранение текста означает возможность опечаток....</target>
        </trans-unit>
        <trans-unit id="0a5772680ad6d9e0da29214f7d7a90bd5bce7f2a" translate="yes" xml:space="preserve">
          <source>By being an xml field, some of the concerns can be addressed.</source>
          <target state="translated">Будучи полем xml,некоторые из проблем могут быть решены.</target>
        </trans-unit>
        <trans-unit id="96484fc83fcf63f76507517efe55769d93c8351d" translate="yes" xml:space="preserve">
          <source>Can&amp;rsquo;t delete a value from the list without fetching the whole list.</source>
          <target state="translated">Невозможно удалить значение из списка без извлечения всего списка.</target>
        </trans-unit>
        <trans-unit id="5e342bb4206cf556c313a7fa707fa608068f4d41" translate="yes" xml:space="preserve">
          <source>Can&amp;rsquo;t enforce uniqueness: no way to prevent &lt;em&gt;1,2,3,3,3,5&lt;/em&gt;</source>
          <target state="translated">Не может обеспечить уникальность: нет способа предотвратить &lt;em&gt;1,2,3,3,3,5&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d1e23e394102b96f65790a58c9b56d3fa91be9c" translate="yes" xml:space="preserve">
          <source>Can&amp;rsquo;t ensure that each value is the right data type: no way to prevent &lt;em&gt;1,2,3,banana,5&lt;/em&gt;</source>
          <target state="translated">Не могу гарантировать, что каждое значение является правильным типом данных: нет способа предотвратить &lt;em&gt;1,2,3, банан, 5&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="64461d6b927467f175babcaa6dfee593f032e245" translate="yes" xml:space="preserve">
          <source>Can&amp;rsquo;t use foreign key constraints to link values to a lookup table; no way to enforce referential integrity.</source>
          <target state="translated">Невозможно использовать ограничения внешнего ключа для связи значений с таблицей поиска; нет способа обеспечить ссылочную целостность.</target>
        </trans-unit>
        <trans-unit id="d4903c42663fd89a04a7592de03256b26c309966" translate="yes" xml:space="preserve">
          <source>Can't store a list longer than what fits in the string column.</source>
          <target state="translated">Не может хранить список дольше,чем то,что помещается в столбец строки.</target>
        </trans-unit>
        <trans-unit id="082848626a434057c827806a8fd39ae812f9ff3e" translate="yes" xml:space="preserve">
          <source>Comma-separated lists are wrong enough that I made this the first chapter in my book: &lt;a href=&quot;http://www.pragprog.com/titles/bksqla/sql-antipatterns&quot;&gt;SQL Antipatterns: Avoiding the Pitfalls of Database Programming&lt;/a&gt;.</source>
          <target state="translated">Разделенные запятыми списки настолько ошибочны, что я сделал это первой главой своей книги: &amp;laquo; &lt;a href=&quot;http://www.pragprog.com/titles/bksqla/sql-antipatterns&quot;&gt;Антипаттерны SQL: предотвращение ловушек программирования баз данных&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5a1b0d85f6d36e43dd10314a16ce8957095a7c74" translate="yes" xml:space="preserve">
          <source>Hard to count elements in the list, or do other aggregate queries.</source>
          <target state="translated">Сложно подсчитать элементы в списке или выполнить другие агрегированные запросы.</target>
        </trans-unit>
        <trans-unit id="823a889b45ed2185a283c44397992f042154b32a" translate="yes" xml:space="preserve">
          <source>Hard to fetch the list in sorted order.</source>
          <target state="translated">Сложно достать список в отсортированном порядке.</target>
        </trans-unit>
        <trans-unit id="569f55146a5b0b5ccc52a1131e4d457a3d13e287" translate="yes" xml:space="preserve">
          <source>Hard to join the values to the lookup table they reference.</source>
          <target state="translated">Сложно соединить значения с таблицей поиска,на которую они ссылаются.</target>
        </trans-unit>
        <trans-unit id="0d810b097c19e6f50b0523535bfffff879a11570" translate="yes" xml:space="preserve">
          <source>Hard to search for all entities with a given value in the list; you have to use an inefficient table-scan. May have to resort to regular expressions, for example in MySQL:</source>
          <target state="translated">Сложно найти все сущности с заданным значением в списке;необходимо использовать неэффективное табличное сканирование.Возможно,придется прибегнуть к регулярным выражениям,например,в MySQL:</target>
        </trans-unit>
        <trans-unit id="1f7c041a1a12ca4cd5aea56bdf5e32098bb7611a" translate="yes" xml:space="preserve">
          <source>Having said this: if the data you are choosing to store this way is data that you will never need to query by, then there may be a case for storing it in the way you have chosen.</source>
          <target state="translated">Сказав это:если данные,которые вы выбираете для хранения таким образом,это данные,которые вам никогда не понадобятся для запроса,то может возникнуть ситуация,когда вы будете хранить их так,как выбрали.</target>
        </trans-unit>
        <trans-unit id="c16c6ccd0c663eeab5678238a0bfe5252ec79798" translate="yes" xml:space="preserve">
          <source>I needed a multi-value column, it could be implemented as an xml field</source>
          <target state="translated">Мне нужна была колонка с несколькими значениями,она может быть реализована в виде поля xml.</target>
        </trans-unit>
        <trans-unit id="10dc0ee5f03cdb71f15e2cb4aa8c52ef1963754e" translate="yes" xml:space="preserve">
          <source>I thought the saved time and simpler code was worth it in my situation, is this a defensible design choice, or should I have normalized it from the start?</source>
          <target state="translated">Я думал,что сэкономленное время и более простой код стоят того в моей ситуации,является ли это оправданным выбором дизайна,или я должен был нормализовать его с самого начала?</target>
        </trans-unit>
        <trans-unit id="28e7a833b484b5bd612c1994a32514df4ed75fdb" translate="yes" xml:space="preserve">
          <source>I would probably take the middle ground: make each field in the CSV into a separate column in the database, but not worry much about normalization (at least for now). At some point, normalization &lt;em&gt;might&lt;/em&gt; become interesting, but with all the data shoved into a single column you're gaining virtually no benefit from using a database at all. You need to separate the data into logical fields/columns/whatever you want to call them before you can manipulate it meaningfully at all.</source>
          <target state="translated">Я бы, вероятно, занял среднюю позицию: превратить каждое поле в CSV в отдельный столбец в базе данных, но не сильно беспокоиться о нормализации (по крайней мере, пока). В какой-то момент нормализация &lt;em&gt;может&lt;/em&gt; стать интересной, но со всеми данными, помещенными в один столбец, вы практически не получаете никакой выгоды от использования базы данных вообще. Вам необходимо разделить данные на логические поля / столбцы / как угодно, чтобы вызывать их, прежде чем вы сможете вообще их манипулировать.</target>
        </trans-unit>
        <trans-unit id="b03148bc19d2bd86b90c069d0d7ac9d993ddaf36" translate="yes" xml:space="preserve">
          <source>If you have a fixed number of boolean fields, you could use a &lt;code&gt;INT(1) NOT NULL&lt;/code&gt; (or &lt;code&gt;BIT NOT NULL&lt;/code&gt; if it exists) or &lt;code&gt;CHAR (0)&lt;/code&gt; (nullable) for each. You could also use a &lt;code&gt;SET&lt;/code&gt; (I forget the exact syntax).</source>
          <target state="translated">Если у вас есть фиксированное число логических полей, вы можете использовать &lt;code&gt;INT(1) NOT NULL&lt;/code&gt; (или &lt;code&gt;BIT NOT NULL&lt;/code&gt; , если он существует) или &lt;code&gt;CHAR (0)&lt;/code&gt; (обнуляемый) для каждого. Вы также можете использовать &lt;code&gt;SET&lt;/code&gt; (я забыл точный синтаксис).</target>
        </trans-unit>
        <trans-unit id="b51caecb70bf82d71efd94cda96a700d5ee3373c" translate="yes" xml:space="preserve">
          <source>Imagine a web form with a set of check boxes (any or all of them can be selected). I chose to save them in a comma separated list of values stored in one column of the database table.</source>
          <target state="translated">Представьте себе веб-форму с набором флажков (можно выбрать любой или все).Я выбрал сохранение их в разделенном запятыми списке значений,хранящихся в одном столбце таблицы БД.</target>
        </trans-unit>
        <trans-unit id="d3cb8dde911f769cd7183cd9cc767ec03b879e9f" translate="yes" xml:space="preserve">
          <source>In addition to violating &lt;a href=&quot;http://en.wikipedia.org/wiki/1NF&quot;&gt;First Normal Form&lt;/a&gt; because of the repeating group of values stored in a single column, comma-separated lists have a lot of other more practical problems:</source>
          <target state="translated">В дополнение к нарушению &lt;a href=&quot;http://en.wikipedia.org/wiki/1NF&quot;&gt;формы First Normal&lt;/a&gt; из-за повторяющейся группы значений, хранящихся в одном столбце, у разделенных запятыми списков есть много других более практических проблем:</target>
        </trans-unit>
        <trans-unit id="fe2e1c3207f9e33e8e2f1f3d075479803691398e" translate="yes" xml:space="preserve">
          <source>In general anything can be defensible if it meets the requirements of your project.  This doesn't mean that people will agree with or want to defend your decision...</source>
          <target state="translated">В общем,все может быть оправдано,если оно отвечает требованиям вашего проекта.Это не означает,что люди согласятся или захотят защитить ваше решение...</target>
        </trans-unit>
        <trans-unit id="e3701cdbecde26ed063beb5e13072aaf223d9db1" translate="yes" xml:space="preserve">
          <source>In general, storing data in this way is suboptimal (e.g. harder to do efficient queries) and may cause maintenance issues if you modify the items in your form.  Perhaps you could have found a middle ground and used an integer representing a set of bit flags instead?</source>
          <target state="translated">В целом,хранение данных таким образом является неоптимальным (например,более сложным для выполнения эффективных запросов)и может вызвать проблемы с обслуживанием,если вы модифицируете элементы в своей форме.Возможно,вы могли бы найти золотую середину и использовать вместо нее целое число,представляющее собой набор битовых флагов?</target>
        </trans-unit>
        <trans-unit id="a3bf060c7229a7de0c733617110b5fb79a611283" translate="yes" xml:space="preserve">
          <source>In short, using XML gets around some of the issues with delimited list AND can be converted to a delimited list as needed</source>
          <target state="translated">Короче говоря,использование XML обходит некоторые из проблем с разделенным списком И может быть преобразована в разделенный список по мере необходимости</target>
        </trans-unit>
        <trans-unit id="aeac6386d7b159eafa028850b5bc0c1ef63f2fb4" translate="yes" xml:space="preserve">
          <source>Is storing a delimited list in a database column really that bad</source>
          <target state="translated">Хранение разделенного списка в столбце базы данных действительно настолько плохо.</target>
        </trans-unit>
        <trans-unit id="97e14d78d8fcd13dfe964f4b10dc17b1a77e933f" translate="yes" xml:space="preserve">
          <source>It breaks first normal form.</source>
          <target state="translated">Это нарушает первую нормальную форму.</target>
        </trans-unit>
        <trans-unit id="80115ba213ccc5865ea9eacf73cb79e12bcf165b" translate="yes" xml:space="preserve">
          <source>It could be converted to a comma delimited as necessary</source>
          <target state="translated">Он может быть преобразован в запятую,разделенную по мере необходимости.</target>
        </trans-unit>
        <trans-unit id="912626e5ca115be5c77c6a33ebf715da01ac2286" translate="yes" xml:space="preserve">
          <source>Now, I know that the correct solution would be to create a second table and properly normalize the database. It was quicker to implement the easy solution, and I wanted to have a proof-of-concept of that application quickly and without having to spend too much time on it.</source>
          <target state="translated">Теперь я знаю,что правильным решением будет создание второй таблицы и правильная нормализация базы данных.Простое решение было реализовано быстрее,и я хотел получить подтверждение концепции этого приложения быстро и без необходимости тратить на него слишком много времени.</target>
        </trans-unit>
        <trans-unit id="6ac999a9ea9159ccedab7c41ae7027da9d5975cb" translate="yes" xml:space="preserve">
          <source>Or leave it as it is and learn the painful lesson of a SQL injection attack.</source>
          <target state="translated">Или оставьте все как есть и выучите болезненный урок атаки SQL-инъекции.</target>
        </trans-unit>
        <trans-unit id="b4fd9c9094921aa024f79d741e132ebfd65b918a" translate="yes" xml:space="preserve">
          <source>Some more context, this is a small internal application that essentially replaces an Excel file that was stored on a shared folder. I'm also asking because I'm thinking about cleaning up the program and make it more maintainable. There are some things in there I'm not entirely happy with, one of them is the topic of this question.</source>
          <target state="translated">Еще один контекст,это небольшое внутреннее приложение,которое,по сути,заменяет файл Excel,который хранился в общей папке.Я также спрашиваю,потому что подумываю о том,чтобы очистить программу и сделать ее более удобной для обслуживания.Там есть некоторые вещи,которые меня не совсем устраивают,одна из них-тема этого вопроса.</target>
        </trans-unit>
        <trans-unit id="1e1888bea44887d7106486a4c61a983782604b84" translate="yes" xml:space="preserve">
          <source>There are numerous questions on SO asking:</source>
          <target state="translated">Есть много вопросов по SO:</target>
        </trans-unit>
        <trans-unit id="9a84b7e969e00182b83777fed2208ed47140465d" translate="yes" xml:space="preserve">
          <source>There are times when you need to employ denormalization, but as &lt;a href=&quot;https://stackoverflow.com/a/3653507/578288&quot;&gt;@OMG Ponies mentions&lt;/a&gt;, these are exception cases.  Any non-relational &amp;ldquo;optimization&amp;rdquo; benefits one type of query at the expense of other uses of the data, so be sure you know which of your queries need to be treated so specially that they deserve denormalization.</source>
          <target state="translated">Есть моменты, когда вам нужно использовать денормализацию, но, как &lt;a href=&quot;https://stackoverflow.com/a/3653507/578288&quot;&gt;упоминает @OMG Ponies&lt;/a&gt; , это исключительные случаи. Любая нереляционная &amp;laquo;оптимизация&amp;raquo; приносит пользу одному типу запроса за счет других видов использования данных, поэтому убедитесь, что вы знаете, какие из ваших запросов необходимо обрабатывать настолько специально, чтобы они заслуживали денормализации.</target>
        </trans-unit>
        <trans-unit id="a69f4ce2a888b0fa6f01d65a683a22ce67bbfb61" translate="yes" xml:space="preserve">
          <source>These are all symptoms of denormalized data, and highlight why you should always model for normalized data.  Denormalization &lt;em&gt;can&lt;/em&gt; be a query optimization, &lt;strong&gt;&lt;em&gt;to be applied when the need actually presents itself&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">Все это симптомы денормализованных данных и подчеркивают, почему вы всегда должны моделировать для нормализованных данных. Денормализация &lt;em&gt;может&lt;/em&gt; быть оптимизацией запроса, &lt;strong&gt;&lt;em&gt;которая должна применяться, когда потребность действительно возникает&lt;/em&gt;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="78c32156deeaf2132bbf7495a555c415ae3d6de1" translate="yes" xml:space="preserve">
          <source>This rings alarm bells. The only reason you should do something like this is that you know how to do it &quot;the right way&quot; but you have come to the conclusion that there is a tangible reason not to do it that way.</source>
          <target state="translated">Звонит сигнал тревоги.Единственная причина,по которой вы должны сделать что-то подобное,это то,что вы знаете,как сделать это &quot;правильным путем&quot;,но вы пришли к выводу,что есть ощутимая причина не делать это таким образом.</target>
        </trans-unit>
        <trans-unit id="80ae79906b4af913c8570f4d8e489f10152b94c4" translate="yes" xml:space="preserve">
          <source>To solve these problems, you have to write tons of application code, reinventing functionality that the RDBMS &lt;em&gt;already provides much more efficiently&lt;/em&gt;.</source>
          <target state="translated">Чтобы решить эти проблемы, вы должны написать тонны кода приложения, заново изобретая функциональность, которую СУБД &lt;em&gt;уже обеспечивает гораздо более эффективно&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="4a2f298a9edab70d9b108437f88211587fed4d83" translate="yes" xml:space="preserve">
          <source>Well I've been using a key/value pair tab separated list in a NTEXT column in SQL Server for more than 4 years now and it works. You do lose the flexibility of making queries but on the other hand, if you have a library that persists/derpersists the key value pair then it's not a that bad idea.</source>
          <target state="translated">Ну,я использую разделенный список пар ключей в колонке NTEXT в SQL Server уже более 4 лет,и это работает.Вы теряете гибкость при составлении запросов,но,с другой стороны,если у вас есть библиотека,которая сохраняет пару значений ключей,то это не такая уж и плохая идея.</target>
        </trans-unit>
        <trans-unit id="23b6479b9f4b73c294ee003479355e4d49c741ed" translate="yes" xml:space="preserve">
          <source>What you're calling laziness and lack of SQL knowledge is the stuff that neophytes are made of.  I'd recommend taking the time to do it properly and view it as an opportunity to learn.</source>
          <target state="translated">То,что вы называете ленью и отсутствием знаний SQL-это то,из чего сделаны неофиты.Я бы порекомендовал найти время,чтобы сделать это правильно и рассматривать это как возможность для обучения.</target>
        </trans-unit>
        <trans-unit id="0da840e085ebfe0f26931a3075af7cadfe521dc0" translate="yes" xml:space="preserve">
          <source>Yes, I would say that it really is that bad.  It's a defensible choice, but that doesn't make it correct or good.</source>
          <target state="translated">Да,я бы сказал,что это действительно так плохо.Это оправданный выбор,но это не делает его правильным или хорошим.</target>
        </trans-unit>
        <trans-unit id="9c0421fdef72069541967dceb38557cfa5b088a0" translate="yes" xml:space="preserve">
          <source>Yes, it &lt;em&gt;is&lt;/em&gt; that bad.  My view is that if you don't like using relational databases then look for an alternative that suits you better, there are lots of interesting &quot;NOSQL&quot; projects out there with some really advanced features.</source>
          <target state="translated">Да, это так плохо. Я считаю, что если вам не нравится использовать реляционные базы данных, тогда ищите альтернативу, которая подходит вам лучше, есть много интересных проектов &quot;NOSQL&quot; с некоторыми действительно продвинутыми функциями.</target>
        </trans-unit>
        <trans-unit id="ac1512f8b79726851af69c8b05819175a17cd5cc" translate="yes" xml:space="preserve">
          <source>how to get a count of specific values from the comma separated list</source>
          <target state="translated">как получить количество конкретных значений из списка,разделенного запятыми.</target>
        </trans-unit>
        <trans-unit id="22bb0c71811e7ae7fb998abd6e1d9e06140ec61b" translate="yes" xml:space="preserve">
          <source>how to get records that have only the same 2/3/etc specific value from that comma separated list</source>
          <target state="translated">как получить из этого списка,разделенного запятыми,записи,которые имеют только то же самое значение 23etc.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
