<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/29140402">
    <body>
      <group id="29140402">
        <trans-unit id="2441528a1b27e87040ce340944dac5b0b2dd77bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://commons.apache.org/proper/commons-lang/javadocs/api-release/org/apache/commons/lang3/builder/ToStringBuilder.html&quot;&gt;&lt;code&gt;ToStringBuilder&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;http://commons.apache.org/proper/commons-lang/&quot;&gt;Apache Commons Lang&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://commons.apache.org/proper/commons-lang/&quot;&gt;Apache Commons Lang의&lt;/a&gt; &lt;a href=&quot;http://commons.apache.org/proper/commons-lang/javadocs/api-release/org/apache/commons/lang3/builder/ToStringBuilder.html&quot;&gt; &lt;code&gt;ToStringBuilder&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f851b771224195cd3ce10c4352cf960c33c1c3eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://projectlombok.org/features/ToString.html&quot;&gt;&lt;code&gt;@ToString&lt;/code&gt;&lt;/a&gt; annotation from &lt;a href=&quot;http://projectlombok.org/&quot;&gt;Project Lombok&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://projectlombok.org/&quot;&gt;Project Lombok의&lt;/a&gt; &lt;a href=&quot;http://projectlombok.org/features/ToString.html&quot;&gt; &lt;code&gt;@ToString&lt;/code&gt; &lt;/a&gt; 주석</target>
        </trans-unit>
        <trans-unit id="9b8a5106753b238f7d8ac576fe27f554ca5a9f13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://google.github.io/guava/releases/19.0/api/docs/com/google/common/base/MoreObjects.ToStringHelper.html&quot;&gt;&lt;code&gt;MoreObjects.ToStringHelper&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;https://github.com/google/guava&quot;&gt;Google Guava&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/google/guava&quot;&gt;Google 구아바의&lt;/a&gt; &lt;a href=&quot;https://google.github.io/guava/releases/19.0/api/docs/com/google/common/base/MoreObjects.ToStringHelper.html&quot;&gt; &lt;code&gt;MoreObjects.ToStringHelper&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="70dc92f77ec608e9e4151c2aa8352d2597cbac08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2f92e0f4&lt;/code&gt; the hashcode of the object.</source>
          <target state="translated">&lt;code&gt;2f92e0f4&lt;/code&gt; 객체의 해시 코드입니다.</target>
        </trans-unit>
        <trans-unit id="0400003eb41a1b3090511c53cf3421565e153bff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;/code&gt; - joins the string together</source>
          <target state="translated">&lt;code&gt;@&lt;/code&gt; -문자열을 결합합니다</target>
        </trans-unit>
        <trans-unit id="a40ceae9c81ffb13e36e1a265829fbd32c90cb2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;L&lt;/code&gt; - the array contains a class or interface</source>
          <target state="translated">&lt;code&gt;L&lt;/code&gt; - 배열은 클래스 또는 인터페이스를 포함</target>
        </trans-unit>
        <trans-unit id="a696f7e7a7ece36a534221e2b8f4239ff8fb822c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt; - an single-dimensional array (as opposed to &lt;code&gt;[[&lt;/code&gt; or &lt;code&gt;[[[&lt;/code&gt; etc.)</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt; -1 차원 배열 ( &lt;code&gt;[[&lt;/code&gt; 또는 &lt;code&gt;[[[&lt;/code&gt; 등)과 반대)</target>
        </trans-unit>
        <trans-unit id="55b03d114f4fb5370dc0cf64ca8bacd3ca01ed6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;com.foo.MyType&lt;/code&gt;  - the name of the class, i.e. the class is &lt;code&gt;MyType&lt;/code&gt; in the package &lt;code&gt;com.foo&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;com.foo.MyType&lt;/code&gt; - 클래스의 이름. 즉, &lt;code&gt;com.foo&lt;/code&gt; 패키지 내의 클래스는 &lt;code&gt;MyType&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5be0c08d354bd447a6fa62f9482ae7a4a09440cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;java.lang.String&lt;/code&gt; - the type of objects in the array</source>
          <target state="translated">&lt;code&gt;java.lang.String&lt;/code&gt; - 배열의 객체 유형</target>
        </trans-unit>
        <trans-unit id="40990b79f9ecb4a9c5dc0ff9ad9baf2ed41ef678" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;&lt;strong&gt;Note&lt;/strong&gt;: this is intended as a canonical Q&amp;amp;A about this subject.&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;strong&gt;참고&lt;/strong&gt; : 이것은이 주제에 대한 정식 Q &amp;amp; A를위한 것입니다.&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="ff1a24e07b8ba0d43389838552d3884901f3f7b7" translate="yes" xml:space="preserve">
          <source>A result such as &lt;code&gt;com.foo.MyType@2f92e0f4&lt;/code&gt; can therefore be explained as:</source>
          <target state="translated">따라서 &lt;code&gt;com.foo.MyType@2f92e0f4&lt;/code&gt; 와 같은 결과는 다음과 같이 설명 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="961f0cc9cd1ab708ddd7770183d497225d0c2449" translate="yes" xml:space="preserve">
          <source>A similar thing happened when I tried to print an array of &lt;code&gt;Person&lt;/code&gt; objects:</source>
          <target state="translated">&lt;code&gt;Person&lt;/code&gt; 객체 배열을 인쇄하려고 할 때도 비슷한 일이 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="bcceb009ad155bf0683ec256cd9360f5b35ebdef" translate="yes" xml:space="preserve">
          <source>All Java objects have a &lt;code&gt;toString()&lt;/code&gt; method, which is invoked when you try and print the object.</source>
          <target state="translated">모든 Java 객체에는 &lt;code&gt;toString()&lt;/code&gt; 메소드가 있으며,이 메소드는 객체를 인쇄하려고 할 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="b90cc9bfd23567a2ff5ba1f00e7c63ca6da8755e" translate="yes" xml:space="preserve">
          <source>Arrays</source>
          <target state="translated">Arrays</target>
        </trans-unit>
        <trans-unit id="c06887acda5b3d043c4fd201e926e1841b366ef3" translate="yes" xml:space="preserve">
          <source>As you can see, it generates a String by concatenating, several attributes of the class, for primitives it will print their values and for reference types it will use their class type (in this case to string method of Test2).</source>
          <target state="translated">보시다시피, 클래스의 여러 속성을 연결하여 문자열을 생성합니다. 프리미티브의 경우 값을 인쇄하고 참조 유형의 경우 클래스 유형을 사용합니다 (이 경우 Test2의 문자열 메소드).</target>
        </trans-unit>
        <trans-unit id="1e64d12cd48728897acd000de39440069d632ec9" translate="yes" xml:space="preserve">
          <source>Auto-generating the Output</source>
          <target state="translated">출력 자동 생성</target>
        </trans-unit>
        <trans-unit id="64dd60fe1a049fe6db3eb1369dec2e42bf428e21" translate="yes" xml:space="preserve">
          <source>Background</source>
          <target state="translated">Background</target>
        </trans-unit>
        <trans-unit id="38f2c9c75ee52d49a612b8740b3e34e8e9806231" translate="yes" xml:space="preserve">
          <source>Bear in mind that &lt;code&gt;toString()&lt;/code&gt; is just &lt;em&gt;one&lt;/em&gt; way for an object to be converted to a string. Typically this output should fully describe your object in a clear and concise manner. A better &lt;code&gt;toString()&lt;/code&gt; for our &lt;code&gt;Person&lt;/code&gt; class might be:</source>
          <target state="translated">&lt;code&gt;toString()&lt;/code&gt; 은 객체를 문자열로 변환하는 &lt;em&gt;한 가지&lt;/em&gt; 방법 일뿐입니다. 일반적으로이 출력은 객체를 명확하고 간결하게 설명해야합니다. &lt;code&gt;Person&lt;/code&gt; 클래스에 대한 더 나은 &lt;code&gt;toString()&lt;/code&gt; 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6e7c91666600e1c4c0df6faf3644bc3b05f5525e" translate="yes" xml:space="preserve">
          <source>By default, every Object in Java has the &lt;code&gt;toString()&lt;/code&gt; method which outputs the ObjectType@HashCode.</source>
          <target state="translated">기본적으로 Java의 모든 Object에는 ObjectType @ HashCode를 출력하는 &lt;code&gt;toString()&lt;/code&gt; 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="4bbb632f02fd69807705c0179999c17d35c93b0f" translate="yes" xml:space="preserve">
          <source>Collections</source>
          <target state="translated">Collections</target>
        </trans-unit>
        <trans-unit id="eac42dbab0425b24df9f855c74c2e10cda91a486" translate="yes" xml:space="preserve">
          <source>Customizing the Output</source>
          <target state="translated">출력 사용자 정의</target>
        </trans-unit>
        <trans-unit id="56d4ba2d9b94237dfea8ea43c1bddbd48a7f8dc5" translate="yes" xml:space="preserve">
          <source>Every class in Java has the &lt;code&gt;toString()&lt;/code&gt; method in it by default, which is called if you pass some object of that class to &lt;code&gt;System.out.println()&lt;/code&gt;. By default, this call returns the className@hashcode of that object.</source>
          <target state="translated">Java의 모든 클래스에는 기본적으로 &lt;code&gt;toString()&lt;/code&gt; 메소드가 있으며 해당 클래스의 일부 오브젝트를 &lt;code&gt;System.out.println()&lt;/code&gt; 전달하면 호출됩니다. 기본적으로이 호출은 해당 객체의 className @ hashcode를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c9625b67f340e003d76be2098d533885ab1ac656" translate="yes" xml:space="preserve">
          <source>How do I print my Java object without getting “SomeType@2f92e0f4”</source>
          <target state="translated">&amp;ldquo;SomeType @ 2f92e0f4&amp;rdquo;를받지 않고 Java 객체를 인쇄하는 방법</target>
        </trans-unit>
        <trans-unit id="9bcfab57f0f7e4547c12d0192ce1abc7333fd3c3" translate="yes" xml:space="preserve">
          <source>I got the output: &lt;code&gt;[Lcom.foo.Person;@28a418fc&lt;/code&gt;</source>
          <target state="translated">나는 출력을 얻었다 : &lt;code&gt;[Lcom.foo.Person;@28a418fc&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c122ff602ee618db89dbf99d5a3d76e78aed6c8f" translate="yes" xml:space="preserve">
          <source>I have a class defined as follows:</source>
          <target state="translated">다음과 같이 정의 된 클래스가 있습니다.</target>
        </trans-unit>
        <trans-unit id="349eb94ac5303a55657e0f09823036db73c725cd" translate="yes" xml:space="preserve">
          <source>I prefer to use a utility function which uses &lt;a href=&quot;https://github.com/google/gson&quot;&gt;GSON&lt;/a&gt; to de-serialize the Java object into JSON string.</source>
          <target state="translated">Java 객체를 JSON 문자열로 직렬화 해제하기 위해 &lt;a href=&quot;https://github.com/google/gson&quot;&gt;GSON&lt;/a&gt; 을 사용하는 유틸리티 기능을 선호합니다.</target>
        </trans-unit>
        <trans-unit id="8f8fbc80400d94814acfd8e834e39490909fe54e" translate="yes" xml:space="preserve">
          <source>I think apache provides a better util class which provides a function to get the string</source>
          <target state="translated">아파치는 문자열을 얻는 기능을 제공하는 더 나은 유틸리티 클래스를 제공한다고 생각합니다.</target>
        </trans-unit>
        <trans-unit id="6751204fa7e4710a7e9f0540accdd1109d5b35a0" translate="yes" xml:space="preserve">
          <source>I tried to print an instance of my class:</source>
          <target state="translated">클래스의 인스턴스를 인쇄하려고했습니다.</target>
        </trans-unit>
        <trans-unit id="b39f77448deac32b7d7be9a4a408f5a5c9aad413" translate="yes" xml:space="preserve">
          <source>If you Directly print any object of Person It will the &lt;code&gt;ClassName@HashCode&lt;/code&gt; to the Code.</source>
          <target state="translated">Person의 객체를 직접 인쇄하면 &lt;code&gt;ClassName@HashCode&lt;/code&gt; 가 코드에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="cc95249658e22bd0c538adeb1b116b5bca6a1c74" translate="yes" xml:space="preserve">
          <source>If you have a &lt;strong&gt;multi-dimensional array&lt;/strong&gt;, you can use &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html#deepToString-java.lang.Object:A-&quot;&gt;&lt;code&gt;Arrays.deepToString()&lt;/code&gt;&lt;/a&gt; to achieve the same sort of output.</source>
          <target state="translated">&lt;strong&gt;다차원 배열&lt;/strong&gt; 이있는 경우 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html#deepToString-java.lang.Object:A-&quot;&gt; &lt;code&gt;Arrays.deepToString()&lt;/code&gt; &lt;/a&gt; 을 사용하여 동일한 종류의 출력을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="523625eb37d92a2a4109cd2bd165cf7346dbe5fc" translate="yes" xml:space="preserve">
          <source>If you have an array of objects, you can call &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html#toString-java.lang.Object:A-&quot;&gt;&lt;code&gt;Arrays.toString()&lt;/code&gt;&lt;/a&gt; to produce a simple representation of the contents of the array. For instance, consider this array of &lt;code&gt;Person&lt;/code&gt; objects:</source>
          <target state="translated">객체 배열이있는 경우 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html#toString-java.lang.Object:A-&quot;&gt; &lt;code&gt;Arrays.toString()&lt;/code&gt; &lt;/a&gt; 을 호출하여 배열 내용의 간단한 표현을 생성 할 수 있습니다. 예를 들어 다음 &lt;code&gt;Person&lt;/code&gt; 객체 배열을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="5300a0c7dd21324aa29907fcfadd05117fdecf9e" translate="yes" xml:space="preserve">
          <source>If you look at the Object class (Parent class of all classes in Java) the toString() method implementation is</source>
          <target state="translated">Object 클래스 (Java의 모든 클래스의 부모 클래스)를 보면 toString () 메소드 구현은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7cf31643edecc64cc05a804ec120ae5be96e13ca" translate="yes" xml:space="preserve">
          <source>If you want more meaningfull information then you need to override the &lt;code&gt;toString()&lt;/code&gt; method in your class.</source>
          <target state="translated">보다 의미있는 정보를 원하면 클래스에서 &lt;code&gt;toString()&lt;/code&gt; 메서드를 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="2edd517b0efe3c803b2b7cd5cda0d7d7a29f722f" translate="yes" xml:space="preserve">
          <source>If you want to focus on just one aspect of your object or include a lot of jazzy formatting, you might be better to define a separate method instead, e.g. &lt;code&gt;String toElegantReport() {...}&lt;/code&gt;.</source>
          <target state="translated">객체의 한 측면에만 초점을 맞추거나 많은 재즈 형식을 포함하려면 &lt;code&gt;String toElegantReport() {...}&lt;/code&gt; 와 같이 별도의 메소드를 정의하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="e1550fea3e31d1fa041989c117990a7a1aec538f" translate="yes" xml:space="preserve">
          <source>If you want to print the person names, there are many ways.</source>
          <target state="translated">사람 이름을 인쇄하려면 여러 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5822655423e7e94bad3bddd90570190f717c8bf" translate="yes" xml:space="preserve">
          <source>In Eclipse,
Go to your class,
Right click-&amp;gt;source-&amp;gt;Generate &lt;code&gt;toString()&lt;/code&gt;;</source>
          <target state="translated">Eclipse에서 클래스로 이동하여 마우스 오른쪽 단추로 클릭-&amp;gt; 소스-&amp;gt; &lt;code&gt;toString()&lt;/code&gt; 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="7d0cc1fcc5471488084af379f3a23491fe0ddc8c" translate="yes" xml:space="preserve">
          <source>In intellij you can auto generate toString method by  pressing alt+inset and then selecting toString() here is an out put for a test class:</source>
          <target state="translated">intellij에서는 alt + inset을 누른 다음 toString ()을 선택하여 toString 메소드를 자동 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6708cc2a1a46569feb572babb1941e2a174a3cd8" translate="yes" xml:space="preserve">
          <source>In your second case when you are trying to print the array, it prints &lt;code&gt;[Lcom.foo.Person;@28a418fc&lt;/code&gt; the Array type and it's hashcode.</source>
          <target state="translated">두 번째 경우에는 배열을 인쇄하려고 할 때 &lt;code&gt;[Lcom.foo.Person;@28a418fc&lt;/code&gt; 배열 유형과 해시 코드를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="37c8b67991a23a86aad651a7e8150c508f5fe097" translate="yes" xml:space="preserve">
          <source>It will override the &lt;code&gt;toString()&lt;/code&gt; method and will print the object of that class.</source>
          <target state="translated">&lt;code&gt;toString()&lt;/code&gt; 메소드를 대체하고 해당 클래스의 오브젝트를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="fda04ccfe818e1db90eb94eb7c9e096c0df982e7" translate="yes" xml:space="preserve">
          <source>Many &lt;a href=&quot;http://en.wikipedia.org/wiki/Integrated_development_environment&quot;&gt;IDEs&lt;/a&gt; offer support for auto-generating a &lt;code&gt;toString()&lt;/code&gt; method, based on the fields in the class. See docs for &lt;a href=&quot;http://help.eclipse.org/luna/index.jsp?topic=%2Forg.eclipse.jdt.doc.user%2Freference%2Fref-dialog-tostring.htm&quot;&gt;Eclipse&lt;/a&gt; and &lt;a href=&quot;https://plugins.jetbrains.com/plugin/182?pr=idea&quot;&gt;IntelliJ&lt;/a&gt;, for example.</source>
          <target state="translated">많은 &lt;a href=&quot;http://en.wikipedia.org/wiki/Integrated_development_environment&quot;&gt;IDE&lt;/a&gt; 는 클래스의 필드를 기반으로 &lt;code&gt;toString()&lt;/code&gt; 메서드를 자동 생성하는 기능을 지원합니다. 예를 들어 &lt;a href=&quot;http://help.eclipse.org/luna/index.jsp?topic=%2Forg.eclipse.jdt.doc.user%2Freference%2Fref-dialog-tostring.htm&quot;&gt;Eclipse&lt;/a&gt; 및 &lt;a href=&quot;https://plugins.jetbrains.com/plugin/182?pr=idea&quot;&gt;IntelliJ&lt;/a&gt; 용 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="67fb4c150939982e1b08294b54fa43e323339ad7" translate="yes" xml:space="preserve">
          <source>Most collections will produce a pretty output based on calling &lt;code&gt;.toString()&lt;/code&gt; on every element.</source>
          <target state="translated">대부분의 컬렉션은 모든 요소에서 &lt;code&gt;.toString()&lt;/code&gt; 호출을 기반으로 예쁜 출력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="e0c605cbea18409b2a3068fb6102291b5cb9f972" translate="yes" xml:space="preserve">
          <source>Note:  this is a call to a &lt;em&gt;static&lt;/em&gt; method called &lt;code&gt;toString()&lt;/code&gt; in the Arrays class, which is different to what we've been discussing above.</source>
          <target state="translated">참고 : 이것은 Arrays 클래스에서 &lt;code&gt;toString()&lt;/code&gt; 이라는 &lt;em&gt;정적&lt;/em&gt; 메서드에 대한 호출이며 위에서 설명한 것과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="1df4d233ae27b162a392e95c4bd8084b28b9c8c7" translate="yes" xml:space="preserve">
          <source>Now if we print a &lt;code&gt;Person&lt;/code&gt;, we see their name rather than &lt;code&gt;com.foo.Person@12345678&lt;/code&gt;.</source>
          <target state="translated">이제 &lt;code&gt;Person&lt;/code&gt; 을 인쇄하면 &lt;code&gt;com.foo.Person@12345678&lt;/code&gt; 이 아니라 이름이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="b99222aa0ad104d9ab76a494b0e802494730aafb" translate="yes" xml:space="preserve">
          <source>Now if you try to Use the object of &lt;code&gt;Person&lt;/code&gt; then it will print the name</source>
          <target state="translated">이제 &lt;code&gt;Person&lt;/code&gt; 객체를 사용하려고하면 이름이 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="6dd87d8dd5f4eb64b162464c9ba5889ddcf4de7e" translate="yes" xml:space="preserve">
          <source>Now when you print the person object using &lt;code&gt;System.out.prtinln(personObj);&lt;/code&gt; it will print the name of the person instead of the classname and hashcode.</source>
          <target state="translated">이제 &lt;code&gt;System.out.prtinln(personObj);&lt;/code&gt; 클래스 이름과 해시 코드 대신 사람의 이름을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="1522176cb84425901971299c06b09272ffef54bc" translate="yes" xml:space="preserve">
          <source>Printing groups of objects</source>
          <target state="translated">객체 그룹 인쇄</target>
        </trans-unit>
        <trans-unit id="81c0c6519860209f67139f0306632ad27465f389" translate="yes" xml:space="preserve">
          <source>Several popular Java libraries offer this feature as well. Some examples include:</source>
          <target state="translated">널리 사용되는 여러 Java 라이브러리도이 기능을 제공합니다. 몇 가지 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9fbbe9b455dc2fb46bfeb23162f873f5608bfeb0" translate="yes" xml:space="preserve">
          <source>So you just need to ensure your list elements define a nice &lt;code&gt;toString()&lt;/code&gt; as discussed above.</source>
          <target state="translated">따라서 위에서 설명한대로 목록 요소가 멋진 &lt;code&gt;toString()&lt;/code&gt; 을 정의하도록해야합니다.</target>
        </trans-unit>
        <trans-unit id="cbd6d9c391131f62d9e8b9ee030c9c448b945089" translate="yes" xml:space="preserve">
          <source>So you've created a nice &lt;code&gt;toString()&lt;/code&gt; for your class. What happens if that class is placed into an array or a collection?</source>
          <target state="translated">따라서 클래스에 대한 멋진 &lt;code&gt;toString()&lt;/code&gt; 을 만들었습니다. 해당 클래스가 배열 또는 컬렉션에 배치되면 어떻게됩니까?</target>
        </trans-unit>
        <trans-unit id="47b5385ba7a7c632504378461d0f352831f0ae16" translate="yes" xml:space="preserve">
          <source>The name of array classes look a little different, which is explained well in the Javadocs for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/lang/Class.html#getName--&quot;&gt;&lt;code&gt;Class.getName()&lt;/code&gt;&lt;/a&gt;. For instance, &lt;code&gt;[Ljava.lang.String&lt;/code&gt; means:</source>
          <target state="translated">배열 클래스의 이름은 약간 다르게 보이며, 이는 Javadocs for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/lang/Class.html#getName--&quot;&gt; &lt;code&gt;Class.getName()&lt;/code&gt; &lt;/a&gt; 에서 잘 설명되어 있습니다. 예를 들어, &lt;code&gt;[Ljava.lang.String&lt;/code&gt; 은 다음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="48852070c9bdc4709f7f4c608480ffb653747f1b" translate="yes" xml:space="preserve">
          <source>There might be other ways as well. Hope this helps. :)</source>
          <target state="translated">다른 방법도있을 수 있습니다. 도움이 되었기를 바랍니다. :)</target>
        </trans-unit>
        <trans-unit id="b4db6d90b12a1703591e24e0164e7aa47f62156f" translate="yes" xml:space="preserve">
          <source>This method is defined in the &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; class (the superclass of all Java objects). The &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--&quot;&gt;&lt;code&gt;Object.toString()&lt;/code&gt;&lt;/a&gt; method returns a fairly ugly looking string, composed of the name of the class, an &lt;code&gt;@&lt;/code&gt; symbol and the &lt;a href=&quot;https://stackoverflow.com/questions/3563847/what-is-the-use-of-hashcode-in-java&quot;&gt;hashcode&lt;/a&gt; of the object in hexadecimal. The code for this looks like:</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; 클래스 (모든 Java 오브젝트의 수퍼 클래스)에 정의되어 있습니다. &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--&quot;&gt; &lt;code&gt;Object.toString()&lt;/code&gt; &lt;/a&gt; 메소드는 클래스 이름, &lt;code&gt;@&lt;/code&gt; 기호 및 오브젝트의 &lt;a href=&quot;https://stackoverflow.com/questions/3563847/what-is-the-use-of-hashcode-in-java&quot;&gt;해시 코드 (&lt;/a&gt; 16 진)로 구성된 상당히보기 흉한 문자열을 리턴합니다. 이에 대한 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8c868814138d5ac92bd1e7ca1926a0874698ea98" translate="yes" xml:space="preserve">
          <source>To print something different when you call &lt;code&gt;System.out.println(myObject)&lt;/code&gt;, you must &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/IandI/override.html&quot;&gt;override&lt;/a&gt; the &lt;code&gt;toString()&lt;/code&gt; method in your own class. Here's a simple example:</source>
          <target state="translated">&lt;code&gt;System.out.println(myObject)&lt;/code&gt; 를 호출 할 때 다른 것을 인쇄하려면 자신의 클래스에서 &lt;code&gt;toString()&lt;/code&gt; 메서드를 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/IandI/override.html&quot;&gt;재정의&lt;/a&gt; 해야합니다. 다음은 간단한 예입니다.</target>
        </trans-unit>
        <trans-unit id="c31e09c8910dd0159dcd66c8348f1c28ddf65108" translate="yes" xml:space="preserve">
          <source>What does this output mean? How do I change this output so it contains the name of my person? And how do I print collections of my objects?</source>
          <target state="translated">이 결과는 무엇을 의미합니까? 본인의 이름이 포함되도록이 출력을 어떻게 변경합니까? 객체 컬렉션을 어떻게 인쇄합니까?</target>
        </trans-unit>
        <trans-unit id="1830245d412826b793d7e01fd0d0998de41ebf80" translate="yes" xml:space="preserve">
          <source>Which would print, e.g., &lt;code&gt;Person[name=Henry]&lt;/code&gt;. That's a really useful piece of data for debugging/testing.</source>
          <target state="translated">예를 들어 &lt;code&gt;Person[name=Henry]&lt;/code&gt; 인쇄됩니다. 디버깅 / 테스트에 유용한 데이터입니다.</target>
        </trans-unit>
        <trans-unit id="c412dec27ca0bb208f6caa6a19cf72975e9eb06e" translate="yes" xml:space="preserve">
          <source>You can override the toString method of a class to get different output. See this example</source>
          <target state="translated">다른 출력을 얻기 위해 클래스의 toString 메소드를 대체 할 수 있습니다. 이 예를 참조하십시오</target>
        </trans-unit>
        <trans-unit id="a7601bce70c633048b623c43329b1aae2834a60f" translate="yes" xml:space="preserve">
          <source>You could print it the java 8 way (using streams and method reference).</source>
          <target state="translated">java 8 방식으로 인쇄 할 수 있습니다 (스트림 및 메소드 참조 사용).</target>
        </trans-unit>
        <trans-unit id="c65d4328676c58aa325f479ae19f3b3c5ff811ed" translate="yes" xml:space="preserve">
          <source>You could print it using Arrays.toString(). This seems the simplest to me.</source>
          <target state="translated">Arrays.toString ()을 사용하여 인쇄 할 수 있습니다. 이것은 나에게 가장 간단한 것 같습니다.</target>
        </trans-unit>
        <trans-unit id="1569f2e36886bc1e9e91cc31375e33a7a7ebc3e1" translate="yes" xml:space="preserve">
          <source>You could write your own function that iterates each person and prints</source>
          <target state="translated">각 사람을 반복하고 인쇄하는 자신의 기능을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73787fbee40ef45d47925910561a6da2b254d93a" translate="yes" xml:space="preserve">
          <source>but I got the following output: &lt;code&gt;com.foo.Person@2f92e0f4&lt;/code&gt;.</source>
          <target state="translated">그러나 &lt;code&gt;com.foo.Person@2f92e0f4&lt;/code&gt; 출력이 있습니다.</target>
        </trans-unit>
        <trans-unit id="48350a49f28b303cf3ee1264402152f509dc9885" translate="yes" xml:space="preserve">
          <source>in your case &lt;code&gt;com.foo.Person@2f92e0f4&lt;/code&gt; is getting printed . Where &lt;code&gt;Person&lt;/code&gt; is a class to which object belongs and &lt;code&gt;2f92e0f4&lt;/code&gt; is hashCode of the Object.</source>
          <target state="translated">귀하의 경우 &lt;code&gt;com.foo.Person@2f92e0f4&lt;/code&gt; 가 인쇄되고 있습니다. 여기서 &lt;code&gt;Person&lt;/code&gt; 은 객체가 속한 클래스이고 &lt;code&gt;2f92e0f4&lt;/code&gt; 는 객체의 hashCode입니다.</target>
        </trans-unit>
        <trans-unit id="de77a9f22365ca2a3414504733f5e52677687353" translate="yes" xml:space="preserve">
          <source>whenever you print any object in Java then toString() will be call. Now it's up to you if you override  toString() then your method will call other Object class method call.</source>
          <target state="translated">Java로 객체를 인쇄 할 때마다 toString ()이 호출됩니다. toString ()을 재정의하면 메서드가 다른 Object 클래스 메서드 호출을 호출합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
