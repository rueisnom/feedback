<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/2973202">
    <body>
      <group id="2973202">
        <trans-unit id="60cd2c0063d50bd89ba1dd10af737c50eb9c7e51" translate="yes" xml:space="preserve">
          <source>...it is likely because there is an issue with your query. The &lt;code&gt;prepare()&lt;/code&gt; or &lt;code&gt;query()&lt;/code&gt; might return &lt;code&gt;FALSE&lt;/code&gt; (a Boolean), but this generic failure message doesn't leave you much in the way of clues. How do you find out what is wrong with your query? You &lt;em&gt;ask&lt;/em&gt;!</source>
          <target state="translated">...这很可能是因为您的查询有问题。 &lt;code&gt;prepare()&lt;/code&gt; 或 &lt;code&gt;query()&lt;/code&gt; 可能返回 &lt;code&gt;FALSE&lt;/code&gt; （布尔值），但是这种通用的失败消息不会给您太多线索。 您如何找出查询的问题？ 你&lt;em&gt;问&lt;/em&gt; ！</target>
        </trans-unit>
        <trans-unit id="b0b20f97fa6c586c20ba9fe1f622e9975f7d62f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://us.php.net/manual/en/function.mysql-query.php&quot;&gt;http://us.php.net/manual/en/function.mysql-query.php&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请访问&lt;a href=&quot;http://us.php.net/manual/en/function.mysql-query.php&quot;&gt;http://us.php.net/manual/zh/function.mysql-query.php&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf4ab74909378466ddcc049d580d452295d16651" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mysql_*&lt;/code&gt; functions should not be used for new code. They are no longer maintained and the community has begun the &lt;a href=&quot;http://news.php.net/php.internals/53799&quot;&gt;deprecation process&lt;/a&gt;.  Instead you should learn about &lt;a href=&quot;http://en.wikipedia.org/wiki/Prepared_statement&quot;&gt;prepared statements&lt;/a&gt; and use either &lt;a href=&quot;http://us2.php.net/pdo&quot;&gt;PDO&lt;/a&gt; or &lt;a href=&quot;http://php.net/mysqli&quot;&gt;MySQLi&lt;/a&gt;. If you can't decide, &lt;a href=&quot;http://php.net/manual/en/mysqlinfo.api.choosing.php&quot;&gt;this article&lt;/a&gt; will help to choose. If you care to learn, here is &lt;a href=&quot;http://wiki.hashphp.org/PDO_Tutorial_for_MySQL_Developers&quot;&gt;good PDO tutorial&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;mysql_*&lt;/code&gt; 函数不应用于新代码。 它们已不再维护，社区已开始&lt;a href=&quot;http://news.php.net/php.internals/53799&quot;&gt;弃用过程&lt;/a&gt; 。 相反，您应该了解&lt;a href=&quot;http://en.wikipedia.org/wiki/Prepared_statement&quot;&gt;准备好的语句，&lt;/a&gt;并使用&lt;a href=&quot;http://us2.php.net/pdo&quot;&gt;PDO&lt;/a&gt;或&lt;a href=&quot;http://php.net/mysqli&quot;&gt;MySQLi&lt;/a&gt; 。 如果您不确定， &lt;a href=&quot;http://php.net/manual/en/mysqlinfo.api.choosing.php&quot;&gt;本文&lt;/a&gt;将帮助选择。 如果您想学习，这里有个&lt;a href=&quot;http://wiki.hashphp.org/PDO_Tutorial_for_MySQL_Developers&quot;&gt;不错的PDO教程&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="962501e29a690be13bec450abba39a780bd0c9ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mysql_fetch_array&lt;/code&gt;/&lt;code&gt;mysqli_fetch_array()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mysql_fetch_array&lt;/code&gt;/&lt;code&gt;mysqli_fetch_array()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a1013897daa90ed339845af920b1f75fa080f9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mysql_fetch_assoc()&lt;/code&gt;/&lt;code&gt;mysqli_fetch_assoc()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mysql_fetch_assoc()&lt;/code&gt;/&lt;code&gt;mysqli_fetch_assoc()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7275ec26f91c732b0e7ff3f8839d09a1be3ea89e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mysql_num_rows()&lt;/code&gt;/&lt;code&gt;mysqli_num_rows()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mysql_num_rows()&lt;/code&gt;/&lt;code&gt;mysqli_num_rows()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="82f3f8378f717c095b266ad810431196922176dd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&quot;Warning: mysqli_fetch_object() expects parameter 1 to be mysqli_result, boolean given&quot;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&amp;ldquo;警告：mysqli_fetch_object（）期望参数1为mysqli_result，给定布尔值&amp;rdquo;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eae5d0c5b9b009a4425efdd8cb029f1ca9fa342d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;oo-style&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;oo-style&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="9846fbeb79f5002bce3cbd92afb2719a8c7706d8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;procedural style&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;程序风格&lt;/em&gt; ：</target>
        </trans-unit>
        <trans-unit id="762422aa84b0e680924037464c594a65e082ab1d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;using a prepared statement:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;使用准备好的语句：&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="94ff077e5f224c2d5373b9c19a72298f036160ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://docs.php.net/book.mysql&quot;&gt;mysql_* extension&lt;/a&gt;&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://docs.php.net/book.mysql&quot;&gt;mysql_ *扩展名&lt;/a&gt;&lt;/strong&gt; ：</target>
        </trans-unit>
        <trans-unit id="f7982b9c4230d1fb86d3db41fad508878f539f2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://docs.php.net/book.mysqli&quot;&gt;mysqli extension&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://docs.php.net/book.mysqli&quot;&gt;mysqli扩展&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="abbac2ed42275961b5ad9539e247373be625ef1b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt; The &lt;a href=&quot;https://stackoverflow.com/questions/12859942/why-shouldnt-i-use-mysql-functions-in-php&quot;&gt;mysql_ functions are deprecated&lt;/a&gt; and have been removed in php version 7.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt; &lt;a href=&quot;https://stackoverflow.com/questions/12859942/why-shouldnt-i-use-mysql-functions-in-php&quot;&gt;mysql_函数已弃用&lt;/a&gt; ，并已在php版本7中删除。</target>
        </trans-unit>
        <trans-unit id="d62049938816282c30b9bf332372b53927fd666b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This error does &lt;em&gt;not&lt;/em&gt; appear if no rows are affected by your query. Only a query with an invalid syntax will generate this error.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt; ：如果您的查询没有行影响，则&lt;em&gt;不会&lt;/em&gt;出现此错误。 只有语法无效的查询才会生成此错误。</target>
        </trans-unit>
        <trans-unit id="d6f9670ef63efca534f989de7ca6323bc0d82cfb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Other tips&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;其他技巧&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0c6c2365cd777cd33d5451ca99333eec8fe50dff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Troubleshooting Steps&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;故障排除步骤&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="62c7c55ecd84dd71d089334d25810e821a5c623a" translate="yes" xml:space="preserve">
          <source>A query may fail for various reasons in which case both the mysql_* and the mysqli extension will return &lt;code&gt;false&lt;/code&gt; from their respective query functions/methods. You need to test for that error condition and handle it accordingly.</source>
          <target state="translated">查询可能由于各种原因而失败，在这种情况下，mysql_ *和mysqli扩展名都将从各自的查询函数/方法中返回 &lt;code&gt;false&lt;/code&gt; 。 您需要测试该错误情况并进行相应处理。</target>
        </trans-unit>
        <trans-unit id="2791154ed5fc21fac7a33c9cf39178a21630e793" translate="yes" xml:space="preserve">
          <source>Also you should check that mysql_query returned a valid result resource, otherwise fetch_*, num_rows, etc will not work on the result as is not a result! IE:</source>
          <target state="translated">另外,你应该检查mysql_query是否返回了一个有效的结果资源,否则fetch_*、num_rows等将无法对结果起作用,因为这不是一个结果!你应该检查mysql_query是否返回了一个有效的结果资源。IE:</target>
        </trans-unit>
        <trans-unit id="3e770271e69b3d5de51d29e7ff9d311adf8a50ef" translate="yes" xml:space="preserve">
          <source>Also, there is no point in using the &lt;code&gt;LIKE&lt;/code&gt; condition if you're not using wildcards: if you need an exact match use &lt;code&gt;=&lt;/code&gt; instead of &lt;code&gt;LIKE&lt;/code&gt;.</source>
          <target state="translated">另外，如果您不使用通配符，则没有必要使用 &lt;code&gt;LIKE&lt;/code&gt; 条件：如果需要完全匹配，请使用 &lt;code&gt;=&lt;/code&gt; 代替 &lt;code&gt;LIKE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b0df28200ef89e65189fca2670512c47d56fde93" translate="yes" xml:space="preserve">
          <source>Always store your query in a variable and then echo that variable. Then pass to &lt;code&gt;mysql_query($query_variable);&lt;/code&gt;.</source>
          <target state="translated">始终将查询存储在变量中，然后回显该变量。 然后传递给 &lt;code&gt;mysql_query($query_variable);&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d22555db65e693d9cbde79c35738c73e279bb680" translate="yes" xml:space="preserve">
          <source>And if there is a user with a unique user name, you can use &quot;=&quot; for that. There is no need to like.</source>
          <target state="translated">而且如果有一个用户的用户名是唯一的,可以用&quot;=&quot;来表示。没有必要喜欢。</target>
        </trans-unit>
        <trans-unit id="69152dc3a5d84208a4420a8ba93733b3d89f30c9" translate="yes" xml:space="preserve">
          <source>Any time you get the...</source>
          <target state="translated">只要你有了.....</target>
        </trans-unit>
        <trans-unit id="e4f0bae4dbd399a8b630df074f498e5c2d8e9845" translate="yes" xml:space="preserve">
          <source>As &lt;a href=&quot;https://stackoverflow.com/a/2973209/1438393&quot;&gt;&lt;em&gt;scompt.com&lt;/em&gt; explained&lt;/a&gt;, the query might fail. Use this code the get the error of the query or the correct result:</source>
          <target state="translated">如&lt;a href=&quot;https://stackoverflow.com/a/2973209/1438393&quot;&gt;&lt;em&gt;scompt.com&lt;/em&gt;所述&lt;/a&gt; ，查询可能会失败。 使用此代码获取查询错误或正确的结果：</target>
        </trans-unit>
        <trans-unit id="1d814ad73afab8e989b973e9d171e1ed63bf2287" translate="yes" xml:space="preserve">
          <source>Best practice is to run the query in sqlyog and then copy it into your page code.</source>
          <target state="translated">最好的做法是在sqlyog中运行查询,然后复制到你的页面代码中。</target>
        </trans-unit>
        <trans-unit id="3ae9f8b9c90b2d6254dec639904663ebc78bb302" translate="yes" xml:space="preserve">
          <source>Call to a member function fetch_array() on boolean / non-object</source>
          <target state="translated">对布尔非对象的成员函数fetch_array()的调用</target>
        </trans-unit>
        <trans-unit id="4b5e84be0e45d1f4cc38276a4ec0e7fdea116bcf" translate="yes" xml:space="preserve">
          <source>Check</source>
          <target state="translated">Check</target>
        </trans-unit>
        <trans-unit id="6f1e16f2724ca1c17215c834bb4a3401f377713e" translate="yes" xml:space="preserve">
          <source>Check &lt;code&gt;$result&lt;/code&gt; before passing it to &lt;code&gt;mysql_fetch_array&lt;/code&gt;. You'll find that it's &lt;code&gt;false&lt;/code&gt; because the query failed. See the &lt;a href=&quot;http://php.net/manual/en/function.mysql-query.php&quot;&gt;&lt;code&gt;mysql_query&lt;/code&gt;&lt;/a&gt; documentation for possible return values and suggestions for how to deal with them.</source>
          <target state="translated">在将 &lt;code&gt;$result&lt;/code&gt; 传递给 &lt;code&gt;mysql_fetch_array&lt;/code&gt; 之前，检查它。 您会发现它是 &lt;code&gt;false&lt;/code&gt; 因为查询失败。 有关可能的返回值和有关如何处理它们的建议，请参见&lt;a href=&quot;http://php.net/manual/en/function.mysql-query.php&quot;&gt; &lt;code&gt;mysql_query&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="d10b3094fbc2d5b04386b38b2ad981405462c834" translate="yes" xml:space="preserve">
          <source>Check your connection first.</source>
          <target state="translated">首先检查你的连接。</target>
        </trans-unit>
        <trans-unit id="7489f979eda78de3debccebff6af1e6e5a66854f" translate="yes" xml:space="preserve">
          <source>Don't use the depricated mysql_* function (depricated in php 5.5 will be removed in php 7). and you can make this with &lt;a href=&quot;http://www.w3schools.com/php/func_mysqli_query.asp&quot;&gt;mysqli&lt;/a&gt; or &lt;a href=&quot;http://php.net/manual/en/book.pdo.php&quot;&gt;pdo&lt;/a&gt;</source>
          <target state="translated">不要使用已描述的mysql_ *函数（在PHP 5.5中描述的将在php 7中删除）。 你可以用&lt;a href=&quot;http://www.w3schools.com/php/func_mysqli_query.asp&quot;&gt;mysqli&lt;/a&gt;或&lt;a href=&quot;http://php.net/manual/en/book.pdo.php&quot;&gt;pdo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0e448b5a8e50100f7897a9da7a64a1e38c3f4d3" translate="yes" xml:space="preserve">
          <source>Error occurred here was due to the use of single quotes (&lt;code&gt;'&lt;/code&gt;). You can put your query like this:</source>
          <target state="translated">出现错误是由于使用单引号（ &lt;code&gt;'&lt;/code&gt; ）。 您可以这样查询：</target>
        </trans-unit>
        <trans-unit id="4b134630a9ce237779bc7219856878ee9c7bcc1b" translate="yes" xml:space="preserve">
          <source>First of all, make sure error reporting is turned on and visible: add these two lines to the top of your file(s) right after your opening &lt;code&gt;&amp;lt;?php&lt;/code&gt; tag:</source>
          <target state="translated">首先，确保错误报告已打开并且可见：在打开 &lt;code&gt;&amp;lt;?php&lt;/code&gt; 标签之后，立即将这两行添加到文件顶部：</target>
        </trans-unit>
        <trans-unit id="ea0acfc9c1bbd67851c88c577931f0dfe450d7eb" translate="yes" xml:space="preserve">
          <source>First, check your connection to the database. Is it connected successfully or not?</source>
          <target state="translated">首先,检查你与数据库的连接。它是否连接成功了?</target>
        </trans-unit>
        <trans-unit id="f06d7f6d66b1f0ae6403c9028a5d4843f33a33eb" translate="yes" xml:space="preserve">
          <source>Go to your &lt;code&gt;config.php&lt;/code&gt;. I had the same problem. Verify the username and the password, and also sql select is the same name as the config.</source>
          <target state="translated">转到您的 &lt;code&gt;config.php&lt;/code&gt; 。 我有同样的问题。 验证用户名和密码，并且sql select与配置名称相同。</target>
        </trans-unit>
        <trans-unit id="983924e6e66ad4687f0e5cde7fabaf219ac3171a" translate="yes" xml:space="preserve">
          <source>Have you opened the connection to the database prior to calling mysql_query function? I don't see that in your code. Use mysql_connect before making the query. See &lt;code&gt;php.net/manual/en/function.mysql-connect.php&lt;/code&gt;</source>
          <target state="translated">在调用mysql_query函数之前，您是否已打开与数据库的连接？ 我在您的代码中看不到。 进行查询之前，请使用mysql_connect。 参见 &lt;code&gt;php.net/manual/en/function.mysql-connect.php&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b1f256c137d7e14d2f3b269082dbb472c73c4fff" translate="yes" xml:space="preserve">
          <source>I am trying to select data from a MySQL table, but I get one of the following error messages:</source>
          <target state="translated">我试图从一个MySQL表中选择数据,但我得到以下错误信息之一。</target>
        </trans-unit>
        <trans-unit id="f8f4fa2383761a1f54269e4a9cfe5aadbb818438" translate="yes" xml:space="preserve">
          <source>I have done this query and am getting no errors like parameter or boolean.</source>
          <target state="translated">我已经做了这个查询,但没有得到任何错误,比如参数或布尔值。</target>
        </trans-unit>
        <trans-unit id="9d843a5517528bb5b8ad3567f2bf20d300076b14" translate="yes" xml:space="preserve">
          <source>If it's done, then after that I have written this code, and it works well:</source>
          <target state="translated">如果成功了,那么在这之后,我写了这段代码,效果还不错。</target>
        </trans-unit>
        <trans-unit id="c7bd071d929401b4aa5940fc252fec6bed0b4106" translate="yes" xml:space="preserve">
          <source>If something is wrong you can spit out an error message which takes you directly to the issue. In this case, there is no &lt;code&gt;foo&lt;/code&gt; column in the table, solving the problem is trivial.</source>
          <target state="translated">如果出现问题，您可以吐出一条错误消息，直接将您带到问题所在。 在这种情况下，表中没有 &lt;code&gt;foo&lt;/code&gt; 列，因此解决该问题是微不足道的。</target>
        </trans-unit>
        <trans-unit id="d4356305b156d2331d98bdef570fb254db68f210" translate="yes" xml:space="preserve">
          <source>If you choose, you can include this checking in a function or class and extend it by handling the errors gracefully as mentioned previously.</source>
          <target state="translated">如果你选择了,你可以把这种检查包含在函数或类中,并通过前面提到的优雅地处理错误来扩展它。</target>
        </trans-unit>
        <trans-unit id="3e3e9e885063de51f930d971182e9fe9b7a2762f" translate="yes" xml:space="preserve">
          <source>If you don't have any MySQL Error appearing while checking, make sure that you properly created your database table. This happened to me. Look for any unwanted commas or quotes.</source>
          <target state="translated">如果你在检查时没有出现任何MySQL错误,请确保你正确地创建了你的数据库表。我就遇到过这样的情况。检查是否有不需要的逗号或引号。</target>
        </trans-unit>
        <trans-unit id="b7181ee30831176965a8ef4ebccc766c9ec0f773" translate="yes" xml:space="preserve">
          <source>If you tried everything here, and it does not work, you might want to check your MySQL database collation. Mine was set to to a Swedish collation. Then I changed it to &lt;code&gt;utf8_general_ci&lt;/code&gt; and everything just clicked into gear.</source>
          <target state="translated">如果您在这里尝试了所有操作，但没有成功，则可能需要检查MySQL数据库排序规则。 我的被​​定为瑞典校对。 然后，我将其更改为 &lt;code&gt;utf8_general_ci&lt;/code&gt; ，一切都随即生效。</target>
        </trans-unit>
        <trans-unit id="8ad18a1f5ff5d108c5e03998fd0aff810664f58f" translate="yes" xml:space="preserve">
          <source>If you're using multiple queries in a script even you're including other pages which contains queries or database connection, then it might be possible that at any place you use db_close() that would close your database connection so make sure you're not doing this mistake in your scripts.</source>
          <target state="translated">如果你在一个脚本中使用了多个查询,甚至包含了包含查询或数据库连接的其他页面,那么可能在任何地方使用db_close()会关闭数据库连接,所以要确保你的脚本中没有出现这种错误。</target>
        </trans-unit>
        <trans-unit id="0f2be721ad2d504c833dc2a411d0a8a7fe0eddad" translate="yes" xml:space="preserve">
          <source>If your error reporting has been set in the php.ini you won't have to worry about this. Just make sure you handle errors gracefully and never reveal the true cause of any issues to your users. Revealing the true cause to the public can be a gold engraved invitation for those wanting to harm your sites and servers. If you do not want to send errors to the browser you can always monitor your web server error logs. Log locations will vary from server to server e.g., on Ubuntu the error log is typically located at &lt;code&gt;/var/log/apache2/error.log&lt;/code&gt;. If you're examining error logs in a Linux environment you can use &lt;code&gt;tail -f /path/to/log&lt;/code&gt; in a console window to see errors as they occur in real-time....or as you make them.</source>
          <target state="translated">如果您在php.ini中设置了错误报告，则无需担心。 只要确保您能正确处理错误，并且永远不要向用户透露任何问题的真正原因。 向公众揭示真正的原因可以是那些想要损害您的站点和服务器的人的金色雕版邀请。 如果您不想将错误发送到浏览器，则可以随时监视Web服务器错误日志。 日志位置因服务器而异，例如，在Ubuntu上，错误日志通常位于 &lt;code&gt;/var/log/apache2/error.log&lt;/code&gt; 。 如果您正在Linux环境中检查错误日志，则可以在控制台窗口中使用 &lt;code&gt;tail -f /path/to/log&lt;/code&gt; 来实时查看错误或创建错误。</target>
        </trans-unit>
        <trans-unit id="5d32774439596cc339f3a4880c0ff9c2aac63249" translate="yes" xml:space="preserve">
          <source>Include a connection string variable before the MySQL query. For example, &lt;code&gt;$connt&lt;/code&gt; in this code:</source>
          <target state="translated">在MySQL查询之前添加连接字符串变量。 例如，以下代码中的 &lt;code&gt;$connt&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="6f41810d82c79b267826c676a0d8b28d55bf312e" translate="yes" xml:space="preserve">
          <source>Instead of using a WHERE query, you can use this ORDER BY query. It's far better than this for use of a query.</source>
          <target state="translated">与其使用WHERE查询,不如使用这个ORDER BY查询。这比这个查询的使用效果要好得多。</target>
        </trans-unit>
        <trans-unit id="f922f620279bbd630e66bf66b98ff2aafc628c96" translate="yes" xml:space="preserve">
          <source>It's using &lt;code&gt;mysql_real_escape_string&lt;/code&gt; for prevention of SQL injection. 
Though we should use MySQLi or PDO_MYSQL extension for upgraded version of PHP (PHP 5.5.0 and later), but for older versions &lt;code&gt;mysql_real_escape_string&lt;/code&gt; will do the trick.</source>
          <target state="translated">它使用 &lt;code&gt;mysql_real_escape_string&lt;/code&gt; 防止SQL注入。 虽然我们应该使用MySQLi或PDO_MYSQL扩展名作为PHP的升级版本（PHP 5.5.0及更高版本），但是对于较旧的版本， &lt;code&gt;mysql_real_escape_string&lt;/code&gt; 可以解决问题。</target>
        </trans-unit>
        <trans-unit id="720b47ccd5b3966898699674cc1d107f91c35684" translate="yes" xml:space="preserve">
          <source>Make Sure You're Not Closing Database By using db_close() Before To
  Running Your Query:</source>
          <target state="translated">在运行你的查询之前,确保你没有通过使用db_close()来关闭数据库。</target>
        </trans-unit>
        <trans-unit id="0c97201ada80540d1b077ee20b4de04fbe5cdfa7" translate="yes" xml:space="preserve">
          <source>Make sure you are escaping your values. Quotes in your query can cause a query to fail (and also leave you  open to SQL injections). Use &lt;a href=&quot;http://php.net/manual/en/function.mysql-real-escape-string.php&quot;&gt;&lt;code&gt;mysql_real_escape_string()&lt;/code&gt;&lt;/a&gt; to escape your input.</source>
          <target state="translated">确保您逃避了自己的价值观。 查询中的引号可能会导致查询失败（也使您不愿接受SQL注入）。 使用&lt;a href=&quot;http://php.net/manual/en/function.mysql-real-escape-string.php&quot;&gt; &lt;code&gt;mysql_real_escape_string()&lt;/code&gt; &lt;/a&gt;转义您的输入。</target>
        </trans-unit>
        <trans-unit id="d6bf934a9068fa27417d1e2a91d51b7f4a58077e" translate="yes" xml:space="preserve">
          <source>Make sure you are not mixing &lt;code&gt;mysqli_*&lt;/code&gt; and &lt;code&gt;mysql_*&lt;/code&gt; functions. They are not the same thing and cannot be used together. (If you're going to choose one or the other stick with &lt;code&gt;mysqli_*&lt;/code&gt;. See below for why.)</source>
          <target state="translated">确保您没有混合使用 &lt;code&gt;mysqli_*&lt;/code&gt; 和 &lt;code&gt;mysql_*&lt;/code&gt; 函数。 它们不是同一件事，不能一起使用。 （如果要使用 &lt;code&gt;mysqli_*&lt;/code&gt; 选择一个或另一个棍子，请参阅下面的原因。）</target>
        </trans-unit>
        <trans-unit id="e888b7d90e14f986bc0946f6589288cafdc6a0e2" translate="yes" xml:space="preserve">
          <source>Make sure you have your development server configured to display all errors. You can do this by placing this at the top of your files or in your config file: &lt;a href=&quot;http://php.net/manual/en/function.error-reporting.php&quot;&gt;&lt;code&gt;error_reporting(-1);&lt;/code&gt;&lt;/a&gt;. If you have any syntax errors this will point them out to you.</source>
          <target state="translated">确保已将开发服务器配置为显示所有错误。 您可以将其放置在文件顶部或配置文件中： &lt;a href=&quot;http://php.net/manual/en/function.error-reporting.php&quot;&gt; &lt;code&gt;error_reporting(-1);&lt;/code&gt; &lt;/a&gt; 。 如果您有任何语法错误，这将为您指出。</target>
        </trans-unit>
        <trans-unit id="40da3b65b7569a7a746b9e3c029bcd4d0f7729a0" translate="yes" xml:space="preserve">
          <source>Make sure your quotes are correct. A missing quote around the query or a value can cause a query to fail.</source>
          <target state="translated">确保你的引号是正确的。查询周围缺少引号或值,会导致查询失败。</target>
        </trans-unit>
        <trans-unit id="f579c523960af1aec824c6fdc57af6d4abd76a1f" translate="yes" xml:space="preserve">
          <source>OR</source>
          <target state="translated">OR</target>
        </trans-unit>
        <trans-unit id="facac660a8b221c5611239673966b0aecba398e9" translate="yes" xml:space="preserve">
          <source>Once done with that, you would get the query printed on the screen. Try this query on your server and see if it produces the desired results. Most of the times the error is in the query. Rest of the code is correct.</source>
          <target state="translated">一旦完成后,你就会在屏幕上打印出查询结果。在你的服务器上尝试一下这个查询,看看它是否会产生想要的结果。大多数情况下,错误是在查询中。其他的代码都是正确的。</target>
        </trans-unit>
        <trans-unit id="c6d9b67c2a43b27544058fdc81d2b701a3b7a428" translate="yes" xml:space="preserve">
          <source>Once you're squared away on standard error reporting adding error checking on your database connection and queries will give you much more detail about the problems going on. Have a look at this example where the column name is incorrect. First, the code which returns the generic fatal error message:</source>
          <target state="translated">一旦你对标准的错误报告有了一定的了解,在数据库连接和查询中添加错误检查将给你提供更多关于问题的细节。请看一下这个例子,其中列名不正确。首先是返回一般致命错误信息的代码。</target>
        </trans-unit>
        <trans-unit id="a545c0bdd394754493c24d86e4ff566bdc149d27" translate="yes" xml:space="preserve">
          <source>Or you want to fetch the &lt;code&gt;LIKE&lt;/code&gt; type of value then you should write:</source>
          <target state="translated">或者您想获取值的 &lt;code&gt;LIKE&lt;/code&gt; 类型，则应编写：</target>
        </trans-unit>
        <trans-unit id="e3a3aff53852073035fff1fa238fd106358170cb" translate="yes" xml:space="preserve">
          <source>Please check once the database selected are not because some times database is not selected</source>
          <target state="translated">请检查一次数据库是否被选中,因为有的时候数据库没有被选中。</target>
        </trans-unit>
        <trans-unit id="0a5585ff4eb18e244009fac94fef618fc076f350" translate="yes" xml:space="preserve">
          <source>Put quotes around &lt;code&gt;$username&lt;/code&gt;. String values, as opposed to numeric values, must be enclosed in quotes.</source>
          <target state="translated">在 &lt;code&gt;$username&lt;/code&gt; 周围加上引号。 与数字值相反，字符串值必须用引号引起来。</target>
        </trans-unit>
        <trans-unit id="9f46ee8f23cfc051b089a4a1ce837447049b3c32" translate="yes" xml:space="preserve">
          <source>Run your query from the MySQL command line or a tool like &lt;a href=&quot;http://www.phpmyadmin.net/home_page/index.php&quot;&gt;phpMyAdmin&lt;/a&gt;. If you have a syntax error in your query this will tell you what it is.</source>
          <target state="translated">从MySQL命令行或类似&lt;a href=&quot;http://www.phpmyadmin.net/home_page/index.php&quot;&gt;phpMyAdmin&lt;/a&gt;的工具运行查询。 如果查询中存在语法错误，这将告诉您它是什么。</target>
        </trans-unit>
        <trans-unit id="3409c76532f2ff56204d0e6566e878683cc674aa" translate="yes" xml:space="preserve">
          <source>Sample usage:</source>
          <target state="translated">样品的使用方法。</target>
        </trans-unit>
        <trans-unit id="604bf18a96602cb8c86a467e19f917c27b6f9ff9" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;http://www.php.net/manual/en/function.mysql-query.php&quot;&gt;documentation for &lt;code&gt;mysql_query()&lt;/code&gt;&lt;/a&gt; for further information.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;http://www.php.net/manual/en/function.mysql-query.php&quot;&gt; &lt;code&gt;mysql_query()&lt;/code&gt; &lt;/a&gt;的文档 。</target>
        </trans-unit>
        <trans-unit id="994a26eabb5eca65108eb1925b565458c41984e3" translate="yes" xml:space="preserve">
          <source>Sometimes suppressing the query as &lt;code&gt;@mysql_query(your query);&lt;/code&gt;</source>
          <target state="translated">有时将查询抑制为 &lt;code&gt;@mysql_query(your query);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84be4f2b6ece1cd6a126c56ea2c0a19cd3a4e8c3" translate="yes" xml:space="preserve">
          <source>The actual error was the single quotes so that the variable &lt;code&gt;$username&lt;/code&gt; was not parsed. But you should really use &lt;code&gt;mysql_real_escape_string($username)&lt;/code&gt; to avoid SQL injections.</source>
          <target state="translated">实际的错误是单引号，因此未解析变量 &lt;code&gt;$username&lt;/code&gt; 。 但是，您实际上应该使用 &lt;code&gt;mysql_real_escape_string($username)&lt;/code&gt; 避免SQL注入。</target>
        </trans-unit>
        <trans-unit id="f781f10f5767579a012c4248d74518297f446a0b" translate="yes" xml:space="preserve">
          <source>The error is generic and not very helpful to you in solving what is going on.</source>
          <target state="translated">这个错误是通用的,对你解题的帮助不大。</target>
        </trans-unit>
        <trans-unit id="51370ec475cb2f5c1d9145a4b95dbc98f77d33ce" translate="yes" xml:space="preserve">
          <source>The problem is single quotes, thus your query fails and returns FALSE and your WHILE loop can't execute. Using % allows you to match any results containing your string (such as SomeText-$username-SomeText).</source>
          <target state="translated">问题是单引号,因此你的查询失败并返回FALSE,你的WHILE循环无法执行。使用%允许你匹配任何包含你的字符串的结果(例如SomeText-$usernam-SomeText)。</target>
        </trans-unit>
        <trans-unit id="ceef2b38da192ecf27ce1c743126fc61abeac89a" translate="yes" xml:space="preserve">
          <source>The same applies to code like</source>
          <target state="translated">同样的道理也适用于像这样的代码</target>
        </trans-unit>
        <trans-unit id="2535521cbb50051ca25b6252ae9c6c044f6dfcb6" translate="yes" xml:space="preserve">
          <source>The variable &lt;strong&gt;$username&lt;/strong&gt; is used inside a single quote string, so its value will not be evaluated inside the query. The query will definitely fail.</source>
          <target state="translated">变量&lt;strong&gt;$ username&lt;/strong&gt;在单引号字符串内使用，因此不会在查询内评估其值。 查询肯定会失败。</target>
        </trans-unit>
        <trans-unit id="367f98d45ef2c1304dec2adfab3f62285f7a4d3f" translate="yes" xml:space="preserve">
          <source>Then if you want to fetch the exact value from the database then you should write:</source>
          <target state="translated">那么如果你想从数据库中获取准确的值,那么你应该写。</target>
        </trans-unit>
        <trans-unit id="8230b61a23d7221e66b39c050489b12b8bc892dc" translate="yes" xml:space="preserve">
          <source>There might be two reasons:</source>
          <target state="translated">可能有两个原因。</target>
        </trans-unit>
        <trans-unit id="09db156997713cc2b25cf576ba7c47abea91e631" translate="yes" xml:space="preserve">
          <source>These examples only illustrate &lt;em&gt;what&lt;/em&gt; should be done (error handling), not how to do it. Production code shouldn't use &lt;a href=&quot;http://www.phpfreaks.com/blog/or-die-must-die&quot;&gt;&lt;code&gt;or die&lt;/code&gt;&lt;/a&gt; when outputting HTML, else it will (at the very least) generate invalid HTML. Also, database error messages shouldn't be displayed to non-admin users, as it &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms995351.aspx#securityerrormessages_topic2&quot;&gt;discloses too much information&lt;/a&gt;.</source>
          <target state="translated">这些示例仅说明&lt;em&gt;了&lt;/em&gt;应该执行的操作（错误处理），而没有说明如何执行。 生产代码在输出HTML时不应使用&lt;a href=&quot;http://www.phpfreaks.com/blog/or-die-must-die&quot;&gt; &lt;code&gt;or die&lt;/code&gt; &lt;/a&gt; ，否则它将（至少）生成无效的HTML。 另外，数据库错误消息不应显示给非管理员用户，因为它会&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms995351.aspx#securityerrormessages_topic2&quot;&gt;泄露太多信息&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ad572ee63cc3db259ce34f7c475d02de69ee7e5" translate="yes" xml:space="preserve">
          <source>Thirdly, the structure of query is prone to &lt;a href=&quot;http://en.wikipedia.org/wiki/SQL_injection&quot;&gt;SQL injection&lt;/a&gt;. You may use prepared statements to avoid this security threat.</source>
          <target state="translated">第三，查询的结构易于进行&lt;a href=&quot;http://en.wikipedia.org/wiki/SQL_injection&quot;&gt;SQL注入&lt;/a&gt; 。 您可以使用准备好的语句来避免这种安全威胁。</target>
        </trans-unit>
        <trans-unit id="1a947d9a93299969c074a9d213903db66091a7f5" translate="yes" xml:space="preserve">
          <source>This error message is displayed when you have an error in your query which caused it to fail. It will manifest itself when using:</source>
          <target state="translated">当您的查询中出现错误导致查询失败时,会显示此错误消息。它将在使用时表现出来。</target>
        </trans-unit>
        <trans-unit id="27b2b9b08e65b861c7aff1eadb1e48d6af33faaa" translate="yes" xml:space="preserve">
          <source>This is my code:</source>
          <target state="translated">这是我的代码。</target>
        </trans-unit>
        <trans-unit id="2feac1279ced9af03e03cca54c8d5ce58408c15a" translate="yes" xml:space="preserve">
          <source>This is simply an answer to your question, you should implement stuff  mentioned in the other posts: error handling, use escape strings (users can type anything into the field, and you MUST make sure it is not arbitrary code), use &lt;a href=&quot;http://www.php.net/manual/en/book.pdo.php&quot;&gt;PDO&lt;/a&gt; instead mysql_connect which is now depricated.</source>
          <target state="translated">这只是对问题的答案，您应该实现其他文章中提到的内容：错误处理，使用转义字符串（用户可以在字段中键入任何内容，并且必须确保它不是任意代码），使用&lt;a href=&quot;http://www.php.net/manual/en/book.pdo.php&quot;&gt;PDO&lt;/a&gt;代替mysql_connect现在已被描述。</target>
        </trans-unit>
        <trans-unit id="12977298fe9942d0f33d43f8bb79a638f872605d" translate="yes" xml:space="preserve">
          <source>This query should work:</source>
          <target state="translated">这个查询应该是可以的。</target>
        </trans-unit>
        <trans-unit id="39557dc9bd3289a290eff98bf8cd009655e7db51" translate="yes" xml:space="preserve">
          <source>Try This</source>
          <target state="translated">试试这个</target>
        </trans-unit>
        <trans-unit id="0a1b191f2cabbbf6dbd2419cef5f27b8bbae7603" translate="yes" xml:space="preserve">
          <source>Try the following code. It may work fine.</source>
          <target state="translated">试试下面的代码。可能会很好用。</target>
        </trans-unit>
        <trans-unit id="e1d6e363029296527229d870feb55515376c21b4" translate="yes" xml:space="preserve">
          <source>Try this code it work fine</source>
          <target state="translated">试试这个代码,效果很好</target>
        </trans-unit>
        <trans-unit id="eda6f1fba4aa1d32a61d5bf61ddcdc1710b30a80" translate="yes" xml:space="preserve">
          <source>Try this, it must be work, otherwise you need to print the error to specify your problem</source>
          <target state="translated">试试这个,一定是可以的,否则需要打印错误说明你的问题。</target>
        </trans-unit>
        <trans-unit id="f7973699f73a2fa212ddd21b1e97c3361f7befd3" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://us3.php.net/manual/en/function.mysql-error.php&quot;&gt;&lt;code&gt;mysql_error()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;mysql_error()&lt;/code&gt; will report any errors MySQL encountered while performing your query.</source>
          <target state="translated">使用&lt;a href=&quot;http://us3.php.net/manual/en/function.mysql-error.php&quot;&gt; &lt;code&gt;mysql_error()&lt;/code&gt; &lt;/a&gt; 。 &lt;code&gt;mysql_error()&lt;/code&gt; 将报告MySQL在执行查询时遇到的任何错误。</target>
        </trans-unit>
        <trans-unit id="37ce059c3868c1164448de047d09102759cf8813" translate="yes" xml:space="preserve">
          <source>Usually an error occurs when your database conectivity fails, so be sure to connect your database or to include the database file.</source>
          <target state="translated">通常情况下,当你的数据库连接失败时,通常会出现错误,所以一定要注意连接你的数据库或包含数据库文件。</target>
        </trans-unit>
        <trans-unit id="bf4409d10356d49c4ec108c40a6f8b3ff59a7229" translate="yes" xml:space="preserve">
          <source>With a couple of more lines of code you can get very detailed information which you can use to solve the issue &lt;em&gt;immediately&lt;/em&gt;. Check the &lt;code&gt;prepare()&lt;/code&gt; statement for truthiness and if it is good you can proceed on to binding and executing.</source>
          <target state="translated">通过使用几行代码，您可以获得非常详细的信息，您可以使用这些信息&lt;em&gt;立即&lt;/em&gt;解决问题。 检查 &lt;code&gt;prepare()&lt;/code&gt; 语句的真实性，如果很好，则可以继续进行绑定和执行。</target>
        </trans-unit>
        <trans-unit id="7c2090a90065a3fd15dfa46ded32b48946f80346" translate="yes" xml:space="preserve">
          <source>You can also check  wether &lt;code&gt;$result&lt;/code&gt; is failing like so, before executing the fetch array</source>
          <target state="translated">您也可以在执行fetch数组之前检查 &lt;code&gt;$result&lt;/code&gt; 是否失败了</target>
        </trans-unit>
        <trans-unit id="6bb2500c19a3da0841bb5f686eebc04368bcf76e" translate="yes" xml:space="preserve">
          <source>You define the string using single quotes and PHP does not parse single quote delimited strings. In order to obtain variable interpolation you will need to use double quotes OR string concatenation (or a combination there of). See &lt;a href=&quot;http://php.net/manual/en/language.types.string.php&quot;&gt;http://php.net/manual/en/language.types.string.php&lt;/a&gt; for more information.</source>
          <target state="translated">您使用单引号定义字符串，而PHP不会解析单引号分隔的字符串。 为了获得变量插值，您将需要使用双引号或字符串串联（或其组合）。 有关更多信息，请参见&lt;a href=&quot;http://php.net/manual/en/language.types.string.php&quot;&gt;http://php.net/manual/en/language.types.string.php&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="7c966ff8226072cdde95949571f56f4971a196bf" translate="yes" xml:space="preserve">
          <source>Your code should be something like this</source>
          <target state="translated">你的代码应该是这样的</target>
        </trans-unit>
        <trans-unit id="dd6720e877ef7adb81c6c3776e06e30d36ebfe35" translate="yes" xml:space="preserve">
          <source>Your query will be:</source>
          <target state="translated">你的查询将:</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="3340b2712e2593c2b74287952f97f54ea8e2a88a" translate="yes" xml:space="preserve">
          <source>assign the post  variable to the variable</source>
          <target state="translated">赋给后置变量</target>
        </trans-unit>
        <trans-unit id="0df3e2aa45e16b349d0e9281baa53ab9aa465afc" translate="yes" xml:space="preserve">
          <source>before MySQL query
and then go to next step</source>
          <target state="translated">MySQL查询前,然后进入下一步</target>
        </trans-unit>
        <trans-unit id="ea3832d41d2c7a64a2905c0602234d2f083f94fa" translate="yes" xml:space="preserve">
          <source>but use of Mysql has depreciated much, use PDO instead.it is simple but very secure</source>
          <target state="translated">但Mysql的使用已经贬值了很多,用PDO来代替。</target>
        </trans-unit>
        <trans-unit id="8f3c7a4e2a2264e2013519f38b861e596d9c0bd9" translate="yes" xml:space="preserve">
          <source>here is the complete select query</source>
          <target state="translated">这里是完整的选择查询</target>
        </trans-unit>
        <trans-unit id="c65828b028225f417543f157ad581c9faff47ef8" translate="yes" xml:space="preserve">
          <source>mysql_fetch_array() expects parameter 1 to be resource, boolean given</source>
          <target state="translated">mysql_fetch_array()期望参数1为资源,boolean给定的参数为</target>
        </trans-unit>
        <trans-unit id="22ba27f4e7607620af3f64818a555cf97dd49fbd" translate="yes" xml:space="preserve">
          <source>mysql_fetch_array()/mysql_fetch_assoc()/mysql_fetch_row()/mysql_num_rows etc… expects parameter 1 to be resource or result</source>
          <target state="translated">mysql_fetch_array()mysql_fetch_assoc()mysql_fetch_row()mysql_num_rows等.........期望参数1为资源或结果</target>
        </trans-unit>
        <trans-unit id="a21b3560535ab24ddefd3af5ad0e45f59b430be5" translate="yes" xml:space="preserve">
          <source>mysqli_fetch_array() expects parameter 1 to be mysqli_result, boolean given</source>
          <target state="translated">mysqli_fetch_array()期望参数1为mysqli_result,boolean given</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="5707ceceaa7c50f483e2161631a4f5462e86044f" translate="yes" xml:space="preserve">
          <source>since $username is a php variable we need to pass it as string to mysqli so since in the query u started with a single quote we will use the double quote, single quote and a fullstop for the concatination purposes (&quot;'.$username.'&quot;) if you started  with a double quote you would then reverse the quotes ('&quot;.$username.&quot;').</source>
          <target state="translated">因为$username是一个php变量,我们需要将其作为字符串传递给mysqli,所以在查询中,我们将使用双引号、单引号和句号来连接(&quot;''.$username.'&quot;),如果你用双引号开始,那么你就会把引号反过来('&quot;&quot;.$username.&quot;')。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
