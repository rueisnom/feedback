<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/292357">
    <body>
      <group id="292357">
        <trans-unit id="9fa5c5c74bcc28f7ff899434be6d1efa62244365" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; The command above is the equivalent to &lt;code&gt;git fetch&lt;/code&gt; and &lt;code&gt;git merge&lt;/code&gt;. In practice, &lt;code&gt;git fetch&lt;/code&gt; maybe more secure because before the merge we can see the changes and decide whether to merge.</source>
          <target state="translated">El comando anterior es el equivalente a &lt;code&gt;git fetch&lt;/code&gt; y &lt;code&gt;git merge&lt;/code&gt; . En la pr&amp;aacute;ctica, &lt;code&gt;git fetch&lt;/code&gt; puede ser m&amp;aacute;s seguro porque antes de la fusi&amp;oacute;n podemos ver los cambios y decidir si combinarlos.</target>
        </trans-unit>
        <trans-unit id="32d8acda1dd72cb4e3ce43954e543e4a3da0d07f" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; The commands above mean that download latest version of the main branch from origin from the remote to origin master branch. And then compares the local master branch and origin master branch. Finally, merge.</source>
          <target state="translated">Los comandos anteriores significan que descargue la &amp;uacute;ltima versi&amp;oacute;n de la rama principal desde el origen desde la rama maestra remota a la original. Y luego compara la rama maestra local y la rama maestra de origen. Finalmente, fusionarse.</target>
        </trans-unit>
        <trans-unit id="48f97e1dc3e1ee5a10ffd97cdf92f6d652c37e14" translate="yes" xml:space="preserve">
          <source>(inside-repo operation) &lt;code&gt;remote/origin/master@local &amp;gt;&amp;gt; master@local&lt;/code&gt;</source>
          <target state="translated">(operaci&amp;oacute;n de repositorio interno) &lt;code&gt;remote/origin/master@local &amp;gt;&amp;gt; master@local&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9fa9cf27a8e4a9c6a7b0b129563967146c119b54" translate="yes" xml:space="preserve">
          <source>(repo to repo operation) &lt;code&gt;master@remote &amp;gt;&amp;gt; remote/origin/master@local&lt;/code&gt;</source>
          <target state="translated">(operaci&amp;oacute;n de repositorio a repositorio) &lt;code&gt;master@remote &amp;gt;&amp;gt; remote/origin/master@local&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5432acc46382d221828b84d9bafa1cde6a4ba9bf" translate="yes" xml:space="preserve">
          <source>1) git pull ( rebase will done automatically):</source>
          <target state="translated">1)tirar del git (el rebase se hará automáticamente):</target>
        </trans-unit>
        <trans-unit id="5a66cdfb6968d483b06aeeba82c490dbf2550d78" translate="yes" xml:space="preserve">
          <source>2) git fetch (need to rebase manually):</source>
          <target state="translated">2)git fetch (necesidad de rebase manual):</target>
        </trans-unit>
        <trans-unit id="0d3bd84264ca1b2c8f691ecc7555b9bee9c17c48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git clone&lt;/code&gt; clones a repo.</source>
          <target state="translated">&lt;code&gt;git clone&lt;/code&gt; clona un repositorio.</target>
        </trans-unit>
        <trans-unit id="5328124c67a16a351ef68bf92f8f591e1c77c394" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git fetch&lt;/code&gt; brings your local copy of the remote repository up to date. For example, if your remote repository is GitHub - you may want to fetch any changes made in the remote repository to your local copy of it the remote repository. This will allow you to perform operations such as compare or merge.</source>
          <target state="translated">&lt;code&gt;git fetch&lt;/code&gt; actualiza su copia local del repositorio remoto. Por ejemplo, si su repositorio remoto es GitHub, es posible que desee recuperar los cambios realizados en el repositorio remoto en su copia local del repositorio remoto. Esto le permitir&amp;aacute; realizar operaciones como comparar o fusionar.</target>
        </trans-unit>
        <trans-unit id="45716d867c97c93141fd633174f0b1e9b5c4f243" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git fetch&lt;/code&gt; is similar to &lt;code&gt;pull&lt;/code&gt; but doesn't merge. i.e. it fetches remote updates (&lt;code&gt;refs&lt;/code&gt; and &lt;code&gt;objects&lt;/code&gt;) but your local stays the same (i.e. &lt;code&gt;origin/master&lt;/code&gt; gets updated but &lt;code&gt;master&lt;/code&gt; stays the same) .</source>
          <target state="translated">&lt;code&gt;git fetch&lt;/code&gt; es similar a &lt;code&gt;pull&lt;/code&gt; pero no se fusiona. es decir, obtiene actualizaciones remotas ( &lt;code&gt;refs&lt;/code&gt; y &lt;code&gt;objects&lt;/code&gt; ) pero su local permanece igual (es decir, el &lt;code&gt;origin/master&lt;/code&gt; se actualiza pero el &lt;code&gt;master&lt;/code&gt; permanece igual).</target>
        </trans-unit>
        <trans-unit id="961114afa0561cd3fae7d954b2c0f6de44de1cd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git fetch&lt;/code&gt; just &quot;downloads&quot; the changes from the remote to your local repository. &lt;code&gt;git pull&lt;/code&gt; downloads the changes and merges them into your current branch. &quot;In its default mode, &lt;code&gt;git pull&lt;/code&gt; is shorthand for &lt;code&gt;git fetch&lt;/code&gt; followed by &lt;code&gt;git merge FETCH_HEAD&lt;/code&gt;.&quot;</source>
          <target state="translated">&lt;code&gt;git fetch&lt;/code&gt; solo &quot;descarga&quot; los cambios del control remoto a su repositorio local. &lt;code&gt;git pull&lt;/code&gt; descarga los cambios y los combina en su rama actual. &quot;En su modo predeterminado, &lt;code&gt;git pull&lt;/code&gt; es la abreviatura de &lt;code&gt;git fetch&lt;/code&gt; seguido de &lt;code&gt;git merge FETCH_HEAD&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="851e511f1a09665acd6e13d5277de7a31c182eb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git fetch&lt;/code&gt; only fetches from the remote branch but it does not merge</source>
          <target state="translated">&lt;code&gt;git fetch&lt;/code&gt; solo busca desde la rama remota pero no se fusiona</target>
        </trans-unit>
        <trans-unit id="9ce94279a6dadc28b7a0ecb75dade36111b4a373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git fetch&lt;/code&gt; pulls down the code from the remote server to your tracking branches in your local repository.  If your remote is named &lt;code&gt;origin&lt;/code&gt; (the default) then these branches will be within &lt;code&gt;origin/&lt;/code&gt;, for example &lt;code&gt;origin/master&lt;/code&gt;, &lt;code&gt;origin/mybranch-123&lt;/code&gt;, etc.  These are not your current branches, they are &lt;em&gt;local&lt;/em&gt; copies of those branches from the server.</source>
          <target state="translated">&lt;code&gt;git fetch&lt;/code&gt; extrae el c&amp;oacute;digo del servidor remoto a sus ramas de seguimiento en su repositorio local. Si su control remoto se llama &lt;code&gt;origin&lt;/code&gt; (el valor predeterminado), estas ramas estar&amp;aacute;n dentro de &lt;code&gt;origin/&lt;/code&gt; , por ejemplo, &lt;code&gt;origin/master&lt;/code&gt; , &lt;code&gt;origin/mybranch-123&lt;/code&gt; , etc. Estas no son sus ramas actuales, son copias &lt;em&gt;locales&lt;/em&gt; de esas ramas del servidor .</target>
        </trans-unit>
        <trans-unit id="80fe18c4b4632e89609525d07897b4e58d6f487a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git fetch&lt;/code&gt; will retrieve remote branches so that you can &lt;code&gt;git diff&lt;/code&gt; or &lt;code&gt;git merge&lt;/code&gt; them with the current branch. &lt;code&gt;git pull&lt;/code&gt; will run fetch on the remote brach tracked by the current branch and then merge the result. You can use &lt;code&gt;git fetch&lt;/code&gt; to see if there are any updates to the remote branch without necessary merging them with your local branch.</source>
          <target state="translated">&lt;code&gt;git fetch&lt;/code&gt; recuperar&amp;aacute; ramas remotas para que pueda &lt;code&gt;git diff&lt;/code&gt; o &lt;code&gt;git merge&lt;/code&gt; con la rama actual. &lt;code&gt;git pull&lt;/code&gt; ejecutar&amp;aacute; fetch en el brach remoto rastreado por la rama actual y luego combinar&amp;aacute; el resultado. Puede usar &lt;code&gt;git fetch&lt;/code&gt; para ver si hay actualizaciones en la rama remota sin necesidad de fusionarlas con su rama local.</target>
        </trans-unit>
        <trans-unit id="e3917ec46fc6b54ce2e06c114c3417324b75b2a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git pull&lt;/code&gt; does a &lt;code&gt;git fetch&lt;/code&gt; but then &lt;strong&gt;also&lt;/strong&gt; merges the code from the tracking branch into your current local version of that branch.  If you're not ready for that changes yet, just &lt;code&gt;git fetch&lt;/code&gt; first.</source>
          <target state="translated">&lt;code&gt;git pull&lt;/code&gt; realiza una &lt;code&gt;git fetch&lt;/code&gt; pero luego &lt;strong&gt;tambi&amp;eacute;n&lt;/strong&gt; combina el c&amp;oacute;digo de la rama de seguimiento en su versi&amp;oacute;n local actual de esa rama. Si a&amp;uacute;n no est&amp;aacute;s listo para esos cambios, solo &lt;code&gt;git fetch&lt;/code&gt; primero.</target>
        </trans-unit>
        <trans-unit id="83dddb338f277eb811f3fa092c792988c4cc0880" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git pull&lt;/code&gt; is &lt;code&gt;git fetch&lt;/code&gt; and &lt;code&gt;git merge&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;git pull&lt;/code&gt; es &lt;code&gt;git fetch&lt;/code&gt; y &lt;code&gt;git merge&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d4710698ef543c45dfe252e6667d70d2de5401d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git pull&lt;/code&gt; on the other hand will bring down the changes in the remote repository to where you keep your own code. Typically, &lt;code&gt;git pull&lt;/code&gt; will do a &lt;code&gt;git fetch&lt;/code&gt; first to bring the local copy of the remote repository up to date, and then it will merge the changes into your own code repository and possibly your working copy.</source>
          <target state="translated">&lt;code&gt;git pull&lt;/code&gt; otro lado, git pull reducir&amp;aacute; los cambios en el repositorio remoto a donde guarda su propio c&amp;oacute;digo. T&amp;iacute;picamente, &lt;code&gt;git pull&lt;/code&gt; har&amp;aacute; una &lt;code&gt;git fetch&lt;/code&gt; primero para actualizar la copia local del repositorio remoto, y luego combinar&amp;aacute; los cambios en su propio repositorio de c&amp;oacute;digo y posiblemente su copia de trabajo.</target>
        </trans-unit>
        <trans-unit id="05df4cf0322b9f13dcf1c7d31f7a70fd4b89be02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git pull&lt;/code&gt; pulls down from a remote and instantly merges.</source>
          <target state="translated">&lt;code&gt;git pull&lt;/code&gt; se despliega desde un control remoto y se fusiona instant&amp;aacute;neamente.</target>
        </trans-unit>
        <trans-unit id="b05d4c0fb36f1dc05bc99a501e4370779ab4899c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git pull&lt;/code&gt; pulls from a remote branch and merges it.</source>
          <target state="translated">&lt;code&gt;git pull&lt;/code&gt; extrae de una rama remota y la fusiona.</target>
        </trans-unit>
        <trans-unit id="39b7979eb508edf5865501e23b13e6d4fb9fdf23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git rebase&lt;/code&gt; saves stuff from your current branch that isn't in the upstream branch to a temporary area. Your branch is now the same as before you started your changes. So, &lt;code&gt;git pull -rebase&lt;/code&gt; will pull down the remote changes, rewind your local branch, replay your changes over the top of your current branch one by one until you're up-to-date.</source>
          <target state="translated">&lt;code&gt;git rebase&lt;/code&gt; guarda cosas de su rama actual que no est&amp;aacute; en la rama aguas arriba en un &amp;aacute;rea temporal. Su rama ahora es la misma que antes de comenzar sus cambios. Por lo tanto, &lt;code&gt;git pull -rebase&lt;/code&gt; desplegar&amp;aacute; los cambios remotos, rebobinar&amp;aacute; su rama local, reproducir&amp;aacute; los cambios en la parte superior de su rama actual, uno por uno, hasta que est&amp;eacute; actualizado.</target>
        </trans-unit>
        <trans-unit id="4eb4921d4ad3bfa6eaa086e761647f7cd8553d22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ls&lt;/code&gt;. This will show the files &amp;amp; directories. Nothing cool, I know.</source>
          <target state="translated">&lt;code&gt;ls&lt;/code&gt; . Esto mostrar&amp;aacute; los archivos y directorios. Nada genial, lo s&amp;eacute;.</target>
        </trans-unit>
        <trans-unit id="ca25b56131b611133fad2dd0dd2d7dfa45581e04" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Any&lt;/em&gt;&lt;code&gt;git fetch&lt;/code&gt; that you do will update items in the &lt;code&gt;/.git/refs/remotes&lt;/code&gt; directory. It won't update anything in the &lt;code&gt;/.git/refs/heads&lt;/code&gt; directory.</source>
          <target state="translated">&lt;em&gt;Cualquier&lt;/em&gt; &lt;code&gt;git fetch&lt;/code&gt; que haga actualizar&amp;aacute; los elementos en el directorio &lt;code&gt;/.git/refs/remotes&lt;/code&gt; . No actualizar&amp;aacute; nada en el directorio &lt;code&gt;/.git/refs/heads&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a0c6624b35faf750cddb1f5c5e4877ebc30bedd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Any&lt;/em&gt;&lt;code&gt;git pull&lt;/code&gt; will first do the &lt;code&gt;git fetch&lt;/code&gt;, update items in the &lt;code&gt;/.git/refs/remotes&lt;/code&gt; directory, then merge with your local and then change the head inside the &lt;code&gt;/.git/refs/heads&lt;/code&gt; directory.</source>
          <target state="translated">&lt;em&gt;Cualquier&lt;/em&gt; &lt;code&gt;git pull&lt;/code&gt; primero har&amp;aacute; la extracci&amp;oacute;n de &lt;code&gt;git fetch&lt;/code&gt; , actualizar&amp;aacute; los elementos en el directorio &lt;code&gt;/.git/refs/remotes&lt;/code&gt; , luego se fusionar&amp;aacute; con su local y luego cambiar&amp;aacute; la cabecera dentro del directorio &lt;code&gt;/.git/refs/heads&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="109168d936934938ef5217cf8bb337f828295f00" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1. Git Fetch-&lt;/strong&gt; This will Download all the changes that have been made to the origin/main branch project which are not present in your local branch. And will wait for the Git Merge command to apply the changes that have been fetched to your Repository or branch.</source>
          <target state="translated">&lt;strong&gt;1. Git Fetch:&lt;/strong&gt; esto descargar&amp;aacute; todos los cambios realizados en el proyecto de sucursal principal / origen que no est&amp;aacute;n presentes en su sucursal local. Y esperar&amp;aacute; a que el comando Git Merge aplique los cambios que se han obtenido en su Repositorio o rama.</target>
        </trans-unit>
        <trans-unit id="c5bed844ff8564d2a50b21639fd4cdf812e9f691" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2. Git Pull-&lt;/strong&gt; This will update your local branch with the origin/main branch i.e. actually what it does is combination of Git Fetch and Git merge one after another.
&lt;em&gt;But this may Cause Conflicts to occur, so it&amp;rsquo;s recommended to use Git Pull with a clean copy.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;2. Git Pull:&lt;/strong&gt; esto actualizar&amp;aacute; su rama local con la rama principal / de origen, es decir, en realidad lo que hace es una combinaci&amp;oacute;n de Git Fetch y Git fusionan una tras otra. &lt;em&gt;Pero esto puede causar conflictos, por lo que se recomienda usar Git Pull con una copia limpia.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7bcbfd0fcb10b979a3e0380830ef7bab24a1e334" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;git fetch&lt;/code&gt;&lt;/strong&gt; is the command that says &quot;bring my local copy of the remote repository up to date.&quot;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;git fetch&lt;/code&gt; &lt;/strong&gt; es el comando que dice &quot;actualizar mi copia local del repositorio remoto&quot;.</target>
        </trans-unit>
        <trans-unit id="8b77648ec75a644255f4be7f9dd3cb5598cd48b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;git pull --rebase&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;git pull --rebase&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e785d95f0de347a936e7fda7fa2fa1299834bbee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;git pull&lt;/code&gt;&lt;/strong&gt; says &quot;bring the changes in the remote repository to where I keep my own code.&quot;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;git pull&lt;/code&gt; &lt;/strong&gt; dice &quot;llevar los cambios en el repositorio remoto a donde guardo mi propio c&amp;oacute;digo&quot;.</target>
        </trans-unit>
        <trans-unit id="5cb04c6741b8235615793d873684b0584c2a364e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Briefly&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Briefly&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8ad1a5b0818ff680ca2bd9af2799ba236a6251f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Feedback&lt;/strong&gt; about the state of your local repo (for example, I use Atlassian's SourceTree, which will give me a bulb indicating if I'm commits ahead or behind compared to the origin. This information can be updated with a GIT FETCH).</source>
          <target state="translated">&lt;strong&gt;Comentarios&lt;/strong&gt; sobre el estado de su repositorio local (por ejemplo, uso el SourceTree de Atlassian, que me dar&amp;aacute; una bombilla que indica si estoy comprometido adelante o atr&amp;aacute;s en comparaci&amp;oacute;n con el origen. Esta informaci&amp;oacute;n se puede actualizar con un GIT FETCH).</target>
        </trans-unit>
        <trans-unit id="f0d9c19e498edc94e1533273e0bc1b76808e356c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Git Fetch&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Git Fetch&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="014ba1d3cfaa64368fbfa37d5c4581345df5482f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Git Merge&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Git Merge&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b07aaa0e6c31283c67bd262473d1a745931ce6c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Git Pull&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Git Pull&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c98fe5935ce702c3af246dd6b37f9baf9e499b48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;More&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;More&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4071b6245e334d89c25a82984cc4f9f97267d26a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OK&lt;/strong&gt;, here are some information about &lt;code&gt;git pull&lt;/code&gt; and &lt;code&gt;git fetch&lt;/code&gt;, so you can understand the actual differences... in few simple words, &lt;strong&gt;fetch&lt;/strong&gt; gets the latest data, but not the code changes and not going to mess with your current  local branch code, but &lt;strong&gt;pull&lt;/strong&gt; get the code changes and merge it your local branch, read on to get more details about each:</source>
          <target state="translated">&lt;strong&gt;OK&lt;/strong&gt; , aqu&amp;iacute; hay informaci&amp;oacute;n sobre &lt;code&gt;git pull&lt;/code&gt; y &lt;code&gt;git fetch&lt;/code&gt; , para que pueda comprender las diferencias reales ... en pocas palabras, &lt;strong&gt;fetch&lt;/strong&gt; obtiene los &amp;uacute;ltimos datos, pero no los cambios en el c&amp;oacute;digo y no va a alterar su c&amp;oacute;digo de sucursal local actual , pero obtenga los cambios de c&amp;oacute;digo y fusione su sucursal local, siga leyendo para obtener m&amp;aacute;s detalles sobre cada uno:</target>
        </trans-unit>
        <trans-unit id="d0ef5f55593d457090b8bc8d4819537557ea3aeb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Performance&lt;/strong&gt; (scroll through all commits and messages without trying to squeeze it through the network)</source>
          <target state="translated">&lt;strong&gt;Rendimiento&lt;/strong&gt; (despl&amp;aacute;cese por todas las confirmaciones y mensajes sin intentar exprimirlo a trav&amp;eacute;s de la red)</target>
        </trans-unit>
        <trans-unit id="3fe24c79e200adaf76506563aeba6a1edd56ce9a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;git pull&lt;/code&gt; is what you would do to bring a local branch up-to-date with its remote version, while also updating your other remote-tracking branches.</source>
          <target state="translated">Un &lt;code&gt;git pull&lt;/code&gt; es lo que har&amp;iacute;a para actualizar una sucursal local con su versi&amp;oacute;n remota, al tiempo que actualiza sus otras sucursales de seguimiento remoto.</target>
        </trans-unit>
        <trans-unit id="6ddcfdae5fbd3c1f28805473e15e964fe04d16f4" translate="yes" xml:space="preserve">
          <source>A simple Graphical Representation for Beginners,</source>
          <target state="translated">Una simple representación gráfica para principiantes,</target>
        </trans-unit>
        <trans-unit id="d52324965c9a6e58203263aaced4ecde8fd71b80" translate="yes" xml:space="preserve">
          <source>A very good related answer can also be found in &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/27554859/where-does-git-fetch-place-itself/27555444#27555444&quot;&gt;Where does 'git fetch' place itself?&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n se puede encontrar una muy buena respuesta relacionada en &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/27554859/where-does-git-fetch-place-itself/27555444#27555444&quot;&gt;&amp;iquest;D&amp;oacute;nde se ubica 'git fetch'?&lt;/a&gt;&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="dc500d77391d46e00d7b5c782a0ab25e90841a89" translate="yes" xml:space="preserve">
          <source>After downloading the updates, let's see the differences:</source>
          <target state="translated">Después de descargar las actualizaciones,veamos las diferencias:</target>
        </trans-unit>
        <trans-unit id="edf3db0309e01a8bcd864ab261176a621ee80299" translate="yes" xml:space="preserve">
          <source>Also, &lt;code&gt;git branch -a&lt;/code&gt; will show you exactly what&amp;rsquo;s going on with all your branches - local and remote.</source>
          <target state="translated">Adem&amp;aacute;s, &lt;code&gt;git branch -a&lt;/code&gt; le mostrar&amp;aacute; exactamente lo que est&amp;aacute; sucediendo con todas sus ramas, locales y remotas.</target>
        </trans-unit>
        <trans-unit id="322c738050a772ccaa4aa6d80ca6d3abb420d9f8" translate="yes" xml:space="preserve">
          <source>Also, look for &quot;Slash notation&quot; from the &lt;a href=&quot;http://www.guyroutledge.co.uk/blog/git-branch-naming-conventions/&quot;&gt;Git branch naming conventions&lt;/a&gt; post. It helps you better understand how Git places things in different directories.</source>
          <target state="translated">Adem&amp;aacute;s, busque &quot;notaci&amp;oacute;n de barra&quot; en la publicaci&amp;oacute;n de &lt;a href=&quot;http://www.guyroutledge.co.uk/blog/git-branch-naming-conventions/&quot;&gt;convenciones de nomenclatura de rama Git&lt;/a&gt; . Le ayuda a comprender mejor c&amp;oacute;mo Git coloca las cosas en diferentes directorios.</target>
        </trans-unit>
        <trans-unit id="f35d76827c3b43e78eae4be69f5a31adb50d9eed" translate="yes" xml:space="preserve">
          <source>Before pushing your new commits to server, try this command and it will automatically sync latest server changes (with a fetch + merge) and will place your commit at the top in git log. No need to worry about manual pull/merge.</source>
          <target state="translated">Antes de enviar tus nuevas confirmaciones al servidor,intenta este comando y automáticamente sincronizará los últimos cambios en el servidor (con un fetch+merge)y colocará tu confirmación en la parte superior del registro de git.No hay necesidad de preocuparse por el pullmerge manual.</target>
        </trans-unit>
        <trans-unit id="5763578555f814c96231de97e5710d397db26670" translate="yes" xml:space="preserve">
          <source>Bonus:</source>
          <target state="translated">Bonus:</target>
        </trans-unit>
        <trans-unit id="c20f309c89ab318ccde630455b592cf9a45e630d" translate="yes" xml:space="preserve">
          <source>But that's outdated and incorrect. It's because git will give you feedback solely based on what it knows. It's oblivious to new commits that it hasn't pulled down yet...</source>
          <target state="translated">Pero eso es anticuado e incorrecto.Es porque el imbécil te dará una respuesta basada únicamente en lo que sabe.No tiene en cuenta los nuevos compromisos que aún no ha retirado...</target>
        </trans-unit>
        <trans-unit id="32155eafe73839b32c5ef69bafc03d8a5d24c849" translate="yes" xml:space="preserve">
          <source>By default, any tag that points into the histories being fetched is
  also fetched; the effect is to fetch tags that point at branches that
  you are interested in. This default behavior can be changed by using
  the --tags or --no-tags options or by configuring
  remote..tagOpt. By using a refspec that fetches tags explicitly,
  you can fetch tags that do not point into branches you are interested
  in as well.</source>
          <target state="translated">Por defecto,cualquier etiqueta que apunte a los historiales que se están recuperando también se recupera;el efecto es recuperar las etiquetas que apuntan a las ramas que te interesan.Este comportamiento por defecto puede ser cambiado usando las opciones --tags o --no-tags o configurando remote..tagOpt.Usando un refspec que obtiene las etiquetas de forma explícita,también puede obtener etiquetas que no apunten a las ramas que le interesan.</target>
        </trans-unit>
        <trans-unit id="80ad85601183f99deb766161879cf4b25512ba7c" translate="yes" xml:space="preserve">
          <source>Copying new commits from remote branch to copy of this remote branch inside local repo.</source>
          <target state="translated">Copiar nuevas confirmaciones de la sucursal remota a la copia de esta sucursal remota dentro de la repo local.</target>
        </trans-unit>
        <trans-unit id="d537056fde34a1ba692f4e1ab02d8e216af2a6ff" translate="yes" xml:space="preserve">
          <source>Default values for  and  are read from the
  &quot;remote&quot; and &quot;merge&quot; configuration for the current branch as set by
  git-branch --track.</source>
          <target state="translated">Los valores por defecto para y se leen de la configuración &quot;remota&quot; y &quot;fusionar&quot; para la rama actual según lo establecido por git-branch --track.</target>
        </trans-unit>
        <trans-unit id="4d979b1dc2b994c6f4248ba041d7bd399d114087" translate="yes" xml:space="preserve">
          <source>Do &lt;code&gt;cd .git&lt;/code&gt;. This will obviously change your directory.</source>
          <target state="translated">Hacer &lt;code&gt;cd .git&lt;/code&gt; . Obviamente, esto cambiar&amp;aacute; su directorio.</target>
        </trans-unit>
        <trans-unit id="b2bcd7ea07d74b72cfb09e7b0c7e43e3d526a0b8" translate="yes" xml:space="preserve">
          <source>Fetch and merge run together often enough that a command that combines the two, pull, was created. Pull does a fetch and then a merge to add the downloaded commits into your local branch.</source>
          <target state="translated">La búsqueda y la fusión corren juntas con suficiente frecuencia como para que se creara un comando que combinara las dos,tirar.Pull hace un &quot;fetch&quot; y luego una fusión para agregar las confirmaciones descargadas en tu rama local.</target>
        </trans-unit>
        <trans-unit id="045598d48170bf40459b9e12cf8ab0455f608647" translate="yes" xml:space="preserve">
          <source>Fetch branches and/or tags (collectively, &quot;refs&quot;) from one or more
  other repositories, along with the objects necessary to complete their
  histories. Remote-tracking branches are updated (see the description
  of  below for ways to control this behavior).</source>
          <target state="translated">Obtener ramas o etiquetas (colectivamente,&quot;refs&quot;)de uno o más depósitos,junto con los objetos necesarios para completar sus historias.Las ramas de rastreo remoto se actualizan (ver la descripción de abajo para las formas de controlar este comportamiento).</target>
        </trans-unit>
        <trans-unit id="d5f7709dcaf8382e5c15601d64bfe814cf8302eb" translate="yes" xml:space="preserve">
          <source>Fetching is what you do when you want to see what everybody &lt;em&gt;else&lt;/em&gt; has
  been working on. It&amp;rsquo;s similar to SVN update in that it lets you see
  how the central history has progressed, but it doesn&amp;rsquo;t force you to
  actually merge the changes into your repository. Git &lt;strong&gt;isolates
  fetched content as a from existing local content&lt;/strong&gt;, it has absolutely
  &lt;strong&gt;no effect on your local development work&lt;/strong&gt;. Fetched content has to be explicitly checked out using the &lt;code&gt;git checkout&lt;/code&gt; command. This makes
  fetching a safe way to review commits before integrating them with
  your local repository.</source>
          <target state="translated">Buscar es lo que haces cuando quieres ver en qu&amp;eacute; han estado trabajando todos los &lt;em&gt;dem&amp;aacute;s&lt;/em&gt; . Es similar a la actualizaci&amp;oacute;n de SVN, ya que le permite ver c&amp;oacute;mo ha progresado el historial central, pero no le obliga a fusionar los cambios en su repositorio. Git &lt;strong&gt;a&amp;iacute;sla el contenido recuperado como contenido local existente&lt;/strong&gt; , no tiene absolutamente &lt;strong&gt;ning&amp;uacute;n efecto en su trabajo de desarrollo local&lt;/strong&gt; . El contenido obtenido debe ser desprotegido expl&amp;iacute;citamente utilizando el comando &lt;code&gt;git checkout&lt;/code&gt; . Esto hace que la b&amp;uacute;squeda sea una forma segura de revisar las confirmaciones antes de integrarlas con su repositorio local.</target>
        </trans-unit>
        <trans-unit id="a094f4d7d41c2764c2f031fe68c19f7697500e17" translate="yes" xml:space="preserve">
          <source>Find details at: &lt;a href=&quot;http://gitolite.com/git-pull--rebase&quot;&gt;http://gitolite.com/git-pull--rebase&lt;/a&gt;</source>
          <target state="translated">Encuentre detalles en: &lt;a href=&quot;http://gitolite.com/git-pull--rebase&quot;&gt;http://gitolite.com/git-pull--rebase&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80a2b7deffd7046895901f3b9b3abd6954530694" translate="yes" xml:space="preserve">
          <source>For more on that read &lt;a href=&quot;https://stackoverflow.com/a/56464547/5175709&quot;&gt;here&lt;/a&gt;</source>
          <target state="translated">Para m&amp;aacute;s informaci&amp;oacute;n sobre eso, lea &lt;a href=&quot;https://stackoverflow.com/a/56464547/5175709&quot;&gt;aqu&amp;iacute;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7f570924ec3541da08b064870361aa101628c76d" translate="yes" xml:space="preserve">
          <source>Fork local branch after last common ancestor and add new commits parallel to commits which are unique to local repository, finalized by merging commit, closing the fork.</source>
          <target state="translated">Bifurcar la rama local después del último ancestro común y añadir nuevas confirmaciones paralelas a las confirmaciones que son únicas para el repositorio local,finalizando con la fusión de las confirmaciones,cerrando la bifurcación.</target>
        </trans-unit>
        <trans-unit id="7d246c9f13b103978089851b748ff4135c885e5a" translate="yes" xml:space="preserve">
          <source>From this awesome &lt;a href=&quot;https://www.atlassian.com/git/tutorials/syncing/git-fetch&quot;&gt;Atlassian tutorial&lt;/a&gt;:</source>
          <target state="translated">De este incre&amp;iacute;ble &lt;a href=&quot;https://www.atlassian.com/git/tutorials/syncing/git-fetch&quot;&gt;tutorial de Atlassian&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="c99c3c8141446381e894a09ddb5848bec036afb2" translate="yes" xml:space="preserve">
          <source>Fun tip:</source>
          <target state="translated">Un consejo divertido:</target>
        </trans-unit>
        <trans-unit id="23c19ce9cb1070c0d02d571d4b284d1506a224fc" translate="yes" xml:space="preserve">
          <source>Git allows chronologically older commits to be applied after newer commits.
Because of this, the act of transferring commits between repositories is split into two steps:</source>
          <target state="translated">Git permite que se apliquen compromisos cronológicamente más antiguos después de los más recientes.Debido a esto,el acto de transferir confirmaciones entre los repositorios se divide en dos pasos:</target>
        </trans-unit>
        <trans-unit id="92421bf16a875aff738a77da925b0817f0f4f80a" translate="yes" xml:space="preserve">
          <source>Git documentation &amp;ndash; &lt;a href=&quot;http://git-scm.com/docs/git-pull&quot;&gt;&lt;strong&gt;git pull&lt;/strong&gt;&lt;/a&gt;:</source>
          <target state="translated">Documentaci&amp;oacute;n de &lt;a href=&quot;http://git-scm.com/docs/git-pull&quot;&gt;&lt;strong&gt;git&lt;/strong&gt;&lt;/a&gt; - &lt;strong&gt;git pull&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="fd037a056ee9a0a3ea17523512de78c92b929629" translate="yes" xml:space="preserve">
          <source>Git obtains the branch of the latest version from the remote to the local using two commands:</source>
          <target state="translated">Git obtiene la rama de la última versión desde el remoto al local usando dos comandos:</target>
        </trans-unit>
        <trans-unit id="033bc0378830e2cbf48b95032ab89e679a08ff04" translate="yes" xml:space="preserve">
          <source>Git was designed to support a more distributed model with no need for a central repository (though you can certainly use one if you like). Also git was designed so that the client and the &quot;server&quot; don't need to be online at the same time. Git was designed so that people on an unreliable link could exchange code via email, even. It is possible to work completely disconnected and burn a CD to exchange code via git.</source>
          <target state="translated">Git fue diseñado para soportar un modelo más distribuido sin necesidad de un repositorio central (aunque ciertamente puedes usar uno si quieres).Además,Git fue diseñado para que el cliente y el &quot;servidor&quot; no tengan que estar en línea al mismo tiempo.Git fue diseñado para que la gente en un enlace poco fiable pudiera intercambiar código por correo electrónico,incluso.Es posible trabajar completamente desconectado y grabar un CD para intercambiar código a través de git.</target>
        </trans-unit>
        <trans-unit id="9ce3409127465b71688de3971e312b082f6febd2" translate="yes" xml:space="preserve">
          <source>Great question. It puts it somewhere isolated from your working copy. But again where? Let's find out.</source>
          <target state="translated">Gran pregunta.Lo pone en algún lugar aislado de tu copia de trabajo.¿Pero de nuevo dónde? Averigüémoslo.</target>
        </trans-unit>
        <trans-unit id="89be5c989f1e0a130d56642cfc8383c35bd91fe4" translate="yes" xml:space="preserve">
          <source>Here is &lt;a href=&quot;http://blog.osteele.com/2008/05/my-git-workflow/&quot;&gt;Oliver Steele's image of how all it all fits together&lt;/a&gt;:</source>
          <target state="translated">Aqu&amp;iacute; est&amp;aacute; &lt;a href=&quot;http://blog.osteele.com/2008/05/my-git-workflow/&quot;&gt;la imagen de Oliver Steele de c&amp;oacute;mo encaja todo&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="ce46f607307f3b5fb06075c64f8ceab45279bbdf" translate="yes" xml:space="preserve">
          <source>Hmmm...so if I'm not updating the working copy with &lt;code&gt;git fetch&lt;/code&gt;, then where am I making changes? Where does Git fetch store the new commits?</source>
          <target state="translated">Hmmm ... as&amp;iacute; que si no estoy actualizando la copia de trabajo con &lt;code&gt;git fetch&lt;/code&gt; , &amp;iquest;d&amp;oacute;nde estoy haciendo los cambios? &amp;iquest;D&amp;oacute;nde almacena Git fetch los nuevos commits?</target>
        </trans-unit>
        <trans-unit id="4ffdb142a405417c93bea94964a1c2c08c551de2" translate="yes" xml:space="preserve">
          <source>I also create the &lt;strong&gt;visual&lt;/strong&gt; below to show you how &lt;code&gt;git fetch&lt;/code&gt; and &lt;code&gt;git pull&lt;/code&gt; working together...</source>
          <target state="translated">Tambi&amp;eacute;n creo el siguiente &lt;strong&gt;visual&lt;/strong&gt; para mostrarle c&amp;oacute;mo &lt;code&gt;git fetch&lt;/code&gt; y &lt;code&gt;git pull&lt;/code&gt; trabajan juntos ...</target>
        </trans-unit>
        <trans-unit id="07e7f9e2e81d32cb59143090feeb634ba03b1447" translate="yes" xml:space="preserve">
          <source>I have struggled with this as well.  In fact I got here with a google search of exactly the same question.  Reading all these answers finally painted a picture in my head and I decided to try to get this down looking at the state of the 2 repositories and 1 sandbox and actions performed over time while watching the version of them.  So here is what I came up with.  Please correct me if I messed up anywhere.</source>
          <target state="translated">Yo también he luchado con esto.De hecho,llegué aquí con una búsqueda en Google de exactamente la misma pregunta.Leyendo todas estas respuestas finalmente pintó un cuadro en mi cabeza y decidí tratar de conseguir esto mirando el estado de los 2 depósitos y 1 caja de arena y las acciones realizadas a lo largo del tiempo mientras veía la versión de ellos.Así que esto es lo que se me ocurrió.Por favor,corrígeme si la he fastidiado en algún sitio.</target>
        </trans-unit>
        <trans-unit id="5b18a32757feffb19b768293f3091d29d27efc26" translate="yes" xml:space="preserve">
          <source>I like to have some visual representation of the situation to grasp these things. Maybe other developers would like to see it too, so here's my addition. I'm not totally sure that it all is correct, so please comment if you find any mistakes.</source>
          <target state="translated">Me gusta tener una representación visual de la situación para comprender estas cosas.Tal vez a otros desarrolladores les gustaría verlo también,así que aquí está mi adición.No estoy totalmente seguro de que todo sea correcto,así que por favor comente si encuentra algún error.</target>
        </trans-unit>
        <trans-unit id="c7489e43761289e99e5d7079c5c877cffd143154" translate="yes" xml:space="preserve">
          <source>I thought I'd update this to show how you'd actually use this in practice.</source>
          <target state="translated">Pensé en actualizar esto para mostrar cómo lo usarías en la práctica.</target>
        </trans-unit>
        <trans-unit id="821bc16e59a841d21fe7b78ce9b776cc6e35c5a5" translate="yes" xml:space="preserve">
          <source>If the remote master was updated you'll get a message like this:</source>
          <target state="translated">Si el maestro remoto fue actualizado,recibirás un mensaje como este:</target>
        </trans-unit>
        <trans-unit id="68a0bdf0085c0a825e5be3356d84929da9c61aa6" translate="yes" xml:space="preserve">
          <source>If there is sufficient interest, I suppose I could update the image to add &lt;code&gt;git clone&lt;/code&gt; and &lt;code&gt;git merge&lt;/code&gt;...</source>
          <target state="translated">Si hay suficiente inter&amp;eacute;s, supongo que podr&amp;iacute;a actualizar la imagen para agregar &lt;code&gt;git clone&lt;/code&gt; y &lt;code&gt;git merge&lt;/code&gt; ...</target>
        </trans-unit>
        <trans-unit id="37251fa3853fcc0155dc49884f3df2ca33eb64f1" translate="yes" xml:space="preserve">
          <source>If you already have a local repository with a remote set up for the desired project, you can grab all branches and tags for the existing remote using git fetch . ... Fetch does not make any changes to local branches, so you will need to merge a remote branch with a paired local branch to incorporate newly fetch changes. &lt;a href=&quot;https://help.github.com/articles/fetching-a-remote&quot;&gt;from github&lt;/a&gt;</source>
          <target state="translated">Si ya tiene un repositorio local con una configuraci&amp;oacute;n remota para el proyecto deseado, puede tomar todas las ramas y etiquetas para el control remoto existente usando git fetch. ... Fetch no realiza ning&amp;uacute;n cambio en las ramas locales, por lo que deber&amp;aacute; fusionar una rama remota con una rama local emparejada para incorporar los cambios de recuperaci&amp;oacute;n nuevos. &lt;a href=&quot;https://help.github.com/articles/fetching-a-remote&quot;&gt;de github&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1839fcd4628fab1f58094381ce5dd1ea362da0d4" translate="yes" xml:space="preserve">
          <source>If you didn't &lt;code&gt;fetch&lt;/code&gt; and just did &lt;code&gt;git checkout master&lt;/code&gt; then your local git wouldn't know that there are 2 commits added. And it would just say:</source>
          <target state="translated">Si no obtuvo y solo hizo &lt;code&gt;git checkout master&lt;/code&gt; , su git local no sabr&amp;iacute;a que hay 2 confirmaciones agregadas. Y solo dir&amp;iacute;a:</target>
        </trans-unit>
        <trans-unit id="2d0b0d005c61420fbde841a3633e861f097628fc" translate="yes" xml:space="preserve">
          <source>If you do a &lt;code&gt;git fetch&lt;/code&gt; it will just fetch all the changes in the remote repository (&lt;a href=&quot;http://en.wikipedia.org/wiki/GitHub&quot;&gt;GitHub&lt;/a&gt;) and move the origin/master pointer to &lt;code&gt;HEAD&lt;/code&gt;. Meanwhile your local branch master will keep pointing to where it has.</source>
          <target state="translated">Si realiza una &lt;code&gt;git fetch&lt;/code&gt; , solo obtendr&amp;aacute; todos los cambios en el repositorio remoto ( &lt;a href=&quot;http://en.wikipedia.org/wiki/GitHub&quot;&gt;GitHub&lt;/a&gt; ) y mover&amp;aacute; el puntero de origen / maestro a &lt;code&gt;HEAD&lt;/code&gt; . Mientras tanto, su maestro de sucursal local seguir&amp;aacute; se&amp;ntilde;alando hacia d&amp;oacute;nde tiene.</target>
        </trans-unit>
        <trans-unit id="900ae93a7953ff6e0661ac7270d3ba457b6be9a1" translate="yes" xml:space="preserve">
          <source>If you do a &lt;code&gt;git pull&lt;/code&gt;, it will do basically fetch (as explained previously) and merge any new changes to your master branch and move the pointer to &lt;code&gt;HEAD&lt;/code&gt;.</source>
          <target state="translated">Si haces un &lt;code&gt;git pull&lt;/code&gt; , b&amp;aacute;sicamente buscar&amp;aacute; (como se explic&amp;oacute; anteriormente) y combinar&amp;aacute; cualquier cambio nuevo en tu rama maestra y mover&amp;aacute; el puntero a &lt;code&gt;HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="616ab200c6c582d81e3203971545ff215f3fd330" translate="yes" xml:space="preserve">
          <source>If you fetched a remote branch e.g. did:</source>
          <target state="translated">Si buscó una sucursal remota,por ejemplo,lo hizo:</target>
        </trans-unit>
        <trans-unit id="162dce9f88948f751bdbb44bdb42efa008599f93" translate="yes" xml:space="preserve">
          <source>If you find yourself in such a situation, you may be tempted to &lt;code&gt;git pull --rebase&lt;/code&gt;. Unless you really, really know what you are doing, I would advise against that. This warning is from the &lt;code&gt;man&lt;/code&gt; page for &lt;code&gt;git-pull&lt;/code&gt;, version &lt;code&gt;2.3.5&lt;/code&gt;:</source>
          <target state="translated">Si se encuentra en tal situaci&amp;oacute;n, puede verse tentado a &lt;code&gt;git pull --rebase&lt;/code&gt; . A menos que realmente sepas lo que est&amp;aacute;s haciendo, te aconsejar&amp;iacute;a que no. Esta advertencia es de la p&amp;aacute;gina del &lt;code&gt;man&lt;/code&gt; ual para &lt;code&gt;git-pull&lt;/code&gt; , versi&amp;oacute;n &lt;code&gt;2.3.5&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="39c38a4d2906ce12baf53b8235be890ca9c9a7e6" translate="yes" xml:space="preserve">
          <source>If you run &lt;code&gt;git pull&lt;/code&gt;, you do not need to merge the data to local. If you run &lt;code&gt;git fetch&lt;/code&gt;, it means you must run &lt;code&gt;git merge&lt;/code&gt; for getting the latest code to your local machine. Otherwise, the local machine code would not be changed without merge.</source>
          <target state="translated">Si ejecuta &lt;code&gt;git pull&lt;/code&gt; , no necesita fusionar los datos a local. Si ejecuta &lt;code&gt;git fetch&lt;/code&gt; , significa que debe ejecutar &lt;code&gt;git merge&lt;/code&gt; para obtener el c&amp;oacute;digo m&amp;aacute;s reciente en su m&amp;aacute;quina local. De lo contrario, el c&amp;oacute;digo de m&amp;aacute;quina local no se cambiar&amp;iacute;a sin combinar.</target>
        </trans-unit>
        <trans-unit id="03ceca134f6aec86433fabaa1e2d3cc64a31e825" translate="yes" xml:space="preserve">
          <source>If you're happy with those updates, then merge:</source>
          <target state="translated">Si estás contento con esas actualizaciones,entonces fusiona:</target>
        </trans-unit>
        <trans-unit id="d8e1f252c15bb34d9198fe09a84d37f5ede75407" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;git&lt;/code&gt; terminology, step 1 is &lt;code&gt;git fetch&lt;/code&gt;, step 2 is &lt;code&gt;git merge&lt;/code&gt; or &lt;code&gt;git rebase&lt;/code&gt;</source>
          <target state="translated">En la terminolog&amp;iacute;a de &lt;code&gt;git&lt;/code&gt; , el paso 1 es &lt;code&gt;git fetch&lt;/code&gt; , el paso 2 es &lt;code&gt;git merge&lt;/code&gt; o &lt;code&gt;git rebase&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a1bf2ca7db0931ab25be8665ddf93ce855960e77" translate="yes" xml:space="preserve">
          <source>In addition to pulling and pushing, &lt;a href=&quot;https://web.archive.org/web/20150321185928/http://mettadore.com/2011/09/07/the-ever-deployable-github-workflow//&quot;&gt;some workflows&lt;/a&gt; involve &lt;code&gt;git rebase&lt;/code&gt;, such as this one, which I paraphrase from the linked article:</source>
          <target state="translated">Adem&amp;aacute;s de tirar y empujar, &lt;a href=&quot;https://web.archive.org/web/20150321185928/http://mettadore.com/2011/09/07/the-ever-deployable-github-workflow//&quot;&gt;algunos flujos de trabajo&lt;/a&gt; implican &lt;code&gt;git rebase&lt;/code&gt; , como este, que parafraseo del art&amp;iacute;culo vinculado:</target>
        </trans-unit>
        <trans-unit id="e40cd3ac234494a2b0cc543cfa7294ec17721210" translate="yes" xml:space="preserve">
          <source>In its default mode, &lt;code&gt;git pull&lt;/code&gt; is shorthand for &lt;code&gt;git fetch&lt;/code&gt; followed by &lt;code&gt;git merge FETCH_HEAD&lt;/code&gt;.</source>
          <target state="translated">En su modo predeterminado, &lt;code&gt;git pull&lt;/code&gt; es la abreviatura de &lt;code&gt;git fetch&lt;/code&gt; seguido de &lt;code&gt;git merge FETCH_HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f7e63b5ace32e92fae98a294e280f5810ef0452" translate="yes" xml:space="preserve">
          <source>In order to support this model git maintains a local repository with your code and also an additional local repository that mirrors the state of the remote repository. By keeping a copy of the remote repository locally, git can figure out the changes needed even when the remote repository is not reachable.  Later when you need to send the changes to someone else, git can transfer them as a set of changes from a point in time known to the remote repository.</source>
          <target state="translated">Para apoyar este modelo,git mantiene un repositorio local con su código y también un repositorio local adicional que refleja el estado del repositorio remoto.Manteniendo una copia del repositorio remoto localmente,git puede averiguar los cambios necesarios incluso cuando el repositorio remoto no esté accesible.Más tarde,cuando necesites enviar los cambios a alguien más,git puede transferirlos como un conjunto de cambios desde un punto de tiempo conocido al repositorio remoto.</target>
        </trans-unit>
        <trans-unit id="6a10a3f8f133b33ad3434b087c4d2fc83bd4dacf" translate="yes" xml:space="preserve">
          <source>In simple terms, if you were about to hop onto a plane without any Internet connection...before departing you could just do &lt;code&gt;git fetch origin &amp;lt;master&amp;gt;&lt;/code&gt;. It would fetch all the changes into your computer, but keep it separate from your local development/workspace.</source>
          <target state="translated">En t&amp;eacute;rminos simples, si estaba a punto de subirse a un avi&amp;oacute;n sin conexi&amp;oacute;n a Internet ... antes de partir, podr&amp;iacute;a hacer &lt;code&gt;git fetch origin &amp;lt;master&amp;gt;&lt;/code&gt; . Buscar&amp;iacute;a todos los cambios en su computadora, pero lo mantendr&amp;iacute;a separado de su espacio de trabajo / desarrollo local.</target>
        </trans-unit>
        <trans-unit id="bf5cfd3242ed6010b1fce1f3aa3393b0bfbfe46f" translate="yes" xml:space="preserve">
          <source>In speaking of pull &amp;amp; fetch in the above answers, I would like to share an interesting trick,</source>
          <target state="translated">Al hablar de pull &amp;amp; fetch en las respuestas anteriores, me gustar&amp;iacute;a compartir un truco interesante,</target>
        </trans-unit>
        <trans-unit id="1440ef61d3b0c55e8100941f7cbf808f72aa0deb" translate="yes" xml:space="preserve">
          <source>In the simplest terms, &lt;code&gt;git pull&lt;/code&gt; does a &lt;code&gt;git fetch&lt;/code&gt; followed by a &lt;code&gt;git merge&lt;/code&gt;.</source>
          <target state="translated">En los t&amp;eacute;rminos m&amp;aacute;s simples, &lt;code&gt;git pull&lt;/code&gt; realiza una &lt;code&gt;git fetch&lt;/code&gt; seguida de una &lt;code&gt;git merge&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9cc282a743496a57679827248fa33a56653ca44" translate="yes" xml:space="preserve">
          <source>In your project directory (i.e., where you do your &lt;code&gt;git&lt;/code&gt; commands) do:</source>
          <target state="translated">En el directorio de su proyecto (es decir, donde realiza sus comandos &lt;code&gt;git&lt;/code&gt; ) haga:</target>
        </trans-unit>
        <trans-unit id="7cd0fe622f2fa6d7cad2751f00997df5822d4092" translate="yes" xml:space="preserve">
          <source>Incorporates changes from a remote repository into the current branch.
  In its default mode, git pull is shorthand for git fetch followed by
  git merge FETCH_HEAD.</source>
          <target state="translated">Incorpora los cambios de un repositorio remoto en la rama actual.En su modo por defecto,git pull es la abreviatura de git fetch seguido de git merge FETCH_HEAD.</target>
        </trans-unit>
        <trans-unit id="ddab7bca2180329029b2fc8fd232bd55f5286278" translate="yes" xml:space="preserve">
          <source>Insert new commits after last common ancestor and reapply commits unique to local repository.</source>
          <target state="translated">Insertar nuevas confirmaciones después del último ancestro común y volver a aplicar confirmaciones únicas al repositorio local.</target>
        </trans-unit>
        <trans-unit id="334fd4cec82b62628bf7b5a408786f48086b0f6c" translate="yes" xml:space="preserve">
          <source>Integrating new commits to local branch</source>
          <target state="translated">Integrar nuevos compromisos a la sucursal local</target>
        </trans-unit>
        <trans-unit id="3947829b4a816ebf3be376780b6f09ea82ecf1d1" translate="yes" xml:space="preserve">
          <source>Is there any way to see the new changes made in remote while working on the branch locally?</source>
          <target state="translated">¿Hay alguna manera de ver los nuevos cambios hechos en remoto mientras se trabaja en la sucursal local?</target>
        </trans-unit>
        <trans-unit id="a90f009f20779ef043c4c2b9008ab20ca6177bb2" translate="yes" xml:space="preserve">
          <source>It affects your local development.</source>
          <target state="translated">Afecta a su desarrollo local.</target>
        </trans-unit>
        <trans-unit id="0f6ad1f6acc6290c33f3a14bd7e9acc98e2ea785" translate="yes" xml:space="preserve">
          <source>It cost me a little bit to understand what was the difference, but this is a simple explanation. &lt;code&gt;master&lt;/code&gt; in your localhost is a branch.</source>
          <target state="translated">Me cost&amp;oacute; un poco entender cu&amp;aacute;l era la diferencia, pero esta es una explicaci&amp;oacute;n simple. &lt;code&gt;master&lt;/code&gt; en su host local es una rama.</target>
        </trans-unit>
        <trans-unit id="c2392417cc36db01685d20f667bd966c4e212a13" translate="yes" xml:space="preserve">
          <source>It doesn't need to be explicitly checked out. Because it implicitly does a &lt;code&gt;git merge&lt;/code&gt;.</source>
          <target state="translated">No necesita ser desprotegido expl&amp;iacute;citamente. Porque impl&amp;iacute;citamente hace una &lt;code&gt;git merge&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f814b6881b236cbf383bb4fc1485995a7d5b1d8e" translate="yes" xml:space="preserve">
          <source>It is important to contrast the design philosophy of git with the philosophy of a more traditional source control tool like SVN.</source>
          <target state="translated">Es importante contrastar la filosofía de diseño de git con la filosofía de una herramienta de control de fuentes más tradicional como el SVN.</target>
        </trans-unit>
        <trans-unit id="b6e153c12288f95caa3ff1df1c789423019cba8b" translate="yes" xml:space="preserve">
          <source>It is very important to note that &lt;code&gt;git pull&lt;/code&gt; will &lt;strong&gt;automatically merge whether you like it or not&lt;/strong&gt;. This could, of course, result in merge conflicts. Let's say your remote is &lt;code&gt;origin&lt;/code&gt; and your branch is &lt;code&gt;master&lt;/code&gt;. If you &lt;code&gt;git diff origin/master&lt;/code&gt; before pulling, you should have some idea of potential merge conflicts and could prepare your local branch accordingly.</source>
          <target state="translated">Es muy importante tener en cuenta que &lt;code&gt;git pull&lt;/code&gt; se &lt;strong&gt;fusionar&amp;aacute; autom&amp;aacute;ticamente, te guste o no&lt;/strong&gt; . Esto podr&amp;iacute;a, por supuesto, dar lugar a conflictos de fusi&amp;oacute;n. Digamos que su control remoto es &lt;code&gt;origin&lt;/code&gt; y su rama es &lt;code&gt;master&lt;/code&gt; . Si &lt;code&gt;git diff origin/master&lt;/code&gt; antes de extraer, debe tener una idea de posibles conflictos de fusi&amp;oacute;n y podr&amp;iacute;a preparar su sucursal local en consecuencia.</target>
        </trans-unit>
        <trans-unit id="98ba93bc2857bab25c62222873602c9b7282098e" translate="yes" xml:space="preserve">
          <source>It will apply the changes from &lt;strong&gt;remote&lt;/strong&gt; to the &lt;strong&gt;current branch&lt;/strong&gt; in local...</source>
          <target state="translated">Aplicar&amp;aacute; los cambios de la &lt;strong&gt;sucursal&lt;/strong&gt; &lt;strong&gt;remota&lt;/strong&gt; a la &lt;strong&gt;actual&lt;/strong&gt; en local ...</target>
        </trans-unit>
        <trans-unit id="2089f5ff30d1f915932544997ca4f31cb09b33ab" translate="yes" xml:space="preserve">
          <source>It will download all &lt;strong&gt;refs&lt;/strong&gt; and &lt;strong&gt;objects&lt;/strong&gt; and any new branches to your local Repository...</source>
          <target state="translated">Descargar&amp;aacute; todas las &lt;strong&gt;referencias&lt;/strong&gt; y &lt;strong&gt;objetos&lt;/strong&gt; y cualquier rama nueva a su repositorio local ...</target>
        </trans-unit>
        <trans-unit id="e3692defe3bb907ef3be26614797cff88e4beadd" translate="yes" xml:space="preserve">
          <source>It's basically NOT safe. It's aggressive.</source>
          <target state="translated">Básicamente NO es seguro.Es agresivo.</target>
        </trans-unit>
        <trans-unit id="0132137c4a419c936535f54c395be92a1c9ac4b0" translate="yes" xml:space="preserve">
          <source>It's interesting to see what's inside all directories, but let's focus on two of them. &lt;code&gt;heads&lt;/code&gt; and &lt;code&gt;remotes&lt;/code&gt;. Use &lt;code&gt;cd&lt;/code&gt; to check inside them too.</source>
          <target state="translated">Es interesante ver qu&amp;eacute; hay dentro de todos los directorios, pero centr&amp;eacute;monos en dos de ellos. &lt;code&gt;heads&lt;/code&gt; y &lt;code&gt;remotes&lt;/code&gt; . Use &lt;code&gt;cd&lt;/code&gt; para verificar dentro de ellos tambi&amp;eacute;n.</target>
        </trans-unit>
        <trans-unit id="5b60559fd8e2d2e8e3af93f7c4acc4a9ffbf1885" translate="yes" xml:space="preserve">
          <source>Just do:</source>
          <target state="translated">Sólo hazlo:</target>
        </trans-unit>
        <trans-unit id="3e188073ca4a40a44969a8d4d808539ffc6cabc5" translate="yes" xml:space="preserve">
          <source>Let's take an example that you are working on a project with your team members. So their will be one main Branch of the project and all the contributors must fork it to their own local repository and then work on this local branch to modify/Add modules then push back to the main branch.</source>
          <target state="translated">Tomemos un ejemplo de que estás trabajando en un proyecto con los miembros de tu equipo.Así que será una rama principal del proyecto y todos los colaboradores deben bifurcarlo a su propio repositorio local y luego trabajar en esta rama local para modificarAñadir módulos y luego volver a la rama principal.</target>
        </trans-unit>
        <trans-unit id="edd3e1409412e78ff0c9eb0c5bb64845286a8e9b" translate="yes" xml:space="preserve">
          <source>More precisely, git pull runs git fetch with the given parameters and
  calls git merge to merge the retrieved branch heads into the current
  branch. With --rebase, it runs git rebase instead of git merge.</source>
          <target state="translated">Más precisamente,git pull ejecuta git fetch con los parámetros dados y llama a git merge para fusionar las cabezas de las ramas recuperadas en la rama actual.Con --rebase,ejecuta git rebase en lugar de git merge.</target>
        </trans-unit>
        <trans-unit id="a2ba818d6ed9eeb75fb53e2017802c7157f637d4" translate="yes" xml:space="preserve">
          <source>Normally &lt;strong&gt;&lt;code&gt;git pull&lt;/code&gt;&lt;/strong&gt; does this by doing a &lt;strong&gt;&lt;code&gt;git fetch&lt;/code&gt;&lt;/strong&gt; to bring the local copy of the remote repository up to date, and then merging the changes into your own code repository and possibly your working copy.</source>
          <target state="translated">Normalmente, &lt;strong&gt; &lt;code&gt;git pull&lt;/code&gt; &lt;/strong&gt; hace esto haciendo una &lt;strong&gt; &lt;code&gt;git fetch&lt;/code&gt; &lt;/strong&gt; para actualizar la copia local del repositorio remoto, y luego fusionando los cambios en su propio repositorio de c&amp;oacute;digo y posiblemente su copia de trabajo.</target>
        </trans-unit>
        <trans-unit id="9c3befe7e22c8667bc957541f49b0ee79970b588" translate="yes" xml:space="preserve">
          <source>Notes:</source>
          <target state="translated">Notes:</target>
        </trans-unit>
        <trans-unit id="31d7bbcc8cef085a2d26f7ea2b1d782e5569ba33" translate="yes" xml:space="preserve">
          <source>Now comes the fun part; do &lt;code&gt;ls&lt;/code&gt;. You will see a list of directories. We're looking for &lt;code&gt;refs&lt;/code&gt;. Do &lt;code&gt;cd refs&lt;/code&gt;.</source>
          <target state="translated">Ahora viene la parte divertida; hacer &lt;code&gt;ls&lt;/code&gt; . Ver&amp;aacute; una lista de directorios. Estamos buscando &lt;code&gt;refs&lt;/code&gt; . Hacer &lt;code&gt;cd refs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fac4b1246d10c655b4749fcfaf3e582fa75b4dbe" translate="yes" xml:space="preserve">
          <source>Now do &lt;code&gt;ls -a&lt;/code&gt;. This will show &lt;a href=&quot;https://unix.stackexchange.com/questions/21778/whats-so-special-about-directories-whose-names-begin-with-a-dot&quot;&gt;dot files&lt;/a&gt;, i.e., files beginning with &lt;code&gt;.&lt;/code&gt; You will then be able to see a directory named: &lt;code&gt;.git&lt;/code&gt;.</source>
          <target state="translated">Ahora haz &lt;code&gt;ls -a&lt;/code&gt; . Esto mostrar&amp;aacute; &lt;a href=&quot;https://unix.stackexchange.com/questions/21778/whats-so-special-about-directories-whose-names-begin-with-a-dot&quot;&gt;archivos de puntos&lt;/a&gt; , es decir, archivos que comienzan con &lt;code&gt;.&lt;/code&gt; Entonces podr&amp;aacute; ver un directorio llamado: &lt;code&gt;.git&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73721acace98d4f33af7597d3ca64e03bf13917d" translate="yes" xml:space="preserve">
          <source>Now, you have started working on the new module (suppose &lt;code&gt;D&lt;/code&gt;)  and when you have completed the &lt;code&gt;D&lt;/code&gt; module you want to push it to the main branch, But meanwhile what happens is that one of your teammates has developed new Module &lt;code&gt;E&lt;/code&gt;, &lt;code&gt;F&lt;/code&gt; and modified &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">Ahora, ha comenzado a trabajar en el nuevo m&amp;oacute;dulo (supongamos que &lt;code&gt;D&lt;/code&gt; ) y cuando haya completado el m&amp;oacute;dulo &lt;code&gt;D&lt;/code&gt; desea llevarlo a la rama principal, pero mientras tanto, lo que sucede es que uno de sus compa&amp;ntilde;eros de equipo ha desarrollado los nuevos m&amp;oacute;dulos &lt;code&gt;E&lt;/code&gt; , &lt;code&gt;F&lt;/code&gt; y &lt;code&gt;C&lt;/code&gt; modificada.</target>
        </trans-unit>
        <trans-unit id="42575cb4c2af958800f2814be4eeb10c93d88c70" translate="yes" xml:space="preserve">
          <source>On step 2: For more on diffs between local and remotes, see: &lt;a href=&quot;https://stackoverflow.com/questions/1800783/compare-local-git-branch-with-remote-branch&quot;&gt;How to compare a local git branch with its remote branch?&lt;/a&gt;</source>
          <target state="translated">En el paso 2: para obtener m&amp;aacute;s informaci&amp;oacute;n sobre las diferencias entre locales y remotos, consulte: &lt;a href=&quot;https://stackoverflow.com/questions/1800783/compare-local-git-branch-with-remote-branch&quot;&gt;&amp;iquest;C&amp;oacute;mo comparar una rama local de git con su rama remota?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ba10303cc8bc29ae6d60675a38b4b1414538852e" translate="yes" xml:space="preserve">
          <source>On step 3: It's probably more accurate (e.g. on a fast changing repo) to do a &lt;code&gt;git rebase origin&lt;/code&gt; here. See &lt;a href=&quot;https://stackoverflow.com/questions/292357/what-is-the-difference-between-git-pull-and-git-fetch#comment16374948_5376768&quot;&gt;@Justin Ohms comment&lt;/a&gt; in another answer.</source>
          <target state="translated">En el paso 3: Probablemente sea m&amp;aacute;s preciso (por ejemplo, en un repositorio que cambia r&amp;aacute;pidamente) hacer un &lt;code&gt;git rebase origin&lt;/code&gt; aqu&amp;iacute;. Vea el &lt;a href=&quot;https://stackoverflow.com/questions/292357/what-is-the-difference-between-git-pull-and-git-fetch#comment16374948_5376768&quot;&gt;comentario de @Justin Ohms&lt;/a&gt; en otra respuesta.</target>
        </trans-unit>
        <trans-unit id="a6ef3be4cb93c5c3a4ab715204573fa2c48f5d9e" translate="yes" xml:space="preserve">
          <source>On the plane, you could make changes to your local workspace and then merge it with what you've fetched and resolve potential merge conflicts all without a connection to the Internet. And unless someone had made &lt;em&gt;new&lt;/em&gt; conflicting changes to the remote repository then once you arrive at the destination you would do &lt;code&gt;git push origin &amp;lt;branch&amp;gt;&lt;/code&gt; and go get your coffee.</source>
          <target state="translated">En el avi&amp;oacute;n, puede realizar cambios en su espacio de trabajo local y luego fusionarlo con lo que ha obtenido y resolver posibles conflictos de fusi&amp;oacute;n, todo sin una conexi&amp;oacute;n a Internet. Y a menos que alguien haya realizado &lt;em&gt;nuevos&lt;/em&gt; cambios conflictivos en el repositorio remoto, una vez que llegue al destino, haga &lt;code&gt;git push origin &amp;lt;branch&amp;gt;&lt;/code&gt; y vaya a buscar su caf&amp;eacute;.</target>
        </trans-unit>
        <trans-unit id="2cd6dde17abde81f58ef155464001d7b9bdcaf42" translate="yes" xml:space="preserve">
          <source>One use case of &lt;code&gt;git fetch&lt;/code&gt; is that the following will tell you any changes in the remote branch since your last pull... so you can check before doing an actual pull, which could change files in your current branch and working copy.</source>
          <target state="translated">Un caso de uso de &lt;code&gt;git fetch&lt;/code&gt; es que lo siguiente le indicar&amp;aacute; cualquier cambio en la rama remota desde su &amp;uacute;ltima extracci&amp;oacute;n ... para que pueda verificar antes de realizar una extracci&amp;oacute;n real, lo que podr&amp;iacute;a cambiar los archivos en su rama actual y copia de trabajo.</target>
        </trans-unit>
        <trans-unit id="75ae635968f07616c5219d6807711a230311e03a" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;http://longair.net/blog/2009/04/16/git-fetch-and-merge/&quot;&gt;http://longair.net/blog/2009/04/16/git-fetch-and-merge/&lt;/a&gt;</source>
          <target state="translated">Ver tambi&amp;eacute;n: &lt;a href=&quot;http://longair.net/blog/2009/04/16/git-fetch-and-merge/&quot;&gt;http://longair.net/blog/2009/04/16/git-fetch-and-merge/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c270f0e70944669bd1713d611d6988fa74b8a56" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;https://git-scm.com/docs/git-diff&quot;&gt;https://git-scm.com/docs/git-diff&lt;/a&gt; regarding double- and triple-dot syntax in the diff command</source>
          <target state="translated">Consulte: &lt;a href=&quot;https://git-scm.com/docs/git-diff&quot;&gt;https://git-scm.com/docs/git-diff con&lt;/a&gt; respecto a la sintaxis de doble y triple punto en el comando diff</target>
        </trans-unit>
        <trans-unit id="687ecbf1bdace513420218a49095b8dd9ec63b90" translate="yes" xml:space="preserve">
          <source>So in the Git Gui, when you do fetch, you have to merge the data. Fetch itself won't make the code changes at your local. You can check that when you update the code by fetching
once fetch and see; the code it won't change. Then you merge... You will see the changed code.</source>
          <target state="translated">Así que en el Git Gui,cuando haces una búsqueda,tienes que fusionar los datos.La búsqueda por sí misma no hará los cambios de código en tu local.Puedes comprobarlo cuando actualices el código,buscando una vez y viendo;el código no cambiará.Entonces fusiona...Verás el código cambiado.</target>
        </trans-unit>
        <trans-unit id="7a5191917188b0327a691ee3901a3d3f280832ae" translate="yes" xml:space="preserve">
          <source>So now You can carefully monitor the files before merging it to your repository. And you can also modify &lt;code&gt;D&lt;/code&gt; if required because of Modified &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">As&amp;iacute; que ahora puede monitorear cuidadosamente los archivos antes de fusionarlos en su repositorio. Y tambi&amp;eacute;n puede modificar &lt;code&gt;D&lt;/code&gt; si es necesario debido a &lt;code&gt;C&lt;/code&gt; modificada.</target>
        </trans-unit>
        <trans-unit id="e7d6ea2d421748f38bd60628b104ed7a0bc8b46c" translate="yes" xml:space="preserve">
          <source>So now what has happened is that your local repository is lacking behind the original progress of the project and thus pushing of your changes to main branch can lead to conflict and may cause your Module &lt;code&gt;D&lt;/code&gt; to malfunction.</source>
          <target state="translated">Entonces, ahora lo que sucedi&amp;oacute; es que su repositorio local carece del progreso original del proyecto y, por lo tanto, empujar sus cambios a la rama principal puede provocar conflictos y puede causar un mal funcionamiento de su M&amp;oacute;dulo &lt;code&gt;D&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e65b7a5f79a6bd25bc0956f180c6958876f5aa3" translate="yes" xml:space="preserve">
          <source>So the difference will be:</source>
          <target state="translated">Así que la diferencia será:</target>
        </trans-unit>
        <trans-unit id="bab2af816ba39862eca729b2dd19f6e2a7dec4aa" translate="yes" xml:space="preserve">
          <source>So, 
&lt;strong&gt;Initial State&lt;/strong&gt; of the two Branches when you forked the main project on your local repository will be like this- (&lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; are Modules already completed of the project)</source>
          <target state="translated">Entonces, el &lt;strong&gt;estado inicial&lt;/strong&gt; de las dos ramas cuando bifurcaste el proyecto principal en tu repositorio local ser&amp;aacute; as&amp;iacute;: ( &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;B&lt;/code&gt; y &lt;code&gt;C&lt;/code&gt; son m&amp;oacute;dulos ya completados del proyecto)</target>
        </trans-unit>
        <trans-unit id="c509dfe0d9ecadd21477e5ea89036c82c3331aa1" translate="yes" xml:space="preserve">
          <source>Some IDEs (e.g. Xcode) are super smart and use the result of a &lt;code&gt;git fetch&lt;/code&gt; and can annotate the lines of code that have been changed in remote branch of your current working branch. If that line has been changed by both local changes and remote branch, then that line gets annotated with red. This isn't a merge conflict. It's a &lt;em&gt;potential&lt;/em&gt; merge conflict. It's a headsup that you can use to resolve the future merge conflict before doing &lt;code&gt;git pull&lt;/code&gt; from the remote branch.</source>
          <target state="translated">Algunos IDE (por ejemplo, Xcode) son s&amp;uacute;per inteligentes y usan el resultado de una &lt;code&gt;git fetch&lt;/code&gt; y pueden anotar las l&amp;iacute;neas de c&amp;oacute;digo que se han cambiado en la rama remota de su rama de trabajo actual. Si esa l&amp;iacute;nea ha sido cambiada tanto por cambios locales como por ramas remotas, entonces esa l&amp;iacute;nea se anota con rojo. Esto no es un conflicto de fusi&amp;oacute;n. Es un &lt;em&gt;posible&lt;/em&gt; conflicto de fusi&amp;oacute;n. Es un aviso que puede usar para resolver el futuro conflicto de fusi&amp;oacute;n antes de hacer &lt;code&gt;git pull&lt;/code&gt; desde la rama remota.</target>
        </trans-unit>
        <trans-unit id="751516aaf56e4a009d9a95473521f2b5e4a91c6b" translate="yes" xml:space="preserve">
          <source>Some major advantages for having a fetched mirror of the remote are:</source>
          <target state="translated">Algunas de las principales ventajas de tener un espejo del mando a distancia son:</target>
        </trans-unit>
        <trans-unit id="f116feeed3453af125cc94651d00b568b3382b73" translate="yes" xml:space="preserve">
          <source>Sometimes a visual representation helps.</source>
          <target state="translated">A veces una representación visual ayuda.</target>
        </trans-unit>
        <trans-unit id="13de40234719d2a5e55c0bc0833165ebde52b54e" translate="yes" xml:space="preserve">
          <source>Subversion was designed and built with a client/server model. There is a single repository that is the server, and several clients can fetch code from the server, work on it, then commit it back to the server. The assumption is that the client can always contact the server when it needs to perform an operation.</source>
          <target state="translated">Subversion fue diseñado y construido con un modelo de cliente-servidor.Hay un único repositorio que es el servidor,y varios clientes pueden obtener el código del servidor,trabajar en él,y luego enviarlo de vuelta al servidor.Se supone que el cliente siempre puede contactar con el servidor cuando necesita realizar una operación.</target>
        </trans-unit>
        <trans-unit id="cbe53d654abeea87d780df2cbb35f48b293f4ab8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;git fetch&lt;/code&gt; command downloads commits, files, and refs from a
  remote repository into your local repository.</source>
          <target state="translated">El comando &lt;code&gt;git fetch&lt;/code&gt; descarga confirmaciones, archivos y referencias de un repositorio remoto en su repositorio local.</target>
        </trans-unit>
        <trans-unit id="306f6d2083f24839bb90d29d30ccdf4811f10c03" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;git pull&lt;/strong&gt; command is actually a &lt;code&gt;shortcut&lt;/code&gt; for &lt;strong&gt;git fetch&lt;/strong&gt; followed by the &lt;strong&gt;git merge&lt;/strong&gt; or the &lt;strong&gt;git rebase&lt;/strong&gt; command depending on your configuration. You can configure your Git repository so that &lt;strong&gt;git pull&lt;/strong&gt; is a fetch followed by a rebase.</source>
          <target state="translated">El comando &lt;strong&gt;git pull&lt;/strong&gt; es en realidad un &lt;code&gt;shortcut&lt;/code&gt; para &lt;strong&gt;git fetch&lt;/strong&gt; seguido de &lt;strong&gt;git merge&lt;/strong&gt; o el comando &lt;strong&gt;git rebase&lt;/strong&gt; seg&amp;uacute;n su configuraci&amp;oacute;n. Puede configurar su repositorio Git para que &lt;strong&gt;git pull&lt;/strong&gt; sea ​​una b&amp;uacute;squeda seguida de una nueva versi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="35c94b59a53fa50c4f5c982a81436bdd806fd908" translate="yes" xml:space="preserve">
          <source>The Difference between &lt;strong&gt;GIT Fetch&lt;/strong&gt; and &lt;strong&gt;GIT Pull&lt;/strong&gt; can be explained with the following scenario:
&lt;em&gt;(Keeping in mind that pictures speak louder than words!, I have provided pictorial representation)&lt;/em&gt;</source>
          <target state="translated">La diferencia entre &lt;strong&gt;GIT Fetch&lt;/strong&gt; y &lt;strong&gt;GIT Pull&lt;/strong&gt; se puede explicar con el siguiente escenario: &lt;em&gt;(&amp;iexcl;Teniendo en cuenta que las im&amp;aacute;genes hablan m&amp;aacute;s que las palabras! He proporcionado una representaci&amp;oacute;n gr&amp;aacute;fica)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="53f91a7e62942e203876dd071752da5d13ec2baf" translate="yes" xml:space="preserve">
          <source>The difference between git pull, git fetch and git clone (and git rebase) - Mike Pearce</source>
          <target state="translated">La diferencia entre git pull,git fetch y git clone (y git rebase)-Mike Pearce</target>
        </trans-unit>
        <trans-unit id="f9d05bd2faa3f1351a188371811118689f8a1ab7" translate="yes" xml:space="preserve">
          <source>The names of refs that are fetched, together with the object names
  they point at, are written to .git/FETCH_HEAD. This information may be
  used by scripts or other git commands, such as git-pull.</source>
          <target state="translated">Los nombres de los árbitros que se traen,junto con los nombres de los objetos a los que apuntan,se escriben en .gitFETCH_HEAD.Esta información puede ser usada por scripts u otros comandos git,como git-pull.</target>
        </trans-unit>
        <trans-unit id="709e4c591c9ada67d70a258e7e4251499d7ac05f" translate="yes" xml:space="preserve">
          <source>The only difference between &lt;code&gt;git pull&lt;/code&gt; and &lt;code&gt;git fetch&lt;/code&gt; is that :</source>
          <target state="translated">La &amp;uacute;nica diferencia entre &lt;code&gt;git pull&lt;/code&gt; y &lt;code&gt;git fetch&lt;/code&gt; es que:</target>
        </trans-unit>
        <trans-unit id="76daff5996e8269d3dd02ea66d3869e8f9168b82" translate="yes" xml:space="preserve">
          <source>The short and easy answer is that &lt;code&gt;git pull&lt;/code&gt; is simply &lt;code&gt;git fetch&lt;/code&gt; followed by &lt;code&gt;git merge&lt;/code&gt;.</source>
          <target state="translated">La respuesta corta y f&amp;aacute;cil es que &lt;code&gt;git pull&lt;/code&gt; es simplemente &lt;code&gt;git fetch&lt;/code&gt; seguido de &lt;code&gt;git merge&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51513cadff1ee5095c8df532e4e37c7e6e2a0fb0" translate="yes" xml:space="preserve">
          <source>The take away is to keep in mind that there are often at least &lt;strong&gt;three copies&lt;/strong&gt; of a project on your workstation. One copy is your own repository with your own commit history. The second copy is your working copy where you are editing and building. The third copy is your local &quot;cached&quot; copy of a remote repository.</source>
          <target state="translated">La conclusi&amp;oacute;n es tener en cuenta que a menudo hay al menos &lt;strong&gt;tres copias&lt;/strong&gt; de un proyecto en su estaci&amp;oacute;n de trabajo. Una copia es su propio repositorio con su propio historial de confirmaci&amp;oacute;n. La segunda copia es su copia de trabajo donde est&amp;aacute; editando y construyendo. La tercera copia es su copia local &quot;en cach&amp;eacute;&quot; de un repositorio remoto.</target>
        </trans-unit>
        <trans-unit id="e6efaade8678bbf79f86466455ab8588f51ff88e" translate="yes" xml:space="preserve">
          <source>The three repos with a fetch:</source>
          <target state="translated">Los tres reposan con una traída:</target>
        </trans-unit>
        <trans-unit id="96306d9d7afb366db3fd8034aacc498461c28b62" translate="yes" xml:space="preserve">
          <source>The three repos with a pull</source>
          <target state="translated">Los tres reposiciones con un tirón</target>
        </trans-unit>
        <trans-unit id="a2f54e0cd5a7689c3b9e61f6dd82d101a2ed1953" translate="yes" xml:space="preserve">
          <source>Then this would go into your remotes directory. It's still not available to your local directory. However, it simplifies your checkout to that remote branch by DWIM (Do what I mean):</source>
          <target state="translated">Entonces esto iría a tu directorio de mandos.Todavía no está disponible en tu directorio local.Sin embargo,simplifica tu salida a esa rama remota por DWIM (Do what I mean):</target>
        </trans-unit>
        <trans-unit id="55a7d6a0db4ebe297f2d43c4272f3114636d3660" translate="yes" xml:space="preserve">
          <source>There are two ways of doing step 2. You can:</source>
          <target state="translated">Hay dos maneras de hacer el paso 2.Tú puedes:</target>
        </trans-unit>
        <trans-unit id="22479224c315e3ac8965a8d67b70537247f8ee88" translate="yes" xml:space="preserve">
          <source>This above command is the most useful command in my git life which saved a lots of time.</source>
          <target state="translated">Este comando es el más útil de mi vida,y me ha ahorrado mucho tiempo.</target>
        </trans-unit>
        <trans-unit id="d295d38717fafe8c79328dc8ddc3deb6761388e0" translate="yes" xml:space="preserve">
          <source>This blog post was useful:</source>
          <target state="translated">Esta entrada del blog fue útil:</target>
        </trans-unit>
        <trans-unit id="0a829a2d422289272de5ab855cb5e9577ba60534" translate="yes" xml:space="preserve">
          <source>This helped me understand why a fetch is pretty important.</source>
          <target state="translated">Esto me ayudó a entender por qué una búsqueda es muy importante.</target>
        </trans-unit>
        <trans-unit id="5d5082feffe5ba17e1674f6f1a13809963795a02" translate="yes" xml:space="preserve">
          <source>This interactive graphical representation is very helpful in understanging git: &lt;a href=&quot;http://ndpsoftware.com/git-cheatsheet.html&quot;&gt;http://ndpsoftware.com/git-cheatsheet.html&lt;/a&gt;</source>
          <target state="translated">Esta representaci&amp;oacute;n gr&amp;aacute;fica interactiva es muy &amp;uacute;til para comprender git: &lt;a href=&quot;http://ndpsoftware.com/git-cheatsheet.html&quot;&gt;http://ndpsoftware.com/git-cheatsheet.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c03e8aa568e39354d4fef8b90850b194009b133d" translate="yes" xml:space="preserve">
          <source>This is a potentially dangerous mode of operation. It rewrites
  history, which does not bode well when you published that history
  already. Do not use this option unless you have read git-rebase(1)
  carefully.</source>
          <target state="translated">Este es un modo de operación potencialmente peligroso.Reescribe la historia,lo que no augura nada bueno cuando ya la has publicado.No uses esta opción a menos que hayas leído cuidadosamente la base de datos git(1).</target>
        </trans-unit>
        <trans-unit id="6d4d3f7cd0b544f4693755b4f708541dcaf1fb43" translate="yes" xml:space="preserve">
          <source>This is an example for a remote repository called &lt;code&gt;origin&lt;/code&gt; and a branch called &lt;code&gt;master&lt;/code&gt; tracking the remote branch &lt;code&gt;origin/master&lt;/code&gt;:</source>
          <target state="translated">Este es un ejemplo para un repositorio remoto llamado &lt;code&gt;origin&lt;/code&gt; y una rama llamada &lt;code&gt;master&lt;/code&gt; que rastrea el &lt;code&gt;origin/master&lt;/code&gt; rama remota:</target>
        </trans-unit>
        <trans-unit id="538591b00fc41f249782e67a77ba3727e103f194" translate="yes" xml:space="preserve">
          <source>This operation never changes any of your own local branches under &lt;code&gt;refs/heads&lt;/code&gt;, and is safe to do without changing your working copy. I have even heard of people running &lt;code&gt;git fetch&lt;/code&gt; periodically in a cron job in the background (although I wouldn't recommend doing this).</source>
          <target state="translated">Esta operaci&amp;oacute;n nunca cambia ninguna de sus sucursales locales bajo &lt;code&gt;refs/heads&lt;/code&gt; , y es segura de hacer sin cambiar su copia de trabajo. Incluso he o&amp;iacute;do hablar de personas que ejecutan &lt;code&gt;git fetch&lt;/code&gt; peri&amp;oacute;dicamente en un trabajo cron en segundo plano (aunque no recomendar&amp;iacute;a hacerlo).</target>
        </trans-unit>
        <trans-unit id="be526cd7b29f7539ab21c31c8d6a75b818a2623e" translate="yes" xml:space="preserve">
          <source>To avoid such issues and to work parallel with the original progress of the project their are Two ways:</source>
          <target state="translated">Para evitar tales cuestiones y trabajar en paralelo con el progreso original del proyecto hay dos maneras:</target>
        </trans-unit>
        <trans-unit id="9cdf14da3817f6628ec1361bea603aa959657fdc" translate="yes" xml:space="preserve">
          <source>To see the actual difference</source>
          <target state="translated">Para ver la diferencia real</target>
        </trans-unit>
        <trans-unit id="e5f1d7a647255e501edc50ce9e6aa00b9187d82d" translate="yes" xml:space="preserve">
          <source>To understand this, you first need to understand that your local git maintains not only your local repository, but it also maintains a local copy of the remote repository.</source>
          <target state="translated">Para entender esto,primero tienes que entender que tu git local no sólo mantiene tu repositorio local,sino que también mantiene una copia local del repositorio remoto.</target>
        </trans-unit>
        <trans-unit id="ffc16a6560848a6d7f779bb9aced6fdf7c588383" translate="yes" xml:space="preserve">
          <source>Trying to be clear and simple.</source>
          <target state="translated">Tratando de ser claro y simple.</target>
        </trans-unit>
        <trans-unit id="52c6c1812015585dc1092393a1f244f60d68c60a" translate="yes" xml:space="preserve">
          <source>UPDATE</source>
          <target state="translated">UPDATE</target>
        </trans-unit>
        <trans-unit id="332032088e32c31d232f02474810d74702bd1d78" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;git fetch&lt;/code&gt; where it only affects your &lt;code&gt;.git/refs/remotes&lt;/code&gt;, git pull will affect both your &lt;code&gt;.git/refs/remotes&lt;/code&gt;&lt;strong&gt;and&lt;/strong&gt;&lt;code&gt;.git/refs/heads/&lt;/code&gt;</source>
          <target state="translated">A diferencia de &lt;code&gt;git fetch&lt;/code&gt; , donde solo afecta a tus &lt;code&gt;.git/refs/remotes&lt;/code&gt; , git pull afectar&amp;aacute; tanto a tus &lt;code&gt;.git/refs/remotes&lt;/code&gt; &lt;strong&gt;como a&lt;/strong&gt; &lt;code&gt;.git/refs/heads/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d13c88e54fc8efb180fc6b3b27421a7fb284a530" translate="yes" xml:space="preserve">
          <source>Update your local repo from the remote (but don't merge):</source>
          <target state="translated">Actualiza tu repo local desde el remoto (pero no te fusiones):</target>
        </trans-unit>
        <trans-unit id="8f6be89be11acde27b9603fe48a423a16c6df9dc" translate="yes" xml:space="preserve">
          <source>We simply say:</source>
          <target state="translated">Simplemente decimos:</target>
        </trans-unit>
        <trans-unit id="ea59d40483dcdff606446c1278db4f30b88410e8" translate="yes" xml:space="preserve">
          <source>What are the differences between &lt;code&gt;git pull&lt;/code&gt; and &lt;code&gt;git fetch&lt;/code&gt;?</source>
          <target state="translated">&amp;iquest;Cu&amp;aacute;les son las diferencias entre &lt;code&gt;git pull&lt;/code&gt; y &lt;code&gt;git fetch&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="f4a4b649621d7f1f61aa3c746531b2f6672b090d" translate="yes" xml:space="preserve">
          <source>What is the difference between 'git pull' and 'git fetch'</source>
          <target state="translated">¿Cuál es la diferencia entre &quot;git pull&quot; y &quot;git fetch&quot;?</target>
        </trans-unit>
        <trans-unit id="bc03f833fd7c52d8a1b370a5afba995d1e6fe5f2" translate="yes" xml:space="preserve">
          <source>What is the difference between &lt;code&gt;git pull&lt;/code&gt; and &lt;code&gt;git fetch&lt;/code&gt;?</source>
          <target state="translated">&amp;iquest;Cu&amp;aacute;l es la diferencia entre &lt;code&gt;git pull&lt;/code&gt; y &lt;code&gt;git fetch&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="b8cf24993f0288b5cc2c819833af209e300e949c" translate="yes" xml:space="preserve">
          <source>When downloading content from a remote repository, &lt;code&gt;git pull&lt;/code&gt; and &lt;code&gt;git fetch&lt;/code&gt; commands are available to accomplish the task. You can consider
  &lt;code&gt;git fetch&lt;/code&gt; the 'safe' version of the two commands. It will download
  the remote content, but not update your local repository's working state,
  leaving your current work intact. &lt;code&gt;git pull&lt;/code&gt; is the more aggressive
  alternative, it will download the remote content for the active local
  branch and immediately execute &lt;code&gt;git merge&lt;/code&gt; to create a merge commit
  for the new remote content. If you have pending changes in progress
  this will cause conflicts and kickoff the merge conflict resolution
  flow.</source>
          <target state="translated">Al descargar contenido de un repositorio remoto, los comandos &lt;code&gt;git pull&lt;/code&gt; y &lt;code&gt;git fetch&lt;/code&gt; est&amp;aacute;n disponibles para realizar la tarea. Puede considerar &lt;code&gt;git fetch&lt;/code&gt; la versi&amp;oacute;n 'segura' de los dos comandos. Descargar&amp;aacute; el contenido remoto, pero no actualizar&amp;aacute; el estado de trabajo de su repositorio local, dejando intacto su trabajo actual. &lt;code&gt;git pull&lt;/code&gt; es la alternativa m&amp;aacute;s agresiva, descargar&amp;aacute; el contenido remoto para la rama local activa e inmediatamente ejecutar&amp;aacute; &lt;code&gt;git merge&lt;/code&gt; para crear una confirmaci&amp;oacute;n de fusi&amp;oacute;n para el nuevo contenido remoto. Si tiene cambios pendientes en progreso, esto provocar&amp;aacute; conflictos y dar&amp;aacute; inicio al flujo de resoluci&amp;oacute;n de conflictos de fusi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="90241fc66dccec755b7f7a1db64386e32d1975aa" translate="yes" xml:space="preserve">
          <source>When no remote is specified, by default the origin remote will be
  used, unless there&amp;rsquo;s an upstream branch configured for the current
  branch.</source>
          <target state="translated">Cuando no se especifica ning&amp;uacute;n control remoto, de manera predeterminada se usar&amp;aacute; el control remoto de origen, a menos que haya una rama ascendente configurada para la rama actual.</target>
        </trans-unit>
        <trans-unit id="f29d1d15a178302f133f949f8f12fc0d9c744655" translate="yes" xml:space="preserve">
          <source>When you &lt;code&gt;fetch&lt;/code&gt;, Git gathers any commits from the target branch that do not exist in your current branch and &lt;strong&gt;stores them in your local repository&lt;/strong&gt;. However, &lt;strong&gt;it does not merge them with your current branch&lt;/strong&gt;. This is particularly useful if you need to keep your repository up to date, but are working on something that might break if you update your files. 
To integrate the commits into your master branch, you use &lt;code&gt;merge&lt;/code&gt;.</source>
          <target state="translated">Cuando &lt;code&gt;fetch&lt;/code&gt; , Git recopila todas las confirmaciones de la rama de destino que no existen en su rama actual y las &lt;strong&gt;almacena en su repositorio local&lt;/strong&gt; . Sin embargo, &lt;strong&gt;no los fusiona con su rama actual&lt;/strong&gt; . Esto es particularmente &amp;uacute;til si necesita mantener actualizado su repositorio, pero est&amp;aacute; trabajando en algo que podr&amp;iacute;a romperse si actualiza sus archivos. Para integrar los commits en su rama maestra, usa &lt;code&gt;merge&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f6b2b23ee6b56459eb33e7764e459ba74679007" translate="yes" xml:space="preserve">
          <source>When you clone a repository you fetch the entire repository to you local host. This means that at that time you have an origin/master pointer to &lt;code&gt;HEAD&lt;/code&gt; and master pointing to the same &lt;code&gt;HEAD&lt;/code&gt;.</source>
          <target state="translated">Cuando clonas un repositorio, obtienes todo el repositorio para tu host local. Esto significa que en ese momento tiene un puntero de origen / maestro a &lt;code&gt;HEAD&lt;/code&gt; y un maestro apuntando a la misma &lt;code&gt;HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ae99188f3ea7c125344fba8a5364f2b481c9542" translate="yes" xml:space="preserve">
          <source>When you use &lt;code&gt;pull&lt;/code&gt;, Git tries to automatically do your work for you. &lt;strong&gt;It is context sensitive&lt;/strong&gt;, so Git will merge any pulled commits into the branch you are currently working in.  &lt;code&gt;pull&lt;/code&gt;&lt;strong&gt;automatically merges the commits without letting you review them first&lt;/strong&gt;. If you don&amp;rsquo;t closely manage your branches, you may run into frequent conflicts.</source>
          <target state="translated">Cuando usas &lt;code&gt;pull&lt;/code&gt; , Git intenta hacer autom&amp;aacute;ticamente tu trabajo por ti. &lt;strong&gt;Es sensible al contexto&lt;/strong&gt; , por lo que Git fusionar&amp;aacute; los commits extra&amp;iacute;dos en la rama en la que est&amp;aacute; trabajando actualmente. &lt;code&gt;pull&lt;/code&gt; &lt;strong&gt;combina autom&amp;aacute;ticamente los commits sin permitirle que los revise primero&lt;/strong&gt; . Si no administra de cerca sus sucursales, puede encontrarse con conflictos frecuentes.</target>
        </trans-unit>
        <trans-unit id="1b93bc9367ac04ff57c408636c95b140163378c0" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;git pull&lt;/code&gt;:</source>
          <target state="translated">Con &lt;code&gt;git pull&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3d83192bff705155cb759eec49d16b9a3257e7a7" translate="yes" xml:space="preserve">
          <source>You can apply changes downloaded through fetch using the merge command. Merge will take the commits retrieved from fetch and try to add them to your local branch. The merge will keep the commit history of your local changes so that when you share your branch with push, Git will know how others can merge your changes.</source>
          <target state="translated">Puedes aplicar los cambios descargados a través de fetch usando el comando de fusión.Merge tomará las confirmaciones recuperadas de fetch e intentará añadirlas a tu rama local.La fusión guardará el historial de confirmaciones de tus cambios locales para que cuando compartas tu rama con push,Git sepa cómo pueden fusionar tus cambios los demás.</target>
        </trans-unit>
        <trans-unit id="77cc8b703c81ec309bd760da433e26013a43df97" translate="yes" xml:space="preserve">
          <source>You can do a &lt;code&gt;git fetch&lt;/code&gt; at any time to update your remote-tracking branches under &lt;code&gt;refs/remotes/&amp;lt;remote&amp;gt;/&lt;/code&gt;.</source>
          <target state="translated">Puede realizar una &lt;code&gt;git fetch&lt;/code&gt; en cualquier momento para actualizar sus ramas de seguimiento remoto en &lt;code&gt;refs/remotes/&amp;lt;remote&amp;gt;/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60d4353b41982c20e79e6a617ebff5018b2b3fef" translate="yes" xml:space="preserve">
          <source>You can fetch from a remote repository, see the differences and then pull or merge.</source>
          <target state="translated">Puedes buscar en un repositorio remoto,ver las diferencias y luego tirar o fusionar.</target>
        </trans-unit>
        <trans-unit id="9648163d36e5997ca061fecd2f767a9206a1de2a" translate="yes" xml:space="preserve">
          <source>You don't get any isolation.</source>
          <target state="translated">No tienes ningún aislamiento.</target>
        </trans-unit>
        <trans-unit id="3af21692e399cffc1b0602029c4c529d3a93c542" translate="yes" xml:space="preserve">
          <source>You download changes to your local branch from origin through fetch. Fetch asks the remote repo for all commits that others have made but you don't have on your local repo. Fetch downloads these commits and adds them to the local repository.</source>
          <target state="translated">Descargas los cambios en tu sucursal local desde el origen hasta la recuperación.Fetch le pide al repo remoto todos los compromisos que otros han hecho pero que tú no tienes en tu repo local.Fetch descarga estas confirmaciones y las añade al repositorio local.</target>
        </trans-unit>
        <trans-unit id="71deaa7d8f575ab7ed6cd6bbf3334a1461005600" translate="yes" xml:space="preserve">
          <source>You would pull if you want the histories merged, you'd fetch if you just 'want the codez' as some person has been tagging some articles around here.</source>
          <target state="translated">Tirarías si quisieras que las historias se fusionaran,irías a buscar si sólo &quot;quieres el codez&quot; ya que alguna persona ha estado etiquetando algunos artículos por aquí.</target>
        </trans-unit>
        <trans-unit id="d0a02932aa479b6aeba6af580331b25d6888fea8" translate="yes" xml:space="preserve">
          <source>and covers &lt;code&gt;git pull&lt;/code&gt;, &lt;code&gt;git fetch&lt;/code&gt;, &lt;code&gt;git clone&lt;/code&gt; and &lt;code&gt;git rebase&lt;/code&gt;.</source>
          <target state="translated">y cubre &lt;code&gt;git pull&lt;/code&gt; , &lt;code&gt;git fetch&lt;/code&gt; , &lt;code&gt;git clone&lt;/code&gt; y &lt;code&gt;git rebase&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="076889ab0a1a5ea289dc99e4db7f5646876c95f3" translate="yes" xml:space="preserve">
          <source>but in ,</source>
          <target state="translated">pero en..,</target>
        </trans-unit>
        <trans-unit id="338b9d34cef0cc10394bbeb555b6c8652b8ad965" translate="yes" xml:space="preserve">
          <source>eg: i am going to fetch from server master and rebase it in my local master.</source>
          <target state="translated">Voy a buscar en el servidor principal y lo voy a rebasar en mi servidor principal local.</target>
        </trans-unit>
        <trans-unit id="7652ed4e9782162856d4648e8895b3387d9f68e6" translate="yes" xml:space="preserve">
          <source>git fetch</source>
          <target state="translated">git fetch</target>
        </trans-unit>
        <trans-unit id="a1e51d9e97a083cd4a749ceb74184d3a801ebb5d" translate="yes" xml:space="preserve">
          <source>git fetch can fetch from either a single named repository or URL, or
  from several repositories at once if  is given and there is a
  remotes. entry in the configuration file. (See git-config&lt;a href=&quot;https://i.stack.imgur.com/nWYnQ.png&quot;&gt;1&lt;/a&gt;).</source>
          <target state="translated">git fetch puede buscar desde un &amp;uacute;nico repositorio con nombre o URL, o desde varios repositorios a la vez si se proporciona y hay un control remoto. entrada en el archivo de configuraci&amp;oacute;n. (Ver git-config &lt;a href=&quot;https://i.stack.imgur.com/nWYnQ.png&quot;&gt;1&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a6378e53c49a3c9ce8158f63060def312e889cf2" translate="yes" xml:space="preserve">
          <source>git fetch does not changes to local branches.</source>
          <target state="translated">git fetch no cambia a las ramas locales.</target>
        </trans-unit>
        <trans-unit id="5b19fd74d867e845324d1cc6667583a990caa8b8" translate="yes" xml:space="preserve">
          <source>git fetch: Git is going to get the latest version from remote to local,  but it do not automatically merge.
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&lt;code&gt;git fetch origin master&lt;/code&gt;&lt;code&gt;git log -p master..origin/master&lt;/code&gt;&lt;code&gt;git merge origin/master&lt;/code&gt;</source>
          <target state="translated">git fetch: Git obtendr&amp;aacute; la &amp;uacute;ltima versi&amp;oacute;n de remota a local, pero no se fusionar&amp;aacute; autom&amp;aacute;ticamente. &lt;code&gt;git fetch origin master&lt;/code&gt; &lt;code&gt;git log -p master..origin/master&lt;/code&gt; &lt;code&gt;git merge origin/master&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d065adf8851333810ea91f5f69a1ea63158b8826" translate="yes" xml:space="preserve">
          <source>git pull</source>
          <target state="translated">git pull</target>
        </trans-unit>
        <trans-unit id="7211a49be2c5e530c61f049fc400dec211114d60" translate="yes" xml:space="preserve">
          <source>git pull == ( git fetch + git merge)</source>
          <target state="translated">git pull ==(git fetch+git merge)</target>
        </trans-unit>
        <trans-unit id="98d57b348afc86b663f71eb34f50f6b73b3d02af" translate="yes" xml:space="preserve">
          <source>git pull: Git is going to get the latest version from the remote and merge into the local.</source>
          <target state="translated">...que se tire de la cabeza:Git va a obtener la última versión del control remoto y se fusionará con el local.</target>
        </trans-unit>
        <trans-unit id="4c01625fa313444b2582a58311703d8668a6b3bb" translate="yes" xml:space="preserve">
          <source>here &lt;strong&gt;origin&lt;/strong&gt; is your remote repo &lt;strong&gt;master&lt;/strong&gt; is your branch</source>
          <target state="translated">aqu&amp;iacute; el &lt;strong&gt;origen&lt;/strong&gt; es tu &lt;strong&gt;maestro de&lt;/strong&gt; repositorio remoto es tu sucursal</target>
        </trans-unit>
        <trans-unit id="f3293b87bc9bb8812771c354181c62eef7b1e271" translate="yes" xml:space="preserve">
          <source>here,</source>
          <target state="translated">here,</target>
        </trans-unit>
        <trans-unit id="3aa005c86b2e48f70aa9c07d41965bad325d9628" translate="yes" xml:space="preserve">
          <source>i.e. git pull = git fetch + git merge ...</source>
          <target state="translated">es decir,git pull=git fetch+git merge ...</target>
        </trans-unit>
        <trans-unit id="8abe66c44f7b8696d85a5e265ed9f37769e3e453" translate="yes" xml:space="preserve">
          <source>it will fetch server changes from origin. and it will be in your local until you rebase it on your own. we need to fix conflicts manually by checking codes.</source>
          <target state="translated">...y estará en tu local hasta que lo rebases por tu cuenta.Necesitamos arreglar los conflictos manualmente revisando los códigos.</target>
        </trans-unit>
        <trans-unit id="77e703902168624324db616363fbd43a7158e819" translate="yes" xml:space="preserve">
          <source>should be the name of a remote repository as passed to
  git-fetch&lt;a href=&quot;https://i.stack.imgur.com/nWYnQ.png&quot;&gt;1&lt;/a&gt;.  can name an arbitrary remote ref (for example,
  the name of a tag) or even a collection of refs with corresponding
  remote-tracking branches (e.g., refs/heads/&lt;em&gt;:refs/remotes/origin/&lt;/em&gt;),
  but usually it is the name of a branch in the remote repository.</source>
          <target state="translated">debe ser el nombre de un repositorio remoto como se pasa a git-fetch &lt;a href=&quot;https://i.stack.imgur.com/nWYnQ.png&quot;&gt;1&lt;/a&gt; . puede nombrar una referencia remota arbitraria (por ejemplo, el nombre de una etiqueta) o incluso una colecci&amp;oacute;n de referencias con las correspondientes ramas de seguimiento remoto (por ejemplo, refs / heads / &lt;em&gt;: refs / remotes / origin /&lt;/em&gt; ), pero generalmente es el nombre de una rama en el repositorio remoto.</target>
        </trans-unit>
        <trans-unit id="a6e839f3fb69bba683587d3332f5f0020879b4dc" translate="yes" xml:space="preserve">
          <source>this will rebase code into local. before that ensure you're in right branch.</source>
          <target state="translated">Esto cambiará el código a local.Antes de eso,asegúrate de estar en la rama correcta.</target>
        </trans-unit>
        <trans-unit id="8fd2b1b8f0afc6bcf95d25c97c52d650bc531b47" translate="yes" xml:space="preserve">
          <source>when you start working and do commits you advance the master pointer to &lt;code&gt;HEAD&lt;/code&gt; + your commits. But the origin/master pointer is still pointing to what it was when you cloned.</source>
          <target state="translated">cuando empiezas a trabajar y haces commits avanzas el puntero maestro a &lt;code&gt;HEAD&lt;/code&gt; + tus commits. Pero el puntero de origen / maestro todav&amp;iacute;a apunta a lo que era cuando clon&amp;oacute;.</target>
        </trans-unit>
        <trans-unit id="c8611464dcef8825f2ef8aa62feb4357dc35ccde" translate="yes" xml:space="preserve">
          <source>will fetch code from repository and rebase with your local... in git pull there is possibility of new commits getting created.</source>
          <target state="translated">...obtendrá el código del repositorio y lo rebajará con su local...en git pull existe la posibilidad de que se creen nuevas confirmaciones.</target>
        </trans-unit>
        <trans-unit id="f6492f8b35e6d7766d4dd5492898cb07179aaa87" translate="yes" xml:space="preserve">
          <source>will fetch code from repository and we need to rebase it manually by using &lt;code&gt;git rebase&lt;/code&gt;</source>
          <target state="translated">buscar&amp;aacute; el c&amp;oacute;digo del repositorio y necesitamos volver a crearlo manualmente usando &lt;code&gt;git rebase&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="922ad17f05bbaa394ace87920268f3431e1ccebb" translate="yes" xml:space="preserve">
          <source>you no longer need to do:</source>
          <target state="translated">que ya no necesitas hacer:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
