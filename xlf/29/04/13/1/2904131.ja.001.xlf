<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/2904131">
    <body>
      <group id="2904131">
        <trans-unit id="cb77a0f7fb4547e890705c5d54f1d51a941ec06c" translate="yes" xml:space="preserve">
          <source>// Invalid JSON:
{ &quot;foo&quot;: 'bar' }
The accepted JSON grammar of Numbers also changes, in JavaScript you can use Hexadecimal Literals, for example 0xFF, or (the infamous) Octal Literals e.g. 010. In JSON you can use only Decimal Literals.</source>
          <target state="translated">/無効なJSON:{&quot;foo&quot;.'bar'}JSONで受け入れられているNumbersの文法も変わり、JavaScriptでは0xFFのような16進数のリテラルや、010のような(悪名高い)8進数のリテラルを使うことができます。JSONでは10進数リテラルしか使えません。</target>
        </trans-unit>
        <trans-unit id="2715a417f7e2c77019e168d2456bf96816271842" translate="yes" xml:space="preserve">
          <source>// Invalid JSON:
{ &quot;foo&quot;: 0xFF }</source>
          <target state="translated">/無効なJSON:{&quot;foo&quot;.0xFF }</target>
        </trans-unit>
        <trans-unit id="51fefa67d0338b65dceddab7ab5756e41b740dc5" translate="yes" xml:space="preserve">
          <source>// JSON:
{ &quot;foo&quot;: &quot;bar&quot; }</source>
          <target state="translated">/JSON:{&quot;foo&quot;.&quot;bar&quot; }</target>
        </trans-unit>
        <trans-unit id="67cd55aabced81a3304581821212d6c4f0c41b01" translate="yes" xml:space="preserve">
          <source>// Object literal:
var o = { foo: &quot;bar&quot; };
The quotes are mandatory on JSON because in JavaScript (more exactly in ECMAScript 3rd. Edition), the usage of reserved words as property names is disallowed, for example:</source>
          <target state="translated">/オブジェクトリテラル:var o={foo.&quot;bar&quot; };JSON上で引用符は必須です。なぜならJavaScriptでは(より正確にはECMAScript 3rd.Editionでは)、予約語をプロパティ名として使用することは禁止されているからです。</target>
        </trans-unit>
        <trans-unit id="b25c272639233206f886fcb19a0a1404cc24363e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://json.org&quot;&gt;JSON&lt;/a&gt; has a much more limited syntax including:</source>
          <target state="translated">&lt;a href=&quot;http://json.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSONに&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、次のようなより限定された構文があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cddce47b75381a2922cb521dc1aa20d2dc6f0bf2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Literals&quot;&gt;&lt;code&gt;Literals&lt;/code&gt;&lt;/a&gt; :</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Literals&quot;&gt; &lt;code&gt;Literals&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15357bcb1b10c57d322b65c55072893046b7bf9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Object_literals&quot;&gt;&lt;code&gt;Object literals&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7159#page-6&quot;&gt;&lt;em&gt;&lt;code&gt;RFC 7159&lt;/code&gt;&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Object_literals&quot;&gt; &lt;code&gt;Object literals&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7159#page-6&quot;&gt;&lt;em&gt; &lt;code&gt;RFC 7159&lt;/code&gt; &lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="92d52d371769f6b35ec27bf195a737fa294369a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSON&lt;/code&gt; objects can be easily converted to Javascript and vice versa using the built in &lt;code&gt;JSON&lt;/code&gt; object which Javascript offers in its runtime. For example:</source>
          <target state="translated">&lt;code&gt;JSON&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトを簡単に構築された使用してVERSA Javascriptと副に変換することができ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトの実行時におけるJavascriptの申し出。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例えば：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f7097aaf7c32aee894229aa0858cd492b769fe1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;JSON is subset of JavaScript. &lt;a href=&quot;http://javascript.crockford.com/&quot;&gt;Javascript&lt;/a&gt; was derived from the ECMAScript Programming Language Standard.&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSONはJavaScriptのサブセットです。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://javascript.crockford.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Javascript&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はECMAScriptプログラミング言語標準から派生しました。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8910d3e4a17ae732661d98a014cde4250f86ddf8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;A prototype is an object used to implement structure, state, and behavior inheritance in ECMAScript. When a constructor creates an object, that object implicitly references the constructor&amp;rsquo;s associated prototype for the purpose of resolving property references. The constructor&amp;rsquo;s associated prototype can
be referenced by the program expression constructor.prototype, and properties added to an object&amp;rsquo;s prototype are shared, through inheritance, by all objects sharing the prototype.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロトタイプは、ECMAScriptで構造、状態、および動作の継承を実装するために使用されるオブジェクトです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンストラクターがオブジェクトを作成すると、そのオブジェクトは、プロパティ参照を解決する目的で、コンストラクターに関連付けられたプロトタイプを暗黙的に参照します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンストラクターに関連付けられたプロトタイプは、プログラム式コンストラクター.prototypeによって参照でき、オブジェクトのプロトタイプに追加されたプロパティは、継承を通じて、プロトタイプを共有するすべてのオブジェクトによって共有されます。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="01451870ffb5f84c932aff7254e4b327acf46f35" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;An object structure is represented as a pair of curly brackets surrounding zero or more name/value pairs (or members).  A name is a
string.  A single colon comes after each name, separating the name from the value.  A single comma separates a value from a following
name.  The names within an object SHOULD be unique.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト構造は、0個以上の名前と値のペア（またはメンバー）を囲む中括弧のペアとして表されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名前は文字列です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;各名前の後にコロンを1つ付けて、名前と値を区切ります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1つのカンマで値と後続の名前を区切ります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト内の名前は一意である必要があります。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="709a512c7cfd391ee4150b042a68fa79c06f9915" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ECMAScript has grown to be one of the world's most widely used general purpose programming languages. It is best known as the language embedded in web browsers but has also been widely adopted for server and embedded applications.&lt;/em&gt;&lt;strong&gt;&lt;em&gt;ECMAScript is based on several originating technologies, the most well-known being &lt;code&gt;JavaScript&lt;/code&gt; (Netscape Communications)) and &lt;code&gt;JScript&lt;/code&gt; (Microsoft Corporation).)&lt;/em&gt;&lt;/strong&gt;. &lt;em&gt;Though before 1994, ECMA was known as &quot;European Computer Manufacturers Association&quot;, after 1994, when the organization became global, the &quot;trademark&quot; &quot;Ecma&quot; was kept for historical reasons.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScriptは、世界で最も広く使用されている汎用プログラミング言語の1つに成長しました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、Webブラウザーに組み込まれた言語として最もよく知られていますが、サーバーおよび組み込みアプリケーションにも広く採用されています。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScriptは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JavaScript&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（Netscape Communications）や&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JScript&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（Microsoft Corporation）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いくつかの元々のテクノロジーに基づいてい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1994年以前はECMAは「European Computer Manufacturers Association」として知られていましたが、1994年に組織がグローバルになった後、「商標」「Ecma」は歴史的な理由で保持されました。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a509c04fea8f787d43e64c5ced4af9cc64bbc07e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ECMAScript supports prototype-based inheritance. Every constructor has an associated prototype, and every object created by that constructor has an implicit reference to the prototype (called the object&amp;rsquo;s
prototype) associated with its constructor. Furthermore, a prototype may have a non-null implicit reference to its prototype, and so on; this is called the prototype chain.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScriptは、プロトタイプベースの継承をサポートしています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてのコンストラクタには関連付けられたプロトタイプがあり、そのコンストラクタによって作成されたすべてのオブジェクトには、そのコンストラクタに関連付けられたプロトタイプ（オブジェクトのプロトタイプと呼ばれる）への暗黙的な参照があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さらに、プロトタイプには、そのプロトタイプへのnull以外の暗黙的な参照が含まれる場合があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これはプロトタイプチェーンと呼ばれます。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="51eee29b7dc8c953939c480851c1a8c1e5f62923" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;In a class-based object-oriented language, in general, state is carried by instances, methods are carried by classes, and inheritance is only of structure and behavior. In ECMAScript, the state and methods are carried by objects, and structure, behavior, and state are all inherited.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスベースのオブジェクト指向言語では、一般に、状態はインスタンスによって伝達され、メソッドはクラスによって伝達され、継承は構造と動作のみのものです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScriptでは、状態とメソッドはオブジェクトによって伝達され、構造、動作、および状態はすべて継承されます。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dfa3b74658971fed6e220fb01a75c1449b949971" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;JSON has been widely adopted by people who found that it made it a lot easier to produce distributed applications and services. The official Internet media type for JSON is &lt;code&gt;application/json&lt;/code&gt; &lt;strong&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/rfc4627/?include_text=1&quot;&gt;&lt;code&gt;RFC 4627&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;. JSON filenames use the extension &lt;code&gt;.json&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSONは、分散型のアプリケーションやサービスの作成を非常に簡単にすることに気付いた人々に広く採用されています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSONの公式インターネットメディアタイプは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;application/json&lt;/code&gt; &lt;strong&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/rfc4627/?include_text=1&quot;&gt; &lt;code&gt;RFC 4627&lt;/code&gt; &lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSONファイル名は拡張子&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.json&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f487b7f22937be722e6e4616e852509a89484d3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;JavaScript is a dynamically typed language. That means you don't have to specify the data type of a variable when you declare it, and data types are converted automatically as needed during script execution.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptは動的に型付けされる言語です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、変数を宣言するときにデータ型を指定する必要がなく、データ型はスクリプトの実行中に必要に応じて自動的に変換されます。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3100dcba5d2bf675a2e73f36a039f44a25a212ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;          ECMA-262        &lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;          ECMA-262        &lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb9df7b576a710607277e85c7eb505675d4e90bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt; Links &lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt; Links &lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4168878b06eaa6917a0f012585506612f5054ea6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="27f14011d570149605ea11581954595c80d1cf1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Javascript build in &lt;code&gt;JSON&lt;/code&gt; object:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトでの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptビルド&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="570ecf326fa1bdc9078e16b2bf2d0d3db6b0816d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Main differences:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;主な違い：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2eb2b15cc634ac10f6aa4a5ed7dd4aca5fb42bb6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE &amp;laquo;&lt;/strong&gt;&lt;a href=&quot;https://www.ecma-international.org/activities/Languages/Language%20overview.pdf&quot;&gt;4th edition&lt;/a&gt; of ECMAScript not &lt;a href=&quot;https://stackoverflow.com/a/2329662/5081877&quot;&gt;published as the work was incomplete&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注&amp;laquo; &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;https://stackoverflow.com/a/2329662/5081877&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作業が不完全だったため、&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ECMAScriptの&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.ecma-international.org/activities/Languages/Language%20overview.pdf&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;第4版&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;公開され&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ませんでした&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8d9f7d0a930e03077baedc0713243adfe7567169" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Only because object literals and JSON look &lt;em&gt;similar&lt;/em&gt;, it does not mean that you can name them interchangeably.&lt;/strong&gt; See also &lt;a href=&quot;http://benalman.com/news/2010/03/theres-no-such-thing-as-a-json/&quot;&gt;There's no such thing as a &quot;JSON Object&quot;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトリテラルとJSONの外観が&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;似ている&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;からといって、それらに同じ名前を付けることができるとは限りません。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://benalman.com/news/2010/03/theres-no-such-thing-as-a-json/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;JSONオブジェクト&quot;のようなものはありません&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="68bb085830767b5a8941c960dbcb039255762042" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Really?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Really?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f3f469121377693ebd78f419b0bda33954250c60" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is a JSON object:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これはJSONオブジェクトです：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="424aca9775abf43fcf8bf4725036f20955cfb665" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;begin-object&lt;/strong&gt;    = ws %x7B ws  ; { left curly bracket</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;begin-object&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; = ws％x7B ws; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;{左中括弧&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b877d10564346e41f92ce6ff2282199d8eaecaa3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;end-object&lt;/strong&gt;      = ws %x7D ws  ; } right curly bracket</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;end-object&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; = ws％x7D ws; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;右中括弧&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4b6ec665a13b788333206ccf20bb97d058616313" translate="yes" xml:space="preserve">
          <source>A JSON value MUST be an &lt;strong&gt;object&lt;/strong&gt;, array, number, or string, or one of
the following three literal names: false null true</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON値は、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、配列、数値、文字列、または次の3つのリテラル名のいずれかである必要があります：false null tr​​ue&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c69b643d782ac96d7358aa08b6488693948fdc4c" translate="yes" xml:space="preserve">
          <source>A string is a sequence of zero or more characters wrapped in quotes with backslash escapement, the same notation used in most programming languages.</source>
          <target state="translated">文字列とは、ほとんどのプログラミング言語で使用されているのと同じ表記法であるバックスラッシュエスケープメント付きの引用符で囲まれた0文字以上の文字列のことです。</target>
        </trans-unit>
        <trans-unit id="c37d33248b4de99fdc53e360fc1a0c878321e1c7" translate="yes" xml:space="preserve">
          <source>According to &lt;a href=&quot;http://www.json.org/js.html&quot;&gt;JSON in JavaScript&lt;/a&gt;,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://www.json.org/js.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptのJSONに&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;よると&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="180bd53f01d1e80399276495650a73aa3910a0c6" translate="yes" xml:space="preserve">
          <source>According to a JavaScript book it says this is an object defined by using &lt;em&gt;Object Notation&lt;/em&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptブックによると、これは&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object Notation&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して定義されたオブジェクトであると述べています&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77a2aaf651b70eaf2a18f4ebaa2775bd9de26c42" translate="yes" xml:space="preserve">
          <source>All object keys in JSON must be strings. In Javascript object keys can be strings or numbers</source>
          <target state="translated">JSON のオブジェクトキーはすべて文字列でなければなりません。Javascriptでは、オブジェクトキーは文字列でも数値でも構いません。</target>
        </trans-unit>
        <trans-unit id="1aff94b488aeb143135dbac12cc34cdd283f607b" translate="yes" xml:space="preserve">
          <source>All strings in JSON must be quoted in &quot;double quotes&quot;. Whereas in Javascript both single quotes and double quotes are allowed. Even with no quotes in the Javascript object notation the object keys are implicitly casted to strings.</source>
          <target state="translated">JSONの文字列はすべて「ダブルクォーテーション」で引用しなければなりません。Javascriptではシングルクォーテーションとダブルクォーテーションの両方が許可されているのに対し、JSONではシングルクォーテーションとダブルクォーテーションの両方が許可されています。Javascriptのオブジェクト表記に引用符がない場合でも、オブジェクトのキーは暗黙のうちに文字列にキャストされます。</target>
        </trans-unit>
        <trans-unit id="6d2216c6f68318495c0342b1b5b07c14bc1ded7f" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;object&lt;/strong&gt; is an unordered collection of zero or more name/value
pairs, where a name is a string and a value is a string, number,
boolean, null, &lt;strong&gt;object&lt;/strong&gt;, or array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトは、&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名前が文字列であり、値が文字列、数値、ブール値、ヌル、ゼロまたはそれ以上の名前/値のペアの順序なしコレクション、ある&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、または配列。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e7bf2ca84b1d5b25435142fb3644827dbd0fa9b0" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;object&lt;/strong&gt; structure is represented as a pair of curly brackets</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;構造は、中括弧の対として表されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b8630dd643543402418cd61a5d75ba82a1f16972" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;object&lt;/strong&gt; whose names are all unique is interoperable in the sense
that all software implementations receiving that &lt;strong&gt;object&lt;/strong&gt; will agree on
the name-value mappings.  When the names within an &lt;strong&gt;object&lt;/strong&gt; are not
unique, the behavior of software that receives such an &lt;strong&gt;object&lt;/strong&gt; is
unpredictable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名前がすべて一意であるが、その受信しているすべてのソフトウェアの実装という意味で、相互運用可能である&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトは、&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名前と値のマッピングに同意します。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内の名前&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が一意でない&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのような&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を受け取るソフトウェアの動作&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は予測できません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4b353746deb01182466b2b2acc7244be28c5e2f9" translate="yes" xml:space="preserve">
          <source>As a counter example, Python has the concept of &lt;em&gt;tuples&lt;/em&gt;, their syntax is &lt;code&gt;(x, y)&lt;/code&gt;. JavaScript doesn't have something like this.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;反例として、Pythonには&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タプル&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の概念があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、その構文は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(x, y)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptにはこのようなものはありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a5f4cc7dc672379f53c8d58bfb07dd4a83debd8d" translate="yes" xml:space="preserve">
          <source>As a result we have a simpler and more standardized objects which suits better on data-exchange between platforms.</source>
          <target state="translated">その結果、プラットフォーム間のデータ交換に適した、よりシンプルで標準化されたオブジェクトを手に入れることができました。</target>
        </trans-unit>
        <trans-unit id="147f040cb7aeb9f7948cc1745dbfc0304fddb6f2" translate="yes" xml:space="preserve">
          <source>As far as I understand the main difference is the &lt;strong&gt;&lt;em&gt;flexibility&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私が理解している限り、主な違いは&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;柔軟性&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b20c2923fd8241b403eda637772caa510a58436e" translate="yes" xml:space="preserve">
          <source>But most importantly, to repeat my explanation from the beginning: You are in a JavaScript context. You define a JavaScript object. If any, a &quot;JSON object&quot; can only be contained in a string:</source>
          <target state="translated">しかし、最も重要なことは、私の説明を最初から繰り返すことです。あなたはJavaScriptのコンテキストの中にいます。あなたはJavaScriptオブジェクトを定義しています。もしあるとすれば、「JSONオブジェクト」は文字列にしか含まれません。</target>
        </trans-unit>
        <trans-unit id="5a3b493fa8cb5deb979529ea96f7a8150df8f16f" translate="yes" xml:space="preserve">
          <source>Can someone tell me what is the main difference between a JavaScript object defined by using &lt;em&gt;Object Literal Notation&lt;/em&gt; and &lt;em&gt;JSON object&lt;/em&gt;?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトリテラル表記法&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して定義されたJavaScriptオブジェクト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSONオブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の主な違いは何&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ですか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4cb243a33ade513ecc3a35fdcd538989344e1772" translate="yes" xml:space="preserve">
          <source>Check with this code &lt;code&gt;{ &quot;Hai\&quot; \n Team 🔫&quot;:5, &quot;Bye \'&quot;: 7 }&lt;/code&gt; over online JSON Edtions. &lt;code&gt;Modes&lt;/code&gt;&lt;a href=&quot;http://www.jsoneditoronline.org/?id=14c0acaf4e147250022deaa3834e7bd9&quot;&gt;&lt;code&gt;notStrict&lt;/code&gt;&lt;/a&gt;&lt;code&gt;,&lt;/code&gt;&lt;a href=&quot;http://json.parser.online.fr/&quot;&gt;&lt;code&gt;Strinct&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このコード&lt;/font&gt;&lt;/font&gt; &lt;code&gt;{ &quot;Hai\&quot; \n Team 🔫&quot;:5, &quot;Bye \'&quot;: 7 }&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、オンラインJSON Edtionsを確認してください。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Modes&lt;/code&gt; &lt;a href=&quot;http://www.jsoneditoronline.org/?id=14c0acaf4e147250022deaa3834e7bd9&quot;&gt; &lt;code&gt;notStrict&lt;/code&gt; &lt;/a&gt; &lt;code&gt;,&lt;/code&gt; &lt;a href=&quot;http://json.parser.online.fr/&quot;&gt; &lt;code&gt;Strinct&lt;/code&gt; &lt;/a&gt; &lt;code&gt;.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="238b45c702902f20460d7266988b4b697877ff77" translate="yes" xml:space="preserve">
          <source>Data can be stored in many ways, but if it should be stored in a text file and be readable by a computer, it needs to follow some structure. JSON is one of the many formats that define such a structure.</source>
          <target state="translated">データは様々な方法で保存することができますが、テキストファイルに保存してコンピュータで読めるようにするには、何らかの構造に従う必要があります。JSONはそのような構造を定義する多くのフォーマットの一つです。</target>
        </trans-unit>
        <trans-unit id="6904ec3cd1e27c4d394671596dbe56927888ce1b" translate="yes" xml:space="preserve">
          <source>Dialects have been derived from the same language. They are are quite similar to each other as they have been derived from the same language but they have undergone some changes.
  A dialect is a variation in the language itself. It is derived from a single language.</source>
          <target state="translated">方言は同じ言語から派生したものです。方言は、同じ言語から派生したものでありながら、いくつかの変化を経てきたので、お互いによく似ています。方言とは、言語そのもののバリエーションのことです。一つの言語から派生したものです。</target>
        </trans-unit>
        <trans-unit id="1214da531dfd47b60c59dea8aa1269b43fb4e6ec" translate="yes" xml:space="preserve">
          <source>Duplicate keys (&lt;code&gt;{&quot;foo&quot;:&quot;bar&quot;,&quot;foo&quot;:&quot;baz&quot;}&lt;/code&gt;) produce undefined, implementation-specific results; the JSON specification specifically does not define their semantics</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;重複するキー（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;{&quot;foo&quot;:&quot;bar&quot;,&quot;foo&quot;:&quot;baz&quot;}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）は、未定義の実装固有の結果を生成します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON仕様は具体的にはそのセマンティクスを定義していません&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="342d9e3d27519cc4a54693fb4929c95788966ce3" translate="yes" xml:space="preserve">
          <source>Duplicate keys produce defined, specified results (in loose mode, the latter definition replaces the former; in strict mode, it's an error).</source>
          <target state="translated">重複したキーは、定義された指定された結果を生成します(緩いモードでは後者の定義が前者を置き換えます。</target>
        </trans-unit>
        <trans-unit id="c35dd99c7650d12bf824b720ab168d32dc24e652" translate="yes" xml:space="preserve">
          <source>ECMAScript is the language, whereas JavaScript, JScript, and even ActionScript are called &lt;strong&gt;&lt;code&gt;&quot;Dialects&quot;&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScriptは言語ですが、JavaScript、JScript、さらにはActionScriptも&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;&quot;Dialects&quot;&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼ばれ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2aff3e3eb1f1e6dbbe1203d3a53f3f921c472582" translate="yes" xml:space="preserve">
          <source>ECMAScript is the scripting language that forms the basis of JavaScript. &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt;&lt;code&gt;JavaScript&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Language_Resources&quot;&gt;&lt;code&gt;language resources&lt;/code&gt;&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScriptは、JavaScriptの基礎を形成するスクリプト言語です。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt; &lt;code&gt;JavaScript&lt;/code&gt; &lt;/a&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Language_Resources&quot;&gt; &lt;code&gt;language resources&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5e39039edf00d8f6af617681f04f247a70d6c3b8" translate="yes" xml:space="preserve">
          <source>Example of JSON:</source>
          <target state="translated">JSONの例。</target>
        </trans-unit>
        <trans-unit id="9def3063a6e64258a8ad2b3cbce234b1e486c820" translate="yes" xml:space="preserve">
          <source>Examples (from page 12 of RFC)</source>
          <target state="translated">例 (RFC 12 ページより)</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">スニペットを展開</target>
        </trans-unit>
        <trans-unit id="c56414af143a248bb1a18b4a2c6a9dc6163cdcc5" translate="yes" xml:space="preserve">
          <source>Extracts from &lt;a href=&quot;https://tools.ietf.org/html/rfc7159&quot;&gt;https://tools.ietf.org/html/rfc7159&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7159&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://tools.ietf.org/html/rfc7159&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;からの抜粋&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="81f16889f8212dde57fc5da3e53035d894bdc94e" translate="yes" xml:space="preserve">
          <source>First you should know what JSON is:</source>
          <target state="translated">まずはJSONとは何かを知っておきましょう。</target>
        </trans-unit>
        <trans-unit id="5e84af1bc0f4a97fe4da6f7c0d3d529cd9e2b910" translate="yes" xml:space="preserve">
          <source>For example, in JSON all keys must be quoted, while in object literals this is not necessary:</source>
          <target state="translated">例えば、JSON ではすべてのキーは引用符で囲まれていなければなりませんが、オブジェクトリテラルではその必要はありません。</target>
        </trans-unit>
        <trans-unit id="1184d8e92b5bd8511a4dd00d86aaedb53022fe97" translate="yes" xml:space="preserve">
          <source>For the ones who still think that RFC are more important than blogs and opinion based misconceptions, let's try to answer clarifying some points.
I'm not going to repeat all the correct differences already mentioned in previous answers, here I'm just trying adding value summarizing some crucial part rfc7159</source>
          <target state="translated">まだRFCはブログや意見に基づく誤解よりも重要だと思っている人のために、いくつかのポイントを明確にして回答してみましょう。以前の回答ですでに述べた正しい違いをすべて繰り返すつもりはありませんが、ここでは重要な部分をまとめて付加価値をつけようとしているだけです。</target>
        </trans-unit>
        <trans-unit id="bfe97df8921056d70dd41cc616f07cc90a30e2a6" translate="yes" xml:space="preserve">
          <source>Furthermore, (side-rant...) when people talk about a &quot;JSON Object&quot;, they almost always mean data that has the &quot;curly-braces&quot; at the top-level.  This corresponds nicely to a javascript object.  However, the JSON spec does not require that there be a single &quot;curly-braces&quot; object at the top-level of a JSON string.  It is perfectly valid JSON to have a list at the top-level, or even to have just a single value.  So, while every &quot;JSON Object&quot; corresponds to valid JSON, not all valid JSON strings correspond to what we would call a &quot;JSON Object&quot;! ( because the string could represent a list or an atomic value )</source>
          <target state="translated">さらに、(余談ですが....)&quot;JSONオブジェクト &quot;といえば、ほとんどの場合、トップレベルに &quot;中括弧 &quot;が付いているデータを指します。これはjavascriptのオブジェクトによく対応しています。しかし、JSONの仕様では、JSON文字列のトップレベルに単一の「中括弧」オブジェクトがあることを要求していません。トップレベルにリストを持っていても、単一の値を持っていても完全に有効なJSONです。ですから、すべての &quot;JSON オブジェクト&quot; は有効な JSON に対応しますが、すべての有効な JSON 文字列が &quot;JSON オブジェクト&quot; と呼ばれるものに対応するわけではありません。(文字列はリストや原子値を表すことができるので)</target>
        </trans-unit>
        <trans-unit id="91e214f61d56708544f987f01aaf2beaba1bb736" translate="yes" xml:space="preserve">
          <source>Here is one surprising difference: you can not use &lt;code&gt;undefined&lt;/code&gt; in json and all object fields with undefined values will disappear after &lt;code&gt;JSON.stringify&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここに驚くべき違いが1つあります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。jsonで&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用することはできず&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、未定義の値を持つすべてのオブジェクトフィールドは&lt;/font&gt; &lt;code&gt;JSON.stringify&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;後に消え&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f951bca423bbdc6b94390f76da80924cb5903a74" translate="yes" xml:space="preserve">
          <source>In JSON a function cannot be defined as a value of an object (since this is Javascript specific). In Javascript this is completely legal.</source>
          <target state="translated">JSONでは、関数をオブジェクトの値として定義することはできません(これはJavascript特有のものなので)。Javascriptでは、これは完全に合法です。</target>
        </trans-unit>
        <trans-unit id="23b37de353d55037c1ef47caa24b1e0f5338d2b9" translate="yes" xml:space="preserve">
          <source>In JavaScript, object literals can have</source>
          <target state="translated">JavaScriptでは、オブジェクトリテラルは</target>
        </trans-unit>
        <trans-unit id="581428cac78d7efa94e581000e6d02bb6f913cb2" translate="yes" xml:space="preserve">
          <source>In addition to reading the &lt;a href=&quot;http://www.json.org/&quot;&gt;documentation&lt;/a&gt;, as @Filix King suggested, I also suggest playing around with the &lt;a href=&quot;http://www.jsonlint.com/&quot;&gt;JSONLint online JSON validator&lt;/a&gt;. That's how I learned that the keys of JSON objects must be strings.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://www.json.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ドキュメント&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を読むことに加えて&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、@ Filix Kingが示唆したように、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.jsonlint.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSONLintオンラインJSONバリデーターをいじる&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;こともお勧めし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そうやって、JSONオブジェクトのキーは文字列でなければならないことを学びました。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="48cb239bb52662e6b400d6e30f3922b1ac69a07f" translate="yes" xml:space="preserve">
          <source>In contrast, &lt;em&gt;JavaScript&lt;/em&gt; is a programming language. Of course JavaScript also provides a way to define/describe data, but the syntax is very specific to JavaScript.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;対照的に、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はプログラミング言語です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もちろん、JavaScriptはデータを定義/説明する方法も提供しますが、構文はJavaScriptに非常に固有です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="699fd329fb25c990309482a62eb55fb8b1ca77e9" translate="yes" xml:space="preserve">
          <source>In other words, valid JSON is also valid JavaScript object literal notation but not necessarily the other way around.</source>
          <target state="translated">つまり、有効なJSONはJavaScriptオブジェクトのリテラル表記も有効ですが、必ずしもその逆ではありません。</target>
        </trans-unit>
        <trans-unit id="c8cdb306b788ef51486955aa4ada6840c2e72976" translate="yes" xml:space="preserve">
          <source>Information about the browser and computer of your users.</source>
          <target state="translated">利用者のブラウザやコンピュータに関する情報。</target>
        </trans-unit>
        <trans-unit id="4014fecc71d912e2ee2fc1b4edeeb5c10f2dcc4e" translate="yes" xml:space="preserve">
          <source>It is language agnostic data-interchange format.
The syntax of JSON was inspired by the JavaScript Object Literal notation, but there are differences between them.</source>
          <target state="translated">言語にとらわれないデータ交換フォーマットです。JSONの構文はJavaScriptのオブジェクトリテラル表記法にヒントを得ていますが、両者には違いがあります。</target>
        </trans-unit>
        <trans-unit id="50edc4c808537192620a2b06ec34bcb4059b04ea" translate="yes" xml:space="preserve">
          <source>Its Image member is an &lt;strong&gt;object&lt;/strong&gt; whose Thumbnail member is an &lt;strong&gt;object&lt;/strong&gt; and
whose IDs member is an array of numbers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのイメージのメンバーである&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、そのサムネイルメンバーである&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; IDがメンバー数の配列です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="540de327f9fe111c4bd020ca54fefab757d85033" translate="yes" xml:space="preserve">
          <source>JS object notation, used in JS to create objects in the code conveniently:</source>
          <target state="translated">JSオブジェクト記法、コード内のオブジェクトを便利に作成するためにJSで使用されます。</target>
        </trans-unit>
        <trans-unit id="f384fd52ff795101c1d6c496d884cf953459abb0" translate="yes" xml:space="preserve">
          <source>JSON can represent four primitive types (strings, numbers, booleans,
and null) and two structured types (&lt;strong&gt;objects&lt;/strong&gt; and arrays).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSONは4つのプリミティブ型（文字列、数値、ブール値、およびnull）と2つの構造型（&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と配列）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を表すことができ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="917a5ef8b2cef69c70821602350dbba4263f39f6" translate="yes" xml:space="preserve">
          <source>JSON defines a small set of formatting rules for the portable representation of structured data.</source>
          <target state="translated">JSONは、構造化されたデータをポータブルに表現するためのフォーマットルールの小さなセットを定義しています。</target>
        </trans-unit>
        <trans-unit id="58f50956057cd2113a7ae567bf1b69d2bdd10761" translate="yes" xml:space="preserve">
          <source>JSON has the following syntactical constraints:</source>
          <target state="translated">JSONには以下の構文制約があります。</target>
        </trans-unit>
        <trans-unit id="ac14844d25187a9ab85f707289c449a9f1cff379" translate="yes" xml:space="preserve">
          <source>JSON is a &lt;a href=&quot;http://en.wikipedia.org/wiki/Subset&quot;&gt;subset&lt;/a&gt; of the object
  literal notation of JavaScript.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSONは、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptのオブジェクトリテラル表記の&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Subset&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;サブセット&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b00cf9f526adffff3af5096a53d9049cbfbcaa39" translate="yes" xml:space="preserve">
          <source>JSON is a kind of wrapper on &quot;JavaScript Object Notation&quot; which forces users to obey more strict rules for defining the objects. And it does this by limiting the possible object declaration ways provided by JavaScript Object Notation feature.</source>
          <target state="translated">JSONは「JavaScript Object Notation」のラッパーのようなもので、ユーザーにオブジェクトを定義するためのより厳格なルールに従うことを強制します。そして、JavaScript Object Notation 機能が提供するオブジェクトの宣言方法を制限することで、これを実現しています。</target>
        </trans-unit>
        <trans-unit id="eb5dbf7f8d8e957d355980ca5ba24afe356659c5" translate="yes" xml:space="preserve">
          <source>JSON.parse accepts a String that conforms to the JSON grammar.</source>
          <target state="translated">JSON.parseはJSON文法に準拠した文字列を受け付けます。</target>
        </trans-unit>
        <trans-unit id="9a657ed8680a8baee579ef04ab8db8481112c182" translate="yes" xml:space="preserve">
          <source>JSON.stringify produces a String that conforms to the following JSON grammar.</source>
          <target state="translated">JSON.stringifyは、以下のJSON文法に準拠したStringを生成します。</target>
        </trans-unit>
        <trans-unit id="58d11c6ded11139b96abc98894c3a3947a260d49" translate="yes" xml:space="preserve">
          <source>JavaScript &lt;strong&gt;Object&lt;/strong&gt; Notation (JSON) is a text format for the
serialization of structured data.  It is derived from the &lt;strong&gt;object&lt;/strong&gt;
literals of JavaScript, as defined in the ECMAScript Programming
Language Standard, Third Edition [ECMA-262].</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Notation（JSON）は、構造化データのシリアル化のためのテキスト形式です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ECMAScriptプログラミング言語標準、第3版[ECMA-262]で定義されているように、JavaScript &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;リテラル&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から派生してい&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c1d584a6fe74b88d75941b0f10057cf17d06de8" translate="yes" xml:space="preserve">
          <source>Javascript Object Literal vs JSON:</source>
          <target state="translated">JavascriptのオブジェクトリテラルとJSONの比較。</target>
        </trans-unit>
        <trans-unit id="2012fcecc3d000b7d011678e2573b07949409297" translate="yes" xml:space="preserve">
          <source>Key values must be quoted</source>
          <target state="translated">キー値は引用符で囲まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="0308b55bb8406978edd0f4d91f979ce404c61147" translate="yes" xml:space="preserve">
          <source>Knowing that, just by looking at the &lt;em&gt;syntax&lt;/em&gt;, your example is not JSON because of two reasons:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;構文&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を確認&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しただけでは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、次の2つの理由により、例はJSONではありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="809b9adb102cc5aaff52310a4ddefc9722ce4709" translate="yes" xml:space="preserve">
          <source>Lets clarify first what &lt;a href=&quot;http://www.json.org/&quot;&gt;&lt;em&gt;JSON&lt;/em&gt;&lt;/a&gt; actually is. JSON is a &lt;em&gt;textual&lt;/em&gt;, language-independent data-exchange format, much like XML, CSV or YAML.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;まず&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.json.org/&quot;&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSONが&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;何であるかを明確にしましょう&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSONは、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;XML、CSV、YAMLによく似た、言語に依存しない&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テキスト&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;形式のデータ交換フォーマットです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0743b2794b21b091ce583ea18d2549e0d93c1a7b" translate="yes" xml:space="preserve">
          <source>Lets look at the syntactical differences between JSON and JavaScript object literals.</source>
          <target state="translated">JSONとJavaScriptのオブジェクトリテラルの構文的な違いを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="2a60485ade4296ddcd6449fb49e6061b9dd4bda9" translate="yes" xml:space="preserve">
          <source>Literals are fixed values, not variables, that you literally provide in your script.</source>
          <target state="translated">リテラルとは、スクリプト内で文字通り指定する固定値のことで、変数ではありません。</target>
        </trans-unit>
        <trans-unit id="769f781b2775ce00e09b68b8de21776f404508c8" translate="yes" xml:space="preserve">
          <source>Object &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Property_Accessors&quot;&gt;Property accessors&lt;/a&gt;  provide access to an object's properties by using the dot notation or the bracket notation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Property_Accessors&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティアクセサー&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; は、ドット表記またはブラケット表記を使用して、オブジェクトのプロパティへのアクセスを提供します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa9576abdd317dfc7abc4850edffe0b7390b5db5" translate="yes" xml:space="preserve">
          <source>Object &lt;em&gt;keys&lt;/em&gt; must be &lt;strong&gt;strings&lt;/strong&gt; (i.e. a character sequence enclosed in double quotes &lt;code&gt;&quot;&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キー&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（つまり、二重引用符&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;&lt;/code&gt; で&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;囲まれた文字シーケンス）で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なければなりません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fc4fd09957b2108d6ebc1a56e022f26e68d85cb9" translate="yes" xml:space="preserve">
          <source>Object literal syntax is a very convenient way to create javascript objects</source>
          <target state="translated">オブジェクトリテラル構文は、javascriptのオブジェクトを作成するのに非常に便利な方法です。</target>
        </trans-unit>
        <trans-unit id="75daecdd17b61c4b33a541077f6bb4e09d3c6816" translate="yes" xml:space="preserve">
          <source>SQL Language - Hibernate MySQL Dialect, Oracle Dialect,.. which have some changes or added functionality.</source>
          <target state="translated">SQL言語-Hibernate MySQLの方言、Oracleの方言、...いくつかの変更や機能追加があります。</target>
        </trans-unit>
        <trans-unit id="8b414c4c0bf270da7e849e79f3290fda4dffdea2" translate="yes" xml:space="preserve">
          <source>So basically, the newObject in my example above is an object defined by using JavaScript Objeect Notation; but it is not a 'valid' JSON object because it does not follow the rules that JSON standards require.</source>
          <target state="translated">つまり、基本的には上の例の newObject は JavaScript Objeect Notation を使って定義されたオブジェクトですが、JSON 標準が要求するルールに従っていないので、「有効な」JSON オブジェクトではありません。</target>
        </trans-unit>
        <trans-unit id="57c5499f600ca7aafec6a54e1a3e6a2095963944" translate="yes" xml:space="preserve">
          <source>String literals, number literals or identifier names as keys (since ES6, keys can now also be computed, which introduces yet another syntax).</source>
          <target state="translated">文字列リテラル、数値リテラル、あるいは識別子名をキーとします (ES6 以降、キーも計算できるようになりましたが、これは別の構文を導入したものです)。</target>
        </trans-unit>
        <trans-unit id="508d962310fe84b9f6f496ee80ae6e92d57b1c7d" translate="yes" xml:space="preserve">
          <source>Strings must be quoted with &lt;code&gt;&quot;&lt;/code&gt; and not &lt;code&gt;'&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt; &lt;code&gt;'&lt;/code&gt; では&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なく&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で引用する必要があります&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e0c81c16a30e607c4eeea45fc113a857208285a4" translate="yes" xml:space="preserve">
          <source>Such formats are typically language-independent, meaning they can be processed by Java, Python, JavaScript, PHP, you name it.</source>
          <target state="translated">このようなフォーマットは一般的に言語に依存しないもので、Java、Python、JavaScript、PHPなどで処理できることを意味します。</target>
        </trans-unit>
        <trans-unit id="02e1d2094b0f27b2c154c92bc14a0c5ccf76f251" translate="yes" xml:space="preserve">
          <source>That is, if you're writing JavaScript source code, and not dealing with a &lt;em&gt;string&lt;/em&gt;, you're not dealing with JSON. Maybe you received the data as JSON (e.g., via ajax or reading from a file), but once you or a library you're using has parsed it, it's not JSON anymore.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、JavaScriptソースコードを記述していて、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を処理して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いない場合、JSONを処理していません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;多分あなたはデータをJSONとして（例えばajax経由で、またはファイルからの読み込みで）受け取りましたが、あなたまたはあなたが使用しているライブラリがそれを解析すると、それはもはやJSONではなくなります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc74028c269be97797adeff928c8732a8ae9995b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JSON&lt;/code&gt; language, which stands for 'Javascript object notation', has its syntax derived from javascript object literal syntax. It is used as a programming language independent textual data transfer format.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;JSON&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「JavaScriptオブジェクト表記法」の略で、言語は、javascriptオブジェクトリテラル構文から派生した構文を持っています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プログラミング言語に依存しないテキスト形式のデータ転送フォーマットとして使用されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d4e10fd99aa298a7a469345f57f40ed3fe623262" translate="yes" xml:space="preserve">
          <source>The JSON object is a single object that contains two functions, parse and stringify, that are used to parse and construct JSON texts.</source>
          <target state="translated">JSON オブジェクトは、JSON テキストを解析して構築するために使用される parse と stringify の 2 つの関数を含む単一のオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="93b0e3aff87fdf4743e3fb4a4829fbc671386588" translate="yes" xml:space="preserve">
          <source>The JSON spec is a syntax for encoding data as a string.  What people call a &quot;JSON Object&quot; ( in javascript ) is really just an ordinary javascript object that has (probably) been de-serialized from a valid JSON string, and can be easily re-serialized as a valid JSON string.  This generally means that it contains only data ( and not functions ).  It also means that there are no dates, because JSON does not have a date type ( probably the most painful thing about JSON ;)</source>
          <target state="translated">JSON仕様はデータを文字列としてエンコードするための構文です。(javascriptでは)&quot;JSONオブジェクト &quot;と呼ばれるものは、(おそらく)有効なJSON文字列からデシリアライズされた普通のjavascriptオブジェクトで、有効なJSON文字列として簡単に再シリアライズすることができます。これは一般的にはデータだけを含んでいることを意味します(関数は含まれていません)。また、JSONには日付型がないので、日付がないことも意味します (おそらくJSONで一番つらいことです ;)</target>
        </trans-unit>
        <trans-unit id="61757c1d424f2da47e58d71f58ebd9ea839096e7" translate="yes" xml:space="preserve">
          <source>The data types in JSON are also restricted to the following values:</source>
          <target state="translated">また、JSONのデータ型は以下の値に制限されています。</target>
        </trans-unit>
        <trans-unit id="71fa8079f75b9da9e39a23a9e3d1036191a32893" translate="yes" xml:space="preserve">
          <source>The names within an &lt;strong&gt;object&lt;/strong&gt; SHOULD be unique.
  &lt;strong&gt;object&lt;/strong&gt; = &lt;strong&gt;begin-object&lt;/strong&gt; [ member *( value-separator member ) ]
           &lt;strong&gt;end-object&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内の名前は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一意である必要があります。 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;object&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; = &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;begin-object&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; [member *（value-separator member）] &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;end-object&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d784512485b6c5e91867853c48171676ca2e5a00" translate="yes" xml:space="preserve">
          <source>The parseJSON method will be included in the &lt;a href=&quot;https://www.ecma-international.org/activities/Languages/Language%20overview.pdf&quot;&gt;&lt;code&gt;Fourth Edition of ECMAScript&lt;/code&gt;&lt;/a&gt;. In the meantime, a JavaScript implementation is available at json.org.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;parseJSONメソッドは&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.ecma-international.org/activities/Languages/Language%20overview.pdf&quot;&gt; &lt;code&gt;Fourth Edition of ECMAScript&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;含まれ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それまでの間、JavaScript実装はjson.orgで入手できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de649511949d4cf53e8f16e4a0643a0bf04201c5" translate="yes" xml:space="preserve">
          <source>The values can be any valid JavaScript expression, including function definitions and &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値には、関数定義や&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;など、任意の有効なJavaScript式を使用できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9761b6c3b2246f9dfec0c02d587dc968a32420b" translate="yes" xml:space="preserve">
          <source>The values can be either:</source>
          <target state="translated">値はどちらでも構いません。</target>
        </trans-unit>
        <trans-unit id="453ca2ae5c4898c77aae97325f8503c0951b49c1" translate="yes" xml:space="preserve">
          <source>There is really no such thing as a &quot;JSON Object&quot;.</source>
          <target state="translated">JSONオブジェクト」なんてものは本当に存在しません。</target>
        </trans-unit>
        <trans-unit id="3c28b85382639a0f0d57cc6a01fdcb5eb7afbf2c" translate="yes" xml:space="preserve">
          <source>This link is also quite helpful:
&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/bb299886.aspx&quot;&gt;http://msdn.microsoft.com/en-us/library/bb299886.aspx&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このリンクも非常に役立ちます：&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/bb299886.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//msdn.microsoft.com/en-us/library/bb299886.aspx&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc51a6c13ac80744b3997690f5e6273ce1dcf5a7" translate="yes" xml:space="preserve">
          <source>What is the difference between JSON and Object Literal Notation</source>
          <target state="translated">JSONとオブジェクトリテラル記法の違いは?</target>
        </trans-unit>
        <trans-unit id="8a870a281184a768148d5379fd52a98e8b3b28c3" translate="yes" xml:space="preserve">
          <source>Why isn't it a JSON object in this case? Just because it is not defined by using quotation marks?</source>
          <target state="translated">この場合、なぜJSONオブジェクトではないのでしょうか?引用符を使って定義されていないからというだけで?</target>
        </trans-unit>
        <trans-unit id="d32497ee58f8e9f70fc59880b8f9385b27a04fe2" translate="yes" xml:space="preserve">
          <source>You cannot assign a function as a value to a &quot;JSON object&quot; (because JSON doesn't define any syntax for functions).</source>
          <target state="translated">JSONオブジェクト」に関数を値として代入することはできません(JSONには関数の構文が定義されていないため)。</target>
        </trans-unit>
        <trans-unit id="d63d152d38f6695f0e756975648d444cf290b34f" translate="yes" xml:space="preserve">
          <source>You have a more limited range of values (e.g. no functions allowed)</source>
          <target state="translated">値の範囲がより限定されている(例:関数を使用できない</target>
        </trans-unit>
        <trans-unit id="a627f4c3009fbc53230d3a44ad6154c88090c76e" translate="yes" xml:space="preserve">
          <source>Your keys are not strings (literals). They are &lt;em&gt;identifier names&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キーは文字列（リテラル）ではありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それらは&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;識別子名&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b5e09e5f6bd3ecb7c200897da4452ffe04ffa20" translate="yes" xml:space="preserve">
          <source>\&quot;  - Special characters can be escaped. But not recomended to escape (') Single Quotes.
  In Strict mode it will throw and Error - &lt;code&gt;SyntaxError: Unexpected token ' in JSON&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;\ &quot;-特殊文字はエスケープできます。エスケープ（ '）単一引用符はお勧めしません。Strictモードではスローされ、Error- &lt;/font&gt;&lt;/font&gt; &lt;code&gt;SyntaxError: Unexpected token ' in JSON&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c37f5d4c24ebe19faceff2fa752f48ced17e4bc7" translate="yes" xml:space="preserve">
          <source>a number</source>
          <target state="translated">すうすう</target>
        </trans-unit>
        <trans-unit id="555d01e6c83266b3e9f92bd811905370caf62770" translate="yes" xml:space="preserve">
          <source>a string</source>
          <target state="translated">一列</target>
        </trans-unit>
        <trans-unit id="154b7b03c77e9e89b215d8a83545364526bad571" translate="yes" xml:space="preserve">
          <source>an (JSON) object</source>
          <target state="translated">オブジェクト</target>
        </trans-unit>
        <trans-unit id="098f0f62d0fe7ff8be81c4d5f8ab89199776c280" translate="yes" xml:space="preserve">
          <source>an array</source>
          <target state="translated">配列</target>
        </trans-unit>
        <trans-unit id="0a0434658abb519d79582355b4d8c2bb748e205d" translate="yes" xml:space="preserve">
          <source>string
number
object
array
A literal as:
true
false
null
The grammar of Strings changes. They have to be delimited by double quotes, while in JavaScript, you can use single or double quotes interchangeably.</source>
          <target state="translated">文字列 数字 オブジェクト 配列 A リテラル as:true false null 文字列の文法が変わります。JavaScriptではシングルクォーテーションとダブルクォーテーションを使い分けることができますが、文字列は二重引用符で区切らなければなりません。</target>
        </trans-unit>
        <trans-unit id="4a8be7ccecc206b635133eca205de844aacd9af0" translate="yes" xml:space="preserve">
          <source>var o = { &quot;if&quot;: &quot;foo&quot; }; 
So for &quot;compatibility&quot; (and easy eval'ing maybe?) the quotes are mandatory.</source>
          <target state="translated">var o={&quot;if&quot;.&quot;foo&quot; };ですから、&quot;互換性 &quot;のために(そして、簡単に評価できるようにするために?)引用符は必須です。</target>
        </trans-unit>
        <trans-unit id="92753de84e516bab1dde3ab956c8e46d95a97308" translate="yes" xml:space="preserve">
          <source>var o = { if: &quot;foo&quot; }; // SyntaxError in ES3
While, using a string literal as a property name (quoting the property name) gives no problems:</source>
          <target state="translated">var o={if.&quot;foo&quot; };/SyntaxError in ES3 一方、プロパティ名として文字列リテラルを使用して(プロパティ名を引用)問題はありません。</target>
        </trans-unit>
        <trans-unit id="662d49caaa0bf824e42687de59a5844a862d9465" translate="yes" xml:space="preserve">
          <source>► &lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt;&lt;code&gt;JavaScript&lt;/code&gt;&lt;/a&gt; is the most popular implementation of the ECMAScript Standard.
The core features of Javascript are based on the ECMAScript standard,  but Javascript also has other additional features that are not in the ECMA specifications/standard. &lt;strong&gt;Every browser has a JavaScript interpreter.&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;► &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt; &lt;code&gt;JavaScript&lt;/code&gt; は&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ECMAScriptの標準の中で最も人気のある実装です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptのコア機能はECMAScript標準に基づいていますが、JavascriptにはECMA仕様/標準にはないその他の追加機能もあります。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてのブラウザーにはJavaScriptインタープリターがあります。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="de0f7614fa05276ee4ab7821b0f2b862a865134a" translate="yes" xml:space="preserve">
          <source>► ECMAScript</source>
          <target state="translated">► ECMAScript</target>
        </trans-unit>
        <trans-unit id="4489fb0e13b61a8f92056c2a46dbc7b665ea19ed" translate="yes" xml:space="preserve">
          <source>► JSON Strings must be quoted with &quot; and not '. A string is very much like a C or Java string. &lt;strong&gt;Strings should be wrapped in double quotes.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;►JSON文字列は「ではなく」で引用符で囲む必要があります。文字列はCまたはJavaの文字列とよく似ています。文字列&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は二重引用符で囲む必要があります。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6caade8dd0f29aa515b4a6e6a464f03e32bf743e" translate="yes" xml:space="preserve">
          <source>► JavaScript Object Notation (&lt;a href=&quot;http://www.json.org/&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt;) is a lightweight, text-based, language-independent data interchange format. JSON has been used to exchange data between applications written in any Programming language.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;►JavaScript Object Notation（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.json.org/&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）は、軽量でテキストベースの、言語に依存しないデータ交換フォーマットです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSONは、任意のプログラミング言語で記述されたアプリケーション間でデータを交換するために使用されています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="38b33f82d8e4baf3bdfb08cb2ac51ec9f4b10265" translate="yes" xml:space="preserve">
          <source>► Key values must be quoted, only Strings are allowed for keys. If you use other than String it will convert to String. But not recommended to use keys other than String's. Check an example like this - &lt;code&gt;{ 'key':'val' }&lt;/code&gt; over &lt;a href=&quot;https://jsonformatter.curiousconcept.com/&quot;&gt;&lt;code&gt;RFC 4627 - jsonformatter&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;►キー値は引用符で囲む必要があります。キーに使用できるのは文字列のみです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;String以外を使用すると、Stringに変換されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、文字列以外のキーの使用はお勧めしません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このような例をチェック- &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{ 'key':'val' }&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://jsonformatter.curiousconcept.com/&quot;&gt; &lt;code&gt;RFC 4627 - jsonformatter&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb610aa022a63def35dc27867d54f314d4a9752b" translate="yes" xml:space="preserve">
          <source>► You have a more limited range of values (e.g. no functions allowed). A value can be a string in double quotes, number, boolean, null, object, or array. These structures can be nested.</source>
          <target state="translated">値の範囲がより限定されています(例:関数は使用できません)。値は二重引用符で囲まれた文字列、数値、ブール値、NULL、オブジェクト、または配列にすることができます。これらの構造体は入れ子にすることができます。</target>
        </trans-unit>
        <trans-unit id="2427ab5d3a1b54c968b18e29978de14ee06718fb" translate="yes" xml:space="preserve">
          <source>🔫  - Special Symbols are allowed in String but not recomended to use.</source>
          <target state="translated">🔫-文字列では特殊記号を使用することができますが、使用することは推奨されていません。</target>
        </trans-unit>
        <trans-unit id="099ba8b6f07a9481b2031e70c8cccbc5852c56de" translate="yes" xml:space="preserve">
          <source>🔫 &lt;strong&gt;&lt;a href=&quot;http://www.json.org/fatfree.html&quot;&gt;JSON&lt;/a&gt;: The Fat-Free Alternative to XML&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;🔫 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;a href=&quot;http://www.json.org/fatfree.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：XMLへの無脂肪の代替&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a330d08e87f88b749216760dd59350a02bb063c" translate="yes" xml:space="preserve">
          <source>🙈🙉🙊</source>
          <target state="translated">🙈🙉🙊</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
