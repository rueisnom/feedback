<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/2904131">
    <body>
      <group id="2904131">
        <trans-unit id="cb77a0f7fb4547e890705c5d54f1d51a941ec06c" translate="yes" xml:space="preserve">
          <source>// Invalid JSON:
{ &quot;foo&quot;: 'bar' }
The accepted JSON grammar of Numbers also changes, in JavaScript you can use Hexadecimal Literals, for example 0xFF, or (the infamous) Octal Literals e.g. 010. In JSON you can use only Decimal Literals.</source>
          <target state="translated">/Inválido JSON:{&quot;foo&quot;:'bar'}La gramática aceptada de JSON de los números también cambia,en JavaScript se puede usar Literales Hexadecimales,por ejemplo 0xFF,o (el infame)Literales Octales por ejemplo 010.En JSON puedes usar sólo Literales Decimales.</target>
        </trans-unit>
        <trans-unit id="2715a417f7e2c77019e168d2456bf96816271842" translate="yes" xml:space="preserve">
          <source>// Invalid JSON:
{ &quot;foo&quot;: 0xFF }</source>
          <target state="translated">/Inválido JSON:{&quot;foo&quot;:0xFF }</target>
        </trans-unit>
        <trans-unit id="51fefa67d0338b65dceddab7ab5756e41b740dc5" translate="yes" xml:space="preserve">
          <source>// JSON:
{ &quot;foo&quot;: &quot;bar&quot; }</source>
          <target state="translated">/JSON:{&quot;foo&quot;:&quot;bar&quot; }</target>
        </trans-unit>
        <trans-unit id="67cd55aabced81a3304581821212d6c4f0c41b01" translate="yes" xml:space="preserve">
          <source>// Object literal:
var o = { foo: &quot;bar&quot; };
The quotes are mandatory on JSON because in JavaScript (more exactly in ECMAScript 3rd. Edition), the usage of reserved words as property names is disallowed, for example:</source>
          <target state="translated">/Objeto literal:var o={foo:&quot;bar&quot; };Las citas son obligatorias en JSON porque en JavaScript (más exactamente en ECMAScript 3ª.Edición),el uso de palabras reservadas como nombres de propiedades está desautorizado,por ejemplo:</target>
        </trans-unit>
        <trans-unit id="b25c272639233206f886fcb19a0a1404cc24363e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://json.org&quot;&gt;JSON&lt;/a&gt; has a much more limited syntax including:</source>
          <target state="translated">&lt;a href=&quot;http://json.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tiene una sintaxis mucho m&amp;aacute;s limitada que incluye:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cddce47b75381a2922cb521dc1aa20d2dc6f0bf2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Literals&quot;&gt;&lt;code&gt;Literals&lt;/code&gt;&lt;/a&gt; :</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Literals&quot;&gt; &lt;code&gt;Literals&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15357bcb1b10c57d322b65c55072893046b7bf9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Object_literals&quot;&gt;&lt;code&gt;Object literals&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7159#page-6&quot;&gt;&lt;em&gt;&lt;code&gt;RFC 7159&lt;/code&gt;&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Object_literals&quot;&gt; &lt;code&gt;Object literals&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7159#page-6&quot;&gt;&lt;em&gt; &lt;code&gt;RFC 7159&lt;/code&gt; &lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="92d52d371769f6b35ec27bf195a737fa294369a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSON&lt;/code&gt; objects can be easily converted to Javascript and vice versa using the built in &lt;code&gt;JSON&lt;/code&gt; object which Javascript offers in its runtime. For example:</source>
          <target state="translated">&lt;code&gt;JSON&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; objetos &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se pueden convertir f&amp;aacute;cilmente a Javascript y viceversa utilizando el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; incorporado &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;que Javascript ofrece en su tiempo de ejecuci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f7097aaf7c32aee894229aa0858cd492b769fe1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;JSON is subset of JavaScript. &lt;a href=&quot;http://javascript.crockford.com/&quot;&gt;Javascript&lt;/a&gt; was derived from the ECMAScript Programming Language Standard.&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON es un subconjunto de JavaScript. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://javascript.crockford.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Javascript&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se deriva del est&amp;aacute;ndar de lenguaje de programaci&amp;oacute;n ECMAScript.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8910d3e4a17ae732661d98a014cde4250f86ddf8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;A prototype is an object used to implement structure, state, and behavior inheritance in ECMAScript. When a constructor creates an object, that object implicitly references the constructor&amp;rsquo;s associated prototype for the purpose of resolving property references. The constructor&amp;rsquo;s associated prototype can
be referenced by the program expression constructor.prototype, and properties added to an object&amp;rsquo;s prototype are shared, through inheritance, by all objects sharing the prototype.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un prototipo es un objeto utilizado para implementar la herencia de estructura, estado y comportamiento en ECMAScript. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando un constructor crea un objeto, ese objeto hace referencia impl&amp;iacute;cita al prototipo asociado del constructor con el fin de resolver referencias de propiedad. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El prototipo asociado del constructor puede ser referenciado por la expresi&amp;oacute;n del programa constructor.prototype, y las propiedades agregadas al prototipo de un objeto son compartidas, a trav&amp;eacute;s de la herencia, por todos los objetos que comparten el prototipo.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="01451870ffb5f84c932aff7254e4b327acf46f35" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;An object structure is represented as a pair of curly brackets surrounding zero or more name/value pairs (or members).  A name is a
string.  A single colon comes after each name, separating the name from the value.  A single comma separates a value from a following
name.  The names within an object SHOULD be unique.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una estructura de objeto se representa como un par de llaves entre cero o m&amp;aacute;s pares de nombre / valor (o miembros). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un nombre es una cadena. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Despu&amp;eacute;s de cada nombre, aparecen dos puntos, separando el nombre del valor. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una sola coma separa un valor del siguiente nombre. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los nombres dentro de un objeto DEBEN ser &amp;uacute;nicos.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="709a512c7cfd391ee4150b042a68fa79c06f9915" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ECMAScript has grown to be one of the world's most widely used general purpose programming languages. It is best known as the language embedded in web browsers but has also been widely adopted for server and embedded applications.&lt;/em&gt;&lt;strong&gt;&lt;em&gt;ECMAScript is based on several originating technologies, the most well-known being &lt;code&gt;JavaScript&lt;/code&gt; (Netscape Communications)) and &lt;code&gt;JScript&lt;/code&gt; (Microsoft Corporation).)&lt;/em&gt;&lt;/strong&gt;. &lt;em&gt;Though before 1994, ECMA was known as &quot;European Computer Manufacturers Association&quot;, after 1994, when the organization became global, the &quot;trademark&quot; &quot;Ecma&quot; was kept for historical reasons.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript se ha convertido en uno de los lenguajes de programaci&amp;oacute;n de prop&amp;oacute;sito general m&amp;aacute;s utilizados en el mundo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es mejor conocido como el lenguaje integrado en los navegadores web, pero tambi&amp;eacute;n se ha adoptado ampliamente para servidores y aplicaciones integradas. &lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript se basa en varias tecnolog&amp;iacute;as de origen, la m&amp;aacute;s conocida es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JavaScript&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (Netscape Communications) y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JScript&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (Microsoft Corporation)&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aunque antes de 1994, ECMA era conocida como &quot;Asociaci&amp;oacute;n Europea de Fabricantes de Computadoras&quot;, despu&amp;eacute;s de 1994, cuando la organizaci&amp;oacute;n se volvi&amp;oacute; global, la &quot;marca registrada&quot; &quot;Ecma&quot; se mantuvo por razones hist&amp;oacute;ricas.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a509c04fea8f787d43e64c5ced4af9cc64bbc07e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ECMAScript supports prototype-based inheritance. Every constructor has an associated prototype, and every object created by that constructor has an implicit reference to the prototype (called the object&amp;rsquo;s
prototype) associated with its constructor. Furthermore, a prototype may have a non-null implicit reference to its prototype, and so on; this is called the prototype chain.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript admite herencia basada en prototipos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cada constructor tiene un prototipo asociado, y cada objeto creado por ese constructor tiene una referencia impl&amp;iacute;cita al prototipo (llamado prototipo del objeto) asociado con su constructor. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s, un prototipo puede tener una referencia impl&amp;iacute;cita no nula a su prototipo, y as&amp;iacute; sucesivamente; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto se llama la cadena prototipo.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="51eee29b7dc8c953939c480851c1a8c1e5f62923" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;In a class-based object-oriented language, in general, state is carried by instances, methods are carried by classes, and inheritance is only of structure and behavior. In ECMAScript, the state and methods are carried by objects, and structure, behavior, and state are all inherited.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En un lenguaje orientado a objetos basado en clases, en general, el estado es llevado por instancias, los m&amp;eacute;todos son llevados por clases, y la herencia es solo de estructura y comportamiento. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En ECMAScript, el estado y los m&amp;eacute;todos son transportados por objetos, y la estructura, el comportamiento y el estado se heredan.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dfa3b74658971fed6e220fb01a75c1449b949971" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;JSON has been widely adopted by people who found that it made it a lot easier to produce distributed applications and services. The official Internet media type for JSON is &lt;code&gt;application/json&lt;/code&gt; &lt;strong&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/rfc4627/?include_text=1&quot;&gt;&lt;code&gt;RFC 4627&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;. JSON filenames use the extension &lt;code&gt;.json&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON ha sido ampliamente adoptado por personas que descubrieron que facilitaba mucho la producci&amp;oacute;n de aplicaciones y servicios distribuidos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El tipo de medio oficial de Internet para JSON es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;application/json&lt;/code&gt; &lt;strong&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/rfc4627/?include_text=1&quot;&gt; &lt;code&gt;RFC 4627&lt;/code&gt; &lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los nombres de archivo JSON usan la extensi&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.json&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f487b7f22937be722e6e4616e852509a89484d3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;JavaScript is a dynamically typed language. That means you don't have to specify the data type of a variable when you declare it, and data types are converted automatically as needed during script execution.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript es un lenguaje de tipo din&amp;aacute;mico. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Eso significa que no tiene que especificar el tipo de datos de una variable cuando la declara, y los tipos de datos se convierten autom&amp;aacute;ticamente seg&amp;uacute;n sea necesario durante la ejecuci&amp;oacute;n del script.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3100dcba5d2bf675a2e73f36a039f44a25a212ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;          ECMA-262        &lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;          ECMA-262        &lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb9df7b576a710607277e85c7eb505675d4e90bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt; Links &lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt; Links &lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4168878b06eaa6917a0f012585506612f5054ea6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="27f14011d570149605ea11581954595c80d1cf1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Javascript build in &lt;code&gt;JSON&lt;/code&gt; object:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Creaci&amp;oacute;n de Javascript en &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="570ecf326fa1bdc9078e16b2bf2d0d3db6b0816d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Main differences:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Principales diferencias:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2eb2b15cc634ac10f6aa4a5ed7dd4aca5fb42bb6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE &amp;laquo;&lt;/strong&gt;&lt;a href=&quot;https://www.ecma-international.org/activities/Languages/Language%20overview.pdf&quot;&gt;4th edition&lt;/a&gt; of ECMAScript not &lt;a href=&quot;https://stackoverflow.com/a/2329662/5081877&quot;&gt;published as the work was incomplete&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NOTA &amp;laquo;La &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;a href=&quot;https://www.ecma-international.org/activities/Languages/Language%20overview.pdf&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cuarta edici&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de ECMAScript no se &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/2329662/5081877&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;public&amp;oacute; porque el trabajo estaba incompleto&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8d9f7d0a930e03077baedc0713243adfe7567169" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Only because object literals and JSON look &lt;em&gt;similar&lt;/em&gt;, it does not mean that you can name them interchangeably.&lt;/strong&gt; See also &lt;a href=&quot;http://benalman.com/news/2010/03/theres-no-such-thing-as-a-json/&quot;&gt;There's no such thing as a &quot;JSON Object&quot;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;S&amp;oacute;lo porque literales de objetos y JSON se ven &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;similares&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que no quiere decir que usted puede nombrar indistintamente. &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Consulte tambi&amp;eacute;n &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://benalman.com/news/2010/03/theres-no-such-thing-as-a-json/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No existe tal cosa como un &quot;Objeto JSON&quot;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="68bb085830767b5a8941c960dbcb039255762042" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Really?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Really?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f3f469121377693ebd78f419b0bda33954250c60" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is a JSON object:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Este es un objeto JSON:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="424aca9775abf43fcf8bf4725036f20955cfb665" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;begin-object&lt;/strong&gt;    = ws %x7B ws  ; { left curly bracket</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;begin-object&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; = ws% x7B ws; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;{soporte rizado izquierdo&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b877d10564346e41f92ce6ff2282199d8eaecaa3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;end-object&lt;/strong&gt;      = ws %x7D ws  ; } right curly bracket</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto final&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; = ws% x7D ws; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;} corchete derecho&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4b6ec665a13b788333206ccf20bb97d058616313" translate="yes" xml:space="preserve">
          <source>A JSON value MUST be an &lt;strong&gt;object&lt;/strong&gt;, array, number, or string, or one of
the following three literal names: false null true</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un valor JSON DEBE ser un &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , matriz, n&amp;uacute;mero o cadena, o uno de los siguientes tres nombres literales: falso nulo verdadero&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c69b643d782ac96d7358aa08b6488693948fdc4c" translate="yes" xml:space="preserve">
          <source>A string is a sequence of zero or more characters wrapped in quotes with backslash escapement, the same notation used in most programming languages.</source>
          <target state="translated">Una cadena es una secuencia de cero o más caracteres envueltos en comillas con escape de barra invertida,la misma notación utilizada en la mayoría de los lenguajes de programación.</target>
        </trans-unit>
        <trans-unit id="c37d33248b4de99fdc53e360fc1a0c878321e1c7" translate="yes" xml:space="preserve">
          <source>According to &lt;a href=&quot;http://www.json.org/js.html&quot;&gt;JSON in JavaScript&lt;/a&gt;,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De acuerdo con &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.json.org/js.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON en JavaScript&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ,&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="180bd53f01d1e80399276495650a73aa3910a0c6" translate="yes" xml:space="preserve">
          <source>According to a JavaScript book it says this is an object defined by using &lt;em&gt;Object Notation&lt;/em&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Seg&amp;uacute;n un libro de JavaScript, dice que este es un objeto definido mediante la &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;notaci&amp;oacute;n de objetos&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77a2aaf651b70eaf2a18f4ebaa2775bd9de26c42" translate="yes" xml:space="preserve">
          <source>All object keys in JSON must be strings. In Javascript object keys can be strings or numbers</source>
          <target state="translated">Todas las claves de objetos en JSON deben ser cuerdas.En Javascript las claves de objeto pueden ser cadenas o números</target>
        </trans-unit>
        <trans-unit id="1aff94b488aeb143135dbac12cc34cdd283f607b" translate="yes" xml:space="preserve">
          <source>All strings in JSON must be quoted in &quot;double quotes&quot;. Whereas in Javascript both single quotes and double quotes are allowed. Even with no quotes in the Javascript object notation the object keys are implicitly casted to strings.</source>
          <target state="translated">Todas las cuerdas de JSON deben ser citadas entre &quot;comillas&quot;.Mientras que en Javascript se permiten tanto las comillas simples como las dobles.Incluso sin las comillas en la notación de objeto de Javascript las claves de objeto están implícitas en las cadenas.</target>
        </trans-unit>
        <trans-unit id="6d2216c6f68318495c0342b1b5b07c14bc1ded7f" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;object&lt;/strong&gt; is an unordered collection of zero or more name/value
pairs, where a name is a string and a value is a string, number,
boolean, null, &lt;strong&gt;object&lt;/strong&gt;, or array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una colecci&amp;oacute;n desordenada de cero o m&amp;aacute;s pares de nombre / valor, donde un nombre es una cadena y un valor es una cadena, n&amp;uacute;mero, booleano, nulo, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o matriz.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e7bf2ca84b1d5b25435142fb3644827dbd0fa9b0" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;object&lt;/strong&gt; structure is represented as a pair of curly brackets</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;estructura de &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se representa como un par de llaves&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b8630dd643543402418cd61a5d75ba82a1f16972" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;object&lt;/strong&gt; whose names are all unique is interoperable in the sense
that all software implementations receiving that &lt;strong&gt;object&lt;/strong&gt; will agree on
the name-value mappings.  When the names within an &lt;strong&gt;object&lt;/strong&gt; are not
unique, the behavior of software that receives such an &lt;strong&gt;object&lt;/strong&gt; is
unpredictable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cuyos nombres son todos &amp;uacute;nicos es interoperable en el sentido de que todas las implementaciones de software que reciben ese &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; estar&amp;aacute;n de acuerdo en las asignaciones de nombre-valor. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando los nombres dentro de un &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no son &amp;uacute;nicos, el comportamiento del software que recibe dicho &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es impredecible.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4b353746deb01182466b2b2acc7244be28c5e2f9" translate="yes" xml:space="preserve">
          <source>As a counter example, Python has the concept of &lt;em&gt;tuples&lt;/em&gt;, their syntax is &lt;code&gt;(x, y)&lt;/code&gt;. JavaScript doesn't have something like this.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como contraejemplo, Python tiene el concepto de &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tuplas&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , su sintaxis es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(x, y)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript no tiene algo como esto.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a5f4cc7dc672379f53c8d58bfb07dd4a83debd8d" translate="yes" xml:space="preserve">
          <source>As a result we have a simpler and more standardized objects which suits better on data-exchange between platforms.</source>
          <target state="translated">Como resultado tenemos un objeto más simple y estandarizado que se adapta mejor al intercambio de datos entre plataformas.</target>
        </trans-unit>
        <trans-unit id="147f040cb7aeb9f7948cc1745dbfc0304fddb6f2" translate="yes" xml:space="preserve">
          <source>As far as I understand the main difference is the &lt;strong&gt;&lt;em&gt;flexibility&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hasta donde entiendo, la principal diferencia es la &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;flexibilidad&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b20c2923fd8241b403eda637772caa510a58436e" translate="yes" xml:space="preserve">
          <source>But most importantly, to repeat my explanation from the beginning: You are in a JavaScript context. You define a JavaScript object. If any, a &quot;JSON object&quot; can only be contained in a string:</source>
          <target state="translated">Pero lo más importante es repetir mi explicación desde el principio:Usted está en un contexto de JavaScript.Usted define un objeto de JavaScript.Si lo hay,un &quot;objeto JSON&quot; sólo puede estar contenido en una cadena:</target>
        </trans-unit>
        <trans-unit id="5a3b493fa8cb5deb979529ea96f7a8150df8f16f" translate="yes" xml:space="preserve">
          <source>Can someone tell me what is the main difference between a JavaScript object defined by using &lt;em&gt;Object Literal Notation&lt;/em&gt; and &lt;em&gt;JSON object&lt;/em&gt;?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Alguien puede decirme cu&amp;aacute;l es la principal diferencia entre un objeto JavaScript definido mediante &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la notaci&amp;oacute;n literal de objetos&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y el &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto JSON&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4cb243a33ade513ecc3a35fdcd538989344e1772" translate="yes" xml:space="preserve">
          <source>Check with this code &lt;code&gt;{ &quot;Hai\&quot; \n Team 🔫&quot;:5, &quot;Bye \'&quot;: 7 }&lt;/code&gt; over online JSON Edtions. &lt;code&gt;Modes&lt;/code&gt;&lt;a href=&quot;http://www.jsoneditoronline.org/?id=14c0acaf4e147250022deaa3834e7bd9&quot;&gt;&lt;code&gt;notStrict&lt;/code&gt;&lt;/a&gt;&lt;code&gt;,&lt;/code&gt;&lt;a href=&quot;http://json.parser.online.fr/&quot;&gt;&lt;code&gt;Strinct&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Verifique con este c&amp;oacute;digo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{ &quot;Hai\&quot; \n Team 🔫&quot;:5, &quot;Bye \'&quot;: 7 }&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; sobre las ediciones JSON en l&amp;iacute;nea. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Modes&lt;/code&gt; &lt;a href=&quot;http://www.jsoneditoronline.org/?id=14c0acaf4e147250022deaa3834e7bd9&quot;&gt; &lt;code&gt;notStrict&lt;/code&gt; &lt;/a&gt; &lt;code&gt;,&lt;/code&gt; &lt;a href=&quot;http://json.parser.online.fr/&quot;&gt; &lt;code&gt;Strinct&lt;/code&gt; &lt;/a&gt; &lt;code&gt;.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="238b45c702902f20460d7266988b4b697877ff77" translate="yes" xml:space="preserve">
          <source>Data can be stored in many ways, but if it should be stored in a text file and be readable by a computer, it needs to follow some structure. JSON is one of the many formats that define such a structure.</source>
          <target state="translated">Los datos pueden almacenarse de muchas maneras,pero si deben almacenarse en un archivo de texto y ser legibles por una computadora,deben seguir alguna estructura.JSON es uno de los muchos formatos que definen tal estructura.</target>
        </trans-unit>
        <trans-unit id="6904ec3cd1e27c4d394671596dbe56927888ce1b" translate="yes" xml:space="preserve">
          <source>Dialects have been derived from the same language. They are are quite similar to each other as they have been derived from the same language but they have undergone some changes.
  A dialect is a variation in the language itself. It is derived from a single language.</source>
          <target state="translated">Los dialectos se han derivado de la misma lengua.Son bastante similares entre sí ya que se han derivado del mismo idioma pero han sufrido algunos cambios.Un dialecto es una variación de la propia lengua.Se deriva de un solo idioma.</target>
        </trans-unit>
        <trans-unit id="1214da531dfd47b60c59dea8aa1269b43fb4e6ec" translate="yes" xml:space="preserve">
          <source>Duplicate keys (&lt;code&gt;{&quot;foo&quot;:&quot;bar&quot;,&quot;foo&quot;:&quot;baz&quot;}&lt;/code&gt;) produce undefined, implementation-specific results; the JSON specification specifically does not define their semantics</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las claves duplicadas ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{&quot;foo&quot;:&quot;bar&quot;,&quot;foo&quot;:&quot;baz&quot;}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) producen resultados indefinidos espec&amp;iacute;ficos de la implementaci&amp;oacute;n; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la especificaci&amp;oacute;n JSON espec&amp;iacute;ficamente no define su sem&amp;aacute;ntica&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="342d9e3d27519cc4a54693fb4929c95788966ce3" translate="yes" xml:space="preserve">
          <source>Duplicate keys produce defined, specified results (in loose mode, the latter definition replaces the former; in strict mode, it's an error).</source>
          <target state="translated">Las claves duplicadas producen resultados definidos y especificados (en modo suelto,la última definición reemplaza a la primera;en modo estricto,es un error).</target>
        </trans-unit>
        <trans-unit id="c35dd99c7650d12bf824b720ab168d32dc24e652" translate="yes" xml:space="preserve">
          <source>ECMAScript is the language, whereas JavaScript, JScript, and even ActionScript are called &lt;strong&gt;&lt;code&gt;&quot;Dialects&quot;&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript es el lenguaje, mientras que JavaScript, JScript e incluso ActionScript se denominan &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;&quot;Dialects&quot;&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2aff3e3eb1f1e6dbbe1203d3a53f3f921c472582" translate="yes" xml:space="preserve">
          <source>ECMAScript is the scripting language that forms the basis of JavaScript. &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt;&lt;code&gt;JavaScript&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Language_Resources&quot;&gt;&lt;code&gt;language resources&lt;/code&gt;&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript es el lenguaje de secuencias de comandos que forma la base de JavaScript. &lt;/font&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Language_Resources&quot;&gt; &lt;code&gt;language resources&lt;/code&gt; &lt;/a&gt;&lt;/strong&gt;&lt;/font&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt; &lt;code&gt;JavaScript&lt;/code&gt; &lt;/a&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5e39039edf00d8f6af617681f04f247a70d6c3b8" translate="yes" xml:space="preserve">
          <source>Example of JSON:</source>
          <target state="translated">Ejemplo de JSON:</target>
        </trans-unit>
        <trans-unit id="9def3063a6e64258a8ad2b3cbce234b1e486c820" translate="yes" xml:space="preserve">
          <source>Examples (from page 12 of RFC)</source>
          <target state="translated">Ejemplos (de la página 12 de RFC)</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Ampliar fragmento</target>
        </trans-unit>
        <trans-unit id="c56414af143a248bb1a18b4a2c6a9dc6163cdcc5" translate="yes" xml:space="preserve">
          <source>Extracts from &lt;a href=&quot;https://tools.ietf.org/html/rfc7159&quot;&gt;https://tools.ietf.org/html/rfc7159&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Extractos de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7159&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://tools.ietf.org/html/rfc7159&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="81f16889f8212dde57fc5da3e53035d894bdc94e" translate="yes" xml:space="preserve">
          <source>First you should know what JSON is:</source>
          <target state="translated">Primero debes saber qué es JSON:</target>
        </trans-unit>
        <trans-unit id="5e84af1bc0f4a97fe4da6f7c0d3d529cd9e2b910" translate="yes" xml:space="preserve">
          <source>For example, in JSON all keys must be quoted, while in object literals this is not necessary:</source>
          <target state="translated">Por ejemplo,en JSON todas las claves deben ser citadas,mientras que en los literales de los objetos esto no es necesario:</target>
        </trans-unit>
        <trans-unit id="1184d8e92b5bd8511a4dd00d86aaedb53022fe97" translate="yes" xml:space="preserve">
          <source>For the ones who still think that RFC are more important than blogs and opinion based misconceptions, let's try to answer clarifying some points.
I'm not going to repeat all the correct differences already mentioned in previous answers, here I'm just trying adding value summarizing some crucial part rfc7159</source>
          <target state="translated">Para los que todavía piensan que los RFC son más importantes que los blogs y las ideas erróneas basadas en la opinión,tratemos de responder aclarando algunos puntos.No voy a repetir todas las diferencias correctas ya mencionadas en respuestas anteriores,aquí sólo estoy tratando de agregar valor resumiendo alguna parte crucial rfc7159</target>
        </trans-unit>
        <trans-unit id="bfe97df8921056d70dd41cc616f07cc90a30e2a6" translate="yes" xml:space="preserve">
          <source>Furthermore, (side-rant...) when people talk about a &quot;JSON Object&quot;, they almost always mean data that has the &quot;curly-braces&quot; at the top-level.  This corresponds nicely to a javascript object.  However, the JSON spec does not require that there be a single &quot;curly-braces&quot; object at the top-level of a JSON string.  It is perfectly valid JSON to have a list at the top-level, or even to have just a single value.  So, while every &quot;JSON Object&quot; corresponds to valid JSON, not all valid JSON strings correspond to what we would call a &quot;JSON Object&quot;! ( because the string could represent a list or an atomic value )</source>
          <target state="translated">Además,cuando la gente habla de un &quot;Objeto JSON&quot;,casi siempre se refieren a datos que tienen los &quot;rizos&quot; en el nivel superior.Esto corresponde muy bien a un objeto javascript.Sin embargo,la especificación JSON no requiere que haya un solo objeto &quot;rizado&quot; en el nivel superior de una cadena JSON.Es perfectamente válido para JSON tener una lista en el nivel superior,o incluso tener un solo valor.Así que,mientras que cada &quot;Objeto JSON&quot; corresponde a un JSON válido,no todas las cadenas JSON válidas corresponden a lo que llamaríamos un &quot;Objeto JSON&quot;!(porque la cadena podría representar una lista o un valor atómico )</target>
        </trans-unit>
        <trans-unit id="91e214f61d56708544f987f01aaf2beaba1bb736" translate="yes" xml:space="preserve">
          <source>Here is one surprising difference: you can not use &lt;code&gt;undefined&lt;/code&gt; in json and all object fields with undefined values will disappear after &lt;code&gt;JSON.stringify&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; hay una sorprendente diferencia: no puede usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en json y todos los campos de objetos con valores indefinidos desaparecer&amp;aacute;n despu&amp;eacute;s de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.stringify&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f951bca423bbdc6b94390f76da80924cb5903a74" translate="yes" xml:space="preserve">
          <source>In JSON a function cannot be defined as a value of an object (since this is Javascript specific). In Javascript this is completely legal.</source>
          <target state="translated">En JSON una función no puede ser definida como un valor de un objeto (ya que esto es específico de Javascript).En Javascript esto es completamente legal.</target>
        </trans-unit>
        <trans-unit id="23b37de353d55037c1ef47caa24b1e0f5338d2b9" translate="yes" xml:space="preserve">
          <source>In JavaScript, object literals can have</source>
          <target state="translated">En JavaScript,los literales de los objetos pueden tener</target>
        </trans-unit>
        <trans-unit id="581428cac78d7efa94e581000e6d02bb6f913cb2" translate="yes" xml:space="preserve">
          <source>In addition to reading the &lt;a href=&quot;http://www.json.org/&quot;&gt;documentation&lt;/a&gt;, as @Filix King suggested, I also suggest playing around with the &lt;a href=&quot;http://www.jsonlint.com/&quot;&gt;JSONLint online JSON validator&lt;/a&gt;. That's how I learned that the keys of JSON objects must be strings.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s de leer la &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.json.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;documentaci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , como sugiri&amp;oacute; @Filix King, tambi&amp;eacute;n sugiero jugar con el &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.jsonlint.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;validador JSON en l&amp;iacute;nea JSONLint&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;As&amp;iacute; es como aprend&amp;iacute; que las claves de los objetos JSON deben ser cadenas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="48cb239bb52662e6b400d6e30f3922b1ac69a07f" translate="yes" xml:space="preserve">
          <source>In contrast, &lt;em&gt;JavaScript&lt;/em&gt; is a programming language. Of course JavaScript also provides a way to define/describe data, but the syntax is very specific to JavaScript.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por el contrario, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es un lenguaje de programaci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por supuesto, JavaScript tambi&amp;eacute;n proporciona una forma de definir / describir datos, pero la sintaxis es muy espec&amp;iacute;fica de JavaScript.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="699fd329fb25c990309482a62eb55fb8b1ca77e9" translate="yes" xml:space="preserve">
          <source>In other words, valid JSON is also valid JavaScript object literal notation but not necessarily the other way around.</source>
          <target state="translated">En otras palabras,JSON válido es también una notación literal de objeto de JavaScript válida,pero no necesariamente al revés.</target>
        </trans-unit>
        <trans-unit id="c8cdb306b788ef51486955aa4ada6840c2e72976" translate="yes" xml:space="preserve">
          <source>Information about the browser and computer of your users.</source>
          <target state="translated">Información sobre el navegador y la computadora de sus usuarios.</target>
        </trans-unit>
        <trans-unit id="4014fecc71d912e2ee2fc1b4edeeb5c10f2dcc4e" translate="yes" xml:space="preserve">
          <source>It is language agnostic data-interchange format.
The syntax of JSON was inspired by the JavaScript Object Literal notation, but there are differences between them.</source>
          <target state="translated">Es un formato de intercambio de datos agnósticos del lenguaje.La sintaxis de JSON se inspiró en la notación literal de objetos de JavaScript,pero hay diferencias entre ellos.</target>
        </trans-unit>
        <trans-unit id="50edc4c808537192620a2b06ec34bcb4059b04ea" translate="yes" xml:space="preserve">
          <source>Its Image member is an &lt;strong&gt;object&lt;/strong&gt; whose Thumbnail member is an &lt;strong&gt;object&lt;/strong&gt; and
whose IDs member is an array of numbers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Su miembro Image es un &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cuyo miembro Thumbnail es un &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y cuyo miembro ID es una matriz de n&amp;uacute;meros.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="540de327f9fe111c4bd020ca54fefab757d85033" translate="yes" xml:space="preserve">
          <source>JS object notation, used in JS to create objects in the code conveniently:</source>
          <target state="translated">La notación de objetos JS,usada en JS para crear objetos en el código convenientemente:</target>
        </trans-unit>
        <trans-unit id="f384fd52ff795101c1d6c496d884cf953459abb0" translate="yes" xml:space="preserve">
          <source>JSON can represent four primitive types (strings, numbers, booleans,
and null) and two structured types (&lt;strong&gt;objects&lt;/strong&gt; and arrays).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON puede representar cuatro tipos primitivos (cadenas, n&amp;uacute;meros, booleanos y nulos) y dos tipos estructurados ( &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y matrices).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="917a5ef8b2cef69c70821602350dbba4263f39f6" translate="yes" xml:space="preserve">
          <source>JSON defines a small set of formatting rules for the portable representation of structured data.</source>
          <target state="translated">JSON define un pequeño conjunto de reglas de formato para la representación portátil de datos estructurados.</target>
        </trans-unit>
        <trans-unit id="58f50956057cd2113a7ae567bf1b69d2bdd10761" translate="yes" xml:space="preserve">
          <source>JSON has the following syntactical constraints:</source>
          <target state="translated">JSON tiene las siguientes restricciones sintácticas:</target>
        </trans-unit>
        <trans-unit id="ac14844d25187a9ab85f707289c449a9f1cff379" translate="yes" xml:space="preserve">
          <source>JSON is a &lt;a href=&quot;http://en.wikipedia.org/wiki/Subset&quot;&gt;subset&lt;/a&gt; of the object
  literal notation of JavaScript.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON es un &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Subset&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;subconjunto&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de la notaci&amp;oacute;n literal de objetos de JavaScript.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b00cf9f526adffff3af5096a53d9049cbfbcaa39" translate="yes" xml:space="preserve">
          <source>JSON is a kind of wrapper on &quot;JavaScript Object Notation&quot; which forces users to obey more strict rules for defining the objects. And it does this by limiting the possible object declaration ways provided by JavaScript Object Notation feature.</source>
          <target state="translated">JSON es una especie de envoltura en &quot;JavaScript Object Notation&quot; que obliga a los usuarios a obedecer reglas más estrictas para definir los objetos.Y lo hace limitando las posibles formas de declaración de objetos que ofrece la función de Notación de Objetos en JavaScript.</target>
        </trans-unit>
        <trans-unit id="eb5dbf7f8d8e957d355980ca5ba24afe356659c5" translate="yes" xml:space="preserve">
          <source>JSON.parse accepts a String that conforms to the JSON grammar.</source>
          <target state="translated">JSON.parse acepta un String que se ajusta a la gramática JSON.</target>
        </trans-unit>
        <trans-unit id="9a657ed8680a8baee579ef04ab8db8481112c182" translate="yes" xml:space="preserve">
          <source>JSON.stringify produces a String that conforms to the following JSON grammar.</source>
          <target state="translated">JSON.stringify produce un String que se ajusta a la siguiente gramática JSON.</target>
        </trans-unit>
        <trans-unit id="58d11c6ded11139b96abc98894c3a3947a260d49" translate="yes" xml:space="preserve">
          <source>JavaScript &lt;strong&gt;Object&lt;/strong&gt; Notation (JSON) is a text format for the
serialization of structured data.  It is derived from the &lt;strong&gt;object&lt;/strong&gt;
literals of JavaScript, as defined in the ECMAScript Programming
Language Standard, Third Edition [ECMA-262].</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; notaci&amp;oacute;n de &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; JavaScript &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(JSON) es un formato de texto para la serializaci&amp;oacute;n de datos estructurados. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se deriva de los &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; literales de &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de JavaScript, como se define en el Est&amp;aacute;ndar del lenguaje de programaci&amp;oacute;n ECMAScript, tercera edici&amp;oacute;n [ECMA-262].&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c1d584a6fe74b88d75941b0f10057cf17d06de8" translate="yes" xml:space="preserve">
          <source>Javascript Object Literal vs JSON:</source>
          <target state="translated">Javascript Object Literal vs JSON:</target>
        </trans-unit>
        <trans-unit id="2012fcecc3d000b7d011678e2573b07949409297" translate="yes" xml:space="preserve">
          <source>Key values must be quoted</source>
          <target state="translated">Los valores clave deben ser citados</target>
        </trans-unit>
        <trans-unit id="0308b55bb8406978edd0f4d91f979ce404c61147" translate="yes" xml:space="preserve">
          <source>Knowing that, just by looking at the &lt;em&gt;syntax&lt;/em&gt;, your example is not JSON because of two reasons:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sabiendo que, simplemente mirando la &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;sintaxis&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , su ejemplo no es JSON debido a dos razones:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="809b9adb102cc5aaff52310a4ddefc9722ce4709" translate="yes" xml:space="preserve">
          <source>Lets clarify first what &lt;a href=&quot;http://www.json.org/&quot;&gt;&lt;em&gt;JSON&lt;/em&gt;&lt;/a&gt; actually is. JSON is a &lt;em&gt;textual&lt;/em&gt;, language-independent data-exchange format, much like XML, CSV or YAML.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vamos a aclarar primero qu&amp;eacute; es &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.json.org/&quot;&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON en&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; realidad. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON es un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;formato de intercambio de datos &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;textual&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; e independiente del idioma, muy parecido a XML, CSV o YAML.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0743b2794b21b091ce583ea18d2549e0d93c1a7b" translate="yes" xml:space="preserve">
          <source>Lets look at the syntactical differences between JSON and JavaScript object literals.</source>
          <target state="translated">Veamos las diferencias sintácticas entre los literales de los objetos JSON y JavaScript.</target>
        </trans-unit>
        <trans-unit id="2a60485ade4296ddcd6449fb49e6061b9dd4bda9" translate="yes" xml:space="preserve">
          <source>Literals are fixed values, not variables, that you literally provide in your script.</source>
          <target state="translated">Los literales son valores fijos,no variables,que literalmente provees en tu guión.</target>
        </trans-unit>
        <trans-unit id="769f781b2775ce00e09b68b8de21776f404508c8" translate="yes" xml:space="preserve">
          <source>Object &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Property_Accessors&quot;&gt;Property accessors&lt;/a&gt;  provide access to an object's properties by using the dot notation or the bracket notation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los accesores de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Property_Accessors&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedades de&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; objeto &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; proporcionan acceso a las propiedades de un objeto mediante la notaci&amp;oacute;n de puntos o la notaci&amp;oacute;n de corchetes.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa9576abdd317dfc7abc4850edffe0b7390b5db5" translate="yes" xml:space="preserve">
          <source>Object &lt;em&gt;keys&lt;/em&gt; must be &lt;strong&gt;strings&lt;/strong&gt; (i.e. a character sequence enclosed in double quotes &lt;code&gt;&quot;&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;claves de&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; objeto &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;deben ser &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cadenas&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (es decir, una secuencia de caracteres entre comillas dobles &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fc4fd09957b2108d6ebc1a56e022f26e68d85cb9" translate="yes" xml:space="preserve">
          <source>Object literal syntax is a very convenient way to create javascript objects</source>
          <target state="translated">La sintaxis literal de los objetos es una forma muy conveniente de crear objetos de javascript</target>
        </trans-unit>
        <trans-unit id="75daecdd17b61c4b33a541077f6bb4e09d3c6816" translate="yes" xml:space="preserve">
          <source>SQL Language - Hibernate MySQL Dialect, Oracle Dialect,.. which have some changes or added functionality.</source>
          <target state="translated">Lenguaje SQL-Hibernar el dialecto de MySQL,el dialecto de Oracle...que tienen algunos cambios o funcionalidades añadidas.</target>
        </trans-unit>
        <trans-unit id="8b414c4c0bf270da7e849e79f3290fda4dffdea2" translate="yes" xml:space="preserve">
          <source>So basically, the newObject in my example above is an object defined by using JavaScript Objeect Notation; but it is not a 'valid' JSON object because it does not follow the rules that JSON standards require.</source>
          <target state="translated">Así que básicamente,el nuevoObjeto de mi ejemplo anterior es un objeto definido mediante el uso de la Notación de Objeto de JavaScript;pero no es un objeto JSON &quot;válido&quot; porque no sigue las reglas que los estándares JSON requieren.</target>
        </trans-unit>
        <trans-unit id="57c5499f600ca7aafec6a54e1a3e6a2095963944" translate="yes" xml:space="preserve">
          <source>String literals, number literals or identifier names as keys (since ES6, keys can now also be computed, which introduces yet another syntax).</source>
          <target state="translated">Literales de cadenas,literales de números o nombres de identificadores como claves (desde ES6,las claves ahora también pueden ser computadas,lo que introduce otra sintaxis).</target>
        </trans-unit>
        <trans-unit id="508d962310fe84b9f6f496ee80ae6e92d57b1c7d" translate="yes" xml:space="preserve">
          <source>Strings must be quoted with &lt;code&gt;&quot;&lt;/code&gt; and not &lt;code&gt;'&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las cadenas se deben citar con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y no &lt;/font&gt;&lt;/font&gt; &lt;code&gt;'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e0c81c16a30e607c4eeea45fc113a857208285a4" translate="yes" xml:space="preserve">
          <source>Such formats are typically language-independent, meaning they can be processed by Java, Python, JavaScript, PHP, you name it.</source>
          <target state="translated">Estos formatos son típicamente independientes del lenguaje,lo que significa que pueden ser procesados por Java,Python,JavaScript,PHP,lo que sea.</target>
        </trans-unit>
        <trans-unit id="02e1d2094b0f27b2c154c92bc14a0c5ccf76f251" translate="yes" xml:space="preserve">
          <source>That is, if you're writing JavaScript source code, and not dealing with a &lt;em&gt;string&lt;/em&gt;, you're not dealing with JSON. Maybe you received the data as JSON (e.g., via ajax or reading from a file), but once you or a library you're using has parsed it, it's not JSON anymore.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es decir, si est&amp;aacute; escribiendo el c&amp;oacute;digo fuente de JavaScript y no est&amp;aacute; tratando con una &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cadena&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , no est&amp;aacute; tratando con JSON. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tal vez recibi&amp;oacute; los datos como JSON (por ejemplo, a trav&amp;eacute;s de ajax o leyendo un archivo), pero una vez que usted o la biblioteca que est&amp;aacute; utilizando lo ha analizado, ya no es JSON.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc74028c269be97797adeff928c8732a8ae9995b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JSON&lt;/code&gt; language, which stands for 'Javascript object notation', has its syntax derived from javascript object literal syntax. It is used as a programming language independent textual data transfer format.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lenguaje &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que significa 'notaci&amp;oacute;n de objeto Javascript', tiene su sintaxis derivada de la sintaxis literal del objeto javascript. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se utiliza como un lenguaje de programaci&amp;oacute;n independiente del formato de transferencia de datos textuales.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d4e10fd99aa298a7a469345f57f40ed3fe623262" translate="yes" xml:space="preserve">
          <source>The JSON object is a single object that contains two functions, parse and stringify, that are used to parse and construct JSON texts.</source>
          <target state="translated">El objeto JSON es un objeto único que contiene dos funciones,parse y stringify,que se usan para parsear y construir textos JSON.</target>
        </trans-unit>
        <trans-unit id="93b0e3aff87fdf4743e3fb4a4829fbc671386588" translate="yes" xml:space="preserve">
          <source>The JSON spec is a syntax for encoding data as a string.  What people call a &quot;JSON Object&quot; ( in javascript ) is really just an ordinary javascript object that has (probably) been de-serialized from a valid JSON string, and can be easily re-serialized as a valid JSON string.  This generally means that it contains only data ( and not functions ).  It also means that there are no dates, because JSON does not have a date type ( probably the most painful thing about JSON ;)</source>
          <target state="translated">El JSON spec es una sintaxis para codificar datos como una cadena.Lo que la gente llama un &quot;Objeto JSON&quot;(en javascript)es en realidad sólo un objeto javascript ordinario que ha sido (probablemente)des-serializado de una cadena JSON válida,y puede ser fácilmente re-serializado como una cadena JSON válida.Esto generalmente significa que contiene sólo datos(y no funciones ).También significa que no hay fechas,porque JSON no tiene un tipo de fecha(probablemente lo más doloroso de JSON ;)</target>
        </trans-unit>
        <trans-unit id="61757c1d424f2da47e58d71f58ebd9ea839096e7" translate="yes" xml:space="preserve">
          <source>The data types in JSON are also restricted to the following values:</source>
          <target state="translated">Los tipos de datos en JSON también están restringidos a los siguientes valores:</target>
        </trans-unit>
        <trans-unit id="71fa8079f75b9da9e39a23a9e3d1036191a32893" translate="yes" xml:space="preserve">
          <source>The names within an &lt;strong&gt;object&lt;/strong&gt; SHOULD be unique.
  &lt;strong&gt;object&lt;/strong&gt; = &lt;strong&gt;begin-object&lt;/strong&gt; [ member *( value-separator member ) ]
           &lt;strong&gt;end-object&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los nombres dentro de un &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; DEBEN ser &amp;uacute;nicos. &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;object&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; = &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;begin-object&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; [member * (value-separator member)] &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;end-object&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d784512485b6c5e91867853c48171676ca2e5a00" translate="yes" xml:space="preserve">
          <source>The parseJSON method will be included in the &lt;a href=&quot;https://www.ecma-international.org/activities/Languages/Language%20overview.pdf&quot;&gt;&lt;code&gt;Fourth Edition of ECMAScript&lt;/code&gt;&lt;/a&gt;. In the meantime, a JavaScript implementation is available at json.org.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El m&amp;eacute;todo parseJSON se incluir&amp;aacute; en la &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.ecma-international.org/activities/Languages/Language%20overview.pdf&quot;&gt; &lt;code&gt;Fourth Edition of ECMAScript&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mientras tanto, una implementaci&amp;oacute;n de JavaScript est&amp;aacute; disponible en json.org.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de649511949d4cf53e8f16e4a0643a0bf04201c5" translate="yes" xml:space="preserve">
          <source>The values can be any valid JavaScript expression, including function definitions and &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los valores pueden ser cualquier expresi&amp;oacute;n JavaScript v&amp;aacute;lida, incluidas las definiciones de funci&amp;oacute;n y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9761b6c3b2246f9dfec0c02d587dc968a32420b" translate="yes" xml:space="preserve">
          <source>The values can be either:</source>
          <target state="translated">Los valores pueden ser cualquiera de los dos:</target>
        </trans-unit>
        <trans-unit id="453ca2ae5c4898c77aae97325f8503c0951b49c1" translate="yes" xml:space="preserve">
          <source>There is really no such thing as a &quot;JSON Object&quot;.</source>
          <target state="translated">Realmente no existe tal cosa como un &quot;Objeto JSON&quot;.</target>
        </trans-unit>
        <trans-unit id="3c28b85382639a0f0d57cc6a01fdcb5eb7afbf2c" translate="yes" xml:space="preserve">
          <source>This link is also quite helpful:
&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/bb299886.aspx&quot;&gt;http://msdn.microsoft.com/en-us/library/bb299886.aspx&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Este enlace tambi&amp;eacute;n es bastante &amp;uacute;til: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/bb299886.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://msdn.microsoft.com/en-us/library/bb299886.aspx&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc51a6c13ac80744b3997690f5e6273ce1dcf5a7" translate="yes" xml:space="preserve">
          <source>What is the difference between JSON and Object Literal Notation</source>
          <target state="translated">¿Cuál es la diferencia entre JSON y la Notación Literal de Objetos</target>
        </trans-unit>
        <trans-unit id="8a870a281184a768148d5379fd52a98e8b3b28c3" translate="yes" xml:space="preserve">
          <source>Why isn't it a JSON object in this case? Just because it is not defined by using quotation marks?</source>
          <target state="translated">¿Por qué no es un objeto JSON en este caso? ¿Sólo porque no se define entre comillas?</target>
        </trans-unit>
        <trans-unit id="d32497ee58f8e9f70fc59880b8f9385b27a04fe2" translate="yes" xml:space="preserve">
          <source>You cannot assign a function as a value to a &quot;JSON object&quot; (because JSON doesn't define any syntax for functions).</source>
          <target state="translated">No se puede asignar una función como valor a un &quot;objeto JSON&quot; (porque JSON no define ninguna sintaxis para las funciones).</target>
        </trans-unit>
        <trans-unit id="d63d152d38f6695f0e756975648d444cf290b34f" translate="yes" xml:space="preserve">
          <source>You have a more limited range of values (e.g. no functions allowed)</source>
          <target state="translated">Tiene un rango de valores más limitado (por ejemplo,no se permiten funciones)</target>
        </trans-unit>
        <trans-unit id="a627f4c3009fbc53230d3a44ad6154c88090c76e" translate="yes" xml:space="preserve">
          <source>Your keys are not strings (literals). They are &lt;em&gt;identifier names&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sus claves no son cadenas (literales). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Son &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nombres identificadores&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b5e09e5f6bd3ecb7c200897da4452ffe04ffa20" translate="yes" xml:space="preserve">
          <source>\&quot;  - Special characters can be escaped. But not recomended to escape (') Single Quotes.
  In Strict mode it will throw and Error - &lt;code&gt;SyntaxError: Unexpected token ' in JSON&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;\ &quot;- Se pueden escapar caracteres especiales. Pero no se recomienda escapar (') Comillas simples. En modo estricto arrojar&amp;aacute; y Error - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;SyntaxError: Unexpected token ' in JSON&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c37f5d4c24ebe19faceff2fa752f48ced17e4bc7" translate="yes" xml:space="preserve">
          <source>a number</source>
          <target state="translated">un número</target>
        </trans-unit>
        <trans-unit id="555d01e6c83266b3e9f92bd811905370caf62770" translate="yes" xml:space="preserve">
          <source>a string</source>
          <target state="translated">una cuerda</target>
        </trans-unit>
        <trans-unit id="154b7b03c77e9e89b215d8a83545364526bad571" translate="yes" xml:space="preserve">
          <source>an (JSON) object</source>
          <target state="translated">un objeto (JSON)</target>
        </trans-unit>
        <trans-unit id="098f0f62d0fe7ff8be81c4d5f8ab89199776c280" translate="yes" xml:space="preserve">
          <source>an array</source>
          <target state="translated">un conjunto</target>
        </trans-unit>
        <trans-unit id="0a0434658abb519d79582355b4d8c2bb748e205d" translate="yes" xml:space="preserve">
          <source>string
number
object
array
A literal as:
true
false
null
The grammar of Strings changes. They have to be delimited by double quotes, while in JavaScript, you can use single or double quotes interchangeably.</source>
          <target state="translated">número de cadena matriz de objetos A literal como:verdadero falso nulo La gramática de las cadenas cambia.Tienen que ser delimitadas por comillas dobles,mientras que en JavaScript,se pueden usar comillas simples o dobles indistintamente.</target>
        </trans-unit>
        <trans-unit id="4a8be7ccecc206b635133eca205de844aacd9af0" translate="yes" xml:space="preserve">
          <source>var o = { &quot;if&quot;: &quot;foo&quot; }; 
So for &quot;compatibility&quot; (and easy eval'ing maybe?) the quotes are mandatory.</source>
          <target state="translated">var o={&quot;si&quot;:&quot;foo&quot; };Así que para la &quot;compatibilidad&quot; (y fácil evaluación tal vez?)las citas son obligatorias.</target>
        </trans-unit>
        <trans-unit id="92753de84e516bab1dde3ab956c8e46d95a97308" translate="yes" xml:space="preserve">
          <source>var o = { if: &quot;foo&quot; }; // SyntaxError in ES3
While, using a string literal as a property name (quoting the property name) gives no problems:</source>
          <target state="translated">var o={if:&quot;foo&quot; };/SyntaxError en ES3 Mientras que,usar una cadena literal como nombre de propiedad (citando el nombre de la propiedad)no da problemas:</target>
        </trans-unit>
        <trans-unit id="662d49caaa0bf824e42687de59a5844a862d9465" translate="yes" xml:space="preserve">
          <source>► &lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt;&lt;code&gt;JavaScript&lt;/code&gt;&lt;/a&gt; is the most popular implementation of the ECMAScript Standard.
The core features of Javascript are based on the ECMAScript standard,  but Javascript also has other additional features that are not in the ECMA specifications/standard. &lt;strong&gt;Every browser has a JavaScript interpreter.&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;► &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt; &lt;code&gt;JavaScript&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es la implementaci&amp;oacute;n m&amp;aacute;s popular del est&amp;aacute;ndar ECMAScript. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las caracter&amp;iacute;sticas principales de Javascript se basan en el est&amp;aacute;ndar ECMAScript, pero Javascript tambi&amp;eacute;n tiene otras caracter&amp;iacute;sticas adicionales que no est&amp;aacute;n en las especificaciones / est&amp;aacute;ndar de ECMA. &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cada navegador tiene un int&amp;eacute;rprete de JavaScript.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="de0f7614fa05276ee4ab7821b0f2b862a865134a" translate="yes" xml:space="preserve">
          <source>► ECMAScript</source>
          <target state="translated">► ECMAScript</target>
        </trans-unit>
        <trans-unit id="4489fb0e13b61a8f92056c2a46dbc7b665ea19ed" translate="yes" xml:space="preserve">
          <source>► JSON Strings must be quoted with &quot; and not '. A string is very much like a C or Java string. &lt;strong&gt;Strings should be wrapped in double quotes.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;► Las cadenas JSON deben estar entre comillas con &quot;y no '. Una cadena es muy parecida a una cadena C o Java. Las &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cadenas deben estar entre comillas dobles.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6caade8dd0f29aa515b4a6e6a464f03e32bf743e" translate="yes" xml:space="preserve">
          <source>► JavaScript Object Notation (&lt;a href=&quot;http://www.json.org/&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt;) is a lightweight, text-based, language-independent data interchange format. JSON has been used to exchange data between applications written in any Programming language.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;► JavaScript Object Notation ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.json.org/&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) es un formato de intercambio de datos ligero, basado en texto e independiente del idioma. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON se ha utilizado para intercambiar datos entre aplicaciones escritas en cualquier lenguaje de programaci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="38b33f82d8e4baf3bdfb08cb2ac51ec9f4b10265" translate="yes" xml:space="preserve">
          <source>► Key values must be quoted, only Strings are allowed for keys. If you use other than String it will convert to String. But not recommended to use keys other than String's. Check an example like this - &lt;code&gt;{ 'key':'val' }&lt;/code&gt; over &lt;a href=&quot;https://jsonformatter.curiousconcept.com/&quot;&gt;&lt;code&gt;RFC 4627 - jsonformatter&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;► Los valores de las claves se deben citar, solo se permiten cadenas para las claves. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si usa otro que no sea String, se convertir&amp;aacute; en String. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero no se recomienda usar otras teclas que no sean String. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Verifique un ejemplo como este - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{ 'key':'val' }&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; sobre &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://jsonformatter.curiousconcept.com/&quot;&gt; &lt;code&gt;RFC 4627 - jsonformatter&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb610aa022a63def35dc27867d54f314d4a9752b" translate="yes" xml:space="preserve">
          <source>► You have a more limited range of values (e.g. no functions allowed). A value can be a string in double quotes, number, boolean, null, object, or array. These structures can be nested.</source>
          <target state="translated">► Tiene un rango de valores más limitado (por ejemplo,no se permiten funciones).Un valor puede ser una cadena entre comillas dobles,número,booleano,nulo,objeto o matriz.Estas estructuras pueden ser anidadas.</target>
        </trans-unit>
        <trans-unit id="2427ab5d3a1b54c968b18e29978de14ee06718fb" translate="yes" xml:space="preserve">
          <source>🔫  - Special Symbols are allowed in String but not recomended to use.</source>
          <target state="translated">🔫-Se permite el uso de símbolos especiales en las cuerdas pero no se recomienda su uso.</target>
        </trans-unit>
        <trans-unit id="099ba8b6f07a9481b2031e70c8cccbc5852c56de" translate="yes" xml:space="preserve">
          <source>🔫 &lt;strong&gt;&lt;a href=&quot;http://www.json.org/fatfree.html&quot;&gt;JSON&lt;/a&gt;: The Fat-Free Alternative to XML&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;🔫 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;a href=&quot;http://www.json.org/fatfree.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : la alternativa libre de grasa a XML&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a330d08e87f88b749216760dd59350a02bb063c" translate="yes" xml:space="preserve">
          <source>🙈🙉🙊</source>
          <target state="translated">🙈🙉🙊</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
