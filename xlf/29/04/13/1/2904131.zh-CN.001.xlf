<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/2904131">
    <body>
      <group id="2904131">
        <trans-unit id="cb77a0f7fb4547e890705c5d54f1d51a941ec06c" translate="yes" xml:space="preserve">
          <source>// Invalid JSON:
{ &quot;foo&quot;: 'bar' }
The accepted JSON grammar of Numbers also changes, in JavaScript you can use Hexadecimal Literals, for example 0xFF, or (the infamous) Octal Literals e.g. 010. In JSON you can use only Decimal Literals.</source>
          <target state="translated">/无效的JSON:{&quot;foo&quot;:'bar'}JSON 中的数字语法也发生了变化,在 JavaScript 中,你可以使用十六进制字形,例如 0xFF,或者(臭名昭著的)八进制字形,例如 010。而在JSON中,你只能使用十进制字形。</target>
        </trans-unit>
        <trans-unit id="2715a417f7e2c77019e168d2456bf96816271842" translate="yes" xml:space="preserve">
          <source>// Invalid JSON:
{ &quot;foo&quot;: 0xFF }</source>
          <target state="translated">/Invalid JSON:{&quot;foo&quot;:0xFF }</target>
        </trans-unit>
        <trans-unit id="51fefa67d0338b65dceddab7ab5756e41b740dc5" translate="yes" xml:space="preserve">
          <source>// JSON:
{ &quot;foo&quot;: &quot;bar&quot; }</source>
          <target state="translated">/JSON:{&quot;foo&quot;:&quot;bar&quot; }</target>
        </trans-unit>
        <trans-unit id="67cd55aabced81a3304581821212d6c4f0c41b01" translate="yes" xml:space="preserve">
          <source>// Object literal:
var o = { foo: &quot;bar&quot; };
The quotes are mandatory on JSON because in JavaScript (more exactly in ECMAScript 3rd. Edition), the usage of reserved words as property names is disallowed, for example:</source>
          <target state="translated">/Object literal:var o={foo:&quot;bar&quot; };JSON上的引号是强制性的,因为在JavaScript中(更确切地说,在ECMAScript 3rd.版中),不允许使用保留的单词作为属性名,例如:&quot;bar&quot;。</target>
        </trans-unit>
        <trans-unit id="b25c272639233206f886fcb19a0a1404cc24363e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://json.org&quot;&gt;JSON&lt;/a&gt; has a much more limited syntax including:</source>
          <target state="translated">&lt;a href=&quot;http://json.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON的&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;语法非常有限，包括：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cddce47b75381a2922cb521dc1aa20d2dc6f0bf2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Literals&quot;&gt;&lt;code&gt;Literals&lt;/code&gt;&lt;/a&gt; :</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Literals&quot;&gt; &lt;code&gt;Literals&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15357bcb1b10c57d322b65c55072893046b7bf9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Object_literals&quot;&gt;&lt;code&gt;Object literals&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7159#page-6&quot;&gt;&lt;em&gt;&lt;code&gt;RFC 7159&lt;/code&gt;&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Object_literals&quot;&gt; &lt;code&gt;Object literals&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7159#page-6&quot;&gt;&lt;em&gt; &lt;code&gt;RFC 7159&lt;/code&gt; &lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="92d52d371769f6b35ec27bf195a737fa294369a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSON&lt;/code&gt; objects can be easily converted to Javascript and vice versa using the built in &lt;code&gt;JSON&lt;/code&gt; object which Javascript offers in its runtime. For example:</source>
          <target state="translated">&lt;code&gt;JSON&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Javascript在其运行时中提供&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的内置&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以轻松将&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象转换为Javascript，反之亦然&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f7097aaf7c32aee894229aa0858cd492b769fe1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;JSON is subset of JavaScript. &lt;a href=&quot;http://javascript.crockford.com/&quot;&gt;Javascript&lt;/a&gt; was derived from the ECMAScript Programming Language Standard.&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON是JavaScript的子集。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://javascript.crockford.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Javascript&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;源自ECMAScript编程语言标准。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8910d3e4a17ae732661d98a014cde4250f86ddf8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;A prototype is an object used to implement structure, state, and behavior inheritance in ECMAScript. When a constructor creates an object, that object implicitly references the constructor&amp;rsquo;s associated prototype for the purpose of resolving property references. The constructor&amp;rsquo;s associated prototype can
be referenced by the program expression constructor.prototype, and properties added to an object&amp;rsquo;s prototype are shared, through inheritance, by all objects sharing the prototype.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;原型是用于在ECMAScript中实现结构，状态和行为继承的对象。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当构造函数创建对象时，该对象隐式引用构造函数的关联原型，以解决属性引用的问题。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构造表达式的关联原型可以由程序表达式构造器.prototype引用，添加到对象原型的属性可以通过继承由共享原型的所有对象共享。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="01451870ffb5f84c932aff7254e4b327acf46f35" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;An object structure is represented as a pair of curly brackets surrounding zero or more name/value pairs (or members).  A name is a
string.  A single colon comes after each name, separating the name from the value.  A single comma separates a value from a following
name.  The names within an object SHOULD be unique.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象结构表示为一对大括号，包围着零个或多个名称/值对（或成员）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名称是一个字符串。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每个名称后都有一个冒号，将名称与值分开。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;单个逗号将值与后面的名称分开。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象中的名称应唯一。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="709a512c7cfd391ee4150b042a68fa79c06f9915" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ECMAScript has grown to be one of the world's most widely used general purpose programming languages. It is best known as the language embedded in web browsers but has also been widely adopted for server and embedded applications.&lt;/em&gt;&lt;strong&gt;&lt;em&gt;ECMAScript is based on several originating technologies, the most well-known being &lt;code&gt;JavaScript&lt;/code&gt; (Netscape Communications)) and &lt;code&gt;JScript&lt;/code&gt; (Microsoft Corporation).)&lt;/em&gt;&lt;/strong&gt;. &lt;em&gt;Though before 1994, ECMA was known as &quot;European Computer Manufacturers Association&quot;, after 1994, when the organization became global, the &quot;trademark&quot; &quot;Ecma&quot; was kept for historical reasons.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript已成长为世界上使用最广泛的通用编程语言之一。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它是众所周知的嵌入在Web浏览器中的语言，但也已广泛用于服务器和嵌入式应用程序。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript基于几种原始技术，最著名的是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JavaScript&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（Netscape Communications）和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JScript&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（Microsoft Corporation）&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;尽管在1994年之前，ECMA被称为&amp;ldquo;欧洲计算机制造商协会&amp;rdquo;，但是在1994年该组织成为全球性公司之后，由于历史原因保留了&amp;ldquo; Ecma&amp;rdquo;商标。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a509c04fea8f787d43e64c5ced4af9cc64bbc07e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ECMAScript supports prototype-based inheritance. Every constructor has an associated prototype, and every object created by that constructor has an implicit reference to the prototype (called the object&amp;rsquo;s
prototype) associated with its constructor. Furthermore, a prototype may have a non-null implicit reference to its prototype, and so on; this is called the prototype chain.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript支持基于原型的继承。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每个构造函数都有一个关联的原型，并且由该构造函数创建的每个对象都有对其与其构造函数关联的原型（称为对象的原型）的隐式引用。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此外，原型可能对其原型具有非null的隐式引用，依此类推；等等。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这称为原型链。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="51eee29b7dc8c953939c480851c1a8c1e5f62923" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;In a class-based object-oriented language, in general, state is carried by instances, methods are carried by classes, and inheritance is only of structure and behavior. In ECMAScript, the state and methods are carried by objects, and structure, behavior, and state are all inherited.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常，在基于类的面向对象语言中，状态由实例承载，方法由类承载，并且继承仅是结构和行为。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在ECMAScript中，状态和方法由对象承载，并且结构，行为和状态都被继承。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dfa3b74658971fed6e220fb01a75c1449b949971" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;JSON has been widely adopted by people who found that it made it a lot easier to produce distributed applications and services. The official Internet media type for JSON is &lt;code&gt;application/json&lt;/code&gt; &lt;strong&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/rfc4627/?include_text=1&quot;&gt;&lt;code&gt;RFC 4627&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;. JSON filenames use the extension &lt;code&gt;.json&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON已被人们广泛采用，他们发现使用JSON可以更轻松地生成分布式应用程序和服务。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON的官方Internet媒体类型是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;application/json&lt;/code&gt; &lt;strong&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/rfc4627/?include_text=1&quot;&gt; &lt;code&gt;RFC 4627&lt;/code&gt; &lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON文件名使用扩展名&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.json&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f487b7f22937be722e6e4616e852509a89484d3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;JavaScript is a dynamically typed language. That means you don't have to specify the data type of a variable when you declare it, and data types are converted automatically as needed during script execution.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript是一种动态类型的语言。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这意味着在声明变量时不必指定变量的数据类型，并且在脚本执行期间会根据需要自动转换数据类型。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3100dcba5d2bf675a2e73f36a039f44a25a212ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;          ECMA-262        &lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;          ECMA-262        &lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb9df7b576a710607277e85c7eb505675d4e90bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt; Links &lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt; Links &lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4168878b06eaa6917a0f012585506612f5054ea6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="27f14011d570149605ea11581954595c80d1cf1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Javascript build in &lt;code&gt;JSON&lt;/code&gt; object:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Javascript内置于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象中：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="570ecf326fa1bdc9078e16b2bf2d0d3db6b0816d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Main differences:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;主要区别：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2eb2b15cc634ac10f6aa4a5ed7dd4aca5fb42bb6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE &amp;laquo;&lt;/strong&gt;&lt;a href=&quot;https://www.ecma-international.org/activities/Languages/Language%20overview.pdf&quot;&gt;4th edition&lt;/a&gt; of ECMAScript not &lt;a href=&quot;https://stackoverflow.com/a/2329662/5081877&quot;&gt;published as the work was incomplete&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意&amp;laquo;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ECMAScript的&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.ecma-international.org/activities/Languages/Language%20overview.pdf&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;第4版&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;未&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/2329662/5081877&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;出版，因为该工作&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;尚未&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;完成&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8d9f7d0a930e03077baedc0713243adfe7567169" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Only because object literals and JSON look &lt;em&gt;similar&lt;/em&gt;, it does not mean that you can name them interchangeably.&lt;/strong&gt; See also &lt;a href=&quot;http://benalman.com/news/2010/03/theres-no-such-thing-as-a-json/&quot;&gt;There's no such thing as a &quot;JSON Object&quot;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仅因为对象文字和JSON看起来&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相似&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，并不意味着您可以互换命名它们。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;另请参见&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://benalman.com/news/2010/03/theres-no-such-thing-as-a-json/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;没有&amp;ldquo; JSON对象&amp;rdquo;之类的东西&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="68bb085830767b5a8941c960dbcb039255762042" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Really?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Really?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f3f469121377693ebd78f419b0bda33954250c60" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is a JSON object:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是一个JSON对象：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="424aca9775abf43fcf8bf4725036f20955cfb665" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;begin-object&lt;/strong&gt;    = ws %x7B ws  ; { left curly bracket</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;begin-object&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; = ws％x7B ws; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;{左花括号&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b877d10564346e41f92ce6ff2282199d8eaecaa3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;end-object&lt;/strong&gt;      = ws %x7D ws  ; } right curly bracket</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最终对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; = ws％x7D ws; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;右花括号&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4b6ec665a13b788333206ccf20bb97d058616313" translate="yes" xml:space="preserve">
          <source>A JSON value MUST be an &lt;strong&gt;object&lt;/strong&gt;, array, number, or string, or one of
the following three literal names: false null true</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON值必须是&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，数组，数字或字符串，或以下三个文字名称之一：false null tr​​ue&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c69b643d782ac96d7358aa08b6488693948fdc4c" translate="yes" xml:space="preserve">
          <source>A string is a sequence of zero or more characters wrapped in quotes with backslash escapement, the same notation used in most programming languages.</source>
          <target state="translated">字符串是一个由零或更多的字符组成的序列,用双引号包裹,并带有反斜线转义,这与大多数编程语言中使用的符号相同。</target>
        </trans-unit>
        <trans-unit id="c37d33248b4de99fdc53e360fc1a0c878321e1c7" translate="yes" xml:space="preserve">
          <source>According to &lt;a href=&quot;http://www.json.org/js.html&quot;&gt;JSON in JavaScript&lt;/a&gt;,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;根据&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.json.org/js.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript中的JSON&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="180bd53f01d1e80399276495650a73aa3910a0c6" translate="yes" xml:space="preserve">
          <source>According to a JavaScript book it says this is an object defined by using &lt;em&gt;Object Notation&lt;/em&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;根据一本JavaScript书，它说这是使用&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object Notation&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义的&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77a2aaf651b70eaf2a18f4ebaa2775bd9de26c42" translate="yes" xml:space="preserve">
          <source>All object keys in JSON must be strings. In Javascript object keys can be strings or numbers</source>
          <target state="translated">JSON中的所有对象键必须是字符串。在Javascript中,对象键可以是字符串或数字。</target>
        </trans-unit>
        <trans-unit id="1aff94b488aeb143135dbac12cc34cdd283f607b" translate="yes" xml:space="preserve">
          <source>All strings in JSON must be quoted in &quot;double quotes&quot;. Whereas in Javascript both single quotes and double quotes are allowed. Even with no quotes in the Javascript object notation the object keys are implicitly casted to strings.</source>
          <target state="translated">JSON中的所有字符串必须用 &quot;双引号 &quot;引用。而在Javascript中,单引号和双引号都是允许的。即使在Javascript的对象符号中没有引号,对象键也会被隐式地铸成字符串。</target>
        </trans-unit>
        <trans-unit id="6d2216c6f68318495c0342b1b5b07c14bc1ded7f" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;object&lt;/strong&gt; is an unordered collection of zero or more name/value
pairs, where a name is a string and a value is a string, number,
boolean, null, &lt;strong&gt;object&lt;/strong&gt;, or array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是零个或多个名称/值对，其中一个名称是字符串的无序集合和一个值是一个字符串，数字，布尔值，null，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，或阵列。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e7bf2ca84b1d5b25435142fb3644827dbd0fa9b0" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;object&lt;/strong&gt; structure is represented as a pair of curly brackets</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的结构被表示为一对大括号&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b8630dd643543402418cd61a5d75ba82a1f16972" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;object&lt;/strong&gt; whose names are all unique is interoperable in the sense
that all software implementations receiving that &lt;strong&gt;object&lt;/strong&gt; will agree on
the name-value mappings.  When the names within an &lt;strong&gt;object&lt;/strong&gt; are not
unique, the behavior of software that receives such an &lt;strong&gt;object&lt;/strong&gt; is
unpredictable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的名字都是独特的是在这个意义上，所有的软件实现接收互操作的&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将在名称-值映射一致。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的名称&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不是唯一的时，接收到该&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的软件的行为&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是不可预测的。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4b353746deb01182466b2b2acc7244be28c5e2f9" translate="yes" xml:space="preserve">
          <source>As a counter example, Python has the concept of &lt;em&gt;tuples&lt;/em&gt;, their syntax is &lt;code&gt;(x, y)&lt;/code&gt;. JavaScript doesn't have something like this.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作为反例，Python具有&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;元组&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的概念&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，其语法为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(x, y)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript没有这样的东西。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a5f4cc7dc672379f53c8d58bfb07dd4a83debd8d" translate="yes" xml:space="preserve">
          <source>As a result we have a simpler and more standardized objects which suits better on data-exchange between platforms.</source>
          <target state="translated">因此,我们有一个更简单、更标准化的对象,更适合平台之间的数据交换。</target>
        </trans-unit>
        <trans-unit id="147f040cb7aeb9f7948cc1745dbfc0304fddb6f2" translate="yes" xml:space="preserve">
          <source>As far as I understand the main difference is the &lt;strong&gt;&lt;em&gt;flexibility&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;据我了解，主要区别在于&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;灵活性&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b20c2923fd8241b403eda637772caa510a58436e" translate="yes" xml:space="preserve">
          <source>But most importantly, to repeat my explanation from the beginning: You are in a JavaScript context. You define a JavaScript object. If any, a &quot;JSON object&quot; can only be contained in a string:</source>
          <target state="translated">但最重要的是,重复我从一开始的解释。你是在一个JavaScript上下文中。你定义了一个JavaScript对象。如果有的话,一个 &quot;JSON对象 &quot;只能包含在一个字符串中。</target>
        </trans-unit>
        <trans-unit id="5a3b493fa8cb5deb979529ea96f7a8150df8f16f" translate="yes" xml:space="preserve">
          <source>Can someone tell me what is the main difference between a JavaScript object defined by using &lt;em&gt;Object Literal Notation&lt;/em&gt; and &lt;em&gt;JSON object&lt;/em&gt;?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有人可以告诉我使用&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象文字表示法&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义的JavaScript对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;与&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON对象&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之间的主要区别是什么&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;吗？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4cb243a33ade513ecc3a35fdcd538989344e1772" translate="yes" xml:space="preserve">
          <source>Check with this code &lt;code&gt;{ &quot;Hai\&quot; \n Team 🔫&quot;:5, &quot;Bye \'&quot;: 7 }&lt;/code&gt; over online JSON Edtions. &lt;code&gt;Modes&lt;/code&gt;&lt;a href=&quot;http://www.jsoneditoronline.org/?id=14c0acaf4e147250022deaa3834e7bd9&quot;&gt;&lt;code&gt;notStrict&lt;/code&gt;&lt;/a&gt;&lt;code&gt;,&lt;/code&gt;&lt;a href=&quot;http://json.parser.online.fr/&quot;&gt;&lt;code&gt;Strinct&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在在线JSON版本上&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用此代码&lt;/font&gt;&lt;/font&gt; &lt;code&gt;{ &quot;Hai\&quot; \n Team 🔫&quot;:5, &quot;Bye \'&quot;: 7 }&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;进行检查。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Modes&lt;/code&gt; &lt;a href=&quot;http://www.jsoneditoronline.org/?id=14c0acaf4e147250022deaa3834e7bd9&quot;&gt; &lt;code&gt;notStrict&lt;/code&gt; &lt;/a&gt; &lt;code&gt;,&lt;/code&gt; &lt;a href=&quot;http://json.parser.online.fr/&quot;&gt; &lt;code&gt;Strinct&lt;/code&gt; &lt;/a&gt; &lt;code&gt;.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="238b45c702902f20460d7266988b4b697877ff77" translate="yes" xml:space="preserve">
          <source>Data can be stored in many ways, but if it should be stored in a text file and be readable by a computer, it needs to follow some structure. JSON is one of the many formats that define such a structure.</source>
          <target state="translated">数据可以以多种方式存储,但如果要将其存储在文本文件中并被计算机读取,就需要遵循一定的结构。JSON就是定义了这样一种结构的众多格式之一。</target>
        </trans-unit>
        <trans-unit id="6904ec3cd1e27c4d394671596dbe56927888ce1b" translate="yes" xml:space="preserve">
          <source>Dialects have been derived from the same language. They are are quite similar to each other as they have been derived from the same language but they have undergone some changes.
  A dialect is a variation in the language itself. It is derived from a single language.</source>
          <target state="translated">方言是由同一种语言派生出来的。方言是由同一种语言派生出来的,它们之间有很大的相似性,但又经过了一些变化。方言是语言本身的一种变体。它是由一种语言派生出来的。</target>
        </trans-unit>
        <trans-unit id="1214da531dfd47b60c59dea8aa1269b43fb4e6ec" translate="yes" xml:space="preserve">
          <source>Duplicate keys (&lt;code&gt;{&quot;foo&quot;:&quot;bar&quot;,&quot;foo&quot;:&quot;baz&quot;}&lt;/code&gt;) produce undefined, implementation-specific results; the JSON specification specifically does not define their semantics</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;重复的键（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;{&quot;foo&quot;:&quot;bar&quot;,&quot;foo&quot;:&quot;baz&quot;}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）产生未定义的，特定于实现的结果；&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON规范没有明确定义其语义&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="342d9e3d27519cc4a54693fb4929c95788966ce3" translate="yes" xml:space="preserve">
          <source>Duplicate keys produce defined, specified results (in loose mode, the latter definition replaces the former; in strict mode, it's an error).</source>
          <target state="translated">重复键产生定义的、指定的结果(在松散模式下,后者的定义取代了前者;在严格模式下,它是一个错误)。</target>
        </trans-unit>
        <trans-unit id="c35dd99c7650d12bf824b720ab168d32dc24e652" translate="yes" xml:space="preserve">
          <source>ECMAScript is the language, whereas JavaScript, JScript, and even ActionScript are called &lt;strong&gt;&lt;code&gt;&quot;Dialects&quot;&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript是该语言，而JavaScript，JScript甚至是ActionScript都被称为&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;&quot;Dialects&quot;&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2aff3e3eb1f1e6dbbe1203d3a53f3f921c472582" translate="yes" xml:space="preserve">
          <source>ECMAScript is the scripting language that forms the basis of JavaScript. &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt;&lt;code&gt;JavaScript&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Language_Resources&quot;&gt;&lt;code&gt;language resources&lt;/code&gt;&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript是构成JavaScript基础的脚本语言。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt; &lt;code&gt;JavaScript&lt;/code&gt; &lt;/a&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Language_Resources&quot;&gt; &lt;code&gt;language resources&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5e39039edf00d8f6af617681f04f247a70d6c3b8" translate="yes" xml:space="preserve">
          <source>Example of JSON:</source>
          <target state="translated">JSON的例子。</target>
        </trans-unit>
        <trans-unit id="9def3063a6e64258a8ad2b3cbce234b1e486c820" translate="yes" xml:space="preserve">
          <source>Examples (from page 12 of RFC)</source>
          <target state="translated">例子(来自RFC第12页)</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">扩展片段</target>
        </trans-unit>
        <trans-unit id="c56414af143a248bb1a18b4a2c6a9dc6163cdcc5" translate="yes" xml:space="preserve">
          <source>Extracts from &lt;a href=&quot;https://tools.ietf.org/html/rfc7159&quot;&gt;https://tools.ietf.org/html/rfc7159&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;摘自&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7159&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://tools.ietf.org/html/rfc7159&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="81f16889f8212dde57fc5da3e53035d894bdc94e" translate="yes" xml:space="preserve">
          <source>First you should know what JSON is:</source>
          <target state="translated">首先你应该知道什么是JSON。</target>
        </trans-unit>
        <trans-unit id="5e84af1bc0f4a97fe4da6f7c0d3d529cd9e2b910" translate="yes" xml:space="preserve">
          <source>For example, in JSON all keys must be quoted, while in object literals this is not necessary:</source>
          <target state="translated">例如,在JSON中,所有的键必须被引用,而在对象字库中则没有必要。</target>
        </trans-unit>
        <trans-unit id="1184d8e92b5bd8511a4dd00d86aaedb53022fe97" translate="yes" xml:space="preserve">
          <source>For the ones who still think that RFC are more important than blogs and opinion based misconceptions, let's try to answer clarifying some points.
I'm not going to repeat all the correct differences already mentioned in previous answers, here I'm just trying adding value summarizing some crucial part rfc7159</source>
          <target state="translated">对于那些仍然认为RFC比博客和观点上的误区更重要的人,让我们试着回答澄清一些要点。我不打算重复之前的回答中已经提到的所有正确的区别,在这里,我只是尝试着把一些关键的部分rfc7159的价值总结出来,补充一下。</target>
        </trans-unit>
        <trans-unit id="bfe97df8921056d70dd41cc616f07cc90a30e2a6" translate="yes" xml:space="preserve">
          <source>Furthermore, (side-rant...) when people talk about a &quot;JSON Object&quot;, they almost always mean data that has the &quot;curly-braces&quot; at the top-level.  This corresponds nicely to a javascript object.  However, the JSON spec does not require that there be a single &quot;curly-braces&quot; object at the top-level of a JSON string.  It is perfectly valid JSON to have a list at the top-level, or even to have just a single value.  So, while every &quot;JSON Object&quot; corresponds to valid JSON, not all valid JSON strings correspond to what we would call a &quot;JSON Object&quot;! ( because the string could represent a list or an atomic value )</source>
          <target state="translated">此外,(侧题....)当人们谈论 &quot;JSON对象 &quot;时,他们几乎都是指顶层有 &quot;卷曲符号 &quot;的数据。这很好地对应了一个javascript对象。然而,JSON规范并不要求在JSON字符串的顶层有一个单一的 &quot;卷曲符号 &quot;对象。在JSON的顶层有一个列表,甚至只有一个值是完全有效的。所以,虽然每一个 &quot;JSON对象 &quot;都对应于有效的JSON,但并不是所有有效的JSON字符串都对应于我们所说的 &quot;JSON对象&quot;! (因为这个字符串可以代表一个列表或原子值)</target>
        </trans-unit>
        <trans-unit id="91e214f61d56708544f987f01aaf2beaba1bb736" translate="yes" xml:space="preserve">
          <source>Here is one surprising difference: you can not use &lt;code&gt;undefined&lt;/code&gt; in json and all object fields with undefined values will disappear after &lt;code&gt;JSON.stringify&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是一个令人惊讶的区别：您不能&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在json中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，并且所有带有undefined值的对象字段在&lt;/font&gt; &lt;code&gt;JSON.stringify&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;之后都会消失。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f951bca423bbdc6b94390f76da80924cb5903a74" translate="yes" xml:space="preserve">
          <source>In JSON a function cannot be defined as a value of an object (since this is Javascript specific). In Javascript this is completely legal.</source>
          <target state="translated">在JSON中,函数不能被定义为对象的值(因为这是Javascript特有的)。在Javascript中,这完全是合法的。</target>
        </trans-unit>
        <trans-unit id="23b37de353d55037c1ef47caa24b1e0f5338d2b9" translate="yes" xml:space="preserve">
          <source>In JavaScript, object literals can have</source>
          <target state="translated">在JavaScript中,对象字面符号可以有</target>
        </trans-unit>
        <trans-unit id="581428cac78d7efa94e581000e6d02bb6f913cb2" translate="yes" xml:space="preserve">
          <source>In addition to reading the &lt;a href=&quot;http://www.json.org/&quot;&gt;documentation&lt;/a&gt;, as @Filix King suggested, I also suggest playing around with the &lt;a href=&quot;http://www.jsonlint.com/&quot;&gt;JSONLint online JSON validator&lt;/a&gt;. That's how I learned that the keys of JSON objects must be strings.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;除了阅读&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.json.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文档&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（如@Filix King所建议的那样），我还建议您使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.jsonlint.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSONLint在线JSON验证程序&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这就是我了解到JSON对象的键必须是字符串的方式。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="48cb239bb52662e6b400d6e30f3922b1ac69a07f" translate="yes" xml:space="preserve">
          <source>In contrast, &lt;em&gt;JavaScript&lt;/em&gt; is a programming language. Of course JavaScript also provides a way to define/describe data, but the syntax is very specific to JavaScript.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相反，&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是一种编程语言。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当然，JavaScript还提供了一种定义/描述数据的方法，但是语法非常特定于JavaScript。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="699fd329fb25c990309482a62eb55fb8b1ca77e9" translate="yes" xml:space="preserve">
          <source>In other words, valid JSON is also valid JavaScript object literal notation but not necessarily the other way around.</source>
          <target state="translated">换句话说,有效的JSON也是有效的JavaScript对象的字面符号,但不一定相反。</target>
        </trans-unit>
        <trans-unit id="c8cdb306b788ef51486955aa4ada6840c2e72976" translate="yes" xml:space="preserve">
          <source>Information about the browser and computer of your users.</source>
          <target state="translated">关于用户的浏览器和电脑的信息。</target>
        </trans-unit>
        <trans-unit id="4014fecc71d912e2ee2fc1b4edeeb5c10f2dcc4e" translate="yes" xml:space="preserve">
          <source>It is language agnostic data-interchange format.
The syntax of JSON was inspired by the JavaScript Object Literal notation, but there are differences between them.</source>
          <target state="translated">它是一种语言无关的数据交换格式。JSON的语法是受JavaScript Object Literal符号的启发,但两者之间也有区别。</target>
        </trans-unit>
        <trans-unit id="50edc4c808537192620a2b06ec34bcb4059b04ea" translate="yes" xml:space="preserve">
          <source>Its Image member is an &lt;strong&gt;object&lt;/strong&gt; whose Thumbnail member is an &lt;strong&gt;object&lt;/strong&gt; and
whose IDs member is an array of numbers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它的Image成员是一个&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象，&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;其Thumbnail成员是一个&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，其ID成员是一个数字数组。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="540de327f9fe111c4bd020ca54fefab757d85033" translate="yes" xml:space="preserve">
          <source>JS object notation, used in JS to create objects in the code conveniently:</source>
          <target state="translated">JS对象记号,在JS中用来在代码中方便地创建对象。</target>
        </trans-unit>
        <trans-unit id="f384fd52ff795101c1d6c496d884cf953459abb0" translate="yes" xml:space="preserve">
          <source>JSON can represent four primitive types (strings, numbers, booleans,
and null) and two structured types (&lt;strong&gt;objects&lt;/strong&gt; and arrays).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON可以表示四种原始类型（字符串，数字，布尔值和null）和两种结构化类型（&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和数组）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="917a5ef8b2cef69c70821602350dbba4263f39f6" translate="yes" xml:space="preserve">
          <source>JSON defines a small set of formatting rules for the portable representation of structured data.</source>
          <target state="translated">JSON为结构化数据的可移植表示方式定义了一小套格式化规则。</target>
        </trans-unit>
        <trans-unit id="58f50956057cd2113a7ae567bf1b69d2bdd10761" translate="yes" xml:space="preserve">
          <source>JSON has the following syntactical constraints:</source>
          <target state="translated">JSON有以下的语法约束。</target>
        </trans-unit>
        <trans-unit id="ac14844d25187a9ab85f707289c449a9f1cff379" translate="yes" xml:space="preserve">
          <source>JSON is a &lt;a href=&quot;http://en.wikipedia.org/wiki/Subset&quot;&gt;subset&lt;/a&gt; of the object
  literal notation of JavaScript.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript的对象文字符号的&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Subset&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;子集&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b00cf9f526adffff3af5096a53d9049cbfbcaa39" translate="yes" xml:space="preserve">
          <source>JSON is a kind of wrapper on &quot;JavaScript Object Notation&quot; which forces users to obey more strict rules for defining the objects. And it does this by limiting the possible object declaration ways provided by JavaScript Object Notation feature.</source>
          <target state="translated">JSON是对 &quot;JavaScript对象符号 &quot;的一种封装,它迫使用户在定义对象时必须遵守更严格的规则。它通过限制JavaScript Object Notation功能提供的对象声明方式来做到这一点。</target>
        </trans-unit>
        <trans-unit id="eb5dbf7f8d8e957d355980ca5ba24afe356659c5" translate="yes" xml:space="preserve">
          <source>JSON.parse accepts a String that conforms to the JSON grammar.</source>
          <target state="translated">JSON.parse接受一个符合JSON语法的String。</target>
        </trans-unit>
        <trans-unit id="9a657ed8680a8baee579ef04ab8db8481112c182" translate="yes" xml:space="preserve">
          <source>JSON.stringify produces a String that conforms to the following JSON grammar.</source>
          <target state="translated">JSON.stringify产生一个符合以下JSON语法的字符串。</target>
        </trans-unit>
        <trans-unit id="58d11c6ded11139b96abc98894c3a3947a260d49" translate="yes" xml:space="preserve">
          <source>JavaScript &lt;strong&gt;Object&lt;/strong&gt; Notation (JSON) is a text format for the
serialization of structured data.  It is derived from the &lt;strong&gt;object&lt;/strong&gt;
literals of JavaScript, as defined in the ECMAScript Programming
Language Standard, Third Edition [ECMA-262].</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Notation（JSON）是用于结构化数据序列化的文本格式。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它源自&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ECMAScript编程语言标准第三版[ECMA-262]中定义的JavaScript &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c1d584a6fe74b88d75941b0f10057cf17d06de8" translate="yes" xml:space="preserve">
          <source>Javascript Object Literal vs JSON:</source>
          <target state="translated">Javascript Object Literal vs JSON。</target>
        </trans-unit>
        <trans-unit id="2012fcecc3d000b7d011678e2573b07949409297" translate="yes" xml:space="preserve">
          <source>Key values must be quoted</source>
          <target state="translated">关键值必须引用</target>
        </trans-unit>
        <trans-unit id="0308b55bb8406978edd0f4d91f979ce404c61147" translate="yes" xml:space="preserve">
          <source>Knowing that, just by looking at the &lt;em&gt;syntax&lt;/em&gt;, your example is not JSON because of two reasons:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;知道了，仅查看&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;语法&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，您的示例就不是JSON，原因有两个：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="809b9adb102cc5aaff52310a4ddefc9722ce4709" translate="yes" xml:space="preserve">
          <source>Lets clarify first what &lt;a href=&quot;http://www.json.org/&quot;&gt;&lt;em&gt;JSON&lt;/em&gt;&lt;/a&gt; actually is. JSON is a &lt;em&gt;textual&lt;/em&gt;, language-independent data-exchange format, much like XML, CSV or YAML.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;首先让我们澄清一下&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.json.org/&quot;&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;到底&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;什么&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON是一种&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文本形式的&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，与语言无关的数据交换格式，非常类似于XML，CSV或YAML。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0743b2794b21b091ce583ea18d2549e0d93c1a7b" translate="yes" xml:space="preserve">
          <source>Lets look at the syntactical differences between JSON and JavaScript object literals.</source>
          <target state="translated">让我们来看看JSON和JavaScript对象字库之间的语法差异。</target>
        </trans-unit>
        <trans-unit id="2a60485ade4296ddcd6449fb49e6061b9dd4bda9" translate="yes" xml:space="preserve">
          <source>Literals are fixed values, not variables, that you literally provide in your script.</source>
          <target state="translated">字面是固定值,而不是变量,你可以在脚本中按字面提供。</target>
        </trans-unit>
        <trans-unit id="769f781b2775ce00e09b68b8de21776f404508c8" translate="yes" xml:space="preserve">
          <source>Object &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Property_Accessors&quot;&gt;Property accessors&lt;/a&gt;  provide access to an object's properties by using the dot notation or the bracket notation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Property_Accessors&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 访问器通过使用点符号或方括号符号提供对对象属性的访问。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa9576abdd317dfc7abc4850edffe0b7390b5db5" translate="yes" xml:space="preserve">
          <source>Object &lt;em&gt;keys&lt;/em&gt; must be &lt;strong&gt;strings&lt;/strong&gt; (i.e. a character sequence enclosed in double quotes &lt;code&gt;&quot;&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;键&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必须是&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;字符串&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（即用双引号&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;括起来的字符序列&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fc4fd09957b2108d6ebc1a56e022f26e68d85cb9" translate="yes" xml:space="preserve">
          <source>Object literal syntax is a very convenient way to create javascript objects</source>
          <target state="translated">Object literal语法是一种非常方便的创建javascript对象的方法。</target>
        </trans-unit>
        <trans-unit id="75daecdd17b61c4b33a541077f6bb4e09d3c6816" translate="yes" xml:space="preserve">
          <source>SQL Language - Hibernate MySQL Dialect, Oracle Dialect,.. which have some changes or added functionality.</source>
          <target state="translated">SQL语言-Hibernate MySQL方言、Oracle方言、...等有一些变化或增加的功能。</target>
        </trans-unit>
        <trans-unit id="8b414c4c0bf270da7e849e79f3290fda4dffdea2" translate="yes" xml:space="preserve">
          <source>So basically, the newObject in my example above is an object defined by using JavaScript Objeect Notation; but it is not a 'valid' JSON object because it does not follow the rules that JSON standards require.</source>
          <target state="translated">所以基本上,我上面的例子中的newObject是一个使用JavaScript Objeect Notation定义的对象,但它不是一个 &quot;有效的 &quot;JSON对象,因为它没有遵循JSON标准所要求的规则。</target>
        </trans-unit>
        <trans-unit id="57c5499f600ca7aafec6a54e1a3e6a2095963944" translate="yes" xml:space="preserve">
          <source>String literals, number literals or identifier names as keys (since ES6, keys can now also be computed, which introduces yet another syntax).</source>
          <target state="translated">字符串文体、数字文体或标识符名称作为键值(自ES6以来,键值现在也可以计算,这又引入了另一种语法)。</target>
        </trans-unit>
        <trans-unit id="508d962310fe84b9f6f496ee80ae6e92d57b1c7d" translate="yes" xml:space="preserve">
          <source>Strings must be quoted with &lt;code&gt;&quot;&lt;/code&gt; and not &lt;code&gt;'&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;字符串必须用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而不是&lt;/font&gt; &lt;code&gt;'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;引号&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e0c81c16a30e607c4eeea45fc113a857208285a4" translate="yes" xml:space="preserve">
          <source>Such formats are typically language-independent, meaning they can be processed by Java, Python, JavaScript, PHP, you name it.</source>
          <target state="translated">这种格式通常是语言无关的,这意味着它们可以被Java、Python、JavaScript、PHP等语言处理。</target>
        </trans-unit>
        <trans-unit id="02e1d2094b0f27b2c154c92bc14a0c5ccf76f251" translate="yes" xml:space="preserve">
          <source>That is, if you're writing JavaScript source code, and not dealing with a &lt;em&gt;string&lt;/em&gt;, you're not dealing with JSON. Maybe you received the data as JSON (e.g., via ajax or reading from a file), but once you or a library you're using has parsed it, it's not JSON anymore.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;也就是说，如果您正在编写JavaScript源代码，并且没有处理&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;字符串&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，那么您就不会处理JSON。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;也许您以JSON形式接收了数据（例如，通过ajax或从文件中读取），但是一旦您或使用的库将其解析后，就不再是JSON。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc74028c269be97797adeff928c8732a8ae9995b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JSON&lt;/code&gt; language, which stands for 'Javascript object notation', has its syntax derived from javascript object literal syntax. It is used as a programming language independent textual data transfer format.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;语言，它代表&amp;ldquo;JavaScript对象符号&amp;rdquo;，先后从JavaScript对象文字语法派生它的语法。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它用作与编程语言无关的文本数据传输格式。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d4e10fd99aa298a7a469345f57f40ed3fe623262" translate="yes" xml:space="preserve">
          <source>The JSON object is a single object that contains two functions, parse and stringify, that are used to parse and construct JSON texts.</source>
          <target state="translated">JSON对象是一个单一的对象,它包含两个函数,即parse和stringify,用于解析和构造JSON文本。</target>
        </trans-unit>
        <trans-unit id="93b0e3aff87fdf4743e3fb4a4829fbc671386588" translate="yes" xml:space="preserve">
          <source>The JSON spec is a syntax for encoding data as a string.  What people call a &quot;JSON Object&quot; ( in javascript ) is really just an ordinary javascript object that has (probably) been de-serialized from a valid JSON string, and can be easily re-serialized as a valid JSON string.  This generally means that it contains only data ( and not functions ).  It also means that there are no dates, because JSON does not have a date type ( probably the most painful thing about JSON ;)</source>
          <target state="translated">JSON规范是一种将数据编码为字符串的语法。人们所说的 &quot;JSON对象&quot;(在javascript中)实际上只是一个普通的javascript对象,它(可能)已经从一个有效的JSON字符串中去序列化了,可以很容易地被重新序列化为一个有效的JSON字符串。这通常意味着它只包含数据(而不是函数)。这也意味着没有日期,因为JSON没有日期类型(这可能是JSON最痛苦的事情了)。</target>
        </trans-unit>
        <trans-unit id="61757c1d424f2da47e58d71f58ebd9ea839096e7" translate="yes" xml:space="preserve">
          <source>The data types in JSON are also restricted to the following values:</source>
          <target state="translated">JSON中的数据类型也被限制在以下值:</target>
        </trans-unit>
        <trans-unit id="71fa8079f75b9da9e39a23a9e3d1036191a32893" translate="yes" xml:space="preserve">
          <source>The names within an &lt;strong&gt;object&lt;/strong&gt; SHOULD be unique.
  &lt;strong&gt;object&lt;/strong&gt; = &lt;strong&gt;begin-object&lt;/strong&gt; [ member *( value-separator member ) ]
           &lt;strong&gt;end-object&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象中&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的名称&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;应唯一。 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; = &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;起始对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; [成员*（值分隔符成员）] &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;结束对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d784512485b6c5e91867853c48171676ca2e5a00" translate="yes" xml:space="preserve">
          <source>The parseJSON method will be included in the &lt;a href=&quot;https://www.ecma-international.org/activities/Languages/Language%20overview.pdf&quot;&gt;&lt;code&gt;Fourth Edition of ECMAScript&lt;/code&gt;&lt;/a&gt;. In the meantime, a JavaScript implementation is available at json.org.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;parseJSON方法将包含在&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.ecma-international.org/activities/Languages/Language%20overview.pdf&quot;&gt; &lt;code&gt;Fourth Edition of ECMAScript&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同时，可以在json.org上获得JavaScript实现。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de649511949d4cf53e8f16e4a0643a0bf04201c5" translate="yes" xml:space="preserve">
          <source>The values can be any valid JavaScript expression, including function definitions and &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;值可以是任何有效的JavaScript表达式，包括函数定义和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9761b6c3b2246f9dfec0c02d587dc968a32420b" translate="yes" xml:space="preserve">
          <source>The values can be either:</source>
          <target state="translated">值可以是:</target>
        </trans-unit>
        <trans-unit id="453ca2ae5c4898c77aae97325f8503c0951b49c1" translate="yes" xml:space="preserve">
          <source>There is really no such thing as a &quot;JSON Object&quot;.</source>
          <target state="translated">真的没有 &quot;JSON对象 &quot;这种东西。</target>
        </trans-unit>
        <trans-unit id="3c28b85382639a0f0d57cc6a01fdcb5eb7afbf2c" translate="yes" xml:space="preserve">
          <source>This link is also quite helpful:
&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/bb299886.aspx&quot;&gt;http://msdn.microsoft.com/en-us/library/bb299886.aspx&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此链接也很有帮助：&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/bb299886.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//msdn.microsoft.com/zh-cn/library/bb299886.aspx&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc51a6c13ac80744b3997690f5e6273ce1dcf5a7" translate="yes" xml:space="preserve">
          <source>What is the difference between JSON and Object Literal Notation</source>
          <target state="translated">JSON和Object Literal Notation的区别是什么?</target>
        </trans-unit>
        <trans-unit id="8a870a281184a768148d5379fd52a98e8b3b28c3" translate="yes" xml:space="preserve">
          <source>Why isn't it a JSON object in this case? Just because it is not defined by using quotation marks?</source>
          <target state="translated">这种情况下为什么不是JSON对象?只是因为它没有使用引号来定义吗?</target>
        </trans-unit>
        <trans-unit id="d32497ee58f8e9f70fc59880b8f9385b27a04fe2" translate="yes" xml:space="preserve">
          <source>You cannot assign a function as a value to a &quot;JSON object&quot; (because JSON doesn't define any syntax for functions).</source>
          <target state="translated">你不能将函数作为值分配给 &quot;JSON对象&quot;(因为JSON没有为函数定义任何语法)。</target>
        </trans-unit>
        <trans-unit id="d63d152d38f6695f0e756975648d444cf290b34f" translate="yes" xml:space="preserve">
          <source>You have a more limited range of values (e.g. no functions allowed)</source>
          <target state="translated">你有一个比较有限的数值范围(例如不允许使用函数)。</target>
        </trans-unit>
        <trans-unit id="a627f4c3009fbc53230d3a44ad6154c88090c76e" translate="yes" xml:space="preserve">
          <source>Your keys are not strings (literals). They are &lt;em&gt;identifier names&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您的密钥不是字符串（文字）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它们是&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;标识符名称&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b5e09e5f6bd3ecb7c200897da4452ffe04ffa20" translate="yes" xml:space="preserve">
          <source>\&quot;  - Special characters can be escaped. But not recomended to escape (') Single Quotes.
  In Strict mode it will throw and Error - &lt;code&gt;SyntaxError: Unexpected token ' in JSON&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;\&amp;ldquo;-特殊字符可以转义。但不建议转义（'）单引号。在严格模式下，它将抛出错误&lt;/font&gt;&lt;/font&gt; &lt;code&gt;SyntaxError: Unexpected token ' in JSON&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c37f5d4c24ebe19faceff2fa752f48ced17e4bc7" translate="yes" xml:space="preserve">
          <source>a number</source>
          <target state="translated">若干</target>
        </trans-unit>
        <trans-unit id="555d01e6c83266b3e9f92bd811905370caf62770" translate="yes" xml:space="preserve">
          <source>a string</source>
          <target state="translated">一串</target>
        </trans-unit>
        <trans-unit id="154b7b03c77e9e89b215d8a83545364526bad571" translate="yes" xml:space="preserve">
          <source>an (JSON) object</source>
          <target state="translated">对象</target>
        </trans-unit>
        <trans-unit id="098f0f62d0fe7ff8be81c4d5f8ab89199776c280" translate="yes" xml:space="preserve">
          <source>an array</source>
          <target state="translated">阵列</target>
        </trans-unit>
        <trans-unit id="0a0434658abb519d79582355b4d8c2bb748e205d" translate="yes" xml:space="preserve">
          <source>string
number
object
array
A literal as:
true
false
null
The grammar of Strings changes. They have to be delimited by double quotes, while in JavaScript, you can use single or double quotes interchangeably.</source>
          <target state="translated">string number 对象数组 A literal as:true false false null Strings 的语法发生了变化。它们必须用双引号分隔,而在JavaScript中,你可以交替使用单引号或双引号。</target>
        </trans-unit>
        <trans-unit id="4a8be7ccecc206b635133eca205de844aacd9af0" translate="yes" xml:space="preserve">
          <source>var o = { &quot;if&quot;: &quot;foo&quot; }; 
So for &quot;compatibility&quot; (and easy eval'ing maybe?) the quotes are mandatory.</source>
          <target state="translated">var o={&quot;if&quot;:&quot;foo&quot; };所以,为了 &quot;兼容性&quot;(也许是为了方便评估?</target>
        </trans-unit>
        <trans-unit id="92753de84e516bab1dde3ab956c8e46d95a97308" translate="yes" xml:space="preserve">
          <source>var o = { if: &quot;foo&quot; }; // SyntaxError in ES3
While, using a string literal as a property name (quoting the property name) gives no problems:</source>
          <target state="translated">var o={if:&quot;foo&quot; };/ES3中的语法错误 While,使用字符串作为属性名(引用属性名)没有问题。</target>
        </trans-unit>
        <trans-unit id="662d49caaa0bf824e42687de59a5844a862d9465" translate="yes" xml:space="preserve">
          <source>► &lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt;&lt;code&gt;JavaScript&lt;/code&gt;&lt;/a&gt; is the most popular implementation of the ECMAScript Standard.
The core features of Javascript are based on the ECMAScript standard,  but Javascript also has other additional features that are not in the ECMA specifications/standard. &lt;strong&gt;Every browser has a JavaScript interpreter.&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;► &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt; &lt;code&gt;JavaScript&lt;/code&gt; 的&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是最流行的执行ECMAScript标准的。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Javascript的核心功能基于ECMAScript标准，但是Javascript还具有ECMA规范/标准中未包含的其他附加功能。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每个浏览器都有一个JavaScript解释器。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="de0f7614fa05276ee4ab7821b0f2b862a865134a" translate="yes" xml:space="preserve">
          <source>► ECMAScript</source>
          <target state="translated">► ECMAScript</target>
        </trans-unit>
        <trans-unit id="4489fb0e13b61a8f92056c2a46dbc7b665ea19ed" translate="yes" xml:space="preserve">
          <source>► JSON Strings must be quoted with &quot; and not '. A string is very much like a C or Java string. &lt;strong&gt;Strings should be wrapped in double quotes.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;►JSON字符串必须用&amp;ldquo;而不是'引起来。字符串非常类似于C或Java字符串。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;字符串应该用双引号引起来。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6caade8dd0f29aa515b4a6e6a464f03e32bf743e" translate="yes" xml:space="preserve">
          <source>► JavaScript Object Notation (&lt;a href=&quot;http://www.json.org/&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt;) is a lightweight, text-based, language-independent data interchange format. JSON has been used to exchange data between applications written in any Programming language.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;►JavaScript Object Notation（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.json.org/&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）是一种轻量，基于文本，独立于语言的数据交换格式。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON已用于在以任何编程语言编写的应用程序之间交换数据。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="38b33f82d8e4baf3bdfb08cb2ac51ec9f4b10265" translate="yes" xml:space="preserve">
          <source>► Key values must be quoted, only Strings are allowed for keys. If you use other than String it will convert to String. But not recommended to use keys other than String's. Check an example like this - &lt;code&gt;{ 'key':'val' }&lt;/code&gt; over &lt;a href=&quot;https://jsonformatter.curiousconcept.com/&quot;&gt;&lt;code&gt;RFC 4627 - jsonformatter&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;►键值必须加引号，键只允许使用字符串。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您使用的不是String，它将转换为String。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是不建议使用String以外的其他键。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;检查这样的示例- &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过&lt;/font&gt;&lt;a href=&quot;https://jsonformatter.curiousconcept.com/&quot;&gt; &lt;code&gt;RFC 4627 - jsonformatter&lt;/code&gt; &lt;/a&gt;&lt;/font&gt; &lt;code&gt;{ 'key':'val' }&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;-jsonformatter&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fb610aa022a63def35dc27867d54f314d4a9752b" translate="yes" xml:space="preserve">
          <source>► You have a more limited range of values (e.g. no functions allowed). A value can be a string in double quotes, number, boolean, null, object, or array. These structures can be nested.</source>
          <target state="translated">► 你有一个比较有限的值范围(例如,不允许使用函数)。一个值可以是双引号的字符串、数字、布尔、null、对象或数组。这些结构可以嵌套。</target>
        </trans-unit>
        <trans-unit id="2427ab5d3a1b54c968b18e29978de14ee06718fb" translate="yes" xml:space="preserve">
          <source>🔫  - Special Symbols are allowed in String but not recomended to use.</source>
          <target state="translated">🔫-String中允许使用特殊符号,但不建议使用。</target>
        </trans-unit>
        <trans-unit id="099ba8b6f07a9481b2031e70c8cccbc5852c56de" translate="yes" xml:space="preserve">
          <source>🔫 &lt;strong&gt;&lt;a href=&quot;http://www.json.org/fatfree.html&quot;&gt;JSON&lt;/a&gt;: The Fat-Free Alternative to XML&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;🔫 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;a href=&quot;http://www.json.org/fatfree.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：胖的免费替代XML&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a330d08e87f88b749216760dd59350a02bb063c" translate="yes" xml:space="preserve">
          <source>🙈🙉🙊</source>
          <target state="translated">🙈🙉🙊</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
