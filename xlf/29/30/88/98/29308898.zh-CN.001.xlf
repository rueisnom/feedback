<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/29308898">
    <body>
      <group id="29308898">
        <trans-unit id="2752855f86e81cbc5154cab54610b261a2e91dd1" translate="yes" xml:space="preserve">
          <source>1) json_decode($json_string) // it returns object</source>
          <target state="translated">1)json_decode($json_string)/它返回对象</target>
        </trans-unit>
        <trans-unit id="3a9b3e1936ec1cffd13d5116129b0ec50285ff8d" translate="yes" xml:space="preserve">
          <source>2) json_decode($json_string,true) // it returns array</source>
          <target state="translated">2)json_decode($json_string,true)/它返回数组</target>
        </trans-unit>
        <trans-unit id="69f8d34be8774de101926cdfadd9a408b2bbf299" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/null&quot;&gt;nulls&lt;/a&gt; (a special type of its own)</source>
          <target state="translated">&lt;a href=&quot;http://php.net/null&quot;&gt;空值&lt;/a&gt; （其自身的一种特殊类型）</target>
        </trans-unit>
        <trans-unit id="acf1afc3ec49516747096f6f6144d83a567e107d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;json_decode&lt;/code&gt; requires the string to be a valid &lt;code&gt;json&lt;/code&gt; else it will return &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;json_decode&lt;/code&gt; 要求字符串为有效的 &lt;code&gt;json&lt;/code&gt; ,否则它将返回 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e46f8e788ce98317de3fc82656a9c5ca6acdeb89" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;code&gt;json_decode()&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;json_decode()&lt;/code&gt; 返回 &lt;code&gt;null&lt;/code&gt; &lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="114ff7e9200a3b3d255a1d3d52560e7863fd1499" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Accessing array elements&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;访问数组元素&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eeeeb16c5b851d403174f859553076d6fc7baf47" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Accessing associative array items&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;访问关联数组项&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e66329add1a2d9a20eea37e50e76af66b84cfb89" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Accessing nested items&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;访问嵌套项&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0c91cca3e70aacff08438032ff96e2e4f27cca13" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Accessing object properties&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;访问对象属性&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="497c6aa6080bf706a21900c0d08a49d17ba69f88" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Data doesn't fit in memory&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;数据不适合内存&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b0457e08b0834af77efa5a137ac03a4acea5779d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Don't know how the data is structured&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;不知道数据的结构&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e6ee72acac4c97845dc852b6773c99c693582580" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;How to sort it&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;如何排序&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b30068a7b6accc37c9a95a65720fe0efadfb212a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Intro&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Intro&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e9011baae076f1ea7acce37b38b25b17402a5182" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Object property name contains a special character&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;对象属性名称包含特殊字符&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d1735db9972e9b6acede08fcfcbc8a2b8044e9a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Passing &lt;code&gt;true&lt;/code&gt; as the second argument to &lt;a href=&quot;http://php.net/json_decode&quot;&gt;json_decode()&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;将 &lt;code&gt;true&lt;/code&gt; 作为第二个参数传递给&lt;a href=&quot;http://php.net/json_decode&quot;&gt;json_decode（）&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c5c7e3cf59c69ff5f20ae9874b253beab320cb93" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Someone put JSON in your JSON&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;有人将JSON放入您的JSON&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d8ff1f9032591ebf283b62753a8815882b515c8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Input:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Input:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3ccfff51da82250c6945871fe29c0806ff574c48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Output:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4f4cbce6fb3c57b7593a7d962fa7bff29a74f4e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;We can decode json string into array using json_decode function in php&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;我们可以使用php中的json_decode函数将json字符串解码为数组&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="59078db18d4db45f225a5bafb36a572e538ca90e" translate="yes" xml:space="preserve">
          <source>Break the problem down into pieces that are easier to wrap your head around.</source>
          <target state="translated">把问题分解成更容易缠住你的脑袋的碎片。</target>
        </trans-unit>
        <trans-unit id="6769de79c80b86d3b646c62ed9de7bce9558aeb9" translate="yes" xml:space="preserve">
          <source>Check below code for converting json to array in &lt;code&gt;PHP&lt;/code&gt;,
If JSON is correct then &lt;code&gt;json_decode()&lt;/code&gt; works well, and will return an array,
But if malformed JSON, then It will return &lt;code&gt;NULL&lt;/code&gt;,</source>
          <target state="translated">检查下面的代码以在 &lt;code&gt;PHP&lt;/code&gt; 中将json转换为数组，如果JSON是正确的，则 &lt;code&gt;json_decode()&lt;/code&gt; 可以正常工作，并将返回一个数组，但是，如果JSON格式不正确，则它将返回 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0edc024abb9688a5ea877692125f834a7f3b63fb" translate="yes" xml:space="preserve">
          <source>Chocolate with Sprinkles</source>
          <target state="translated">朱古力加雪花</target>
        </trans-unit>
        <trans-unit id="313dc8a055a44a7ff53b59b53ce9a63054a7568b" translate="yes" xml:space="preserve">
          <source>Consider using &lt;code&gt;JSONPath&lt;/code&gt;&lt;a href=&quot;https://packagist.org/packages/flow/jsonpath&quot;&gt;https://packagist.org/packages/flow/jsonpath&lt;/a&gt;</source>
          <target state="translated">考虑使用 &lt;code&gt;JSONPath&lt;/code&gt; &lt;a href=&quot;https://packagist.org/packages/flow/jsonpath&quot;&gt;https://packagist.org/packages/flow/jsonpath&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4bf0456effdcaeb906ef7470f9134e274ea01bb" translate="yes" xml:space="preserve">
          <source>Eg.</source>
          <target state="translated">Eg.</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="ec729c97a6eb38d62d2506f8c5dfa8c6fba67d9a" translate="yes" xml:space="preserve">
          <source>Few Points to remember:</source>
          <target state="translated">要记住的几个要点。</target>
        </trans-unit>
        <trans-unit id="1f5a8dc9e9bce2a212ac7152227568de7313247a" translate="yes" xml:space="preserve">
          <source>First off you have a string. JSON is not an array, an object, or a data structure. &lt;a href=&quot;http://json.org/&quot;&gt;JSON&lt;/a&gt; is a text-based serialization format - so a fancy string, but still just a string. Decode it in PHP by using &lt;a href=&quot;http://php.net/json_decode&quot;&gt;&lt;code&gt;json_decode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">首先，你有一个字符串。 JSON不是数组，对象或数据结构。 &lt;a href=&quot;http://json.org/&quot;&gt;JSON&lt;/a&gt;是基于文本的序列化格式，因此是花哨的字符串，但仍然只是字符串。 使用&lt;a href=&quot;http://php.net/json_decode&quot;&gt; &lt;code&gt;json_decode()&lt;/code&gt; &lt;/a&gt;在PHP中对其进行解码。</target>
        </trans-unit>
        <trans-unit id="4a6368c54a2a53f4e9d910e0d24f09d02ab96f39" translate="yes" xml:space="preserve">
          <source>Furthermore, if you want to read JSON files and extract its data (as it seems you're trying to perform this), see &lt;a href=&quot;https://github.com/MAChitgarha/JSONFile&quot;&gt;JSONFile&lt;/a&gt; package, which I have written it, too.</source>
          <target state="translated">此外，如果您想读取JSON文件并提取其数据（似乎您正在尝试执行此操作），请参阅&lt;a href=&quot;https://github.com/MAChitgarha/JSONFile&quot;&gt;JSONFile&lt;/a&gt;包，我也已经编写了它。</target>
        </trans-unit>
        <trans-unit id="51582c3a29298d27f59d58e55eed54bce9e04ea2" translate="yes" xml:space="preserve">
          <source>Glazed</source>
          <target state="translated">Glazed</target>
        </trans-unit>
        <trans-unit id="884b24f59e95a256e6146a5fa471d1c12b840d09" translate="yes" xml:space="preserve">
          <source>Hit the decoded data with a &lt;a href=&quot;http://php.net/print_r&quot;&gt;&lt;code&gt;print_r()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">用&lt;a href=&quot;http://php.net/print_r&quot;&gt; &lt;code&gt;print_r()&lt;/code&gt; &lt;/a&gt;命中解码后的数据：</target>
        </trans-unit>
        <trans-unit id="ed2c246f1b1d80cde84f94e5306784b2a0b71bc8" translate="yes" xml:space="preserve">
          <source>How do I decode this in PHP and access the resulting data?</source>
          <target state="translated">如何在PHP中解码并访问所产生的数据?</target>
        </trans-unit>
        <trans-unit id="c68851723d5873669d112250895894c7b43e3465" translate="yes" xml:space="preserve">
          <source>How do I extract data from JSON with PHP</source>
          <target state="translated">如何用PHP从JSON中提取数据?</target>
        </trans-unit>
        <trans-unit id="9c7b5ce88e1870e05505d44f36eade7d18551d2b" translate="yes" xml:space="preserve">
          <source>How to properly iterate through a big json file</source>
          <target state="translated">如何正确迭代一个大的json文件?</target>
        </trans-unit>
        <trans-unit id="8bd4beaea6157cafbaffca1541b3a462c40d9287" translate="yes" xml:space="preserve">
          <source>I have the JSON:</source>
          <target state="translated">我有JSON。</target>
        </trans-unit>
        <trans-unit id="c99e38f7ae94ef1959d5af3e04efd367c854e896" translate="yes" xml:space="preserve">
          <source>I have written a package named &lt;code&gt;JSON&lt;/code&gt; (&lt;a href=&quot;https://github.com/MAChitgarha/JSON&quot;&gt;GitHub&lt;/a&gt;, &lt;a href=&quot;https://packagist.org/packages/machitgarha/json&quot;&gt;Packagist&lt;/a&gt;). If you want to prevent overheads of using &lt;code&gt;json_*&lt;/code&gt; functions, you should try it.</source>
          <target state="translated">我编写了一个名为 &lt;code&gt;JSON&lt;/code&gt; 的包（ &lt;a href=&quot;https://github.com/MAChitgarha/JSON&quot;&gt;GitHub&lt;/a&gt; ， &lt;a href=&quot;https://packagist.org/packages/machitgarha/json&quot;&gt;Packagist&lt;/a&gt; ）。 如果要防止使用 &lt;code&gt;json_*&lt;/code&gt; 函数的开销，则应该尝试一下。</target>
        </trans-unit>
        <trans-unit id="10088da4f236ec0befb8e7b2d519554393ebe821" translate="yes" xml:space="preserve">
          <source>If malformed JSON, and you are expecting only array, then you can use this function,</source>
          <target state="translated">如果是畸形的JSON,而你期望的只是数组,那么你可以使用这个函数。</target>
        </trans-unit>
        <trans-unit id="34e5980fb72b8750caa875a831fcc1af4aafc6ca" translate="yes" xml:space="preserve">
          <source>If malformed JSON, and you want to stop code execution, then you can use this function,</source>
          <target state="translated">如果是畸形的JSON,而你想停止代码的执行,那么你可以使用这个函数。</target>
        </trans-unit>
        <trans-unit id="2adde3af6ad5c0d302a8d1b3f5701ed6baca1be6" translate="yes" xml:space="preserve">
          <source>If you can only get so far into it before you get lost - go that far and hit &lt;em&gt;that&lt;/em&gt; with &lt;code&gt;print_r()&lt;/code&gt;:</source>
          <target state="translated">如果您只能 &lt;code&gt;print_r()&lt;/code&gt; 才能走得那么远-往前走，然后用print_r（）击中&lt;em&gt;它&lt;/em&gt; ：</target>
        </trans-unit>
        <trans-unit id="21645eac83a12409ec9ad1505baccee1dfad8ac0" translate="yes" xml:space="preserve">
          <source>If you have an integer as property see: &lt;a href=&quot;https://stackoverflow.com/questions/10333016/how-to-access-object-properties-with-names-like-integers&quot;&gt;How to access object properties with names like integers?&lt;/a&gt; as reference.</source>
          <target state="translated">如果您具有整数作为属性，请参见： &lt;a href=&quot;https://stackoverflow.com/questions/10333016/how-to-access-object-properties-with-names-like-integers&quot;&gt;如何使用诸如整数之类的名称访问对象属性？&lt;/a&gt; 作为参考。</target>
        </trans-unit>
        <trans-unit id="0ad97c55c1989c17b597f78824a412383228584b" translate="yes" xml:space="preserve">
          <source>If you need to change the max depth you're probably solving the wrong problem. Find out why you're getting such deeply nested data (e.g. the service you're querying that's generating the JSON has a bug) and get that to not happen.</source>
          <target state="translated">如果你需要改变最大深度,你可能是解决了错误的问题。找出你为什么会得到如此深度嵌套的数据(例如,你查询的服务生成的JSON有一个bug),然后让它不发生。</target>
        </trans-unit>
        <trans-unit id="a0a5a270ed47b9c3bbcd6e1134447c0cf668c6c3" translate="yes" xml:space="preserve">
          <source>If your JSON is too large for &lt;code&gt;json_decode()&lt;/code&gt; to handle at once things start to get tricky. See:</source>
          <target state="translated">如果您的JSON太大， &lt;code&gt;json_decode()&lt;/code&gt; 无法立即处理，那么事情开始变得棘手。 看到：</target>
        </trans-unit>
        <trans-unit id="e1cf13c6e5b355588073169bdf3d255a5c992faa" translate="yes" xml:space="preserve">
          <source>In the event of a failure to decode, &lt;a href=&quot;http://php.net/manual/en/function.json-last-error.php&quot;&gt;&lt;code&gt;json_last_error()&lt;/code&gt;&lt;/a&gt; can be used to determine the exact nature of the error.</source>
          <target state="translated">如果解码失败，则可以使用&lt;a href=&quot;http://php.net/manual/en/function.json-last-error.php&quot;&gt; &lt;code&gt;json_last_error()&lt;/code&gt; &lt;/a&gt;确定错误的确切性质。</target>
        </trans-unit>
        <trans-unit id="55c634f61f7da4f089010efdb4ccf3a71fb56c2c" translate="yes" xml:space="preserve">
          <source>It contains elements nested more than 512 levels deep. This default max depth can be overridden by passing an integer as the third argument to &lt;a href=&quot;http://php.net/json_decode&quot;&gt;&lt;code&gt;json_decode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">它包含嵌套超过512个级别的元素。 通过将整数作为第三个参数传递给&lt;a href=&quot;http://php.net/json_decode&quot;&gt; &lt;code&gt;json_decode()&lt;/code&gt; ,&lt;/a&gt;可以覆盖此默认的最大深度。</target>
        </trans-unit>
        <trans-unit id="b994aa4f680589403787665c1e4cabb9faf33e8e" translate="yes" xml:space="preserve">
          <source>It'll tell you where you have objects, where you have arrays, along with the names and values of their members.</source>
          <target state="translated">它将告诉你在哪里有对象,哪里有数组,以及成员的名称和值。</target>
        </trans-unit>
        <trans-unit id="8ce4ac08341b5c5493687402a1b3a6fb8b84dda4" translate="yes" xml:space="preserve">
          <source>It's ridiculous but it happens - there's JSON encoded as a string within your JSON. Decode, access the string as usual, decode &lt;em&gt;that&lt;/em&gt;, and eventually get to what you need.</source>
          <target state="translated">这很荒谬，但确实发生了-您的JSON中将JSON编码为字符串。 解码，照常访问该字符串， &lt;em&gt;对该进行&lt;/em&gt;解码，最终得到所需的内容。</target>
        </trans-unit>
        <trans-unit id="d6478da7119748fbd44544b80a3faaf90e1a55e7" translate="yes" xml:space="preserve">
          <source>Iterate over it with &lt;a href=&quot;http://php.net/manual/en/control-structures.foreach.php&quot;&gt;&lt;code&gt;foreach&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">用&lt;a href=&quot;http://php.net/manual/en/control-structures.foreach.php&quot;&gt; &lt;code&gt;foreach&lt;/code&gt; 遍历&lt;/a&gt;它。</target>
        </trans-unit>
        <trans-unit id="07396d943ed83c6384166bcaeac7d0e7e92e49d8" translate="yes" xml:space="preserve">
          <source>Look at the JSON - where you see curly brackets &lt;code&gt;{}&lt;/code&gt; expect an object, where you see square brackets &lt;code&gt;[]&lt;/code&gt; expect an array.</source>
          <target state="translated">看一下JSON-您在大括号 &lt;code&gt;{}&lt;/code&gt; 中看到一个对象，在方括号 &lt;code&gt;[]&lt;/code&gt; 中看到一个数组。</target>
        </trans-unit>
        <trans-unit id="77930252fd8fa4c7fa6fc965a1105a8bfebaa73b" translate="yes" xml:space="preserve">
          <source>Make sure you pass in &lt;code&gt;utf8&lt;/code&gt; content, or &lt;code&gt;json_decode&lt;/code&gt; may error out and just return a &lt;code&gt;NULL&lt;/code&gt; value.</source>
          <target state="translated">确保您传入 &lt;code&gt;utf8&lt;/code&gt; 内容，否则 &lt;code&gt;json_decode&lt;/code&gt; 可能会出错并仅返回 &lt;code&gt;NULL&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="2c80325e96c6a28da569ba88e6bf7452bae2dd98" translate="yes" xml:space="preserve">
          <source>Maple</source>
          <target state="translated">Maple</target>
        </trans-unit>
        <trans-unit id="cd39a88014f9484fb239d7deacc0266b05bef734" translate="yes" xml:space="preserve">
          <source>Objects will be instances of &lt;a href=&quot;http://php.net/manual/en/reserved.classes.php&quot;&gt;stdClass&lt;/a&gt;, a built-in class which is just a &lt;a href=&quot;https://stackoverflow.com/questions/931407/what-is-stdclass-in-php&quot;&gt;generic thing&lt;/a&gt; that's not important here.</source>
          <target state="translated">对象将是&lt;a href=&quot;http://php.net/manual/en/reserved.classes.php&quot;&gt;stdClass的&lt;/a&gt;实例， stdClass是一个内置类，这只是一个&lt;a href=&quot;https://stackoverflow.com/questions/931407/what-is-stdclass-in-php&quot;&gt;通用的东西&lt;/a&gt; ，在这里并不重要。</target>
        </trans-unit>
        <trans-unit id="7951f73febcc4d57f6c90c33bfd76e7140f4ce9e" translate="yes" xml:space="preserve">
          <source>Or mess about with any of the &lt;a href=&quot;http://php.net/manual/en/ref.array.php&quot;&gt;bazillion built-in array functions&lt;/a&gt;.</source>
          <target state="translated">或与任何&lt;a href=&quot;http://php.net/manual/en/ref.array.php&quot;&gt;庞大的内置数组函数混为一谈&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a76cf9887b6f0853816551224e51090fbd36556" translate="yes" xml:space="preserve">
          <source>Prints</source>
          <target state="translated">Prints</target>
        </trans-unit>
        <trans-unit id="2c14ea558a8b5cd95e5b0ec80de4db211d6add31" translate="yes" xml:space="preserve">
          <source>Processing large JSON files in PHP</source>
          <target state="translated">在PHP中处理大型JSON文件</target>
        </trans-unit>
        <trans-unit id="9caf0fa2989d8b72bfefaff6b654d9199bc0569d" translate="yes" xml:space="preserve">
          <source>Read the documentation for whatever it is you're getting the JSON from.</source>
          <target state="translated">无论你从什么地方获取JSON,请阅读文档。</target>
        </trans-unit>
        <trans-unit id="bdd397b6896115da863daca96099c32ba78cf83b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/MAChitgarha/JSON/wiki&quot;&gt;the wiki&lt;/a&gt;, or &lt;a href=&quot;https://github.com/MAChitgarha/JSON/wiki/a-quick-tutorial&quot;&gt;the quick tutorial&lt;/a&gt; to get familiar with it.</source>
          <target state="translated">请参阅&lt;a href=&quot;https://github.com/MAChitgarha/JSON/wiki&quot;&gt;Wiki&lt;/a&gt;或&lt;a href=&quot;https://github.com/MAChitgarha/JSON/wiki/a-quick-tutorial&quot;&gt;快速教程&lt;/a&gt;以熟悉它。</target>
        </trans-unit>
        <trans-unit id="90f8880d8a52bd21b7baf9a3220428e90ef31e19" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;https://stackoverflow.com/q/17364127/3942918&quot;&gt;Reference: all basic ways to sort arrays and data in PHP&lt;/a&gt;.</source>
          <target state="translated">请参阅： &lt;a href=&quot;https://stackoverflow.com/q/17364127/3942918&quot;&gt;参考：PHP中对数组和数据进行排序的所有基本方法&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="441338da2d560d3fb6535d2b3ed7c04fe85f2d97" translate="yes" xml:space="preserve">
          <source>Sometimes you'll have an object property name that contains something like a hyphen &lt;code&gt;-&lt;/code&gt; or at sign &lt;code&gt;@&lt;/code&gt; which can't be used in a literal identifier. Instead you can use a string literal within curly braces to address it.</source>
          <target state="translated">有时，您将拥有一个对象属性名称，其中包含连字符 &lt;code&gt;-&lt;/code&gt; 或 &lt;code&gt;@&lt;/code&gt; 符号，不能在文字标识符中使用。 相反，您可以在花括号内使用字符串文字来解决它。</target>
        </trans-unit>
        <trans-unit id="9f073154b1644abc3f7257a1c2757da10347a106" translate="yes" xml:space="preserve">
          <source>Take a look at it in &lt;a href=&quot;http://array.include-once.org/&quot;&gt;this handy interactive JSON explorer&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;http://array.include-once.org/&quot;&gt;这个方便的交互式JSON资源管理器中&lt;/a&gt;进行查看。</target>
        </trans-unit>
        <trans-unit id="7406743f64cc6c07760c10b480bd8845edd236c6" translate="yes" xml:space="preserve">
          <source>The JSON consists entirely of just that, &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">JSON完全由 &lt;code&gt;null&lt;/code&gt; 组成 。</target>
        </trans-unit>
        <trans-unit id="2442be36fb465da64e5bb4e87ac4cc9ce90611a7" translate="yes" xml:space="preserve">
          <source>The JSON is invalid - check the result of &lt;a href=&quot;http://php.net/manual/en/function.json-last-error-msg.php&quot;&gt;&lt;code&gt;json_last_error_msg&lt;/code&gt;&lt;/a&gt; or put it through something like &lt;a href=&quot;http://jsonlint.com/&quot;&gt;JSONLint&lt;/a&gt;.</source>
          <target state="translated">JSON无效-检查&lt;a href=&quot;http://php.net/manual/en/function.json-last-error-msg.php&quot;&gt; &lt;code&gt;json_last_error_msg&lt;/code&gt; &lt;/a&gt;的结果或将其放入类似&lt;a href=&quot;http://jsonlint.com/&quot;&gt;JSONLint的结果&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d780f16e3b42f56d3fb26352c730fe8157cf7d2" translate="yes" xml:space="preserve">
          <source>The properties of objects and the elements of arrays might be more objects and/or arrays - you can simply continue to access their properties and members as usual, e.g. &lt;code&gt;$object-&amp;gt;array[0]-&amp;gt;etc&lt;/code&gt;.</source>
          <target state="translated">对象的属性和数组的元素可能是更多的对象和/或数组-您可以像往常一样继续访问它们的属性和成员，例如 &lt;code&gt;$object-&amp;gt;array[0]-&amp;gt;etc&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5a6a1d25e385353d0dda258c3b65d863ddb7a911" translate="yes" xml:space="preserve">
          <source>The value of key 'bar' is 'bar value'</source>
          <target state="translated">键 &quot;bar &quot;的值为 &quot;bar值</target>
        </trans-unit>
        <trans-unit id="ac644c37f6457f5f26e2ecf6bd47e2213b743dc6" translate="yes" xml:space="preserve">
          <source>The value of key 'baz' is 'baz value'</source>
          <target state="translated">键'BASK'的值为'BASK值'。</target>
        </trans-unit>
        <trans-unit id="33ea6e0acbc774174cf7e3f962ae01e3c88eb69f" translate="yes" xml:space="preserve">
          <source>The value of key 'foo' is 'foo value'</source>
          <target state="translated">键'foo'的值是'foo值'。</target>
        </trans-unit>
        <trans-unit id="c0b00f15f532bea82c0eabb7d7d8bb1ad50180ee" translate="yes" xml:space="preserve">
          <source>There is a pretty clear explanation of how to use it and parse a JSON-file &lt;strong&gt;avoiding all the loops&lt;/strong&gt; proposed. If you are familiar with &lt;code&gt;XPath&lt;/code&gt; for &lt;code&gt;XML&lt;/code&gt; you will start loving this approach.</source>
          <target state="translated">关于如何使用它并解析JSON文件， &lt;strong&gt;避免了所有&lt;/strong&gt;建议&lt;strong&gt;的循环，&lt;/strong&gt;有一个非常清晰的解释。 如果您熟悉 &lt;code&gt;XPath&lt;/code&gt; for &lt;code&gt;XML&lt;/code&gt; ,您将开始喜欢这种方法。</target>
        </trans-unit>
        <trans-unit id="ba7185e7aa1e780ba3e753717ea9f75267e158a3" translate="yes" xml:space="preserve">
          <source>There's nothing special about them. They are not &quot;JSON objects&quot; or &quot;JSON arrays.&quot; You've decoded the JSON - you now have &lt;a href=&quot;http://php.net/types&quot;&gt;basic everyday PHP types&lt;/a&gt;.</source>
          <target state="translated">他们没有什么特别的。 它们不是&amp;ldquo; JSON对象&amp;rdquo;或&amp;ldquo; JSON数组&amp;rdquo;。 您已经解码了JSON-现在有了&lt;a href=&quot;http://php.net/types&quot;&gt;基本的日常PHP类型&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="b51e7f8ff6a298727f432253e4694ba796cfbc2b" translate="yes" xml:space="preserve">
          <source>Therein you might find:</source>
          <target state="translated">在这里,你可能会发现:</target>
        </trans-unit>
        <trans-unit id="4f29befcbe4e29df9bf414eb73b8dbcd997387e3" translate="yes" xml:space="preserve">
          <source>These are the things that can be encoded in JSON. Or more accurately, these are PHP's versions of the things that can be encoded in JSON.</source>
          <target state="translated">这些都是可以用JSON编码的东西。或者更准确地说,这些是PHP对可以用JSON编码的东西的版本。</target>
        </trans-unit>
        <trans-unit id="27cceebd272d13eb2945b185356c5f7721b8b0be" translate="yes" xml:space="preserve">
          <source>This happens because either:</source>
          <target state="translated">这种情况的发生,是因为要么。</target>
        </trans-unit>
        <trans-unit id="b81b85f7f6ede979b84731a198555392d1a7b359" translate="yes" xml:space="preserve">
          <source>This is intended to be a general reference question and answer covering many of the never-ending &lt;em&gt;&quot;How do I access data in my JSON?&quot;&lt;/em&gt; questions. It is here to handle the broad basics of decoding JSON in PHP and accessing the results.</source>
          <target state="translated">这旨在作为一般参考问题和答案，涉及许多永无止境的&lt;em&gt;&amp;ldquo;如何访问JSON中的数据？&amp;rdquo;&lt;/em&gt; 问题。 它是在这里处理在PHP中解码JSON和访问结果的广泛基础知识。</target>
        </trans-unit>
        <trans-unit id="e314bb2b86ba403080cb5a33b8b9e74e2d0ed131" translate="yes" xml:space="preserve">
          <source>When decoding a JSON &lt;em&gt;object&lt;/em&gt; to an associative PHP array, you can iterate both keys and values using the &lt;a href=&quot;https://www.php.net/manual/control-structures.foreach.php&quot;&gt;&lt;code&gt;foreach (array_expression as $key =&amp;gt; $value)&lt;/code&gt;&lt;/a&gt; syntax, eg</source>
          <target state="translated">在将JSON &lt;em&gt;对象&lt;/em&gt;解码为关联的PHP数组时，可以使用&lt;a href=&quot;https://www.php.net/manual/control-structures.foreach.php&quot;&gt; &lt;code&gt;foreach (array_expression as $key =&amp;gt; $value)&lt;/code&gt; &lt;/a&gt;语法对键和值进行迭代，例如</target>
        </trans-unit>
        <trans-unit id="449889ddaa9a29a36d8eb21fdbb9218f861ddc74" translate="yes" xml:space="preserve">
          <source>When you do this, instead of objects you'll get associative arrays - arrays with strings for keys. Again you access the elements thereof as usual, e.g. &lt;code&gt;$array['key']&lt;/code&gt;.</source>
          <target state="translated">当您执行此操作时，将获得关联数组-带有键字符串的数组，而不是对象。 同样，您可以像往常一样访问其元素，例如 &lt;code&gt;$array['key']&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="42e5f3663fb8993b0bfc82858debaeccf0614acf" translate="yes" xml:space="preserve">
          <source>You access the &lt;a href=&quot;http://php.net/manual/en/language.oop5.properties.php&quot;&gt;properties&lt;/a&gt; of one of these objects the same way you would for the public non-static properties of any other object, e.g. &lt;code&gt;$object-&amp;gt;property&lt;/code&gt;.</source>
          <target state="translated">您可以像访问其他任何对象的公共非静态属性一样，访问这些对象之一的属性，例如 &lt;code&gt;$object-&amp;gt;property&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed4e63deec28994c1e8fb7cbf71af9ae2d362ce4" translate="yes" xml:space="preserve">
          <source>You access the elements of one of these arrays the same way you would for any other array, e.g. &lt;a href=&quot;http://php.net/manual/en/language.types.array.php#language.types.array.syntax.accessing&quot;&gt;&lt;code&gt;$array[0]&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您可以像访问任何其他数组一样的方式访问这些数组之一的元素，例如&lt;a href=&quot;http://php.net/manual/en/language.types.array.php#language.types.array.syntax.accessing&quot;&gt; &lt;code&gt;$array[0]&lt;/code&gt; &lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="028990a689d50b008006d01cbd478cebc801a74a" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;http://php.net/json_decode&quot;&gt;json_decode()&lt;/a&gt; to convert a json string to a PHP object/array.</source>
          <target state="translated">您可以使用&lt;a href=&quot;http://php.net/json_decode&quot;&gt;json_decode（）&lt;/a&gt;将json字符串转换为PHP对象/数组。</target>
        </trans-unit>
        <trans-unit id="e4859b67c7541f6ebb6e0075bea9a8f1983098ec" translate="yes" xml:space="preserve">
          <source>You can use any function depends on your requirement,</source>
          <target state="translated">你可以根据你的要求使用任何功能。</target>
        </trans-unit>
        <trans-unit id="cd1019d6b78309125b5018bd893e497abed427c7" translate="yes" xml:space="preserve">
          <source>and check the output:</source>
          <target state="translated">并检查输出。</target>
        </trans-unit>
        <trans-unit id="318aaa8c4835cf4124cb77ad98a3a3714e61abaf" translate="yes" xml:space="preserve">
          <source>compound types: &lt;a href=&quot;http://php.net/object&quot;&gt;objects&lt;/a&gt; and &lt;a href=&quot;http://php.net/array&quot;&gt;arrays&lt;/a&gt;.</source>
          <target state="translated">复合类型： &lt;a href=&quot;http://php.net/object&quot;&gt;对象&lt;/a&gt;和&lt;a href=&quot;http://php.net/array&quot;&gt;数组&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="a2428f5f708e3c3da0bb469ae8e530d254117dac" translate="yes" xml:space="preserve">
          <source>scalars: &lt;a href=&quot;http://php.net/string&quot;&gt;strings&lt;/a&gt;, &lt;a href=&quot;http://php.net/int&quot;&gt;ints&lt;/a&gt;, &lt;a href=&quot;http://php.net/float&quot;&gt;floats&lt;/a&gt;, and &lt;a href=&quot;http://php.net/bool&quot;&gt;bools&lt;/a&gt;</source>
          <target state="translated">标量： &lt;a href=&quot;http://php.net/string&quot;&gt;strings&lt;/a&gt; ， &lt;a href=&quot;http://php.net/int&quot;&gt;ints&lt;/a&gt; ， &lt;a href=&quot;http://php.net/float&quot;&gt;floats&lt;/a&gt;和&lt;a href=&quot;http://php.net/bool&quot;&gt;bools&lt;/a&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
