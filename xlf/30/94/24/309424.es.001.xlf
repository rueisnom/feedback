<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/309424">
    <body>
      <group id="309424">
        <trans-unit id="43034e26233535f3360dad382e80b5a62ef3dc0e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;How to do it?&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&amp;iquest;C&amp;oacute;mo hacerlo?&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b4ded4073d0491cc20f616c05fcc728c662caf67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note, if you need to be specific about the input stream's encoding, you can provide the second argument to &lt;code&gt;Scanner&lt;/code&gt; constructor that indicates what character set to use (e.g. &quot;UTF-8&quot;).&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Tenga en cuenta que si necesita ser espec&amp;iacute;fico sobre la codificaci&amp;oacute;n de la secuencia de entrada, puede proporcionar el segundo argumento al constructor del &lt;code&gt;Scanner&lt;/code&gt; que indica qu&amp;eacute; conjunto de caracteres usar (por ejemplo, &quot;UTF-8&quot;).&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0245c932230c09c170a3551aaf97ff3c66416a59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Performance tests&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Pruebas de rendimiento&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8267581055cc77ab39ad71fab25427b57cc0d10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Warning&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="97f4ba42c3525ab67ceb5e6768bd67e64a93b3ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ways to convert an InputStream to a String:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Formas de convertir un InputStream en una cadena:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7661ae913962c93e2c69e8613703c9600c5d4175" translate="yes" xml:space="preserve">
          <source>A nice way to do this is using &lt;a href=&quot;http://commons.apache.org/&quot;&gt;Apache commons&lt;/a&gt;&lt;code&gt;&lt;a href=&quot;https://commons.apache.org/proper/commons-io/javadocs/api-release/org/apache/commons/io/IOUtils.html&quot;&gt;IOUtils&lt;/a&gt;&lt;/code&gt; to copy the &lt;code&gt;InputStream&lt;/code&gt; into a &lt;code&gt;StringWriter&lt;/code&gt;... something like</source>
          <target state="translated">Una buena manera de hacer esto es usar &lt;a href=&quot;http://commons.apache.org/&quot;&gt;Apache commons&lt;/a&gt; &lt;code&gt;&lt;a href=&quot;https://commons.apache.org/proper/commons-io/javadocs/api-release/org/apache/commons/io/IOUtils.html&quot;&gt;IOUtils&lt;/a&gt;&lt;/code&gt; para copiar &lt;code&gt;InputStream&lt;/code&gt; en un &lt;code&gt;StringWriter&lt;/code&gt; ... algo as&amp;iacute; como</target>
        </trans-unit>
        <trans-unit id="57adaf6efb1bc995826808cb2893e57d9fc85d88" translate="yes" xml:space="preserve">
          <source>Also see: (&lt;a href=&quot;http://commons.apache.org/proper/commons-io/javadocs/api-2.4/org/apache/commons/io/IOUtils.html#toString%28java.io.InputStream,%20java.lang.String&quot;&gt;documentation&lt;/a&gt;)</source>
          <target state="translated">Ver tambi&amp;eacute;n: ( &lt;a href=&quot;http://commons.apache.org/proper/commons-io/javadocs/api-2.4/org/apache/commons/io/IOUtils.html#toString%28java.io.InputStream,%20java.lang.String&quot;&gt;documentaci&amp;oacute;n&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="5715134fa19496e459b994c2aa7f62bfdff78188" translate="yes" xml:space="preserve">
          <source>Alternatively, you could use &lt;code&gt;ByteArrayOutputStream&lt;/code&gt; if you don't want to mix your Streams and Writers</source>
          <target state="translated">Alternativamente, puede usar &lt;code&gt;ByteArrayOutputStream&lt;/code&gt; si no desea mezclar sus Streams y Escritores</target>
        </trans-unit>
        <trans-unit id="94f04948050168b4e8b0d9e34720fc67285858c3" translate="yes" xml:space="preserve">
          <source>Another one, for all the Spring users:</source>
          <target state="translated">Otra,para todos los usuarios de Primavera:</target>
        </trans-unit>
        <trans-unit id="43ec67ee48c84ff251e8e017b8bbfaae392e28b9" translate="yes" xml:space="preserve">
          <source>Any of these approaches is an appropriate solution for grabbing a response and creating a String from it.</source>
          <target state="translated">Cualquiera de estos enfoques es una solución apropiada para agarrar una respuesta y crear una cadena a partir de ella.</target>
        </trans-unit>
        <trans-unit id="7c6587e9dc4f379caead6b030a18684db47a77af" translate="yes" xml:space="preserve">
          <source>Apache Commons allows:</source>
          <target state="translated">Apache Commons permite:</target>
        </trans-unit>
        <trans-unit id="8b18e2fc9866cae6b10316b9ce731a876d22ee80" translate="yes" xml:space="preserve">
          <source>ApacheStringWriter2: 574</source>
          <target state="translated">ApacheStringWriter2:574</target>
        </trans-unit>
        <trans-unit id="88e43e77f94811e2fdc7560e5002e122f129f638" translate="yes" xml:space="preserve">
          <source>ApacheStringWriter: 1544</source>
          <target state="translated">ApacheStringWriter:1544</target>
        </trans-unit>
        <trans-unit id="046a5dc08545c00a35020ea2bbe0f3baf9a7b532" translate="yes" xml:space="preserve">
          <source>Approach #1</source>
          <target state="translated">Acercamiento #1</target>
        </trans-unit>
        <trans-unit id="50249d436194b8a19538c761c2a23c744b70ae05" translate="yes" xml:space="preserve">
          <source>Approach #2 - 4.3% slower than #1</source>
          <target state="translated">Acercamiento #2-4.3% más lento que el #1</target>
        </trans-unit>
        <trans-unit id="13f0aef6d8d874aa0a401ef07dfbbe9b6732848f" translate="yes" xml:space="preserve">
          <source>Approach #3 - 2.6% slower than #1</source>
          <target state="translated">Acercamiento #3-2.6% más lento que el #1</target>
        </trans-unit>
        <trans-unit id="ff584d19f07d32446769dcc1ea93d141b94c5244" translate="yes" xml:space="preserve">
          <source>As mentioned by Christoffer Hammarstr&amp;ouml;m below &lt;a href=&quot;https://stackoverflow.com/a/309448/639687&quot;&gt;other answer&lt;/a&gt; it is safer to explicitly specify the &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/nio/charset/Charset.html&quot;&gt;Charset&lt;/a&gt;. I.e. The InputStreamReader constructor can be changes as follows:</source>
          <target state="translated">Como mencion&amp;oacute; Christoffer Hammarstr&amp;ouml;m debajo de &lt;a href=&quot;https://stackoverflow.com/a/309448/639687&quot;&gt;otra respuesta&lt;/a&gt; , es m&amp;aacute;s seguro especificar expl&amp;iacute;citamente el &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/nio/charset/Charset.html&quot;&gt;juego de caracteres&lt;/a&gt; . Es decir, el constructor InputStreamReader se puede cambiar de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="9bdf14f513c5bad328ea1d510aa26abc40544720" translate="yes" xml:space="preserve">
          <source>Benchmark results, of 20 MB random bytes in 20 cycles</source>
          <target state="translated">Resultados de referencia,de 20 MB de bytes aleatorios en 20 ciclos</target>
        </trans-unit>
        <trans-unit id="172b5fec66cd340a563229ec72271366f0c71fe0" translate="yes" xml:space="preserve">
          <source>Benchmark source code</source>
          <target state="translated">Código fuente de referencia</target>
        </trans-unit>
        <trans-unit id="9e235f55dd3a7f63cbe1bf8aac564e7dd5598997" translate="yes" xml:space="preserve">
          <source>BufferReaderTest: Error</source>
          <target state="translated">BufferReaderTest:Error</target>
        </trans-unit>
        <trans-unit id="4a62a9e52b54c2bc1a5012aa1242bc95c7ab1a0c" translate="yes" xml:space="preserve">
          <source>BufferedInputStreamVsByteArrayOutputStream: 314</source>
          <target state="translated">BufferedInputStreamVsByteArrayOutputStream:314</target>
        </trans-unit>
        <trans-unit id="6bda62e239bd60b77376cced879dd171899a29be" translate="yes" xml:space="preserve">
          <source>ByteArrayOutputStreamTest: 194</source>
          <target state="translated">ByteArrayOutputStreamTest:194</target>
        </trans-unit>
        <trans-unit id="11892965a0ce0741ef36ca64683ef00cac155d9b" translate="yes" xml:space="preserve">
          <source>EDIT: On JDK 7+, you can use try-with-resources construct.</source>
          <target state="translated">EDITORIAL:En JDK 7+,puedes usar la construcción de prueba con recursos.</target>
        </trans-unit>
        <trans-unit id="dff32e726ab14723e087077547d1d98b475409ef" translate="yes" xml:space="preserve">
          <source>Essentially the same as some other answers except more succinct.</source>
          <target state="translated">Esencialmente lo mismo que algunas otras respuestas,excepto que más sucintas.</target>
        </trans-unit>
        <trans-unit id="e9d47961ea204a249e0709bf716e8878eede63dc" translate="yes" xml:space="preserve">
          <source>For JDK 9</source>
          <target state="translated">Para JDK 9</target>
        </trans-unit>
        <trans-unit id="2cc9eae5ce66ad937b7ef1f778206d0dacee2a1f" translate="yes" xml:space="preserve">
          <source>For completeness here is &lt;strong&gt;Java 9&lt;/strong&gt; solution:</source>
          <target state="translated">Para completar, aqu&amp;iacute; est&amp;aacute; &lt;strong&gt;la&lt;/strong&gt; soluci&amp;oacute;n &lt;strong&gt;Java 9&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="5e3c6602765d9157cf336529d7e2935236a8af1e" translate="yes" xml:space="preserve">
          <source>Graphs (performance tests depending on Input Stream length in Windows 7 system)</source>
          <target state="translated">Gráficos (pruebas de rendimiento en función de la longitud del flujo de entrada en el sistema Windows 7)</target>
        </trans-unit>
        <trans-unit id="efcc54ff6d2b9567d8ca3725ae7ad3613c3e5947" translate="yes" xml:space="preserve">
          <source>GuavaCharStreams: 589</source>
          <target state="translated">GuavaCharStreams:589</target>
        </trans-unit>
        <trans-unit id="fc703bde71661f219dcd9a802626d939e4a27e8c" translate="yes" xml:space="preserve">
          <source>Hat tip goes also to &lt;a href=&quot;https://stackoverflow.com/users/68127/jacob-gabrielson&quot;&gt;Jacob&lt;/a&gt;, who once pointed me to the said article.</source>
          <target state="translated">La punta del sombrero tambi&amp;eacute;n va para &lt;a href=&quot;https://stackoverflow.com/users/68127/jacob-gabrielson&quot;&gt;Jacob&lt;/a&gt; , quien una vez me se&amp;ntilde;al&amp;oacute; el art&amp;iacute;culo mencionado.</target>
        </trans-unit>
        <trans-unit id="0ff2ba88a69fe3b81ed5220554fc5ce7e7a3c454" translate="yes" xml:space="preserve">
          <source>Here is the complete method for converting &lt;code&gt;InputStream&lt;/code&gt; into &lt;code&gt;String&lt;/code&gt; without using any third party library. Use &lt;code&gt;StringBuilder&lt;/code&gt; for single threaded environment otherwise use &lt;code&gt;StringBuffer&lt;/code&gt;.</source>
          <target state="translated">Aqu&amp;iacute; est&amp;aacute; el m&amp;eacute;todo completo para convertir &lt;code&gt;InputStream&lt;/code&gt; en &lt;code&gt;String&lt;/code&gt; sin usar ninguna biblioteca de terceros. Use &lt;code&gt;StringBuilder&lt;/code&gt; para un entorno de subproceso &amp;uacute;nico; de lo contrario, use &lt;code&gt;StringBuffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c599e809d0d7660277eced532ba32918ff9f6b15" translate="yes" xml:space="preserve">
          <source>Here's a way using only the standard Java library (note that the stream is not closed, your mileage may vary).</source>
          <target state="translated">Aquí hay una forma de usar sólo la biblioteca estándar de Java (ten en cuenta que la corriente no está cerrada,tu kilometraje puede variar).</target>
        </trans-unit>
        <trans-unit id="cd8641f5a83a1df6d9142e744e344af6444530a8" translate="yes" xml:space="preserve">
          <source>Here's how to do it using just the JDK using byte array buffers. This is actually how the commons-io &lt;code&gt;IOUtils.copy()&lt;/code&gt; methods all work. You can replace &lt;code&gt;byte[]&lt;/code&gt; with &lt;code&gt;char[]&lt;/code&gt; if you're copying from a &lt;code&gt;Reader&lt;/code&gt; instead of an &lt;code&gt;InputStream&lt;/code&gt;.</source>
          <target state="translated">Aqu&amp;iacute; le mostramos c&amp;oacute;mo hacerlo utilizando solo el JDK utilizando b&amp;uacute;feres de matriz de bytes. As&amp;iacute; es como funcionan los m&amp;eacute;todos commons-io &lt;code&gt;IOUtils.copy()&lt;/code&gt; . Puede reemplazar el &lt;code&gt;byte[]&lt;/code&gt; con &lt;code&gt;char[]&lt;/code&gt; si est&amp;aacute; copiando desde un &lt;code&gt;Reader&lt;/code&gt; en lugar de un &lt;code&gt;InputStream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="289f5aa209f62c5822679cb5c2228c01a48ffd6d" translate="yes" xml:space="preserve">
          <source>Here's more-or-less sampath's answer, cleaned up a bit and represented as a function:</source>
          <target state="translated">Aquí está la respuesta de más o menos Sampath,limpiada un poco y representada como una función:</target>
        </trans-unit>
        <trans-unit id="c45725471de6703f5a58ba283e0f9f5553f5e09d" translate="yes" xml:space="preserve">
          <source>Here's my &lt;strong&gt;Java 8&lt;/strong&gt; based solution, which uses the &lt;em&gt;new Stream API&lt;/em&gt; to collect all lines from an &lt;code&gt;InputStream&lt;/code&gt;:</source>
          <target state="translated">Aqu&amp;iacute; est&amp;aacute; mi soluci&amp;oacute;n basada en &lt;strong&gt;Java 8&lt;/strong&gt; , que utiliza la &lt;em&gt;nueva API Stream&lt;/em&gt; para recopilar todas las l&amp;iacute;neas de un &lt;code&gt;InputStream&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c6500a518e982688b1eb2f36fd03d81e7939dd83" translate="yes" xml:space="preserve">
          <source>Here's the most elegant, pure-Java (no library) solution I came up with after some experimentation:</source>
          <target state="translated">Aquí está la solución más elegante y pura de Java (sin biblioteca)que se me ocurrió después de algunos experimentos:</target>
        </trans-unit>
        <trans-unit id="242fd7bd00936855357850dc70b8a39637d6e8d8" translate="yes" xml:space="preserve">
          <source>How do I read / convert an InputStream into a String in Java</source>
          <target state="translated">¿Cómo puedo leer convertir un InputStream en un String en Java</target>
        </trans-unit>
        <trans-unit id="9eb401a624c4c5bb0f7ca6564411da7adbe56aee" translate="yes" xml:space="preserve">
          <source>I attempted to get the response into a String 3 different ways. (shown below)</source>
          <target state="translated">Intenté obtener la respuesta en una cadena de tres maneras diferentes.(se muestra a continuación)</target>
        </trans-unit>
        <trans-unit id="072727f359585cd87f883dc1b84d756fbb03a4e2" translate="yes" xml:space="preserve">
          <source>I did a benchmark upon 14 distinct answers here (sorry for not providing credits but there are too many duplicates).</source>
          <target state="translated">Hice una evaluación comparativa de 14 respuestas distintas aquí (perdón por no dar créditos pero hay demasiados duplicados).</target>
        </trans-unit>
        <trans-unit id="41e096c3c05b588bd1bdb177451443d6496da52f" translate="yes" xml:space="preserve">
          <source>I learned this trick from &lt;a href=&quot;https://community.oracle.com/blogs/pat/2004/10/23/stupid-scanner-tricks&quot;&gt;&quot;Stupid Scanner tricks&quot;&lt;/a&gt; article. The reason it works is because &lt;a href=&quot;http://download.oracle.com/javase/8/docs/api/java/util/Scanner.html&quot;&gt;Scanner&lt;/a&gt; iterates over tokens in the stream, and in this case we separate tokens using &quot;beginning of the input boundary&quot; (\A), thus giving us only one token for the entire contents of the stream.</source>
          <target state="translated">Aprend&amp;iacute; este truco del art&amp;iacute;culo &lt;a href=&quot;https://community.oracle.com/blogs/pat/2004/10/23/stupid-scanner-tricks&quot;&gt;&quot;Trucos de Stupid Scanner&quot;&lt;/a&gt; . La raz&amp;oacute;n por la que funciona es porque &lt;a href=&quot;http://download.oracle.com/javase/8/docs/api/java/util/Scanner.html&quot;&gt;Scanner&lt;/a&gt; itera sobre tokens en el flujo, y en este caso separamos los tokens usando &quot;principio del l&amp;iacute;mite de entrada&quot; (\ A), lo que nos da solo un token para todo el contenido del flujo.</target>
        </trans-unit>
        <trans-unit id="e831b86f84b8dbd3c7b8cb6d1bc3f1233ea9791e" translate="yes" xml:space="preserve">
          <source>I left out try/catch blocks for the sake readability.</source>
          <target state="translated">Dejé fuera los bloques de prueba por el bien de la legibilidad.</target>
        </trans-unit>
        <trans-unit id="7e2ea66d80ea45d3e52409326ca64ca9c627c6fa" translate="yes" xml:space="preserve">
          <source>I ran some timing tests because time matters, always.</source>
          <target state="translated">Hice algunas pruebas de tiempo porque el tiempo importa,siempre.</target>
        </trans-unit>
        <trans-unit id="d0bb9b89958b70161c410cb2cde4a311154c58ed" translate="yes" xml:space="preserve">
          <source>I'd use some Java 8 tricks.</source>
          <target state="translated">Usaría algunos trucos de Java 8.</target>
        </trans-unit>
        <trans-unit id="ce4cdf3959fc5f2fe4ff63feb593f39b5a537573" translate="yes" xml:space="preserve">
          <source>If you are using Google-Collections/Guava you could do the following:</source>
          <target state="translated">Si usas Google-CollectionsGuava podrías hacer lo siguiente:</target>
        </trans-unit>
        <trans-unit id="01784c415c594c6475412f68a184ae1ccb2b0cc7" translate="yes" xml:space="preserve">
          <source>If you can't use Commons IO (FileUtils/IOUtils/CopyUtils), here's an example using a BufferedReader to read the file line by line:</source>
          <target state="translated">Si no puedes usar Commons IO (FileUtilsIOUtilsCopyUtils),aquí tienes un ejemplo usando un BufferedReader para leer el archivo línea por línea:</target>
        </trans-unit>
        <trans-unit id="12963de5b5d06835c8268d0be700e1ca59e8b9e1" translate="yes" xml:space="preserve">
          <source>If you have a &lt;code&gt;java.io.InputStream&lt;/code&gt; object, how should you process that object and produce a &lt;code&gt;String&lt;/code&gt;?</source>
          <target state="translated">Si tiene un objeto &lt;code&gt;java.io.InputStream&lt;/code&gt; , &amp;iquest;c&amp;oacute;mo debe procesar ese objeto y producir una &lt;code&gt;String&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="606cf7876b4c86c94138c760674aac0174d956b7" translate="yes" xml:space="preserve">
          <source>If you were feeling adventurous, you could mix Scala and Java and end up with this:</source>
          <target state="translated">Si te sentías aventurero,podías mezclar Scala y Java y terminar con esto:</target>
        </trans-unit>
        <trans-unit id="c6978cfad82d4a8c038ff5b4f8d35cb283ac1a24" translate="yes" xml:space="preserve">
          <source>In Groovy</source>
          <target state="translated">En Groovy</target>
        </trans-unit>
        <trans-unit id="13ddbb86d8702b30d9fb880f8e9ab9a72dfb475a" translate="yes" xml:space="preserve">
          <source>In terms of &lt;code&gt;reduce&lt;/code&gt;, and &lt;code&gt;concat&lt;/code&gt; it can be expressed in Java 8 as:</source>
          <target state="translated">En t&amp;eacute;rminos de &lt;code&gt;reduce&lt;/code&gt; , y &lt;code&gt;concat&lt;/code&gt; se puede expresar en Java 8 como:</target>
        </trans-unit>
        <trans-unit id="4a06ec3cd861d574ba6922c23c84403434589f03" translate="yes" xml:space="preserve">
          <source>InputStreamAndStringBuilder: Error</source>
          <target state="translated">InputStreamAndStringBuilder:Error</target>
        </trans-unit>
        <trans-unit id="717d8fb549db3017d757b49bfeb7fe1a30cdb46a" translate="yes" xml:space="preserve">
          <source>Is for Java 7 or higher.</source>
          <target state="translated">es para Java 7 o superior.</target>
        </trans-unit>
        <trans-unit id="4b8302ace29757a204e60da507f99cec98ed12fe" translate="yes" xml:space="preserve">
          <source>Is free from library dependencies.</source>
          <target state="translated">Está libre de las dependencias de la biblioteca.</target>
        </trans-unit>
        <trans-unit id="2f269489dec51317ec43d6f714887f43f83f3c7c" translate="yes" xml:space="preserve">
          <source>It safely handles the Charset.</source>
          <target state="translated">Maneja con seguridad el Charset.</target>
        </trans-unit>
        <trans-unit id="6b38cf16381e20cc807e9a67b63c64cdc5b4880c" translate="yes" xml:space="preserve">
          <source>Java9ISReadAllBytes: 205</source>
          <target state="translated">Java9ISReadAllBytes:205</target>
        </trans-unit>
        <trans-unit id="11891f20dc1557edc55e2db9c9bf1e4d31a8156a" translate="yes" xml:space="preserve">
          <source>Java9ISTransferTo: 201</source>
          <target state="translated">Java9ISTransferencia a:201</target>
        </trans-unit>
        <trans-unit id="3f581552aa8d865cb154c1ae527f013150a175d7" translate="yes" xml:space="preserve">
          <source>Kotlin users simply do:</source>
          <target state="translated">Los usuarios de Kotlin simplemente lo hacen:</target>
        </trans-unit>
        <trans-unit id="c111bd4e8b48a3d4e58d3481b52bdf92e8eee23d" translate="yes" xml:space="preserve">
          <source>Make sure to close the streams at end if you use Stream Readers</source>
          <target state="translated">Asegúrate de cerrar las corrientes al final si usas lectores de corrientes</target>
        </trans-unit>
        <trans-unit id="a32efe32757fab7945111b39e86d49bbd28d16ec" translate="yes" xml:space="preserve">
          <source>Mixing Java and Scala code and libraries has it's benefits.</source>
          <target state="translated">Mezclar el código Java y Scala y las bibliotecas tiene sus beneficios.</target>
        </trans-unit>
        <trans-unit id="e13555fb2491ca764011241f3a50149b9b045de9" translate="yes" xml:space="preserve">
          <source>NioStream: 198</source>
          <target state="translated">NioStream:198</target>
        </trans-unit>
        <trans-unit id="6678201542ad7416d4512ee51be113a3f0c1fae9" translate="yes" xml:space="preserve">
          <source>Note that the second parameter (i.e. Charsets.UTF_8) for the &lt;code&gt;InputStreamReader&lt;/code&gt; isn't necessary, but it is generally a good idea to specify the encoding if you know it (which you should!)</source>
          <target state="translated">Tenga en cuenta que el segundo par&amp;aacute;metro (es decir, Charsets.UTF_8) para &lt;code&gt;InputStreamReader&lt;/code&gt; no es necesario, pero generalmente es una buena idea especificar la codificaci&amp;oacute;n si la conoce (&amp;iexcl;lo cual deber&amp;iacute;a!)</target>
        </trans-unit>
        <trans-unit id="e48af330a512c5807fa5dd56024f202fb29da123" translate="yes" xml:space="preserve">
          <source>Of course, you could choose other character encodings besides UTF-8.</source>
          <target state="translated">Por supuesto,podrías elegir otras codificaciones de personajes además del UTF-8.</target>
        </trans-unit>
        <trans-unit id="0128f848d40a96b88416788a20148a4d80fc266e" translate="yes" xml:space="preserve">
          <source>Or if you want raw speed I'd propose a variation on what Paul de Vrieze suggested (which avoids using a StringWriter (which uses a StringBuffer internally):</source>
          <target state="translated">O si quieres velocidad bruta propondría una variación de lo que sugirió Paul de Vrieze (que evita el uso de un StringWriter (que usa un StringBuffer internamente):</target>
        </trans-unit>
        <trans-unit id="fe762b1085af1613a6011f26fa4710cbe8399831" translate="yes" xml:space="preserve">
          <source>ParallelStreamApi: Error</source>
          <target state="translated">ParallelStreamApi:Error</target>
        </trans-unit>
        <trans-unit id="f00bcf85146ca324fd2f5ad3c20098725eca2e09" translate="yes" xml:space="preserve">
          <source>Performance test (Average Time) depending on Input Stream length in Windows 7 system:</source>
          <target state="translated">Prueba de rendimiento (tiempo medio)según la duración del flujo de entrada en el sistema Windows 7:</target>
        </trans-unit>
        <trans-unit id="15ce5fd2063b8dfb7a742ad221b54edf01978e13" translate="yes" xml:space="preserve">
          <source>Performance tests for big &lt;code&gt;String&lt;/code&gt; (length = 50100), url in &lt;a href=&quot;https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/5.0-other-examples/src/main/java/other_examples/ConvertBigStringToInputStreamBenchmark.java&quot;&gt;github&lt;/a&gt; (mode = Average Time, system = Linux, score 200,715 is the best):</source>
          <target state="translated">Pruebas de rendimiento para &lt;code&gt;String&lt;/code&gt; grande (longitud = 50100), url en &lt;a href=&quot;https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/5.0-other-examples/src/main/java/other_examples/ConvertBigStringToInputStreamBenchmark.java&quot;&gt;github&lt;/a&gt; (modo = Tiempo promedio, sistema = Linux, el puntaje 200,715 es el mejor):</target>
        </trans-unit>
        <trans-unit id="b3cb4da7e0a46ecc0b89881c22549a0edad490f0" translate="yes" xml:space="preserve">
          <source>Performance tests for small &lt;code&gt;String&lt;/code&gt; (length = 175), url in &lt;a href=&quot;https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/5.0-other-examples/src/main/java/other_examples/ConvertInputStreamToStringBenchmark.java&quot;&gt;github&lt;/a&gt; (mode = Average Time, system = Linux, score 1,343 is the best):</source>
          <target state="translated">Pruebas de rendimiento para &lt;code&gt;String&lt;/code&gt; peque&amp;ntilde;as (longitud = 175), url en &lt;a href=&quot;https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/5.0-other-examples/src/main/java/other_examples/ConvertInputStreamToStringBenchmark.java&quot;&gt;github&lt;/a&gt; (modo = Tiempo promedio, sistema = Linux, la puntuaci&amp;oacute;n 1,343 es la mejor):</target>
        </trans-unit>
        <trans-unit id="78891d7798e610d404bbb2aa0d32188cf864067d" translate="yes" xml:space="preserve">
          <source>Pure Java solution using &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html&quot;&gt;Stream&lt;/a&gt;s, works since Java 8.</source>
          <target state="translated">La soluci&amp;oacute;n Java pura que utiliza &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html&quot;&gt;Stream&lt;/a&gt; s funciona desde Java 8.</target>
        </trans-unit>
        <trans-unit id="da23b99455ab567bf0a97535eef6a9b60b63035c" translate="yes" xml:space="preserve">
          <source>Ranks:</source>
          <target state="translated">Ranks:</target>
        </trans-unit>
        <trans-unit id="581fb72d961561d6847c324a9ca507a1b5950e74" translate="yes" xml:space="preserve">
          <source>ScannerReader: 633</source>
          <target state="translated">ScannerReader:633</target>
        </trans-unit>
        <trans-unit id="ee6f7fdbb95670468252469db258042fb430a2d5" translate="yes" xml:space="preserve">
          <source>ScannerReaderNoNextTest: 614</source>
          <target state="translated">ScannerReaderNoNextTest:614</target>
        </trans-unit>
        <trans-unit id="81511e081f8c9986efc0fdbf311d5e4326afe95e" translate="yes" xml:space="preserve">
          <source>See full description here: &lt;a href=&quot;https://stackoverflow.com/q/5221524/828757&quot;&gt;Idiomatic way to convert an InputStream to a String in Scala&lt;/a&gt;</source>
          <target state="translated">Vea la descripci&amp;oacute;n completa aqu&amp;iacute;: &lt;a href=&quot;https://stackoverflow.com/q/5221524/828757&quot;&gt;forma idiom&amp;aacute;tica de convertir un InputStream en una cadena en Scala&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ea2d6aa38eef43430f33d53fa0bcdba48daa935" translate="yes" xml:space="preserve">
          <source>So first here is the best method:</source>
          <target state="translated">Así que primero aquí está el mejor método:</target>
        </trans-unit>
        <trans-unit id="fdd23c6c858048553c5af6d3c8b03c82f96172e2" translate="yes" xml:space="preserve">
          <source>So, after running 500 tests on each approach with the same request/response data, here are the numbers. Once again, these are my findings and your findings may not be exactly the same, but I wrote this to give some indication to others of the efficiency differences of these approaches.</source>
          <target state="translated">Así que,después de realizar 500 pruebas en cada aproximación con los mismos datos de respuesta,aquí están los números.Una vez más,estos son mis hallazgos y los suyos pueden no ser exactamente los mismos,pero escribí esto para dar alguna indicación a otros de las diferencias de eficiencia de estos enfoques.</target>
        </trans-unit>
        <trans-unit id="026b2812f764e70f0892e485d100c69c8f343cbf" translate="yes" xml:space="preserve">
          <source>Solution 11 can't work correctly with Unicode text</source>
          <target state="translated">La solución 11 no puede funcionar correctamente con texto Unicode</target>
        </trans-unit>
        <trans-unit id="bc63ac13b888d26e3e57b0b93059a78b5e7f803b" translate="yes" xml:space="preserve">
          <source>Solutions 4, 5 and 9 convert different line breaks to one.</source>
          <target state="translated">Las soluciones 4,5 y 9 convierten diferentes saltos de línea en uno.</target>
        </trans-unit>
        <trans-unit id="32d2d6aa36706f3ca8a19f649cef95bedf129a97" translate="yes" xml:space="preserve">
          <source>StreamApi: Error</source>
          <target state="translated">StreamApi:Error</target>
        </trans-unit>
        <trans-unit id="00627bef2ba7730a07f6233c92965727bd83f278" translate="yes" xml:space="preserve">
          <source>Summarize other answers I found 11 main ways to do this (see below). And I wrote some performance tests (see results below):</source>
          <target state="translated">Resumir otras respuestas Encontré 11 formas principales de hacerlo (ver abajo).Y escribí algunas pruebas de rendimiento (ver resultados más abajo):</target>
        </trans-unit>
        <trans-unit id="5170d50f34a6c54f5d234eb3936b4874c27dd414" translate="yes" xml:space="preserve">
          <source>Suppose I have an &lt;code&gt;InputStream&lt;/code&gt; that contains text data, and I want to convert it to a &lt;code&gt;String&lt;/code&gt;, so for example I can write that to a log file.</source>
          <target state="translated">Supongamos que tengo un &lt;code&gt;InputStream&lt;/code&gt; que contiene datos de texto y quiero convertirlo en una &lt;code&gt;String&lt;/code&gt; , por ejemplo, puedo escribirlo en un archivo de registro.</target>
        </trans-unit>
        <trans-unit id="0620f1007ab1dae6be89d144c9561e20e3905e38" translate="yes" xml:space="preserve">
          <source>Taking into account file one should first get a &lt;code&gt;java.io.Reader&lt;/code&gt; instance. This can then be read and added to a &lt;code&gt;StringBuilder&lt;/code&gt; (we don't need &lt;code&gt;StringBuffer&lt;/code&gt; if we are not accessing it in multiple threads, and &lt;code&gt;StringBuilder&lt;/code&gt; is faster). The trick here is that we work in blocks, and as such don't need other buffering streams. The block size is parameterized for run-time performance optimization.</source>
          <target state="translated">Teniendo en cuenta el archivo uno, primero debe obtener una instancia de &lt;code&gt;java.io.Reader&lt;/code&gt; . Esto se puede leer y agregar a un &lt;code&gt;StringBuilder&lt;/code&gt; (no necesitamos &lt;code&gt;StringBuffer&lt;/code&gt; si no accedemos a &amp;eacute;l en varios subprocesos, y &lt;code&gt;StringBuilder&lt;/code&gt; es m&amp;aacute;s r&amp;aacute;pido). El truco aqu&amp;iacute; es que trabajamos en bloques y, como tal, no necesitamos otras secuencias de almacenamiento en b&amp;uacute;fer. El tama&amp;ntilde;o del bloque est&amp;aacute; parametrizado para la optimizaci&amp;oacute;n del rendimiento en tiempo de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="06d69d810c034fec1b62349402196709a6d1c1a9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/io/InputStream.html#readAllBytes--&quot;&gt;&lt;code&gt;readAllBytes&lt;/code&gt;&lt;/a&gt; is currently in JDK 9 main codebase, so it likely to appear in the release. You can try it right now using the &lt;a href=&quot;https://jdk9.java.net/download/&quot;&gt;JDK 9 snapshot builds&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/io/InputStream.html#readAllBytes--&quot;&gt; &lt;code&gt;readAllBytes&lt;/code&gt; &lt;/a&gt; encuentra actualmente en la base de c&amp;oacute;digo principal JDK 9, por lo que es probable que aparezca en la versi&amp;oacute;n. Puede probarlo ahora usando las &lt;a href=&quot;https://jdk9.java.net/download/&quot;&gt;compilaciones de instant&amp;aacute;neas JDK 9&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bb9325718d8c22f8d9fc1e2cfb09f54b24776deb" translate="yes" xml:space="preserve">
          <source>The easiest way in JDK is with the following code snipplets.</source>
          <target state="translated">La forma más fácil en JDK es con los siguientes códigos de recortes.</target>
        </trans-unit>
        <trans-unit id="9c5435aa74479b8be20014bff2e00f84fcffc7a2" translate="yes" xml:space="preserve">
          <source>The result is very surprising. It turns out that Apache &lt;strong&gt;IOUtils&lt;/strong&gt; is the slowest and &lt;code&gt;ByteArrayOutputStream&lt;/code&gt; is the fastest solutions:</source>
          <target state="translated">El resultado es muy sorprendente. Resulta que Apache &lt;strong&gt;IOUtils&lt;/strong&gt; es el m&amp;aacute;s lento y &lt;code&gt;ByteArrayOutputStream&lt;/code&gt; es la soluci&amp;oacute;n m&amp;aacute;s r&amp;aacute;pida:</target>
        </trans-unit>
        <trans-unit id="f0312c165fe49d2bee03e44ade2f86c55e304b8c" translate="yes" xml:space="preserve">
          <source>The utility methods in &lt;code&gt;org.springframework.util.StreamUtils&lt;/code&gt; are similar to the ones in &lt;code&gt;FileCopyUtils&lt;/code&gt;, but they leave the stream open when done.</source>
          <target state="translated">Los m&amp;eacute;todos de utilidad en &lt;code&gt;org.springframework.util.StreamUtils&lt;/code&gt; son similares a los de &lt;code&gt;FileCopyUtils&lt;/code&gt; , pero dejan la secuencia abierta cuando se hace.</target>
        </trans-unit>
        <trans-unit id="ab9b81fd2ac75e6a2a1030ea2647bece404a7502" translate="yes" xml:space="preserve">
          <source>This is an answer adapted from &lt;code&gt;org.apache.commons.io.IOUtils&lt;/code&gt;&lt;a href=&quot;http://grepcode.com/file/repo1.maven.org/maven2/commons-io/commons-io/2.4/org/apache/commons/io/IOUtils.java&quot;&gt;source code&lt;/a&gt;, for those who want to have the apache implementation but do not want the whole library.</source>
          <target state="translated">Esta es una respuesta adaptada del &lt;a href=&quot;http://grepcode.com/file/repo1.maven.org/maven2/commons-io/commons-io/2.4/org/apache/commons/io/IOUtils.java&quot;&gt;c&amp;oacute;digo fuente&lt;/a&gt; &lt;code&gt;org.apache.commons.io.IOUtils&lt;/code&gt; , para aquellos que desean tener la implementaci&amp;oacute;n de apache pero no quieren toda la biblioteca.</target>
        </trans-unit>
        <trans-unit id="2874247b741b03dede0a3c456498932a0c7404c5" translate="yes" xml:space="preserve">
          <source>This is the best pure Java solution that fits perfectly for Android and any other JVM.</source>
          <target state="translated">Esta es la mejor solución pura de Java que se ajusta perfectamente a Android y a cualquier otra JVM.</target>
        </trans-unit>
        <trans-unit id="a071d424b33608e91498b0d5aa290e0d60d414b4" translate="yes" xml:space="preserve">
          <source>This one is nice because:</source>
          <target state="translated">Este es bonito porque:</target>
        </trans-unit>
        <trans-unit id="de0af1f84cacb1a0079f478ef135e4d076097f56" translate="yes" xml:space="preserve">
          <source>This solution works amazingly well... it is simple, fast, and works on small and large streams just the same!! (see benchmark above.. &lt;strong&gt;No. 8&lt;/strong&gt;)</source>
          <target state="translated">&amp;iexcl;Esta soluci&amp;oacute;n funciona incre&amp;iacute;blemente bien ... es simple, r&amp;aacute;pida y funciona en transmisiones peque&amp;ntilde;as y grandes de todos modos! (ver punto de referencia arriba .. &lt;strong&gt;No. 8&lt;/strong&gt; )</target>
        </trans-unit>
        <trans-unit id="698baf36cfe375eff6acea9bb1f9575b13b0805c" translate="yes" xml:space="preserve">
          <source>Time in milliseconds</source>
          <target state="translated">Tiempo en milisegundos</target>
        </trans-unit>
        <trans-unit id="6c8985f53bd19f6060d8f45bc630082e8d049188" translate="yes" xml:space="preserve">
          <source>To give context, this is the preceding code for all 3 approaches:</source>
          <target state="translated">Para dar contexto,este es el código precedente para los 3 enfoques:</target>
        </trans-unit>
        <trans-unit id="ad1302de11e79d960d8eebd727ac66ab5763b268" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/io/InputStream.html#transferTo-java.io.OutputStream-&quot;&gt;java.io.InputStream.transferTo(OutputStream)&lt;/a&gt; supported in Java 9 and the &lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/io/ByteArrayOutputStream.html#toString-java.lang.String-&quot;&gt;ByteArrayOutputStream.toString(String)&lt;/a&gt; which takes the charset name:</source>
          <target state="translated">Utilice &lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/io/InputStream.html#transferTo-java.io.OutputStream-&quot;&gt;java.io.InputStream.transferTo (OutputStream)&lt;/a&gt; compatible con Java 9 y &lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/io/ByteArrayOutputStream.html#toString-java.lang.String-&quot;&gt;ByteArrayOutputStream.toString (String)&lt;/a&gt; que toma el nombre del conjunto de caracteres:</target>
        </trans-unit>
        <trans-unit id="bc0e34154d952ed72b15f5d9618112640d548177" translate="yes" xml:space="preserve">
          <source>Use:</source>
          <target state="translated">Use:</target>
        </trans-unit>
        <trans-unit id="3f305d6dbecee9e3d10901eb494718a85eb3b08c" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;BufferedInputStream&lt;/code&gt; and &lt;code&gt;ByteArrayOutputStream&lt;/code&gt; (JDK)</source>
          <target state="translated">Uso de &lt;code&gt;BufferedInputStream&lt;/code&gt; y &lt;code&gt;ByteArrayOutputStream&lt;/code&gt; (JDK)</target>
        </trans-unit>
        <trans-unit id="053674bb18db9483ee399efa66c013d2976b366e" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;BufferedReader&lt;/code&gt; (JDK). &lt;strong&gt;Warning:&lt;/strong&gt; This solution converts different line breaks (like &lt;code&gt;\n\r&lt;/code&gt;) to &lt;code&gt;line.separator&lt;/code&gt; system property (for example, in Windows to &quot;\r\n&quot;).</source>
          <target state="translated">Usando &lt;code&gt;BufferedReader&lt;/code&gt; (JDK). &lt;strong&gt;Advertencia:&lt;/strong&gt; esta soluci&amp;oacute;n convierte diferentes saltos de l&amp;iacute;nea (como &lt;code&gt;\n\r&lt;/code&gt; ) a la propiedad del sistema &lt;code&gt;line.separator&lt;/code&gt; (por ejemplo, en Windows a &quot;\ r \ n&quot;).</target>
        </trans-unit>
        <trans-unit id="9c658ffa6eddad4e564bc1340bca6d933d6f2544" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;ByteArrayOutputStream&lt;/code&gt; and &lt;code&gt;inputStream.read&lt;/code&gt; (JDK)</source>
          <target state="translated">Usando &lt;code&gt;ByteArrayOutputStream&lt;/code&gt; y &lt;code&gt;inputStream.read&lt;/code&gt; (JDK)</target>
        </trans-unit>
        <trans-unit id="08ebce2c30cd757eaa86285238dedc6ca1dcf3f8" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;CharStreams&lt;/code&gt; (Guava)</source>
          <target state="translated">Usando &lt;code&gt;CharStreams&lt;/code&gt; (guayaba)</target>
        </trans-unit>
        <trans-unit id="a6c69176c57e8eb3011d94434b95607082c0a03b" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;IOUtils.toString&lt;/code&gt; (Apache Utils)</source>
          <target state="translated">Usando &lt;code&gt;IOUtils.toString&lt;/code&gt; (Apache Utils)</target>
        </trans-unit>
        <trans-unit id="b2c1642ae7f6e58bfc5bedcce0bdb6736fa511f6" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;InputStreamReader&lt;/code&gt; and &lt;code&gt;StringBuilder&lt;/code&gt; (JDK)</source>
          <target state="translated">Usando &lt;code&gt;InputStreamReader&lt;/code&gt; y &lt;code&gt;StringBuilder&lt;/code&gt; (JDK)</target>
        </trans-unit>
        <trans-unit id="7de806a98a99a8f59319102fcc13b3b23f762fa2" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;Scanner&lt;/code&gt; (JDK)</source>
          <target state="translated">Usando el &lt;code&gt;Scanner&lt;/code&gt; (JDK)</target>
        </trans-unit>
        <trans-unit id="73211d62c82fff7813ab45bc8b51b733156786c6" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;StringWriter&lt;/code&gt; and &lt;code&gt;IOUtils.copy&lt;/code&gt; (Apache Commons)</source>
          <target state="translated">Usando &lt;code&gt;StringWriter&lt;/code&gt; y &lt;code&gt;IOUtils.copy&lt;/code&gt; (Apache Commons)</target>
        </trans-unit>
        <trans-unit id="09e086ba3a6b5cfa63f589530a5c66b7c8588200" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;inputStream.read()&lt;/code&gt; and &lt;code&gt;StringBuilder&lt;/code&gt; (JDK). &lt;strong&gt;Warning&lt;/strong&gt;: This solution has problems with Unicode, for example with Russian text (works correctly only with non-Unicode text)</source>
          <target state="translated">Usando &lt;code&gt;inputStream.read()&lt;/code&gt; y &lt;code&gt;StringBuilder&lt;/code&gt; (JDK). &lt;strong&gt;Advertencia&lt;/strong&gt; : esta soluci&amp;oacute;n tiene problemas con Unicode, por ejemplo, con texto en ruso (funciona correctamente solo con texto que no es Unicode)</target>
        </trans-unit>
        <trans-unit id="befda1fb250dd706f15956fc62eddde63660ae34" translate="yes" xml:space="preserve">
          <source>Using &lt;strong&gt;Stream API&lt;/strong&gt; (Java 8). &lt;strong&gt;Warning&lt;/strong&gt;: This solution converts different line breaks (like &lt;code&gt;\r\n&lt;/code&gt;) to &lt;code&gt;\n&lt;/code&gt;.</source>
          <target state="translated">Usando &lt;strong&gt;Stream API&lt;/strong&gt; (Java 8). &lt;strong&gt;Advertencia&lt;/strong&gt; : esta soluci&amp;oacute;n convierte diferentes saltos de l&amp;iacute;nea (como &lt;code&gt;\r\n&lt;/code&gt; ) a &lt;code&gt;\n&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="777b1b7543a47e7a1f58c38911471a754bd6f99c" translate="yes" xml:space="preserve">
          <source>Using &lt;strong&gt;parallel Stream API&lt;/strong&gt; (Java 8). &lt;strong&gt;Warning&lt;/strong&gt;: This solution converts different line breaks (like &lt;code&gt;\r\n&lt;/code&gt;) to &lt;code&gt;\n&lt;/code&gt;.</source>
          <target state="translated">Utilizando la &lt;strong&gt;API Stream paralela&lt;/strong&gt; (Java 8). &lt;strong&gt;Advertencia&lt;/strong&gt; : esta soluci&amp;oacute;n convierte diferentes saltos de l&amp;iacute;nea (como &lt;code&gt;\r\n&lt;/code&gt; ) a &lt;code&gt;\n&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5f7fb54c32917542cfe9071af96c3161c7083876" translate="yes" xml:space="preserve">
          <source>What is the easiest way to take the &lt;code&gt;InputStream&lt;/code&gt; and convert it to a &lt;code&gt;String&lt;/code&gt;?</source>
          <target state="translated">&amp;iquest;Cu&amp;aacute;l es la forma m&amp;aacute;s f&amp;aacute;cil de tomar &lt;code&gt;InputStream&lt;/code&gt; y convertirlo en una &lt;code&gt;String&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="de834c8d63e116d87057fc1d47f5bf5605958ae2" translate="yes" xml:space="preserve">
          <source>You can provision the length of the builder and it doesn't have to be an exact value.</source>
          <target state="translated">Puedes proveer la longitud del constructor y no tiene que ser un valor exacto.</target>
        </trans-unit>
        <trans-unit id="22512523e0069af602863041298da2b04267b699" translate="yes" xml:space="preserve">
          <source>You control the read buffer size.</source>
          <target state="translated">Controla el tamaño del buffer de lectura.</target>
        </trans-unit>
        <trans-unit id="390c23a71517435f2802b05ce34d7e19f26e2894" translate="yes" xml:space="preserve">
          <source>is Kotlin standard library&amp;rsquo;s built-in extension method.</source>
          <target state="translated">es el m&amp;eacute;todo de extensi&amp;oacute;n incorporado de la biblioteca est&amp;aacute;ndar de Kotlin.</target>
        </trans-unit>
        <trans-unit id="c05fea263798687e5d33b0e050b51c0ff3878676" translate="yes" xml:space="preserve">
          <source>or even</source>
          <target state="translated">o incluso</target>
        </trans-unit>
        <trans-unit id="9d7c261bb879e05732311c377252f0746423dde0" translate="yes" xml:space="preserve">
          <source>whereas</source>
          <target state="translated">whereas</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
