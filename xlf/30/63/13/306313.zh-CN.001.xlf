<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/306313">
    <body>
      <group id="306313">
        <trans-unit id="8af8c074689165ea8fe36329441d2b10f2f1491a" translate="yes" xml:space="preserve">
          <source>(My italics)</source>
          <target state="translated">(我的斜体字)</target>
        </trans-unit>
        <trans-unit id="ca756f1eaabeb116dcd7b4a1b0090bfb24d6500b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/PHP&quot;&gt;PHP's&lt;/a&gt;&lt;code&gt;===&lt;/code&gt; operator, on the other hand, is described as checking equality and type: &lt;code&gt;x == y and type(x) == type(y)&lt;/code&gt; as per Paulo Freitas' comment. This will suffice for common numbers, but differ from &lt;code&gt;is&lt;/code&gt; for classes that define &lt;code&gt;__eq__&lt;/code&gt; in an absurd manner:</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/PHP&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;另一方面，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运算符被描述为检查相等性和类型：&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;根据Paulo Freitas的评论，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x == y and type(x) == type(y)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这将足以满足普通的数字，但是从不同的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用于定义类&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__eq__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在一个荒谬的方式：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7eb0e738de5256d34700b3cb51c68bc4bf26d348" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/whatsnew/3.8.html#changes-in-python-behavior&quot;&gt;What&amp;rsquo;s New In Python 3.8: Changes in Python behavior&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/whatsnew/3.8.html#changes-in-python-behavior&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 3.8的新增功能：Python行为的变化&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0cf22729aea1b77b4bbafd7e232e2ac901c67c28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l5343&quot;&gt;During initialization in &lt;code&gt;_PyLong_Init&lt;/code&gt;&lt;/a&gt; Python will gladly enter in a for loop do do this for you:</source>
          <target state="translated">&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l5343&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;_PyLong_Init&lt;/code&gt; 中&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;初始化期间，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Python会很乐意进入for循环为您执行此操作：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4727386de597831e6de13525e011f3b1787ca9aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PyLong_FromLong&lt;/code&gt; deals with &lt;code&gt;long&lt;/code&gt; objects so it shouldn't be hard to deduce that we need to peek inside &lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c&quot;&gt;&lt;code&gt;longobject.c&lt;/code&gt;&lt;/a&gt;. After looking inside you might think things are chaotic; they are, but fear not, the function we're looking for is chilling at &lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l230&quot;&gt;line 230&lt;/a&gt; waiting for us to check it out. It's a smallish function so the main body (excluding declarations) is easily pasted here:</source>
          <target state="translated">&lt;code&gt;PyLong_FromLong&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;处理&lt;/font&gt;&lt;/font&gt; &lt;code&gt;long&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象，因此不难推断我们需要在&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c&quot;&gt; &lt;code&gt;longobject.c&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内部进行窥视&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;观察内部之后，您可能会觉得事情很混乱。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它们是，但不要担心，我们正在寻找的功能在&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l230&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;第230行&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;令人不寒而栗，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;等待我们检查出来。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是一个很小的函数，因此可以轻松地将主体（不包括声明）粘贴到此处：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0ca2c8087b11e6237f285ecbd7547f0cb9b75504" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is&lt;/code&gt; checks that the &lt;code&gt;id&lt;/code&gt; of two objects are the same. In CPython, the &lt;code&gt;id&lt;/code&gt; is the location in memory, but it could be some other uniquely identifying number in another implementation. To restate this with code:</source>
          <target state="translated">&lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;检查&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;两个对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是否相同。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在CPython中，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是内存中的位置，但是在另一个实现中，它可以是其他一些唯一标识的数字。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要用代码重新声明：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="775b7146689c1bccfb65c237ebaa0dc770710235" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is&lt;/code&gt; checks to see if they are the same object, not just equal. The small ints are probably pointing to the same memory location for space efficiency</source>
          <target state="translated">&lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;检查，看看他们是否是同一个对象，而不是平等的。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;小整数可能指向相同的内存位置以提高空间效率&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd37d72689750907b7c77b7008832ae8e797a76e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is&lt;/code&gt;&lt;em&gt;is&lt;/em&gt; the identity equality operator (functioning like &lt;code&gt;id(a) == id(b)&lt;/code&gt;); it's just that two equal numbers aren't necessarily the same object. For performance reasons some small integers happen to be &lt;a href=&quot;http://en.wikipedia.org/wiki/Memoization&quot;&gt;memoized&lt;/a&gt; so they will tend to be the same (this can be done since they are immutable).</source>
          <target state="translated">&lt;code&gt;is&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;被&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;标识相等运算（作用象&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id(a) == id(b)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;只是两个相等的数字不一定是同一对象。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;出于性能原因，一些小整数正好会被&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Memoization&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;记住，&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此它们往往是相同的（因为它们是不可变的，因此可以这样做）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4072200f3b57b424ac3d8cb1802351446cd2d1b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;small_ints&lt;/code&gt; looks a lot like that array we've been searching for, and it is! &lt;em&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l25&quot;&gt;We could've just read the damn documentation and we would've know all along!&lt;/a&gt;&lt;/em&gt;:</source>
          <target state="translated">&lt;code&gt;small_ints&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;看起来很像我们一直在寻找的那个数组，它是！&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l25&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们只要阅读该死的文档，我们就永远知道！&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d8bf1cc529ad48c7cf9526ccb3384a00e782c795" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;I'm late but, you want some source with your answer?&lt;/em&gt; I'll try and word this in an introductory manner so more folks can follow along.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我来晚了，但是，您想从中获得答案吗？&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我将尝试以介绍性的方式对此进行说明，以便更多的人可以跟随。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b9a077320c8002a8b176d7a3db6c25f186bfd141" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The current implementation keeps an array of integer objects for all integers between -5 and 256, when you create an int in that range you actually just get back a reference to the existing object&lt;/em&gt;. So it should be possible to change the value of 1. I suspect the behaviour of Python in this case is undefined. :-)</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当前的实现为-5到256之间的所有整数保留一个整数对象数组，当您在该范围内创建int时，实际上实际上是返回对现有对象的引用&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此应该可以更改1的值。我怀疑在这种情况下Python的行为是不确定的。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:-)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="184cec107084cc30c1541a03eb7b7c5c5b2fc402" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;id&lt;/code&gt;&lt;/strong&gt;
  Return the &amp;ldquo;identity&amp;rdquo; of an object. This is an integer (or long
  integer) which is guaranteed to be unique and constant for this object
  during its lifetime. Two objects with non-overlapping lifetimes may
  have the same &lt;code&gt;id()&lt;/code&gt; value.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;id&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 返回对象的&amp;ldquo;身份&amp;rdquo;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是一个整数（或长整数），在该对象的生存期内，此整数保证是唯一且恒定的。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;具有不重叠生存期的两个对象可能具有相同的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;值。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0c2618c6b23ac2c646fefcef3c3a340853dc75d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why does the following behave unexpectedly in Python?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为什么以下代码在Python中表现异常？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5fdd494631e8dafb700e08e7c96fe53a330297c5" translate="yes" xml:space="preserve">
          <source>A good thing about CPython is that you can actually see the source for this. I'm going to use links for the &lt;strong&gt;3.5&lt;/strong&gt; release, but finding the corresponding &lt;strong&gt;2.x&lt;/strong&gt; ones is trivial.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关于CPython的一件好事是您实际上可以看到其来源。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我将使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3.5&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;版本的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;链接&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但是找到相应的&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2.x&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;链接&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是微不足道的。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac0aa8a7f83561e2ace489c627f4a3e6d97f3d7a" translate="yes" xml:space="preserve">
          <source>And so the following are equivalent.</source>
          <target state="translated">因此,以下是等价的。</target>
        </trans-unit>
        <trans-unit id="020c09212154577102213e00113981c05e13b3fd" translate="yes" xml:space="preserve">
          <source>And so we see, with &lt;code&gt;is&lt;/code&gt; and a sentinel, we are able to differentiate between when &lt;code&gt;bar&lt;/code&gt; is called with no arguments and when it is called with &lt;code&gt;None&lt;/code&gt;. These are the primary use-cases for &lt;code&gt;is&lt;/code&gt; - do &lt;em&gt;not&lt;/em&gt; use it to test for equality of integers, strings, tuples, or other things like these.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，我们可以看到，使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和一个前哨，我们可以区分何时&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不使用参数调用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和何时使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;None&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;调用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这些是主要的用例的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -千万&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不能&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用它来测试整数，字符串，元组，或者其他喜欢这些东西的平等。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="50a14f630be0955cb2c34cab46c0c646bb387224" translate="yes" xml:space="preserve">
          <source>And this isn't limited to &lt;code&gt;int&lt;/code&gt; values:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这不限于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;值：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6d178c346da46b34eeed9bb44ec12ed5b577b4a" translate="yes" xml:space="preserve">
          <source>As you can check in &lt;a href=&quot;http://svn.python.org/projects/python/trunk/Objects/intobject.c&quot;&gt;source file &lt;em&gt;intobject.c&lt;/em&gt;&lt;/a&gt;, Python caches small integers for efficiency. Every time you create a reference to a small integer, you are referring the cached small integer, not a new object. 257 is not an small integer, so it is calculated as a different object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以检入&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://svn.python.org/projects/python/trunk/Objects/intobject.c&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;源文件&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;intobject.c&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，Python会缓存小整数以提高效率。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每次创建对小整数的引用时，都是在引用缓存的小整数，而不是新对象。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;257不是一个小整数，因此它被计算为另一个对象。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29932ebba2d5da8e81696624a51eb2f80862cb75" translate="yes" xml:space="preserve">
          <source>At any rate, the rules for what values must be, might be, or cannot be distinct vary from implementation to implementation, and between versions of the same implementation, and maybe even between runs of the same code on the same copy of the same implementation.</source>
          <target state="translated">无论如何,关于什么值必须是、可能是、不能是或不可能是的规则,在不同的实现之间、同一实现的不同版本之间,甚至在同一实现的同一副本上运行相同的代码之间,都有不同的规则。</target>
        </trans-unit>
        <trans-unit id="156f56e01d02f8aa6d287c3466f7e1e6aa738faa" translate="yes" xml:space="preserve">
          <source>Based on the above, I can hypothesize that Python is internally implemented such that &quot;small&quot; integers are stored in a different way than larger integers and the &lt;code&gt;is&lt;/code&gt; operator can tell the difference. Why the leaky abstraction? What is a better way of comparing two arbitrary objects to see whether they are the same when I don't know in advance whether they are numbers or not?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;基于以上所述，我可以假设Python是内部实现的，因此&amp;ldquo;小&amp;rdquo;整数的存储方式与大整数的存储方式不同，并且&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运算符可以区分出这种差异。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为什么要泄漏抽象？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当我事先不知道它们是否为数字时，比较两个任意对象以查看它们是否相同的更好方法是什么？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b81a575249b1bbcd887f15acd7fe24dcae6a4d9" translate="yes" xml:space="preserve">
          <source>But also, even non-pre-created values can be identical. Consider these examples:</source>
          <target state="translated">但同样,即使是非预设值也可以是相同的。考虑一下这些例子。</target>
        </trans-unit>
        <trans-unit id="7a83dbf36d26a2ccbc4c3b897467fd5fabd1c75e" translate="yes" xml:space="preserve">
          <source>But as for impact on code, you should not care if an integer is a particular instance of an integer. You should only care what the value of that instance is, and you would use the normal comparison operators for that, i.e. &lt;code&gt;==&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是对于对代码的影响，您不必在乎整数是否是整数的特定实例。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您只需要关心该实例的值是什么，就可以使用常规的比较运算符，即&lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="97d95eb23e9f053a880a77b9c304e7de1a6d27b6" translate="yes" xml:space="preserve">
          <source>But perhaps we should be glad that there is not a new separate instance in memory every time we state a value equals 256.</source>
          <target state="translated">但也许我们应该庆幸的是,每次声明一个值等于256时,内存中不会有一个新的独立实例。</target>
        </trans-unit>
        <trans-unit id="66e03f31a35fe5f516dc8034caa56da5fbef4b0a" translate="yes" xml:space="preserve">
          <source>But, &lt;code&gt;257 is 257&lt;/code&gt;? What's up?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;257 is 257&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;吗？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是怎么回事？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="16c6357482bd5ce312fd0200c5aca0aae52a60c2" translate="yes" xml:space="preserve">
          <source>But, when are they allocated??</source>
          <target state="translated">但是,他们什么时候分配呢?</target>
        </trans-unit>
        <trans-unit id="075062f6c2bf8a5d3e42c8a089bc3207f63ec450" translate="yes" xml:space="preserve">
          <source>By the way, &lt;a href=&quot;http://en.wikipedia.org/wiki/NumPy&quot;&gt;NumPy&lt;/a&gt; will produce separate instances of low numbers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;顺便说一句，&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/NumPy&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NumPy&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将产生低数字的单独实例。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9539ebb34dc539844dff1e692cd05704a9ed4e8a" translate="yes" xml:space="preserve">
          <source>Check out the source to read the loop body!</source>
          <target state="translated">看一下源头,看一下循环体!</target>
        </trans-unit>
        <trans-unit id="4fb54a20f8fab9486c182539c4feb318d18d227f" translate="yes" xml:space="preserve">
          <source>Comparisons to singletons like &lt;code&gt;None&lt;/code&gt; should always be done with &lt;code&gt;is&lt;/code&gt; or
  &lt;code&gt;is not&lt;/code&gt;, never the equality operators.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;与单例（如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;None&lt;/code&gt; )的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;比较&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;应始终使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is not&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，永远不要使用等于运算符。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bef021192b260b14d27264a1d4c939f50d6b1d1e" translate="yes" xml:space="preserve">
          <source>Do not write code that assumes two equal but separately-created immutable values are distinct (don't use &lt;code&gt;x is not y&lt;/code&gt;, use &lt;code&gt;x != y&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不要编写假定两个相等但分别创建的不可变值是不同的代码（不要使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x is not y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，请使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x != y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5777b8c70fa1acedf03ef33942cc347128cd9ffa" translate="yes" xml:space="preserve">
          <source>Do not write code that assumes two equal but separately-created immutable values are identical (don't use &lt;code&gt;x is y&lt;/code&gt;, use &lt;code&gt;x == y&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不要编写假定两个相等但分别创建的不可变值相同的代码（不要使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x is y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，请使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x == y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed560bafd90e01f11e33150257fd88f37dc6f579" translate="yes" xml:space="preserve">
          <source>Don't know about you but I see this and think: &lt;em&gt;Let's find that array!&lt;/em&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不了解您，但我看到了并想：&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;让我们找到那个数组！&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="49c014f16006f023aade3279fee6eb3bc11567ea" translate="yes" xml:space="preserve">
          <source>During complilation of this statement, CPython will see that you have two matching literals and will use the same &lt;code&gt;PyLongObject&lt;/code&gt; representing &lt;code&gt;257&lt;/code&gt;. You can see this if you do the compilation yourself and examine its contents:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在编译此语句期间，CPython将看到您有两个匹配的文字，并且将使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;表示&lt;/font&gt; &lt;code&gt;257&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;的相同&lt;/font&gt;&lt;/font&gt; &lt;code&gt;PyLongObject&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您自己进行编译并检查其内容，则可以看到以下内容：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b32ef340ea4702fd5f41dbe4001671d76174ef71" translate="yes" xml:space="preserve">
          <source>Explanation</source>
          <target state="translated">Explanation</target>
        </trans-unit>
        <trans-unit id="72aaef6df9487030c3c92b755d874758273c11c1" translate="yes" xml:space="preserve">
          <source>First, what does &lt;code&gt;is&lt;/code&gt; do? It is a comparison operator. From the &lt;a href=&quot;https://docs.python.org/2/reference/expressions.html#not-in&quot;&gt;documentation&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;首先，什么是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;做什么？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它是一个比较运算符。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/reference/expressions.html#not-in&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文档中&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4733ac4c8d05bf5ffc65a9b02bf2a40d5df3a644" translate="yes" xml:space="preserve">
          <source>For immutable value objects, like ints, strings or datetimes, object identity is not especially useful. It's better to think about equality. Identity is essentially an implementation detail for value objects - since they're immutable, there's no effective difference between having multiple refs to the same object or multiple objects.</source>
          <target state="translated">对于不可变的值对象,如ints、字符串或datetimes,对象特性不是特别有用。最好是考虑到平等性。对于值对象来说,Identity本质上是一个实现细节--因为它们是不可变的,所以拥有多个refs到同一个对象或多个对象之间没有什么有效的区别。</target>
        </trans-unit>
        <trans-unit id="cba50fd60be45fbcdb44b6e9a9d66f7f5c706e84" translate="yes" xml:space="preserve">
          <source>For one thing, there are some other pre-created values, such as the empty &lt;code&gt;tuple&lt;/code&gt;, &lt;code&gt;str&lt;/code&gt;, and &lt;code&gt;bytes&lt;/code&gt;, and some short strings (in CPython 3.6, it's the 256 single-character Latin-1 strings). For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一方面，还有一些其他预先创建的值，例如空&lt;/font&gt;&lt;/font&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以及一些短字符串（在CPython 3.6中，它是256个单字符Latin-1字符串）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b93a78d2063253b791062e536fbcf3c506c7e8f" translate="yes" xml:space="preserve">
          <source>From the &lt;a href=&quot;https://docs.python.org/library/functions.html#id&quot;&gt;documentation&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/library/functions.html#id&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文档中&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20f1962ed548d5a4e5a85c77e6163b6dd07229c0" translate="yes" xml:space="preserve">
          <source>Greg Hewgill (OP) made one clarifying comment &quot;My goal is to compare object identity, rather than equality of value. Except for numbers, where I want to treat object identity the same as equality of value.&quot;</source>
          <target state="translated">Greg Hewgill(OP)做了一个澄清的评论 &quot;我的目标是比较对象的同一性,而不是价值平等。除了数字之外,我想把对象特性与价值的平等性等同对待。&quot;</target>
        </trans-unit>
        <trans-unit id="9520edcc756ac36c651c3dd60aa89decca7c632a" translate="yes" xml:space="preserve">
          <source>Here's what I found in the Python 2 documentation, &lt;a href=&quot;https://docs.python.org/2/c-api/int.html&quot;&gt;&quot;Plain Integer Objects&quot;&lt;/a&gt; (It's the same for &lt;a href=&quot;https://docs.python.org/3/c-api/long.html&quot;&gt;Python 3&lt;/a&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是我在Python 2文档&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/c-api/int.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo; Plain Integer Objects&amp;rdquo;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（对于&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/c-api/long.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 3中&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相同&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）中找到的：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7633b56032467c98e3952b15959b9bc41571b808" translate="yes" xml:space="preserve">
          <source>I am using Python 2.5.2. Trying some different versions of Python, it appears that Python 2.3.3 shows the above behaviour between 99 and 100.</source>
          <target state="translated">我使用的是Python 2.5.2。尝试了一些不同版本的Python,似乎Python 2.3.3.3显示的是99到100之间的上述行为。</target>
        </trans-unit>
        <trans-unit id="bf1bbe0998ecfbccd8f34580ebb282b05c3eba6e" translate="yes" xml:space="preserve">
          <source>I don't actually know an answer to this variant of the question. I suppose one could theoretically use ctypes to call &lt;code&gt;PyNumber_Check&lt;/code&gt;, but even that function &lt;a href=&quot;http://mail.python.org/pipermail/python-dev/2002-November/030237.html&quot;&gt;has been debated&lt;/a&gt;, and it's certainly not portable. We'll just have to be less particular about what we test for now.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我实际上不知道该问题变体的答案。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我想从理论上讲可以使用ctypes来调用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;PyNumber_Check&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但是即使对该函数&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://mail.python.org/pipermail/python-dev/2002-November/030237.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;进行了辩论&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它肯定也不是可移植的。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们只需要对我们目前要测试的内容有所保留。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c7fde5b1be5df2cc60e919d243f79f64499af2e9" translate="yes" xml:space="preserve">
          <source>I hope my explanation has made you &lt;em&gt;C&lt;/em&gt; things clearly now (pun obviously intented).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;希望我的解释使您&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C的&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;认识清楚（很明显是故意的）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2bf1ba0f7bc61d56c0afc241fb28b1a06aec1cfa" translate="yes" xml:space="preserve">
          <source>I think your hypotheses is correct. Experiment with &lt;code&gt;id&lt;/code&gt; (identity of object):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我认为您的假设是正确的。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（对象的身份）进行&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实验&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2989e4329462383daa6dcd09e8a4487363cde76c" translate="yes" xml:space="preserve">
          <source>If you haven't fiddled with the C code implementing CPython &lt;em&gt;you should&lt;/em&gt;; everything is pretty organized and readable. For our case, we need to look in the &lt;a href=&quot;https://hg.python.org/cpython/file/d489394a73de/Objects/&quot;&gt;&lt;code&gt;Objects&lt;/code&gt; subdirectory&lt;/a&gt; of the &lt;a href=&quot;https://hg.python.org/cpython/file/tip&quot;&gt;main source code directory tree&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您还不熟悉实现CPython的C代码&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则应&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一切都井井有条，可读性强。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于我们而言，我们需要关注的&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/d489394a73de/Objects/&quot;&gt; &lt;code&gt;Objects&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;子目录&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;中的&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;主源代码目录树&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="537f423d61e77546573c451ff8a9476446add0aa" translate="yes" xml:space="preserve">
          <source>In CPython, the &lt;strong&gt;C-API&lt;/strong&gt; function that handles creating a new &lt;code&gt;int&lt;/code&gt; object is &lt;a href=&quot;https://docs.python.org/3/c-api/long.html#c.PyLong_FromLong&quot;&gt;&lt;code&gt;PyLong_FromLong(long v)&lt;/code&gt;&lt;/a&gt;. The description for this function is:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在CPython中，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用于创建新的&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C-API&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/c-api/long.html#c.PyLong_FromLong&quot;&gt; &lt;code&gt;PyLong_FromLong(long v)&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此功能的说明是：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8d327fdbf38dbb5e18ce4c7e07d18a8f571e859d" translate="yes" xml:space="preserve">
          <source>In summary - let me emphasize: &lt;strong&gt;&lt;em&gt;Do not use &lt;code&gt;is&lt;/code&gt; to compare integers.&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;总结-让我强调一下：&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不要使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;比较整数。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c38fd56c4fdb78cb02380e1ab7bd3e9ca151e1b2" translate="yes" xml:space="preserve">
          <source>In the end, this issue stems from Python not originally having a type tree with predicates like &lt;a href=&quot;http://en.wikipedia.org/wiki/Scheme_%28programming_language%29&quot;&gt;Scheme's&lt;/a&gt;&lt;code&gt;number?&lt;/code&gt;, or &lt;a href=&quot;http://en.wikipedia.org/wiki/Haskell_%28programming_language%29&quot;&gt;Haskell's&lt;/a&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Type_class&quot;&gt;type class&lt;/a&gt;&lt;a href=&quot;http://www.haskell.org/ghc/docs/7.4-latest/html/libraries/base-4.5.1.0/Prelude.html#t:Num&quot;&gt;Num&lt;/a&gt;. &lt;code&gt;is&lt;/code&gt; checks object identity, not value equality. PHP has a colorful history as well, where &lt;code&gt;===&lt;/code&gt; apparently behaves as &lt;code&gt;is&lt;/code&gt; only on objects &lt;a href=&quot;http://www.php.net/manual/en/language.operators.comparison.php&quot;&gt;in PHP5, but not PHP4&lt;/a&gt;. Such are the growing pains of moving across languages (including versions of one).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最后，这个问题源于Python最初不是具有谓词（例如&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Scheme_%28programming_language%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Scheme的&lt;/font&gt;&lt;/font&gt;&lt;/a&gt; &lt;code&gt;number?&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的类型树&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;吗？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Haskell_%28programming_language%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Haskell的&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Type_class&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类型类&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;a href=&quot;http://www.haskell.org/ghc/docs/7.4-latest/html/libraries/base-4.5.1.0/Prelude.html#t:Num&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Num&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;检查对象身份，而不是值相等。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP提供了一个丰富多彩的历史，以及，其中&lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;明显表现为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;唯一的对象&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.php.net/manual/en/language.operators.comparison.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在PHP5，而不是PHP4&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这就是跨语言（包括一种语言的版本）迁移的痛苦。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0a9540f293e49d567c14e8e1c59c886e0fe58f9" translate="yes" xml:space="preserve">
          <source>Instead, use &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; to compare for equality and inequality, respectively. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而是使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;!=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;分别比较相等性和不平等性。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="70e475fcee8450b0a26129f13b286a70f00f2415" translate="yes" xml:space="preserve">
          <source>It also happens with strings:</source>
          <target state="translated">这也发生在弦子身上。</target>
        </trans-unit>
        <trans-unit id="d330cfdd1cef99b1885c3e778fb651e9d68f3822" translate="yes" xml:space="preserve">
          <source>It appears that numbers &lt;code&gt;&amp;lt;= 255&lt;/code&gt; are treated as literals and anything above is treated differently!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;似乎将&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;= 255&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数字&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;视为文字，并且将上述内容视为不同！&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e0e6d9d4ad1d30892d62940222ae6d9456aace7" translate="yes" xml:space="preserve">
          <source>It can be worth learning the rules for one specific Python for the fun of it. But it's not worth relying on them in your code. The only safe rule is:</source>
          <target state="translated">为了好玩,学习一个特定的Python的规则可能是值得的。但是,在你的代码中依赖它们是不值得的。唯一安全的规则是。</target>
        </trans-unit>
        <trans-unit id="5fb810233f7fc63d4d3223263f62bf30b9080ca1" translate="yes" xml:space="preserve">
          <source>It depends on whether you're looking to see if 2 things are equal, or the same object.</source>
          <target state="translated">这要看你是要看2个东西是否相等,还是同一个对象。</target>
        </trans-unit>
        <trans-unit id="a0aa15a254986085a44ed811e3ee1a9f43a5d480" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;not&lt;/em&gt; an expected result. Why is it expected? It only means that the integers valued at &lt;code&gt;256&lt;/code&gt; referenced by both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are the same instance of integer. Integers are immutable in Python, thus they cannot change. This should have no impact on any code. It should not be expected. It is merely an implementation detail.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不是&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;预期的结果。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为什么会这样？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这仅意味着&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt; &lt;code&gt;b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;引用的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;256&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;整数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是相同的整数实例。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;整数在Python中是不可变的，因此它们不能更改。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这对任何代码都没有影响。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不应期望。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这仅仅是实现细节。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f98f6e25f80d9a92c1ddec978b96a072d0718543" translate="yes" xml:space="preserve">
          <source>It is better to use &lt;code&gt;==&lt;/code&gt; for that purpose.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为此，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最好使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="39a018c9a327559044eb93b83cfa631890fe5a9b" translate="yes" xml:space="preserve">
          <source>It might be even better if CPython could do this globally, if it could do so cheaply (as there would a cost in the lookup), perhaps another implementation might.</source>
          <target state="translated">如果CPython能在全局范围内做到这一点,也许会更好,如果它能便宜地做到这一点(因为在查找中会有成本),也许另一个实现可能会更好。</target>
        </trans-unit>
        <trans-unit id="2934f14fba9d6d3632870dc31aab2cd51063439c" translate="yes" xml:space="preserve">
          <source>Looks like we now have two separate instances of integers with the value of &lt;code&gt;257&lt;/code&gt; in memory. Since integers are immutable, this wastes memory. Let's hope we're not wasting a lot of it. We're probably not. But this behavior is not guaranteed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;看起来我们现在&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在内存中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有两个分别为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;257&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的整数实例&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于整数是不可变的，因此会浪费内存。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;希望我们不要浪费很多。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们可能不是。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是不能保证这种行为。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="27d9b42564e11c6f850edfd6f695a59f49f4ae4c" translate="yes" xml:space="preserve">
          <source>Next let's look at &lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l37&quot;&gt;&lt;code&gt;get_small_int&lt;/code&gt; in all its glory&lt;/a&gt; (well, we'll just look at its body because that's where the interesting things are):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;接下来，让我们看一下&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l37&quot;&gt; &lt;code&gt;get_small_int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的所有荣耀&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（好吧，我们只看它的主体，因为这就是有趣的地方）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a04214a82c1046176055acabc88aef3f66d91e4" translate="yes" xml:space="preserve">
          <source>Note that the fact that the id of an object in CPython (the reference implementation of Python) is the location in memory is an implementation detail. Other implementations of Python (such as Jython or IronPython) could easily have a different implementation for &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请注意，CPython（Python的参考实现）中对象的ID是内存中的位置这一事实是实现细节。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python的其他实现（例如Jython或IronPython）可以很容易地对&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;具有不同的实现&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8c26b8d49e5d32ac527e4aea2bb981672da514ba" translate="yes" xml:space="preserve">
          <source>Now everything seems fine.</source>
          <target state="translated">现在看来一切都很好。</target>
        </trans-unit>
        <trans-unit id="bfe09b0d0f357b91654290934773a91647c00166" translate="yes" xml:space="preserve">
          <source>Now that's unexpected.</source>
          <target state="translated">这下可出乎意料了。</target>
        </trans-unit>
        <trans-unit id="f34502290825f879ef0a903691b3244a342cdb53" translate="yes" xml:space="preserve">
          <source>Now, we're no C &lt;em&gt;master-code-haxxorz&lt;/em&gt; but we're also not dumb, we can see that &lt;code&gt;CHECK_SMALL_INT(ival);&lt;/code&gt; peeking at us all seductively; we can understand it has something to do with this. &lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l51&quot;&gt;Let's check it out:&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，我们不是C &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;主代码-haxxorz，&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但我们也不傻，我们可以看到&lt;/font&gt;&lt;/font&gt; &lt;code&gt;CHECK_SMALL_INT(ival);&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;诱人地看着我们；&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们可以理解，这与此有关。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l51&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;让我们来看看：&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54a15d09f086e70ac3bd6806a4576b2e3ee8cf95" translate="yes" xml:space="preserve">
          <source>Obviously, CPython doesn't come with a pre-created &lt;code&gt;float&lt;/code&gt; value for &lt;code&gt;42.23e100&lt;/code&gt;. So, what's going on here?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;显然，CPython没有&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为&lt;/font&gt; &lt;code&gt;42.23e100&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;预先创建一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;值&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;那么，这是怎么回事？&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d3893852a37e6362ba755d3935741b21f6943faa" translate="yes" xml:space="preserve">
          <source>Okay, declare a &lt;code&gt;PyObject&lt;/code&gt;, assert that the previous condition holds and execute the assignment:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;好的，声明一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;PyObject&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，断言先前的条件成立并执行分配：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0529ee68c4de392040437e76423071979840b586" translate="yes" xml:space="preserve">
          <source>On the other hand, it is limited to the &lt;code&gt;str&lt;/code&gt; type, and to strings of &lt;a href=&quot;https://github.com/python/cpython/blob/master/Include/unicodeobject.h#L197&quot;&gt;internal storage kind &quot;ascii compact&quot;, &quot;compact&quot;, or &quot;legacy ready&quot;&lt;/a&gt;, and in many cases only &quot;ascii compact&quot; will get interned.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;另一方面，它仅限于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类型，并且&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;限于&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/python/cpython/blob/master/Include/unicodeobject.h#L197&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内部存储类型为&amp;ldquo; ascii compact&amp;rdquo;，&amp;ldquo; compact&amp;rdquo;或&amp;ldquo; legacy ready&amp;rdquo;的&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;字符串&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，并且在许多情况下，只有&amp;ldquo; ascii compact&amp;rdquo;会被嵌入。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="af727a9e60200c0ec56d017c5f22b2316c0eba6b" translate="yes" xml:space="preserve">
          <source>Or, in other words, only use &lt;code&gt;is&lt;/code&gt; to test for the documented singletons (like &lt;code&gt;None&lt;/code&gt;) or that are only created in one place in the code (like the &lt;code&gt;_sentinel = object()&lt;/code&gt; idiom).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或者，换句话说，仅使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为了测试记录单身（如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;None&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;），或者在代码只在一个地方创建（如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;_sentinel = object()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;成语）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f886ab250b071a41757b46631a700b0bdb639e3c" translate="yes" xml:space="preserve">
          <source>PHP apparently allows the same thing for &quot;built-in&quot; classes (which I take to mean implemented at C level, not in PHP). A slightly less absurd use might be a timer object, which has a different value every time it's used as a number. Quite why you'd want to emulate Visual Basic's &lt;code&gt;Now&lt;/code&gt; instead of showing that it is an evaluation with &lt;code&gt;time.time()&lt;/code&gt; I don't know.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于&amp;ldquo;内置&amp;rdquo;类，PHP显然允许相同的东西（我指的是在C级实现，而不是在PHP中实现）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;计时器对象可能有点荒谬，它每次用作数字时都有不同的值。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相当为什么您要模拟Visual Basic的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Now&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而不是显示它是对&lt;/font&gt;&lt;/font&gt; &lt;code&gt;time.time()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的求值，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我不知道。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd75e6abb03749de2f2240c104b07f9971286711" translate="yes" xml:space="preserve">
          <source>Put that in a function, &lt;code&gt;dis&lt;/code&gt; it, and look at the &lt;code&gt;co_consts&lt;/code&gt;&amp;mdash;there's a &lt;code&gt;1&lt;/code&gt; and a &lt;code&gt;2&lt;/code&gt;, two &lt;code&gt;(1, 2)&lt;/code&gt; tuples that share the same &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt; but are not identical, and a &lt;code&gt;((1, 2), (1, 2))&lt;/code&gt; tuple that has the two distinct equal tuples.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;把在一个函数，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;dis&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它，看看&lt;/font&gt;&lt;/font&gt; &lt;code&gt;co_consts&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -there是一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，二&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(1, 2)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;元组共享相同的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但不完全相同，和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;((1, 2), (1, 2))&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;元组具有两个不同的相等元组。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="32bfc78671ed84f6edb1caed4a60f13e77f4eda9" translate="yes" xml:space="preserve">
          <source>Python's &amp;ldquo;is&amp;rdquo; operator behaves unexpectedly with integers?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python的&amp;ldquo; is&amp;rdquo;运算符对整数的行为异常吗？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c6561c6ba8b07aea6a89505ee401b354c197b0ce" translate="yes" xml:space="preserve">
          <source>Since the reference refers to the same object, issuing &lt;code&gt;id()&lt;/code&gt; directly or checking for identity with &lt;code&gt;is&lt;/code&gt; on it will return exactly the same thing.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于参考指的是同一个对象，发行&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;直接或身份检查与&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它会返回同样的事情。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eff95496609f695b73e468f3adfa7f04ee1c17d5" translate="yes" xml:space="preserve">
          <source>So &lt;code&gt;is&lt;/code&gt; will return &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所以，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将返回&lt;/font&gt;&lt;/font&gt; &lt;code&gt;True&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d75f158b3b57dbe1bbac88f5dac9d039d0669f3" translate="yes" xml:space="preserve">
          <source>So it's a macro that calls function &lt;code&gt;get_small_int&lt;/code&gt; if the value &lt;code&gt;ival&lt;/code&gt; satisfies the condition:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果&lt;/font&gt; &lt;code&gt;ival&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;值&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;满足条件&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它将是一个调用函数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;get_small_int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的宏&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b802f6ab1cf3e86e9b09d81f8d990898448d638b" translate="yes" xml:space="preserve">
          <source>So our condition is &lt;code&gt;if (-5 &amp;lt;= ival &amp;amp;&amp;amp; ival &amp;lt; 257)&lt;/code&gt; call &lt;code&gt;get_small_int&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，我们的条件是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;if (-5 &amp;lt;= ival &amp;amp;&amp;amp; ival &amp;lt; 257)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;调用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;get_small_int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="354c4256823bad2a2de81af42cb46affe52cc7d3" translate="yes" xml:space="preserve">
          <source>So what are &lt;code&gt;NSMALLNEGINTS&lt;/code&gt; and &lt;code&gt;NSMALLPOSINTS&lt;/code&gt;? Macros! &lt;em&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l12&quot;&gt;Here they are&lt;/a&gt;&lt;/em&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;那么&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NSMALLNEGINTS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NSMALLPOSINTS&lt;/code&gt; 是&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;什么？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;宏！&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l12&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他们在这里&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c4600849b6ae8384087ac8c6be8eaed48c5daa8d" translate="yes" xml:space="preserve">
          <source>So what is the use-case for &lt;code&gt;is&lt;/code&gt;?  &lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/#programming-recommendations&quot;&gt;PEP8 describes&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;那么用例&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;什么呢？ &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/#programming-recommendations&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PEP8描述&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b204a51feaa721b5f3bc6a5e541c3e65103bdde" translate="yes" xml:space="preserve">
          <source>So yup, this is our guy. When you want to create a new &lt;code&gt;int&lt;/code&gt; in the range &lt;code&gt;[NSMALLNEGINTS, NSMALLPOSINTS)&lt;/code&gt; you'll just get back a reference to an already existing object that has been preallocated.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是的，这是我们的家伙。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当您想&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt; &lt;code&gt;[NSMALLNEGINTS, NSMALLPOSINTS)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;范围内&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;创建一个新的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;时&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您将只获得对已预先分配的现有对象的引用。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e0981c32903ed4584fbc014f1ae45129beb4646b" translate="yes" xml:space="preserve">
          <source>Take a look at this:</source>
          <target state="translated">看一看这个。</target>
        </trans-unit>
        <trans-unit id="9d3332f426bd312f89cc19a8f53fa1b95f7d3d4d" translate="yes" xml:space="preserve">
          <source>That's expected too.</source>
          <target state="translated">这也是意料之中的事情。</target>
        </trans-unit>
        <trans-unit id="89dbf8d1fb5c6efbe530bd45daa4100911146dfc" translate="yes" xml:space="preserve">
          <source>The CPython compiler will merge constant values of some known-immutable types like &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;str&lt;/code&gt;, &lt;code&gt;bytes&lt;/code&gt;,  in the same compilation unit. For a module, the whole module is a compilation unit, but at the interactive interpreter, each statement is a separate compilation unit. Since &lt;code&gt;c&lt;/code&gt; and &lt;code&gt;d&lt;/code&gt; are defined in separate statements, their values aren't merged. Since &lt;code&gt;e&lt;/code&gt; and &lt;code&gt;f&lt;/code&gt; are defined in the same statement, their values are merged.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPython编译器将&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在同一编译单元中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;合并某些已知不可变类型的常量值，例如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于一个模块，整个模块是一个编译单元，但是在交互式解释器中，每个语句都是一个单独的编译单元。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;d&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是在单独的语句中定义的，因此它们的值不会合并。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;e&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在同一条语句中定义，因此它们的值将合并。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b375759c7ec6ff91b19c664f1268608e7cc391e" translate="yes" xml:space="preserve">
          <source>The Question</source>
          <target state="translated">问题</target>
        </trans-unit>
        <trans-unit id="670c799e05a171ede0c4dd77aa348c5565700111" translate="yes" xml:space="preserve">
          <source>The compiler now produces a &lt;a href=&quot;https://docs.python.org/3.8/library/exceptions.html#SyntaxWarning&quot;&gt;SyntaxWarning&lt;/a&gt; when identity checks (&lt;code&gt;is&lt;/code&gt; and
  &lt;code&gt;is not&lt;/code&gt;) are used with certain types of literals (e.g. strings, ints).
  These can often work by accident in CPython, but are not guaranteed by
  the language spec. The warning advises users to use equality tests (&lt;code&gt;==&lt;/code&gt;
  and &lt;code&gt;!=&lt;/code&gt;) instead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，将&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;身份检查（&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;和 &lt;/font&gt; &lt;code&gt;is not&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;）与某些类型的文字（例如字符串，int）一起使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;时&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，编译器会生成&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3.8/library/exceptions.html#SyntaxWarning&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SyntaxWarning&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这些通常在CPython中偶然地起作用，但是语言规范无法保证。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该警告建议用户改用相等性测试（&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 和&lt;/font&gt; &lt;code&gt;!=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1ea84ce07bd5132b3844c115d124c91532803a45" translate="yes" xml:space="preserve">
          <source>The current implementation keeps an
  array of integer objects for all
  integers between -5 and 256, when you
  create an int in that range you
  actually just get back a reference to
  the existing object. So it should be
  possible to change the value of 1. I
  suspect the behaviour of Python in
  this case is undefined. :-)</source>
          <target state="translated">当前的实现为所有在-5到256之间的整数对象保留了一个数组,当你在这个范围内创建一个int时,你实际上只是得到了一个对现有对象的引用。所以应该是可以改变1的值,我怀疑Python在这种情况下的行为是未定义的。 :-)</target>
        </trans-unit>
        <trans-unit id="29e90c5bbad522679e9cff75399d3ab2231dc258" translate="yes" xml:space="preserve">
          <source>The operators &lt;code&gt;is&lt;/code&gt; and &lt;code&gt;is not&lt;/code&gt; test for object identity: &lt;code&gt;x is y&lt;/code&gt; is true
  if and only if x and y are the same object. &lt;code&gt;x is not y&lt;/code&gt; yields the
  inverse truth value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运营商&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is not&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;测试对象的身份：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x is y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为真，当且仅当x和y是同一个对象。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x is not y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;产生反真值。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31a9e950d0f64e017765a3426458ec2f105644eb" translate="yes" xml:space="preserve">
          <source>There's another issue that isn't pointed out in any of the existing answers. Python is allowed to merge any two immutable values, and pre-created small int values are not the only way this can happen. A Python implementation is never &lt;em&gt;guaranteed&lt;/em&gt; to do this, but they all do it for more than just small ints.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现有答案中都没有指出另一个问题。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;允许Python合并任何两个不可变的值，并且预先创建的小int值不是发生这种情况的唯一方法。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;永远不能&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;保证&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Python实现&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;能够做到这一点，但是他们所做的不仅仅只是小的整数。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="583901099c77110e0cb24f39eb25b6aae81ad94d" translate="yes" xml:space="preserve">
          <source>There's one more optimization that CPython does: string interning. Unlike compiler constant folding, this isn't restricted to source code literals:</source>
          <target state="translated">CPython还有一个优化:字符串互译。与编译器的常量折叠不同,这并不局限于源码字面意思。</target>
        </trans-unit>
        <trans-unit id="a027cbf441c889c70feaf96ab63365405fe9f43b" translate="yes" xml:space="preserve">
          <source>This can be a very fast check relative to say, checking if two very long strings are equal in value. But since it applies to the uniqueness of the object, we thus have limited use-cases for it. In fact, we mostly want to use it to check for &lt;code&gt;None&lt;/code&gt;, which is a singleton (a sole instance existing in one place in memory). We might create other singletons if there is potential to conflate them, which we might check with &lt;code&gt;is&lt;/code&gt;, but these are relatively rare. Here's an example (will work in Python 2 and 3) e.g.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相对于说，这是一个非常快速的检查，检查两个很长的字符串的值是否相等。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是由于它适用于对象的唯一性，因此我们的用例有限。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实际上，我们主要想用它来检查&lt;/font&gt;&lt;/font&gt; &lt;code&gt;None&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它是一个单例（内存中一个地方存在的唯一实例）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果有可能将它们合并&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们可以创建其他单例，我们可以通过&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; 进行&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;检查&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但这相对较少。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是一个示例（将在Python 2和3中运行），例如&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5736a7527bced364532363ef0b99dcec78a614b3" translate="yes" xml:space="preserve">
          <source>This is actually easier to explain, &lt;a href=&quot;https://stackoverflow.com/questions/34147515/is-operator-returns-different-results-on-integers&quot;&gt;and I have attempted to do so already&lt;/a&gt;; it's due to the fact that Python will execute this interactive statement as a single block:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实际上，这更容易解释，&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/34147515/is-operator-returns-different-results-on-integers&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我已经尝试过这样做&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;；&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是由于Python将这个交互式语句作为一个单独的块执行：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="40446b6e3805c68dd07e5e77bacfa2e0f640a8c0" translate="yes" xml:space="preserve">
          <source>This isn't behavior you should have any expectations about.</source>
          <target state="translated">这不是你应该有的行为。</target>
        </trans-unit>
        <trans-unit id="263db2012ac92a2151292e26bd7380de0b6aaea6" translate="yes" xml:space="preserve">
          <source>This would have yet another answer, as we have to categorize things as numbers or not, to select whether we compare with &lt;code&gt;==&lt;/code&gt; or &lt;code&gt;is&lt;/code&gt;. &lt;a href=&quot;http://en.wikipedia.org/wiki/CPython&quot;&gt;CPython&lt;/a&gt; defines the &lt;a href=&quot;http://docs.python.org/2/c-api/number.html&quot;&gt;number protocol&lt;/a&gt;, including PyNumber_Check, but this is not accessible from Python itself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这将有另一个答案，因为我们必须将事物归类为数字，以选择是否与&lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;进行比较&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/CPython&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPython&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义了&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/2/c-api/number.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数字协议&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，包括PyNumber_Check，但这不能从Python本身访问。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43aebb53feffaeb360d08a4be1091214297bcc3b" translate="yes" xml:space="preserve">
          <source>To know this, you need to know the following.</source>
          <target state="translated">要知道这一点,你需要知道以下几点。</target>
        </trans-unit>
        <trans-unit id="3bfeae23da5bf491706d2bc58548592ddf50393e" translate="yes" xml:space="preserve">
          <source>We could try to use &lt;code&gt;isinstance&lt;/code&gt; with all the number types we know of, but this would inevitably be incomplete. The types module contains a StringTypes list but no NumberTypes. Since Python 2.6, the built in number classes have a base class &lt;a href=&quot;https://docs.python.org/2/library/numbers.html#numbers.Number&quot;&gt;&lt;code&gt;numbers.Number&lt;/code&gt;&lt;/a&gt;, but it has the same problem:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们可以尝试对&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所有已知的数字类型&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isinstance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但这不可避免地是不完整的。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类型模块包含一个StringTypes列表，但没有NumberTypes。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从Python 2.6开始，内置数字类具有基类&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/library/numbers.html#numbers.Number&quot;&gt; &lt;code&gt;numbers.Number&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但是存在相同的问题：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3ff86b4a856c53f1719f261c2f51ff44fd8dfd22" translate="yes" xml:space="preserve">
          <source>Well, this looks like your particular implementation of Python is trying to be smart and not creating redundantly valued integers in memory unless it has to. You seem to indicate you are using the referent implementation of Python, which is CPython. Good for CPython.</source>
          <target state="translated">好吧,这似乎是你的Python的特定实现在努力表现得很聪明,不会在内存中创建冗余的整数值,除非必要时才会在内存中创建冗余的整数。你似乎表明你使用的是Python的引用实现,也就是CPython。好在CPython。</target>
        </trans-unit>
        <trans-unit id="ea4def8e52a626d6b79b31589076963f02a32a23" translate="yes" xml:space="preserve">
          <source>What &lt;code&gt;is&lt;/code&gt; does</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;什么&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="88ce2bf65b6b5dfca6ce5a2bade2f6a84f488a72" translate="yes" xml:space="preserve">
          <source>When CPython does the operation, it's now just going to load the exact same object:</source>
          <target state="translated">当CPython进行操作时,现在只是去加载完全相同的对象。</target>
        </trans-unit>
        <trans-unit id="e52f46f155653a3c2a2e009ba12b0ccd1ff43ab6" translate="yes" xml:space="preserve">
          <source>Which prints:</source>
          <target state="translated">哪些印刷品。</target>
        </trans-unit>
        <trans-unit id="083aa69538f471398179051fbd0bac459c4c6d6e" translate="yes" xml:space="preserve">
          <source>Why does the following behave unexpectedly in Python?</source>
          <target state="translated">为什么在Python中,下面的表现会出人意料?</target>
        </trans-unit>
        <trans-unit id="b0fb91e86722cf49e94b70bee64200f9524ab922" translate="yes" xml:space="preserve">
          <source>Why would we want to use &lt;code&gt;is&lt;/code&gt; then?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们为什么要使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呢？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a5dbcfbe429bfef2be3cb82f9c7e8a442a5563b" translate="yes" xml:space="preserve">
          <source>You ask, and state, the following question (with code):</source>
          <target state="translated">你问,并说明以下问题(含代码)。</target>
        </trans-unit>
        <trans-unit id="7a8a0f94fb85d4a56e931c1386aa8c512d5e9fa3" translate="yes" xml:space="preserve">
          <source>You can see what's going on by disassembling the bytecode. Try defining a function that does &lt;code&gt;e, f = 128, 128&lt;/code&gt; and then calling &lt;code&gt;dis.dis&lt;/code&gt; on it, and you'll see that there's a single constant value &lt;code&gt;(128, 128)&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以通过反汇编字节码来查看发生了什么。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;尝试定义一个执行&lt;/font&gt;&lt;/font&gt; &lt;code&gt;e, f = 128, 128&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的函数，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;然后&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在其上&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;调用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;dis.dis&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，您将看到只有一个常数值&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(128, 128)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d118cc3fab20976a46fc7b009a620128f88605d" translate="yes" xml:space="preserve">
          <source>You may notice that the compiler has stored &lt;code&gt;128&lt;/code&gt; as a constant even though it's not actually used by the bytecode, which gives you an idea of how little optimization CPython's compiler does. Which means that (non-empty) tuples actually don't end up merged:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可能会注意到，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;即使字节码实际上并未使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;编译器，编译器仍将其存储为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;128&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，这使您了解了CPython编译器所做的优化很少。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这意味着（非空）元组实际上不会最终合并：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24c5f4e4ff6ed911320dff759cb8f0190b9de7ce" translate="yes" xml:space="preserve">
          <source>You should use &lt;code&gt;==&lt;/code&gt; to compare equality of arbitrary objects. You can specify the behavior with the &lt;code&gt;__eq__&lt;/code&gt;, and &lt;code&gt;__ne__&lt;/code&gt; attributes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您应该使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;比较任意对象的相等性。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__eq__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__ne__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指定行为&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="841108c86e9fbb4edafbf1fc269ca06fbd9c2aa7" translate="yes" xml:space="preserve">
          <source>is the same as</source>
          <target state="translated">等于</target>
        </trans-unit>
        <trans-unit id="acc613352f69a406f394f0ff07ee6e99b6e8ad73" translate="yes" xml:space="preserve">
          <source>“is” operator behaves unexpectedly with integers</source>
          <target state="translated">&quot;是 &quot;运算符对整数有意外的行为</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
