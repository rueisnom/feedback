<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/306313">
    <body>
      <group id="306313">
        <trans-unit id="8af8c074689165ea8fe36329441d2b10f2f1491a" translate="yes" xml:space="preserve">
          <source>(My italics)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(내 이탤릭체)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ca756f1eaabeb116dcd7b4a1b0090bfb24d6500b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/PHP&quot;&gt;PHP's&lt;/a&gt;&lt;code&gt;===&lt;/code&gt; operator, on the other hand, is described as checking equality and type: &lt;code&gt;x == y and type(x) == type(y)&lt;/code&gt; as per Paulo Freitas' comment. This will suffice for common numbers, but differ from &lt;code&gt;is&lt;/code&gt; for classes that define &lt;code&gt;__eq__&lt;/code&gt; in an absurd manner:</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/PHP&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;반면에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 연산자는 동일성과 유형을 검사하는 것으로 설명됩니다 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x == y and type(x) == type(y)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Paulo Freitas의 의견에 따라. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 일반적인 숫자로 충분하지만 &lt;/font&gt; &lt;code&gt;__eq__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 부당한 방식으로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정의하는 클래스 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 다릅니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7eb0e738de5256d34700b3cb51c68bc4bf26d348" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/whatsnew/3.8.html#changes-in-python-behavior&quot;&gt;What&amp;rsquo;s New In Python 3.8: Changes in Python behavior&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/whatsnew/3.8.html#changes-in-python-behavior&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 3.8의 새로운 기능 : Python 동작의 변경 사항&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0cf22729aea1b77b4bbafd7e232e2ac901c67c28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l5343&quot;&gt;During initialization in &lt;code&gt;_PyLong_Init&lt;/code&gt;&lt;/a&gt; Python will gladly enter in a for loop do do this for you:</source>
          <target state="translated">&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l5343&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;_PyLong_Init&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 초기화하는 동안&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 파이썬은 기꺼이 for 루프에 들어가서 이것을 수행합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4727386de597831e6de13525e011f3b1787ca9aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PyLong_FromLong&lt;/code&gt; deals with &lt;code&gt;long&lt;/code&gt; objects so it shouldn't be hard to deduce that we need to peek inside &lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c&quot;&gt;&lt;code&gt;longobject.c&lt;/code&gt;&lt;/a&gt;. After looking inside you might think things are chaotic; they are, but fear not, the function we're looking for is chilling at &lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l230&quot;&gt;line 230&lt;/a&gt; waiting for us to check it out. It's a smallish function so the main body (excluding declarations) is easily pasted here:</source>
          <target state="translated">&lt;code&gt;PyLong_FromLong&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;long&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체를 처리하므로 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c&quot;&gt; &lt;code&gt;longobject.c&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 내부를 들여다 볼 필요가 있다고 추론해서는 안됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내부를 살펴본 후 상황이 혼란 스럽다고 생각할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그들은 우리가 찾고있는 기능이 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l230&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;230&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 번 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;줄&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 차가워 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;져서 우리가 체크 아웃하기를 기다리고 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;작은 기능이므로 본체 (선언 제외)를 쉽게 붙여 넣을 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0ca2c8087b11e6237f285ecbd7547f0cb9b75504" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is&lt;/code&gt; checks that the &lt;code&gt;id&lt;/code&gt; of two objects are the same. In CPython, the &lt;code&gt;id&lt;/code&gt; is the location in memory, but it could be some other uniquely identifying number in another implementation. To restate this with code:</source>
          <target state="translated">&lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 객체 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 같은지 확인합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPython에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 메모리의 위치이지만 다른 구현에서는 다른 고유 식별 번호 일 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것을 코드로 바꾸려면 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="775b7146689c1bccfb65c237ebaa0dc770710235" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is&lt;/code&gt; checks to see if they are the same object, not just equal. The small ints are probably pointing to the same memory location for space efficiency</source>
          <target state="translated">&lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 동일한 객체가 아닌 동일한 객체인지 확인합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;작은 정수는 아마도 공간 효율성을 위해 동일한 메모리 위치를 가리키고 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd37d72689750907b7c77b7008832ae8e797a76e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is&lt;/code&gt;&lt;em&gt;is&lt;/em&gt; the identity equality operator (functioning like &lt;code&gt;id(a) == id(b)&lt;/code&gt;); it's just that two equal numbers aren't necessarily the same object. For performance reasons some small integers happen to be &lt;a href=&quot;http://en.wikipedia.org/wiki/Memoization&quot;&gt;memoized&lt;/a&gt; so they will tend to be the same (this can be done since they are immutable).</source>
          <target state="translated">&lt;code&gt;is&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되는&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 식별 항등 연산자 (같은 기능 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id(a) == id(b)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ); &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;단지 두 개의 동일한 숫자가 반드시 동일한 객체 일 필요는 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;성능상의 이유로 일부 작은 정수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Memoization&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;메모리에 저장&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 되므로 동일한 경향이 있습니다 (불변이기 때문에 수행 할 수 있음).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4072200f3b57b424ac3d8cb1802351446cd2d1b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;small_ints&lt;/code&gt; looks a lot like that array we've been searching for, and it is! &lt;em&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l25&quot;&gt;We could've just read the damn documentation and we would've know all along!&lt;/a&gt;&lt;/em&gt;:</source>
          <target state="translated">&lt;code&gt;small_ints&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 우리가 찾고있는 배열과 매우 비슷합니다. &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l25&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리는 방금 문서를 읽을 수 있었고 모든 것을 알았을 것입니다! &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d8bf1cc529ad48c7cf9526ccb3384a00e782c795" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;I'm late but, you want some source with your answer?&lt;/em&gt; I'll try and word this in an introductory manner so more folks can follow along.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;늦었지만 답변이있는 소스를 원하십니까? &lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 많은 사람들이 따라 할 수 있도록 입문 방식으로 시도하고 말하겠습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b9a077320c8002a8b176d7a3db6c25f186bfd141" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The current implementation keeps an array of integer objects for all integers between -5 and 256, when you create an int in that range you actually just get back a reference to the existing object&lt;/em&gt;. So it should be possible to change the value of 1. I suspect the behaviour of Python in this case is undefined. :-)</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;현재 구현에서는 -5와 256 사이의 모든 정수에 대해 정수 객체 배열을 유지합니다.이 범위에서 int를 만들면 실제로는 기존 객체에 대한 참조를 다시 얻습니다&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 값 1을 변경할 수 있어야합니다.이 경우 Python의 동작이 정의되지 않은 것 같습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:-)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="184cec107084cc30c1541a03eb7b7c5c5b2fc402" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;id&lt;/code&gt;&lt;/strong&gt;
  Return the &amp;ldquo;identity&amp;rdquo; of an object. This is an integer (or long
  integer) which is guaranteed to be unique and constant for this object
  during its lifetime. Two objects with non-overlapping lifetimes may
  have the same &lt;code&gt;id()&lt;/code&gt; value.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;id&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체의 &quot;정체성&quot;을 반환합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 수명 동안이 개체에 대해 고유하고 일정하게 보장되는 정수 (또는 긴 정수)입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;겹치지 않는 수명을 가진 두 객체는 ​​동일한&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 값을&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가질 수 있습니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0c2618c6b23ac2c646fefcef3c3a340853dc75d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why does the following behave unexpectedly in Python?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;왜 파이썬에서 다음이 예기치 않게 동작합니까?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5fdd494631e8dafb700e08e7c96fe53a330297c5" translate="yes" xml:space="preserve">
          <source>A good thing about CPython is that you can actually see the source for this. I'm going to use links for the &lt;strong&gt;3.5&lt;/strong&gt; release, but finding the corresponding &lt;strong&gt;2.x&lt;/strong&gt; ones is trivial.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPython의 좋은 점은 실제로 소스를 볼 수 있다는 것입니다. &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3.5&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 릴리스에는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;링크를 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지만 해당 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2.x&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 링크를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;찾는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것은 쉽지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac0aa8a7f83561e2ace489c627f4a3e6d97f3d7a" translate="yes" xml:space="preserve">
          <source>And so the following are equivalent.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 다음은 동일합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="020c09212154577102213e00113981c05e13b3fd" translate="yes" xml:space="preserve">
          <source>And so we see, with &lt;code&gt;is&lt;/code&gt; and a sentinel, we are able to differentiate between when &lt;code&gt;bar&lt;/code&gt; is called with no arguments and when it is called with &lt;code&gt;None&lt;/code&gt;. These are the primary use-cases for &lt;code&gt;is&lt;/code&gt; - do &lt;em&gt;not&lt;/em&gt; use it to test for equality of integers, strings, tuples, or other things like these.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 sentinel을 사용하면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 없이 인수를 호출 할 때와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;None&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 으로 호출 할 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;때를 구분할 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것들은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 주요 사용 사례 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정수, 문자열, 튜플 또는 이와 같은 다른 것들의 동등성을 테스트하는 데 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;마십시오&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="50a14f630be0955cb2c34cab46c0c646bb387224" translate="yes" xml:space="preserve">
          <source>And this isn't limited to &lt;code&gt;int&lt;/code&gt; values:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 이것은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 값으로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;제한되지 않습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6d178c346da46b34eeed9bb44ec12ed5b577b4a" translate="yes" xml:space="preserve">
          <source>As you can check in &lt;a href=&quot;http://svn.python.org/projects/python/trunk/Objects/intobject.c&quot;&gt;source file &lt;em&gt;intobject.c&lt;/em&gt;&lt;/a&gt;, Python caches small integers for efficiency. Every time you create a reference to a small integer, you are referring the cached small integer, not a new object. 257 is not an small integer, so it is calculated as a different object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://svn.python.org/projects/python/trunk/Objects/intobject.c&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;소스 파일 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;intobject.c&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 체크인 할 수있는 것처럼 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python은 효율성을 위해 작은 정수를 캐시합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;작은 정수에 대한 참조를 작성할 때마다 새 오브젝트가 아닌 캐시 된 작은 정수를 참조합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;257은 작은 정수가 아니므로 다른 객체로 계산됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29932ebba2d5da8e81696624a51eb2f80862cb75" translate="yes" xml:space="preserve">
          <source>At any rate, the rules for what values must be, might be, or cannot be distinct vary from implementation to implementation, and between versions of the same implementation, and maybe even between runs of the same code on the same copy of the same implementation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어쨌든 어떤 값이되어야하는지, 또는 구별 할 수 없는지에 대한 규칙은 구현마다, 그리고 동일한 구현의 버전간에, 심지어 동일한 구현의 동일한 사본에서 동일한 코드의 실행 간에도 다양합니다. .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="156f56e01d02f8aa6d287c3466f7e1e6aa738faa" translate="yes" xml:space="preserve">
          <source>Based on the above, I can hypothesize that Python is internally implemented such that &quot;small&quot; integers are stored in a different way than larger integers and the &lt;code&gt;is&lt;/code&gt; operator can tell the difference. Why the leaky abstraction? What is a better way of comparing two arbitrary objects to see whether they are the same when I don't know in advance whether they are numbers or not?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 내용을 바탕으로 파이썬이 내부적으로 구현되어 &quot;작은&quot;정수가 더 큰 정수와 다른 방식으로 저장되고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 연산자가 그 차이를 알 수 있다고 가정 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;왜 새는 추상화인가? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 개의 임의의 객체를 비교하여 숫자인지 여부를 미리 알 수없는 경우 동일한 지 여부를 확인하는 더 좋은 방법은 무엇입니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b81a575249b1bbcd887f15acd7fe24dcae6a4d9" translate="yes" xml:space="preserve">
          <source>But also, even non-pre-created values can be identical. Consider these examples:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 사전 생성되지 않은 값도 동일 ​​할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 예를 고려하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7a83dbf36d26a2ccbc4c3b897467fd5fabd1c75e" translate="yes" xml:space="preserve">
          <source>But as for impact on code, you should not care if an integer is a particular instance of an integer. You should only care what the value of that instance is, and you would use the normal comparison operators for that, i.e. &lt;code&gt;==&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 코드에 미치는 영향에 대해서는 정수가 정수의 특정 인스턴스인지는 신경 쓰지 않아야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해당 인스턴스의 값만 신경 써야하며이를 위해 일반 비교 연산자를 사용해야합니다 (예 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; )&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="97d95eb23e9f053a880a77b9c304e7de1a6d27b6" translate="yes" xml:space="preserve">
          <source>But perhaps we should be glad that there is not a new separate instance in memory every time we state a value equals 256.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 우리는 256이라는 값을 말할 때마다 메모리에 새로운 별도의 인스턴스가 없다는 것을 기뻐해야 할 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="66e03f31a35fe5f516dc8034caa56da5fbef4b0a" translate="yes" xml:space="preserve">
          <source>But, &lt;code&gt;257 is 257&lt;/code&gt;? What's up?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;257 is 257&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;뭐야?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="16c6357482bd5ce312fd0200c5aca0aae52a60c2" translate="yes" xml:space="preserve">
          <source>But, when are they allocated??</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 언제 할당됩니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="075062f6c2bf8a5d3e42c8a089bc3207f63ec450" translate="yes" xml:space="preserve">
          <source>By the way, &lt;a href=&quot;http://en.wikipedia.org/wiki/NumPy&quot;&gt;NumPy&lt;/a&gt; will produce separate instances of low numbers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그건 그렇고, &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/NumPy&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NumPy&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 낮은 숫자의 개별 인스턴스를 생성합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9539ebb34dc539844dff1e692cd05704a9ed4e8a" translate="yes" xml:space="preserve">
          <source>Check out the source to read the loop body!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;루프 바디를 읽으려면 소스를 확인하십시오!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4fb54a20f8fab9486c182539c4feb318d18d227f" translate="yes" xml:space="preserve">
          <source>Comparisons to singletons like &lt;code&gt;None&lt;/code&gt; should always be done with &lt;code&gt;is&lt;/code&gt; or
  &lt;code&gt;is not&lt;/code&gt;, never the equality operators.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;같은 싱글에 비교 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;None&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 항상 함께 할 수 있어야 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is not&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 결코 평등 연산자.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bef021192b260b14d27264a1d4c939f50d6b1d1e" translate="yes" xml:space="preserve">
          <source>Do not write code that assumes two equal but separately-created immutable values are distinct (don't use &lt;code&gt;x is not y&lt;/code&gt;, use &lt;code&gt;x != y&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 동일하지만 별도로 만들어 불변의 값은 별개 가정 쓰기 코드가 아닌 마십시오 (사용하지 않는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x is not y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x != y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5777b8c70fa1acedf03ef33942cc347128cd9ffa" translate="yes" xml:space="preserve">
          <source>Do not write code that assumes two equal but separately-created immutable values are identical (don't use &lt;code&gt;x is y&lt;/code&gt;, use &lt;code&gt;x == y&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 개는 같지만 별도로 생성 된 불변 값이 같다고 가정하는 코드를 작성하지 마십시오 ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x is y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지 말고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x == y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed560bafd90e01f11e33150257fd88f37dc6f579" translate="yes" xml:space="preserve">
          <source>Don't know about you but I see this and think: &lt;em&gt;Let's find that array!&lt;/em&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신에 대해 모르지만 나는 이것을보고 생각합니다 : &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그 배열을 찾아 봅시다!&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="49c014f16006f023aade3279fee6eb3bc11567ea" translate="yes" xml:space="preserve">
          <source>During complilation of this statement, CPython will see that you have two matching literals and will use the same &lt;code&gt;PyLongObject&lt;/code&gt; representing &lt;code&gt;257&lt;/code&gt;. You can see this if you do the compilation yourself and examine its contents:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 문장을 완성하는 동안 CPython은 두 개의 일치하는 리터럴이 있으며 &lt;/font&gt; &lt;code&gt;257&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 나타내는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동일한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;PyLongObject&lt;/code&gt; 를 사용함을 알 수&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컴파일을 직접 수행하고 내용을 검사하면 이것을 볼 수 있습니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b32ef340ea4702fd5f41dbe4001671d76174ef71" translate="yes" xml:space="preserve">
          <source>Explanation</source>
          <target state="translated">Explanation</target>
        </trans-unit>
        <trans-unit id="72aaef6df9487030c3c92b755d874758273c11c1" translate="yes" xml:space="preserve">
          <source>First, what does &lt;code&gt;is&lt;/code&gt; do? It is a comparison operator. From the &lt;a href=&quot;https://docs.python.org/2/reference/expressions.html#not-in&quot;&gt;documentation&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫째, 무엇 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 어떻게? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;비교 연산자입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로부터 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/reference/expressions.html#not-in&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문서&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4733ac4c8d05bf5ffc65a9b02bf2a40d5df3a644" translate="yes" xml:space="preserve">
          <source>For immutable value objects, like ints, strings or datetimes, object identity is not especially useful. It's better to think about equality. Identity is essentially an implementation detail for value objects - since they're immutable, there's no effective difference between having multiple refs to the same object or multiple objects.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정수, 문자열 또는 날짜 시간과 같은 변경 불가능한 값 객체의 경우 객체 ID가 특히 유용하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;평등에 대해 생각하는 것이 좋습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아이덴티티는 본질적으로 가치 객체의 구현 세부 사항입니다. 불변이기 때문에 동일한 객체 또는 여러 객체에 대한 다중 참조를 갖는 것 사이에는 효과적인 차이가 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cba50fd60be45fbcdb44b6e9a9d66f7f5c706e84" translate="yes" xml:space="preserve">
          <source>For one thing, there are some other pre-created values, such as the empty &lt;code&gt;tuple&lt;/code&gt;, &lt;code&gt;str&lt;/code&gt;, and &lt;code&gt;bytes&lt;/code&gt;, and some short strings (in CPython 3.6, it's the 256 single-character Latin-1 strings). For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우선, 비어있는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 같은 미리 작성된 값 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;과 짧은 문자열 (CPython 3.6에서는 256 개의 단일 문자 Latin-1 문자열)이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들면 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b93a78d2063253b791062e536fbcf3c506c7e8f" translate="yes" xml:space="preserve">
          <source>From the &lt;a href=&quot;https://docs.python.org/library/functions.html#id&quot;&gt;documentation&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로부터 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/library/functions.html#id&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문서&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20f1962ed548d5a4e5a85c77e6163b6dd07229c0" translate="yes" xml:space="preserve">
          <source>Greg Hewgill (OP) made one clarifying comment &quot;My goal is to compare object identity, rather than equality of value. Except for numbers, where I want to treat object identity the same as equality of value.&quot;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Greg Hewgill (OP)은 &quot;내 목표는 가치의 평등보다는 객체의 정체성을 비교하는 것입니다. 숫자를 제외하고는 객체의 정체성을 가치의 평등과 같은 것으로 취급하고자하는 숫자는 제외합니다.&quot;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9520edcc756ac36c651c3dd60aa89decca7c632a" translate="yes" xml:space="preserve">
          <source>Here's what I found in the Python 2 documentation, &lt;a href=&quot;https://docs.python.org/2/c-api/int.html&quot;&gt;&quot;Plain Integer Objects&quot;&lt;/a&gt; (It's the same for &lt;a href=&quot;https://docs.python.org/3/c-api/long.html&quot;&gt;Python 3&lt;/a&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 Python 2 설명서 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/c-api/int.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;Plain Integer Objects&quot;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 찾은 내용입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/c-api/long.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 3&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 동일 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7633b56032467c98e3952b15959b9bc41571b808" translate="yes" xml:space="preserve">
          <source>I am using Python 2.5.2. Trying some different versions of Python, it appears that Python 2.3.3 shows the above behaviour between 99 and 100.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 2.5.2를 사용하고 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 버전의 Python을 시도해 보면 Python 2.3.3은 99와 100 사이의 위의 동작을 보여줍니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bf1bbe0998ecfbccd8f34580ebb282b05c3eba6e" translate="yes" xml:space="preserve">
          <source>I don't actually know an answer to this variant of the question. I suppose one could theoretically use ctypes to call &lt;code&gt;PyNumber_Check&lt;/code&gt;, but even that function &lt;a href=&quot;http://mail.python.org/pipermail/python-dev/2002-November/030237.html&quot;&gt;has been debated&lt;/a&gt;, and it's certainly not portable. We'll just have to be less particular about what we test for now.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 실제로이 질문의 변형에 대한 답을 모른다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이론적으로 ctypes를 사용하여 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;PyNumber_Check&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 호출 할 수 있다고 가정 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지만 해당 기능조차도 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://mail.python.org/pipermail/python-dev/2002-November/030237.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;논쟁&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 여지가 있으며 이식성이 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리는 지금 우리가 테스트하는 것에 대해 덜 구체적이어야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c7fde5b1be5df2cc60e919d243f79f64499af2e9" translate="yes" xml:space="preserve">
          <source>I hope my explanation has made you &lt;em&gt;C&lt;/em&gt; things clearly now (pun obviously intented).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 설명으로 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 물건을 명확하게 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;만들었 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기를 바랍니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2bf1ba0f7bc61d56c0afc241fb28b1a06aec1cfa" translate="yes" xml:space="preserve">
          <source>I think your hypotheses is correct. Experiment with &lt;code&gt;id&lt;/code&gt; (identity of object):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 당신의 가설이 맞다고 생각합니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (객체의 신원)로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실험하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2989e4329462383daa6dcd09e8a4487363cde76c" translate="yes" xml:space="preserve">
          <source>If you haven't fiddled with the C code implementing CPython &lt;em&gt;you should&lt;/em&gt;; everything is pretty organized and readable. For our case, we need to look in the &lt;a href=&quot;https://hg.python.org/cpython/file/d489394a73de/Objects/&quot;&gt;&lt;code&gt;Objects&lt;/code&gt; subdirectory&lt;/a&gt; of the &lt;a href=&quot;https://hg.python.org/cpython/file/tip&quot;&gt;main source code directory tree&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPython &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 구현하는 C 코드를 다루지 않았다면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 것이 꽤 체계적이고 읽기 쉽습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리의 경우, 우리는이에서 볼 필요가 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/d489394a73de/Objects/&quot;&gt; &lt;code&gt;Objects&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하위 디렉토리&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주요 소스 코드 디렉토리 트리를&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="537f423d61e77546573c451ff8a9476446add0aa" translate="yes" xml:space="preserve">
          <source>In CPython, the &lt;strong&gt;C-API&lt;/strong&gt; function that handles creating a new &lt;code&gt;int&lt;/code&gt; object is &lt;a href=&quot;https://docs.python.org/3/c-api/long.html#c.PyLong_FromLong&quot;&gt;&lt;code&gt;PyLong_FromLong(long v)&lt;/code&gt;&lt;/a&gt;. The description for this function is:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPython에서 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;새 &lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 오브젝트 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;작성을 처리 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C-API&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 &lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/c-api/long.html#c.PyLong_FromLong&quot;&gt; &lt;code&gt;PyLong_FromLong(long v)&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 기능에 대한 설명은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8d327fdbf38dbb5e18ce4c7e07d18a8f571e859d" translate="yes" xml:space="preserve">
          <source>In summary - let me emphasize: &lt;strong&gt;&lt;em&gt;Do not use &lt;code&gt;is&lt;/code&gt; to compare integers.&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;요약하면 - 내가 강조하자 : &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;할 일이없는 사용 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 정수를 비교.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c38fd56c4fdb78cb02380e1ab7bd3e9ca151e1b2" translate="yes" xml:space="preserve">
          <source>In the end, this issue stems from Python not originally having a type tree with predicates like &lt;a href=&quot;http://en.wikipedia.org/wiki/Scheme_%28programming_language%29&quot;&gt;Scheme's&lt;/a&gt;&lt;code&gt;number?&lt;/code&gt;, or &lt;a href=&quot;http://en.wikipedia.org/wiki/Haskell_%28programming_language%29&quot;&gt;Haskell's&lt;/a&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Type_class&quot;&gt;type class&lt;/a&gt;&lt;a href=&quot;http://www.haskell.org/ghc/docs/7.4-latest/html/libraries/base-4.5.1.0/Prelude.html#t:Num&quot;&gt;Num&lt;/a&gt;. &lt;code&gt;is&lt;/code&gt; checks object identity, not value equality. PHP has a colorful history as well, where &lt;code&gt;===&lt;/code&gt; apparently behaves as &lt;code&gt;is&lt;/code&gt; only on objects &lt;a href=&quot;http://www.php.net/manual/en/language.operators.comparison.php&quot;&gt;in PHP5, but not PHP4&lt;/a&gt;. Such are the growing pains of moving across languages (including versions of one).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결국이 문제는 원래 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Scheme_%28programming_language%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Scheme의 &lt;/font&gt;&lt;/font&gt;&lt;/a&gt; &lt;code&gt;number?&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 같은 술어가있는 유형 트리가없는 Python에서 비롯된 것 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Haskell_%28programming_language%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Haskell의 &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Type_class&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;유형 클래스 &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;a href=&quot;http://www.haskell.org/ghc/docs/7.4-latest/html/libraries/base-4.5.1.0/Prelude.html#t:Num&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Num&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 값 평등이 아닌 객체 동일성을 검사합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 PHP는,뿐만 아니라 화려한 역사를 가지고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; 이&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 분명히 같은 동작 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 개체 만에 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.php.net/manual/en/language.operators.comparison.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP4를 PHP5에 있지만&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;언어 (버전의 언어를 포함하여)를 이동함에 따라 점점 더 많은 고통이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0a9540f293e49d567c14e8e1c59c886e0fe58f9" translate="yes" xml:space="preserve">
          <source>Instead, use &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; to compare for equality and inequality, respectively. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대신 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;!=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 사용하여 동등성과 부등식을 각각 비교하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들면 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="70e475fcee8450b0a26129f13b286a70f00f2415" translate="yes" xml:space="preserve">
          <source>It also happens with strings:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자열에서도 발생합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d330cfdd1cef99b1885c3e778fb651e9d68f3822" translate="yes" xml:space="preserve">
          <source>It appears that numbers &lt;code&gt;&amp;lt;= 255&lt;/code&gt; are treated as literals and anything above is treated differently!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;숫자 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;= 255&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 리터럴로 취급되며 위의 내용은 다르게 취급됩니다!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e0e6d9d4ad1d30892d62940222ae6d9456aace7" translate="yes" xml:space="preserve">
          <source>It can be worth learning the rules for one specific Python for the fun of it. But it's not worth relying on them in your code. The only safe rule is:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;재미를 위해 특정 Python에 대한 규칙을 배우는 것이 좋습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 코드에서 그것들에 의존 할 가치는 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;유일한 안전한 규칙은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5fb810233f7fc63d4d3223263f62bf30b9080ca1" translate="yes" xml:space="preserve">
          <source>It depends on whether you're looking to see if 2 things are equal, or the same object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 가지가 동일한 지 또는 동일한 객체인지 여부에 따라 다릅니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a0aa15a254986085a44ed811e3ee1a9f43a5d480" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;not&lt;/em&gt; an expected result. Why is it expected? It only means that the integers valued at &lt;code&gt;256&lt;/code&gt; referenced by both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are the same instance of integer. Integers are immutable in Python, thus they cannot change. This should have no impact on any code. It should not be expected. It is merely an implementation detail.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예상 된 결과 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아닙니다&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;왜 예상됩니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 오직 상당 정수 것을 의미한다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;256&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 모두에 의해 참조 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;및 &lt;/font&gt; &lt;code&gt;b&lt;/code&gt; 는&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 정수의 동일한 인스턴스이다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정수는 파이썬에서 변경할 수 없으므로 변경할 수 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 코드에 영향을 미치지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예상해서는 안됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 단지 구현 세부 사항입니다.&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f98f6e25f80d9a92c1ddec978b96a072d0718543" translate="yes" xml:space="preserve">
          <source>It is better to use &lt;code&gt;==&lt;/code&gt; for that purpose.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그 목적으로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 것이 좋습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="39a018c9a327559044eb93b83cfa631890fe5a9b" translate="yes" xml:space="preserve">
          <source>It might be even better if CPython could do this globally, if it could do so cheaply (as there would a cost in the lookup), perhaps another implementation might.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPython이 전 세계적 으로이 작업을 수행 할 수 있다면 더 저렴 할 수 있다면 (검색 비용이 들기 때문에) 아마도 다른 구현 일 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2934f14fba9d6d3632870dc31aab2cd51063439c" translate="yes" xml:space="preserve">
          <source>Looks like we now have two separate instances of integers with the value of &lt;code&gt;257&lt;/code&gt; in memory. Since integers are immutable, this wastes memory. Let's hope we're not wasting a lot of it. We're probably not. But this behavior is not guaranteed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;메모리에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;257&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 인 정수의 두 개의 인스턴스가있는 것처럼 보입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정수는 불변이므로 메모리가 낭비됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리가 많이 낭비하지 않기를 바랍니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리는 아마 아닐 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나이 동작은 보장되지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="27d9b42564e11c6f850edfd6f695a59f49f4ae4c" translate="yes" xml:space="preserve">
          <source>Next let's look at &lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l37&quot;&gt;&lt;code&gt;get_small_int&lt;/code&gt; in all its glory&lt;/a&gt; (well, we'll just look at its body because that's where the interesting things are):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음으로 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l37&quot;&gt; &lt;code&gt;get_small_int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 영광 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스럽게&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 살펴 봅시다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(그냥 흥미로운 것들이 있기 때문에 본문을 살펴 보겠습니다) :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a04214a82c1046176055acabc88aef3f66d91e4" translate="yes" xml:space="preserve">
          <source>Note that the fact that the id of an object in CPython (the reference implementation of Python) is the location in memory is an implementation detail. Other implementations of Python (such as Jython or IronPython) could easily have a different implementation for &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPython에서 객체의 id (Python의 참조 구현)가 메모리의 위치라는 사실은 구현 세부 사항입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 Python 구현 (예 : Jython 또는 IronPython)은 쉽게 다른 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 구현을 가질 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8c26b8d49e5d32ac527e4aea2bb981672da514ba" translate="yes" xml:space="preserve">
          <source>Now everything seems fine.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 모든 것이 좋아 보입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bfe09b0d0f357b91654290934773a91647c00166" translate="yes" xml:space="preserve">
          <source>Now that's unexpected.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 예상치 못한 일입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f34502290825f879ef0a903691b3244a342cdb53" translate="yes" xml:space="preserve">
          <source>Now, we're no C &lt;em&gt;master-code-haxxorz&lt;/em&gt; but we're also not dumb, we can see that &lt;code&gt;CHECK_SMALL_INT(ival);&lt;/code&gt; peeking at us all seductively; we can understand it has something to do with this. &lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l51&quot;&gt;Let's check it out:&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 우리는 C &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;master-code-haxxorz&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 아니지만 멍청하지도 않습니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;CHECK_SMALL_INT(ival);&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리 모두를 유혹적으로 엿보기; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리는 이것이 이와 관련이 있다는 것을 이해할 수 있습니다. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l51&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;확인 해보자:&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54a15d09f086e70ac3bd6806a4576b2e3ee8cf95" translate="yes" xml:space="preserve">
          <source>Obviously, CPython doesn't come with a pre-created &lt;code&gt;float&lt;/code&gt; value for &lt;code&gt;42.23e100&lt;/code&gt;. So, what's going on here?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;분명히 CPython에는 &lt;/font&gt; &lt;code&gt;42.23e100&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대해 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사전 작성된 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 값이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;제공되지 않습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;무슨 일이야?&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d3893852a37e6362ba755d3935741b21f6943faa" translate="yes" xml:space="preserve">
          <source>Okay, declare a &lt;code&gt;PyObject&lt;/code&gt;, assert that the previous condition holds and execute the assignment:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;PyObject&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 선언 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하고 이전 조건이 유지되고 할당을 실행한다고 주장하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0529ee68c4de392040437e76423071979840b586" translate="yes" xml:space="preserve">
          <source>On the other hand, it is limited to the &lt;code&gt;str&lt;/code&gt; type, and to strings of &lt;a href=&quot;https://github.com/python/cpython/blob/master/Include/unicodeobject.h#L197&quot;&gt;internal storage kind &quot;ascii compact&quot;, &quot;compact&quot;, or &quot;legacy ready&quot;&lt;/a&gt;, and in many cases only &quot;ascii compact&quot; will get interned.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;반면, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 유형과 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/python/cpython/blob/master/Include/unicodeobject.h#L197&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내부 스토리지 유형 &quot;ascii compact&quot;, &quot;compact&quot;또는 &quot;legacy ready&quot;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 문자열로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;제한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되며 많은 경우 &quot;ascii compact&quot;만 삽입됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="af727a9e60200c0ec56d017c5f22b2316c0eba6b" translate="yes" xml:space="preserve">
          <source>Or, in other words, only use &lt;code&gt;is&lt;/code&gt; to test for the documented singletons (like &lt;code&gt;None&lt;/code&gt;) or that are only created in one place in the code (like the &lt;code&gt;_sentinel = object()&lt;/code&gt; idiom).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는, 즉 만 사용하는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 문서화 (같은 싱글을위한 시험 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;None&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 전용 (등 코드에서 한 곳에서 생성) 또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;_sentinel = object()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 관용구).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f886ab250b071a41757b46631a700b0bdb639e3c" translate="yes" xml:space="preserve">
          <source>PHP apparently allows the same thing for &quot;built-in&quot; classes (which I take to mean implemented at C level, not in PHP). A slightly less absurd use might be a timer object, which has a different value every time it's used as a number. Quite why you'd want to emulate Visual Basic's &lt;code&gt;Now&lt;/code&gt; instead of showing that it is an evaluation with &lt;code&gt;time.time()&lt;/code&gt; I don't know.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP는 분명히 &quot;내장&quot;클래스 (PHP가 아닌 C 레벨에서 구현됨을 의미 함)에 대해 동일한 것을 허용합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;약간 덜 불합리한 사용은 타이머 객체 일 수 있으며, 숫자로 사용될 때마다 다른 값을 갖습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;왜 Visual Basic의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Now&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 에뮬레이션하고 싶을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;지 모르겠지만 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;time.time()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용한 평가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;라는 것을 알 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd75e6abb03749de2f2240c104b07f9971286711" translate="yes" xml:space="preserve">
          <source>Put that in a function, &lt;code&gt;dis&lt;/code&gt; it, and look at the &lt;code&gt;co_consts&lt;/code&gt;&amp;mdash;there's a &lt;code&gt;1&lt;/code&gt; and a &lt;code&gt;2&lt;/code&gt;, two &lt;code&gt;(1, 2)&lt;/code&gt; tuples that share the same &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt; but are not identical, and a &lt;code&gt;((1, 2), (1, 2))&lt;/code&gt; tuple that has the two distinct equal tuples.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수에 있음을 넣어 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;dis&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을하고 봐에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;co_consts&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 얘긴데, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 두 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(1, 2)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 같은 공유하는 튜플 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하지만 동일하지 않은, 그리고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;((1, 2), (1, 2))&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 튜플은 서로 다른 두 개의 동일한 튜플을 갖습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="32bfc78671ed84f6edb1caed4a60f13e77f4eda9" translate="yes" xml:space="preserve">
          <source>Python's &amp;ldquo;is&amp;rdquo; operator behaves unexpectedly with integers?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬의 &quot;is&quot;연산자는 정수로 예기치 않게 동작합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c6561c6ba8b07aea6a89505ee401b354c197b0ce" translate="yes" xml:space="preserve">
          <source>Since the reference refers to the same object, issuing &lt;code&gt;id()&lt;/code&gt; directly or checking for identity with &lt;code&gt;is&lt;/code&gt; on it will return exactly the same thing.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조가 같은 객체를 참조하기 때문에, 실행 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 직접 또는 아이덴티티를 확인하는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 정확히 같은 일을 반환에.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eff95496609f695b73e468f3adfa7f04ee1c17d5" translate="yes" xml:space="preserve">
          <source>So &lt;code&gt;is&lt;/code&gt; will return &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그래서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 반환 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;True&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d75f158b3b57dbe1bbac88f5dac9d039d0669f3" translate="yes" xml:space="preserve">
          <source>So it's a macro that calls function &lt;code&gt;get_small_int&lt;/code&gt; if the value &lt;code&gt;ival&lt;/code&gt; satisfies the condition:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 전화 기능이 매크로 그래서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;get_small_int&lt;/code&gt; 는&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 값의 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ival&lt;/code&gt; 의&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 만족 상태 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b802f6ab1cf3e86e9b09d81f8d990898448d638b" translate="yes" xml:space="preserve">
          <source>So our condition is &lt;code&gt;if (-5 &amp;lt;= ival &amp;amp;&amp;amp; ival &amp;lt; 257)&lt;/code&gt; call &lt;code&gt;get_small_int&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 조건은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;if (-5 &amp;lt;= ival &amp;amp;&amp;amp; ival &amp;lt; 257)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 호출 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;get_small_int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="354c4256823bad2a2de81af42cb46affe52cc7d3" translate="yes" xml:space="preserve">
          <source>So what are &lt;code&gt;NSMALLNEGINTS&lt;/code&gt; and &lt;code&gt;NSMALLPOSINTS&lt;/code&gt;? Macros! &lt;em&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l12&quot;&gt;Here they are&lt;/a&gt;&lt;/em&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그래서 무엇 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;NSMALLNEGINTS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;NSMALLPOSINTS&lt;/code&gt; 은&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;매크로! &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l12&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기 있습니다&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c4600849b6ae8384087ac8c6be8eaed48c5daa8d" translate="yes" xml:space="preserve">
          <source>So what is the use-case for &lt;code&gt;is&lt;/code&gt;?  &lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/#programming-recommendations&quot;&gt;PEP8 describes&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그래서 유스 케이스 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 무엇입니까? &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/#programming-recommendations&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PEP8은&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 다음을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;설명합니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b204a51feaa721b5f3bc6a5e541c3e65103bdde" translate="yes" xml:space="preserve">
          <source>So yup, this is our guy. When you want to create a new &lt;code&gt;int&lt;/code&gt; in the range &lt;code&gt;[NSMALLNEGINTS, NSMALLPOSINTS)&lt;/code&gt; you'll just get back a reference to an already existing object that has been preallocated.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그래,이 사람은 우리 남자 야 &lt;/font&gt; &lt;code&gt;[NSMALLNEGINTS, NSMALLPOSINTS)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 범위에서 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;새 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 만들려면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사전 할당 된 기존 객체에 대한 참조를 다시 가져옵니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e0981c32903ed4584fbc014f1ae45129beb4646b" translate="yes" xml:space="preserve">
          <source>Take a look at this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것 좀 봐 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9d3332f426bd312f89cc19a8f53fa1b95f7d3d4d" translate="yes" xml:space="preserve">
          <source>That's expected too.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것도 예상됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="89dbf8d1fb5c6efbe530bd45daa4100911146dfc" translate="yes" xml:space="preserve">
          <source>The CPython compiler will merge constant values of some known-immutable types like &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;str&lt;/code&gt;, &lt;code&gt;bytes&lt;/code&gt;,  in the same compilation unit. For a module, the whole module is a compilation unit, but at the interactive interpreter, each statement is a separate compilation unit. Since &lt;code&gt;c&lt;/code&gt; and &lt;code&gt;d&lt;/code&gt; are defined in separate statements, their values aren't merged. Since &lt;code&gt;e&lt;/code&gt; and &lt;code&gt;f&lt;/code&gt; are defined in the same statement, their values are merged.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPython 컴파일러는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 같은 알려진 불변 유형의 상수 값을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동일한 컴파일 단위로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;병합합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 모듈의 경우 전체 모듈은 컴파일 단위이지만 대화식 인터프리터에서 각 명령문은 별도의 컴파일 단위입니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;d&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 별도의 명령문으로 정의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되므로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해당 값이 병합되지 않습니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;e&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 같은 명령문으로 정의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되므로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해당 값이 병합됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b375759c7ec6ff91b19c664f1268608e7cc391e" translate="yes" xml:space="preserve">
          <source>The Question</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;질문&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="670c799e05a171ede0c4dd77aa348c5565700111" translate="yes" xml:space="preserve">
          <source>The compiler now produces a &lt;a href=&quot;https://docs.python.org/3.8/library/exceptions.html#SyntaxWarning&quot;&gt;SyntaxWarning&lt;/a&gt; when identity checks (&lt;code&gt;is&lt;/code&gt; and
  &lt;code&gt;is not&lt;/code&gt;) are used with certain types of literals (e.g. strings, ints).
  These can often work by accident in CPython, but are not guaranteed by
  the language spec. The warning advises users to use equality tests (&lt;code&gt;==&lt;/code&gt;
  and &lt;code&gt;!=&lt;/code&gt;) instead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;신원 확인 ( &lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; and &lt;/font&gt; &lt;code&gt;is not&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; )이 특정 유형의 리터럴 (예 : 문자열, 정수)과 함께 사용될 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;때 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컴파일러는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3.8/library/exceptions.html#SyntaxWarning&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SyntaxWarning을&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 생성합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이들은 종종 CPython에서 우연히 작동 할 수 있지만 언어 사양에 따라 보장되지는 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경고는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대신 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용자에게 동등성 테스트 ( &lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt; &lt;code&gt;!=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 사용하도록 권장 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1ea84ce07bd5132b3844c115d124c91532803a45" translate="yes" xml:space="preserve">
          <source>The current implementation keeps an
  array of integer objects for all
  integers between -5 and 256, when you
  create an int in that range you
  actually just get back a reference to
  the existing object. So it should be
  possible to change the value of 1. I
  suspect the behaviour of Python in
  this case is undefined. :-)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;현재 구현에서는 -5와 256 사이의 모든 정수에 대한 정수 객체 배열을 유지합니다.이 범위에서 int를 만들면 실제로 기존 객체에 대한 참조를 다시 얻습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 값 1을 변경할 수 있어야합니다.이 경우 Python의 동작이 정의되지 않은 것 같습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:-)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29e90c5bbad522679e9cff75399d3ab2231dc258" translate="yes" xml:space="preserve">
          <source>The operators &lt;code&gt;is&lt;/code&gt; and &lt;code&gt;is not&lt;/code&gt; test for object identity: &lt;code&gt;x is y&lt;/code&gt; is true
  if and only if x and y are the same object. &lt;code&gt;x is not y&lt;/code&gt; yields the
  inverse truth value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;연산자는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is not&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 개체 식별을위한 테스트 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x is y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 경우에만, X true이고 y는 같은 객체. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x is not y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 역 진리 값을 산출합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31a9e950d0f64e017765a3426458ec2f105644eb" translate="yes" xml:space="preserve">
          <source>There's another issue that isn't pointed out in any of the existing answers. Python is allowed to merge any two immutable values, and pre-created small int values are not the only way this can happen. A Python implementation is never &lt;em&gt;guaranteed&lt;/em&gt; to do this, but they all do it for more than just small ints.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기존 답변에서 지적되지 않은 또 다른 문제가 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬은 두 개의 불변 값을 병합 할 수 있으며 미리 작성된 작은 int 값이 이것이 일어날 수있는 유일한 방법은 아닙니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬 구현은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것을 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;보장&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하지는 않지만 작은 정수 이상의 것을 위해 모두 수행합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="583901099c77110e0cb24f39eb25b6aae81ad94d" translate="yes" xml:space="preserve">
          <source>There's one more optimization that CPython does: string interning. Unlike compiler constant folding, this isn't restricted to source code literals:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPython이 수행하는 최적화는 문자열 인터 닝입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컴파일러 상수 폴딩과 달리 소스 코드 리터럴로 제한되지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a027cbf441c889c70feaf96ab63365405fe9f43b" translate="yes" xml:space="preserve">
          <source>This can be a very fast check relative to say, checking if two very long strings are equal in value. But since it applies to the uniqueness of the object, we thus have limited use-cases for it. In fact, we mostly want to use it to check for &lt;code&gt;None&lt;/code&gt;, which is a singleton (a sole instance existing in one place in memory). We might create other singletons if there is potential to conflate them, which we might check with &lt;code&gt;is&lt;/code&gt;, but these are relatively rare. Here's an example (will work in Python 2 and 3) e.g.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 두 개의 매우 긴 문자열의 값이 같은지 확인하는 것과 비교하여 매우 빠른 검사 일 수 있습니다. 그러나 객체의 고유성에 적용되므로 사용 사례가 제한적입니다. 실제로 우리는 대부분 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;싱글 톤 (메모리의 한 곳에 존재하는 유일한 인스턴스) 인 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;None&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 확인하기 위해 사용하려고합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 우리가 확인할 수있는 그들을 conflate 할 가능성이있는 경우, 우리는 다른 싱글을 만들 수 있습니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 그러나 이들은 상대적으로 드물다. 다음은 예제입니다 (Python 2 및 3에서 작동). 예 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5736a7527bced364532363ef0b99dcec78a614b3" translate="yes" xml:space="preserve">
          <source>This is actually easier to explain, &lt;a href=&quot;https://stackoverflow.com/questions/34147515/is-operator-returns-different-results-on-integers&quot;&gt;and I have attempted to do so already&lt;/a&gt;; it's due to the fact that Python will execute this interactive statement as a single block:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 실제로 설명하기가 더 쉬우 며 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/34147515/is-operator-returns-different-results-on-integers&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이미 그렇게 시도했습니다&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬 이이 대화 형 문을 단일 블록으로 실행한다는 사실 때문입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="40446b6e3805c68dd07e5e77bacfa2e0f640a8c0" translate="yes" xml:space="preserve">
          <source>This isn't behavior you should have any expectations about.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 당신이 기대해야 할 행동이 아닙니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="263db2012ac92a2151292e26bd7380de0b6aaea6" translate="yes" xml:space="preserve">
          <source>This would have yet another answer, as we have to categorize things as numbers or not, to select whether we compare with &lt;code&gt;==&lt;/code&gt; or &lt;code&gt;is&lt;/code&gt;. &lt;a href=&quot;http://en.wikipedia.org/wiki/CPython&quot;&gt;CPython&lt;/a&gt; defines the &lt;a href=&quot;http://docs.python.org/2/c-api/number.html&quot;&gt;number protocol&lt;/a&gt;, including PyNumber_Check, but this is not accessible from Python itself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 비교할 것인지를 선택하기 위해 사물을 숫자로 분류해야하는지에 따라 또 다른 대답이 될 것 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/CPython&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPython&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PyNumber_Check를 포함 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/2/c-api/number.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;숫자 프로토콜을&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 정의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지만 Python 자체에서는 액세스 할 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43aebb53feffaeb360d08a4be1091214297bcc3b" translate="yes" xml:space="preserve">
          <source>To know this, you need to know the following.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것을 알기 위해서는 다음을 알아야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3bfeae23da5bf491706d2bc58548592ddf50393e" translate="yes" xml:space="preserve">
          <source>We could try to use &lt;code&gt;isinstance&lt;/code&gt; with all the number types we know of, but this would inevitably be incomplete. The types module contains a StringTypes list but no NumberTypes. Since Python 2.6, the built in number classes have a base class &lt;a href=&quot;https://docs.python.org/2/library/numbers.html#numbers.Number&quot;&gt;&lt;code&gt;numbers.Number&lt;/code&gt;&lt;/a&gt;, but it has the same problem:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리가 아는 모든 숫자 유형으로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isinstance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 사용하려고 시도 할 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있지만, 이것은 불완전 할 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;types 모듈에는 StringTypes 목록이 있지만 NumberTypes는 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬 2.6부터 내장 된 숫자 클래스는 기본 클래스 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/library/numbers.html#numbers.Number&quot;&gt; &lt;code&gt;numbers.Number&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 가지고 있지만 같은 문제가 있습니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3ff86b4a856c53f1719f261c2f51ff44fd8dfd22" translate="yes" xml:space="preserve">
          <source>Well, this looks like your particular implementation of Python is trying to be smart and not creating redundantly valued integers in memory unless it has to. You seem to indicate you are using the referent implementation of Python, which is CPython. Good for CPython.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;글쎄, 이것은 파이썬의 특정 구현이 똑똑하고 노력하지 않는 한 메모리에 중복 값을 생성하지 않는 것처럼 보입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPython 인 Python의 참조 구현을 사용하고 있음을 나타냅니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPython에 좋습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea4def8e52a626d6b79b31589076963f02a32a23" translate="yes" xml:space="preserve">
          <source>What &lt;code&gt;is&lt;/code&gt; does</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어떤 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하지&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="88ce2bf65b6b5dfca6ce5a2bade2f6a84f488a72" translate="yes" xml:space="preserve">
          <source>When CPython does the operation, it's now just going to load the exact same object:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPython이 작업을 수행하면 이제 정확히 동일한 객체를로드합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e52f46f155653a3c2a2e009ba12b0ccd1ff43ab6" translate="yes" xml:space="preserve">
          <source>Which prints:</source>
          <target state="translated">어떤 지문 :</target>
        </trans-unit>
        <trans-unit id="083aa69538f471398179051fbd0bac459c4c6d6e" translate="yes" xml:space="preserve">
          <source>Why does the following behave unexpectedly in Python?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;왜 파이썬에서 다음이 예기치 않게 동작합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b0fb91e86722cf49e94b70bee64200f9524ab922" translate="yes" xml:space="preserve">
          <source>Why would we want to use &lt;code&gt;is&lt;/code&gt; then?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;왜 우리가 사용하고자하는 것 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 그럼?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a5dbcfbe429bfef2be3cb82f9c7e8a442a5563b" translate="yes" xml:space="preserve">
          <source>You ask, and state, the following question (with code):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 질문을 묻고 진술하십시오 (코드 포함).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7a8a0f94fb85d4a56e931c1386aa8c512d5e9fa3" translate="yes" xml:space="preserve">
          <source>You can see what's going on by disassembling the bytecode. Try defining a function that does &lt;code&gt;e, f = 128, 128&lt;/code&gt; and then calling &lt;code&gt;dis.dis&lt;/code&gt; on it, and you'll see that there's a single constant value &lt;code&gt;(128, 128)&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;바이트 코드를 디스 어셈블하면 현재 진행중인 작업을 확인할 수 있습니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;e, f = 128, 128&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 수행하는 함수를 정의한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;dis.dis&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 호출 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 단일 상수 값 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(128, 128)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d118cc3fab20976a46fc7b009a620128f88605d" translate="yes" xml:space="preserve">
          <source>You may notice that the compiler has stored &lt;code&gt;128&lt;/code&gt; as a constant even though it's not actually used by the bytecode, which gives you an idea of how little optimization CPython's compiler does. Which means that (non-empty) tuples actually don't end up merged:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;바이트 코드에서 실제로 사용하지 않더라도 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컴파일러가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;128&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 상수로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;저장했음을 알 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. CPython의 컴파일러가 얼마나 적은 최적화를했는지 알 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉, 비어 있지 않은 튜플은 실제로 병합되지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24c5f4e4ff6ed911320dff759cb8f0190b9de7ce" translate="yes" xml:space="preserve">
          <source>You should use &lt;code&gt;==&lt;/code&gt; to compare equality of arbitrary objects. You can specify the behavior with the &lt;code&gt;__eq__&lt;/code&gt;, and &lt;code&gt;__ne__&lt;/code&gt; attributes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;임의의 객체가 동일한 지 비교 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하려면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용해야 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__eq__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__ne__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성으로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동작을 지정할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="841108c86e9fbb4edafbf1fc269ca06fbd9c2aa7" translate="yes" xml:space="preserve">
          <source>is the same as</source>
          <target state="translated">와 같다</target>
        </trans-unit>
        <trans-unit id="acc613352f69a406f394f0ff07ee6e99b6e8ad73" translate="yes" xml:space="preserve">
          <source>“is” operator behaves unexpectedly with integers</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;is&quot;연산자는 정수로 예기치 않게 동작합니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
