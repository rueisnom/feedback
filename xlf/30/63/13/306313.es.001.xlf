<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/306313">
    <body>
      <group id="306313">
        <trans-unit id="8af8c074689165ea8fe36329441d2b10f2f1491a" translate="yes" xml:space="preserve">
          <source>(My italics)</source>
          <target state="translated">(Mis cursivas)</target>
        </trans-unit>
        <trans-unit id="ca756f1eaabeb116dcd7b4a1b0090bfb24d6500b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/PHP&quot;&gt;PHP's&lt;/a&gt;&lt;code&gt;===&lt;/code&gt; operator, on the other hand, is described as checking equality and type: &lt;code&gt;x == y and type(x) == type(y)&lt;/code&gt; as per Paulo Freitas' comment. This will suffice for common numbers, but differ from &lt;code&gt;is&lt;/code&gt; for classes that define &lt;code&gt;__eq__&lt;/code&gt; in an absurd manner:</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/PHP&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; operador &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;de PHP&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , por otro lado, se describe como comprobaci&amp;oacute;n de igualdad y tipo: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x == y and type(x) == type(y)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; seg&amp;uacute;n el comentario de Paulo Freitas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto ser&amp;aacute; suficiente para n&amp;uacute;meros comunes, pero difiere de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para clases que definen &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__eq__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de una manera absurda:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7eb0e738de5256d34700b3cb51c68bc4bf26d348" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/whatsnew/3.8.html#changes-in-python-behavior&quot;&gt;What&amp;rsquo;s New In Python 3.8: Changes in Python behavior&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/whatsnew/3.8.html#changes-in-python-behavior&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Novedades de Python 3.8: Cambios en el comportamiento de Python&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0cf22729aea1b77b4bbafd7e232e2ac901c67c28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l5343&quot;&gt;During initialization in &lt;code&gt;_PyLong_Init&lt;/code&gt;&lt;/a&gt; Python will gladly enter in a for loop do do this for you:</source>
          <target state="translated">&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l5343&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Durante la inicializaci&amp;oacute;n en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;_PyLong_Init&lt;/code&gt; ,&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Python con mucho gusto ingresar&amp;aacute; en un bucle for, haga esto por usted:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4727386de597831e6de13525e011f3b1787ca9aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PyLong_FromLong&lt;/code&gt; deals with &lt;code&gt;long&lt;/code&gt; objects so it shouldn't be hard to deduce that we need to peek inside &lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c&quot;&gt;&lt;code&gt;longobject.c&lt;/code&gt;&lt;/a&gt;. After looking inside you might think things are chaotic; they are, but fear not, the function we're looking for is chilling at &lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l230&quot;&gt;line 230&lt;/a&gt; waiting for us to check it out. It's a smallish function so the main body (excluding declarations) is easily pasted here:</source>
          <target state="translated">&lt;code&gt;PyLong_FromLong&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; trata con &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;long&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , por lo que no deber&amp;iacute;a ser dif&amp;iacute;cil deducir que necesitamos mirar dentro de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c&quot;&gt; &lt;code&gt;longobject.c&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Despu&amp;eacute;s de mirar dentro, puede pensar que las cosas son ca&amp;oacute;ticas; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;son, pero no temas, la funci&amp;oacute;n que estamos buscando es relajarse en la &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l230&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;l&amp;iacute;nea 230&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; esperando que la revisemos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es una funci&amp;oacute;n peque&amp;ntilde;a, por lo que el cuerpo principal (excluyendo las declaraciones) se pega f&amp;aacute;cilmente aqu&amp;iacute;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0ca2c8087b11e6237f285ecbd7547f0cb9b75504" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is&lt;/code&gt; checks that the &lt;code&gt;id&lt;/code&gt; of two objects are the same. In CPython, the &lt;code&gt;id&lt;/code&gt; is the location in memory, but it could be some other uniquely identifying number in another implementation. To restate this with code:</source>
          <target state="translated">&lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; comprueba que el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de dos objetos son los mismos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En CPython, la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; entificaci&amp;oacute;n&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es la ubicaci&amp;oacute;n en la memoria, pero podr&amp;iacute;a ser alg&amp;uacute;n otro n&amp;uacute;mero de identificaci&amp;oacute;n exclusivo en otra implementaci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para reformular esto con c&amp;oacute;digo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="775b7146689c1bccfb65c237ebaa0dc770710235" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is&lt;/code&gt; checks to see if they are the same object, not just equal. The small ints are probably pointing to the same memory location for space efficiency</source>
          <target state="translated">&lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; verifica si son el mismo objeto, no solo iguales. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las entradas peque&amp;ntilde;as probablemente apuntan a la misma ubicaci&amp;oacute;n de memoria para ahorrar espacio&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd37d72689750907b7c77b7008832ae8e797a76e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is&lt;/code&gt;&lt;em&gt;is&lt;/em&gt; the identity equality operator (functioning like &lt;code&gt;id(a) == id(b)&lt;/code&gt;); it's just that two equal numbers aren't necessarily the same object. For performance reasons some small integers happen to be &lt;a href=&quot;http://en.wikipedia.org/wiki/Memoization&quot;&gt;memoized&lt;/a&gt; so they will tend to be the same (this can be done since they are immutable).</source>
          <target state="translated">&lt;code&gt;is&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;es&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; el operador de igualdad de identidad (funciona como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id(a) == id(b)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ); &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;es solo que dos n&amp;uacute;meros iguales no son necesariamente el mismo objeto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por razones de rendimiento, algunos enteros peque&amp;ntilde;os se &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Memoization&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;memorizan,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; por lo que tienden a ser los mismos (esto se puede hacer ya que son inmutables).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4072200f3b57b424ac3d8cb1802351446cd2d1b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;small_ints&lt;/code&gt; looks a lot like that array we've been searching for, and it is! &lt;em&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l25&quot;&gt;We could've just read the damn documentation and we would've know all along!&lt;/a&gt;&lt;/em&gt;:</source>
          <target state="translated">&lt;code&gt;small_ints&lt;/code&gt; se&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; parece mucho a esa matriz que hemos estado buscando, &amp;iexcl;y lo es! &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l25&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iexcl;Podr&amp;iacute;amos haber le&amp;iacute;do la maldita documentaci&amp;oacute;n y lo habr&amp;iacute;amos sabido todo el tiempo! &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d8bf1cc529ad48c7cf9526ccb3384a00e782c795" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;I'm late but, you want some source with your answer?&lt;/em&gt; I'll try and word this in an introductory manner so more folks can follow along.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Llego tarde pero, &amp;iquest;quieres alguna fuente con tu respuesta? &lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tratar&amp;eacute; de redactar esto de manera introductoria para que m&amp;aacute;s personas puedan seguirlo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b9a077320c8002a8b176d7a3db6c25f186bfd141" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The current implementation keeps an array of integer objects for all integers between -5 and 256, when you create an int in that range you actually just get back a reference to the existing object&lt;/em&gt;. So it should be possible to change the value of 1. I suspect the behaviour of Python in this case is undefined. :-)</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La implementaci&amp;oacute;n actual mantiene una matriz de objetos enteros para todos los enteros entre -5 y 256, cuando crea un int en ese rango, en realidad solo obtiene una referencia al objeto existente&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo tanto, deber&amp;iacute;a ser posible cambiar el valor de 1. Sospecho que el comportamiento de Python en este caso no est&amp;aacute; definido. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:-)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="184cec107084cc30c1541a03eb7b7c5c5b2fc402" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;id&lt;/code&gt;&lt;/strong&gt;
  Return the &amp;ldquo;identity&amp;rdquo; of an object. This is an integer (or long
  integer) which is guaranteed to be unique and constant for this object
  during its lifetime. Two objects with non-overlapping lifetimes may
  have the same &lt;code&gt;id()&lt;/code&gt; value.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;id&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Devuelve la &quot;identidad&quot; de un objeto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Este es un entero (o entero largo) que se garantiza que es &amp;uacute;nico y constante para este objeto durante su vida &amp;uacute;til. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Dos objetos con vidas que no se superponen pueden tener el mismo&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;valor&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0c2618c6b23ac2c646fefcef3c3a340853dc75d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why does the following behave unexpectedly in Python?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Por qu&amp;eacute; lo siguiente se comporta inesperadamente en Python?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5fdd494631e8dafb700e08e7c96fe53a330297c5" translate="yes" xml:space="preserve">
          <source>A good thing about CPython is that you can actually see the source for this. I'm going to use links for the &lt;strong&gt;3.5&lt;/strong&gt; release, but finding the corresponding &lt;strong&gt;2.x&lt;/strong&gt; ones is trivial.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo bueno de CPython es que realmente puedes ver la fuente de esto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Voy a usar enlaces para la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;versi&amp;oacute;n &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3.5&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero encontrar los correspondientes &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2.x&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es trivial.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac0aa8a7f83561e2ace489c627f4a3e6d97f3d7a" translate="yes" xml:space="preserve">
          <source>And so the following are equivalent.</source>
          <target state="translated">Y por lo tanto,lo siguiente es equivalente.</target>
        </trans-unit>
        <trans-unit id="020c09212154577102213e00113981c05e13b3fd" translate="yes" xml:space="preserve">
          <source>And so we see, with &lt;code&gt;is&lt;/code&gt; and a sentinel, we are able to differentiate between when &lt;code&gt;bar&lt;/code&gt; is called with no arguments and when it is called with &lt;code&gt;None&lt;/code&gt;. These are the primary use-cases for &lt;code&gt;is&lt;/code&gt; - do &lt;em&gt;not&lt;/em&gt; use it to test for equality of integers, strings, tuples, or other things like these.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Y as&amp;iacute; vemos, con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y un centinela, podemos diferenciar cu&amp;aacute;ndo &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se llama a la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;bar&lt;/code&gt; ra&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; sin argumentos y cu&amp;aacute;ndo se llama a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;None&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Estos son los casos de uso principales para &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : no &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lo&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; use para probar la igualdad de enteros, cadenas, tuplas u otras cosas como estas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="50a14f630be0955cb2c34cab46c0c646bb387224" translate="yes" xml:space="preserve">
          <source>And this isn't limited to &lt;code&gt;int&lt;/code&gt; values:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Y esto no se limita a los &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;valores &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6d178c346da46b34eeed9bb44ec12ed5b577b4a" translate="yes" xml:space="preserve">
          <source>As you can check in &lt;a href=&quot;http://svn.python.org/projects/python/trunk/Objects/intobject.c&quot;&gt;source file &lt;em&gt;intobject.c&lt;/em&gt;&lt;/a&gt;, Python caches small integers for efficiency. Every time you create a reference to a small integer, you are referring the cached small integer, not a new object. 257 is not an small integer, so it is calculated as a different object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como puede comprobar en el &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://svn.python.org/projects/python/trunk/Objects/intobject.c&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;archivo fuente &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;intobject.c&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , Python almacena en cach&amp;eacute; enteros peque&amp;ntilde;os para mayor eficiencia. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cada vez que crea una referencia a un entero peque&amp;ntilde;o, hace referencia al entero peque&amp;ntilde;o en cach&amp;eacute;, no a un objeto nuevo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;257 no es un entero peque&amp;ntilde;o, por lo que se calcula como un objeto diferente.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29932ebba2d5da8e81696624a51eb2f80862cb75" translate="yes" xml:space="preserve">
          <source>At any rate, the rules for what values must be, might be, or cannot be distinct vary from implementation to implementation, and between versions of the same implementation, and maybe even between runs of the same code on the same copy of the same implementation.</source>
          <target state="translated">En todo caso,las reglas sobre qué valores deben ser,pueden ser o no pueden ser distintos varían de una implementación a otra,y entre versiones de la misma implementación,y tal vez incluso entre ejecuciones del mismo código en la misma copia de la misma implementación.</target>
        </trans-unit>
        <trans-unit id="156f56e01d02f8aa6d287c3466f7e1e6aa738faa" translate="yes" xml:space="preserve">
          <source>Based on the above, I can hypothesize that Python is internally implemented such that &quot;small&quot; integers are stored in a different way than larger integers and the &lt;code&gt;is&lt;/code&gt; operator can tell the difference. Why the leaky abstraction? What is a better way of comparing two arbitrary objects to see whether they are the same when I don't know in advance whether they are numbers or not?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Con base en lo anterior, puedo plantear la hip&amp;oacute;tesis de que Python se implementa internamente de tal forma que los n&amp;uacute;meros enteros &quot;peque&amp;ntilde;os&quot; se almacenan en una manera diferente que los n&amp;uacute;meros enteros m&amp;aacute;s grandes y el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; operador puede notar la diferencia. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Por qu&amp;eacute; la abstracci&amp;oacute;n permeable? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Cu&amp;aacute;l es una mejor manera de comparar dos objetos arbitrarios para ver si son iguales cuando no s&amp;eacute; de antemano si son n&amp;uacute;meros o no?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b81a575249b1bbcd887f15acd7fe24dcae6a4d9" translate="yes" xml:space="preserve">
          <source>But also, even non-pre-created values can be identical. Consider these examples:</source>
          <target state="translated">Pero también,incluso los valores no pre-creados pueden ser idénticos.Considere estos ejemplos:</target>
        </trans-unit>
        <trans-unit id="7a83dbf36d26a2ccbc4c3b897467fd5fabd1c75e" translate="yes" xml:space="preserve">
          <source>But as for impact on code, you should not care if an integer is a particular instance of an integer. You should only care what the value of that instance is, and you would use the normal comparison operators for that, i.e. &lt;code&gt;==&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero en cuanto al impacto en el c&amp;oacute;digo, no deber&amp;iacute;a importarle si un entero es una instancia particular de un entero. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Solo debe importarle cu&amp;aacute;l es el valor de esa instancia, y usar&amp;iacute;a los operadores de comparaci&amp;oacute;n normales para eso, es decir &lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="97d95eb23e9f053a880a77b9c304e7de1a6d27b6" translate="yes" xml:space="preserve">
          <source>But perhaps we should be glad that there is not a new separate instance in memory every time we state a value equals 256.</source>
          <target state="translated">Pero tal vez deberíamos alegrarnos de que no haya una nueva instancia separada en la memoria cada vez que declaramos un valor igual a 256.</target>
        </trans-unit>
        <trans-unit id="66e03f31a35fe5f516dc8034caa56da5fbef4b0a" translate="yes" xml:space="preserve">
          <source>But, &lt;code&gt;257 is 257&lt;/code&gt;? What's up?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero, &amp;iquest; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;257 is 257&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Qu&amp;eacute; pasa?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="16c6357482bd5ce312fd0200c5aca0aae52a60c2" translate="yes" xml:space="preserve">
          <source>But, when are they allocated??</source>
          <target state="translated">Pero,¿cuándo se asignan?</target>
        </trans-unit>
        <trans-unit id="075062f6c2bf8a5d3e42c8a089bc3207f63ec450" translate="yes" xml:space="preserve">
          <source>By the way, &lt;a href=&quot;http://en.wikipedia.org/wiki/NumPy&quot;&gt;NumPy&lt;/a&gt; will produce separate instances of low numbers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por cierto, &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/NumPy&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NumPy&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; producir&amp;aacute; instancias separadas de n&amp;uacute;meros bajos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9539ebb34dc539844dff1e692cd05704a9ed4e8a" translate="yes" xml:space="preserve">
          <source>Check out the source to read the loop body!</source>
          <target state="translated">¡Comprueba la fuente para leer el cuerpo del bucle!</target>
        </trans-unit>
        <trans-unit id="4fb54a20f8fab9486c182539c4feb318d18d227f" translate="yes" xml:space="preserve">
          <source>Comparisons to singletons like &lt;code&gt;None&lt;/code&gt; should always be done with &lt;code&gt;is&lt;/code&gt; or
  &lt;code&gt;is not&lt;/code&gt;, never the equality operators.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las comparaciones con singletons como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;None&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; siempre deben hacerse con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is not&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , nunca con los operadores de igualdad.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bef021192b260b14d27264a1d4c939f50d6b1d1e" translate="yes" xml:space="preserve">
          <source>Do not write code that assumes two equal but separately-created immutable values are distinct (don't use &lt;code&gt;x is not y&lt;/code&gt;, use &lt;code&gt;x != y&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No escriba c&amp;oacute;digo que suponga que dos valores inmutables iguales pero creados por separado son distintos (no use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x is not y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x != y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5777b8c70fa1acedf03ef33942cc347128cd9ffa" translate="yes" xml:space="preserve">
          <source>Do not write code that assumes two equal but separately-created immutable values are identical (don't use &lt;code&gt;x is y&lt;/code&gt;, use &lt;code&gt;x == y&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No escriba c&amp;oacute;digo que suponga que dos valores inmutables iguales pero creados por separado son id&amp;eacute;nticos (no use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x is y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x == y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed560bafd90e01f11e33150257fd88f37dc6f579" translate="yes" xml:space="preserve">
          <source>Don't know about you but I see this and think: &lt;em&gt;Let's find that array!&lt;/em&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No s&amp;eacute; sobre ti, pero veo esto y pienso: &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iexcl;encontremos esa matriz!&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="49c014f16006f023aade3279fee6eb3bc11567ea" translate="yes" xml:space="preserve">
          <source>During complilation of this statement, CPython will see that you have two matching literals and will use the same &lt;code&gt;PyLongObject&lt;/code&gt; representing &lt;code&gt;257&lt;/code&gt;. You can see this if you do the compilation yourself and examine its contents:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Durante la compilaci&amp;oacute;n de esta declaraci&amp;oacute;n, CPython ver&amp;aacute; que tiene dos literales coincidentes y usar&amp;aacute; el mismo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;PyLongObject&lt;/code&gt; que&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; representa &lt;/font&gt;&lt;/font&gt; &lt;code&gt;257&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede ver esto si hace la compilaci&amp;oacute;n usted mismo y examina su contenido:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b32ef340ea4702fd5f41dbe4001671d76174ef71" translate="yes" xml:space="preserve">
          <source>Explanation</source>
          <target state="translated">Explanation</target>
        </trans-unit>
        <trans-unit id="72aaef6df9487030c3c92b755d874758273c11c1" translate="yes" xml:space="preserve">
          <source>First, what does &lt;code&gt;is&lt;/code&gt; do? It is a comparison operator. From the &lt;a href=&quot;https://docs.python.org/2/reference/expressions.html#not-in&quot;&gt;documentation&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Primero, &amp;iquest;qu&amp;eacute; hace &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; hacer? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es un operador de comparaci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De la &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/reference/expressions.html#not-in&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;documentaci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4733ac4c8d05bf5ffc65a9b02bf2a40d5df3a644" translate="yes" xml:space="preserve">
          <source>For immutable value objects, like ints, strings or datetimes, object identity is not especially useful. It's better to think about equality. Identity is essentially an implementation detail for value objects - since they're immutable, there's no effective difference between having multiple refs to the same object or multiple objects.</source>
          <target state="translated">Para los objetos de valor inmutable,como ints,cadenas o fechas,la identidad del objeto no es especialmente útil.Es mejor pensar en la igualdad.La identidad es esencialmente un detalle de implementación para los objetos de valor-ya que son inmutables,no hay diferencia efectiva entre tener múltiples referencias al mismo objeto o a múltiples objetos.</target>
        </trans-unit>
        <trans-unit id="cba50fd60be45fbcdb44b6e9a9d66f7f5c706e84" translate="yes" xml:space="preserve">
          <source>For one thing, there are some other pre-created values, such as the empty &lt;code&gt;tuple&lt;/code&gt;, &lt;code&gt;str&lt;/code&gt;, and &lt;code&gt;bytes&lt;/code&gt;, and some short strings (in CPython 3.6, it's the 256 single-character Latin-1 strings). For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por un lado, hay algunos otros valores creados previamente, como la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; vac&amp;iacute;a &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y algunas cadenas cortas (en CPython 3.6, son las 256 cadenas Latin-1 de un solo car&amp;aacute;cter). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b93a78d2063253b791062e536fbcf3c506c7e8f" translate="yes" xml:space="preserve">
          <source>From the &lt;a href=&quot;https://docs.python.org/library/functions.html#id&quot;&gt;documentation&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De la &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/library/functions.html#id&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;documentaci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20f1962ed548d5a4e5a85c77e6163b6dd07229c0" translate="yes" xml:space="preserve">
          <source>Greg Hewgill (OP) made one clarifying comment &quot;My goal is to compare object identity, rather than equality of value. Except for numbers, where I want to treat object identity the same as equality of value.&quot;</source>
          <target state="translated">Greg Hewgill (OP)hizo un comentario aclaratorio:&quot;Mi objetivo es comparar la identidad del objeto,más que la igualdad de valor.Excepto en los números,donde quiero tratar la identidad de objeto igual que la igualdad de valor&quot;.</target>
        </trans-unit>
        <trans-unit id="9520edcc756ac36c651c3dd60aa89decca7c632a" translate="yes" xml:space="preserve">
          <source>Here's what I found in the Python 2 documentation, &lt;a href=&quot;https://docs.python.org/2/c-api/int.html&quot;&gt;&quot;Plain Integer Objects&quot;&lt;/a&gt; (It's the same for &lt;a href=&quot;https://docs.python.org/3/c-api/long.html&quot;&gt;Python 3&lt;/a&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto es lo que encontr&amp;eacute; en la documentaci&amp;oacute;n de Python 2, &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/c-api/int.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;Objetos enteros simples&quot;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (es lo mismo para &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/c-api/long.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 3&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7633b56032467c98e3952b15959b9bc41571b808" translate="yes" xml:space="preserve">
          <source>I am using Python 2.5.2. Trying some different versions of Python, it appears that Python 2.3.3 shows the above behaviour between 99 and 100.</source>
          <target state="translated">Estoy usando Python 2.5.2.Probando algunas versiones diferentes de Python,parece que Python 2.3.3 muestra el comportamiento anterior entre 99 y 100.</target>
        </trans-unit>
        <trans-unit id="bf1bbe0998ecfbccd8f34580ebb282b05c3eba6e" translate="yes" xml:space="preserve">
          <source>I don't actually know an answer to this variant of the question. I suppose one could theoretically use ctypes to call &lt;code&gt;PyNumber_Check&lt;/code&gt;, but even that function &lt;a href=&quot;http://mail.python.org/pipermail/python-dev/2002-November/030237.html&quot;&gt;has been debated&lt;/a&gt;, and it's certainly not portable. We'll just have to be less particular about what we test for now.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En realidad no s&amp;eacute; una respuesta a esta variante de la pregunta. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Supongo que uno podr&amp;iacute;a usar te&amp;oacute;ricamente ctypes para llamar a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;PyNumber_Check&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero incluso esa funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://mail.python.org/pipermail/python-dev/2002-November/030237.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se ha debatido&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y ciertamente no es port&amp;aacute;til. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tendremos que ser menos particulares sobre lo que probamos ahora.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c7fde5b1be5df2cc60e919d243f79f64499af2e9" translate="yes" xml:space="preserve">
          <source>I hope my explanation has made you &lt;em&gt;C&lt;/em&gt; things clearly now (pun obviously intented).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Espero que mi explicaci&amp;oacute;n te haya &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aclarado las&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cosas ahora (juego de palabras obviamente intencionado).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2bf1ba0f7bc61d56c0afc241fb28b1a06aec1cfa" translate="yes" xml:space="preserve">
          <source>I think your hypotheses is correct. Experiment with &lt;code&gt;id&lt;/code&gt; (identity of object):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Creo que tus hip&amp;oacute;tesis son correctas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Experimente con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (identidad del objeto):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2989e4329462383daa6dcd09e8a4487363cde76c" translate="yes" xml:space="preserve">
          <source>If you haven't fiddled with the C code implementing CPython &lt;em&gt;you should&lt;/em&gt;; everything is pretty organized and readable. For our case, we need to look in the &lt;a href=&quot;https://hg.python.org/cpython/file/d489394a73de/Objects/&quot;&gt;&lt;code&gt;Objects&lt;/code&gt; subdirectory&lt;/a&gt; of the &lt;a href=&quot;https://hg.python.org/cpython/file/tip&quot;&gt;main source code directory tree&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si no ha jugado con el c&amp;oacute;digo C que implementa CPython &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, deber&amp;iacute;a hacerlo&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;todo es bastante organizado y legible. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para nuestro caso, debemos buscar en el &lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/d489394a73de/Objects/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;subdirectorio &lt;/font&gt;&lt;/a&gt;&lt;/font&gt; &lt;code&gt;Objects&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; del &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;aacute;rbol de directorios del c&amp;oacute;digo fuente principal&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="537f423d61e77546573c451ff8a9476446add0aa" translate="yes" xml:space="preserve">
          <source>In CPython, the &lt;strong&gt;C-API&lt;/strong&gt; function that handles creating a new &lt;code&gt;int&lt;/code&gt; object is &lt;a href=&quot;https://docs.python.org/3/c-api/long.html#c.PyLong_FromLong&quot;&gt;&lt;code&gt;PyLong_FromLong(long v)&lt;/code&gt;&lt;/a&gt;. The description for this function is:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En CPython, la funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C-API&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que maneja la creaci&amp;oacute;n de un nuevo &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/c-api/long.html#c.PyLong_FromLong&quot;&gt; &lt;code&gt;PyLong_FromLong(long v)&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La descripci&amp;oacute;n de esta funci&amp;oacute;n es:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8d327fdbf38dbb5e18ce4c7e07d18a8f571e859d" translate="yes" xml:space="preserve">
          <source>In summary - let me emphasize: &lt;strong&gt;&lt;em&gt;Do not use &lt;code&gt;is&lt;/code&gt; to compare integers.&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En resumen, perm&amp;iacute;tanme enfatizar: &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para comparar enteros.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c38fd56c4fdb78cb02380e1ab7bd3e9ca151e1b2" translate="yes" xml:space="preserve">
          <source>In the end, this issue stems from Python not originally having a type tree with predicates like &lt;a href=&quot;http://en.wikipedia.org/wiki/Scheme_%28programming_language%29&quot;&gt;Scheme's&lt;/a&gt;&lt;code&gt;number?&lt;/code&gt;, or &lt;a href=&quot;http://en.wikipedia.org/wiki/Haskell_%28programming_language%29&quot;&gt;Haskell's&lt;/a&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Type_class&quot;&gt;type class&lt;/a&gt;&lt;a href=&quot;http://www.haskell.org/ghc/docs/7.4-latest/html/libraries/base-4.5.1.0/Prelude.html#t:Num&quot;&gt;Num&lt;/a&gt;. &lt;code&gt;is&lt;/code&gt; checks object identity, not value equality. PHP has a colorful history as well, where &lt;code&gt;===&lt;/code&gt; apparently behaves as &lt;code&gt;is&lt;/code&gt; only on objects &lt;a href=&quot;http://www.php.net/manual/en/language.operators.comparison.php&quot;&gt;in PHP5, but not PHP4&lt;/a&gt;. Such are the growing pains of moving across languages (including versions of one).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Al final, este problema surge de que Python originalmente no ten&amp;iacute;a un &amp;aacute;rbol de tipos con predicados como &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Scheme_%28programming_language%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;el &lt;/font&gt;&lt;/font&gt;&lt;/a&gt; &lt;code&gt;number?&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;de Scheme &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, o &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Haskell_%28programming_language%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Type_class&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;clase de tipo &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;de Haskell &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.haskell.org/ghc/docs/7.4-latest/html/libraries/base-4.5.1.0/Prelude.html#t:Num&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Num&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; un control de identidad de objeto, no el valor de la igualdad. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP tiene una historia colorida, as&amp;iacute;, donde &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; aparentemente se comporta como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; s&amp;oacute;lo de objetos &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.php.net/manual/en/language.operators.comparison.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en PHP5, pero no PHP4&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tales son los crecientes dolores de moverse a trav&amp;eacute;s de los idiomas (incluidas las versiones de uno).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0a9540f293e49d567c14e8e1c59c886e0fe58f9" translate="yes" xml:space="preserve">
          <source>Instead, use &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; to compare for equality and inequality, respectively. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En su lugar, use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;!=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Para comparar la igualdad y la desigualdad, respectivamente. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="70e475fcee8450b0a26129f13b286a70f00f2415" translate="yes" xml:space="preserve">
          <source>It also happens with strings:</source>
          <target state="translated">También sucede con las cuerdas:</target>
        </trans-unit>
        <trans-unit id="d330cfdd1cef99b1885c3e778fb651e9d68f3822" translate="yes" xml:space="preserve">
          <source>It appears that numbers &lt;code&gt;&amp;lt;= 255&lt;/code&gt; are treated as literals and anything above is treated differently!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iexcl;Parece que los n&amp;uacute;meros &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;= 255&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se tratan como literales y todo lo anterior se trata de manera diferente!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e0e6d9d4ad1d30892d62940222ae6d9456aace7" translate="yes" xml:space="preserve">
          <source>It can be worth learning the rules for one specific Python for the fun of it. But it's not worth relying on them in your code. The only safe rule is:</source>
          <target state="translated">Puede valer la pena aprender las reglas de una pitón específica para divertirse.Pero no vale la pena confiar en ellas en tu código.La única regla segura es:</target>
        </trans-unit>
        <trans-unit id="5fb810233f7fc63d4d3223263f62bf30b9080ca1" translate="yes" xml:space="preserve">
          <source>It depends on whether you're looking to see if 2 things are equal, or the same object.</source>
          <target state="translated">Depende de si estás mirando para ver si 2 cosas son iguales,o el mismo objeto.</target>
        </trans-unit>
        <trans-unit id="a0aa15a254986085a44ed811e3ee1a9f43a5d480" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;not&lt;/em&gt; an expected result. Why is it expected? It only means that the integers valued at &lt;code&gt;256&lt;/code&gt; referenced by both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are the same instance of integer. Integers are immutable in Python, thus they cannot change. This should have no impact on any code. It should not be expected. It is merely an implementation detail.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; un resultado esperado. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Por qu&amp;eacute; se espera? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Solo significa que los enteros valorados en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;256&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; referenciados por &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; son la misma instancia de entero. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los enteros son inmutables en Python, por lo tanto no pueden cambiar. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto no deber&amp;iacute;a tener impacto en ning&amp;uacute;n c&amp;oacute;digo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No debe esperarse. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es simplemente un detalle de implementaci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f98f6e25f80d9a92c1ddec978b96a072d0718543" translate="yes" xml:space="preserve">
          <source>It is better to use &lt;code&gt;==&lt;/code&gt; for that purpose.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es mejor usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para ese prop&amp;oacute;sito.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="39a018c9a327559044eb93b83cfa631890fe5a9b" translate="yes" xml:space="preserve">
          <source>It might be even better if CPython could do this globally, if it could do so cheaply (as there would a cost in the lookup), perhaps another implementation might.</source>
          <target state="translated">Sería aún mejor si CPython pudiera hacer esto globalmente,si pudiera hacerlo de manera barata (como habría un costo en la búsqueda),tal vez otra implementación podría hacerlo.</target>
        </trans-unit>
        <trans-unit id="2934f14fba9d6d3632870dc31aab2cd51063439c" translate="yes" xml:space="preserve">
          <source>Looks like we now have two separate instances of integers with the value of &lt;code&gt;257&lt;/code&gt; in memory. Since integers are immutable, this wastes memory. Let's hope we're not wasting a lot of it. We're probably not. But this behavior is not guaranteed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Parece que ahora tenemos dos instancias separadas de enteros con el valor de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;257&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en la memoria. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como los enteros son inmutables, esto desperdicia memoria. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esperemos que no estemos desperdiciando mucho. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Probablemente no lo estemos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero este comportamiento no est&amp;aacute; garantizado.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="27d9b42564e11c6f850edfd6f695a59f49f4ae4c" translate="yes" xml:space="preserve">
          <source>Next let's look at &lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l37&quot;&gt;&lt;code&gt;get_small_int&lt;/code&gt; in all its glory&lt;/a&gt; (well, we'll just look at its body because that's where the interesting things are):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A continuaci&amp;oacute;n, veamos &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l37&quot;&gt; &lt;code&gt;get_small_int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en todo su esplendor&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (bueno, solo veremos su cuerpo porque ah&amp;iacute; es donde est&amp;aacute;n las cosas interesantes):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a04214a82c1046176055acabc88aef3f66d91e4" translate="yes" xml:space="preserve">
          <source>Note that the fact that the id of an object in CPython (the reference implementation of Python) is the location in memory is an implementation detail. Other implementations of Python (such as Jython or IronPython) could easily have a different implementation for &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que el hecho de que la identificaci&amp;oacute;n de un objeto en CPython (la implementaci&amp;oacute;n de referencia de Python) es la ubicaci&amp;oacute;n en la memoria es un detalle de implementaci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Otras implementaciones de Python (como Jython o IronPython) podr&amp;iacute;an tener f&amp;aacute;cilmente una implementaci&amp;oacute;n diferente para &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8c26b8d49e5d32ac527e4aea2bb981672da514ba" translate="yes" xml:space="preserve">
          <source>Now everything seems fine.</source>
          <target state="translated">Ahora todo parece estar bien.</target>
        </trans-unit>
        <trans-unit id="bfe09b0d0f357b91654290934773a91647c00166" translate="yes" xml:space="preserve">
          <source>Now that's unexpected.</source>
          <target state="translated">Eso sí que es inesperado.</target>
        </trans-unit>
        <trans-unit id="f34502290825f879ef0a903691b3244a342cdb53" translate="yes" xml:space="preserve">
          <source>Now, we're no C &lt;em&gt;master-code-haxxorz&lt;/em&gt; but we're also not dumb, we can see that &lt;code&gt;CHECK_SMALL_INT(ival);&lt;/code&gt; peeking at us all seductively; we can understand it has something to do with this. &lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l51&quot;&gt;Let's check it out:&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora, no somos C &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;master-code-haxxorz&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; pero tampoco somos tontos, podemos ver que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;CHECK_SMALL_INT(ival);&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nos mira a todos seductoramente; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Podemos entender que tiene algo que ver con esto. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l51&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vamos a ver:&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54a15d09f086e70ac3bd6806a4576b2e3ee8cf95" translate="yes" xml:space="preserve">
          <source>Obviously, CPython doesn't come with a pre-created &lt;code&gt;float&lt;/code&gt; value for &lt;code&gt;42.23e100&lt;/code&gt;. So, what's going on here?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Obviamente, CPython no viene con un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;valor &lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; pre-creado &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;para &lt;/font&gt;&lt;/font&gt; &lt;code&gt;42.23e100&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, &amp;iquest;qu&amp;eacute; est&amp;aacute; pasando aqu&amp;iacute;?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d3893852a37e6362ba755d3935741b21f6943faa" translate="yes" xml:space="preserve">
          <source>Okay, declare a &lt;code&gt;PyObject&lt;/code&gt;, assert that the previous condition holds and execute the assignment:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bien, declare un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;PyObject&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , afirme que la condici&amp;oacute;n anterior se cumple y ejecute la asignaci&amp;oacute;n:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0529ee68c4de392040437e76423071979840b586" translate="yes" xml:space="preserve">
          <source>On the other hand, it is limited to the &lt;code&gt;str&lt;/code&gt; type, and to strings of &lt;a href=&quot;https://github.com/python/cpython/blob/master/Include/unicodeobject.h#L197&quot;&gt;internal storage kind &quot;ascii compact&quot;, &quot;compact&quot;, or &quot;legacy ready&quot;&lt;/a&gt;, and in many cases only &quot;ascii compact&quot; will get interned.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por otro lado, se limita al &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tipo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y a las cadenas de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/python/cpython/blob/master/Include/unicodeobject.h#L197&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tipo de almacenamiento interno &quot;ascii compact&quot;, &quot;compact&quot; o &quot;legacy ready&quot;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y en muchos casos solo se internar&amp;aacute; &quot;ascii compact&quot;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="af727a9e60200c0ec56d017c5f22b2316c0eba6b" translate="yes" xml:space="preserve">
          <source>Or, in other words, only use &lt;code&gt;is&lt;/code&gt; to test for the documented singletons (like &lt;code&gt;None&lt;/code&gt;) or that are only created in one place in the code (like the &lt;code&gt;_sentinel = object()&lt;/code&gt; idiom).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;O, en otras palabras, s&amp;oacute;lo el uso &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a prueba para los hijos &amp;uacute;nicos documentados (como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;None&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) o que s&amp;oacute;lo se crean en un solo lugar en el c&amp;oacute;digo (como el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;_sentinel = object()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; modismo).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f886ab250b071a41757b46631a700b0bdb639e3c" translate="yes" xml:space="preserve">
          <source>PHP apparently allows the same thing for &quot;built-in&quot; classes (which I take to mean implemented at C level, not in PHP). A slightly less absurd use might be a timer object, which has a different value every time it's used as a number. Quite why you'd want to emulate Visual Basic's &lt;code&gt;Now&lt;/code&gt; instead of showing that it is an evaluation with &lt;code&gt;time.time()&lt;/code&gt; I don't know.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Al parecer, PHP permite lo mismo para las clases &quot;integradas&quot; (lo que entiendo es que se implementa en el nivel C, no en PHP). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un uso un poco menos absurdo podr&amp;iacute;a ser un objeto temporizador, que tiene un valor diferente cada vez que se usa como un n&amp;uacute;mero. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por qu&amp;eacute; querr&amp;iacute;a emular &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Now&lt;/code&gt; de&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Visual Basic en &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lugar de mostrar que es una evaluaci&amp;oacute;n con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;time.time()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; No lo s&amp;eacute;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd75e6abb03749de2f2240c104b07f9971286711" translate="yes" xml:space="preserve">
          <source>Put that in a function, &lt;code&gt;dis&lt;/code&gt; it, and look at the &lt;code&gt;co_consts&lt;/code&gt;&amp;mdash;there's a &lt;code&gt;1&lt;/code&gt; and a &lt;code&gt;2&lt;/code&gt;, two &lt;code&gt;(1, 2)&lt;/code&gt; tuples that share the same &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt; but are not identical, and a &lt;code&gt;((1, 2), (1, 2))&lt;/code&gt; tuple that has the two distinct equal tuples.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puesto que en una funci&amp;oacute;n, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;dis&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y vistazo a las &lt;/font&gt;&lt;/font&gt; &lt;code&gt;co_consts&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -hay un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , dos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(1, 2)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tuplas que comparten el mismo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero no son id&amp;eacute;nticos, y una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;((1, 2), (1, 2))&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tupla que tiene las dos tuplas iguales distintas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="32bfc78671ed84f6edb1caed4a60f13e77f4eda9" translate="yes" xml:space="preserve">
          <source>Python's &amp;ldquo;is&amp;rdquo; operator behaves unexpectedly with integers?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;El operador &quot;es&quot; de Python se comporta inesperadamente con enteros?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c6561c6ba8b07aea6a89505ee401b354c197b0ce" translate="yes" xml:space="preserve">
          <source>Since the reference refers to the same object, issuing &lt;code&gt;id()&lt;/code&gt; directly or checking for identity with &lt;code&gt;is&lt;/code&gt; on it will return exactly the same thing.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Dado que la referencia se refiere al mismo objeto, emitir &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; directamente o verificar la identidad con &amp;eacute;l &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; activado, devolver&amp;aacute; exactamente lo mismo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eff95496609f695b73e468f3adfa7f04ee1c17d5" translate="yes" xml:space="preserve">
          <source>So &lt;code&gt;is&lt;/code&gt; will return &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;As&amp;iacute; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; devolver&amp;aacute; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;True&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d75f158b3b57dbe1bbac88f5dac9d039d0669f3" translate="yes" xml:space="preserve">
          <source>So it's a macro that calls function &lt;code&gt;get_small_int&lt;/code&gt; if the value &lt;code&gt;ival&lt;/code&gt; satisfies the condition:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces es una macro que llama a la funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;get_small_int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; si el valor &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ival&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; satisface la condici&amp;oacute;n:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b802f6ab1cf3e86e9b09d81f8d990898448d638b" translate="yes" xml:space="preserve">
          <source>So our condition is &lt;code&gt;if (-5 &amp;lt;= ival &amp;amp;&amp;amp; ival &amp;lt; 257)&lt;/code&gt; call &lt;code&gt;get_small_int&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, nuestra condici&amp;oacute;n es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;if (-5 &amp;lt;= ival &amp;amp;&amp;amp; ival &amp;lt; 257)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; llama a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;get_small_int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="354c4256823bad2a2de81af42cb46affe52cc7d3" translate="yes" xml:space="preserve">
          <source>So what are &lt;code&gt;NSMALLNEGINTS&lt;/code&gt; and &lt;code&gt;NSMALLPOSINTS&lt;/code&gt;? Macros! &lt;em&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l12&quot;&gt;Here they are&lt;/a&gt;&lt;/em&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, &amp;iquest;qu&amp;eacute; son &lt;/font&gt;&lt;/font&gt; &lt;code&gt;NSMALLNEGINTS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;NSMALLPOSINTS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Macros! &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l12&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; est&amp;aacute;n&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c4600849b6ae8384087ac8c6be8eaed48c5daa8d" translate="yes" xml:space="preserve">
          <source>So what is the use-case for &lt;code&gt;is&lt;/code&gt;?  &lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/#programming-recommendations&quot;&gt;PEP8 describes&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, &amp;iquest;cu&amp;aacute;l es el uso de los casos para &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ? &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/#programming-recommendations&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PEP8 describe&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b204a51feaa721b5f3bc6a5e541c3e65103bdde" translate="yes" xml:space="preserve">
          <source>So yup, this is our guy. When you want to create a new &lt;code&gt;int&lt;/code&gt; in the range &lt;code&gt;[NSMALLNEGINTS, NSMALLPOSINTS)&lt;/code&gt; you'll just get back a reference to an already existing object that has been preallocated.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;As&amp;iacute; que s&amp;iacute;, este es nuestro chico. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando desee crear un nuevo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en el rango &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[NSMALLNEGINTS, NSMALLPOSINTS)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , simplemente obtendr&amp;aacute; una referencia a un objeto ya existente que ha sido previamente asignado.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e0981c32903ed4584fbc014f1ae45129beb4646b" translate="yes" xml:space="preserve">
          <source>Take a look at this:</source>
          <target state="translated">Echa un vistazo a esto:</target>
        </trans-unit>
        <trans-unit id="9d3332f426bd312f89cc19a8f53fa1b95f7d3d4d" translate="yes" xml:space="preserve">
          <source>That's expected too.</source>
          <target state="translated">Eso también se espera.</target>
        </trans-unit>
        <trans-unit id="89dbf8d1fb5c6efbe530bd45daa4100911146dfc" translate="yes" xml:space="preserve">
          <source>The CPython compiler will merge constant values of some known-immutable types like &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;str&lt;/code&gt;, &lt;code&gt;bytes&lt;/code&gt;,  in the same compilation unit. For a module, the whole module is a compilation unit, but at the interactive interpreter, each statement is a separate compilation unit. Since &lt;code&gt;c&lt;/code&gt; and &lt;code&gt;d&lt;/code&gt; are defined in separate statements, their values aren't merged. Since &lt;code&gt;e&lt;/code&gt; and &lt;code&gt;f&lt;/code&gt; are defined in the same statement, their values are merged.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El compilador CPython fusionar&amp;aacute; valores constantes de algunos tipos inmutables conocidos como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , en la misma unidad de compilaci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para un m&amp;oacute;dulo, todo el m&amp;oacute;dulo es una unidad de compilaci&amp;oacute;n, pero en el int&amp;eacute;rprete interactivo, cada declaraci&amp;oacute;n es una unidad de compilaci&amp;oacute;n separada. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Desde &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;d&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se definen en declaraciones por separado, sus valores no se fusionan. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;e&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se definen en la misma declaraci&amp;oacute;n, sus valores se fusionan.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b375759c7ec6ff91b19c664f1268608e7cc391e" translate="yes" xml:space="preserve">
          <source>The Question</source>
          <target state="translated">La pregunta</target>
        </trans-unit>
        <trans-unit id="670c799e05a171ede0c4dd77aa348c5565700111" translate="yes" xml:space="preserve">
          <source>The compiler now produces a &lt;a href=&quot;https://docs.python.org/3.8/library/exceptions.html#SyntaxWarning&quot;&gt;SyntaxWarning&lt;/a&gt; when identity checks (&lt;code&gt;is&lt;/code&gt; and
  &lt;code&gt;is not&lt;/code&gt;) are used with certain types of literals (e.g. strings, ints).
  These can often work by accident in CPython, but are not guaranteed by
  the language spec. The warning advises users to use equality tests (&lt;code&gt;==&lt;/code&gt;
  and &lt;code&gt;!=&lt;/code&gt;) instead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El compilador ahora produce un &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3.8/library/exceptions.html#SyntaxWarning&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SyntaxWarning&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cuando se &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;utilizan&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; comprobaciones de identidad ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is not&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) con ciertos tipos de literales (por ejemplo, cadenas, ints). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Estos a menudo pueden funcionar por accidente en CPython, pero no est&amp;aacute;n garantizados por la especificaci&amp;oacute;n del idioma. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La advertencia aconseja a los usuarios que utilicen pruebas de igualdad ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;!=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) En su lugar.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1ea84ce07bd5132b3844c115d124c91532803a45" translate="yes" xml:space="preserve">
          <source>The current implementation keeps an
  array of integer objects for all
  integers between -5 and 256, when you
  create an int in that range you
  actually just get back a reference to
  the existing object. So it should be
  possible to change the value of 1. I
  suspect the behaviour of Python in
  this case is undefined. :-)</source>
          <target state="translated">La implementación actual mantiene un arreglo de objetos enteros para todos los enteros entre -5 y 256,cuando se crea un int en ese rango en realidad sólo se obtiene una referencia al objeto existente.Así que debería ser posible cambiar el valor de 1.Sospecho que el comportamiento de Python en este caso no está definido.:-)</target>
        </trans-unit>
        <trans-unit id="29e90c5bbad522679e9cff75399d3ab2231dc258" translate="yes" xml:space="preserve">
          <source>The operators &lt;code&gt;is&lt;/code&gt; and &lt;code&gt;is not&lt;/code&gt; test for object identity: &lt;code&gt;x is y&lt;/code&gt; is true
  if and only if x and y are the same object. &lt;code&gt;x is not y&lt;/code&gt; yields the
  inverse truth value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los operadores &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is not&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; prueban la identidad del objeto: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x is y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es verdadero si y solo si x e y son el mismo objeto. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x is not y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; produce el valor de verdad inverso.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31a9e950d0f64e017765a3426458ec2f105644eb" translate="yes" xml:space="preserve">
          <source>There's another issue that isn't pointed out in any of the existing answers. Python is allowed to merge any two immutable values, and pre-created small int values are not the only way this can happen. A Python implementation is never &lt;em&gt;guaranteed&lt;/em&gt; to do this, but they all do it for more than just small ints.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hay otro problema que no se se&amp;ntilde;ala en ninguna de las respuestas existentes. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python puede fusionar dos valores inmutables, y los valores int peque&amp;ntilde;os creados previamente no son la &amp;uacute;nica forma en que esto puede suceder. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nunca se &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;garantiza&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;una implementaci&amp;oacute;n de Python &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;haga esto, pero todos lo hacen por algo m&amp;aacute;s que peque&amp;ntilde;os ints.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="583901099c77110e0cb24f39eb25b6aae81ad94d" translate="yes" xml:space="preserve">
          <source>There's one more optimization that CPython does: string interning. Unlike compiler constant folding, this isn't restricted to source code literals:</source>
          <target state="translated">Hay una optimización más que hace CPython:internado de cuerda.A diferencia del plegado constante del compilador,esto no está restringido a los literales del código fuente:</target>
        </trans-unit>
        <trans-unit id="a027cbf441c889c70feaf96ab63365405fe9f43b" translate="yes" xml:space="preserve">
          <source>This can be a very fast check relative to say, checking if two very long strings are equal in value. But since it applies to the uniqueness of the object, we thus have limited use-cases for it. In fact, we mostly want to use it to check for &lt;code&gt;None&lt;/code&gt;, which is a singleton (a sole instance existing in one place in memory). We might create other singletons if there is potential to conflate them, which we might check with &lt;code&gt;is&lt;/code&gt;, but these are relatively rare. Here's an example (will work in Python 2 and 3) e.g.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto puede ser una verificaci&amp;oacute;n muy r&amp;aacute;pida en relaci&amp;oacute;n con decir, verificando si dos cadenas muy largas tienen el mismo valor. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero como se aplica a la unicidad del objeto, tenemos casos de uso limitados para &amp;eacute;l. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De hecho, en su mayor&amp;iacute;a queremos usarlo para verificar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;None&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que es un singleton (una &amp;uacute;nica instancia que existe en un lugar en la memoria). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Podr&amp;iacute;amos crear otros conjuntos unitarios si existe el potencial de combinar ellos, que podemos comprobar con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero estos son relativamente raros. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; hay un ejemplo (funcionar&amp;aacute; en Python 2 y 3) ej.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5736a7527bced364532363ef0b99dcec78a614b3" translate="yes" xml:space="preserve">
          <source>This is actually easier to explain, &lt;a href=&quot;https://stackoverflow.com/questions/34147515/is-operator-returns-different-results-on-integers&quot;&gt;and I have attempted to do so already&lt;/a&gt;; it's due to the fact that Python will execute this interactive statement as a single block:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto es realmente m&amp;aacute;s f&amp;aacute;cil de explicar, &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/34147515/is-operator-returns-different-results-on-integers&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;y ya he intentado hacerlo&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se debe al hecho de que Python ejecutar&amp;aacute; esta declaraci&amp;oacute;n interactiva como un solo bloque:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="40446b6e3805c68dd07e5e77bacfa2e0f640a8c0" translate="yes" xml:space="preserve">
          <source>This isn't behavior you should have any expectations about.</source>
          <target state="translated">Este no es un comportamiento del que debas tener ninguna expectativa.</target>
        </trans-unit>
        <trans-unit id="263db2012ac92a2151292e26bd7380de0b6aaea6" translate="yes" xml:space="preserve">
          <source>This would have yet another answer, as we have to categorize things as numbers or not, to select whether we compare with &lt;code&gt;==&lt;/code&gt; or &lt;code&gt;is&lt;/code&gt;. &lt;a href=&quot;http://en.wikipedia.org/wiki/CPython&quot;&gt;CPython&lt;/a&gt; defines the &lt;a href=&quot;http://docs.python.org/2/c-api/number.html&quot;&gt;number protocol&lt;/a&gt;, including PyNumber_Check, but this is not accessible from Python itself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto tendr&amp;iacute;a otra respuesta, ya que tenemos que clasificar las cosas como n&amp;uacute;meros o no, para seleccionar si comparamos con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/CPython&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPython&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; define el &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/2/c-api/number.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;protocolo de n&amp;uacute;mero&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , incluido PyNumber_Check, pero esto no es accesible desde Python.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43aebb53feffaeb360d08a4be1091214297bcc3b" translate="yes" xml:space="preserve">
          <source>To know this, you need to know the following.</source>
          <target state="translated">Para saber esto,necesitas saber lo siguiente.</target>
        </trans-unit>
        <trans-unit id="3bfeae23da5bf491706d2bc58548592ddf50393e" translate="yes" xml:space="preserve">
          <source>We could try to use &lt;code&gt;isinstance&lt;/code&gt; with all the number types we know of, but this would inevitably be incomplete. The types module contains a StringTypes list but no NumberTypes. Since Python 2.6, the built in number classes have a base class &lt;a href=&quot;https://docs.python.org/2/library/numbers.html#numbers.Number&quot;&gt;&lt;code&gt;numbers.Number&lt;/code&gt;&lt;/a&gt;, but it has the same problem:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Podr&amp;iacute;amos intentar usar esta &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isinstance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; con todos los tipos de n&amp;uacute;meros que conocemos, pero esto inevitablemente ser&amp;iacute;a incompleto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El m&amp;oacute;dulo de tipos contiene una lista de StringTypes pero no NumberTypes. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Desde Python 2.6, las clases de n&amp;uacute;meros incorporadas tienen un n&amp;uacute;mero de clase base &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/library/numbers.html#numbers.Number&quot;&gt; &lt;code&gt;numbers.Number&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; N&amp;uacute;mero &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, pero tiene el mismo problema:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3ff86b4a856c53f1719f261c2f51ff44fd8dfd22" translate="yes" xml:space="preserve">
          <source>Well, this looks like your particular implementation of Python is trying to be smart and not creating redundantly valued integers in memory unless it has to. You seem to indicate you are using the referent implementation of Python, which is CPython. Good for CPython.</source>
          <target state="translated">Bueno,parece que su implementación particular de Python está tratando de ser inteligente y no crear números enteros redundantes en la memoria a menos que tenga que hacerlo.Parece indicar que está usando la implementación referente de Python,que es CPython.Bueno para CPython.</target>
        </trans-unit>
        <trans-unit id="ea4def8e52a626d6b79b31589076963f02a32a23" translate="yes" xml:space="preserve">
          <source>What &lt;code&gt;is&lt;/code&gt; does</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; hace&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="88ce2bf65b6b5dfca6ce5a2bade2f6a84f488a72" translate="yes" xml:space="preserve">
          <source>When CPython does the operation, it's now just going to load the exact same object:</source>
          <target state="translated">Cuando CPython haga la operación,ahora va a cargar exactamente el mismo objeto:</target>
        </trans-unit>
        <trans-unit id="e52f46f155653a3c2a2e009ba12b0ccd1ff43ab6" translate="yes" xml:space="preserve">
          <source>Which prints:</source>
          <target state="translated">Que huellas:</target>
        </trans-unit>
        <trans-unit id="083aa69538f471398179051fbd0bac459c4c6d6e" translate="yes" xml:space="preserve">
          <source>Why does the following behave unexpectedly in Python?</source>
          <target state="translated">¿Por qué se comporta de forma inesperada en Python?</target>
        </trans-unit>
        <trans-unit id="b0fb91e86722cf49e94b70bee64200f9524ab922" translate="yes" xml:space="preserve">
          <source>Why would we want to use &lt;code&gt;is&lt;/code&gt; then?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Por qu&amp;eacute; querr&amp;iacute;amos usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; entonces?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a5dbcfbe429bfef2be3cb82f9c7e8a442a5563b" translate="yes" xml:space="preserve">
          <source>You ask, and state, the following question (with code):</source>
          <target state="translated">Haces,y declaras,la siguiente pregunta (con código):</target>
        </trans-unit>
        <trans-unit id="7a8a0f94fb85d4a56e931c1386aa8c512d5e9fa3" translate="yes" xml:space="preserve">
          <source>You can see what's going on by disassembling the bytecode. Try defining a function that does &lt;code&gt;e, f = 128, 128&lt;/code&gt; and then calling &lt;code&gt;dis.dis&lt;/code&gt; on it, and you'll see that there's a single constant value &lt;code&gt;(128, 128)&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede ver lo que est&amp;aacute; sucediendo desmontando el c&amp;oacute;digo de bytes. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Intente definir una funci&amp;oacute;n que haga &lt;/font&gt;&lt;/font&gt; &lt;code&gt;e, f = 128, 128&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y luego &lt;/font&gt;&lt;/font&gt; &lt;code&gt;dis.dis&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en ella, y ver&amp;aacute; que hay un &amp;uacute;nico valor constante &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(128, 128)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d118cc3fab20976a46fc7b009a620128f88605d" translate="yes" xml:space="preserve">
          <source>You may notice that the compiler has stored &lt;code&gt;128&lt;/code&gt; as a constant even though it's not actually used by the bytecode, which gives you an idea of how little optimization CPython's compiler does. Which means that (non-empty) tuples actually don't end up merged:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede notar que el compilador ha almacenado &lt;/font&gt;&lt;/font&gt; &lt;code&gt;128&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; como una constante a pesar de que el bytecode no lo utiliza realmente, lo que le da una idea de la poca optimizaci&amp;oacute;n que hace el compilador de CPython. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo que significa que las tuplas (no vac&amp;iacute;as) en realidad no terminan fusionadas:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24c5f4e4ff6ed911320dff759cb8f0190b9de7ce" translate="yes" xml:space="preserve">
          <source>You should use &lt;code&gt;==&lt;/code&gt; to compare equality of arbitrary objects. You can specify the behavior with the &lt;code&gt;__eq__&lt;/code&gt;, and &lt;code&gt;__ne__&lt;/code&gt; attributes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Debe usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para comparar la igualdad de objetos arbitrarios. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se puede especificar el comportamiento con el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__eq__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__ne__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; atributos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="841108c86e9fbb4edafbf1fc269ca06fbd9c2aa7" translate="yes" xml:space="preserve">
          <source>is the same as</source>
          <target state="translated">es la misma que</target>
        </trans-unit>
        <trans-unit id="acc613352f69a406f394f0ff07ee6e99b6e8ad73" translate="yes" xml:space="preserve">
          <source>“is” operator behaves unexpectedly with integers</source>
          <target state="translated">&quot;es&quot; el operador se comporta inesperadamente con los números enteros</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
