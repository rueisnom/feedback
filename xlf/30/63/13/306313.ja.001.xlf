<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/306313">
    <body>
      <group id="306313">
        <trans-unit id="8af8c074689165ea8fe36329441d2b10f2f1491a" translate="yes" xml:space="preserve">
          <source>(My italics)</source>
          <target state="translated">(私の斜体)</target>
        </trans-unit>
        <trans-unit id="ca756f1eaabeb116dcd7b4a1b0090bfb24d6500b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/PHP&quot;&gt;PHP's&lt;/a&gt;&lt;code&gt;===&lt;/code&gt; operator, on the other hand, is described as checking equality and type: &lt;code&gt;x == y and type(x) == type(y)&lt;/code&gt; as per Paulo Freitas' comment. This will suffice for common numbers, but differ from &lt;code&gt;is&lt;/code&gt; for classes that define &lt;code&gt;__eq__&lt;/code&gt; in an absurd manner:</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/PHP&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一方、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHPの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;演算子は、等価性とタイプをチェックするものとして記述されています&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。PauloFreitasのコメントによる&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x == y and type(x) == type(y)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは一般的な数値には十分です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、不合理な方法で&lt;/font&gt; &lt;code&gt;__eq__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を定義するクラスの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;異なります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7eb0e738de5256d34700b3cb51c68bc4bf26d348" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/whatsnew/3.8.html#changes-in-python-behavior&quot;&gt;What&amp;rsquo;s New In Python 3.8: Changes in Python behavior&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/whatsnew/3.8.html#changes-in-python-behavior&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 3.8の新機能：Pythonの動作の変更&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0cf22729aea1b77b4bbafd7e232e2ac901c67c28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l5343&quot;&gt;During initialization in &lt;code&gt;_PyLong_Init&lt;/code&gt;&lt;/a&gt; Python will gladly enter in a for loop do do this for you:</source>
          <target state="translated">&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l5343&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;_PyLong_Init&lt;/code&gt; での&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;初期化中に、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Pythonは喜んでforループに入り、次のようにします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4727386de597831e6de13525e011f3b1787ca9aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PyLong_FromLong&lt;/code&gt; deals with &lt;code&gt;long&lt;/code&gt; objects so it shouldn't be hard to deduce that we need to peek inside &lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c&quot;&gt;&lt;code&gt;longobject.c&lt;/code&gt;&lt;/a&gt;. After looking inside you might think things are chaotic; they are, but fear not, the function we're looking for is chilling at &lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l230&quot;&gt;line 230&lt;/a&gt; waiting for us to check it out. It's a smallish function so the main body (excluding declarations) is easily pasted here:</source>
          <target state="translated">&lt;code&gt;PyLong_FromLong&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;long&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;扱う&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ので、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c&quot;&gt; &lt;code&gt;longobject.c&lt;/code&gt; の&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;中を覗く必要があると推測するのは難しくありません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;中を見ると、混乱していると思うかもしれません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;彼らはそうではありますが、恐れていません。私たちが探している機能は、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l230&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;230行&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;目で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、チェックアウトを待つことです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは小さめの関数なので、本体（宣言を除く）は簡単にここに貼り付けられます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0ca2c8087b11e6237f285ecbd7547f0cb9b75504" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is&lt;/code&gt; checks that the &lt;code&gt;id&lt;/code&gt; of two objects are the same. In CPython, the &lt;code&gt;id&lt;/code&gt; is the location in memory, but it could be some other uniquely identifying number in another implementation. To restate this with code:</source>
          <target state="translated">&lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことをチェック&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;二つのオブジェクトのは同じです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPythonでは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はメモリ内の場所ですが、別の実装では他の一意に識別する番号になる場合があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これをコードで言い換えると：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="775b7146689c1bccfb65c237ebaa0dc770710235" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is&lt;/code&gt; checks to see if they are the same object, not just equal. The small ints are probably pointing to the same memory location for space efficiency</source>
          <target state="translated">&lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;等しいだけでなく、同じオブジェクトで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ある&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;かどうかを確認するチェックです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;小さな整数はおそらくスペース効率のために同じメモリ位置を指しています&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd37d72689750907b7c77b7008832ae8e797a76e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is&lt;/code&gt;&lt;em&gt;is&lt;/em&gt; the identity equality operator (functioning like &lt;code&gt;id(a) == id(b)&lt;/code&gt;); it's just that two equal numbers aren't necessarily the same object. For performance reasons some small integers happen to be &lt;a href=&quot;http://en.wikipedia.org/wiki/Memoization&quot;&gt;memoized&lt;/a&gt; so they will tend to be the same (this can be done since they are immutable).</source>
          <target state="translated">&lt;code&gt;is&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;is&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; the identity equality operator（機能は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id(a) == id(b)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2つの等しい数が必ずしも同じオブジェクトであるとは限らないというだけです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;パフォーマンス上の理由から、いくつかの小さな整数は&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Memoization&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;偶然メモ化&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;される&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、同じになる傾向があります（これは不変なので可能です）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4072200f3b57b424ac3d8cb1802351446cd2d1b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;small_ints&lt;/code&gt; looks a lot like that array we've been searching for, and it is! &lt;em&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l25&quot;&gt;We could've just read the damn documentation and we would've know all along!&lt;/a&gt;&lt;/em&gt;:</source>
          <target state="translated">&lt;code&gt;small_ints&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、私たちが探していた配列とよく似ています。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l25&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私たちはいまいましいドキュメントを読むだけで、ずっと知っていただろう！&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d8bf1cc529ad48c7cf9526ccb3384a00e782c795" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;I'm late but, you want some source with your answer?&lt;/em&gt; I'll try and word this in an introductory manner so more folks can follow along.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私は遅れていますが、あなたはあなたの答えでいくつかの情報源が欲しいですか？&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私はこれを紹介的な方法で試してみて、より多くの人々がフォローできるようにします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b9a077320c8002a8b176d7a3db6c25f186bfd141" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The current implementation keeps an array of integer objects for all integers between -5 and 256, when you create an int in that range you actually just get back a reference to the existing object&lt;/em&gt;. So it should be possible to change the value of 1. I suspect the behaviour of Python in this case is undefined. :-)</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;現在の実装では、-5〜256のすべての整数の整数オブジェクトの配列が保持されます&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その範囲でintを作成すると、実際には既存のオブジェクトへの参照が返されます&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、値1を変更できるはずです。この場合のPythonの動作は定義されていないと思われます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:-)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="184cec107084cc30c1541a03eb7b7c5c5b2fc402" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;id&lt;/code&gt;&lt;/strong&gt;
  Return the &amp;ldquo;identity&amp;rdquo; of an object. This is an integer (or long
  integer) which is guaranteed to be unique and constant for this object
  during its lifetime. Two objects with non-overlapping lifetimes may
  have the same &lt;code&gt;id()&lt;/code&gt; value.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;id&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; オブジェクトの「アイデンティティ」を返します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは整数（または長整数）であり、このオブジェクトの存続期間中、一意であり、定数であることが保証されています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;重複しない有効期間を持つ2つのオブジェクトは、同じ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;持つことができ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0c2618c6b23ac2c646fefcef3c3a340853dc75d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why does the following behave unexpectedly in Python?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonで以下が予期しない動作をするのはなぜですか？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5fdd494631e8dafb700e08e7c96fe53a330297c5" translate="yes" xml:space="preserve">
          <source>A good thing about CPython is that you can actually see the source for this. I'm going to use links for the &lt;strong&gt;3.5&lt;/strong&gt; release, but finding the corresponding &lt;strong&gt;2.x&lt;/strong&gt; ones is trivial.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPythonの良いところは、このソースを実際に確認できることです。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3.5&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;リリースの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;リンクを使用します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、対応する&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2.x&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;リンクを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;見つけるの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は簡単です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac0aa8a7f83561e2ace489c627f4a3e6d97f3d7a" translate="yes" xml:space="preserve">
          <source>And so the following are equivalent.</source>
          <target state="translated">ということで、以下のようなものが該当します。</target>
        </trans-unit>
        <trans-unit id="020c09212154577102213e00113981c05e13b3fd" translate="yes" xml:space="preserve">
          <source>And so we see, with &lt;code&gt;is&lt;/code&gt; and a sentinel, we are able to differentiate between when &lt;code&gt;bar&lt;/code&gt; is called with no arguments and when it is called with &lt;code&gt;None&lt;/code&gt;. These are the primary use-cases for &lt;code&gt;is&lt;/code&gt; - do &lt;em&gt;not&lt;/em&gt; use it to test for equality of integers, strings, tuples, or other things like these.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と番兵を使用する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と、引数&lt;/font&gt; &lt;code&gt;None&lt;/code&gt; &lt;/font&gt; &lt;code&gt;bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が呼び出されたときと&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;None&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で呼び出さ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れたときを区別でき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;主な使用例&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;整数、文字列、タプル、またはこれらのようなものの同等性をテストするために使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;し&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ないで&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="50a14f630be0955cb2c34cab46c0c646bb387224" translate="yes" xml:space="preserve">
          <source>And this isn't limited to &lt;code&gt;int&lt;/code&gt; values:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そして、これは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;限定されません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6d178c346da46b34eeed9bb44ec12ed5b577b4a" translate="yes" xml:space="preserve">
          <source>As you can check in &lt;a href=&quot;http://svn.python.org/projects/python/trunk/Objects/intobject.c&quot;&gt;source file &lt;em&gt;intobject.c&lt;/em&gt;&lt;/a&gt;, Python caches small integers for efficiency. Every time you create a reference to a small integer, you are referring the cached small integer, not a new object. 257 is not an small integer, so it is calculated as a different object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://svn.python.org/projects/python/trunk/Objects/intobject.c&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ソースファイル&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;intobject.cを&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;チェックインできる&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ので&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、Pythonは効率のために小さな整数をキャッシュします。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;小さな整数への参照を作成するたびに、新しいオブジェクトではなく、キャッシュされた小さな整数を参照しています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;257は短整数ではないため、別のオブジェクトとして計算されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29932ebba2d5da8e81696624a51eb2f80862cb75" translate="yes" xml:space="preserve">
          <source>At any rate, the rules for what values must be, might be, or cannot be distinct vary from implementation to implementation, and between versions of the same implementation, and maybe even between runs of the same code on the same copy of the same implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156f56e01d02f8aa6d287c3466f7e1e6aa738faa" translate="yes" xml:space="preserve">
          <source>Based on the above, I can hypothesize that Python is internally implemented such that &quot;small&quot; integers are stored in a different way than larger integers and the &lt;code&gt;is&lt;/code&gt; operator can tell the difference. Why the leaky abstraction? What is a better way of comparing two arbitrary objects to see whether they are the same when I don't know in advance whether they are numbers or not?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記に基づいて、「小さな」整数は大きな整数とは異なる方法で格納され、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;演算子が違いを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;認識できるようにPythonが内部的に実装されていると仮定&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;できます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なぜ漏れやすい抽象化なのか？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2つの任意のオブジェクトを比較して、それらが数値であるかどうか事前にわからない場合に、それらが同じであるかどうかを確認するためのより良い方法は何ですか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b81a575249b1bbcd887f15acd7fe24dcae6a4d9" translate="yes" xml:space="preserve">
          <source>But also, even non-pre-created values can be identical. Consider these examples:</source>
          <target state="translated">しかし、また、事前に作成されていない値であっても、同一の値になることがあります。これらの例を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="7a83dbf36d26a2ccbc4c3b897467fd5fabd1c75e" translate="yes" xml:space="preserve">
          <source>But as for impact on code, you should not care if an integer is a particular instance of an integer. You should only care what the value of that instance is, and you would use the normal comparison operators for that, i.e. &lt;code&gt;==&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、コードへの影響に関しては、整数が整数の特定のインスタンスであるかどうかを気にする必要はありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのインスタンスの値が何であるかだけを気にする必要があり、そのために通常の比較演算子、つまり&lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; を使用し&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="97d95eb23e9f053a880a77b9c304e7de1a6d27b6" translate="yes" xml:space="preserve">
          <source>But perhaps we should be glad that there is not a new separate instance in memory every time we state a value equals 256.</source>
          <target state="translated">しかし、おそらく私たちは、値が256に等しいことを表明するたびに、メモリ内に新しい別のインスタンスがないことを喜ぶべきではないでしょうか。</target>
        </trans-unit>
        <trans-unit id="66e03f31a35fe5f516dc8034caa56da5fbef4b0a" translate="yes" xml:space="preserve">
          <source>But, &lt;code&gt;257 is 257&lt;/code&gt;? What's up?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;257 is 257&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ですか？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;調子はどう？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="16c6357482bd5ce312fd0200c5aca0aae52a60c2" translate="yes" xml:space="preserve">
          <source>But, when are they allocated??</source>
          <target state="translated">でも、いつ割り振られるのか?</target>
        </trans-unit>
        <trans-unit id="075062f6c2bf8a5d3e42c8a089bc3207f63ec450" translate="yes" xml:space="preserve">
          <source>By the way, &lt;a href=&quot;http://en.wikipedia.org/wiki/NumPy&quot;&gt;NumPy&lt;/a&gt; will produce separate instances of low numbers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ちなみに、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/NumPy&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NumPy&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は低い数値の個別のインスタンスを生成します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9539ebb34dc539844dff1e692cd05704a9ed4e8a" translate="yes" xml:space="preserve">
          <source>Check out the source to read the loop body!</source>
          <target state="translated">ループ体を読み解くソースをチェック!</target>
        </trans-unit>
        <trans-unit id="4fb54a20f8fab9486c182539c4feb318d18d227f" translate="yes" xml:space="preserve">
          <source>Comparisons to singletons like &lt;code&gt;None&lt;/code&gt; should always be done with &lt;code&gt;is&lt;/code&gt; or
  &lt;code&gt;is not&lt;/code&gt;, never the equality operators.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;None&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ようなシングルトンとの比較&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、常に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is not&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、決して等価演算子&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で行われるべき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bef021192b260b14d27264a1d4c939f50d6b1d1e" translate="yes" xml:space="preserve">
          <source>Do not write code that assumes two equal but separately-created immutable values are distinct (don't use &lt;code&gt;x is not y&lt;/code&gt;, use &lt;code&gt;x != y&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2つの等しいが別々に作成された不変値が異なると想定するコードを記述しないでください（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x is not y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;では&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なく&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x != y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5777b8c70fa1acedf03ef33942cc347128cd9ffa" translate="yes" xml:space="preserve">
          <source>Do not write code that assumes two equal but separately-created immutable values are identical (don't use &lt;code&gt;x is y&lt;/code&gt;, use &lt;code&gt;x == y&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2つの等しいが別々に作成された不変値が同一であると想定するコードを記述しないでください（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x is y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;せず&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x == y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed560bafd90e01f11e33150257fd88f37dc6f579" translate="yes" xml:space="preserve">
          <source>Don't know about you but I see this and think: &lt;em&gt;Let's find that array!&lt;/em&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたについて知らないが、私はこれを見て、考えます：&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その配列を見つけましょう！&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="49c014f16006f023aade3279fee6eb3bc11567ea" translate="yes" xml:space="preserve">
          <source>During complilation of this statement, CPython will see that you have two matching literals and will use the same &lt;code&gt;PyLongObject&lt;/code&gt; representing &lt;code&gt;257&lt;/code&gt;. You can see this if you do the compilation yourself and examine its contents:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このステートメントのコンパイル中に、CPythonは2つの一致するリテラルがあることを確認し、&lt;/font&gt; &lt;code&gt;257&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;表す&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同じ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;PyLongObject&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自分でコンパイルしてその内容を調べると、これを確認できます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b32ef340ea4702fd5f41dbe4001671d76174ef71" translate="yes" xml:space="preserve">
          <source>Explanation</source>
          <target state="translated">Explanation</target>
        </trans-unit>
        <trans-unit id="72aaef6df9487030c3c92b755d874758273c11c1" translate="yes" xml:space="preserve">
          <source>First, what does &lt;code&gt;is&lt;/code&gt; do? It is a comparison operator. From the &lt;a href=&quot;https://docs.python.org/2/reference/expressions.html#not-in&quot;&gt;documentation&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;まず、何&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;するのですか？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;比較演算子です。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/reference/expressions.html#not-in&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ドキュメント&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4733ac4c8d05bf5ffc65a9b02bf2a40d5df3a644" translate="yes" xml:space="preserve">
          <source>For immutable value objects, like ints, strings or datetimes, object identity is not especially useful. It's better to think about equality. Identity is essentially an implementation detail for value objects - since they're immutable, there's no effective difference between having multiple refs to the same object or multiple objects.</source>
          <target state="translated">イントや文字列、datetimesのような不変的な値のオブジェクトでは、オブジェクトの同一性は特に有用ではありません。平等性について考えた方が良いでしょう。ID は基本的に値オブジェクトの実装の詳細です。不変なので、同じオブジェクトに複数の参照先があっても複数のオブジェクトがあっても効果的な違いはありません。</target>
        </trans-unit>
        <trans-unit id="cba50fd60be45fbcdb44b6e9a9d66f7f5c706e84" translate="yes" xml:space="preserve">
          <source>For one thing, there are some other pre-created values, such as the empty &lt;code&gt;tuple&lt;/code&gt;, &lt;code&gt;str&lt;/code&gt;, and &lt;code&gt;bytes&lt;/code&gt;, and some short strings (in CPython 3.6, it's the 256 single-character Latin-1 strings). For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;空の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タプル&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などの事前に作成された他の値&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と、いくつかの短い文字列（CPython 3.6では、256個の単一文字Latin-1文字列）があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例えば：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b93a78d2063253b791062e536fbcf3c506c7e8f" translate="yes" xml:space="preserve">
          <source>From the &lt;a href=&quot;https://docs.python.org/library/functions.html#id&quot;&gt;documentation&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/library/functions.html#id&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ドキュメント&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20f1962ed548d5a4e5a85c77e6163b6dd07229c0" translate="yes" xml:space="preserve">
          <source>Greg Hewgill (OP) made one clarifying comment &quot;My goal is to compare object identity, rather than equality of value. Except for numbers, where I want to treat object identity the same as equality of value.&quot;</source>
          <target state="translated">Greg Hewgill (OP)は1つの明確なコメントをしました。&quot;私の目標は、価値の平等ではなく、物体の同一性を比較することです。数を除いて、私はオブジェクトの同一性を価値の平等と同じように扱いたいのです。&quot;</target>
        </trans-unit>
        <trans-unit id="9520edcc756ac36c651c3dd60aa89decca7c632a" translate="yes" xml:space="preserve">
          <source>Here's what I found in the Python 2 documentation, &lt;a href=&quot;https://docs.python.org/2/c-api/int.html&quot;&gt;&quot;Plain Integer Objects&quot;&lt;/a&gt; (It's the same for &lt;a href=&quot;https://docs.python.org/3/c-api/long.html&quot;&gt;Python 3&lt;/a&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、Python 2のドキュメント&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/c-api/int.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「プレーンな整数オブジェクト」で&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;見つけたものです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（これは&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/c-api/long.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 3&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;でも同じです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7633b56032467c98e3952b15959b9bc41571b808" translate="yes" xml:space="preserve">
          <source>I am using Python 2.5.2. Trying some different versions of Python, it appears that Python 2.3.3 shows the above behaviour between 99 and 100.</source>
          <target state="translated">私はPython 2.5.2を使用しています。いくつかの異なるバージョンのPythonを試してみると、Python 2.3.3は99と100の間で上記の挙動を示しているようです。</target>
        </trans-unit>
        <trans-unit id="bf1bbe0998ecfbccd8f34580ebb282b05c3eba6e" translate="yes" xml:space="preserve">
          <source>I don't actually know an answer to this variant of the question. I suppose one could theoretically use ctypes to call &lt;code&gt;PyNumber_Check&lt;/code&gt;, but even that function &lt;a href=&quot;http://mail.python.org/pipermail/python-dev/2002-November/030237.html&quot;&gt;has been debated&lt;/a&gt;, and it's certainly not portable. We'll just have to be less particular about what we test for now.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この質問のバリエーションに対する答えは、実際にはわかりません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;理論的にはctypesを使用して&lt;/font&gt;&lt;/font&gt; &lt;code&gt;PyNumber_Check&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を呼び出すことができると思います&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、その関数でさえ&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://mail.python.org/pipermail/python-dev/2002-November/030237.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;議論されており&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、移植性は確かにありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;今のところ、何をテストするかについてあまり気にする必要はありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c7fde5b1be5df2cc60e919d243f79f64499af2e9" translate="yes" xml:space="preserve">
          <source>I hope my explanation has made you &lt;em&gt;C&lt;/em&gt; things clearly now (pun obviously intented).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私の説明があなた&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に今&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cの&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことを明確&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;にしてくれることを願っています&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（明らかに意図的にしゃれた）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2bf1ba0f7bc61d56c0afc241fb28b1a06aec1cfa" translate="yes" xml:space="preserve">
          <source>I think your hypotheses is correct. Experiment with &lt;code&gt;id&lt;/code&gt; (identity of object):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたの仮説は正しいと思います。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（オブジェクトの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ID&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;試す&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2989e4329462383daa6dcd09e8a4487363cde76c" translate="yes" xml:space="preserve">
          <source>If you haven't fiddled with the C code implementing CPython &lt;em&gt;you should&lt;/em&gt;; everything is pretty organized and readable. For our case, we need to look in the &lt;a href=&quot;https://hg.python.org/cpython/file/d489394a73de/Objects/&quot;&gt;&lt;code&gt;Objects&lt;/code&gt; subdirectory&lt;/a&gt; of the &lt;a href=&quot;https://hg.python.org/cpython/file/tip&quot;&gt;main source code directory tree&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPython &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実装するCコードをいじっていない&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合は&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてがかなり整理され、読みやすいです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;今回のケースでは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メインのソースコードディレクトリツリーの&lt;/font&gt;&lt;/a&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/d489394a73de/Objects/&quot;&gt; &lt;code&gt;Objects&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;サブディレクトリ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を調べる必要があり&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="537f423d61e77546573c451ff8a9476446add0aa" translate="yes" xml:space="preserve">
          <source>In CPython, the &lt;strong&gt;C-API&lt;/strong&gt; function that handles creating a new &lt;code&gt;int&lt;/code&gt; object is &lt;a href=&quot;https://docs.python.org/3/c-api/long.html#c.PyLong_FromLong&quot;&gt;&lt;code&gt;PyLong_FromLong(long v)&lt;/code&gt;&lt;/a&gt;. The description for this function is:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPythonでは、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;新しい&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作成を処理する&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C-API&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/c-api/long.html#c.PyLong_FromLong&quot;&gt; &lt;code&gt;PyLong_FromLong(long v)&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この関数の説明は次のとおりです。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8d327fdbf38dbb5e18ce4c7e07d18a8f571e859d" translate="yes" xml:space="preserve">
          <source>In summary - let me emphasize: &lt;strong&gt;&lt;em&gt;Do not use &lt;code&gt;is&lt;/code&gt; to compare integers.&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要約すると-私が強調してみましょう：&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Doがない使用が&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;整数を比較します。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c38fd56c4fdb78cb02380e1ab7bd3e9ca151e1b2" translate="yes" xml:space="preserve">
          <source>In the end, this issue stems from Python not originally having a type tree with predicates like &lt;a href=&quot;http://en.wikipedia.org/wiki/Scheme_%28programming_language%29&quot;&gt;Scheme's&lt;/a&gt;&lt;code&gt;number?&lt;/code&gt;, or &lt;a href=&quot;http://en.wikipedia.org/wiki/Haskell_%28programming_language%29&quot;&gt;Haskell's&lt;/a&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Type_class&quot;&gt;type class&lt;/a&gt;&lt;a href=&quot;http://www.haskell.org/ghc/docs/7.4-latest/html/libraries/base-4.5.1.0/Prelude.html#t:Num&quot;&gt;Num&lt;/a&gt;. &lt;code&gt;is&lt;/code&gt; checks object identity, not value equality. PHP has a colorful history as well, where &lt;code&gt;===&lt;/code&gt; apparently behaves as &lt;code&gt;is&lt;/code&gt; only on objects &lt;a href=&quot;http://www.php.net/manual/en/language.operators.comparison.php&quot;&gt;in PHP5, but not PHP4&lt;/a&gt;. Such are the growing pains of moving across languages (including versions of one).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;結局のところ、この問題は、Pythonが本来、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Scheme_%28programming_language%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Schemeの&lt;/font&gt;&lt;/font&gt;&lt;/a&gt; &lt;code&gt;number?&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ような述語を持つ型ツリーを持たないことに起因してい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ますか？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、または&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Haskell_%28programming_language%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Haskellの&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Type_class&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;型クラス&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;a href=&quot;http://www.haskell.org/ghc/docs/7.4-latest/html/libraries/base-4.5.1.0/Prelude.html#t:Num&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Num&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;チェック対象のアイデンティティではなく、価値の平等。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHPはどこだけでなく、カラフルな歴史を持っている&lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;として明らかに振る舞う&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトだけに&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.php.net/manual/en/language.operators.comparison.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP5ではなく、PHP4&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、言語のバージョン間を含めて、言語間を移動する際の痛みの増大です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0a9540f293e49d567c14e8e1c59c886e0fe58f9" translate="yes" xml:space="preserve">
          <source>Instead, use &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; to compare for equality and inequality, respectively. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代わりに、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;!=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、それぞれ等価か不等価かを比較します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例えば：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="70e475fcee8450b0a26129f13b286a70f00f2415" translate="yes" xml:space="preserve">
          <source>It also happens with strings:</source>
          <target state="translated">弦楽器でも起こります。</target>
        </trans-unit>
        <trans-unit id="d330cfdd1cef99b1885c3e778fb651e9d68f3822" translate="yes" xml:space="preserve">
          <source>It appears that numbers &lt;code&gt;&amp;lt;= 255&lt;/code&gt; are treated as literals and anything above is treated differently!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;= 255&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数値&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はリテラルとして扱われ、上記のものは別の扱いになります！&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e0e6d9d4ad1d30892d62940222ae6d9456aace7" translate="yes" xml:space="preserve">
          <source>It can be worth learning the rules for one specific Python for the fun of it. But it's not worth relying on them in your code. The only safe rule is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb810233f7fc63d4d3223263f62bf30b9080ca1" translate="yes" xml:space="preserve">
          <source>It depends on whether you're looking to see if 2 things are equal, or the same object.</source>
          <target state="translated">2つのものが等しいかどうかを見たいのか、同じものを見たいのかにもよります。</target>
        </trans-unit>
        <trans-unit id="a0aa15a254986085a44ed811e3ee1a9f43a5d480" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;not&lt;/em&gt; an expected result. Why is it expected? It only means that the integers valued at &lt;code&gt;256&lt;/code&gt; referenced by both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are the same instance of integer. Integers are immutable in Python, thus they cannot change. This should have no impact on any code. It should not be expected. It is merely an implementation detail.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;期待した結果で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はあり&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ません&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なぜそれが予想されるのですか？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これ&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;両方によって参照&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;される&lt;/font&gt;&lt;/font&gt; &lt;code&gt;256&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値の整数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が同じ整数のインスタンスである&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことを意味するだけ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;整数はPythonでは不変であるため、変更できません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これはコードに影響を与えません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それは期待されるべきではありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは単なる実装の詳細です。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f98f6e25f80d9a92c1ddec978b96a072d0718543" translate="yes" xml:space="preserve">
          <source>It is better to use &lt;code&gt;==&lt;/code&gt; for that purpose.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのためには&lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用することをお&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;勧め&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="39a018c9a327559044eb93b83cfa631890fe5a9b" translate="yes" xml:space="preserve">
          <source>It might be even better if CPython could do this globally, if it could do so cheaply (as there would a cost in the lookup), perhaps another implementation might.</source>
          <target state="translated">CPythonがグローバルにこれを行うことができればもっと良いかもしれません。</target>
        </trans-unit>
        <trans-unit id="2934f14fba9d6d3632870dc31aab2cd51063439c" translate="yes" xml:space="preserve">
          <source>Looks like we now have two separate instances of integers with the value of &lt;code&gt;257&lt;/code&gt; in memory. Since integers are immutable, this wastes memory. Let's hope we're not wasting a lot of it. We're probably not. But this behavior is not guaranteed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メモリ内&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;257&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の値を持つ整数の2つの個別のインスタンスがあるように見え&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;整数は不変なので、これはメモリを浪費します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たくさん無駄になっていないことを願いましょう。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私たちはおそらくそうではありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、この動作は保証されません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="27d9b42564e11c6f850edfd6f695a59f49f4ae4c" translate="yes" xml:space="preserve">
          <source>Next let's look at &lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l37&quot;&gt;&lt;code&gt;get_small_int&lt;/code&gt; in all its glory&lt;/a&gt; (well, we'll just look at its body because that's where the interesting things are):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l37&quot;&gt; &lt;code&gt;get_small_int&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべての栄光&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を見てみましょう（興味深いのは、ここから本文を見るだけです）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a04214a82c1046176055acabc88aef3f66d91e4" translate="yes" xml:space="preserve">
          <source>Note that the fact that the id of an object in CPython (the reference implementation of Python) is the location in memory is an implementation detail. Other implementations of Python (such as Jython or IronPython) could easily have a different implementation for &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPython（Pythonのリファレンス実装）のオブジェクトのIDがメモリ内の場所であるという事実は、実装の詳細であることに注意してください。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonの他の実装（JythonやIronPythonなど）は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;異なる実装を簡単に持つことができます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8c26b8d49e5d32ac527e4aea2bb981672da514ba" translate="yes" xml:space="preserve">
          <source>Now everything seems fine.</source>
          <target state="translated">今ではすべてがうまくいっているようです。</target>
        </trans-unit>
        <trans-unit id="bfe09b0d0f357b91654290934773a91647c00166" translate="yes" xml:space="preserve">
          <source>Now that's unexpected.</source>
          <target state="translated">今となっては予想外だ。</target>
        </trans-unit>
        <trans-unit id="f34502290825f879ef0a903691b3244a342cdb53" translate="yes" xml:space="preserve">
          <source>Now, we're no C &lt;em&gt;master-code-haxxorz&lt;/em&gt; but we're also not dumb, we can see that &lt;code&gt;CHECK_SMALL_INT(ival);&lt;/code&gt; peeking at us all seductively; we can understand it has something to do with this. &lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l51&quot;&gt;Let's check it out:&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さて、私たちはCの&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;master-code-haxxorz&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ではありませんが、馬鹿ではありません&lt;/font&gt;&lt;/font&gt; &lt;code&gt;CHECK_SMALL_INT(ival);&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;わかります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私たちすべてを魅惑的に覗きます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私たちはそれがこれと関係があることを理解できます。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l51&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それをチェックしよう：&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54a15d09f086e70ac3bd6806a4576b2e3ee8cf95" translate="yes" xml:space="preserve">
          <source>Obviously, CPython doesn't come with a pre-created &lt;code&gt;float&lt;/code&gt; value for &lt;code&gt;42.23e100&lt;/code&gt;. So, what's going on here?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;明らかに、CPythonには&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;42.23e100&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;事前に作成された&lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が付属していません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それで、ここで何が起こっているのですか？&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d3893852a37e6362ba755d3935741b21f6943faa" translate="yes" xml:space="preserve">
          <source>Okay, declare a &lt;code&gt;PyObject&lt;/code&gt;, assert that the previous condition holds and execute the assignment:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さて、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;PyObject&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を宣言し、前の条件が満たされていることを表明して割り当てを実行します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0529ee68c4de392040437e76423071979840b586" translate="yes" xml:space="preserve">
          <source>On the other hand, it is limited to the &lt;code&gt;str&lt;/code&gt; type, and to strings of &lt;a href=&quot;https://github.com/python/cpython/blob/master/Include/unicodeobject.h#L197&quot;&gt;internal storage kind &quot;ascii compact&quot;, &quot;compact&quot;, or &quot;legacy ready&quot;&lt;/a&gt;, and in many cases only &quot;ascii compact&quot; will get interned.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一方、それは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タイプに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;限定され、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/python/cpython/blob/master/Include/unicodeobject.h#L197&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内部ストレージの種類が &quot;ascii compact&quot;、 &quot;compact&quot;、または &quot;legacy ready&quot;の&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;限定され、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;多くの場合、 &quot;ascii compact&quot;のみがインターンされます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="af727a9e60200c0ec56d017c5f22b2316c0eba6b" translate="yes" xml:space="preserve">
          <source>Or, in other words, only use &lt;code&gt;is&lt;/code&gt; to test for the documented singletons (like &lt;code&gt;None&lt;/code&gt;) or that are only created in one place in the code (like the &lt;code&gt;_sentinel = object()&lt;/code&gt; idiom).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;又は、換言すれば、唯一の使用は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文書（のようなシングルトンのための試験を&lt;/font&gt;&lt;/font&gt; &lt;code&gt;None&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のみ（のようなコードに一つの場所に作成される）又は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;_sentinel = object()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;イディオム）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f886ab250b071a41757b46631a700b0bdb639e3c" translate="yes" xml:space="preserve">
          <source>PHP apparently allows the same thing for &quot;built-in&quot; classes (which I take to mean implemented at C level, not in PHP). A slightly less absurd use might be a timer object, which has a different value every time it's used as a number. Quite why you'd want to emulate Visual Basic's &lt;code&gt;Now&lt;/code&gt; instead of showing that it is an evaluation with &lt;code&gt;time.time()&lt;/code&gt; I don't know.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHPは、「組み込み」クラス（PHPではなくCレベルで実装されていることを意味します）でも同じことを可能にしています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;少しばかげた使い方は、タイマーオブジェクトである可能性があります。タイマーオブジェクトは、数値として使用されるたびに値が異なります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それが&lt;/font&gt; &lt;code&gt;time.time()&lt;/code&gt; での&lt;font style=&quot;vertical-align: inherit;&quot;&gt;評価であることを示すのではなく、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Visual Basicの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Now&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をエミュレートしたいのはなぜでしょう&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;か。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd75e6abb03749de2f2240c104b07f9971286711" translate="yes" xml:space="preserve">
          <source>Put that in a function, &lt;code&gt;dis&lt;/code&gt; it, and look at the &lt;code&gt;co_consts&lt;/code&gt;&amp;mdash;there's a &lt;code&gt;1&lt;/code&gt; and a &lt;code&gt;2&lt;/code&gt;, two &lt;code&gt;(1, 2)&lt;/code&gt; tuples that share the same &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt; but are not identical, and a &lt;code&gt;((1, 2), (1, 2))&lt;/code&gt; tuple that has the two distinct equal tuples.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数の中で、という入れ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;dis&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それを、と見&lt;/font&gt;&lt;/font&gt; &lt;code&gt;co_consts&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -thereだ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、2 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(1, 2)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、同じことを共有タプル&lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、同一ではない、と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;((1, 2), (1, 2))&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 2つの異なる等しいタプルを持つタプル。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="32bfc78671ed84f6edb1caed4a60f13e77f4eda9" translate="yes" xml:space="preserve">
          <source>Python's &amp;ldquo;is&amp;rdquo; operator behaves unexpectedly with integers?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonの「is」演算子は整数で予期しない動作をしますか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c6561c6ba8b07aea6a89505ee401b354c197b0ce" translate="yes" xml:space="preserve">
          <source>Since the reference refers to the same object, issuing &lt;code&gt;id()&lt;/code&gt; directly or checking for identity with &lt;code&gt;is&lt;/code&gt; on it will return exactly the same thing.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照は同じオブジェクトを参照しているため、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id()&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;直接&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;発行&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;するか、ID &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; onである&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;かを確認すると、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;まったく同じものが返されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eff95496609f695b73e468f3adfa7f04ee1c17d5" translate="yes" xml:space="preserve">
          <source>So &lt;code&gt;is&lt;/code&gt; will return &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そう&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;返します&lt;/font&gt;&lt;/font&gt; &lt;code&gt;True&lt;/code&gt; が&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d75f158b3b57dbe1bbac88f5dac9d039d0669f3" translate="yes" xml:space="preserve">
          <source>So it's a macro that calls function &lt;code&gt;get_small_int&lt;/code&gt; if the value &lt;code&gt;ival&lt;/code&gt; satisfies the condition:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、値&lt;/font&gt; &lt;code&gt;ival&lt;/code&gt; が&lt;font style=&quot;vertical-align: inherit;&quot;&gt;条件を満たす&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合に、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;get_small_int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を呼び出すマクロです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b802f6ab1cf3e86e9b09d81f8d990898448d638b" translate="yes" xml:space="preserve">
          <source>So our condition is &lt;code&gt;if (-5 &amp;lt;= ival &amp;amp;&amp;amp; ival &amp;lt; 257)&lt;/code&gt; call &lt;code&gt;get_small_int&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、条件は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;if (-5 &amp;lt;= ival &amp;amp;&amp;amp; ival &amp;lt; 257)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;/font&gt; &lt;code&gt;get_small_int&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出すこと&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="354c4256823bad2a2de81af42cb46affe52cc7d3" translate="yes" xml:space="preserve">
          <source>So what are &lt;code&gt;NSMALLNEGINTS&lt;/code&gt; and &lt;code&gt;NSMALLPOSINTS&lt;/code&gt;? Macros! &lt;em&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l12&quot;&gt;Here they are&lt;/a&gt;&lt;/em&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;だから、何&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NSMALLNEGINTS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NSMALLPOSINTS&lt;/code&gt; は&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;マクロ！&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/tip/Objects/longobject.c#l12&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここにあります&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c4600849b6ae8384087ac8c6be8eaed48c5daa8d" translate="yes" xml:space="preserve">
          <source>So what is the use-case for &lt;code&gt;is&lt;/code&gt;?  &lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/#programming-recommendations&quot;&gt;PEP8 describes&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それで、ユースケース&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;何ですか？ &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/#programming-recommendations&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PEP8の説明&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b204a51feaa721b5f3bc6a5e541c3e65103bdde" translate="yes" xml:space="preserve">
          <source>So yup, this is our guy. When you want to create a new &lt;code&gt;int&lt;/code&gt; in the range &lt;code&gt;[NSMALLNEGINTS, NSMALLPOSINTS)&lt;/code&gt; you'll just get back a reference to an already existing object that has been preallocated.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;うん、これは私たちの男です。&lt;/font&gt; &lt;code&gt;[NSMALLNEGINTS, NSMALLPOSINTS)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;範囲で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;新しい&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を作成&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する場合は、事前に割り当てられた既存のオブジェクトへの参照を取得するだけです。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e0981c32903ed4584fbc014f1ae45129beb4646b" translate="yes" xml:space="preserve">
          <source>Take a look at this:</source>
          <target state="translated">これを見てください。</target>
        </trans-unit>
        <trans-unit id="9d3332f426bd312f89cc19a8f53fa1b95f7d3d4d" translate="yes" xml:space="preserve">
          <source>That's expected too.</source>
          <target state="translated">それも期待されています。</target>
        </trans-unit>
        <trans-unit id="89dbf8d1fb5c6efbe530bd45daa4100911146dfc" translate="yes" xml:space="preserve">
          <source>The CPython compiler will merge constant values of some known-immutable types like &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;str&lt;/code&gt;, &lt;code&gt;bytes&lt;/code&gt;,  in the same compilation unit. For a module, the whole module is a compilation unit, but at the interactive interpreter, each statement is a separate compilation unit. Since &lt;code&gt;c&lt;/code&gt; and &lt;code&gt;d&lt;/code&gt; are defined in separate statements, their values aren't merged. Since &lt;code&gt;e&lt;/code&gt; and &lt;code&gt;f&lt;/code&gt; are defined in the same statement, their values are merged.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPythonコンパイラーは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などの一部の既知の不変タイプの定数値を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同じコンパイル単位に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;マージします&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;モジュールの場合、モジュール全体がコンパイル単位ですが、対話型インタープリターでは、各ステートメントは個別のコンパイル単位です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以来&lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;d&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;独立した文で定義され、それらの値はマージされません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以来&lt;/font&gt;&lt;/font&gt; &lt;code&gt;e&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同じステートメントで定義され、その値がマージされます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b375759c7ec6ff91b19c664f1268608e7cc391e" translate="yes" xml:space="preserve">
          <source>The Question</source>
          <target state="translated">疑問点</target>
        </trans-unit>
        <trans-unit id="670c799e05a171ede0c4dd77aa348c5565700111" translate="yes" xml:space="preserve">
          <source>The compiler now produces a &lt;a href=&quot;https://docs.python.org/3.8/library/exceptions.html#SyntaxWarning&quot;&gt;SyntaxWarning&lt;/a&gt; when identity checks (&lt;code&gt;is&lt;/code&gt; and
  &lt;code&gt;is not&lt;/code&gt;) are used with certain types of literals (e.g. strings, ints).
  These can often work by accident in CPython, but are not guaranteed by
  the language spec. The warning advises users to use equality tests (&lt;code&gt;==&lt;/code&gt;
  and &lt;code&gt;!=&lt;/code&gt;) instead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アイデンティティーチェック（&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;および &lt;/font&gt; &lt;code&gt;is not&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;）が特定のタイプのリテラル（文字列、intなど）で使用されると&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、コンパイラーは&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3.8/library/exceptions.html#SyntaxWarning&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SyntaxWarningを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;生成するように&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なりまし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;た&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらはCPythonで誤って機能することがよくありますが、言語仕様では保証されていません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;警告は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代わりに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;等価テスト（&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; および&lt;/font&gt; &lt;code&gt;!=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用するようにユーザーに助言します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1ea84ce07bd5132b3844c115d124c91532803a45" translate="yes" xml:space="preserve">
          <source>The current implementation keeps an
  array of integer objects for all
  integers between -5 and 256, when you
  create an int in that range you
  actually just get back a reference to
  the existing object. So it should be
  possible to change the value of 1. I
  suspect the behaviour of Python in
  this case is undefined. :-)</source>
          <target state="translated">現在の実装では、-5から256までのすべての整数のための整数オブジェクトの配列を保持しており、その範囲内でintを作成すると、実際には既存のオブジェクトへの参照を返すだけです。この場合のPythonの挙動は未定義なのではないかと疑っています。)</target>
        </trans-unit>
        <trans-unit id="29e90c5bbad522679e9cff75399d3ab2231dc258" translate="yes" xml:space="preserve">
          <source>The operators &lt;code&gt;is&lt;/code&gt; and &lt;code&gt;is not&lt;/code&gt; test for object identity: &lt;code&gt;x is y&lt;/code&gt; is true
  if and only if x and y are the same object. &lt;code&gt;x is not y&lt;/code&gt; yields the
  inverse truth value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;演算子&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is not&lt;/code&gt; is&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; for object identity for：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x is y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; is true if if if if if if if the x and y is a same object &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x is not y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合、逆の真理値が得られます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31a9e950d0f64e017765a3426458ec2f105644eb" translate="yes" xml:space="preserve">
          <source>There's another issue that isn't pointed out in any of the existing answers. Python is allowed to merge any two immutable values, and pre-created small int values are not the only way this can happen. A Python implementation is never &lt;em&gt;guaranteed&lt;/em&gt; to do this, but they all do it for more than just small ints.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;既存の回答のいずれにも指摘されていない別の問題があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonは2つの不変値をマージすることが許可されており、事前に作成された小さなint値がこれが発生する唯一の方法ではありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonの実装では、これが&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;保証さ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れること&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は決してありませ&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ん&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、すべてが小さなintだけではありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="583901099c77110e0cb24f39eb25b6aae81ad94d" translate="yes" xml:space="preserve">
          <source>There's one more optimization that CPython does: string interning. Unlike compiler constant folding, this isn't restricted to source code literals:</source>
          <target state="translated">CPythonにはもう一つの最適化があります。コンパイラの定数折りたたみとは異なり、これはソースコードリテラルに限定されるものではありません。</target>
        </trans-unit>
        <trans-unit id="a027cbf441c889c70feaf96ab63365405fe9f43b" translate="yes" xml:space="preserve">
          <source>This can be a very fast check relative to say, checking if two very long strings are equal in value. But since it applies to the uniqueness of the object, we thus have limited use-cases for it. In fact, we mostly want to use it to check for &lt;code&gt;None&lt;/code&gt;, which is a singleton (a sole instance existing in one place in memory). We might create other singletons if there is potential to conflate them, which we might check with &lt;code&gt;is&lt;/code&gt;, but these are relatively rare. Here's an example (will work in Python 2 and 3) e.g.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、2つの非常に長い文字列の値が等しいかどうかをチェックするなど、非常に高速なチェックです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、それはオブジェクトの一意性に適用されるため、その使用例は限られています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際、ほとんどの場合、これを使用して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、シングルトン（メモリ内の1つの場所に存在する唯一のインスタンス）である&lt;/font&gt;&lt;/font&gt; &lt;code&gt;None&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をチェックし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それらを混同する可能性がある場合、他のシングルトンを作成する可能性があります。これは、で確認できます&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、これらは比較的まれです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下に例を示します（Python 2および3で動作します）。例&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5736a7527bced364532363ef0b99dcec78a614b3" translate="yes" xml:space="preserve">
          <source>This is actually easier to explain, &lt;a href=&quot;https://stackoverflow.com/questions/34147515/is-operator-returns-different-results-on-integers&quot;&gt;and I have attempted to do so already&lt;/a&gt;; it's due to the fact that Python will execute this interactive statement as a single block:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは実際に説明する方が簡単&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/34147515/is-operator-returns-different-results-on-integers&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私はすでに説明しました&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、Pythonがこのインタラクティブなステートメントを単一のブロックとして実行するためです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="40446b6e3805c68dd07e5e77bacfa2e0f640a8c0" translate="yes" xml:space="preserve">
          <source>This isn't behavior you should have any expectations about.</source>
          <target state="translated">これはあなたが期待するべき行動ではありません。</target>
        </trans-unit>
        <trans-unit id="263db2012ac92a2151292e26bd7380de0b6aaea6" translate="yes" xml:space="preserve">
          <source>This would have yet another answer, as we have to categorize things as numbers or not, to select whether we compare with &lt;code&gt;==&lt;/code&gt; or &lt;code&gt;is&lt;/code&gt;. &lt;a href=&quot;http://en.wikipedia.org/wiki/CPython&quot;&gt;CPython&lt;/a&gt; defines the &lt;a href=&quot;http://docs.python.org/2/c-api/number.html&quot;&gt;number protocol&lt;/a&gt;, including PyNumber_Check, but this is not accessible from Python itself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と比較するかどうかを選択するために、物事を数値として分類する必要があるので、これにはさらに別の答え&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/CPython&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPython&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PyNumber_Checkを含む&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/2/c-api/number.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;番号プロトコルを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定義し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、これはPython自体からはアクセスできません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43aebb53feffaeb360d08a4be1091214297bcc3b" translate="yes" xml:space="preserve">
          <source>To know this, you need to know the following.</source>
          <target state="translated">これを知るためには、以下のことを知っておく必要があります。</target>
        </trans-unit>
        <trans-unit id="3bfeae23da5bf491706d2bc58548592ddf50393e" translate="yes" xml:space="preserve">
          <source>We could try to use &lt;code&gt;isinstance&lt;/code&gt; with all the number types we know of, but this would inevitably be incomplete. The types module contains a StringTypes list but no NumberTypes. Since Python 2.6, the built in number classes have a base class &lt;a href=&quot;https://docs.python.org/2/library/numbers.html#numbers.Number&quot;&gt;&lt;code&gt;numbers.Number&lt;/code&gt;&lt;/a&gt;, but it has the same problem:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;isinstance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ているすべての数値タイプで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;isinstance&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用することもできます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、これは必然的に不完全になります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タイプモジュールにはStringTypesリストが含まれていますが、NumberTypesは含まれていません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 2.6以降、組み込みの数値クラスには基本クラス&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/library/numbers.html#numbers.Number&quot;&gt; &lt;code&gt;numbers.Number&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がありますが、同じ問題があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3ff86b4a856c53f1719f261c2f51ff44fd8dfd22" translate="yes" xml:space="preserve">
          <source>Well, this looks like your particular implementation of Python is trying to be smart and not creating redundantly valued integers in memory unless it has to. You seem to indicate you are using the referent implementation of Python, which is CPython. Good for CPython.</source>
          <target state="translated">これは、あなたのPythonの特定の実装が賢くなろうとしているように見え、必要がない限りメモリに冗長な値の整数を作らないようにしています。あなたはPythonの参照元の実装を使っているように見えますが、それはCPythonです。CPythonのために良いですね。</target>
        </trans-unit>
        <trans-unit id="ea4def8e52a626d6b79b31589076963f02a32a23" translate="yes" xml:space="preserve">
          <source>What &lt;code&gt;is&lt;/code&gt; does</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;何&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ありません&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="88ce2bf65b6b5dfca6ce5a2bade2f6a84f488a72" translate="yes" xml:space="preserve">
          <source>When CPython does the operation, it's now just going to load the exact same object:</source>
          <target state="translated">CPythonが操作を行うと、全く同じオブジェクトをロードするようになりました。</target>
        </trans-unit>
        <trans-unit id="e52f46f155653a3c2a2e009ba12b0ccd1ff43ab6" translate="yes" xml:space="preserve">
          <source>Which prints:</source>
          <target state="translated">どの指紋だ</target>
        </trans-unit>
        <trans-unit id="083aa69538f471398179051fbd0bac459c4c6d6e" translate="yes" xml:space="preserve">
          <source>Why does the following behave unexpectedly in Python?</source>
          <target state="translated">Pythonで以下のような挙動をするのはなぜでしょうか?</target>
        </trans-unit>
        <trans-unit id="b0fb91e86722cf49e94b70bee64200f9524ab922" translate="yes" xml:space="preserve">
          <source>Why would we want to use &lt;code&gt;is&lt;/code&gt; then?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なぜ我々は、使用したい&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、その後？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a5dbcfbe429bfef2be3cb82f9c7e8a442a5563b" translate="yes" xml:space="preserve">
          <source>You ask, and state, the following question (with code):</source>
          <target state="translated">あなたは以下の質問をして、それを述べてください(コード付き)。</target>
        </trans-unit>
        <trans-unit id="7a8a0f94fb85d4a56e931c1386aa8c512d5e9fa3" translate="yes" xml:space="preserve">
          <source>You can see what's going on by disassembling the bytecode. Try defining a function that does &lt;code&gt;e, f = 128, 128&lt;/code&gt; and then calling &lt;code&gt;dis.dis&lt;/code&gt; on it, and you'll see that there's a single constant value &lt;code&gt;(128, 128)&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バイトコードを逆アセンブルすることで、何が起こっているかを確認できます。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;e, f = 128, 128&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;dis.dis&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する関数を定義してから、その&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;dis.dis&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出す&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と、定数値が1つ&lt;/font&gt; &lt;code&gt;(128, 128)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;128、128&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）あることがわかります&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d118cc3fab20976a46fc7b009a620128f88605d" translate="yes" xml:space="preserve">
          <source>You may notice that the compiler has stored &lt;code&gt;128&lt;/code&gt; as a constant even though it's not actually used by the bytecode, which gives you an idea of how little optimization CPython's compiler does. Which means that (non-empty) tuples actually don't end up merged:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際にはバイトコードで使用されていなくても&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、コンパイラーは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;128&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を定数として&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;格納し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ていることがわかります。これにより、CPythonコンパイラーの最適化がほとんど行われていないことがわかります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、（空ではない）タプルは実際にはマージされません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24c5f4e4ff6ed911320dff759cb8f0190b9de7ce" translate="yes" xml:space="preserve">
          <source>You should use &lt;code&gt;==&lt;/code&gt; to compare equality of arbitrary objects. You can specify the behavior with the &lt;code&gt;__eq__&lt;/code&gt;, and &lt;code&gt;__ne__&lt;/code&gt; attributes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;任意のオブジェクトの同等性を比較&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;するには、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用する必要があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__eq__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__ne__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て動作を指定できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="841108c86e9fbb4edafbf1fc269ca06fbd9c2aa7" translate="yes" xml:space="preserve">
          <source>is the same as</source>
          <target state="translated">と同じです。</target>
        </trans-unit>
        <trans-unit id="acc613352f69a406f394f0ff07ee6e99b6e8ad73" translate="yes" xml:space="preserve">
          <source>“is” operator behaves unexpectedly with integers</source>
          <target state="translated">&quot;is 演算子は整数では予期せぬ振る舞いをします。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
