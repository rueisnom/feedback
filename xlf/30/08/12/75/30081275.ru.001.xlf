<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/30081275">
    <body>
      <group id="30081275">
        <trans-unit id="b9b22b4d2ed8c1f23338279dd7313cb0a5ce7348" translate="yes" xml:space="preserve">
          <source>(As a side note, if you &lt;code&gt;print(iter(a))&lt;/code&gt;, you'll notice that &lt;code&gt;range&lt;/code&gt; uses the same &lt;code&gt;listiterator&lt;/code&gt; type as &lt;code&gt;list&lt;/code&gt;. How does that work? A &lt;code&gt;listiterator&lt;/code&gt; doesn't use anything special about &lt;code&gt;list&lt;/code&gt; except for the fact that it provides a C implementation of &lt;code&gt;__getitem__&lt;/code&gt;, so it works fine for &lt;code&gt;range&lt;/code&gt; too.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;( В &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;качестве примечания, если &lt;/font&gt;&lt;/font&gt; &lt;code&gt;print(iter(a))&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , вы заметите , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; использует тот же самый &lt;/font&gt;&lt;/font&gt; &lt;code&gt;listiterator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; типа как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;list&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Как это работает? &lt;/font&gt;&lt;/font&gt; &lt;code&gt;listiterator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не используют ничего особенного &lt;/font&gt;&lt;/font&gt; &lt;code&gt;list&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; за то , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;что кроме он обеспечивает реализацию C &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__getitem__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , поэтому он отлично работает и для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cab6b967b51f57a6e23db3d5719ae072b7a200b8" translate="yes" xml:space="preserve">
          <source>(in this case, there is no optimization in &lt;code&gt;range&lt;/code&gt;, so if python receives unexpected Decimal, python will compare all numbers)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(в этом случае оптимизация &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , поэтому, если python получит неожиданное десятичное число, python сравнит все числа)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a1c1856b0e6df956f9239d9be0cfb56946144646" translate="yes" xml:space="preserve">
          <source>* &lt;em&gt;Near&lt;/em&gt; constant time because Python integers are unbounded and so math operations also grow in time as N grows, making this a O(log N) operation. Since it&amp;rsquo;s all executed in optimised C code and Python stores integer values in 30-bit chunks, you&amp;rsquo;d run out of memory before you saw any performance impact due to the size of the integers involved here.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;* &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Почти&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; постоянное время, потому что целые числа Python не ограничены, и поэтому математические операции также растут во времени с ростом N, что делает эту операцию O (log N). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Поскольку все это выполняется в оптимизированном C-коде, а Python хранит целочисленные значения в 30-битных блоках, вам не хватит памяти, прежде чем вы заметите какое-либо влияние на производительность из-за размера целых чисел, задействованных здесь.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cb89a15dd0f7ba4f8c7f262b3dfc34fcd8cb68c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sanan-fataliyev/rangesharp&quot;&gt;Here is&lt;/a&gt; implementation in &lt;code&gt;C#&lt;/code&gt;. You can see how &lt;code&gt;Contains&lt;/code&gt; works in O(1) time.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sanan-fataliyev/rangesharp&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вот&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; реализация в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;C#&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете увидеть, как &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;работает &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Contains&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; за O (1) раз.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b26edc99bdb3100bb8ac0704029fc12cc9d2e30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/a/30081318/2437514&quot;&gt;Martijn Pieters' answer&lt;/a&gt; was chosen for its completeness, but also see &lt;a href=&quot;https://stackoverflow.com/a/30081894/2437514&quot;&gt;abarnert's first answer&lt;/a&gt; for a good discussion of what it means for &lt;code&gt;range&lt;/code&gt; to be a full-fledged &lt;em&gt;sequence&lt;/em&gt; in Python 3, and some information/warning regarding potential inconsistency for &lt;code&gt;__contains__&lt;/code&gt; function optimization across Python implementations. &lt;a href=&quot;https://stackoverflow.com/a/30088140/2437514&quot;&gt;abarnert's other answer&lt;/a&gt; goes into some more detail and provides links for those interested in the history behind the optimization in Python 3 (and lack of optimization of &lt;code&gt;xrange&lt;/code&gt; in Python 2). Answers &lt;a href=&quot;https://stackoverflow.com/a/30081467/2437514&quot;&gt;by poke&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/a/30081470/2437514&quot;&gt;by wim&lt;/a&gt; provide the relevant C source code and explanations for those who are interested.</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/a/30081318/2437514&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ответ Martijn Pieters&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; был выбран из-за его полноты, но также см &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/30081894/2437514&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. Первый ответ abarnert&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для хорошего обсуждения того, что означает для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; быть полноценной &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;последовательностью&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в Python 3, и некоторую информацию / предупреждение относительно потенциального несоответствия для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; оптимизации функций по всему Реализации Python. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/30088140/2437514&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Другой ответ abarnert&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; входит в некоторые подробности и предоставляет ссылки для тех, кто интересуется историей, стоящей за оптимизацией в Python 3 (и отсутствием оптимизации &lt;/font&gt;&lt;/font&gt; &lt;code&gt;xrange&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в Python 2). Ответы &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/30081467/2437514&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;poke&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/30081470/2437514&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;wim&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; предоставляют соответствующий исходный код на C и объяснения для тех, кто заинтересован.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f78814a315ab864b1b80e081629a4f69c3fe24b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(994 - 4) % 2 == 0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(994 - 4) % 2 == 0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7e7d2b3229c821f60be7a3a4b2e4681f2e40cf23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;4 &amp;lt;= 994 &amp;lt; 1000&lt;/code&gt;, and</source>
          <target state="translated">&lt;code&gt;4 &amp;lt;= 994 &amp;lt; 1000&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e78ad89e688341f68323f2517f6fbbfa13ac2b2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Decimal(sys.maxsize) in range(sys.maxsize)&lt;/code&gt;&lt;em&gt;is pretty slow&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;Decimal(sys.maxsize) in range(sys.maxsize)&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;довольно медленный&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b5d853fcfb0167ad6daeca7539aa545c17c9305" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sys.maxsize in range(sys.maxsize)&lt;/code&gt;&lt;em&gt;is pretty fast&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;sys.maxsize in range(sys.maxsize)&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;довольно быстро&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b2c3b48469c0535dee2f2d0cd0188032160e71fe" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;* In fact, you even get iteration for free with indexing alone, but &lt;a href=&quot;https://docs.python.org/2/whatsnew/2.3.html#optimizations&quot;&gt;in 2.3&lt;/a&gt; &lt;code&gt;xrange&lt;/code&gt; objects got a custom iterator.&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;* Фактически, вы даже получаете итерацию бесплатно только с индексированием, но &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/whatsnew/2.3.html#optimizations&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;в 2.3&lt;/font&gt;&lt;/font&gt;&lt;/a&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; объекты &lt;/font&gt;&lt;/font&gt; &lt;code&gt;xrange&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; получили пользовательский итератор.&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="cdce64bc8e9dd1bea76793d3f90013d16a5f4d74" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;** The first version actually reimplemented it, and got the details wrong&amp;mdash;e.g., it would give you &lt;code&gt;MyIntSubclass(2) in range(5) == False&lt;/code&gt;. But Daniel Stutzbach's updated version of the patch restored most of the previous code, including the fallback to the generic, slow &lt;code&gt;_PySequence_IterSearch&lt;/code&gt; that pre-3.2 &lt;code&gt;range.__contains__&lt;/code&gt; was implicitly using when the optimization doesn't apply.&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;** Первая версия фактически переопределила его, и неправильно &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyIntSubclass(2) in range(5) == False&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; детали - например, это даст вам &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MyIntSubclass (2) в диапазоне (5) == False&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но обновленная версия патча Даниэля Штутцбаха восстановила большую часть предыдущего кода, в том числе откат к общему медленному &lt;/font&gt;&lt;/font&gt; &lt;code&gt;_PySequence_IterSearch&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который до &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;версии&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 3.2 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range.__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;___&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; неявно использовался, когда оптимизация не применяется.&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="2638dcd8f48aa633a6b79a0374de056acacfe325" translate="yes" xml:space="preserve">
          <source>As a final note - look at the &lt;code&gt;range_contains&lt;/code&gt; function at the bottom of the code snippet.  If the exact type check fails then we don't use the clever algorithm described, instead falling back to a dumb iteration search of the range using &lt;code&gt;_PySequence_IterSearch&lt;/code&gt;!  You can check this behaviour in the interpreter (I'm using v3.5.0 here):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В заключение: посмотрите на &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;функцию &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range_contains&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; внизу фрагмента кода. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если точная проверка типа не удалась, мы не используем описанный умный алгоритм, вместо этого возвращаясь к &lt;/font&gt;&lt;/font&gt; &lt;code&gt;_PySequence_IterSearch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; итерационному поиску диапазона, используя &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;_PySequence_IterSearch&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете проверить это поведение в интерпретаторе (я использую v3.5.0 здесь):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0b23f97443a02aceb39ac7c77d2d216d2da39b36" translate="yes" xml:space="preserve">
          <source>As you can see,  a range object is an object that remembers its range and can be used many times (even while iterating over it), not just a one-time generator.</source>
          <target state="translated">Как видите,объект диапазона-это объект,который запоминает свой диапазон и может быть использован много раз (даже во время итераций по нему),а не просто одноразовый генератор.</target>
        </trans-unit>
        <trans-unit id="3a95600cd93ae1ccafd3b04e7616d2c565419b71" translate="yes" xml:space="preserve">
          <source>But it &lt;strong&gt;also&lt;/strong&gt; implements the &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__&lt;/code&gt;&lt;/a&gt; interface which is actually what gets called when an object appears on the right hand side of the &lt;code&gt;in&lt;/code&gt; operator. The &lt;code&gt;__contains__()&lt;/code&gt; method returns a &lt;code&gt;bool&lt;/code&gt; of whether or not the item on the left-hand-side of the &lt;code&gt;in&lt;/code&gt; is in the object. Since &lt;code&gt;range&lt;/code&gt; objects know their bounds and stride, this is very easy to implement in O(1).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но он &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;также&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; реализует &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;интерфейс &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;__contains__&lt;/code&gt; ,&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который фактически вызывается, когда объект появляется справа от &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;оператора &lt;/font&gt;&lt;/font&gt; &lt;code&gt;in&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__contains__()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; метод возвращает &lt;/font&gt;&lt;/font&gt; &lt;code&gt;bool&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , действительно ли пункт на левой стороне от &lt;/font&gt;&lt;/font&gt; &lt;code&gt;in&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; находится в объекте. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Поскольку &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объекты &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; знают свои границы и шаг, это очень легко реализовать в O (1).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="354bb960779420931884b8d4c1cea2a6f1c3df0d" translate="yes" xml:space="preserve">
          <source>But there doesn't seem to be anything in the language that &lt;em&gt;guarantees&lt;/em&gt; this will happen. As Ashwini Chaudhari points out, if you give it a non-integral value, instead of converting to integer and doing the mathematical test, it will fall back to iterating all the values and comparing them one by one. And just because CPython 3.2+ and PyPy 3.x versions happen to contain this optimization, and it's an obvious good idea and easy to do, there's no reason that IronPython or NewKickAssPython 3.x couldn't leave it out. (And in fact CPython 3.0-3.1 &lt;em&gt;didn't&lt;/em&gt; include it.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но в языке, похоже, нет ничего, что &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;гарантировало бы&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; это. Как указывает Ашвини Чаудхари, если вы дадите ему нецелое значение, вместо того, чтобы конвертировать в целое число и выполнять математический тест, он вернется к итерации всех значений и сравнивает их одно за другим. И только потому, что версии CPython 3.2+ и PyPy 3.x содержат эту оптимизацию, и это очевидная хорошая идея и ее легко реализовать, нет никаких причин, по которой IronPython или NewKickAssPython 3.x не могли ее исключить. (И фактически CPython 3.0-3.1 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;не&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; включал его.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fea61079d1346001a34d76f38bb84b60b59657b1" translate="yes" xml:space="preserve">
          <source>By the way, your integer is not such big, consider &lt;code&gt;sys.maxsize&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Кстати, ваше целое число не такое большое, рассмотрите &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sys.maxsize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70848b1d55a2bbb145ad97f3b3d32690f125d149" translate="yes" xml:space="preserve">
          <source>Check that the number is between &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;stop&lt;/code&gt;, and</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Проверьте, что число находится между &lt;/font&gt;&lt;/font&gt; &lt;code&gt;start&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;stop&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , и&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8155d46fff6fff8ac0f63ce2238162827cbc13eb" translate="yes" xml:space="preserve">
          <source>Check that the stride value doesn't &quot;step over&quot; our number.</source>
          <target state="translated">Убедитесь,что значение шага не &quot;перешагнуло&quot; наш номер.</target>
        </trans-unit>
        <trans-unit id="62c382295c8d2ae321b85e68904021c8f8cf0476" translate="yes" xml:space="preserve">
          <source>Check whether the number is between the start and stop.</source>
          <target state="translated">Проверьте,находится ли номер между началом и остановкой.</target>
        </trans-unit>
        <trans-unit id="4e72e1e36d759a8297f5b95f55c23fd2b3d305df" translate="yes" xml:space="preserve">
          <source>Check whether the step precision value doesn't go over our number.</source>
          <target state="translated">Проверьте,не превышает ли значение ступенчатой точности наш номер.</target>
        </trans-unit>
        <trans-unit id="8270aff0f6a02aa25cdf9d7ca6abbd5b839d820f" translate="yes" xml:space="preserve">
          <source>Due to optimization, it is very easy to compare given integers just with min and max range.</source>
          <target state="translated">Благодаря оптимизации очень легко сравнивать заданные целые числа только с минимальным и максимальным диапазоном.</target>
        </trans-unit>
        <trans-unit id="5c995c07b90a86b97ac69587f4802a9d042ff6c0" translate="yes" xml:space="preserve">
          <source>First, as Ashwini Chaudhary discovered, &lt;a href=&quot;http://bugs.python.org/issue1766304&quot;&gt;issue 1766304&lt;/a&gt; was opened explicitly to optimize &lt;code&gt;[x]range.__contains__&lt;/code&gt;. A patch for this was &lt;a href=&quot;https://hg.python.org/cpython/rev/d599a3f2e72d/&quot;&gt;accepted and checked in for 3.2&lt;/a&gt;, but not backported to 2.7 because &quot;xrange has behaved like this for such a long time that I don't see what it buys us to commit the patch this late.&quot; (2.7 was nearly out at that point.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Во-первых, как обнаружил &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://bugs.python.org/issue1766304&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Эшвини&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Чаудхари, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;проблема 1766304&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; была открыта явно для оптимизации &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[x]range.__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Патч для этого был &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/rev/d599a3f2e72d/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;принят и проверен на 3.2&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , но не перенесен в 2.7, потому что &amp;laquo;xrange вел себя так долго, что я не вижу, что он покупает, чтобы зафиксировать патч так поздно&amp;raquo;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(2.7 было почти в тот момент.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d699f1d34979fbbb5a50dc1c8940119ff539063b" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;994&lt;/code&gt; is in &lt;code&gt;range(4, 1000, 2)&lt;/code&gt; because:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Например, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;994&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; находится в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range(4, 1000, 2)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; потому что:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49c74cdf9c17b14fec7769c164befbfe07a9f1d7" translate="yes" xml:space="preserve">
          <source>From the &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#range&quot;&gt;&lt;code&gt;range()&lt;/code&gt; object documentation&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Из &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#range&quot;&gt; &lt;code&gt;range()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; документации по объекту&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d523d2385848293ca6eb84c04316d4acdb288887" translate="yes" xml:space="preserve">
          <source>Furthermore: it seems that no matter how many zeroes I add on, the calculation more or less takes the same amount of time (basically instantaneous).</source>
          <target state="translated">Более того:кажется,что сколько бы нулей я ни добавлял,вычисление более или менее занимает столько же времени (в основном мгновенное).</target>
        </trans-unit>
        <trans-unit id="ec8802e5d713691e4575c0beaf2b9286edfbd679" translate="yes" xml:space="preserve">
          <source>I also simplified the &lt;code&gt;__contains__&lt;/code&gt; implementation to only focus on integer tests; if you give a real &lt;code&gt;range()&lt;/code&gt; object a non-integer value (including subclasses of &lt;code&gt;int&lt;/code&gt;), a slow scan is initiated to see if there is a match, just as if you use a containment test against a list of all the contained values. This was done to continue to support other numeric types that just happen to support equality testing with integers but are not expected to support integer arithmetic as well. See the original &lt;a href=&quot;http://bugs.python.org/issue1766304&quot;&gt;Python issue&lt;/a&gt; that implemented the containment test.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я также упростил &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;реализацию &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__contains__&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; чтобы сосредоточиться только на целочисленных тестах; если вы предоставляете &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объекту &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; нецелое значение (включая подклассы &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), запускается медленное сканирование, чтобы увидеть, есть ли совпадение, так же, как если бы вы использовали тест сдерживания для списка всех содержащихся значений , Это было сделано для того, чтобы продолжать поддерживать другие числовые типы, которые, как оказалось, поддерживают тестирование на равенство с целыми числами, но не должны поддерживать целочисленную арифметику. Посмотрите оригинальную &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://bugs.python.org/issue1766304&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;версию Python, в&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; которой реализован тест на содержание.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac23594d95b84e12f3bb123824565d85f7fb54e0" translate="yes" xml:space="preserve">
          <source>I have also tried things like this, but the calculation is still almost instant:</source>
          <target state="translated">Я тоже пробовал такие вещи,но расчет все еще почти мгновенный:</target>
        </trans-unit>
        <trans-unit id="5d248d1254edc5b3006b7fdce45c93f46ab3c932" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;range&lt;/code&gt; actually were a generator, like &lt;code&gt;my_crappy_range&lt;/code&gt;, then it wouldn't make sense to test &lt;code&gt;__contains__&lt;/code&gt; this way, or at least the way it makes sense wouldn't be obvious. If you'd already iterated the first 3 values, is &lt;code&gt;1&lt;/code&gt; still &lt;code&gt;in&lt;/code&gt; the generator? Should testing for &lt;code&gt;1&lt;/code&gt; cause it to iterate and consume all the values up to &lt;code&gt;1&lt;/code&gt; (or up to the first value &lt;code&gt;&amp;gt;= 1&lt;/code&gt;)?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если бы &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; самом деле был генератором, как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;my_crappy_range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , то не было бы смысла проверять &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; таким образом, или, по крайней мере, то, как это имеет смысл, было бы неочевидным. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы уже повторили первые 3 значения, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; еще находится &lt;/font&gt;&lt;/font&gt; &lt;code&gt;in&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; генераторе? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Должно ли тестирование на &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вызывать итерацию и использовать все значения до &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (или до первого значения &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;gt;= 1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e8d8f8622da9a550c98e906b936d8f8b85cf5bed" translate="yes" xml:space="preserve">
          <source>If I try to implement my own range function, the result is not so nice!!</source>
          <target state="translated">Если я попытаюсь реализовать свою собственную функцию диапазона,результат будет не очень хорошим!!!</target>
        </trans-unit>
        <trans-unit id="3dac25503e03a70a60169ed951c48d820421c349" translate="yes" xml:space="preserve">
          <source>If it were a generator, iterating it once would exhaust it:</source>
          <target state="translated">Если бы это был генератор,итерация однажды истощила бы его:</target>
        </trans-unit>
        <trans-unit id="83c538f2f822e7a43125ff80528cabb67fea4f23" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s not an &lt;code&gt;int&lt;/code&gt; object, it falls back to iterating until it finds the value (or not).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если это не &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объект &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , он возвращается к итерации, пока не найдет значение (или нет).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="44076ad95c48b5e9c2dcd9b88d39a5e905cd2537" translate="yes" xml:space="preserve">
          <source>If you're wondering &lt;em&gt;why&lt;/em&gt; this optimization was added to &lt;code&gt;range.__contains__&lt;/code&gt;, and why it &lt;em&gt;wasn't&lt;/em&gt; added to &lt;code&gt;xrange.__contains__&lt;/code&gt; in 2.7:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вам интересно, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;почему&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; эта оптимизация была добавлена ​​в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range.__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , и почему она &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;не была&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; добавлена ​​в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;xrange.__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в 2.7:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b4cf964cb90fd408ff753f04baee72150b63cb07" translate="yes" xml:space="preserve">
          <source>In CPython, &lt;code&gt;range(...).__contains__&lt;/code&gt; (a method wrapper) will eventually delegate to a simple calculation which checks if the value can possibly be in the range.  The reason for the speed here is we're using &lt;strong&gt;mathematical reasoning about the bounds, rather than a direct iteration of the range object&lt;/strong&gt;.  To explain the logic used:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В CPython &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range(...).__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (обертка метода) в конечном итоге делегирует простой расчет, который проверяет, может ли значение находиться в диапазоне. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Причина скорости здесь в том, что мы используем &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;математические рассуждения о границах, а не прямую итерацию объекта диапазона&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для объяснения используемой логики:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b00a3bb8d9a2f646611fb26f48964b92d0fd321f" translate="yes" xml:space="preserve">
          <source>It is my understanding that the &lt;code&gt;range()&lt;/code&gt; function, which is actually &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#typesseq-range&quot;&gt;an object type in Python 3&lt;/a&gt;, generates its contents on the fly, similar to a generator.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Насколько я понимаю, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;функция &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , которая на самом деле &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#typesseq-range&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;является типом объекта в Python 3&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , генерирует свое содержимое на лету, подобно генератору.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65d1cc92eba4e60e365685591bc3fc1f75339cb1" translate="yes" xml:space="preserve">
          <source>It's all about a &lt;strong&gt;lazy approach&lt;/strong&gt; to the evaluation and some &lt;strong&gt;extra optimization&lt;/strong&gt; of &lt;code&gt;range&lt;/code&gt;.
Values in ranges don't need to be computed until real use, or even further due to extra optimization.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это все о &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ленивом подходе&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; к оценке и некоторой &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;дополнительной оптимизации&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Значения в диапазонах не нужно вычислять до реального использования или даже из-за дополнительной оптимизации.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="150c915ae13a66a36795a4e06f9076b11d1d1c7f" translate="yes" xml:space="preserve">
          <source>Meanwhile:</source>
          <target state="translated">Meanwhile:</target>
        </trans-unit>
        <trans-unit id="10df5e461f8cfa6a8e166c6f79ac02779a67f782" translate="yes" xml:space="preserve">
          <source>Now, there's nothing that says that &lt;code&gt;Sequence.__contains__&lt;/code&gt; has to be constant time&amp;mdash;in fact, for obvious examples of sequences like &lt;code&gt;list&lt;/code&gt;, it isn't. But there's nothing that says it &lt;em&gt;can't&lt;/em&gt; be. And it's easier to implement &lt;code&gt;range.__contains__&lt;/code&gt; to just check it mathematically (&lt;code&gt;(val - start) % step&lt;/code&gt;, but with some extra complexity to deal with negative steps) than to actually generate and test all the values, so why &lt;em&gt;shouldn't&lt;/em&gt; it do it the better way?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь нет ничего, что говорит о том, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Sequence.__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; должно быть постоянным временем - фактически, для очевидных примеров последовательностей, таких как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;list&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , это не так. Но нет ничего, что говорит, что это &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;не может&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; быть. И легче реализовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range.__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; чтобы просто проверить его математически ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(val - start) % step&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , но с некоторой дополнительной сложностью, чтобы справиться с отрицательными шагами), чем фактически генерировать и тестировать все значения, так почему &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;бы не&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; сделать этого это лучший способ?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="03b43e73dc591bf9be75b74a405717952ad97038" translate="yes" xml:space="preserve">
          <source>Originally, &lt;code&gt;xrange&lt;/code&gt; was a not-quite-sequence object. As &lt;a href=&quot;https://docs.python.org/3.1/library/stdtypes.html#range-type&quot;&gt;the 3.1 docs&lt;/a&gt; say:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Первоначально, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;xrange&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; был не совсем последовательным объектом. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;сказано в &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3.1/library/stdtypes.html#range-type&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;документах 3.1&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="98a65da23a2131c6268042f227c779a2d7368022" translate="yes" xml:space="preserve">
          <source>Range objects have very little behavior: they only support indexing, iteration, and the &lt;code&gt;len&lt;/code&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;У объектов Range очень мало поведения: они поддерживают только индексирование, итерацию и &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;функцию &lt;/font&gt;&lt;/font&gt; &lt;code&gt;len&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c1e3b7d0da32713ff7d538fd2353d1091656f5d" translate="yes" xml:space="preserve">
          <source>So at a minimum, your &lt;code&gt;range()&lt;/code&gt; object would do:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, как минимум, ваш &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объект &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будет делать:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a50a44cb7780d4b5e344370f2e95352646788c4" translate="yes" xml:space="preserve">
          <source>So for &lt;code&gt;PyLong&lt;/code&gt; objects (which is &lt;code&gt;int&lt;/code&gt; in Python 3), it will use the &lt;code&gt;range_contains_long&lt;/code&gt; function to determine the result. And that function essentially checks if &lt;code&gt;ob&lt;/code&gt; is in the specified range (although it looks a bit more complex in C).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, для &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объектов &lt;/font&gt;&lt;/font&gt; &lt;code&gt;PyLong&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (который является &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в Python 3), он будет использовать &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;функцию &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range_contains_long&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для определения результата. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;И эта функция по существу проверяет, находится ли &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ob&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в указанном диапазоне (хотя в C это выглядит немного сложнее).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="13ccd07fe761deb01119765e0985bae94aa6d280" translate="yes" xml:space="preserve">
          <source>So for explaining the logic here:</source>
          <target state="translated">Итак,чтобы объяснить логику:</target>
        </trans-unit>
        <trans-unit id="a24a5619d711b68a02ae65110bc362ca47fe6316" translate="yes" xml:space="preserve">
          <source>So, there were two chances to get this optimization backported to 2.7, but they were both rejected.</source>
          <target state="translated">Таким образом,было два шанса вернуть эту оптимизацию в 2.7,но они оба были отвергнуты.</target>
        </trans-unit>
        <trans-unit id="5ff57f4185e884322f43c9c59da60f12f41285ea" translate="yes" xml:space="preserve">
          <source>TL;DR</source>
          <target state="translated">TL;DR</target>
        </trans-unit>
        <trans-unit id="ee61df3565aedbde8009e0df74d43abf78f5d079" translate="yes" xml:space="preserve">
          <source>Take an example, &lt;strong&gt;997 is in range(4, 1000, 3)&lt;/strong&gt; because:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Возьмите пример, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;997 находится в диапазоне (4, 1000, 3),&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; потому что:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="544102d6025f36d496d237ff491d7be66f116af3" translate="yes" xml:space="preserve">
          <source>The &quot;meat&quot; of the idea is mentioned in &lt;a href=&quot;https://github.com/python/cpython/blob/9a5bacfecdf6798e960d1447af11d4cfa8d4dc32/Objects/rangeobject.c#L402&quot;&gt;the line&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;laquo;Мясо&amp;raquo; идеи упоминается в &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/python/cpython/blob/9a5bacfecdf6798e960d1447af11d4cfa8d4dc32/Objects/rangeobject.c#L402&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;строке&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a38ca8b243e9828bd509f775fcac51aeee05f61" translate="yes" xml:space="preserve">
          <source>The Python 3 &lt;code&gt;range()&lt;/code&gt; object doesn't produce numbers immediately; it is a &lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html#collections.abc.Sequence&quot;&gt;smart sequence object&lt;/a&gt; that produces numbers &lt;em&gt;on demand&lt;/em&gt;. All it contains is your start, stop and step values, then as you iterate over the object the next integer is calculated each iteration.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Объект &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Python 3 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;не генерирует числа сразу; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;это &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html#collections.abc.Sequence&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;умный объект последовательности,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который производит числа &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;по требованию&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Все, что он содержит, - это ваши значения start, stop и step, а затем при выполнении итерации по объекту вычисляется следующее целое число на каждой итерации.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc41fb23825acbcea5a60f6310fc110729b01018" translate="yes" xml:space="preserve">
          <source>The advantage of the &lt;code&gt;range&lt;/code&gt; type over a regular &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;tuple&lt;/code&gt; is that a range object will always take the same (small) amount of memory, no matter the size of the range it represents (as it only stores the &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt; and &lt;code&gt;step&lt;/code&gt; values, calculating individual items and subranges as needed).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Преимущество &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; типа над обычным &lt;/font&gt;&lt;/font&gt; &lt;code&gt;list&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является то , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;что объект диапазона всегда будет принимать такое же (небольшое) количество памяти, независимо от размера диапазона он представляет (как он хранит только &lt;/font&gt;&lt;/font&gt; &lt;code&gt;start&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;stop&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;step&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; значений , вычисляя отдельные элементы и поддиапазоны по мере необходимости).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c152be4c00832582d0bc6b80de516f2d15bc691e" translate="yes" xml:space="preserve">
          <source>The difference between a &lt;code&gt;range&lt;/code&gt; and a &lt;code&gt;list&lt;/code&gt; is that a &lt;code&gt;range&lt;/code&gt; is a &lt;em&gt;lazy&lt;/em&gt; or &lt;em&gt;dynamic&lt;/em&gt; sequence; it doesn't remember all of its values, it just remembers its &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt;, and &lt;code&gt;step&lt;/code&gt;, and creates the values on demand on &lt;code&gt;__getitem__&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Разница между &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;list&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; заключается в том, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ленивая&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;динамическая&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; последовательность; он не запоминает все свои значения, он просто запоминает его &lt;/font&gt;&lt;/font&gt; &lt;code&gt;start&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;stop&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;step&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и создает значения по требованию в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__getitem__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="61b656612cb8874b5f17c7652229d53f5e4359c1" translate="yes" xml:space="preserve">
          <source>The full C code is included below, which is a bit more verbose because of memory management and reference counting details, but the basic idea is there:</source>
          <target state="translated">Полный код на Си приведен ниже,что немного более многословно из-за управления памятью и деталей подсчета ссылок,но основная идея здесь есть:</target>
        </trans-unit>
        <trans-unit id="08d0cbcfed5f11130b318c07b960395b413651cb" translate="yes" xml:space="preserve">
          <source>The fundamental misunderstanding here is in thinking that &lt;code&gt;range&lt;/code&gt; is a generator. It's not. In fact, it's not any kind of iterator.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Основное недоразумение заключается в том, что мы думаем, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это генератор. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это не. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;На самом деле, это не какой-то итератор.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="83617cb12472e960e469717ee64374c98d64bd56" translate="yes" xml:space="preserve">
          <source>The object also implements the &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;object.__contains__&lt;/code&gt; hook&lt;/a&gt;, and &lt;em&gt;calculates&lt;/em&gt; if your number is part of its range. Calculating is a (near) constant time operation &lt;sup&gt;*&lt;/sup&gt;. There is never a need to scan through all possible integers in the range.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Объект также реализует &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;object.__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; хук&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;вычисляет, является&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ли ваш номер частью его диапазона. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Расчет - это (почти) операция с постоянным временем &lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;*&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Нет необходимости сканировать все возможные целые числа в диапазоне.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31348d04ed7bbac1c6a4506714c4344fd7bc3614" translate="yes" xml:space="preserve">
          <source>The object returned by &lt;code&gt;range()&lt;/code&gt; is actually a &lt;code&gt;range&lt;/code&gt; object. This object implements the iterator interface so you can iterate over its values sequentially, just like a generator, list, or tuple.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Объект, возвращаемый &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , фактически является &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объектом &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Этот объект реализует интерфейс итератора, так что вы можете последовательно перебирать его значения, как генератор, список или кортеж.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bbb21a7ab186d01fa518f7b44cbfb3115da14f42" translate="yes" xml:space="preserve">
          <source>The other answers explained it well already, but I'd like to offer another experiment illustrating the nature of range objects:</source>
          <target state="translated">Другие ответы уже хорошо объяснили это,но я хотел бы предложить другой эксперимент,иллюстрирующий природу объектов диапазона:</target>
        </trans-unit>
        <trans-unit id="1071a62c895e03edadab6693bdef7a16b251828f" translate="yes" xml:space="preserve">
          <source>The reason that &lt;strong&gt;range()&lt;/strong&gt; function is so fast in Python3 is that here we use mathematical reasoning for the bounds, rather than a direct iteration of the range object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Причина того, что &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;функция &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;range ()&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является настолько быстрой в Python3, заключается в том, что здесь мы используем математическое обоснование границ, а не прямую итерацию объекта диапазона.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bcca856511ab8783293c769078d3b9cb270779d2" translate="yes" xml:space="preserve">
          <source>The whole logic could be translated to pseudo-Python like this:</source>
          <target state="translated">Вся логика может быть переведена на псевдо-Питон вот так:</target>
        </trans-unit>
        <trans-unit id="9ee73e6442aa9fb56321451eef9d8353f28db34c" translate="yes" xml:space="preserve">
          <source>Then, as part of implementing the &lt;a href=&quot;https://www.python.org/dev/peps/pep-3119/&quot;&gt;Abstract Base Classes&lt;/a&gt; PEP, it was important to figure out which builtin types should be marked as implementing which ABCs, and &lt;code&gt;xrange&lt;/code&gt;/&lt;code&gt;range&lt;/code&gt; claimed to implement &lt;code&gt;collections.Sequence&lt;/code&gt;, even though it still only handled the same &quot;very little behavior&quot;. Nobody noticed that problem until &lt;a href=&quot;http://bugs.python.org/issue9213&quot;&gt;issue 9213&lt;/a&gt;. The patch for that issue not only added &lt;code&gt;index&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; to 3.2's &lt;code&gt;range&lt;/code&gt;, it also re-worked the optimized &lt;code&gt;__contains__&lt;/code&gt; (which shares the same math with &lt;code&gt;index&lt;/code&gt;, and is directly used by &lt;code&gt;count&lt;/code&gt;).&lt;sup&gt;**&lt;/sup&gt;&lt;a href=&quot;https://github.com/python/cpython/commit/8ee11f7e599b2c5b4de39047bf11bde2246e968f&quot;&gt;This change&lt;/a&gt; went in for 3.2 as well, and was not backported to 2.x, because &quot;it's a bugfix that adds new methods&quot;. (At this point, 2.7 was already past rc status.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Затем, как часть реализации &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.python.org/dev/peps/pep-3119/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;абстрактных базовых классов&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; PEP, было важно выяснить, какие встроенные типы должны быть помечены как реализующие, какие ABC, и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;xrange&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; заявили, что они реализуют &lt;/font&gt;&lt;/font&gt; &lt;code&gt;collections.Sequence&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Последовательность, хотя она все еще обрабатывает только то же самое немного поведения &quot;. Никто не заметил эту проблему до &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://bugs.python.org/issue9213&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;выпуска 9213&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Патч для этой проблемы не только добавил &lt;/font&gt;&lt;/font&gt; &lt;code&gt;index&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;count&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; к &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 3.2 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, но и переработал оптимизированный &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (который использует ту же математику с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;index&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и напрямую используется &lt;/font&gt;&lt;/font&gt; &lt;code&gt;count&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;** &lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;a href=&quot;https://github.com/python/cpython/commit/8ee11f7e599b2c5b4de39047bf11bde2246e968f&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это изменение&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;пошел на 3.2, и не был перенесен на 2.x, потому что &amp;laquo;это исправление, которое добавляет новые методы&amp;raquo;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(На данный момент 2.7 уже прошел статус rc.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc653234824089c74310215b579f597e087ca140" translate="yes" xml:space="preserve">
          <source>This being the case, I would have expected the following line to take an inordinate amount of time, because in order to determine whether 1 quadrillion is in the range, a quadrillion values would have to be generated:</source>
          <target state="translated">При этом я бы ожидал,что следующая строка займет непомерное количество времени,потому что для того,чтобы определить,находится ли 1 квадриллион в этом диапазоне,необходимо будет сгенерировать квадриллионные значения:</target>
        </trans-unit>
        <trans-unit id="601964a0af5fc329286c43494d1b93b4a7ca99d7" translate="yes" xml:space="preserve">
          <source>This is still missing several things that a real &lt;code&gt;range()&lt;/code&gt; supports (such as the &lt;code&gt;.index()&lt;/code&gt; or &lt;code&gt;.count()&lt;/code&gt; methods, hashing, equality testing, or slicing), but should give you an idea.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В нем по-прежнему не хватает нескольких вещей, которые поддерживает реальный &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (таких как &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;методы &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.index()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.count()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , хэширование, тестирование на равенство или срезы), но следует дать вам представление.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f80c4cb0679e53a949c32b0ac190421077750670" translate="yes" xml:space="preserve">
          <source>This means it has to follow all the rules of being a sequence:</source>
          <target state="translated">Это означает,что он должен следовать всем правилам последовательности:</target>
        </trans-unit>
        <trans-unit id="d2ad888ba3b822ce805f3748907ecbf9b1258899" translate="yes" xml:space="preserve">
          <source>This wasn't quite true; an &lt;code&gt;xrange&lt;/code&gt; object actually supported a few other things that come automatically with indexing and &lt;code&gt;len&lt;/code&gt;,&lt;sup&gt;*&lt;/sup&gt; including &lt;code&gt;__contains__&lt;/code&gt; (via linear search). But nobody thought it was worth making them full sequences at the time.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это было не совсем так; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;xrange&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; объект фактически поддержали несколько других вещей , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;которые приходят автоматически с индексацией и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;len&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;*&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; включая &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (через линейный поиск). Но никто не думал, что в то время стоило делать их полными последовательностями.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8690b149d8e8cfa8cd1257005457b1463ffe31d1" translate="yes" xml:space="preserve">
          <source>To add to Martijn&amp;rsquo;s answer, this is the relevant part of &lt;a href=&quot;https://hg.python.org/cpython/file/7f8cd879687b/Objects/rangeobject.c#l415&quot;&gt;the source&lt;/a&gt; (in C, as the range object is written in native code):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Чтобы добавить к ответу Martijn, это соответствующая часть &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/7f8cd879687b/Objects/rangeobject.c#l415&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;источника&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (в C, поскольку объект диапазона написан в нативном коде):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="be3b0b42f6680c00507694d72d1f7022605c21a0" translate="yes" xml:space="preserve">
          <source>Try &lt;code&gt;x-1 in (i for i in range(x))&lt;/code&gt; for large &lt;code&gt;x&lt;/code&gt; values, which uses a generator comprehension to avoid invoking the &lt;code&gt;range.__contains__&lt;/code&gt; optimisation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Попробуйте &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x-1 in (i for i in range(x))&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для больших &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;значений &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , который использует понимание генератора, чтобы избежать вызова &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range.__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; оптимизацию.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e813db87426b62a99cf3e4be77476c090bb67049" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://github.com/python/cpython/blob/cff677abe1823900e954592035a170eb67840971/Objects/rangeobject.c#L364-L413&quot;&gt;source&lt;/a&gt;, Luke!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Используйте &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/python/cpython/blob/cff677abe1823900e954592035a170eb67840971/Objects/rangeobject.c#L364-L413&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;источник&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , Люк!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="06802975cefff52a425e022f7da8a89c6ee6eaa3" translate="yes" xml:space="preserve">
          <source>What &lt;code&gt;range&lt;/code&gt; actually is, is a sequence, just like a list. You can even test this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;То, что на &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;самом деле является &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , это последовательность, как список. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы даже можете проверить это:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a6500d0776cd51af24cdc0e92b78183f446cff7" translate="yes" xml:space="preserve">
          <source>What is the &lt;code&gt;range()&lt;/code&gt; object doing under the hood that makes it so fast?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Что &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;делает объект &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который делает его таким быстрым?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2cd6a3c216b35403a6bc87531634cf4fdf33e56f" translate="yes" xml:space="preserve">
          <source>Why is “1000000000000000 in range(1000000000000001)” so fast in Python 3</source>
          <target state="translated">Почему &quot;1000000000000000 в диапазоне(10000000000001)&quot; так быстро на питоне 3.</target>
        </trans-unit>
        <trans-unit id="bb3d73e98cfd7f2a1c63112bb0a680f29ffcf196" translate="yes" xml:space="preserve">
          <source>You can tell this pretty easily:</source>
          <target state="translated">Ты можешь сказать это довольно легко:</target>
        </trans-unit>
        <trans-unit id="270480ae2ce563f829cb6203b6308055d57b20ff" translate="yes" xml:space="preserve">
          <source>You should be aware of an implementation detail but should not be relied upon, because this may change in the future.</source>
          <target state="translated">Вы должны быть осведомлены о деталях реализации,но на них не следует полагаться,поскольку в будущем ситуация может измениться.</target>
        </trans-unit>
        <trans-unit id="b94da3599274cc93c9ee4f4d4dce4fea875b2503" translate="yes" xml:space="preserve">
          <source>but:</source>
          <target state="translated">but:</target>
        </trans-unit>
        <trans-unit id="2a6189afc04320880bd261c8700c56679f1e8e2d" translate="yes" xml:space="preserve">
          <source>due to optimization - it's easy to compare given integer just with min and max of range.</source>
          <target state="translated">за счет оптимизации-легко сравнивать заданное целое число только с минимальным и максимальным диапазоном.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
