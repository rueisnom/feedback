<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/30081275">
    <body>
      <group id="30081275">
        <trans-unit id="b9b22b4d2ed8c1f23338279dd7313cb0a5ce7348" translate="yes" xml:space="preserve">
          <source>(As a side note, if you &lt;code&gt;print(iter(a))&lt;/code&gt;, you'll notice that &lt;code&gt;range&lt;/code&gt; uses the same &lt;code&gt;listiterator&lt;/code&gt; type as &lt;code&gt;list&lt;/code&gt;. How does that work? A &lt;code&gt;listiterator&lt;/code&gt; doesn't use anything special about &lt;code&gt;list&lt;/code&gt; except for the fact that it provides a C implementation of &lt;code&gt;__getitem__&lt;/code&gt;, so it works fine for &lt;code&gt;range&lt;/code&gt; too.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(보조 노트로서, 당신은 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;print(iter(a))&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 당신이 알 수 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 동일한 사용 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;listiterator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 같은 유형의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;list&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . 그 일이? &amp;Acirc; 않는 방법 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;listiterator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 대해 아무것도 특수를 사용하지 않는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;list&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사실 그 제외 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__getitem__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 C 구현을 제공 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하므로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서도 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;잘 작동합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cab6b967b51f57a6e23db3d5719ae072b7a200b8" translate="yes" xml:space="preserve">
          <source>(in this case, there is no optimization in &lt;code&gt;range&lt;/code&gt;, so if python receives unexpected Decimal, python will compare all numbers)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(이 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 최적화가 없으므로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬이 예기치 않은 Decimal을 받으면 파이썬은 모든 숫자를 비교합니다)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a1c1856b0e6df956f9239d9be0cfb56946144646" translate="yes" xml:space="preserve">
          <source>* &lt;em&gt;Near&lt;/em&gt; constant time because Python integers are unbounded and so math operations also grow in time as N grows, making this a O(log N) operation. Since it&amp;rsquo;s all executed in optimised C code and Python stores integer values in 30-bit chunks, you&amp;rsquo;d run out of memory before you saw any performance impact due to the size of the integers involved here.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;* &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬 정수는 제한이 없기 때문에 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;거의&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 일정한 시간에 N이 증가함에 따라 수학 연산도 시간이 지남에 따라 O (log N) 연산이됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모두 최적화 된 C 코드에서 실행되고 Python은 정수 값을 30 비트 청크로 저장하므로 여기에 관련된 정수의 크기로 인해 성능에 영향을 미치기 전에 메모리가 부족합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cb89a15dd0f7ba4f8c7f262b3dfc34fcd8cb68c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sanan-fataliyev/rangesharp&quot;&gt;Here is&lt;/a&gt; implementation in &lt;code&gt;C#&lt;/code&gt;. You can see how &lt;code&gt;Contains&lt;/code&gt; works in O(1) time.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sanan-fataliyev/rangesharp&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;C#&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 구현입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;O (1) 시간에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Contains&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어떻게 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;작동 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는지 확인할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b26edc99bdb3100bb8ac0704029fc12cc9d2e30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/a/30081318/2437514&quot;&gt;Martijn Pieters' answer&lt;/a&gt; was chosen for its completeness, but also see &lt;a href=&quot;https://stackoverflow.com/a/30081894/2437514&quot;&gt;abarnert's first answer&lt;/a&gt; for a good discussion of what it means for &lt;code&gt;range&lt;/code&gt; to be a full-fledged &lt;em&gt;sequence&lt;/em&gt; in Python 3, and some information/warning regarding potential inconsistency for &lt;code&gt;__contains__&lt;/code&gt; function optimization across Python implementations. &lt;a href=&quot;https://stackoverflow.com/a/30088140/2437514&quot;&gt;abarnert's other answer&lt;/a&gt; goes into some more detail and provides links for those interested in the history behind the optimization in Python 3 (and lack of optimization of &lt;code&gt;xrange&lt;/code&gt; in Python 2). Answers &lt;a href=&quot;https://stackoverflow.com/a/30081467/2437514&quot;&gt;by poke&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/a/30081470/2437514&quot;&gt;by wim&lt;/a&gt; provide the relevant C source code and explanations for those who are interested.</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/a/30081318/2437514&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Martijn Pieters의 답변&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 완전성으로 선정되었지만 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 3에서 &lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 완전한 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;시퀀스&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가되는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것이 무엇을 의미하는지에 대한 좋은 토론 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;과 &lt;/font&gt; &lt;code&gt;__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수 최적화 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에 대한 잠재적 불일치에 관한 정보 / 경고에 대한 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/30081894/2437514&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;abarnert의 첫 번째 답변&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬 구현. &lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/30088140/2437514&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;abarnert의 다른 대답&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 좀 더 자세하게 설명하고 Python 3의 최적화 뒤에 숨겨진 역사에 관심이있는 사람들을위한 링크를 제공합니다 ( &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 2 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 &lt;/font&gt; &lt;code&gt;xrange&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 최적화 부족 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;). &lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/30081467/2437514&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;poke&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/30081470/2437514&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;wim의&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 답변 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 관심있는 사람들을위한 관련 C 소스 코드와 설명을 제공합니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f78814a315ab864b1b80e081629a4f69c3fe24b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(994 - 4) % 2 == 0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(994 - 4) % 2 == 0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7e7d2b3229c821f60be7a3a4b2e4681f2e40cf23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;4 &amp;lt;= 994 &amp;lt; 1000&lt;/code&gt;, and</source>
          <target state="translated">&lt;code&gt;4 &amp;lt;= 994 &amp;lt; 1000&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e78ad89e688341f68323f2517f6fbbfa13ac2b2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Decimal(sys.maxsize) in range(sys.maxsize)&lt;/code&gt;&lt;em&gt;is pretty slow&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;Decimal(sys.maxsize) in range(sys.maxsize)&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 상당히 느립니다&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b5d853fcfb0167ad6daeca7539aa545c17c9305" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sys.maxsize in range(sys.maxsize)&lt;/code&gt;&lt;em&gt;is pretty fast&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;sys.maxsize in range(sys.maxsize)&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 꽤 빠릅니다.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b2c3b48469c0535dee2f2d0cd0188032160e71fe" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;* In fact, you even get iteration for free with indexing alone, but &lt;a href=&quot;https://docs.python.org/2/whatsnew/2.3.html#optimizations&quot;&gt;in 2.3&lt;/a&gt; &lt;code&gt;xrange&lt;/code&gt; objects got a custom iterator.&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제로 인덱싱만으로도 무료로 반복을 얻을 수 있지만 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/whatsnew/2.3.html#optimizations&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2.3 &lt;/font&gt;&lt;/font&gt;&lt;/a&gt; &lt;code&gt;xrange&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체에는 사용자 정의 반복자가 있습니다.&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="cdce64bc8e9dd1bea76793d3f90013d16a5f4d74" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;** The first version actually reimplemented it, and got the details wrong&amp;mdash;e.g., it would give you &lt;code&gt;MyIntSubclass(2) in range(5) == False&lt;/code&gt;. But Daniel Stutzbach's updated version of the patch restored most of the previous code, including the fallback to the generic, slow &lt;code&gt;_PySequence_IterSearch&lt;/code&gt; that pre-3.2 &lt;code&gt;range.__contains__&lt;/code&gt; was implicitly using when the optimization doesn't apply.&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;** 첫 번째 버전은 실제로이를 다시 구현하고 세부 정보가 잘못되었습니다. 예를 들어 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyIntSubclass(2) in range(5) == False&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 Daniel Stutzbach의 업데이트 된 패치 버전은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3.2 이전 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 일반적인 느린 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;_PySequence_IterSearch&lt;/code&gt; 로의&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 폴백을 포함하여 이전 코드의 대부분을 복원했습니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range.__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 최적화가 적용되지 않을 때 암시 적으로 사용되었습니다.&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="2638dcd8f48aa633a6b79a0374de056acacfe325" translate="yes" xml:space="preserve">
          <source>As a final note - look at the &lt;code&gt;range_contains&lt;/code&gt; function at the bottom of the code snippet.  If the exact type check fails then we don't use the clever algorithm described, instead falling back to a dumb iteration search of the range using &lt;code&gt;_PySequence_IterSearch&lt;/code&gt;!  You can check this behaviour in the interpreter (I'm using v3.5.0 here):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;마지막으로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드 스 니펫 하단의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range_contains&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;살펴보십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정확한 타입 검사가 실패하면 우리는 설명 된 영리한 알고리즘을 사용하지 않고 대신 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;_PySequence_IterSearch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인터프리터에서이 동작을 확인할 수 있습니다 (여기서 v3.5.0을 사용하고 있습니다).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0b23f97443a02aceb39ac7c77d2d216d2da39b36" translate="yes" xml:space="preserve">
          <source>As you can see,  a range object is an object that remembers its range and can be used many times (even while iterating over it), not just a one-time generator.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;보시다시피, 범위 객체는 범위를 기억하고 일회성 생성기뿐만 아니라 여러 번 (범위를 반복하는 동안에도) 사용할 수있는 객체입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a95600cd93ae1ccafd3b04e7616d2c565419b71" translate="yes" xml:space="preserve">
          <source>But it &lt;strong&gt;also&lt;/strong&gt; implements the &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__&lt;/code&gt;&lt;/a&gt; interface which is actually what gets called when an object appears on the right hand side of the &lt;code&gt;in&lt;/code&gt; operator. The &lt;code&gt;__contains__()&lt;/code&gt; method returns a &lt;code&gt;bool&lt;/code&gt; of whether or not the item on the left-hand-side of the &lt;code&gt;in&lt;/code&gt; is in the object. Since &lt;code&gt;range&lt;/code&gt; objects know their bounds and stride, this is very easy to implement in O(1).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체가 &lt;/font&gt; &lt;code&gt;in&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 연산자 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 오른쪽에 나타날 때 실제로 호출되는 &lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;__contains__&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 인터페이스 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;도&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 구현합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt; &lt;code&gt;__contains__()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드는 반환 &lt;/font&gt; &lt;code&gt;bool&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 왼쪽 사이드에 있는지의 여부 항목 &lt;/font&gt; &lt;code&gt;in&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 개체이다. &lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체는 경계와 걸음을 알고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있으므로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;O (1)에서 구현하기가 매우 쉽습니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="354bb960779420931884b8d4c1cea2a6f1c3df0d" translate="yes" xml:space="preserve">
          <source>But there doesn't seem to be anything in the language that &lt;em&gt;guarantees&lt;/em&gt; this will happen. As Ashwini Chaudhari points out, if you give it a non-integral value, instead of converting to integer and doing the mathematical test, it will fall back to iterating all the values and comparing them one by one. And just because CPython 3.2+ and PyPy 3.x versions happen to contain this optimization, and it's an obvious good idea and easy to do, there's no reason that IronPython or NewKickAssPython 3.x couldn't leave it out. (And in fact CPython 3.0-3.1 &lt;em&gt;didn't&lt;/em&gt; include it.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일이 일어날 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것을 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;보장&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하는 언어에는 아무것도없는 것 같습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. Ashwini Chaudhari가 지적했듯이 정수로 변환하고 수학 테스트를 수행하는 대신 정수가 아닌 값을 지정하면 모든 값을 반복하고 하나씩 비교하는 것으로 넘어갑니다. 그리고 CPython 3.2+ 및 PyPy 3.x 버전에이 최적화가 포함되어 있기 때문에 분명하고 좋은 아이디어이며 쉽게 수행 할 수 있기 때문에 IronPython 또는 NewKickAssPython 3.x가이를 포기할 이유가 없습니다. (사실 CPython 3.0-3.1 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에는 포함 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되지 않았습니다&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fea61079d1346001a34d76f38bb84b60b59657b1" translate="yes" xml:space="preserve">
          <source>By the way, your integer is not such big, consider &lt;code&gt;sys.maxsize&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그건 그렇고, 정수가 그렇게 크지 않습니다 &lt;/font&gt; &lt;code&gt;sys.maxsize&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 고려 &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="70848b1d55a2bbb145ad97f3b3d32690f125d149" translate="yes" xml:space="preserve">
          <source>Check that the number is between &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;stop&lt;/code&gt;, and</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;숫자가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;start&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;stop&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사이에 있는지 확인 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하고&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8155d46fff6fff8ac0f63ce2238162827cbc13eb" translate="yes" xml:space="preserve">
          <source>Check that the stride value doesn't &quot;step over&quot; our number.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;보폭이 우리의 숫자를 &quot;스텝&quot;하지 않는지 확인하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="62c382295c8d2ae321b85e68904021c8f8cf0476" translate="yes" xml:space="preserve">
          <source>Check whether the number is between the start and stop.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;숫자가 시작과 중지 사이에 있는지 확인하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4e72e1e36d759a8297f5b95f55c23fd2b3d305df" translate="yes" xml:space="preserve">
          <source>Check whether the step precision value doesn't go over our number.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스텝 정밀도 값이 우리의 숫자를 넘지 않는지 확인하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8270aff0f6a02aa25cdf9d7ca6abbd5b839d820f" translate="yes" xml:space="preserve">
          <source>Due to optimization, it is very easy to compare given integers just with min and max range.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;최적화로 인해 주어진 정수를 최소 및 최대 범위와 비교하는 것이 매우 쉽습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5c995c07b90a86b97ac69587f4802a9d042ff6c0" translate="yes" xml:space="preserve">
          <source>First, as Ashwini Chaudhary discovered, &lt;a href=&quot;http://bugs.python.org/issue1766304&quot;&gt;issue 1766304&lt;/a&gt; was opened explicitly to optimize &lt;code&gt;[x]range.__contains__&lt;/code&gt;. A patch for this was &lt;a href=&quot;https://hg.python.org/cpython/rev/d599a3f2e72d/&quot;&gt;accepted and checked in for 3.2&lt;/a&gt;, but not backported to 2.7 because &quot;xrange has behaved like this for such a long time that I don't see what it buys us to commit the patch this late.&quot; (2.7 was nearly out at that point.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;먼저 Ashwini Chaudhary가 발견 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://bugs.python.org/issue1766304&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한대로 이슈 1766304&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 명시 적으로 개방되어 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[x]range.__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 최적화되었습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것에 대한 패치는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/rev/d599a3f2e72d/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3.2에 대해 승인되고 체크인&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 되었지만 &quot;xrange는 오랫동안 이와 같이 동작하여이 패치를 최근에 패치하기 위해 구입 한 것이 무엇인지 알 수 없기 때문에&quot;2.7로 백 포트되지 않았습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(2.7은 그 시점에서 거의 나갔다.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d699f1d34979fbbb5a50dc1c8940119ff539063b" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;994&lt;/code&gt; is in &lt;code&gt;range(4, 1000, 2)&lt;/code&gt; because:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;994&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에있는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range(4, 1000, 2)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 같은 이유로&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49c74cdf9c17b14fec7769c164befbfe07a9f1d7" translate="yes" xml:space="preserve">
          <source>From the &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#range&quot;&gt;&lt;code&gt;range()&lt;/code&gt; object documentation&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로부터 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#range&quot;&gt; &lt;code&gt;range()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체 문서&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d523d2385848293ca6eb84c04316d4acdb288887" translate="yes" xml:space="preserve">
          <source>Furthermore: it seems that no matter how many zeroes I add on, the calculation more or less takes the same amount of time (basically instantaneous).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 : 내가 추가하는 0의 수에 관계없이 계산에는 거의 동일한 시간 (기본적으로 순간)이 소요됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec8802e5d713691e4575c0beaf2b9286edfbd679" translate="yes" xml:space="preserve">
          <source>I also simplified the &lt;code&gt;__contains__&lt;/code&gt; implementation to only focus on integer tests; if you give a real &lt;code&gt;range()&lt;/code&gt; object a non-integer value (including subclasses of &lt;code&gt;int&lt;/code&gt;), a slow scan is initiated to see if there is a match, just as if you use a containment test against a list of all the contained values. This was done to continue to support other numeric types that just happen to support equality testing with integers but are not expected to support integer arithmetic as well. See the original &lt;a href=&quot;http://bugs.python.org/issue1766304&quot;&gt;Python issue&lt;/a&gt; that implemented the containment test.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정수 테스트에만 초점을 맞추기 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위해 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 구현을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;단순화했습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. real &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체에 정수가 아닌 값 ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; 의&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 서브 클래스 포함 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;)을 제공하면 포함 된 모든 값의 목록에 대해 포함 테스트를 사용하는 것처럼 느린 스캔이 시작되어 일치하는지 확인합니다. . 이것은 정수로 등식 테스트를 지원하기 위해 발생하지만 정수 산술도 지원하지 않는 다른 숫자 유형을 계속 지원하기 위해 수행되었습니다. 포함 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트를 구현 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한 원래 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://bugs.python.org/issue1766304&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 문제&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac23594d95b84e12f3bb123824565d85f7fb54e0" translate="yes" xml:space="preserve">
          <source>I have also tried things like this, but the calculation is still almost instant:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 또한 이와 같은 것을 시도했지만 계산은 거의 즉각적입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d248d1254edc5b3006b7fdce45c93f46ab3c932" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;range&lt;/code&gt; actually were a generator, like &lt;code&gt;my_crappy_range&lt;/code&gt;, then it wouldn't make sense to test &lt;code&gt;__contains__&lt;/code&gt; this way, or at least the way it makes sense wouldn't be obvious. If you'd already iterated the first 3 values, is &lt;code&gt;1&lt;/code&gt; still &lt;code&gt;in&lt;/code&gt; the generator? Should testing for &lt;code&gt;1&lt;/code&gt; cause it to iterate and consume all the values up to &lt;code&gt;1&lt;/code&gt; (or up to the first value &lt;code&gt;&amp;gt;= 1&lt;/code&gt;)?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 실제로 발생했다처럼 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;my_crappy_range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 다음 테스트 이해가되지 것 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 적어도 그 의미가 명확하지 않을 것입니다 만드는 방법을 이런 식으로, 또는. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이미 처음 3 개 값을 반복하려는 경우이며, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; 은&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 여전히 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;in&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 발전기? &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대한 테스트로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;최대 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 까지 (또는 첫 번째 값 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;gt;= 1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 값을 반복하고 소비해야 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e8d8f8622da9a550c98e906b936d8f8b85cf5bed" translate="yes" xml:space="preserve">
          <source>If I try to implement my own range function, the result is not so nice!!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 자신의 범위 기능을 구현하려고하면 결과가 좋지 않습니다!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3dac25503e03a70a60169ed951c48d820421c349" translate="yes" xml:space="preserve">
          <source>If it were a generator, iterating it once would exhaust it:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생성기 인 경우 한 번 반복하면 생성기가 소진됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="83c538f2f822e7a43125ff80528cabb67fea4f23" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s not an &lt;code&gt;int&lt;/code&gt; object, it falls back to iterating until it finds the value (or not).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가 아닌 경우 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값을 찾을 때까지 반복으로 돌아갑니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="44076ad95c48b5e9c2dcd9b88d39a5e905cd2537" translate="yes" xml:space="preserve">
          <source>If you're wondering &lt;em&gt;why&lt;/em&gt; this optimization was added to &lt;code&gt;range.__contains__&lt;/code&gt;, and why it &lt;em&gt;wasn't&lt;/em&gt; added to &lt;code&gt;xrange.__contains__&lt;/code&gt; in 2.7:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신이 궁금해하는 경우 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;왜&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 최적화가 추가되었습니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range.__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 그리고 왜이 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되지 않은&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 추가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;xrange.__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 2.7 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b4cf964cb90fd408ff753f04baee72150b63cb07" translate="yes" xml:space="preserve">
          <source>In CPython, &lt;code&gt;range(...).__contains__&lt;/code&gt; (a method wrapper) will eventually delegate to a simple calculation which checks if the value can possibly be in the range.  The reason for the speed here is we're using &lt;strong&gt;mathematical reasoning about the bounds, rather than a direct iteration of the range object&lt;/strong&gt;.  To explain the logic used:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPython에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range(...).__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (메소드 래퍼)는 결국 값이 범위 내에있을 수 있는지 확인하는 간단한 계산에 위임합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 속도의 이유 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 range object의 직접 반복이 아닌 경계에 대한 수학적 추론을&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하기 때문&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용 된 논리를 설명하려면 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b00a3bb8d9a2f646611fb26f48964b92d0fd321f" translate="yes" xml:space="preserve">
          <source>It is my understanding that the &lt;code&gt;range()&lt;/code&gt; function, which is actually &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#typesseq-range&quot;&gt;an object type in Python 3&lt;/a&gt;, generates its contents on the fly, similar to a generator.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제로 &lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#typesseq-range&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬 3의 객체 유형 인 &lt;/font&gt;&lt;/a&gt;&lt;/font&gt; &lt;code&gt;range()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 생성기와 유사하게 즉시 내용을 생성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한다는 것을 이해합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65d1cc92eba4e60e365685591bc3fc1f75339cb1" translate="yes" xml:space="preserve">
          <source>It's all about a &lt;strong&gt;lazy approach&lt;/strong&gt; to the evaluation and some &lt;strong&gt;extra optimization&lt;/strong&gt; of &lt;code&gt;range&lt;/code&gt;.
Values in ranges don't need to be computed until real use, or even further due to extra optimization.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;평가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에 대한 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;게으른 접근법&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt; &lt;code&gt;range&lt;/code&gt; 의&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추가 최적화에&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 관한 것 &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제 사용하기 전까지 또는 추가 최적화로 인해 범위의 값을 계산할 필요가 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="150c915ae13a66a36795a4e06f9076b11d1d1c7f" translate="yes" xml:space="preserve">
          <source>Meanwhile:</source>
          <target state="translated">Meanwhile:</target>
        </trans-unit>
        <trans-unit id="10df5e461f8cfa6a8e166c6f79ac02779a67f782" translate="yes" xml:space="preserve">
          <source>Now, there's nothing that says that &lt;code&gt;Sequence.__contains__&lt;/code&gt; has to be constant time&amp;mdash;in fact, for obvious examples of sequences like &lt;code&gt;list&lt;/code&gt;, it isn't. But there's nothing that says it &lt;em&gt;can't&lt;/em&gt; be. And it's easier to implement &lt;code&gt;range.__contains__&lt;/code&gt; to just check it mathematically (&lt;code&gt;(val - start) % step&lt;/code&gt;, but with some extra complexity to deal with negative steps) than to actually generate and test all the values, so why &lt;em&gt;shouldn't&lt;/em&gt; it do it the better way?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Sequence.__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 일정한 시간이어야한다는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;말은 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사실 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;list&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 같은 시퀀스의 명백한 예 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 그렇지 않습니다. 그러나 할 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수 없다고&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 말하는 것은 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;없습니다&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . 그리고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제로 모든 값을 생성하고 테스트하는 것보다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수학적으로 ( &lt;/font&gt; &lt;code&gt;(val - start) % step&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이지만 부정적인 단계를 처리하는 데 약간의 복잡성을 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range.__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 구현하는 것이 더 쉽습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 그렇지 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;않아야&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이유 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 무엇입니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 나은 방법?&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="03b43e73dc591bf9be75b74a405717952ad97038" translate="yes" xml:space="preserve">
          <source>Originally, &lt;code&gt;xrange&lt;/code&gt; was a not-quite-sequence object. As &lt;a href=&quot;https://docs.python.org/3.1/library/stdtypes.html#range-type&quot;&gt;the 3.1 docs&lt;/a&gt; say:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;원래 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;xrange&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 quite-sequence 객체였습니다. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3.1/library/stdtypes.html#range-type&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3.1 문서에서&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 말한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것처럼 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="98a65da23a2131c6268042f227c779a2d7368022" translate="yes" xml:space="preserve">
          <source>Range objects have very little behavior: they only support indexing, iteration, and the &lt;code&gt;len&lt;/code&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;범위 객체는 동작이 거의 없습니다. 인덱싱, 반복 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;len&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;만 지원합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c1e3b7d0da32713ff7d538fd2353d1091656f5d" translate="yes" xml:space="preserve">
          <source>So at a minimum, your &lt;code&gt;range()&lt;/code&gt; object would do:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 최소한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체는 다음을 수행합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a50a44cb7780d4b5e344370f2e95352646788c4" translate="yes" xml:space="preserve">
          <source>So for &lt;code&gt;PyLong&lt;/code&gt; objects (which is &lt;code&gt;int&lt;/code&gt; in Python 3), it will use the &lt;code&gt;range_contains_long&lt;/code&gt; function to determine the result. And that function essentially checks if &lt;code&gt;ob&lt;/code&gt; is in the specified range (although it looks a bit more complex in C).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;PyLong&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체 ( &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 3 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )의 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range_contains_long&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수를 사용하여 결과를 결정합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고이 함수는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ob&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 지정된 범위에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있는지 확인합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(C에서는 조금 더 복잡해 보이지만).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="13ccd07fe761deb01119765e0985bae94aa6d280" translate="yes" xml:space="preserve">
          <source>So for explaining the logic here:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에 논리를 설명하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a24a5619d711b68a02ae65110bc362ca47fe6316" translate="yes" xml:space="preserve">
          <source>So, there were two chances to get this optimization backported to 2.7, but they were both rejected.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서이 최적화를 2.7로 백 포트 할 수있는 두 가지 기회가 있었지만 둘 다 거부되었습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5ff57f4185e884322f43c9c59da60f12f41285ea" translate="yes" xml:space="preserve">
          <source>TL;DR</source>
          <target state="translated">TL;DR</target>
        </trans-unit>
        <trans-unit id="ee61df3565aedbde8009e0df74d43abf78f5d079" translate="yes" xml:space="preserve">
          <source>Take an example, &lt;strong&gt;997 is in range(4, 1000, 3)&lt;/strong&gt; because:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;997의 범위는 (4, 1000, 3)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="544102d6025f36d496d237ff491d7be66f116af3" translate="yes" xml:space="preserve">
          <source>The &quot;meat&quot; of the idea is mentioned in &lt;a href=&quot;https://github.com/python/cpython/blob/9a5bacfecdf6798e960d1447af11d4cfa8d4dc32/Objects/rangeobject.c#L402&quot;&gt;the line&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아이디어의 &quot;고기&quot;는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/python/cpython/blob/9a5bacfecdf6798e960d1447af11d4cfa8d4dc32/Objects/rangeobject.c#L402&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 줄에&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 언급되어 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a38ca8b243e9828bd509f775fcac51aeee05f61" translate="yes" xml:space="preserve">
          <source>The Python 3 &lt;code&gt;range()&lt;/code&gt; object doesn't produce numbers immediately; it is a &lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html#collections.abc.Sequence&quot;&gt;smart sequence object&lt;/a&gt; that produces numbers &lt;em&gt;on demand&lt;/em&gt;. All it contains is your start, stop and step values, then as you iterate over the object the next integer is calculated each iteration.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 3 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체는 숫자를 즉시 ​​생성하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주문형&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 숫자를 생성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html#collections.abc.Sequence&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스마트 시퀀스 객체&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에는 시작, 중지 및 단계 값만 포함되며, 객체를 반복 할 때마다 다음 정수가 반복마다 계산됩니다.&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc41fb23825acbcea5a60f6310fc110729b01018" translate="yes" xml:space="preserve">
          <source>The advantage of the &lt;code&gt;range&lt;/code&gt; type over a regular &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;tuple&lt;/code&gt; is that a range object will always take the same (small) amount of memory, no matter the size of the range it represents (as it only stores the &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt; and &lt;code&gt;step&lt;/code&gt; values, calculating individual items and subranges as needed).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반 &lt;/font&gt; &lt;code&gt;list&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 비해 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 유형 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 장점은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;범위 객체가 나타내는 범위의 크기에 관계없이 ( &lt;/font&gt; &lt;code&gt;start&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt; &lt;code&gt;stop&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt; &lt;code&gt;step&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 값만 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;저장하므로) 항상 동일한 (소량) 메모리를 사용한다는 것입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;필요에 따라 개별 항목 및 하위 범위를 계산합니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c152be4c00832582d0bc6b80de516f2d15bc691e" translate="yes" xml:space="preserve">
          <source>The difference between a &lt;code&gt;range&lt;/code&gt; and a &lt;code&gt;list&lt;/code&gt; is that a &lt;code&gt;range&lt;/code&gt; is a &lt;em&gt;lazy&lt;/em&gt; or &lt;em&gt;dynamic&lt;/em&gt; sequence; it doesn't remember all of its values, it just remembers its &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt;, and &lt;code&gt;step&lt;/code&gt;, and creates the values on demand on &lt;code&gt;__getitem__&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;차이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;list&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; A는 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;지연&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동적&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 서열; 모든 값을 기억하지는 않으며 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;start&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;stop&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;step&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 만 기억하고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__getitem__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 요청시 값을 만듭니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="61b656612cb8874b5f17c7652229d53f5e4359c1" translate="yes" xml:space="preserve">
          <source>The full C code is included below, which is a bit more verbose because of memory management and reference counting details, but the basic idea is there:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전체 C 코드가 아래에 포함되어 있는데, 메모리 관리 및 참조 횟수 세부 사항으로 인해 좀 더 장황하지만 기본 아이디어는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="08d0cbcfed5f11130b318c07b960395b413651cb" translate="yes" xml:space="preserve">
          <source>The fundamental misunderstanding here is in thinking that &lt;code&gt;range&lt;/code&gt; is a generator. It's not. In fact, it's not any kind of iterator.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에서 근본적으로 오해하는 것은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 발전기 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;라고 생각하는 것 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사실, 그것은 어떤 종류의 반복자가 아닙니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="83617cb12472e960e469717ee64374c98d64bd56" translate="yes" xml:space="preserve">
          <source>The object also implements the &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;object.__contains__&lt;/code&gt; hook&lt;/a&gt;, and &lt;em&gt;calculates&lt;/em&gt; if your number is part of its range. Calculating is a (near) constant time operation &lt;sup&gt;*&lt;/sup&gt;. There is never a need to scan through all possible integers in the range.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;개체는 또한 구현 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;object.__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 훅을&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하고, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;계산&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 전화 번호가 범위의 일부인 경우. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;계산은 (거의) 일정 시간 연산 &lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;*&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;범위 내에서 가능한 모든 정수를 스캔 할 필요는 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31348d04ed7bbac1c6a4506714c4344fd7bc3614" translate="yes" xml:space="preserve">
          <source>The object returned by &lt;code&gt;range()&lt;/code&gt; is actually a &lt;code&gt;range&lt;/code&gt; object. This object implements the iterator interface so you can iterate over its values sequentially, just like a generator, list, or tuple.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;range()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의해 반환 된 객체 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 실제로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 객체는 반복자 인터페이스를 구현하므로 생성기, 목록 또는 튜플과 같이 값을 순차적으로 반복 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bbb21a7ab186d01fa518f7b44cbfb3115da14f42" translate="yes" xml:space="preserve">
          <source>The other answers explained it well already, but I'd like to offer another experiment illustrating the nature of range objects:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 답변은 이미 잘 설명했지만 범위 객체의 특성을 보여주는 다른 실험을 제공하고 싶습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1071a62c895e03edadab6693bdef7a16b251828f" translate="yes" xml:space="preserve">
          <source>The reason that &lt;strong&gt;range()&lt;/strong&gt; function is so fast in Python3 is that here we use mathematical reasoning for the bounds, rather than a direct iteration of the range object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 이유 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;범위 ()&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수가 Python3에 너무 빨리 여기에 우리가 오히려 범위 개체의 직접적인 반복보다는 경계에 대한 수학적 추론을 사용한다는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bcca856511ab8783293c769078d3b9cb270779d2" translate="yes" xml:space="preserve">
          <source>The whole logic could be translated to pseudo-Python like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전체 논리는 다음과 같이 의사 파이썬으로 변환 될 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9ee73e6442aa9fb56321451eef9d8353f28db34c" translate="yes" xml:space="preserve">
          <source>Then, as part of implementing the &lt;a href=&quot;https://www.python.org/dev/peps/pep-3119/&quot;&gt;Abstract Base Classes&lt;/a&gt; PEP, it was important to figure out which builtin types should be marked as implementing which ABCs, and &lt;code&gt;xrange&lt;/code&gt;/&lt;code&gt;range&lt;/code&gt; claimed to implement &lt;code&gt;collections.Sequence&lt;/code&gt;, even though it still only handled the same &quot;very little behavior&quot;. Nobody noticed that problem until &lt;a href=&quot;http://bugs.python.org/issue9213&quot;&gt;issue 9213&lt;/a&gt;. The patch for that issue not only added &lt;code&gt;index&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; to 3.2's &lt;code&gt;range&lt;/code&gt;, it also re-worked the optimized &lt;code&gt;__contains__&lt;/code&gt; (which shares the same math with &lt;code&gt;index&lt;/code&gt;, and is directly used by &lt;code&gt;count&lt;/code&gt;).&lt;sup&gt;**&lt;/sup&gt;&lt;a href=&quot;https://github.com/python/cpython/commit/8ee11f7e599b2c5b4de39047bf11bde2246e968f&quot;&gt;This change&lt;/a&gt; went in for 3.2 as well, and was not backported to 2.x, because &quot;it's a bugfix that adds new methods&quot;. (At this point, 2.7 was already past rc status.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.python.org/dev/peps/pep-3119/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Abstract Base Classes&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; PEP &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 구현하는 과정 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 어떤 내장 유형이 어떤 ABC를 구현하는 것으로 표시되어야하는지, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;xrange&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; 가&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;collections.Sequence&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 구현한다고 주장한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것으로 파악해야 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;했습니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . 작은 행동 &quot;. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://bugs.python.org/issue9213&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;9213 호&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 까지는 그 문제를 눈치 채지 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;못했습니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . 이 문제에 대한 패치는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;index&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;count&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 3.2의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 추가했을뿐만 아니라 최적화 된 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;index&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 동일한 수학을 공유하고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;count&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의해 직접 사용됨 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;)를 재 작업했습니다. &lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;** &lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;a href=&quot;https://github.com/python/cpython/commit/8ee11f7e599b2c5b4de39047bf11bde2246e968f&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이번 변경&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;새로운 방법을 추가하는 버그 수정&quot;이기 때문에 3.2에도 적용되었으며 2.x로 백 포트되지 않았습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(이 시점에서 2.7은 이미 rc 상태를 지났습니다.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc653234824089c74310215b579f597e087ca140" translate="yes" xml:space="preserve">
          <source>This being the case, I would have expected the following line to take an inordinate amount of time, because in order to determine whether 1 quadrillion is in the range, a quadrillion values would have to be generated:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 경우 다음 줄이 시간이 많이 걸릴 것으로 예상했을 것입니다 .1 조조가 범위에 있는지 확인하려면 조조 값이 생성되어야하기 때문입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="601964a0af5fc329286c43494d1b93b4a7ca99d7" translate="yes" xml:space="preserve">
          <source>This is still missing several things that a real &lt;code&gt;range()&lt;/code&gt; supports (such as the &lt;code&gt;.index()&lt;/code&gt; or &lt;code&gt;.count()&lt;/code&gt; methods, hashing, equality testing, or slicing), but should give you an idea.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 여전히 ​​실제 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 지원 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 몇 가지 사항 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(예 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.index()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.count()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메서드, 해싱, 동등성 테스트 또는 슬라이싱) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;누락&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 되었지만 아이디어를 제공해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f80c4cb0679e53a949c32b0ac190421077750670" translate="yes" xml:space="preserve">
          <source>This means it has to follow all the rules of being a sequence:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉, 시퀀스의 모든 규칙을 따라야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d2ad888ba3b822ce805f3748907ecbf9b1258899" translate="yes" xml:space="preserve">
          <source>This wasn't quite true; an &lt;code&gt;xrange&lt;/code&gt; object actually supported a few other things that come automatically with indexing and &lt;code&gt;len&lt;/code&gt;,&lt;sup&gt;*&lt;/sup&gt; including &lt;code&gt;__contains__&lt;/code&gt; (via linear search). But nobody thought it was worth making them full sequences at the time.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 사실이 아니었다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;xrange&lt;/code&gt; 의&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체는 실제로 색인을 자동으로 온 몇 가지 다른 일을 지원 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;len&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;*&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 포함 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (선형 검색을 통해). 그러나 당시에는 전체 시퀀스를 만들 가치가 있다고 생각한 사람은 아무도 없었습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8690b149d8e8cfa8cd1257005457b1463ffe31d1" translate="yes" xml:space="preserve">
          <source>To add to Martijn&amp;rsquo;s answer, this is the relevant part of &lt;a href=&quot;https://hg.python.org/cpython/file/7f8cd879687b/Objects/rangeobject.c#l415&quot;&gt;the source&lt;/a&gt; (in C, as the range object is written in native code):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Martijn의 답변에 추가하기 위해 이것은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/7f8cd879687b/Objects/rangeobject.c#l415&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;소스&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 관련 부분입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(C에서 범위 객체가 원시 코드로 작성 됨).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="be3b0b42f6680c00507694d72d1f7022605c21a0" translate="yes" xml:space="preserve">
          <source>Try &lt;code&gt;x-1 in (i for i in range(x))&lt;/code&gt; for large &lt;code&gt;x&lt;/code&gt; values, which uses a generator comprehension to avoid invoking the &lt;code&gt;range.__contains__&lt;/code&gt; optimisation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;큰 &lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 값의 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x-1 in (i for i in range(x))&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;시도해보십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt; &lt;code&gt;range.__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 호출하지 않도록 생성기 이해를 사용합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e813db87426b62a99cf3e4be77476c090bb67049" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://github.com/python/cpython/blob/cff677abe1823900e954592035a170eb67840971/Objects/rangeobject.c#L364-L413&quot;&gt;source&lt;/a&gt;, Luke!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/python/cpython/blob/cff677abe1823900e954592035a170eb67840971/Objects/rangeobject.c#L364-L413&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;소스를&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, Luke!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="06802975cefff52a425e022f7da8a89c6ee6eaa3" translate="yes" xml:space="preserve">
          <source>What &lt;code&gt;range&lt;/code&gt; actually is, is a sequence, just like a list. You can even test this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어떤 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 실제로 것은, 단지 목록과 같은 순서이다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것을 테스트 할 수도 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a6500d0776cd51af24cdc0e92b78183f446cff7" translate="yes" xml:space="preserve">
          <source>What is the &lt;code&gt;range()&lt;/code&gt; object doing under the hood that makes it so fast?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;후드 아래 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 무엇을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;빠르게 수행합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2cd6a3c216b35403a6bc87531634cf4fdf33e56f" translate="yes" xml:space="preserve">
          <source>Why is “1000000000000000 in range(1000000000000001)” so fast in Python 3</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬 3에서 왜 &quot;1000000000000000 범위 (1000000000000001)&quot;가 그렇게 빠릅니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bb3d73e98cfd7f2a1c63112bb0a680f29ffcf196" translate="yes" xml:space="preserve">
          <source>You can tell this pretty easily:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것을 쉽게 알 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="270480ae2ce563f829cb6203b6308055d57b20ff" translate="yes" xml:space="preserve">
          <source>You should be aware of an implementation detail but should not be relied upon, because this may change in the future.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;구현 세부 사항을 알고 있어야하지만 나중에 변경 될 수 있으므로 의존해서는 안됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b94da3599274cc93c9ee4f4d4dce4fea875b2503" translate="yes" xml:space="preserve">
          <source>but:</source>
          <target state="translated">but:</target>
        </trans-unit>
        <trans-unit id="2a6189afc04320880bd261c8700c56679f1e8e2d" translate="yes" xml:space="preserve">
          <source>due to optimization - it's easy to compare given integer just with min and max of range.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;최적화로 인해-주어진 정수를 최소 및 최대 범위와 쉽게 비교할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
