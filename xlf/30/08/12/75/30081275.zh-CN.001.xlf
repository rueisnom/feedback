<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/30081275">
    <body>
      <group id="30081275">
        <trans-unit id="b9b22b4d2ed8c1f23338279dd7313cb0a5ce7348" translate="yes" xml:space="preserve">
          <source>(As a side note, if you &lt;code&gt;print(iter(a))&lt;/code&gt;, you'll notice that &lt;code&gt;range&lt;/code&gt; uses the same &lt;code&gt;listiterator&lt;/code&gt; type as &lt;code&gt;list&lt;/code&gt;. How does that work? A &lt;code&gt;listiterator&lt;/code&gt; doesn't use anything special about &lt;code&gt;list&lt;/code&gt; except for the fact that it provides a C implementation of &lt;code&gt;__getitem__&lt;/code&gt;, so it works fine for &lt;code&gt;range&lt;/code&gt; too.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（作为一个方面说明，如果你&lt;/font&gt;&lt;/font&gt; &lt;code&gt;print(iter(a))&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;你会发现，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用相同&lt;/font&gt;&lt;/font&gt; &lt;code&gt;listiterator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类型&lt;/font&gt;&lt;/font&gt; &lt;code&gt;list&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。如何运作的？一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;listiterator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;没有使用什么特别的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;list&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;除了事实它提供&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__getitem__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的C实现&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，因此对于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;也&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以正常工作&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cab6b967b51f57a6e23db3d5719ae072b7a200b8" translate="yes" xml:space="preserve">
          <source>(in this case, there is no optimization in &lt;code&gt;range&lt;/code&gt;, so if python receives unexpected Decimal, python will compare all numbers)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（在这种情况下，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; 中&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;没有优化&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，因此，如果python收到意外的Decimal，则python将比较所有数字）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a1c1856b0e6df956f9239d9be0cfb56946144646" translate="yes" xml:space="preserve">
          <source>* &lt;em&gt;Near&lt;/em&gt; constant time because Python integers are unbounded and so math operations also grow in time as N grows, making this a O(log N) operation. Since it&amp;rsquo;s all executed in optimised C code and Python stores integer values in 30-bit chunks, you&amp;rsquo;d run out of memory before you saw any performance impact due to the size of the integers involved here.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;* &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于Python整数是无界的，所以时间&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;接近&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;恒定，因此数学运算也随着N的增长而及时增长，这使其成为O（log N）运算。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于所有操作均在优化的C代码中执行，并且Python将整数值存储在30位块中，因此，由于此处涉及的整数大小，在看到任何性能影响之前，您将耗尽内存。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cb89a15dd0f7ba4f8c7f262b3dfc34fcd8cb68c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sanan-fataliyev/rangesharp&quot;&gt;Here is&lt;/a&gt; implementation in &lt;code&gt;C#&lt;/code&gt;. You can see how &lt;code&gt;Contains&lt;/code&gt; works in O(1) time.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sanan-fataliyev/rangesharp&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;C#&lt;/code&gt; 中的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实现&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以看到&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Contains&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如何&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在O（1）时间内工作。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b26edc99bdb3100bb8ac0704029fc12cc9d2e30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/a/30081318/2437514&quot;&gt;Martijn Pieters' answer&lt;/a&gt; was chosen for its completeness, but also see &lt;a href=&quot;https://stackoverflow.com/a/30081894/2437514&quot;&gt;abarnert's first answer&lt;/a&gt; for a good discussion of what it means for &lt;code&gt;range&lt;/code&gt; to be a full-fledged &lt;em&gt;sequence&lt;/em&gt; in Python 3, and some information/warning regarding potential inconsistency for &lt;code&gt;__contains__&lt;/code&gt; function optimization across Python implementations. &lt;a href=&quot;https://stackoverflow.com/a/30088140/2437514&quot;&gt;abarnert's other answer&lt;/a&gt; goes into some more detail and provides links for those interested in the history behind the optimization in Python 3 (and lack of optimization of &lt;code&gt;xrange&lt;/code&gt; in Python 2). Answers &lt;a href=&quot;https://stackoverflow.com/a/30081467/2437514&quot;&gt;by poke&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/a/30081470/2437514&quot;&gt;by wim&lt;/a&gt; provide the relevant C source code and explanations for those who are interested.</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/a/30081318/2437514&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;选择Martijn Pieters的答案&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是因为它的完整性，但也可以看到&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/30081894/2437514&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;abarnert的第一个答案&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它很好地讨论了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在Python 3中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;成为完整&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;序列的&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;含义&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，以及有关&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数优化&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可能存在不一致的一些信息/警告。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python实现。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/30088140/2437514&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;abarnert的其他答案&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更加详细，并为那些对Python 3优化背后的历史（以及&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 2中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;缺少&lt;/font&gt;&lt;/font&gt; &lt;code&gt;xrange&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;优化）感兴趣的人提供了链接&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/30081467/2437514&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;poke&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/30081470/2437514&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;wim的&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;答案&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;感兴趣的人&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;提供了相关的C源代码和说明。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f78814a315ab864b1b80e081629a4f69c3fe24b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(994 - 4) % 2 == 0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(994 - 4) % 2 == 0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7e7d2b3229c821f60be7a3a4b2e4681f2e40cf23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;4 &amp;lt;= 994 &amp;lt; 1000&lt;/code&gt;, and</source>
          <target state="translated">&lt;code&gt;4 &amp;lt;= 994 &amp;lt; 1000&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，和&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e78ad89e688341f68323f2517f6fbbfa13ac2b2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Decimal(sys.maxsize) in range(sys.maxsize)&lt;/code&gt;&lt;em&gt;is pretty slow&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;Decimal(sys.maxsize) in range(sys.maxsize)&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相当慢&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b5d853fcfb0167ad6daeca7539aa545c17c9305" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sys.maxsize in range(sys.maxsize)&lt;/code&gt;&lt;em&gt;is pretty fast&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;sys.maxsize in range(sys.maxsize)&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相当快&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b2c3b48469c0535dee2f2d0cd0188032160e71fe" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;* In fact, you even get iteration for free with indexing alone, but &lt;a href=&quot;https://docs.python.org/2/whatsnew/2.3.html#optimizations&quot;&gt;in 2.3&lt;/a&gt; &lt;code&gt;xrange&lt;/code&gt; objects got a custom iterator.&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;*实际上，您甚至可以单独使用索引免费获得迭代，但是&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/whatsnew/2.3.html#optimizations&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在2.3 &lt;/font&gt;&lt;/font&gt;&lt;/a&gt; &lt;code&gt;xrange&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象中获得了自定义迭代器。&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="cdce64bc8e9dd1bea76793d3f90013d16a5f4d74" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;** The first version actually reimplemented it, and got the details wrong&amp;mdash;e.g., it would give you &lt;code&gt;MyIntSubclass(2) in range(5) == False&lt;/code&gt;. But Daniel Stutzbach's updated version of the patch restored most of the previous code, including the fallback to the generic, slow &lt;code&gt;_PySequence_IterSearch&lt;/code&gt; that pre-3.2 &lt;code&gt;range.__contains__&lt;/code&gt; was implicitly using when the optimization doesn't apply.&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;**第一个版本实际上重新实现了它，并弄错了详细信息，例如，它将为您&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyIntSubclass(2) in range(5) == False&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但丹尼尔Stutzbach的更新补丁的版本恢复了之前的大部分代码，包括退回到通用，慢&lt;/font&gt;&lt;/font&gt; &lt;code&gt;_PySequence_IterSearch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是预先3.2 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range.__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是隐含当使用优化不适用。&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="2638dcd8f48aa633a6b79a0374de056acacfe325" translate="yes" xml:space="preserve">
          <source>As a final note - look at the &lt;code&gt;range_contains&lt;/code&gt; function at the bottom of the code snippet.  If the exact type check fails then we don't use the clever algorithm described, instead falling back to a dumb iteration search of the range using &lt;code&gt;_PySequence_IterSearch&lt;/code&gt;!  You can check this behaviour in the interpreter (I'm using v3.5.0 here):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最后一点-查看&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代码段底部&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;range_contains&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果确切的类型检查失败，那么我们将不使用所描述的巧妙算法，而是使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;_PySequence_IterSearch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;退回到该范围的愚蠢迭代搜索&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以在解释器中检查此行为（我在这里使用v3.5.0）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0b23f97443a02aceb39ac7c77d2d216d2da39b36" translate="yes" xml:space="preserve">
          <source>As you can see,  a range object is an object that remembers its range and can be used many times (even while iterating over it), not just a one-time generator.</source>
          <target state="translated">正如你所看到的,范围对象是一个能记住它的范围的对象,可以多次使用(甚至在迭代的时候也可以使用),而不仅仅是一次性的生成器。</target>
        </trans-unit>
        <trans-unit id="3a95600cd93ae1ccafd3b04e7616d2c565419b71" translate="yes" xml:space="preserve">
          <source>But it &lt;strong&gt;also&lt;/strong&gt; implements the &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__&lt;/code&gt;&lt;/a&gt; interface which is actually what gets called when an object appears on the right hand side of the &lt;code&gt;in&lt;/code&gt; operator. The &lt;code&gt;__contains__()&lt;/code&gt; method returns a &lt;code&gt;bool&lt;/code&gt; of whether or not the item on the left-hand-side of the &lt;code&gt;in&lt;/code&gt; is in the object. Since &lt;code&gt;range&lt;/code&gt; objects know their bounds and stride, this is very easy to implement in O(1).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但它&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;也&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实现了&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;__contains__&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;接口实际上是当一个物体上的右侧会出现什么被调用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;in&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运营商。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所述&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__contains__()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法返回一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;bool&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是否该项目上的左手侧&lt;/font&gt;&lt;/font&gt; &lt;code&gt;in&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是对象。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象知道其边界和步幅，因此在O（1）中非常容易实现。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="354bb960779420931884b8d4c1cea2a6f1c3df0d" translate="yes" xml:space="preserve">
          <source>But there doesn't seem to be anything in the language that &lt;em&gt;guarantees&lt;/em&gt; this will happen. As Ashwini Chaudhari points out, if you give it a non-integral value, instead of converting to integer and doing the mathematical test, it will fall back to iterating all the values and comparing them one by one. And just because CPython 3.2+ and PyPy 3.x versions happen to contain this optimization, and it's an obvious good idea and easy to do, there's no reason that IronPython or NewKickAssPython 3.x couldn't leave it out. (And in fact CPython 3.0-3.1 &lt;em&gt;didn't&lt;/em&gt; include it.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是似乎没有什么语言可以&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;保证&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;会发生这种情况。正如Ashwini Chaudhari指出的那样，如果您给它提供一个非整数值，而不是转换为整数并进行数学测试，它将落到对所有值进行迭代并逐一进行比较的过程中。不仅因为CPython 3.2+和PyPy 3.x版本恰好包含此优化，而且这是一个显而易见的好主意且易于实现，所以Iron Iron或NewKickAssPython 3.x没有理由不能放弃它。 （实际上，CPython 3.0-3.1 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并未&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;包含它。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fea61079d1346001a34d76f38bb84b60b59657b1" translate="yes" xml:space="preserve">
          <source>By the way, your integer is not such big, consider &lt;code&gt;sys.maxsize&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;顺便说一句，您的整数不是那么大，请考虑&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sys.maxsize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70848b1d55a2bbb145ad97f3b3d32690f125d149" translate="yes" xml:space="preserve">
          <source>Check that the number is between &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;stop&lt;/code&gt;, and</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;检查数字是否在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;start&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;stop&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之间&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，以及&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8155d46fff6fff8ac0f63ce2238162827cbc13eb" translate="yes" xml:space="preserve">
          <source>Check that the stride value doesn't &quot;step over&quot; our number.</source>
          <target state="translated">检查跨度值不会 &quot;越过 &quot;我们的数字。</target>
        </trans-unit>
        <trans-unit id="62c382295c8d2ae321b85e68904021c8f8cf0476" translate="yes" xml:space="preserve">
          <source>Check whether the number is between the start and stop.</source>
          <target state="translated">检查号码是否在起止点之间。</target>
        </trans-unit>
        <trans-unit id="4e72e1e36d759a8297f5b95f55c23fd2b3d305df" translate="yes" xml:space="preserve">
          <source>Check whether the step precision value doesn't go over our number.</source>
          <target state="translated">检查步长精度值是否没有超过我们的数字。</target>
        </trans-unit>
        <trans-unit id="8270aff0f6a02aa25cdf9d7ca6abbd5b839d820f" translate="yes" xml:space="preserve">
          <source>Due to optimization, it is very easy to compare given integers just with min and max range.</source>
          <target state="translated">由于优化,只用最小和最大的范围来比较给定的整数非常容易。</target>
        </trans-unit>
        <trans-unit id="5c995c07b90a86b97ac69587f4802a9d042ff6c0" translate="yes" xml:space="preserve">
          <source>First, as Ashwini Chaudhary discovered, &lt;a href=&quot;http://bugs.python.org/issue1766304&quot;&gt;issue 1766304&lt;/a&gt; was opened explicitly to optimize &lt;code&gt;[x]range.__contains__&lt;/code&gt;. A patch for this was &lt;a href=&quot;https://hg.python.org/cpython/rev/d599a3f2e72d/&quot;&gt;accepted and checked in for 3.2&lt;/a&gt;, but not backported to 2.7 because &quot;xrange has behaved like this for such a long time that I don't see what it buys us to commit the patch this late.&quot; (2.7 was nearly out at that point.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;首先，正如Ashwini Chaudhary发现的那样，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;明确打开了&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://bugs.python.org/issue1766304&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1766304&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;号&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;发行版&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，以优化&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[x]range.__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/rev/d599a3f2e72d/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;接受&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;了此修补程序&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并签入了3.2版本&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但并未回迁到2.7版本，因为&amp;ldquo; xrange表现得如此之久，以至于我看不到它为什么让我们提交最新的修补程序。&amp;rdquo; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（当时2.7快要淘汰了。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d699f1d34979fbbb5a50dc1c8940119ff539063b" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;994&lt;/code&gt; is in &lt;code&gt;range(4, 1000, 2)&lt;/code&gt; because:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;994&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;range(4, 1000, 2)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;4，1000，2 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）中，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因为：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49c74cdf9c17b14fec7769c164befbfe07a9f1d7" translate="yes" xml:space="preserve">
          <source>From the &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#range&quot;&gt;&lt;code&gt;range()&lt;/code&gt; object documentation&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#range&quot;&gt; &lt;code&gt;range()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象文档中&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d523d2385848293ca6eb84c04316d4acdb288887" translate="yes" xml:space="preserve">
          <source>Furthermore: it seems that no matter how many zeroes I add on, the calculation more or less takes the same amount of time (basically instantaneous).</source>
          <target state="translated">另外:似乎无论我加多少个零,计算时或多或少都要花同样的时间(基本上是瞬时的)。</target>
        </trans-unit>
        <trans-unit id="ec8802e5d713691e4575c0beaf2b9286edfbd679" translate="yes" xml:space="preserve">
          <source>I also simplified the &lt;code&gt;__contains__&lt;/code&gt; implementation to only focus on integer tests; if you give a real &lt;code&gt;range()&lt;/code&gt; object a non-integer value (including subclasses of &lt;code&gt;int&lt;/code&gt;), a slow scan is initiated to see if there is a match, just as if you use a containment test against a list of all the contained values. This was done to continue to support other numeric types that just happen to support equality testing with integers but are not expected to support integer arithmetic as well. See the original &lt;a href=&quot;http://bugs.python.org/issue1766304&quot;&gt;Python issue&lt;/a&gt; that implemented the containment test.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我还简化了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实现，使其仅专注于整数测试。如果为实的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;range()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象提供非整数值（包括&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;子类&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;），则会启动慢速扫描以查看是否存在匹配项，就像您对所有包含的值的列表使用包含测试一样。这样做是为了继续支持其他数字类型，这些数字类型恰好支持整数的相等性测试，但也不希望也支持整数算术。请参阅&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实现收容测试&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的原始&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://bugs.python.org/issue1766304&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python问题&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac23594d95b84e12f3bb123824565d85f7fb54e0" translate="yes" xml:space="preserve">
          <source>I have also tried things like this, but the calculation is still almost instant:</source>
          <target state="translated">像这样的事情我也试过,但计算起来还是几乎是瞬间的事。</target>
        </trans-unit>
        <trans-unit id="5d248d1254edc5b3006b7fdce45c93f46ab3c932" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;range&lt;/code&gt; actually were a generator, like &lt;code&gt;my_crappy_range&lt;/code&gt;, then it wouldn't make sense to test &lt;code&gt;__contains__&lt;/code&gt; this way, or at least the way it makes sense wouldn't be obvious. If you'd already iterated the first 3 values, is &lt;code&gt;1&lt;/code&gt; still &lt;code&gt;in&lt;/code&gt; the generator? Should testing for &lt;code&gt;1&lt;/code&gt; cause it to iterate and consume all the values up to &lt;code&gt;1&lt;/code&gt; (or up to the first value &lt;code&gt;&amp;gt;= 1&lt;/code&gt;)?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果&lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实际上是一个生成器，例如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;my_crappy_range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，那么以&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这种方式&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;测试&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;毫无意义&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，或者至少它的意义并不明显。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果你已经重复了前3倍的值是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;还是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;in&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;发电机？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;测试&lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是否应该&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使其迭代并消耗所有值直到&lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（或直到第一个值&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;gt;= 1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e8d8f8622da9a550c98e906b936d8f8b85cf5bed" translate="yes" xml:space="preserve">
          <source>If I try to implement my own range function, the result is not so nice!!</source>
          <target state="translated">如果我尝试着实现自己的范围函数,结果就不是那么好了!</target>
        </trans-unit>
        <trans-unit id="3dac25503e03a70a60169ed951c48d820421c349" translate="yes" xml:space="preserve">
          <source>If it were a generator, iterating it once would exhaust it:</source>
          <target state="translated">如果它是一台发电机,重复一次就会耗尽它。</target>
        </trans-unit>
        <trans-unit id="83c538f2f822e7a43125ff80528cabb67fea4f23" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s not an &lt;code&gt;int&lt;/code&gt; object, it falls back to iterating until it finds the value (or not).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果它不是一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象，它将退回到迭代，直到找到值为止。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="44076ad95c48b5e9c2dcd9b88d39a5e905cd2537" translate="yes" xml:space="preserve">
          <source>If you're wondering &lt;em&gt;why&lt;/em&gt; this optimization was added to &lt;code&gt;range.__contains__&lt;/code&gt;, and why it &lt;em&gt;wasn't&lt;/em&gt; added to &lt;code&gt;xrange.__contains__&lt;/code&gt; in 2.7:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您想知道&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为什么&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将此优化添加到&lt;/font&gt;&lt;/font&gt; &lt;code&gt;range.__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，为什么&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;其&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;添加到&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2.7中的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;xrange.__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b4cf964cb90fd408ff753f04baee72150b63cb07" translate="yes" xml:space="preserve">
          <source>In CPython, &lt;code&gt;range(...).__contains__&lt;/code&gt; (a method wrapper) will eventually delegate to a simple calculation which checks if the value can possibly be in the range.  The reason for the speed here is we're using &lt;strong&gt;mathematical reasoning about the bounds, rather than a direct iteration of the range object&lt;/strong&gt;.  To explain the logic used:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在CPython中，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;range(...).__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（方法包装器）最终将委托给一个简单的计算，该计算检查该值是否可能在范围内。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;速度之所以如此，是因为我们使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关于边界的数学推理，而不是range对象的直接迭代&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;解释所使用的逻辑：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b00a3bb8d9a2f646611fb26f48964b92d0fd321f" translate="yes" xml:space="preserve">
          <source>It is my understanding that the &lt;code&gt;range()&lt;/code&gt; function, which is actually &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#typesseq-range&quot;&gt;an object type in Python 3&lt;/a&gt;, generates its contents on the fly, similar to a generator.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;据我了解，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;range()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数实际上&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#typesseq-range&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是Python 3中的一种对象类型&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它会&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;像&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;生成器一样动态生成其内容。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65d1cc92eba4e60e365685591bc3fc1f75339cb1" translate="yes" xml:space="preserve">
          <source>It's all about a &lt;strong&gt;lazy approach&lt;/strong&gt; to the evaluation and some &lt;strong&gt;extra optimization&lt;/strong&gt; of &lt;code&gt;range&lt;/code&gt;.
Values in ranges don't need to be computed until real use, or even further due to extra optimization.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是关于一个&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;偷懒的办法&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来评估和一些&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;额外的优化&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在实际使用之前，甚至由于额外的优化，甚至不需要进一步计算范围内的值。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="150c915ae13a66a36795a4e06f9076b11d1d1c7f" translate="yes" xml:space="preserve">
          <source>Meanwhile:</source>
          <target state="translated">Meanwhile:</target>
        </trans-unit>
        <trans-unit id="10df5e461f8cfa6a8e166c6f79ac02779a67f782" translate="yes" xml:space="preserve">
          <source>Now, there's nothing that says that &lt;code&gt;Sequence.__contains__&lt;/code&gt; has to be constant time&amp;mdash;in fact, for obvious examples of sequences like &lt;code&gt;list&lt;/code&gt;, it isn't. But there's nothing that says it &lt;em&gt;can't&lt;/em&gt; be. And it's easier to implement &lt;code&gt;range.__contains__&lt;/code&gt; to just check it mathematically (&lt;code&gt;(val - start) % step&lt;/code&gt;, but with some extra complexity to deal with negative steps) than to actually generate and test all the values, so why &lt;em&gt;shouldn't&lt;/em&gt; it do it the better way?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，没有什么可以说&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Sequence.__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必须是恒定时间的-实际上，对于诸如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;list&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之类的序列的明显示例&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，事实并非如此。但是没有什么可以说是&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不可能的&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。而且，实现&lt;/font&gt;&lt;/font&gt; &lt;code&gt;range.__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;只需对其进行数学检查（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(val - start) % step&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但要处理负步则要复杂一些）比实际生成和测试所有值&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更容易&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，所以为什么&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这样做呢？更好的方法吗？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="03b43e73dc591bf9be75b74a405717952ad97038" translate="yes" xml:space="preserve">
          <source>Originally, &lt;code&gt;xrange&lt;/code&gt; was a not-quite-sequence object. As &lt;a href=&quot;https://docs.python.org/3.1/library/stdtypes.html#range-type&quot;&gt;the 3.1 docs&lt;/a&gt; say:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;xrange&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是一个非相当序列的对象。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正如&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3.1/library/stdtypes.html#range-type&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3.1文档&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所说：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="98a65da23a2131c6268042f227c779a2d7368022" translate="yes" xml:space="preserve">
          <source>Range objects have very little behavior: they only support indexing, iteration, and the &lt;code&gt;len&lt;/code&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;范围对象的行为很少：它们仅支持索引，迭代和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;len&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c1e3b7d0da32713ff7d538fd2353d1091656f5d" translate="yes" xml:space="preserve">
          <source>So at a minimum, your &lt;code&gt;range()&lt;/code&gt; object would do:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，至少，您的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;range()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象可以：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a50a44cb7780d4b5e344370f2e95352646788c4" translate="yes" xml:space="preserve">
          <source>So for &lt;code&gt;PyLong&lt;/code&gt; objects (which is &lt;code&gt;int&lt;/code&gt; in Python 3), it will use the &lt;code&gt;range_contains_long&lt;/code&gt; function to determine the result. And that function essentially checks if &lt;code&gt;ob&lt;/code&gt; is in the specified range (although it looks a bit more complex in C).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，对于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;PyLong&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在Python 3中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;），它将使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;range_contains_long&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数来确定结果。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该函数实质上检查&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ob&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是否在指定范围内（尽管在C语言中看起来更复杂）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="13ccd07fe761deb01119765e0985bae94aa6d280" translate="yes" xml:space="preserve">
          <source>So for explaining the logic here:</source>
          <target state="translated">所以对于解释这里的逻辑。</target>
        </trans-unit>
        <trans-unit id="a24a5619d711b68a02ae65110bc362ca47fe6316" translate="yes" xml:space="preserve">
          <source>So, there were two chances to get this optimization backported to 2.7, but they were both rejected.</source>
          <target state="translated">所以,有两次机会让这个优化回传到2.7,但都被拒绝了。</target>
        </trans-unit>
        <trans-unit id="5ff57f4185e884322f43c9c59da60f12f41285ea" translate="yes" xml:space="preserve">
          <source>TL;DR</source>
          <target state="translated">TL;DR</target>
        </trans-unit>
        <trans-unit id="ee61df3565aedbde8009e0df74d43abf78f5d079" translate="yes" xml:space="preserve">
          <source>Take an example, &lt;strong&gt;997 is in range(4, 1000, 3)&lt;/strong&gt; because:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;997在range（4，1000，3）中，&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因为：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="544102d6025f36d496d237ff491d7be66f116af3" translate="yes" xml:space="preserve">
          <source>The &quot;meat&quot; of the idea is mentioned in &lt;a href=&quot;https://github.com/python/cpython/blob/9a5bacfecdf6798e960d1447af11d4cfa8d4dc32/Objects/rangeobject.c#L402&quot;&gt;the line&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该行的&amp;ldquo;实质&amp;rdquo;在&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/python/cpython/blob/9a5bacfecdf6798e960d1447af11d4cfa8d4dc32/Objects/rangeobject.c#L402&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该行中&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;提到&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a38ca8b243e9828bd509f775fcac51aeee05f61" translate="yes" xml:space="preserve">
          <source>The Python 3 &lt;code&gt;range()&lt;/code&gt; object doesn't produce numbers immediately; it is a &lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html#collections.abc.Sequence&quot;&gt;smart sequence object&lt;/a&gt; that produces numbers &lt;em&gt;on demand&lt;/em&gt;. All it contains is your start, stop and step values, then as you iterate over the object the next integer is calculated each iteration.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 3 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象不会立即产生数字。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它是一个&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html#collections.abc.Sequence&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;智能序列对象&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，可&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;按需&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;生成数字&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它包含的只是您的开始，结束和步进值，然后在对对象进行迭代时，每次迭代都会计算下一个整数。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc41fb23825acbcea5a60f6310fc110729b01018" translate="yes" xml:space="preserve">
          <source>The advantage of the &lt;code&gt;range&lt;/code&gt; type over a regular &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;tuple&lt;/code&gt; is that a range object will always take the same (small) amount of memory, no matter the size of the range it represents (as it only stores the &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt; and &lt;code&gt;step&lt;/code&gt; values, calculating individual items and subranges as needed).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;与&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;常规&lt;/font&gt; &lt;code&gt;list&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;相比，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类型&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的优势&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在于，范围对象将始终占用相同（少量）的内存，无论其表示的范围大小如何（因为它仅存储&lt;/font&gt; &lt;code&gt;start&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt; &lt;code&gt;stop&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt; &lt;code&gt;step&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;值） ，根据需要计算单个项目和子范围）。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c152be4c00832582d0bc6b80de516f2d15bc691e" translate="yes" xml:space="preserve">
          <source>The difference between a &lt;code&gt;range&lt;/code&gt; and a &lt;code&gt;list&lt;/code&gt; is that a &lt;code&gt;range&lt;/code&gt; is a &lt;em&gt;lazy&lt;/em&gt; or &lt;em&gt;dynamic&lt;/em&gt; sequence; it doesn't remember all of its values, it just remembers its &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt;, and &lt;code&gt;step&lt;/code&gt;, and creates the values on demand on &lt;code&gt;__getitem__&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;list&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之间的区别在于&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;惰性&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;序列&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;动态&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;序列。它不会记住所有的值，只记住其&lt;/font&gt;&lt;/font&gt; &lt;code&gt;start&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;stop&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;step&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，并根据需要在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__getitem__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上创建值&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="61b656612cb8874b5f17c7652229d53f5e4359c1" translate="yes" xml:space="preserve">
          <source>The full C code is included below, which is a bit more verbose because of memory management and reference counting details, but the basic idea is there:</source>
          <target state="translated">下面是完整的C语言代码,由于内存管理和引用计数细节的原因,代码比较粗略,但基本思路是有的。</target>
        </trans-unit>
        <trans-unit id="08d0cbcfed5f11130b318c07b960395b413651cb" translate="yes" xml:space="preserve">
          <source>The fundamental misunderstanding here is in thinking that &lt;code&gt;range&lt;/code&gt; is a generator. It's not. In fact, it's not any kind of iterator.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此处的基本误解是认为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是生成器。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不是。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实际上，它不是任何迭代器。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="83617cb12472e960e469717ee64374c98d64bd56" translate="yes" xml:space="preserve">
          <source>The object also implements the &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;object.__contains__&lt;/code&gt; hook&lt;/a&gt;, and &lt;em&gt;calculates&lt;/em&gt; if your number is part of its range. Calculating is a (near) constant time operation &lt;sup&gt;*&lt;/sup&gt;. There is never a need to scan through all possible integers in the range.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该对象还实现&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;object.__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;钩子&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，并&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;计算&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您的数字是否属于其范围。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;计算是一个（近）恒定时间运算&lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;*&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;永远不需要扫描范围内所有可能的整数。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31348d04ed7bbac1c6a4506714c4344fd7bc3614" translate="yes" xml:space="preserve">
          <source>The object returned by &lt;code&gt;range()&lt;/code&gt; is actually a &lt;code&gt;range&lt;/code&gt; object. This object implements the iterator interface so you can iterate over its values sequentially, just like a generator, list, or tuple.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;range()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;返回的对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实际上是一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该对象实现了迭代器接口，因此您可以按顺序迭代其值，就像生成器，列表或元组一样。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bbb21a7ab186d01fa518f7b44cbfb3115da14f42" translate="yes" xml:space="preserve">
          <source>The other answers explained it well already, but I'd like to offer another experiment illustrating the nature of range objects:</source>
          <target state="translated">其他答案已经解释得很清楚了,但我想再提供一个实验来说明范围物体的性质。</target>
        </trans-unit>
        <trans-unit id="1071a62c895e03edadab6693bdef7a16b251828f" translate="yes" xml:space="preserve">
          <source>The reason that &lt;strong&gt;range()&lt;/strong&gt; function is so fast in Python3 is that here we use mathematical reasoning for the bounds, rather than a direct iteration of the range object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在Python3 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;中&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;range（）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数之所以如此之快，是因为这里我们对边界使用数学推理，而不是范围对象的直接迭代。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bcca856511ab8783293c769078d3b9cb270779d2" translate="yes" xml:space="preserve">
          <source>The whole logic could be translated to pseudo-Python like this:</source>
          <target state="translated">整个逻辑可以这样翻译成伪Python。</target>
        </trans-unit>
        <trans-unit id="9ee73e6442aa9fb56321451eef9d8353f28db34c" translate="yes" xml:space="preserve">
          <source>Then, as part of implementing the &lt;a href=&quot;https://www.python.org/dev/peps/pep-3119/&quot;&gt;Abstract Base Classes&lt;/a&gt; PEP, it was important to figure out which builtin types should be marked as implementing which ABCs, and &lt;code&gt;xrange&lt;/code&gt;/&lt;code&gt;range&lt;/code&gt; claimed to implement &lt;code&gt;collections.Sequence&lt;/code&gt;, even though it still only handled the same &quot;very little behavior&quot;. Nobody noticed that problem until &lt;a href=&quot;http://bugs.python.org/issue9213&quot;&gt;issue 9213&lt;/a&gt;. The patch for that issue not only added &lt;code&gt;index&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; to 3.2's &lt;code&gt;range&lt;/code&gt;, it also re-worked the optimized &lt;code&gt;__contains__&lt;/code&gt; (which shares the same math with &lt;code&gt;index&lt;/code&gt;, and is directly used by &lt;code&gt;count&lt;/code&gt;).&lt;sup&gt;**&lt;/sup&gt;&lt;a href=&quot;https://github.com/python/cpython/commit/8ee11f7e599b2c5b4de39047bf11bde2246e968f&quot;&gt;This change&lt;/a&gt; went in for 3.2 as well, and was not backported to 2.x, because &quot;it's a bugfix that adds new methods&quot;. (At this point, 2.7 was already past rc status.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;然后，作为实现&amp;ldquo; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.python.org/dev/peps/pep-3119/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;抽象基类&amp;rdquo;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; PEP的一部分，重要的是弄清楚应将哪些内置类型标记为实现哪些ABC，并且&lt;/font&gt;&lt;/font&gt; &lt;code&gt;xrange&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声称实现了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;collections.Sequence&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，即使它仍然只处理相同的&amp;ldquo;非常小行为&amp;rdquo;。在&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://bugs.python.org/issue9213&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;发行9213&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之前，没有人注意到这个问题&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。针对该问题的补丁不仅将&lt;/font&gt;&lt;/font&gt; &lt;code&gt;index&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;count&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;添加&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;到3.2的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，而且还对经过优化的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（与&lt;/font&gt;&lt;/font&gt; &lt;code&gt;index&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;具有相同的数学运算&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，并直接由&lt;/font&gt;&lt;/font&gt; &lt;code&gt;count&lt;/code&gt; 使用&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）进行了重新设计。&lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;** &lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;a href=&quot;https://github.com/python/cpython/commit/8ee11f7e599b2c5b4de39047bf11bde2246e968f&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此更改&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同样适用于3.2，并且没有回迁到2.x，因为&amp;ldquo;这是一个添加了新方法的错误修正&amp;rdquo;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（此时，2.7已经超过了rc状态。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc653234824089c74310215b579f597e087ca140" translate="yes" xml:space="preserve">
          <source>This being the case, I would have expected the following line to take an inordinate amount of time, because in order to determine whether 1 quadrillion is in the range, a quadrillion values would have to be generated:</source>
          <target state="translated">在这种情况下,我预计下面这一行会花费大量的时间,因为为了确定1个四分之一的值是否在这个范围内,必须生成一个四分之一的值。</target>
        </trans-unit>
        <trans-unit id="601964a0af5fc329286c43494d1b93b4a7ca99d7" translate="yes" xml:space="preserve">
          <source>This is still missing several things that a real &lt;code&gt;range()&lt;/code&gt; supports (such as the &lt;code&gt;.index()&lt;/code&gt; or &lt;code&gt;.count()&lt;/code&gt; methods, hashing, equality testing, or slicing), but should give you an idea.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这仍然缺少真正的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;range()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;支持的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;几件事&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（例如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.index()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.count()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法，哈希，相等性测试或切片），但应该给您一个提示。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f80c4cb0679e53a949c32b0ac190421077750670" translate="yes" xml:space="preserve">
          <source>This means it has to follow all the rules of being a sequence:</source>
          <target state="translated">这意味着,它必须遵循所有的规则,成为一个序列。</target>
        </trans-unit>
        <trans-unit id="d2ad888ba3b822ce805f3748907ecbf9b1258899" translate="yes" xml:space="preserve">
          <source>This wasn't quite true; an &lt;code&gt;xrange&lt;/code&gt; object actually supported a few other things that come automatically with indexing and &lt;code&gt;len&lt;/code&gt;,&lt;sup&gt;*&lt;/sup&gt; including &lt;code&gt;__contains__&lt;/code&gt; (via linear search). But nobody thought it was worth making them full sequences at the time.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这不是真的。一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;xrange&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象实际上支持索引和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;len&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自动附带的其他一些功能&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;*&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;包括&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（通过线性搜索）。但是没有人认为有必要让它们在整个序列中完整。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8690b149d8e8cfa8cd1257005457b1463ffe31d1" translate="yes" xml:space="preserve">
          <source>To add to Martijn&amp;rsquo;s answer, this is the relevant part of &lt;a href=&quot;https://hg.python.org/cpython/file/7f8cd879687b/Objects/rangeobject.c#l415&quot;&gt;the source&lt;/a&gt; (in C, as the range object is written in native code):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为了增加Martijn的答案，这是&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hg.python.org/cpython/file/7f8cd879687b/Objects/rangeobject.c#l415&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;源代码&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的相关部分&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（在C中，因为range对象是用本机代码编写的）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="be3b0b42f6680c00507694d72d1f7022605c21a0" translate="yes" xml:space="preserve">
          <source>Try &lt;code&gt;x-1 in (i for i in range(x))&lt;/code&gt; for large &lt;code&gt;x&lt;/code&gt; values, which uses a generator comprehension to avoid invoking the &lt;code&gt;range.__contains__&lt;/code&gt; optimisation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于较大的&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;值，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请尝试使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x-1 in (i for i in range(x))&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，这会使用生成器理解以避免调用&lt;/font&gt; &lt;code&gt;range.__contains__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;优化。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e813db87426b62a99cf3e4be77476c090bb67049" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://github.com/python/cpython/blob/cff677abe1823900e954592035a170eb67840971/Objects/rangeobject.c#L364-L413&quot;&gt;source&lt;/a&gt;, Luke!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/python/cpython/blob/cff677abe1823900e954592035a170eb67840971/Objects/rangeobject.c#L364-L413&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;消息来源&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，卢克！&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="06802975cefff52a425e022f7da8a89c6ee6eaa3" translate="yes" xml:space="preserve">
          <source>What &lt;code&gt;range&lt;/code&gt; actually is, is a sequence, just like a list. You can even test this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;什么&lt;/font&gt;&lt;/font&gt; &lt;code&gt;range&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实际上是一个序列，就像一个列表。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您甚至可以测试一下：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a6500d0776cd51af24cdc0e92b78183f446cff7" translate="yes" xml:space="preserve">
          <source>What is the &lt;code&gt;range()&lt;/code&gt; object doing under the hood that makes it so fast?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使&lt;/font&gt;&lt;/font&gt; &lt;code&gt;range()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如此之快的对象是做什么的？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2cd6a3c216b35403a6bc87531634cf4fdf33e56f" translate="yes" xml:space="preserve">
          <source>Why is “1000000000000000 in range(1000000000000001)” so fast in Python 3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3d73e98cfd7f2a1c63112bb0a680f29ffcf196" translate="yes" xml:space="preserve">
          <source>You can tell this pretty easily:</source>
          <target state="translated">你很容易就能看出这一点。</target>
        </trans-unit>
        <trans-unit id="270480ae2ce563f829cb6203b6308055d57b20ff" translate="yes" xml:space="preserve">
          <source>You should be aware of an implementation detail but should not be relied upon, because this may change in the future.</source>
          <target state="translated">你应该知道一个实施细节,但不应该依赖它,因为将来可能会改变。</target>
        </trans-unit>
        <trans-unit id="b94da3599274cc93c9ee4f4d4dce4fea875b2503" translate="yes" xml:space="preserve">
          <source>but:</source>
          <target state="translated">but:</target>
        </trans-unit>
        <trans-unit id="2a6189afc04320880bd261c8700c56679f1e8e2d" translate="yes" xml:space="preserve">
          <source>due to optimization - it's easy to compare given integer just with min and max of range.</source>
          <target state="translated">由于优化--只用范围的最小和最大来比较给定的整数很容易。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
