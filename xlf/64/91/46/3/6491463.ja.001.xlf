<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/6491463">
    <body>
      <group id="6491463">
        <trans-unit id="24cef77ed0116cd5e5437c31bdbb85d81774c5c6" translate="yes" xml:space="preserve">
          <source>&quot;eval(...)&quot; is still king though (performance wise that is).  If you have property paths directly under your control, there shouldn't be any issues with using 'eval' (especially if speed is desired).  If pulling property paths &quot;over the wire&quot; (&lt;a href=&quot;https://www.youtube.com/watch?v=CewJ-ihIqaM&quot;&gt;on the line&lt;/a&gt;!? lol :P), then yes, use something else to be safe.  Only an idiot would say to never use &quot;eval&quot; at all, as there &lt;a href=&quot;https://stackoverflow.com/questions/1594023/what-is-the-intended-purpose-of-eval-in-javascript?lq=1&quot;&gt;ARE good reasons&lt;/a&gt; when to use it.  Also, &quot;It is used in &lt;a href=&quot;https://github.com/douglascrockford/JSON-js/blob/master/json2.js&quot;&gt;Doug Crockford's JSON parser&lt;/a&gt;.&quot; If the input is safe, then no problems at all.  Use the right tool for the right job, that's it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「eval（...）」は依然として重要です（つまり、パフォーマンスの点で）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コントロールの直下にプロパティパスがある場合、「eval」の使用に問題はありません（特に速度が必要な場合）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=CewJ-ihIqaM&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;回線を&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;介して」（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ライン上で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;！？lol：Pで）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティパスをプルする場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、はい、安全のために他のものを使用します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;馬鹿だけが「eval」を使用しないように言うでしょう、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それを使用するときには&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1594023/what-is-the-intended-purpose-of-eval-in-javascript?lq=1&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正当な理由&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があるからです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、「&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/douglascrockford/JSON-js/blob/master/json2.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Doug CrockfordのJSONパーサーで&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用されてい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。」&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;入力が安全であれば、まったく問題ありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;適切な仕事に適切なツールを使用する、それだけです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba62132abf20afec7e251cc0b1aada5d96081f37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path_to_key&lt;/code&gt;: path in an array. You can replace it by your &lt;code&gt;string_path.split(&quot;.&quot;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;path_to_key&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：配列内のパス。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;string_path.split(&quot;.&quot;)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;置き換えることができます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="19bc1ecb322eb98b7ed52c5c3ddc05930dfdc951" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type_of_function&lt;/code&gt;: 0 for accessing(dont pass any value to &lt;code&gt;value&lt;/code&gt;), 0 for add and modify. 1 for delete.</source>
          <target state="translated">&lt;code&gt;type_of_function&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：アクセスの場合は0（値に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;渡さない&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）、追加および変更の場合は0。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;削除の場合は1。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="157a49801baf234df40a5b5e502dae5a0add498c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Access array with []&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[]で配列にアクセス&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5280dcbf3ac145fc063a94ec1134951828cf07c7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Bonus&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;Bonus&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="070baa4293f4df5a2e7819f8e151c13553b4cf63" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Cannot read property 'foo' of undefined&lt;/em&gt; error</source>
          <target state="translated">&lt;em&gt;未定義&lt;/em&gt;エラーの&lt;em&gt;プロパティ 'foo'を読み取れません&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0382250f083a5d742471dbeafbe4df1f18d5d8e1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Please use common sense and caution when wielding the power of eval. It's a bit like a light saber, if you turn it on there's a 90% chance you'll sever a limb. Its not for everybody.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;evalの機能を使用する際は、常識と注意を払ってください。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ライトサーベルに少し似ています。オンにすると、90％の確率で手足が切断されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それは皆のためではありません。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="063290c3ae32f34e51be83309d0195068191315e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DEMO&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;DEMO&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4f1f2d1ba0a7e969d5df6fdb8a7f2b397072df69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;EDIT&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="94784a69e1b68aae4b4c2456308bfb28c2b5c7fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT&lt;/strong&gt; some have noticed that this code will throw an error if passed a string where the left-most indexes don't correspond to a correctly  nested entry within the object.  This is a valid concern, but IMHO best addressed with a &lt;code&gt;try / catch&lt;/code&gt; block when calling, rather than having this function silently return &lt;code&gt;undefined&lt;/code&gt; for an invalid index.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一部の&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;編集&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;者は、左端のインデックスがオブジェクト内の正しくネストされたエントリに対応していない文字列を渡すと、このコードがエラーをスローすることに気づきました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは有効な懸念事項ですが、IMHOは、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出し時に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;try / catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ブロックで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;対処するのが最善&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。無効なインデックスに対して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この関数が暗黙的に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;返すようにするのではあり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eb779788428d6e023fb6a28619b5ddcc41cbc735" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ES6&lt;/strong&gt;: Only one line in Vanila JS (it return null if don't find instead of giving error):</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：Vanila JSでは1行のみ（エラーが発生する代わりに見つからない場合はnullを返します）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ca7925f304e72facc74cccec904b7dc5bc6b0c7f" translate="yes" xml:space="preserve">
          <source>Access Nested Objects Using Array Reduce</source>
          <target state="translated">配列の削減を使用して入れ子になったオブジェクトにアクセスする</target>
        </trans-unit>
        <trans-unit id="f0008e9374dfcb757325aa57183584e86c00f6bc" translate="yes" xml:space="preserve">
          <source>Accessing nested JavaScript objects and arays by string path</source>
          <target state="translated">文字列パスによる入れ子になった JavaScript オブジェクトと配列へのアクセス</target>
        </trans-unit>
        <trans-unit id="692cc57847469eb4297ffb7c95ab1834a2013483" translate="yes" xml:space="preserve">
          <source>And I would like to access the data using these variable :</source>
          <target state="translated">そして、私はこれらの変数を使用してデータにアクセスしたいと思います。</target>
        </trans-unit>
        <trans-unit id="2a3de4a9dc7c9f3bd23b0b53226033777b1c013b" translate="yes" xml:space="preserve">
          <source>AngularJS</source>
          <target state="translated">AngularJS</target>
        </trans-unit>
        <trans-unit id="6a84edf8542edea4ab8fce87985c3e08491db597" translate="yes" xml:space="preserve">
          <source>Based on a previous answer, I have created a function that can also handle brackets. But no dots inside them due to the split.</source>
          <target state="translated">以前の回答を元に、カッコも扱える関数を作ってみました。しかし、分割の関係で中にドットが入っていません。</target>
        </trans-unit>
        <trans-unit id="a044541d05027c70235e4f050569794d0f94c0eb" translate="yes" xml:space="preserve">
          <source>Both of which will work</source>
          <target state="translated">どちらもうまくいく</target>
        </trans-unit>
        <trans-unit id="884cf0204b6daf22a068b97557301cb4ca1240ee" translate="yes" xml:space="preserve">
          <source>Building off of Alnitak's answer:</source>
          <target state="translated">アルニタクの回答を基にしたものだ</target>
        </trans-unit>
        <trans-unit id="0489223705a1f611addbdd7aab7c31ffc04a32d5" translate="yes" xml:space="preserve">
          <source>By the way, I feel that a simple assignment made at right time will be sufficent...</source>
          <target state="translated">ところで、タイミングよく作られた簡単な課題で十分な気がするのですが......。</target>
        </trans-unit>
        <trans-unit id="41eaa4dfb3df998dc7f2671dde7f978a22d4224b" translate="yes" xml:space="preserve">
          <source>Can't use brackets (&lt;code&gt;[]&lt;/code&gt;) for array indices&amp;mdash;though specifying array indices between the separator token (e.g., &lt;code&gt;.&lt;/code&gt;) works fine as shown above.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列インデックスに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;角かっこ（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用することはできません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記のように&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、区切りトークン（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;間に配列インデックスを指定すると&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正常に機能します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aef6157d7ac720248fc2789c3b7552b0960ec078" translate="yes" xml:space="preserve">
          <source>Disclaimer: I am the author of this package.</source>
          <target state="translated">免責事項:私はこのパッケージの作者です。</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="82a60174f2eb9cc6478dfedcd8c10f90ef39a14a" translate="yes" xml:space="preserve">
          <source>Example from the docs:</source>
          <target state="translated">ドキュメントからの例。</target>
        </trans-unit>
        <trans-unit id="84d487ab6e8c61ea0a9c88ee9e656b1a1f11944d" translate="yes" xml:space="preserve">
          <source>Example to use:</source>
          <target state="translated">使用例。</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">使用例。</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">スニペットを展開</target>
        </trans-unit>
        <trans-unit id="1a2732dbb4a04dea25a2338f46571d4533faee70" translate="yes" xml:space="preserve">
          <source>Extension of Mohamad Hamouday' Answer will fill in missing keys</source>
          <target state="translated">Mohamad Hamouday' の解答の拡張は、不足しているキーを埋めることができます。</target>
        </trans-unit>
        <trans-unit id="4549c050a813df0335d1145da2ef7ae78297b47c" translate="yes" xml:space="preserve">
          <source>Finally you could be asking for this</source>
          <target state="translated">最後に、あなたはこれを求めることができます。</target>
        </trans-unit>
        <trans-unit id="73c3a8f81b3b567b5ab57af191ad74c4bfff7417" translate="yes" xml:space="preserve">
          <source>Find the path (otherwise &lt;code&gt;undefined&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;パスを見つける（それ以外の場合は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8b7bcde0221380ced38793a0418055f8ea783529" translate="yes" xml:space="preserve">
          <source>For a ready to use function that also recognizes false, 0 and negative number and accept default values as parameter:</source>
          <target state="translated">false、0、負の数を認識し、パラメータとしてデフォルト値を受け入れることもできる、すぐに使える関数です。</target>
        </trans-unit>
        <trans-unit id="cf5d5e38c09d3b997f94a35f2b58ffad9ff3a393" translate="yes" xml:space="preserve">
          <source>Good Luck...</source>
          <target state="translated">幸運を...</target>
        </trans-unit>
        <trans-unit id="5acf0626d03395a8285984f99b7d1b3d79cc008b" translate="yes" xml:space="preserve">
          <source>Here I offer more ways, which seem faster in many respects:</source>
          <target state="translated">ここでは、私は多くの点で速く見えるより多くの方法を提供しています。</target>
        </trans-unit>
        <trans-unit id="412f26af065a74358a67776a53df3f6be57d99bb" translate="yes" xml:space="preserve">
          <source>Here is a simple fiddle demo: &lt;a href=&quot;https://jsfiddle.net/harishanchu/oq5esowf/&quot;&gt;https://jsfiddle.net/harishanchu/oq5esowf/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここに簡単なフィドルのデモがあります：&lt;/font&gt;&lt;a href=&quot;https://jsfiddle.net/harishanchu/oq5esowf/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//jsfiddle.net/harishanchu/oq5esowf/&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3376c7e330bad628403764ed803b5fc551748faa" translate="yes" xml:space="preserve">
          <source>Here is an example that would change a field based on this array representation. I am using something like that in react.js for controlled input fields that change the state of nested structures.</source>
          <target state="translated">この配列表現に基づいてフィールドを変更する例を示します。私は react.js で、ネストされた構造体の状態を変更する制御された入力フィールドのためにこのようなものを使用しています。</target>
        </trans-unit>
        <trans-unit id="3f4b07e7312059ca9395a42575dd23dc587f0bb0" translate="yes" xml:space="preserve">
          <source>I have a data structure like this :</source>
          <target state="translated">私はこのようなデータ構造を持っています。</target>
        </trans-unit>
        <trans-unit id="abbee1ba94c93624dbcedb82e0b07732e1aef527" translate="yes" xml:space="preserve">
          <source>I haven't yet found a package to do all of the operations with a string path, so I ended up writing my own quick little package which supports insert(), get() (with default return), set() and remove() operations.</source>
          <target state="translated">文字列パスを使ってすべての操作を行うパッケージをまだ見つけられていないので、結局、insert()、get()(デフォルトの戻り値)、set()、remove()の操作をサポートする、自分自身の簡単で小さなパッケージを書くことにしました。</target>
        </trans-unit>
        <trans-unit id="2852942c72e564c4db6c6746a58407896ce17895" translate="yes" xml:space="preserve">
          <source>I hope this address your question...</source>
          <target state="translated">これがあなたの質問に答えてくれることを願っています...</target>
        </trans-unit>
        <trans-unit id="e752ffc2d69e65acc0477229f9059c07fbc9a190" translate="yes" xml:space="preserve">
          <source>I just made this based on some similar code I already had, it appears to work:</source>
          <target state="translated">すでに持っていたいくつかの似たようなコードを元に作ってみました。</target>
        </trans-unit>
        <trans-unit id="e7700a60a5e414ee84252ed0383bd374d8edb57a" translate="yes" xml:space="preserve">
          <source>I made this function which can you use it to &lt;strong&gt;Get/ Set/ Unset&lt;/strong&gt; any value in object</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトの任意の値&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;取得/設定/設定解除&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;するために使用できるこの関数を作成しました&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="477990c9db2824fb73d7d45db04245cf90496c20" translate="yes" xml:space="preserve">
          <source>I think you are asking for this:</source>
          <target state="translated">これを求めているのではないでしょうか。</target>
        </trans-unit>
        <trans-unit id="fc8f72d19b34c54fffd37ec7b8f7ee7b2443de3e" translate="yes" xml:space="preserve">
          <source>I won't use a string to mantain a sort of xpath &lt;em&gt;query&lt;/em&gt; to access an object value.
As you have to call a function to parse the query and retrieve the value I would follow another path (not :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト値にアクセスするための&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一種のxpath &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クエリ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を作成&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;するために文字列を使用しません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数を呼び出してクエリを解析して値を取得する必要があるので、別のパスをたどります（：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cb9184e45afeabec4ba2c3add87310e314144329" translate="yes" xml:space="preserve">
          <source>I'm developing online-shop with React. I tried to change values in copied state object to update original state with it on submit. 
Examples above haven't worked for me, because most of them mutate structure of copied object. I found working example of the function for accessing and changing values of the deep nested object properties: &lt;a href=&quot;https://lowrey.me/create-an-object-by-path-in-javascript-2/&quot;&gt;https://lowrey.me/create-an-object-by-path-in-javascript-2/&lt;/a&gt; Here it is:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Reactを使用してオンラインショップを開発しています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コピーされた状態オブジェクトの値を変更して、送信時に元の状態に更新しようとしました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記の例は、コピーされたオブジェクトの構造を変更するため、うまくいきませんでした。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;深くネストされたオブジェクトのプロパティの値にアクセスして変更するための関数の実用的な例を見つけました：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://lowrey.me/create-an-object-by-path-in-javascript-2/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//lowrey.me/create-an-object-by-path-in-javascript-2/&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここにあります：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9136c40f46c3875380a68fd61c4c5f5e1ff75483" translate="yes" xml:space="preserve">
          <source>I've created an &lt;a href=&quot;https://www.npmjs.com/package/object-bystring&quot;&gt;npm package&lt;/a&gt; and &lt;a href=&quot;https://github.com/TomSaporito/object-bystring&quot;&gt;github&lt;/a&gt; with this as well</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私が作成した&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.npmjs.com/package/object-bystring&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NPMパッケージ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/TomSaporito/object-bystring&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;githubの&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;にも、これとは&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6123caca02ab4ba6fad5795bf8f4236ee65b4f11" translate="yes" xml:space="preserve">
          <source>If you need to access different nested key without knowing it at coding time (it will be trivial to address them) you can use the array notation accessor:</source>
          <target state="translated">コーディング時にそれを知らずに別の入れ子になったキーにアクセスする必要がある場合 (それらをアドレス指定するのは簡単です)は、配列記法アクセサを使用することができます。</target>
        </trans-unit>
        <trans-unit id="3a0288d82284737a2b2f1fefb332999909b83ce8" translate="yes" xml:space="preserve">
          <source>In your case to obtain value of &lt;code&gt;part1.name&lt;/code&gt; from &lt;code&gt;someObject&lt;/code&gt; just do:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたの場合、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;part1.name&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から&lt;/font&gt;&lt;/font&gt; &lt;code&gt;someObject&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値を取得するには&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ようにします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dea4ecd2ebb31536ee9a48909953e4a83e9d7af7" translate="yes" xml:space="preserve">
          <source>Inspired by @webjay's answer:
&lt;a href=&quot;https://stackoverflow.com/a/46008856/4110122&quot;&gt;https://stackoverflow.com/a/46008856/4110122&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@webjayの答えに触発されました：&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/46008856/4110122&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;： &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//stackoverflow.com/a/46008856/4110122&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6411caa48ad49fbf80d196560c84bcd3af61778f" translate="yes" xml:space="preserve">
          <source>Instead of a string an array can be used adressing nested objects and arrays e.g.: &lt;code&gt;[&quot;my_field&quot;, &quot;another_field&quot;, 0, &quot;last_field&quot;, 10]&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列の代わりに、配列をネストされたオブジェクトや配列に使用できます。例：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[&quot;my_field&quot;, &quot;another_field&quot;, 0, &quot;last_field&quot;, 10]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0253e9d62305dbf65253a5464136fc3e71acb72e" translate="yes" xml:space="preserve">
          <source>Is there anyway to achieve this with either pure javascript or JQuery?</source>
          <target state="translated">純粋なjavascriptかJQueryのどちらかで実現する方法はありますか?</target>
        </trans-unit>
        <trans-unit id="f37cbe4750f0427714416a747f9844c54d028d1f" translate="yes" xml:space="preserve">
          <source>It makes the parsing easier.</source>
          <target state="translated">解析が楽になります。</target>
        </trans-unit>
        <trans-unit id="5c00230b43238fe04ff5810f117d1d09b3a59219" translate="yes" xml:space="preserve">
          <source>It's a one liner with lodash.</source>
          <target state="translated">ロダッシュとのワンライナーです。</target>
        </trans-unit>
        <trans-unit id="559bccc3dcac2ef879ce8cbd4ee20832f328b292" translate="yes" xml:space="preserve">
          <source>JSPerf: &lt;a href=&quot;http://jsperf.com/ways-to-dereference-a-delimited-property-string/3&quot;&gt;http://jsperf.com/ways-to-dereference-a-delimited-property-string/3&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSPerf：&lt;/font&gt;&lt;a href=&quot;http://jsperf.com/ways-to-dereference-a-delimited-property-string/3&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ://jsperf.com/ways-to-dereference-a-delimited-property-string/3&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8474b6024b8e5deacff04ae6d5a59bdaf703c91a" translate="yes" xml:space="preserve">
          <source>Just had the same question recently and successfully used &lt;a href=&quot;https://npmjs.org/package/tea-properties&quot;&gt;https://npmjs.org/package/tea-properties&lt;/a&gt; which also &lt;code&gt;set&lt;/code&gt; nested object/arrays :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最近同じ質問があり、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ネスト&lt;/font&gt; &lt;code&gt;set&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;れたオブジェクト/配列&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設定する&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://npmjs.org/package/tea-properties&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://npmjs.org/package/tea-properties&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正常に使用しました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f23bb5a89e2f0742d38b7b367e3f1f2f13e2d9df" translate="yes" xml:space="preserve">
          <source>Just in case, anyone's visiting this question in 2017 or later and looking for an &lt;strong&gt;easy-to-remember&lt;/strong&gt; way, here's an elaborate blog post on &lt;a href=&quot;https://dev.to/flexdinesh/accessing-nested-objects-in-javascript--9m4&quot;&gt;Accessing Nested Objects in JavaScript&lt;/a&gt; without being bamboozled by</source>
          <target state="translated">念のため、2017年以降にこの質問に&lt;a href=&quot;https://dev.to/flexdinesh/accessing-nested-objects-in-javascript--9m4&quot;&gt;アクセスし&lt;/a&gt; 、 &lt;strong&gt;覚えやすい&lt;/strong&gt;方法&lt;strong&gt;を&lt;/strong&gt;探している人は誰でも、JavaScriptでのネストされたオブジェクトへのアクセスに関する入念なブログ記事を公開しています。</target>
        </trans-unit>
        <trans-unit id="701662023202033f7903861fef96214472924440" translate="yes" xml:space="preserve">
          <source>Just place this function in your root controller and use it any child scope like this:</source>
          <target state="translated">この関数をルートコントローラに配置して、このような子スコープを使用します。</target>
        </trans-unit>
        <trans-unit id="4362ba355b0806df1101d329c7ebd882557bed67" translate="yes" xml:space="preserve">
          <source>Let's take this example structure</source>
          <target state="translated">この例の構造を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="52c0a2f3a058b234bb1af57941e3f1c4df61c56c" translate="yes" xml:space="preserve">
          <source>Limitations:</source>
          <target state="translated">Limitations:</target>
        </trans-unit>
        <trans-unit id="f579c523960af1aec824c6fdc57af6d4abd76a1f" translate="yes" xml:space="preserve">
          <source>OR</source>
          <target state="translated">OR</target>
        </trans-unit>
        <trans-unit id="dde7077b499ab6d09d7c886c542093050cfc50c2" translate="yes" xml:space="preserve">
          <source>Option 1: Split string on . or [ or ] or ' or &quot;, reverse it, skip empty items.</source>
          <target state="translated">オプション1:.または[または]または'または &quot;で文字列を分割し、それを逆にして、空の項目をスキップします。</target>
        </trans-unit>
        <trans-unit id="6ef3318d6eb2bf26597538449e1daa28e0d128b3" translate="yes" xml:space="preserve">
          <source>Option 2 (fastest of all, except &lt;code&gt;eval&lt;/code&gt;): Low level character scan (no regex/split/etc, just a quick char scan).
&lt;em&gt;Note:  This one does not support quotes for indexes.&lt;/em&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オプション2（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を除くすべての中で最速&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）：低レベルの文字スキャン（regex / split / etcなし、ただのcharスキャンのみ）。 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注：これはインデックスの引用符をサポートしていません。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="45fba52a57a29282e0567c951920f4423887503b" translate="yes" xml:space="preserve">
          <source>Option 3: &lt;em&gt;(&lt;strong&gt;new&lt;/strong&gt;: option 2 expanded to support quotes - a bit slower, but still fast)&lt;/em&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オプション3： &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;新しい&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：サポート引用符に拡張オプション2 -少し遅く、それでも速いです）&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="17e3ea9b62720720cd555f18a12cbff2ba3a2d23" translate="yes" xml:space="preserve">
          <source>Or ES6 version w/ reduce...</source>
          <target state="translated">もしくはES6版wリデュース...。</target>
        </trans-unit>
        <trans-unit id="a1ae528579d6cd8c1a0d5911c94622b3d77870e3" translate="yes" xml:space="preserve">
          <source>Or even better...</source>
          <target state="translated">それか、もっといいのが...</target>
        </trans-unit>
        <trans-unit id="e32eab4ed6f7676895dc26abbd0958a1621e623d" translate="yes" xml:space="preserve">
          <source>Or example:</source>
          <target state="translated">または例。</target>
        </trans-unit>
        <trans-unit id="0db21959734094d2ba695165e2e35a0c2f16abf0" translate="yes" xml:space="preserve">
          <source>Or maybe you are asking for this</source>
          <target state="translated">あるいは、これを求めているのかもしれません。</target>
        </trans-unit>
        <trans-unit id="54358e912540fbbd864e4318c7340c5fc19adb41" translate="yes" xml:space="preserve">
          <source>Plunkr</source>
          <target state="translated">Plunkr</target>
        </trans-unit>
        <trans-unit id="ebff6f0910191adf627b8e100d0b9ac470daff41" translate="yes" xml:space="preserve">
          <source>Remove blank strings</source>
          <target state="translated">空白文字列の削除</target>
        </trans-unit>
        <trans-unit id="82088ac75f1bbf8d59d221b772dd4676a4f297dc" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;[]&lt;/code&gt; bracket syntax with &lt;code&gt;.&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ブラケット構文をに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;置き換え&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3f13c03367cd73494ffd711c9a3ba574bd819c15" translate="yes" xml:space="preserve">
          <source>See a working demo at &lt;a href=&quot;http://jsfiddle.net/alnitak/hEsys/&quot;&gt;http://jsfiddle.net/alnitak/hEsys/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;http://jsfiddle.net/alnitak/hEsys/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://jsfiddle.net/alnitak/hEsys/で&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;デモをご覧ください&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a0a8ba41ecd95d649ae9c809bf805ba7a7e14202" translate="yes" xml:space="preserve">
          <source>Simple function, allowing for either a string or array path.</source>
          <target state="translated">シンプルな関数で、文字列または配列のパスを指定できます。</target>
        </trans-unit>
        <trans-unit id="7e5e9269acb58c22928df1952b7c482b9a51b67d" translate="yes" xml:space="preserve">
          <source>Speigg's approach is very neat and clean, though I found this reply while searching for the solution of accessing AngularJS $scope properties by string path and with a little modification it does the job:</source>
          <target state="translated">Speigg氏のアプローチは非常にすっきりとしたもので、AngularJSの$scopeプロパティに文字列パスでアクセスするソリューションを検索しているときにこの返信を見つけたのですが、少し修正するだけで仕事をしてくれます。</target>
        </trans-unit>
        <trans-unit id="2a23fe4afa339a11a1b88f89161fcdc1b4b7109f" translate="yes" xml:space="preserve">
          <source>Split on &lt;code&gt;.&lt;/code&gt; character</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に分割&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キャラクター&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="640ab2bae07bedc4c163f679a746f7ab7fb5d1fa" translate="yes" xml:space="preserve">
          <source>Test</source>
          <target state="translated">Test</target>
        </trans-unit>
        <trans-unit id="6543ab0efd138a238ebdbcd00ac07acfcd3155bb" translate="yes" xml:space="preserve">
          <source>The functions are shorter, clearer, the interpreter check them for you for syntax errors and so on.</source>
          <target state="translated">関数の方が短くてわかりやすいし、構文エラーなどはインタプリタがチェックしてくれます。</target>
        </trans-unit>
        <trans-unit id="cd332324f928bb195486fbdbe7b0d9f4e95300b1" translate="yes" xml:space="preserve">
          <source>The solutions here are just for accessing the deeply nested keys. I needed one for accessing, adding, modifying and deleting the keys. This is what I came up with:</source>
          <target state="translated">ここでの解決策は、深く入れ子になっているキーにアクセスするためだけのものです。私は、キーへのアクセス、追加、修正、削除のためのものが必要でした。これは私が考え出したものです。</target>
        </trans-unit>
        <trans-unit id="0de40644ab3a8659c7ba0625cf4b76fa463b082b" translate="yes" xml:space="preserve">
          <source>There is also an excellent type handling minimal library &lt;a href=&quot;https://www.npmjs.com/package/typy&quot;&gt;typy&lt;/a&gt; that does all this for you.</source>
          <target state="translated">これをすべて行う、最小限のライブラリタイプを処理する優れたタイプもあります。</target>
        </trans-unit>
        <trans-unit id="9513f660916a20b0a8c95351517ef32554988807" translate="yes" xml:space="preserve">
          <source>There is an &lt;code&gt;npm&lt;/code&gt; module now for doing this: &lt;a href=&quot;https://github.com/erictrinh/safe-access&quot;&gt;https://github.com/erictrinh/safe-access&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を行うための&lt;/font&gt;&lt;/font&gt; &lt;code&gt;npm&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;モジュール&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます：&lt;/font&gt;&lt;a href=&quot;https://github.com/erictrinh/safe-access&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//github.com/erictrinh/safe-access&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ce638adb2fa9bdb3af72a99475defd8018a0f2b2" translate="yes" xml:space="preserve">
          <source>They are equivalent to the dot notation accessor and may vary at runtime, for example:</source>
          <target state="translated">これらはドット記法アクセサと同等であり、例えば実行時に変化する可能性があります。</target>
        </trans-unit>
        <trans-unit id="2694b124c6f812b751c8b3af365e73caa4602797" translate="yes" xml:space="preserve">
          <source>This allows you to set a value as well!</source>
          <target state="translated">これで、値も設定できるようになりました!</target>
        </trans-unit>
        <trans-unit id="cc0048ad098d0d0e0822d230f5274fa63b6946ed" translate="yes" xml:space="preserve">
          <source>This is now supported by lodash using &lt;code&gt;_.get(obj, property)&lt;/code&gt;. See &lt;a href=&quot;https://lodash.com/docs#get&quot;&gt;https://lodash.com/docs#get&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;_.get(obj, property)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lodashで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;サポートされるようになりました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;a href=&quot;https://lodash.com/docs#get&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://lodash.com/docs#getを&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照して&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ください&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e369cdbbb139dc09555a1cb52c64e2205eef80ad" translate="yes" xml:space="preserve">
          <source>This is the solution I use:</source>
          <target state="translated">これは私が使っているソリューションです。</target>
        </trans-unit>
        <trans-unit id="e97ead4e967876bb64547bf16dcb9d1084eac13d" translate="yes" xml:space="preserve">
          <source>This required that you also define array indexes with dot notation:</source>
          <target state="translated">これは、配列のインデックスもドット表記で定義する必要がありました。</target>
        </trans-unit>
        <trans-unit id="97d5b19b196eff0c2e3fff13ad212f72ebce3ef4" translate="yes" xml:space="preserve">
          <source>This will probably never see the light of day... but here it is anyway.</source>
          <target state="translated">これはおそらく日の目を見ることはないだろう...が、とにかくここにある。</target>
        </trans-unit>
        <trans-unit id="849916279f13f7d4ceb1dce72386c5c0c261f024" translate="yes" xml:space="preserve">
          <source>To &lt;strong&gt;set&lt;/strong&gt; a path (Requested by @rob-gordon) you can use:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;パス&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設定&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;するには（@ rob-gordonによって要求されます）、以下を使用できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="56e3fdff87ae9f0ae61a5a84dce9e283d8be9946" translate="yes" xml:space="preserve">
          <source>To be able to access nested arrays, you can write your own array reduce util.</source>
          <target state="translated">入れ子になった配列にアクセスできるようにするには、独自の配列reduce utilを書くことができます。</target>
        </trans-unit>
        <trans-unit id="ec17d2b0393d701bb378fb92b5f34cc43ec1456a" translate="yes" xml:space="preserve">
          <source>To use it:</source>
          <target state="translated">それを使うために</target>
        </trans-unit>
        <trans-unit id="f452cb1d477a893f93179bd9d7c538586830b0fb" translate="yes" xml:space="preserve">
          <source>Usage::</source>
          <target state="translated">Usage::</target>
        </trans-unit>
        <trans-unit id="3df4d3694514c10bb8df02eee327eee6020116ea" translate="yes" xml:space="preserve">
          <source>While reduce is good, I am surprised no one used forEach:</source>
          <target state="translated">リデュースは良いのですが、forEachを使っている人がいないことに驚きました。</target>
        </trans-unit>
        <trans-unit id="c23e9e71bb9c581c5c2a4c72bbc9e1143ef8dfdb" translate="yes" xml:space="preserve">
          <source>With typy, your code will look like this</source>
          <target state="translated">typy を使うと、コードは次のようになります。</target>
        </trans-unit>
        <trans-unit id="ff1e4986e18cd31399833b1452c8d71f6d98f068" translate="yes" xml:space="preserve">
          <source>Working with &lt;code&gt;Underscore&lt;/code&gt;'s &lt;code&gt;property&lt;/code&gt; or &lt;code&gt;propertyOf&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作業&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Underscore&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;property&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;propertyOf&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f2e5067c2a787cd8c5f41ede90384430fbea6328" translate="yes" xml:space="preserve">
          <source>Works for arrays / arrays inside the object also.
Defensive against invalid values.</source>
          <target state="translated">オブジェクト内部の配列配列に対しても動作します。無効な値に対する防御。</target>
        </trans-unit>
        <trans-unit id="a129a012ae28365ddc9a41a51d6b419a38d05db8" translate="yes" xml:space="preserve">
          <source>Works with</source>
          <target state="translated">と連携しています。</target>
        </trans-unit>
        <trans-unit id="7a8079be9b0c3e8b998effb68f86d2e10fca9361" translate="yes" xml:space="preserve">
          <source>You can manage to obtain value of a deep object member with dot notation without any external JavaScript library with the simple following trick:</source>
          <target state="translated">以下のような簡単なトリックを使えば、外部のJavaScriptライブラリを使わずに、ドット記法でディープオブジェクトのメンバの値を取得することができます。</target>
        </trans-unit>
        <trans-unit id="f0f3bef5d47b1f352a081f2926817d482a4858cf" translate="yes" xml:space="preserve">
          <source>You can use dot notation, brackets, number indices, string number properties, and keys with non-word characters. Simple usage below:</source>
          <target state="translated">ドット記法、括弧、数字のインデックス、文字列の数字のプロパティ、単語以外の文字でキーを使用することができます。以下に簡単な使い方を紹介します。</target>
        </trans-unit>
        <trans-unit id="101e1dc152e5de32d4e9e331e75df05987f0a024" translate="yes" xml:space="preserve">
          <source>You could be asking for this:</source>
          <target state="translated">これを求めているのかもしれません。</target>
        </trans-unit>
        <trans-unit id="3d092484c5780adabca7e8d1ead824ec89fd42b0" translate="yes" xml:space="preserve">
          <source>You'd have to parse the string yourself:</source>
          <target state="translated">自分で文字列を解析する必要があります。</target>
        </trans-unit>
        <trans-unit id="e1d5a2feb333e8de574172ca6bb76eaa8a2bf140" translate="yes" xml:space="preserve">
          <source>get:</source>
          <target state="translated">get:</target>
        </trans-unit>
        <trans-unit id="1ec285792f84b2006557cfe7a76ef03e4dffbd46" translate="yes" xml:space="preserve">
          <source>is equivalent to</source>
          <target state="translated">に相当します。</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="48f0021b8b5f520c50be78dab154fcd0720c9e1f" translate="yes" xml:space="preserve">
          <source>or, if you are uneasy with the &lt;em&gt;apply&lt;/em&gt; method</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;申請&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不安がある&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合&lt;/font&gt;&lt;/em&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c1d4fd3a72cba7c1c3c3d75e5ec2bfb66841fbf2" translate="yes" xml:space="preserve">
          <source>part1name should be filled with &lt;code&gt;someObject.part1.name&lt;/code&gt; 's value, which is &quot;Part 1&quot;. Same thing with part2quantity which filled with 60.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;part1nameに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、「Part 1」である&lt;/font&gt;&lt;/font&gt; &lt;code&gt;someObject.part1.name&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の値を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;入力する必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;60で満たされたpart2quantityと同じこと。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c60a32db286e47f9a9213ca0f8adb16543847d99" translate="yes" xml:space="preserve">
          <source>set:</source>
          <target state="translated">set:</target>
        </trans-unit>
        <trans-unit id="15281a4bf6b9a52c4b9a2899dcf29a58ee62cad0" translate="yes" xml:space="preserve">
          <source>using eval:</source>
          <target state="translated">evalを使用しています。</target>
        </trans-unit>
        <trans-unit id="2a5ec87bb3424d21c4c376eeb04490577687e3ac" translate="yes" xml:space="preserve">
          <source>wrap to return undefined on error</source>
          <target state="translated">エラー時に未定義を返すようにラップ</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
