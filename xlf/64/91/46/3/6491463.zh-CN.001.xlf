<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/6491463">
    <body>
      <group id="6491463">
        <trans-unit id="24cef77ed0116cd5e5437c31bdbb85d81774c5c6" translate="yes" xml:space="preserve">
          <source>&quot;eval(...)&quot; is still king though (performance wise that is).  If you have property paths directly under your control, there shouldn't be any issues with using 'eval' (especially if speed is desired).  If pulling property paths &quot;over the wire&quot; (&lt;a href=&quot;https://www.youtube.com/watch?v=CewJ-ihIqaM&quot;&gt;on the line&lt;/a&gt;!? lol :P), then yes, use something else to be safe.  Only an idiot would say to never use &quot;eval&quot; at all, as there &lt;a href=&quot;https://stackoverflow.com/questions/1594023/what-is-the-intended-purpose-of-eval-in-javascript?lq=1&quot;&gt;ARE good reasons&lt;/a&gt; when to use it.  Also, &quot;It is used in &lt;a href=&quot;https://github.com/douglascrockford/JSON-js/blob/master/json2.js&quot;&gt;Doug Crockford's JSON parser&lt;/a&gt;.&quot; If the input is safe, then no problems at all.  Use the right tool for the right job, that's it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不过，&amp;ldquo; eval（...）&amp;rdquo;仍然是最主要的（即性能方面）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您直接控制着属性路径，那么使用&amp;ldquo; eval&amp;rdquo;应该不会有任何问题（尤其是在需要速度的情况下）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果将属性路径&amp;ldquo;拉到电线上&amp;rdquo;（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=CewJ-ihIqaM&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在该行上&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; !!大声笑：P），那么可以，请使用其他安全的方法。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;只有白痴才会说根本不要使用&amp;ldquo; eval&amp;rdquo;，因为有&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1594023/what-is-the-intended-purpose-of-eval-in-javascript?lq=1&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;充分的理由&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用它。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;另外，&amp;ldquo;它用于&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/douglascrockford/JSON-js/blob/master/json2.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Doug Crockford的JSON解析器中&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&amp;rdquo; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果输入是安全的，则完全没有问题。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用正确的工具完成正确的工作，就是这样。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba62132abf20afec7e251cc0b1aada5d96081f37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path_to_key&lt;/code&gt;: path in an array. You can replace it by your &lt;code&gt;string_path.split(&quot;.&quot;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;path_to_key&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：数组中的路径。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以将其替换为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;string_path.split(&quot;.&quot;)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="19bc1ecb322eb98b7ed52c5c3ddc05930dfdc951" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type_of_function&lt;/code&gt;: 0 for accessing(dont pass any value to &lt;code&gt;value&lt;/code&gt;), 0 for add and modify. 1 for delete.</source>
          <target state="translated">&lt;code&gt;type_of_function&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：0用于访问（不要将任何值传递给&lt;/font&gt;&lt;/font&gt; &lt;code&gt;value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;），0用于添加和修改。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1表示删除。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="157a49801baf234df40a5b5e502dae5a0add498c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Access array with []&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用[]访问数组&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5280dcbf3ac145fc063a94ec1134951828cf07c7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Bonus&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;Bonus&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="070baa4293f4df5a2e7819f8e151c13553b4cf63" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Cannot read property 'foo' of undefined&lt;/em&gt; error</source>
          <target state="translated">&lt;em&gt;无法读取未定义&lt;/em&gt;错误的&lt;em&gt;属性&amp;ldquo; foo&amp;rdquo;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0382250f083a5d742471dbeafbe4df1f18d5d8e1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Please use common sense and caution when wielding the power of eval. It's a bit like a light saber, if you turn it on there's a 90% chance you'll sever a limb. Its not for everybody.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运用评估的力量时，请运用常识并谨慎行事。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这有点像一把轻型军刀，如果打开它，则有90％的机会切断肢体。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它不适合所有人。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="063290c3ae32f34e51be83309d0195068191315e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DEMO&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;DEMO&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4f1f2d1ba0a7e969d5df6fdb8a7f2b397072df69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;EDIT&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="94784a69e1b68aae4b4c2456308bfb28c2b5c7fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT&lt;/strong&gt; some have noticed that this code will throw an error if passed a string where the left-most indexes don't correspond to a correctly  nested entry within the object.  This is a valid concern, but IMHO best addressed with a &lt;code&gt;try / catch&lt;/code&gt; block when calling, rather than having this function silently return &lt;code&gt;undefined&lt;/code&gt; for an invalid index.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;编辑&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一些人已经注意到，如果传递的字符串最左边的索引与对象内正确嵌套的条目不对应，则此代码将引发错误。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是一个有效的问题，但是IMHO最好&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在调用时&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;try / catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;块来解决，而不是让此函数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为无效索引&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;默默地返回&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eb779788428d6e023fb6a28619b5ddcc41cbc735" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ES6&lt;/strong&gt;: Only one line in Vanila JS (it return null if don't find instead of giving error):</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：Vanila JS中只有一行（如果找不到而不是给出错误，则返回null）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ca7925f304e72facc74cccec904b7dc5bc6b0c7f" translate="yes" xml:space="preserve">
          <source>Access Nested Objects Using Array Reduce</source>
          <target state="translated">使用 Array Reduce 访问嵌套对象</target>
        </trans-unit>
        <trans-unit id="f0008e9374dfcb757325aa57183584e86c00f6bc" translate="yes" xml:space="preserve">
          <source>Accessing nested JavaScript objects and arays by string path</source>
          <target state="translated">通过字符串路径访问嵌套的JavaScript对象和数组</target>
        </trans-unit>
        <trans-unit id="692cc57847469eb4297ffb7c95ab1834a2013483" translate="yes" xml:space="preserve">
          <source>And I would like to access the data using these variable :</source>
          <target state="translated">而我想用这些变量来访问数据。</target>
        </trans-unit>
        <trans-unit id="2a3de4a9dc7c9f3bd23b0b53226033777b1c013b" translate="yes" xml:space="preserve">
          <source>AngularJS</source>
          <target state="translated">AngularJS</target>
        </trans-unit>
        <trans-unit id="6a84edf8542edea4ab8fce87985c3e08491db597" translate="yes" xml:space="preserve">
          <source>Based on a previous answer, I have created a function that can also handle brackets. But no dots inside them due to the split.</source>
          <target state="translated">根据之前的回答,我创建了一个函数,也可以处理括号。但由于拆分的原因,里面没有点。</target>
        </trans-unit>
        <trans-unit id="a044541d05027c70235e4f050569794d0f94c0eb" translate="yes" xml:space="preserve">
          <source>Both of which will work</source>
          <target state="translated">这两样东西都能用</target>
        </trans-unit>
        <trans-unit id="884cf0204b6daf22a068b97557301cb4ca1240ee" translate="yes" xml:space="preserve">
          <source>Building off of Alnitak's answer:</source>
          <target state="translated">在阿尔尼塔克的回答基础上,建立了。</target>
        </trans-unit>
        <trans-unit id="0489223705a1f611addbdd7aab7c31ffc04a32d5" translate="yes" xml:space="preserve">
          <source>By the way, I feel that a simple assignment made at right time will be sufficent...</source>
          <target state="translated">话说回来,我觉得在适当的时候做一个简单的任务就足够了......</target>
        </trans-unit>
        <trans-unit id="41eaa4dfb3df998dc7f2671dde7f978a22d4224b" translate="yes" xml:space="preserve">
          <source>Can't use brackets (&lt;code&gt;[]&lt;/code&gt;) for array indices&amp;mdash;though specifying array indices between the separator token (e.g., &lt;code&gt;.&lt;/code&gt;) works fine as shown above.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数组索引&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不能使用方括号（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;），尽管在分隔符（例如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之间指定数组索引&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;效果很好，如上所示。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aef6157d7ac720248fc2789c3b7552b0960ec078" translate="yes" xml:space="preserve">
          <source>Disclaimer: I am the author of this package.</source>
          <target state="translated">免责声明:本人是本套书的作者。</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="82a60174f2eb9cc6478dfedcd8c10f90ef39a14a" translate="yes" xml:space="preserve">
          <source>Example from the docs:</source>
          <target state="translated">文档中的例子。</target>
        </trans-unit>
        <trans-unit id="84d487ab6e8c61ea0a9c88ee9e656b1a1f11944d" translate="yes" xml:space="preserve">
          <source>Example to use:</source>
          <target state="translated">使用的例子。</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">用例:</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">扩展片段</target>
        </trans-unit>
        <trans-unit id="1a2732dbb4a04dea25a2338f46571d4533faee70" translate="yes" xml:space="preserve">
          <source>Extension of Mohamad Hamouday' Answer will fill in missing keys</source>
          <target state="translated">延长穆罕默德-哈穆德-哈穆德的回答将填补缺失的钥匙。</target>
        </trans-unit>
        <trans-unit id="4549c050a813df0335d1145da2ef7ae78297b47c" translate="yes" xml:space="preserve">
          <source>Finally you could be asking for this</source>
          <target state="translated">最后你可能会要求这样做</target>
        </trans-unit>
        <trans-unit id="73c3a8f81b3b567b5ab57af191ad74c4bfff7417" translate="yes" xml:space="preserve">
          <source>Find the path (otherwise &lt;code&gt;undefined&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;找到路径（否则为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8b7bcde0221380ced38793a0418055f8ea783529" translate="yes" xml:space="preserve">
          <source>For a ready to use function that also recognizes false, 0 and negative number and accept default values as parameter:</source>
          <target state="translated">对于一个即开即用的函数,它还能识别假数、0和负数并接受默认值作为参数。</target>
        </trans-unit>
        <trans-unit id="cf5d5e38c09d3b997f94a35f2b58ffad9ff3a393" translate="yes" xml:space="preserve">
          <source>Good Luck...</source>
          <target state="translated">好运.....</target>
        </trans-unit>
        <trans-unit id="5acf0626d03395a8285984f99b7d1b3d79cc008b" translate="yes" xml:space="preserve">
          <source>Here I offer more ways, which seem faster in many respects:</source>
          <target state="translated">在这里,我提供了更多的方法,在很多方面似乎更快。</target>
        </trans-unit>
        <trans-unit id="412f26af065a74358a67776a53df3f6be57d99bb" translate="yes" xml:space="preserve">
          <source>Here is a simple fiddle demo: &lt;a href=&quot;https://jsfiddle.net/harishanchu/oq5esowf/&quot;&gt;https://jsfiddle.net/harishanchu/oq5esowf/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是一个简单的小提琴演示：&lt;/font&gt;&lt;a href=&quot;https://jsfiddle.net/harishanchu/oq5esowf/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//jsfiddle.net/harishanchu/oq5esowf/&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3376c7e330bad628403764ed803b5fc551748faa" translate="yes" xml:space="preserve">
          <source>Here is an example that would change a field based on this array representation. I am using something like that in react.js for controlled input fields that change the state of nested structures.</source>
          <target state="translated">这里有一个例子,可以根据这个数组表示法改变一个字段。我在 react.js 中使用了类似的东西,用于改变嵌套结构状态的受控输入字段。</target>
        </trans-unit>
        <trans-unit id="3f4b07e7312059ca9395a42575dd23dc587f0bb0" translate="yes" xml:space="preserve">
          <source>I have a data structure like this :</source>
          <target state="translated">我有一个这样的数据结构。</target>
        </trans-unit>
        <trans-unit id="abbee1ba94c93624dbcedb82e0b07732e1aef527" translate="yes" xml:space="preserve">
          <source>I haven't yet found a package to do all of the operations with a string path, so I ended up writing my own quick little package which supports insert(), get() (with default return), set() and remove() operations.</source>
          <target state="translated">我还没有找到一个可以用字符串路径进行所有操作的包,所以最后我自己写了一个支持insert()、get()()(默认返回)、set()和remove()操作的快速小包。</target>
        </trans-unit>
        <trans-unit id="2852942c72e564c4db6c6746a58407896ce17895" translate="yes" xml:space="preserve">
          <source>I hope this address your question...</source>
          <target state="translated">我希望这能解决你的问题.....</target>
        </trans-unit>
        <trans-unit id="e752ffc2d69e65acc0477229f9059c07fbc9a190" translate="yes" xml:space="preserve">
          <source>I just made this based on some similar code I already had, it appears to work:</source>
          <target state="translated">我只是根据我已经有的一些类似的代码做了这个,似乎还能用。</target>
        </trans-unit>
        <trans-unit id="e7700a60a5e414ee84252ed0383bd374d8edb57a" translate="yes" xml:space="preserve">
          <source>I made this function which can you use it to &lt;strong&gt;Get/ Set/ Unset&lt;/strong&gt; any value in object</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我做了这个功能，您可以使用它来&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;获取/设置/取消设置&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象中的任何值&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="477990c9db2824fb73d7d45db04245cf90496c20" translate="yes" xml:space="preserve">
          <source>I think you are asking for this:</source>
          <target state="translated">我想你这是自找的。</target>
        </trans-unit>
        <trans-unit id="fc8f72d19b34c54fffd37ec7b8f7ee7b2443de3e" translate="yes" xml:space="preserve">
          <source>I won't use a string to mantain a sort of xpath &lt;em&gt;query&lt;/em&gt; to access an object value.
As you have to call a function to parse the query and retrieve the value I would follow another path (not :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我不会使用字符串来维护某种xpath &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;查询&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来访问对象值。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于您必须调用函数来解析查询并检索值，因此我将遵循另一条路径（不是：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cb9184e45afeabec4ba2c3add87310e314144329" translate="yes" xml:space="preserve">
          <source>I'm developing online-shop with React. I tried to change values in copied state object to update original state with it on submit. 
Examples above haven't worked for me, because most of them mutate structure of copied object. I found working example of the function for accessing and changing values of the deep nested object properties: &lt;a href=&quot;https://lowrey.me/create-an-object-by-path-in-javascript-2/&quot;&gt;https://lowrey.me/create-an-object-by-path-in-javascript-2/&lt;/a&gt; Here it is:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我正在使用React开发在线商店。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我试图更改复制状态对象中的值，以在提交时更新其原始状态。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上面的示例对我没有用，因为大多数示例都会使复制对象的结构发生变化。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我找到了用于访问和更改深层嵌套对象属性的值的函数的工作示例：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://lowrey.me/create-an-object-by-path-in-javascript-2/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//lowrey.me/create-an-object-by-path-in-javascript-2/&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9136c40f46c3875380a68fd61c4c5f5e1ff75483" translate="yes" xml:space="preserve">
          <source>I've created an &lt;a href=&quot;https://www.npmjs.com/package/object-bystring&quot;&gt;npm package&lt;/a&gt; and &lt;a href=&quot;https://github.com/TomSaporito/object-bystring&quot;&gt;github&lt;/a&gt; with this as well</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我创建了一个&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.npmjs.com/package/object-bystring&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NPM包&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/TomSaporito/object-bystring&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;github上&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有这个问题，以及&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6123caca02ab4ba6fad5795bf8f4236ee65b4f11" translate="yes" xml:space="preserve">
          <source>If you need to access different nested key without knowing it at coding time (it will be trivial to address them) you can use the array notation accessor:</source>
          <target state="translated">如果你需要访问不同的嵌套密钥,而在编码时又不知道它的存在(这将是一个琐碎的地址),你可以使用数组符号访问器。</target>
        </trans-unit>
        <trans-unit id="3a0288d82284737a2b2f1fefb332999909b83ce8" translate="yes" xml:space="preserve">
          <source>In your case to obtain value of &lt;code&gt;part1.name&lt;/code&gt; from &lt;code&gt;someObject&lt;/code&gt; just do:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在您的情况下，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要从&lt;/font&gt; &lt;code&gt;someObject&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;获取&lt;/font&gt;&lt;/font&gt; &lt;code&gt;part1.name&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;值，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;只需执行以下操作：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dea4ecd2ebb31536ee9a48909953e4a83e9d7af7" translate="yes" xml:space="preserve">
          <source>Inspired by @webjay's answer:
&lt;a href=&quot;https://stackoverflow.com/a/46008856/4110122&quot;&gt;https://stackoverflow.com/a/46008856/4110122&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;受到@webjay的答案的启发：&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/46008856/4110122&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：//stackoverflow.com/a/46008856/4110122 &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6411caa48ad49fbf80d196560c84bcd3af61778f" translate="yes" xml:space="preserve">
          <source>Instead of a string an array can be used adressing nested objects and arrays e.g.: &lt;code&gt;[&quot;my_field&quot;, &quot;another_field&quot;, 0, &quot;last_field&quot;, 10]&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代替字符串，可以使用数组处理嵌套的对象和数组，例如：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[&quot;my_field&quot;, &quot;another_field&quot;, 0, &quot;last_field&quot;, 10]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0253e9d62305dbf65253a5464136fc3e71acb72e" translate="yes" xml:space="preserve">
          <source>Is there anyway to achieve this with either pure javascript or JQuery?</source>
          <target state="translated">是否有办法用纯javascript或JQuery来实现?</target>
        </trans-unit>
        <trans-unit id="f37cbe4750f0427714416a747f9844c54d028d1f" translate="yes" xml:space="preserve">
          <source>It makes the parsing easier.</source>
          <target state="translated">这使得解析起来更容易。</target>
        </trans-unit>
        <trans-unit id="5c00230b43238fe04ff5810f117d1d09b3a59219" translate="yes" xml:space="preserve">
          <source>It's a one liner with lodash.</source>
          <target state="translated">这是个单衬里,里面有衬衣。</target>
        </trans-unit>
        <trans-unit id="559bccc3dcac2ef879ce8cbd4ee20832f328b292" translate="yes" xml:space="preserve">
          <source>JSPerf: &lt;a href=&quot;http://jsperf.com/ways-to-dereference-a-delimited-property-string/3&quot;&gt;http://jsperf.com/ways-to-dereference-a-delimited-property-string/3&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSPerf：&lt;/font&gt;&lt;a href=&quot;http://jsperf.com/ways-to-dereference-a-delimited-property-string/3&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：//jsperf.com/ways-to-dereference-a-delimited-property-string/3&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8474b6024b8e5deacff04ae6d5a59bdaf703c91a" translate="yes" xml:space="preserve">
          <source>Just had the same question recently and successfully used &lt;a href=&quot;https://npmjs.org/package/tea-properties&quot;&gt;https://npmjs.org/package/tea-properties&lt;/a&gt; which also &lt;code&gt;set&lt;/code&gt; nested object/arrays :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最近才遇到相同的问题，并成功使用了&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://npmjs.org/package/tea-properties&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://npmjs.org/package/tea-properties&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它也&lt;/font&gt;&lt;/font&gt; &lt;code&gt;set&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;嵌套对象/数组：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f23bb5a89e2f0742d38b7b367e3f1f2f13e2d9df" translate="yes" xml:space="preserve">
          <source>Just in case, anyone's visiting this question in 2017 or later and looking for an &lt;strong&gt;easy-to-remember&lt;/strong&gt; way, here's an elaborate blog post on &lt;a href=&quot;https://dev.to/flexdinesh/accessing-nested-objects-in-javascript--9m4&quot;&gt;Accessing Nested Objects in JavaScript&lt;/a&gt; without being bamboozled by</source>
          <target state="translated">为了以防万一，有人在2017年或以后访问此问题并寻找一种&lt;strong&gt;易于记忆的&lt;/strong&gt;方式，这是一篇有关&lt;a href=&quot;https://dev.to/flexdinesh/accessing-nested-objects-in-javascript--9m4&quot;&gt;在JavaScript中访问嵌套对象&lt;/a&gt;的精心撰写的博客文章，</target>
        </trans-unit>
        <trans-unit id="701662023202033f7903861fef96214472924440" translate="yes" xml:space="preserve">
          <source>Just place this function in your root controller and use it any child scope like this:</source>
          <target state="translated">只要把这个函数放在你的根控制器中,然后像这样使用它的任何子范围。</target>
        </trans-unit>
        <trans-unit id="4362ba355b0806df1101d329c7ebd882557bed67" translate="yes" xml:space="preserve">
          <source>Let's take this example structure</source>
          <target state="translated">让我们以这样的结构为例</target>
        </trans-unit>
        <trans-unit id="52c0a2f3a058b234bb1af57941e3f1c4df61c56c" translate="yes" xml:space="preserve">
          <source>Limitations:</source>
          <target state="translated">Limitations:</target>
        </trans-unit>
        <trans-unit id="f579c523960af1aec824c6fdc57af6d4abd76a1f" translate="yes" xml:space="preserve">
          <source>OR</source>
          <target state="translated">OR</target>
        </trans-unit>
        <trans-unit id="dde7077b499ab6d09d7c886c542093050cfc50c2" translate="yes" xml:space="preserve">
          <source>Option 1: Split string on . or [ or ] or ' or &quot;, reverse it, skip empty items.</source>
          <target state="translated">选项1:将字符串拆分在.或[或 ]或'或'或 &quot;上,颠倒过来,跳过空项。</target>
        </trans-unit>
        <trans-unit id="6ef3318d6eb2bf26597538449e1daa28e0d128b3" translate="yes" xml:space="preserve">
          <source>Option 2 (fastest of all, except &lt;code&gt;eval&lt;/code&gt;): Low level character scan (no regex/split/etc, just a quick char scan).
&lt;em&gt;Note:  This one does not support quotes for indexes.&lt;/em&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;选项2（除&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之外，速度最快&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）：低级字符扫描（无regex / split / etc，仅是快速char扫描）。 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意：这不支持索引引号。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="45fba52a57a29282e0567c951920f4423887503b" translate="yes" xml:space="preserve">
          <source>Option 3: &lt;em&gt;(&lt;strong&gt;new&lt;/strong&gt;: option 2 expanded to support quotes - a bit slower, but still fast)&lt;/em&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方案3： &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;新&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：扩大到支持报价选项2 -慢一点，但仍快）&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="17e3ea9b62720720cd555f18a12cbff2ba3a2d23" translate="yes" xml:space="preserve">
          <source>Or ES6 version w/ reduce...</source>
          <target state="translated">或者是ES6版本w减少.....</target>
        </trans-unit>
        <trans-unit id="a1ae528579d6cd8c1a0d5911c94622b3d77870e3" translate="yes" xml:space="preserve">
          <source>Or even better...</source>
          <target state="translated">甚至更好的是.....</target>
        </trans-unit>
        <trans-unit id="e32eab4ed6f7676895dc26abbd0958a1621e623d" translate="yes" xml:space="preserve">
          <source>Or example:</source>
          <target state="translated">或者举例说明。</target>
        </trans-unit>
        <trans-unit id="0db21959734094d2ba695165e2e35a0c2f16abf0" translate="yes" xml:space="preserve">
          <source>Or maybe you are asking for this</source>
          <target state="translated">或者说,你的要求是为了这个</target>
        </trans-unit>
        <trans-unit id="54358e912540fbbd864e4318c7340c5fc19adb41" translate="yes" xml:space="preserve">
          <source>Plunkr</source>
          <target state="translated">Plunkr</target>
        </trans-unit>
        <trans-unit id="ebff6f0910191adf627b8e100d0b9ac470daff41" translate="yes" xml:space="preserve">
          <source>Remove blank strings</source>
          <target state="translated">移除空白字符串</target>
        </trans-unit>
        <trans-unit id="82088ac75f1bbf8d59d221b772dd4676a4f297dc" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;[]&lt;/code&gt; bracket syntax with &lt;code&gt;.&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[]&lt;/code&gt; 方&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;括号语法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;替换&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3f13c03367cd73494ffd711c9a3ba574bd819c15" translate="yes" xml:space="preserve">
          <source>See a working demo at &lt;a href=&quot;http://jsfiddle.net/alnitak/hEsys/&quot;&gt;http://jsfiddle.net/alnitak/hEsys/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/alnitak/hEsys/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://jsfiddle.net/alnitak/hEsys/上&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;查看有效的演示&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a0a8ba41ecd95d649ae9c809bf805ba7a7e14202" translate="yes" xml:space="preserve">
          <source>Simple function, allowing for either a string or array path.</source>
          <target state="translated">简单的函数,允许使用字符串或数组路径。</target>
        </trans-unit>
        <trans-unit id="7e5e9269acb58c22928df1952b7c482b9a51b67d" translate="yes" xml:space="preserve">
          <source>Speigg's approach is very neat and clean, though I found this reply while searching for the solution of accessing AngularJS $scope properties by string path and with a little modification it does the job:</source>
          <target state="translated">Speigg的方法非常干净利落,虽然我在搜索通过字符串路径访问AngularJS $scope属性的解决方案时,发现了这个回复,只要稍加修改就能完成任务。</target>
        </trans-unit>
        <trans-unit id="2a23fe4afa339a11a1b88f89161fcdc1b4b7109f" translate="yes" xml:space="preserve">
          <source>Split on &lt;code&gt;.&lt;/code&gt; character</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;拆分&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;字符&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="640ab2bae07bedc4c163f679a746f7ab7fb5d1fa" translate="yes" xml:space="preserve">
          <source>Test</source>
          <target state="translated">Test</target>
        </trans-unit>
        <trans-unit id="6543ab0efd138a238ebdbcd00ac07acfcd3155bb" translate="yes" xml:space="preserve">
          <source>The functions are shorter, clearer, the interpreter check them for you for syntax errors and so on.</source>
          <target state="translated">函数更短,更清晰,解释器为你检查它们的语法错误等等。</target>
        </trans-unit>
        <trans-unit id="cd332324f928bb195486fbdbe7b0d9f4e95300b1" translate="yes" xml:space="preserve">
          <source>The solutions here are just for accessing the deeply nested keys. I needed one for accessing, adding, modifying and deleting the keys. This is what I came up with:</source>
          <target state="translated">这里的解决方案只是用于访问深度嵌套的键的访问。我需要一个用于访问、添加、修改和删除密钥的方案。这就是我想出来的方案。</target>
        </trans-unit>
        <trans-unit id="0de40644ab3a8659c7ba0625cf4b76fa463b082b" translate="yes" xml:space="preserve">
          <source>There is also an excellent type handling minimal library &lt;a href=&quot;https://www.npmjs.com/package/typy&quot;&gt;typy&lt;/a&gt; that does all this for you.</source>
          <target state="translated">还有一个出色的类型处理最小的库类型错误，可以为您完成所有这些工作。</target>
        </trans-unit>
        <trans-unit id="9513f660916a20b0a8c95351517ef32554988807" translate="yes" xml:space="preserve">
          <source>There is an &lt;code&gt;npm&lt;/code&gt; module now for doing this: &lt;a href=&quot;https://github.com/erictrinh/safe-access&quot;&gt;https://github.com/erictrinh/safe-access&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;npm&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;模块可以执行此操作：&lt;/font&gt;&lt;a href=&quot;https://github.com/erictrinh/safe-access&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//github.com/erictrinh/safe-access&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ce638adb2fa9bdb3af72a99475defd8018a0f2b2" translate="yes" xml:space="preserve">
          <source>They are equivalent to the dot notation accessor and may vary at runtime, for example:</source>
          <target state="translated">它们等同于点符号访问器,在运行时可能会有所变化,例如。</target>
        </trans-unit>
        <trans-unit id="2694b124c6f812b751c8b3af365e73caa4602797" translate="yes" xml:space="preserve">
          <source>This allows you to set a value as well!</source>
          <target state="translated">这样你也可以设置一个值!</target>
        </trans-unit>
        <trans-unit id="cc0048ad098d0d0e0822d230f5274fa63b6946ed" translate="yes" xml:space="preserve">
          <source>This is now supported by lodash using &lt;code&gt;_.get(obj, property)&lt;/code&gt;. See &lt;a href=&quot;https://lodash.com/docs#get&quot;&gt;https://lodash.com/docs#get&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lodash现在使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;_.get(obj, property)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;支持此功能&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参见&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://lodash.com/docs#get&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://lodash.com/docs#get&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e369cdbbb139dc09555a1cb52c64e2205eef80ad" translate="yes" xml:space="preserve">
          <source>This is the solution I use:</source>
          <target state="translated">这是我使用的解决方案。</target>
        </trans-unit>
        <trans-unit id="e97ead4e967876bb64547bf16dcb9d1084eac13d" translate="yes" xml:space="preserve">
          <source>This required that you also define array indexes with dot notation:</source>
          <target state="translated">这需要你也用点符号定义数组索引。</target>
        </trans-unit>
        <trans-unit id="97d5b19b196eff0c2e3fff13ad212f72ebce3ef4" translate="yes" xml:space="preserve">
          <source>This will probably never see the light of day... but here it is anyway.</source>
          <target state="translated">这可能永远也不会看到天亮了......但无论如何都会在这里。</target>
        </trans-unit>
        <trans-unit id="849916279f13f7d4ceb1dce72386c5c0c261f024" translate="yes" xml:space="preserve">
          <source>To &lt;strong&gt;set&lt;/strong&gt; a path (Requested by @rob-gordon) you can use:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;设置&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;路径（@ rob-gordon请求），可以使用：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="56e3fdff87ae9f0ae61a5a84dce9e283d8be9946" translate="yes" xml:space="preserve">
          <source>To be able to access nested arrays, you can write your own array reduce util.</source>
          <target state="translated">为了能够访问嵌套的数组,可以编写自己的数组reduce util。</target>
        </trans-unit>
        <trans-unit id="ec17d2b0393d701bb378fb92b5f34cc43ec1456a" translate="yes" xml:space="preserve">
          <source>To use it:</source>
          <target state="translated">要使用它。</target>
        </trans-unit>
        <trans-unit id="f452cb1d477a893f93179bd9d7c538586830b0fb" translate="yes" xml:space="preserve">
          <source>Usage::</source>
          <target state="translated">Usage::</target>
        </trans-unit>
        <trans-unit id="3df4d3694514c10bb8df02eee327eee6020116ea" translate="yes" xml:space="preserve">
          <source>While reduce is good, I am surprised no one used forEach:</source>
          <target state="translated">虽然减少是好事,但我很惊讶没有人用在Each上。</target>
        </trans-unit>
        <trans-unit id="c23e9e71bb9c581c5c2a4c72bbc9e1143ef8dfdb" translate="yes" xml:space="preserve">
          <source>With typy, your code will look like this</source>
          <target state="translated">使用Typy,你的代码会是这样的</target>
        </trans-unit>
        <trans-unit id="ff1e4986e18cd31399833b1452c8d71f6d98f068" translate="yes" xml:space="preserve">
          <source>Working with &lt;code&gt;Underscore&lt;/code&gt;'s &lt;code&gt;property&lt;/code&gt; or &lt;code&gt;propertyOf&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Underscore&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;property&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;propertyOf&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f2e5067c2a787cd8c5f41ede90384430fbea6328" translate="yes" xml:space="preserve">
          <source>Works for arrays / arrays inside the object also.
Defensive against invalid values.</source>
          <target state="translated">也适用于对象内部的数组数组。防御无效值。</target>
        </trans-unit>
        <trans-unit id="a129a012ae28365ddc9a41a51d6b419a38d05db8" translate="yes" xml:space="preserve">
          <source>Works with</source>
          <target state="translated">可与</target>
        </trans-unit>
        <trans-unit id="7a8079be9b0c3e8b998effb68f86d2e10fca9361" translate="yes" xml:space="preserve">
          <source>You can manage to obtain value of a deep object member with dot notation without any external JavaScript library with the simple following trick:</source>
          <target state="translated">你可以在不需要任何外部JavaScript库的情况下,通过以下简单的技巧来获取一个深层对象成员的值。</target>
        </trans-unit>
        <trans-unit id="f0f3bef5d47b1f352a081f2926817d482a4858cf" translate="yes" xml:space="preserve">
          <source>You can use dot notation, brackets, number indices, string number properties, and keys with non-word characters. Simple usage below:</source>
          <target state="translated">你可以使用点符号、括号、数字索引、数字属性、字符串数字属性和非字型的键。下面是简单的使用方法。</target>
        </trans-unit>
        <trans-unit id="101e1dc152e5de32d4e9e331e75df05987f0a024" translate="yes" xml:space="preserve">
          <source>You could be asking for this:</source>
          <target state="translated">你可能是自讨苦吃。</target>
        </trans-unit>
        <trans-unit id="3d092484c5780adabca7e8d1ead824ec89fd42b0" translate="yes" xml:space="preserve">
          <source>You'd have to parse the string yourself:</source>
          <target state="translated">你必须自己去解析字符串。</target>
        </trans-unit>
        <trans-unit id="e1d5a2feb333e8de574172ca6bb76eaa8a2bf140" translate="yes" xml:space="preserve">
          <source>get:</source>
          <target state="translated">get:</target>
        </trans-unit>
        <trans-unit id="1ec285792f84b2006557cfe7a76ef03e4dffbd46" translate="yes" xml:space="preserve">
          <source>is equivalent to</source>
          <target state="translated">相当于</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="48f0021b8b5f520c50be78dab154fcd0720c9e1f" translate="yes" xml:space="preserve">
          <source>or, if you are uneasy with the &lt;em&gt;apply&lt;/em&gt; method</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或者，如果您对&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;apply&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;感到不安&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c1d4fd3a72cba7c1c3c3d75e5ec2bfb66841fbf2" translate="yes" xml:space="preserve">
          <source>part1name should be filled with &lt;code&gt;someObject.part1.name&lt;/code&gt; 's value, which is &quot;Part 1&quot;. Same thing with part2quantity which filled with 60.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;part1name应该用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;someObject.part1.name&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的值&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;填充&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，即&amp;ldquo;第1部分&amp;rdquo;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;part2quantity填充60。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c60a32db286e47f9a9213ca0f8adb16543847d99" translate="yes" xml:space="preserve">
          <source>set:</source>
          <target state="translated">set:</target>
        </trans-unit>
        <trans-unit id="15281a4bf6b9a52c4b9a2899dcf29a58ee62cad0" translate="yes" xml:space="preserve">
          <source>using eval:</source>
          <target state="translated">使用评价。</target>
        </trans-unit>
        <trans-unit id="2a5ec87bb3424d21c4c376eeb04490577687e3ac" translate="yes" xml:space="preserve">
          <source>wrap to return undefined on error</source>
          <target state="translated">包裹,在错误时返回未定义</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
