<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/618535">
    <body>
      <group id="618535">
        <trans-unit id="54f697a1ff421e46f37022813a88d0937a82090c" translate="yes" xml:space="preserve">
          <source>&amp;amp;</source>
          <target state="translated">&amp;amp;</target>
        </trans-unit>
        <trans-unit id="37f5899c4710f8727a605f1a95f04b602caa2b9e" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;float&lt;/code&gt; is short for &quot;floating point&quot;, and just means a number with a point something on the end.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&amp;ldquo; floating point&amp;rdquo;的缩写，仅表示末尾带有数字的数字。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6026b7526a6fbebe8bb8ee7cad7eadcde609078a" translate="yes" xml:space="preserve">
          <source>* In some cases, what I would call &lt;em&gt;nominal distance&lt;/em&gt;, we may indeed want to 'count' distance. For example, maybe we are dealing with country signs that show distances to cities, and we know that those distances never have more than one decimal digit (xxx.x km).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;*在某些情况下，我称之为&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;标称距离&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，我们可能确实想&amp;ldquo;计算&amp;rdquo;距离。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如，也许我们正在处理显示到城市距离的国家标志，并且我们知道这些距离永远不会超过一个十进制数字（xxx.x km）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db7c0dfcd6cfb7953eef10c524b854307943d947" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.decimal&quot;&gt;Decimal&lt;/a&gt; -28-29 significant digits (128 bit)</source>
          <target state="translated">&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.decimal&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;十进制&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -28-29有效数字（128位）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99b49c919651808b27b1b7c158f9eea3a5ede42c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.double&quot;&gt;Double&lt;/a&gt;-15-16 digits (64 bit)</source>
          <target state="translated">&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.double&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;双&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -15-16位数字（64位）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43da59246dc5d76525a79d2a54749a9898adcc81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.single&quot;&gt;Float&lt;/a&gt; - 7 digits (32 bit)</source>
          <target state="translated">&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.single&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;浮点数&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -7位数字（32位）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac558e5ef8c193696b7c197f275d9d8091e73496" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Decimals&lt;/code&gt; also allow the encoding or trailing zeros.</source>
          <target state="translated">&lt;code&gt;Decimals&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;也允许编码或尾随零。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2952f98519ef996b537e1e36f53c2b89e3a8fa23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Decimals&lt;/code&gt; and &lt;code&gt;Floats/Doubles&lt;/code&gt; cannot be compared without a cast whereas &lt;code&gt;Floats&lt;/code&gt; and &lt;code&gt;Doubles&lt;/code&gt; can.</source>
          <target state="translated">&lt;code&gt;Decimals&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果不进行&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Floats/Doubles&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;则不能比较&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;小数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;浮点数/双精度&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数，而可以进行&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Floats&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Doubles&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数的比较。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29847fbe2116c3f60cf5bbf95957b4f49286de2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Decimals&lt;/code&gt; are much slower than a &lt;code&gt;double/float&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Decimals&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要比&lt;/font&gt;&lt;/font&gt; &lt;code&gt;double/float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;慢得多&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b0b5a548ebd297b64756bcf2987496babb034ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decimal&lt;/code&gt; has about 28 digits of precision</source>
          <target state="translated">&lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的精度约为28位&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c18bc459005b7daf7dcdf90e7ef4f1df9ec789b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decimal&lt;/code&gt; is a &lt;a href=&quot;http://csharpindepth.com/Articles/General/Decimal.aspx&quot;&gt;floating &lt;em&gt;decimal&lt;/em&gt; point type&lt;/a&gt;. In other words, they represent a number like this:</source>
          <target state="translated">&lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://csharpindepth.com/Articles/General/Decimal.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;浮点型&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;小数点&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类型&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;换句话说，它们代表这样的数字：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e14a3b3326b3904af1c6dd05e4a5ac4b5efa27d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;double&lt;/code&gt; has about 15 digits of precision</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的精度约为15位&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d5c5850696e768cc0a9f3c96d1c5ec7ff6d7959" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;float&lt;/code&gt; 7 digits of precision</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 7位精度&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9953f558e77705ed916c73f4c1ee595e16a57557" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;float&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt; are &lt;a href=&quot;http://csharpindepth.com/Articles/General/FloatingPoint.aspx&quot;&gt;floating &lt;em&gt;binary&lt;/em&gt; point types&lt;/a&gt;. In other words, they represent a number like this:</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://csharpindepth.com/Articles/General/FloatingPoint.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;浮动&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;二进制&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;点类型&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;换句话说，它们代表这样的数字：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1cf9e77ba2278cb0cbc185195f53d2a482e775ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;float&lt;/code&gt; is a 32-bit number, and &lt;code&gt;double&lt;/code&gt; is a 64-bit number.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是32位数字，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是64位数字。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a76b42ff2d3f5f9e3109b54babcfadf24d5e595f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;float&lt;/code&gt; is a &lt;code&gt;32-bit&lt;/code&gt; number, &lt;code&gt;double&lt;/code&gt; is a &lt;code&gt;64-bit&lt;/code&gt; number and &lt;code&gt;decimal&lt;/code&gt; is a &lt;code&gt;128-bit&lt;/code&gt; number.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;32-bit&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数字，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;64-bit&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数字，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;128-bit&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数字。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="264ccccd5c0320688718ce31bc051692eeaf0f6b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Decimal.TryParse(cellValue.ToString(), out value);&lt;/em&gt; // would return &lt;strong&gt;0&lt;/strong&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Decimal.TryParse（cellValue.ToString（），输出值）；&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//将返回&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;0&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="08a5aff3c15e244f6108b22c6942310599188602" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;When would someone use one of these?&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有人什么时候会使用其中之一？&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d7e3111731095b413fe21355ada9217edeb7f029" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Decimal&lt;/strong&gt; 128 bit (28-29 significant digits)
In case of financial applications it is better to use 
Decimal types because it gives you a high level of accuracy and easy to avoid rounding errors
Use decimal for non-integer math where precision is needed (e.g. money and currency)</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;十进制&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 128位（28-29位有效数字）在金融应用程序中，最好使用十进制类型，因为它可以提供较高的准确性，并且易于避免舍入错误。对于需要精度的非整数数学，请使用十进制（例如货币和货币）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="185d307474f65d7cc00f8857fe0e56200fcf2116" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Double&lt;/strong&gt;  64 bit (15-16 digits)
Double Types are probably the most normally used data type for real values, except handling money.
Use double for non-integer math where the most precise answer isn't necessary.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;双&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 精度64位（15-16位）双精度类型可能是用于实值的最常用数据类型，除了处理资金外。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于不需要最精确答案的非整数数学，请使用double。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f093dfc3e53e2c222216fbb1bfc8fa6c92036836" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Float&lt;/strong&gt;  32 bit (7 digits)
It is used mostly in graphic libraries because very high demands for processing powers,
also used situations that can endure rounding errors.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;浮点&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 32位（7位），主要用于图形库中，因为对处理能力的要求非常高，还使用了会承受舍入误差的情况。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5dc78fb0697aac997dda8d17bfff6e646454d8a4" translate="yes" xml:space="preserve">
          <source>A certain loss of precision is acceptable in many scientific calculations because of the practical limits of the physical problem or artifact being measured.  Loss of precision is not acceptable in finance.</source>
          <target state="translated">在许多科学计算中,由于被测量的物理问题或实物的实际限制,一定的精度损失是可以接受的。精度的损失在金融学中是不能接受的。</target>
        </trans-unit>
        <trans-unit id="4ef78f26486462f6e58ed78f44b95eb1644cd586" translate="yes" xml:space="preserve">
          <source>Again, the number and the location of the &lt;em&gt;decimal&lt;/em&gt; point are both encoded within the value &amp;ndash; that's what makes &lt;code&gt;decimal&lt;/code&gt; still a floating point type instead of a fixed point type.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同样，&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;小数点&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的数字和位置&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;都在值中进行编码-这就是使&lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仍然是浮点类型而不是定点类型的原因。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d5cb8f03ec3721ef8296ed8405aeeffa8c153d09" translate="yes" xml:space="preserve">
          <source>And Bytes Occupied by each are</source>
          <target state="translated">而每个字节所占的字节数是</target>
        </trans-unit>
        <trans-unit id="eff1aa36668e9a3c0d25c7e2e2466197321adb95" translate="yes" xml:space="preserve">
          <source>Answer: On a 32 bit machine bLower contains TRUE !!!</source>
          <target state="translated">答案是:在32位的机器上,bLower包含TRUE! 在32位机上,bLower包含TRUE!</target>
        </trans-unit>
        <trans-unit id="485700f7043c8456198f16eb6045364d5da2f1e0" translate="yes" xml:space="preserve">
          <source>As for what to use when:</source>
          <target state="translated">至于什么时候用什么。</target>
        </trans-unit>
        <trans-unit id="08cc8c02c63b46ebc579432f8c69389e02d147cb" translate="yes" xml:space="preserve">
          <source>But these do not:</source>
          <target state="translated">但这些不。</target>
        </trans-unit>
        <trans-unit id="1e3ee7d6b3e6f808401117bf1a8f2f3409ad4fee" translate="yes" xml:space="preserve">
          <source>Caution: I think that same problem can certainly exists for other number because Decimal is only a double with higher precision and the precision has always a limit.</source>
          <target state="translated">注意:我认为其他的数字肯定也会存在同样的问题。我认为同样的问题,其他的数字肯定也会存在,因为十进制只是一个精度较高的双数,精度总是有一个极限。</target>
        </trans-unit>
        <trans-unit id="f19f90ee06a28bdc8b0c742c9a2f3a160958b045" translate="yes" xml:space="preserve">
          <source>Decimal - 128 bit (28-29 significant digits)</source>
          <target state="translated">十进制-128位(28-29个重要数字)。</target>
        </trans-unit>
        <trans-unit id="6994cc636981c612cd5ddee0d0f52ce2bd0810a5" translate="yes" xml:space="preserve">
          <source>Decimal cannot be divided by integer zero. Compilation will always fail if you do that.</source>
          <target state="translated">小数不能被整数0除以整数。如果你这样做,编译总是会失败。</target>
        </trans-unit>
        <trans-unit id="6cd6dadd2bf0d0fccc1df4f5e3878b48efc89733" translate="yes" xml:space="preserve">
          <source>Decimal has an unacceptably smaller value range than double, despite the fact that it supports more digits of precision. Therefore, Decimal can't be used to represent many scientific values.</source>
          <target state="translated">十进制的值范围比双位数小得多,尽管它支持更多的精度位数,但它的值范围却比双位数小得多。因此,十进制不能用来表示许多科学值。</target>
        </trans-unit>
        <trans-unit id="34dbdeeeb507cdf0af128686ef1a1e17076b6f64" translate="yes" xml:space="preserve">
          <source>Decimal is much (much) slower than float and double for most operations, primarily because floating point operations are done in binary, whereas Decimal stuff is done in base 10 (i.e. floats and doubles are handled by the FPU hardware, such as MMX/SSE, whereas decimals are calculated in software).</source>
          <target state="translated">对于大多数操作来说,十进制比浮点数和二进制要慢得多(多得多),这主要是因为浮点数操作是用二进制来完成的,而十进制的东西是用10进制来完成的(也就是说,浮点数和二进制是由FPU硬件来处理的,比如MMXSSE,而十进制是在软件中计算的)。</target>
        </trans-unit>
        <trans-unit id="2b0417119a8eb94dee10113420f3a0c8295a58fd" translate="yes" xml:space="preserve">
          <source>Decimals and Floats/Doubles cannot be compared without a cast whereas Floats and Doubles can. Decimals also allow the encoding or trailing zeros.</source>
          <target state="translated">小数和FloatsDoubles不能在没有投币的情况下进行比较,而Floats和Doubles可以。小数也允许编码或尾数零。</target>
        </trans-unit>
        <trans-unit id="290f8962dc6457e06c7c0b66b4bdc4334c02d9c8" translate="yes" xml:space="preserve">
          <source>Decimals have much higher precision and are usually used within financial applications that require a high degree of accuracy. Decimals are much slower (up to 20X times in some tests) than a double/float.</source>
          <target state="translated">小数的精度要高得多,通常用于对精度要求较高的金融应用中。小数的运算速度要比双浮点运算慢得多(在某些测试中可达到20倍)。</target>
        </trans-unit>
        <trans-unit id="d7865dc73c1fd69ab20f944788bf6d9a1c552749" translate="yes" xml:space="preserve">
          <source>Difference between decimal, float and double in .NET</source>
          <target state="translated">.NET中的十进制、浮点数和双倍数之间的区别</target>
        </trans-unit>
        <trans-unit id="bc911cfbddffb9538d45b9578fd21d74ee90e558" translate="yes" xml:space="preserve">
          <source>Double - 64 bit (15-16 digits)</source>
          <target state="translated">双位-64位 (15-16位)</target>
        </trans-unit>
        <trans-unit id="6abd1a14943f2820b07e78eeb705520a400930da" translate="yes" xml:space="preserve">
          <source>Double and float can be divided by integer zero without an exception at both compilation and run time.</source>
          <target state="translated">在编译和运行时,Double和float都可以被整数0除以整数0,无一例外。</target>
        </trans-unit>
        <trans-unit id="c2e9a11930cc502b08afe163fdfd2f183a45d18b" translate="yes" xml:space="preserve">
          <source>Double click your new button to get at the code. Add the following three lines to your button code:</source>
          <target state="translated">双击你的新按钮以获得代码。在你的按钮代码中添加以下三行。</target>
        </trans-unit>
        <trans-unit id="45d91068e57e7aa6be5a19be6d1ffbc741c38aa4" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;double&lt;/code&gt; has less precision than a &lt;code&gt;decimal&lt;/code&gt;, this actually ensured small numbers would still be recognised. For some reason, &lt;strong&gt;&lt;code&gt;double.TryParse&lt;/code&gt;&lt;/strong&gt; was actually able to retrieve such small numbers, whereas &lt;strong&gt;&lt;code&gt;decimal.TryParse&lt;/code&gt;&lt;/strong&gt; would set them to zero.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;即使&lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;精度不如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;精度&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，这实际上确保了仍然可以识别出较小的数字。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于某种原因，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;double.TryParse&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实际上能够检索到如此小的数字，而&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;decimal.TryParse&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;会将它们设置为零。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ff1e5f13adaf9f0fdf0cdf0c8e6464dee6a34247" translate="yes" xml:space="preserve">
          <source>Float - 32 bit (7 digits)</source>
          <target state="translated">Float-32位(7位)。</target>
        </trans-unit>
        <trans-unit id="5ebf31648c60aad9ea0489937f26b8f7e8e9e148" translate="yes" xml:space="preserve">
          <source>For applications such as games and embedded systems where memory and performance are both critical, float is usually the numeric type of choice as it is faster and half the size of a double. Integers used to be the weapon of choice, but floating point performance has overtaken integer in modern processors. Decimal is right out!</source>
          <target state="translated">对于游戏和嵌入式系统等对内存和性能都很重要的应用,浮点通常是数字类型的选择,因为它的速度更快,大小只有双倍的一半。整数曾经是首选的武器,但在现代处理器中,浮点性能已经超越了整数。十进制已经被淘汰了!</target>
        </trans-unit>
        <trans-unit id="3cadad1fb936cd59a173ee4ad751226d192504b1" translate="yes" xml:space="preserve">
          <source>For more information, see:</source>
          <target state="translated">欲了解更多信息,请参见:</target>
        </trans-unit>
        <trans-unit id="b34aa2ddc6b0b7f92e2cb186e000ad6920534dfa" translate="yes" xml:space="preserve">
          <source>For values which are &quot;naturally exact decimals&quot; it's good to use &lt;code&gt;decimal&lt;/code&gt;. This is usually suitable for any concepts invented by humans: financial values are the most obvious example, but there are others too. Consider the score given to divers or ice skaters, for example.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于&amp;ldquo;自然精确的小数&amp;rdquo;值，最好使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这通常适用于人类发明的任何概念：财务价值是最明显的例子，但也有其他一些例子。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如，考虑给潜水员或溜冰者的分数。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="784a45840a6dbc10c33232b2978abcd9c20f1767" translate="yes" xml:space="preserve">
          <source>For values which are more artefacts of nature which can't really be measured &lt;em&gt;exactly&lt;/em&gt; anyway, &lt;code&gt;float&lt;/code&gt;/&lt;code&gt;double&lt;/code&gt; are more appropriate. For example, scientific data would usually be represented in this form. Here, the original values won't be &quot;decimally accurate&quot; to start with, so it's not important for the expected results to maintain the &quot;decimal accuracy&quot;. Floating binary point types are much faster to work with than decimals.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果读入的性质的更加伪影不能真正测量值&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;精确地&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，无论如何，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更合适。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如，科学数据通常以这种形式表示。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在此，原始值一开始就不会是&amp;ldquo;十进制精度&amp;rdquo;，因此对于预期结果而言，保持&amp;ldquo;十进制精度&amp;rdquo;并不重要。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;浮点二进制点类型比十进制小得多。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c2899e015c1b320354e27e895ffdbd99d0f7a36e" translate="yes" xml:space="preserve">
          <source>Halt your program and return to the coding window. Change this line:</source>
          <target state="translated">停止你的程序并返回到编码窗口。改变这一行。</target>
        </trans-unit>
        <trans-unit id="0851ff1fdbfbdb0f6caaf5a3ba5cae4456653e36" translate="yes" xml:space="preserve">
          <source>I found this is interesting. &lt;a href=&quot;http://download.oracle.com/docs/cd/E19957-01/806-3568/ncg_goldberg.html&quot;&gt;What Every Computer Scientist Should Know About Floating-Point Arithmetic&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我发现这很有趣。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://download.oracle.com/docs/cd/E19957-01/806-3568/ncg_goldberg.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每位计算机科学家都应了解的浮点运算法则&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f071c332fe3b74368233c2668d23c2389de4c550" translate="yes" xml:space="preserve">
          <source>I mean</source>
          <target state="translated">我是说</target>
        </trans-unit>
        <trans-unit id="2ea289abec6a48909512c260da49bc88db258fac" translate="yes" xml:space="preserve">
          <source>I won't reiterate tons of good (and some bad) information already answered in other answers and comments, but I will answer your followup question with a tip:</source>
          <target state="translated">我不会重申其他答案和评论中已经回答过的好的(也有一些不好的)信息,但我会用提示回答你的后续问题。</target>
        </trans-unit>
        <trans-unit id="22ca062b737f9ab0dc8b97338ee6389620f87e92" translate="yes" xml:space="preserve">
          <source>If I replace Double by Decimal, bLower contains FALSE which is the good answer.</source>
          <target state="translated">如果我把Double换成Decimal,bLower包含FALSE是好的答案。</target>
        </trans-unit>
        <trans-unit id="10d24ddd90fb10edf96b9876f7473a6ae41f2b0e" translate="yes" xml:space="preserve">
          <source>If you need better accuracy, use double instead of float.
In modern CPUs both data types have almost the same performance. The only benifit of using float is they take up less space. Practically matters only if you have got many of them.</source>
          <target state="translated">如果你需要更好的精度,请使用双倍而不是浮点数。在现代CPU中,这两种数据类型的性能几乎相同。使用float的唯一好处是它们占用空间较小。实际上,只有当你有很多个浮点数时才会有问题。</target>
        </trans-unit>
        <trans-unit id="830d72c2cd3996f27fcf7be7d1b65878293ab5f9" translate="yes" xml:space="preserve">
          <source>In default settings, Floats (System.Single) and doubles (System.Double) will never use
  overflow checking while Decimal (System.Decimal) will always use
  overflow checking.</source>
          <target state="translated">在默认设置中,Floats (System.Single)和double (System.Double)永远不会使用溢出检查,而Decimal (System.Decimal)总是使用溢出检查。</target>
        </trans-unit>
        <trans-unit id="3fa99cabd00f27462a64a618353a7a9855415d72" translate="yes" xml:space="preserve">
          <source>In double, the problem is that fMean-fDelta = 1.09999999999 that is lower that 1.1.</source>
          <target state="translated">在双重中,问题是fMean-fDelta=1.0999999999999,小于1.1。</target>
        </trans-unit>
        <trans-unit id="4c47a2e284cfcd472e106fb991146fcd4fed932c" translate="yes" xml:space="preserve">
          <source>In fact, Double, Float and Decimal correspond to BINARY decimal in COBOL !</source>
          <target state="translated">事实上,在COBOL中,Double、Float和Decimal对应于BINARY decimal!</target>
        </trans-unit>
        <trans-unit id="07dc8b89fbb3234f10185a52f8f3c5af703cf7f4" translate="yes" xml:space="preserve">
          <source>In our C# code, we are reading numeric values from an Excel spreadsheet, converting them into a &lt;code&gt;decimal&lt;/code&gt;, then sending this &lt;code&gt;decimal&lt;/code&gt; back to a Service to save into a &lt;em&gt;SQL Server&lt;/em&gt; database.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在我们的C＃代码中，我们正在从Excel电子表格中读取数值，将其转换为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，然后将该&lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;发送&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;回Service以保存到&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQL Server&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数据库中。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d0c84010367b3b1669cacd2b79cfdd7e88cb34e5" translate="yes" xml:space="preserve">
          <source>In simple words:</source>
          <target state="translated">简单来说。</target>
        </trans-unit>
        <trans-unit id="5163c90523edb7a9c674140755cab21cd9aec85e" translate="yes" xml:space="preserve">
          <source>Integers, as was mentioned, are whole numbers. They can't store the point something, like .7, .42, and .007. If you need to store numbers that are not whole numbers, you need a different type of variable. You can use the double type or the float type. You set these types of variables up in exactly the same way: instead of using the word &lt;code&gt;int&lt;/code&gt;, you type &lt;code&gt;double&lt;/code&gt; or &lt;code&gt;float&lt;/code&gt;. Like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如前所述，整数是整数。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他们无法存储点，例如.7，.42和.007。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果需要存储不是整数的数字，则需要另一种类型的变量。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以使用double类型或float类型。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以通过完全相同的方式设置这些类型的变量：&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以使用&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;而不是使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一词&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;像这样：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0e0cb2234b0a4b7f63dc36082317422c7cb3dcbb" translate="yes" xml:space="preserve">
          <source>It is regrettable that other numeric types implemented in COBOL don't exist in .Net. For those that don't know COBOL, there exist in COBOL following numeric type</source>
          <target state="translated">遗憾的是,其他在COBOL中实现的数值类型在.Net中并不存在。对于那些不了解COBOL的人来说,在COBOL中存在以下的数值类型</target>
        </trans-unit>
        <trans-unit id="a6e42d11ec97b74e1620a4643850ff92433fbf2e" translate="yes" xml:space="preserve">
          <source>More about...&lt;a href=&quot;http://net-informations.com/q/faq/float.html&quot;&gt;the difference between Decimal, Float and Double&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有关... &lt;/font&gt;&lt;a href=&quot;http://net-informations.com/q/faq/float.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更多信息... &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;小数，浮点数和双精度之间的区别&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f880cdfc96654120d58d9c431037af613ce952a3" translate="yes" xml:space="preserve">
          <source>No one has mentioned that</source>
          <target state="translated">没有人说过</target>
        </trans-unit>
        <trans-unit id="9615655bffcd31033b60b263d25dd29c970def96" translate="yes" xml:space="preserve">
          <source>Now, for &lt;em&gt;almost all&lt;/em&gt; of our Excel values, this worked beautifully. But for some, very small Excel values, using &lt;strong&gt;&lt;code&gt;decimal.TryParse&lt;/code&gt;&lt;/strong&gt; lost the value completely. One such example is</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，对于&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;几乎所有&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的Excel值，此方法都非常有效。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是对于某些很小的Excel值，使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;decimal.TryParse&lt;/code&gt; 会&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;完全丢失该值。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个这样的例子是&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2686849c501d2416b51d4e4ea5481bd89ef299fe" translate="yes" xml:space="preserve">
          <source>Odd. Very odd.</source>
          <target state="translated">很奇怪。非常奇怪。</target>
        </trans-unit>
        <trans-unit id="2a90f6e6032d9f943a48737b193c7cfae6abe6fe" translate="yes" xml:space="preserve">
          <source>Precision is the &lt;strong&gt;&lt;em&gt;main difference&lt;/em&gt;&lt;/strong&gt; (Notice that this is not the single difference) where &lt;strong&gt;float&lt;/strong&gt; is a single precision (32 bit) floating point data type, &lt;strong&gt;double&lt;/strong&gt; is a double precision (64 bit) floating point data type and &lt;strong&gt;decimal&lt;/strong&gt; is a 128-bit floating point data type.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;精度是&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;主要区别&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（请注意，这不是唯一的区别），其中&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;float&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是单精度（32位）浮点数据类型，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;double&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是双精度（64位）浮点数据类型，而&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;十进制&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是128位浮点数据类型。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c4fe7d68ec1652d914ee80df8b26311175ed660" translate="yes" xml:space="preserve">
          <source>Precision is the main difference.</source>
          <target state="translated">精度是主要的区别。</target>
        </trans-unit>
        <trans-unit id="9c0b1c555445750f0b860529fcf224d93b6f626f" translate="yes" xml:space="preserve">
          <source>Question: Which value does bLower variable contain ?</source>
          <target state="translated">问题:bLower变量包含哪个值?bLower变量包含哪个值?</target>
        </trans-unit>
        <trans-unit id="04b95e3fcc2dae4db1fd7ec8821a54c3be101611" translate="yes" xml:space="preserve">
          <source>Result :</source>
          <target state="translated">结果:</target>
        </trans-unit>
        <trans-unit id="40c5dd5e0ef46f5c025a53e99f1a084b47d5d657" translate="yes" xml:space="preserve">
          <source>Run your programme and click your double button. The message box correctly displays the number. Add another number on the end, though, and C# will again round up or down. The moral is if you want accuracy, be careful of rounding!</source>
          <target state="translated">运行你的程序,点击你的双键。消息框中正确地显示了这个数字。但在结尾处再加一个数字,C#会再次向上或向下四舍五入。道理是,如果你想要精确性,请注意四舍五入!如果你想让你的程序更精确,请注意四舍五入。</target>
        </trans-unit>
        <trans-unit id="01706013cfdbcb0fc543d3c97784f3f4c235d630" translate="yes" xml:space="preserve">
          <source>Some examples:</source>
          <target state="translated">一些例子:</target>
        </trans-unit>
        <trans-unit id="fb1a22d66493c3c914ca7a85c92827a5141f74d7" translate="yes" xml:space="preserve">
          <source>The Decimal structure is strictly geared to financial calculations requiring accuracy, which are relatively intolerant of rounding.  Decimals are not adequate for scientific applications, however, for several reasons:</source>
          <target state="translated">小数结构是严格针对要求精确的财务计算,相对来说,小数结构不耐四舍五入。但是,由于以下几个方面的原因,小数并不适合科学应用。</target>
        </trans-unit>
        <trans-unit id="8eac488092dae714dc29895af6ea7e3489096568" translate="yes" xml:space="preserve">
          <source>The Decimal, Double, and Float variable types are different in the way that they store the values.</source>
          <target state="translated">Decimal、Double和Float变量类型的存储方式不同。</target>
        </trans-unit>
        <trans-unit id="322ed86d8d5897e8bcb9d947c962d88c35efe78a" translate="yes" xml:space="preserve">
          <source>The Decimal, Double, and Float variable types are different in the way that they store the values. Precision is the main difference where float is a single precision (32 bit) floating point data type, double is a double precision (64 bit) floating point data type and decimal is a 128-bit floating point data type.</source>
          <target state="translated">十进制、双倍和浮点变量类型在存储值的方式上是不同的。精度是主要的区别,其中float是单精度(32位)浮点数据类型,double是双精度(64位)浮点数据类型,十进制是128位浮点数据类型。</target>
        </trans-unit>
        <trans-unit id="929f51732e3f719802e94908d39685b28af442ff" translate="yes" xml:space="preserve">
          <source>The binary number and the location of the binary point are both encoded within the value.</source>
          <target state="translated">二进制数和二进制点的位置都在值内进行编码。</target>
        </trans-unit>
        <trans-unit id="80357d1d9d23e73c226694fd0d8a72cc95a3901f" translate="yes" xml:space="preserve">
          <source>The difference between the two is in the size of the numbers that they can hold. For &lt;code&gt;float&lt;/code&gt;, you can have up to 7 digits in your number. For &lt;code&gt;double&lt;/code&gt;s, you can have up to 16 digits. To be more precise, here's the official size:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;两者之间的区别在于它们可以容纳的数字的大小。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，您的电话号码最多可以包含7位数字。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，最多可以包含16位数字。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更确切地说，这是官方尺寸：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba1df49d1ef57a71eece485cd18664262a6dbc2b" translate="yes" xml:space="preserve">
          <source>The important thing to note is that humans are used to representing non-integers in a decimal form, and expect exact results in decimal representations; not all decimal numbers are exactly representable in binary floating point &amp;ndash; 0.1, for example &amp;ndash; so if you use a binary floating point value you'll actually get an approximation to 0.1. You'll still get approximations when using a floating decimal point as well &amp;ndash; the result of dividing 1 by 3 can't be exactly represented, for example.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;需要注意的重要一点是，人类习惯于以十进制形式表示非整数，并期望以十进制表示形式得到准确的结果。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并非所有十进制数字都可以在二进制浮点数中精确表示（例如0.1），因此，如果您使用二进制浮点数，则实际上将近似为0.1。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当使用浮点小数点时，您仍然会得到近似值-例如，不能精确表示1除以3的结果。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bbab681f843131c60f1225901e664ffee19a8131" translate="yes" xml:space="preserve">
          <source>The main difference between each of these is the precision.</source>
          <target state="translated">每一种的主要区别在于精度。</target>
        </trans-unit>
        <trans-unit id="bc0bac6d4c290b7b8cfdc112f47219e721c4536b" translate="yes" xml:space="preserve">
          <source>The problem with all these types is that a certain imprecision subsists 
AND that this problem can occur with small decimal numbers like in the following example</source>
          <target state="translated">所有这些类型的问题是存在着一定的不精确性,而且这个问题可能会在小数的小数上出现,比如下面的例子</target>
        </trans-unit>
        <trans-unit id="88d67b540cdb282af3ab915739f56e913bc26ae4" translate="yes" xml:space="preserve">
          <source>The solution, bizarrely, was to convert the Excel values into a &lt;code&gt;double&lt;/code&gt; first, and then into a &lt;code&gt;decimal&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;奇怪的是，解决方案是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;先将&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Excel值转换为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;精度，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;然后转换为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d0bd130c1325b1dc425a336a6f40366da340bc0" translate="yes" xml:space="preserve">
          <source>The summary table:</source>
          <target state="translated">总结表。</target>
        </trans-unit>
        <trans-unit id="a7a578757cb8a6be91971ce3516e00e040f7d0f4" translate="yes" xml:space="preserve">
          <source>This has been an interesting thread for me, as today, we've just had a nasty little bug, concerning &lt;code&gt;decimal&lt;/code&gt; having less precision than a &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这对我来说是个有趣的话题，因为今天，我们遇到了一个讨厌的小错误，涉及到&lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;比&lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;精度低&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f7d1b6e129e9adce21c4af662ecfce79a6ab47b" translate="yes" xml:space="preserve">
          <source>To define Decimal, Float and Double in .Net (c#)</source>
          <target state="translated">在.Net(c#)中定义十进制、浮点数和双倍数。</target>
        </trans-unit>
        <trans-unit id="9bfb32c5b38d433ef9b222243cc37f4e2fd80293" translate="yes" xml:space="preserve">
          <source>Use decimal for &lt;strong&gt;counted&lt;/strong&gt; values</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将十进制用作&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;计&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数值&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fdbec70ed5782c7b1b95679cab01d2ba0abb3e19" translate="yes" xml:space="preserve">
          <source>Use float/double for &lt;strong&gt;measured&lt;/strong&gt; values</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将浮点/双精度用作&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;测量&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;值&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d433b2fe6871e1b194e63ff47b8f2abd5b7d063" translate="yes" xml:space="preserve">
          <source>We always count money and should never measure it. We usually measure distance. We often count scores.</source>
          <target state="translated">我们平时都是数钱的,千万不要去计量。我们一般都是测距离。我们经常算分数。</target>
        </trans-unit>
        <trans-unit id="094d32b5055c68122c16a97011e63affae838ca0" translate="yes" xml:space="preserve">
          <source>What is the difference between &lt;code&gt;decimal&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt; in .NET?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.NET中的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;精度有&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;什么区别&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="794aaac23d6f61a5da2a4d132871a694b1431687" translate="yes" xml:space="preserve">
          <source>When would someone use one of these?</source>
          <target state="translated">什么时候会有人用这种东西?</target>
        </trans-unit>
        <trans-unit id="1777e568bec7c8e3d15f744eca32e777323f3671" translate="yes" xml:space="preserve">
          <source>You can read more &lt;a href=&quot;http://net-informations.com/q/faq/float.html&quot;&gt;here&lt;/a&gt;, &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/float&quot;&gt;Float&lt;/a&gt;, &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/double&quot;&gt;Double&lt;/a&gt;, and &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/decimal&quot;&gt;Decimal&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://net-informations.com/q/faq/float.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在此处&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;阅读更多&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;信息&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/float&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Float&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/double&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Double&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/decimal&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Decimal&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="04f5116b35cc2be15c84a5e7d9cc60b86e8e4f9f" translate="yes" xml:space="preserve">
          <source>and check the results.</source>
          <target state="translated">并检查结果。</target>
        </trans-unit>
        <trans-unit id="02e9e7ae1696f0016afc3b6979a7b7ea97ec81f2" translate="yes" xml:space="preserve">
          <source>cellValue = &lt;strong&gt;0.00006317592&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cellValue = &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;0.00006317592&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4acb42a7cdd18b9c59c950b72156333ef8c552f8" translate="yes" xml:space="preserve">
          <source>decimal: &amp;plusmn;1.0 x 10^-28 to &amp;plusmn;7.9 x 10^28 (28-29 significant figures)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;十进制：&amp;plusmn;1.0 x 10 ^ -28至&amp;plusmn;7.9 x 10 ^ 28（28-29有效数字）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77a41a30e08b5ac6bbd97597c92762b4232cd4b6" translate="yes" xml:space="preserve">
          <source>distance (do we count distance or measure distance? *)</source>
          <target state="translated">距离</target>
        </trans-unit>
        <trans-unit id="ce7db2dc37d77a5440ebd7e0fee300c577b05b3f" translate="yes" xml:space="preserve">
          <source>double: &amp;plusmn;5.0 x 10^-324 to &amp;plusmn;1.7 x 10^308 (15-16 significant figures)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;两倍：&amp;plusmn;5.0 x 10 ^ -324至&amp;plusmn;1.7 x 10 ^ 308（15-16位有效数字）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77dc75324948b92927d4e8628ff3c0a2339bbbe9" translate="yes" xml:space="preserve">
          <source>float: &amp;plusmn;1.5 x 10^-45 to &amp;plusmn;3.4 x 10^38 (~7 significant figures</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;浮点数：&amp;plusmn;1.5 x 10 ^ -45至&amp;plusmn;3.4 x 10 ^ 38（〜7位有效数字&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="417e8bf6d0a838c93d152b30e62d4659637eaa43" translate="yes" xml:space="preserve">
          <source>money (do we count money or measure money?)</source>
          <target state="translated">金钱</target>
        </trans-unit>
        <trans-unit id="429a9c5d0383db06b143d7dcd26625d9bb16bef1" translate="yes" xml:space="preserve">
          <source>scores (do we count scores or measure scores?)</source>
          <target state="translated">分数</target>
        </trans-unit>
        <trans-unit id="23d20324c6b6649855686b87312af67f8d5afbea" translate="yes" xml:space="preserve">
          <source>throws &lt;strong&gt;OverflowException&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;抛出&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;OverflowException&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b681723e574c1fda766cd4acd3eb149f410ee7c" translate="yes" xml:space="preserve">
          <source>you must mention values as:</source>
          <target state="translated">你必须提到的价值是:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
