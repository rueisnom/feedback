<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/618535">
    <body>
      <group id="618535">
        <trans-unit id="54f697a1ff421e46f37022813a88d0937a82090c" translate="yes" xml:space="preserve">
          <source>&amp;amp;</source>
          <target state="translated">&amp;amp;</target>
        </trans-unit>
        <trans-unit id="37f5899c4710f8727a605f1a95f04b602caa2b9e" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;float&lt;/code&gt; is short for &quot;floating point&quot;, and just means a number with a point something on the end.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &quot;부동 소수점&quot;의 줄임말이며 끝에 점이있는 숫자를 의미합니다.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6026b7526a6fbebe8bb8ee7cad7eadcde609078a" translate="yes" xml:space="preserve">
          <source>* In some cases, what I would call &lt;em&gt;nominal distance&lt;/em&gt;, we may indeed want to 'count' distance. For example, maybe we are dealing with country signs that show distances to cities, and we know that those distances never have more than one decimal digit (xxx.x km).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;* 경우에 따라 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;공칭 거리&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 라고 부르는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것은 실제로 거리를 계산하는 것이 좋습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어, 우리는 도시까지의 거리를 나타내는 국가 표지판을 다루고 있으며 그 거리에는 소수점 이하 두 자리 (xxx.xkm)가 없다는 것을 알고 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db7c0dfcd6cfb7953eef10c524b854307943d947" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.decimal&quot;&gt;Decimal&lt;/a&gt; -28-29 significant digits (128 bit)</source>
          <target state="translated">&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.decimal&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;10 진수&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -28-29 유효 숫자 (128 비트)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99b49c919651808b27b1b7c158f9eea3a5ede42c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.double&quot;&gt;Double&lt;/a&gt;-15-16 digits (64 bit)</source>
          <target state="translated">&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.double&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이중&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -15-16 자리 (64 비트)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43da59246dc5d76525a79d2a54749a9898adcc81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.single&quot;&gt;Float&lt;/a&gt; - 7 digits (32 bit)</source>
          <target state="translated">&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.single&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;부동&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -7 자리 (32 비트)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac558e5ef8c193696b7c197f275d9d8091e73496" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Decimals&lt;/code&gt; also allow the encoding or trailing zeros.</source>
          <target state="translated">&lt;code&gt;Decimals&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 인코딩 또는 후행 0도 허용합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2952f98519ef996b537e1e36f53c2b89e3a8fa23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Decimals&lt;/code&gt; and &lt;code&gt;Floats/Doubles&lt;/code&gt; cannot be compared without a cast whereas &lt;code&gt;Floats&lt;/code&gt; and &lt;code&gt;Doubles&lt;/code&gt; can.</source>
          <target state="translated">&lt;code&gt;Decimals&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Floats/Doubles&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 캐스트없이 비교할 수 없지만, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Floats&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Doubles&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;비교할 수 없습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29847fbe2116c3f60cf5bbf95957b4f49286de2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Decimals&lt;/code&gt; are much slower than a &lt;code&gt;double/float&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Decimals&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double/float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 보다 훨씬 느립니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b0b5a548ebd297b64756bcf2987496babb034ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decimal&lt;/code&gt; has about 28 digits of precision</source>
          <target state="translated">&lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 정밀도는 약 28 자리입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c18bc459005b7daf7dcdf90e7ef4f1df9ec789b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decimal&lt;/code&gt; is a &lt;a href=&quot;http://csharpindepth.com/Articles/General/Decimal.aspx&quot;&gt;floating &lt;em&gt;decimal&lt;/em&gt; point type&lt;/a&gt;. In other words, they represent a number like this:</source>
          <target state="translated">&lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://csharpindepth.com/Articles/General/Decimal.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;부동 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;소수점&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 유형&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉, 다음과 같은 숫자를 나타냅니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e14a3b3326b3904af1c6dd05e4a5ac4b5efa27d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;double&lt;/code&gt; has about 15 digits of precision</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 정밀도는 약 15 자리입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d5c5850696e768cc0a9f3c96d1c5ec7ff6d7959" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;float&lt;/code&gt; 7 digits of precision</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;7 자리의 정밀도 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;부동&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9953f558e77705ed916c73f4c1ee595e16a57557" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;float&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt; are &lt;a href=&quot;http://csharpindepth.com/Articles/General/FloatingPoint.aspx&quot;&gt;floating &lt;em&gt;binary&lt;/em&gt; point types&lt;/a&gt;. In other words, they represent a number like this:</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://csharpindepth.com/Articles/General/FloatingPoint.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;부동 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이진&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 점 유형&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉, 다음과 같은 숫자를 나타냅니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1cf9e77ba2278cb0cbc185195f53d2a482e775ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;float&lt;/code&gt; is a 32-bit number, and &lt;code&gt;double&lt;/code&gt; is a 64-bit number.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 32 비트 숫자이고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 64 비트 숫자입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a76b42ff2d3f5f9e3109b54babcfadf24d5e595f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;float&lt;/code&gt; is a &lt;code&gt;32-bit&lt;/code&gt; number, &lt;code&gt;double&lt;/code&gt; is a &lt;code&gt;64-bit&lt;/code&gt; number and &lt;code&gt;decimal&lt;/code&gt; is a &lt;code&gt;128-bit&lt;/code&gt; number.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;32-bit&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 숫자이고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;64-bit&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 숫자이며 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;128-bit&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 숫자입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="264ccccd5c0320688718ce31bc051692eeaf0f6b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Decimal.TryParse(cellValue.ToString(), out value);&lt;/em&gt; // would return &lt;strong&gt;0&lt;/strong&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Decimal.TryParse (cellValue.ToString (), 출력 값); &lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;// &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;0&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 반환&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="08a5aff3c15e244f6108b22c6942310599188602" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;When would someone use one of these?&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;누군가이 중 하나를 언제 사용합니까?&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d7e3111731095b413fe21355ada9217edeb7f029" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Decimal&lt;/strong&gt; 128 bit (28-29 significant digits)
In case of financial applications it is better to use 
Decimal types because it gives you a high level of accuracy and easy to avoid rounding errors
Use decimal for non-integer math where precision is needed (e.g. money and currency)</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;10 진수&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 128 비트 (28-29 유효 숫자) 재무 응용 프로그램의 경우 높은 수준의 정확도를 제공하고 반올림 오류를 피하기 때문에 10 진수 형식을 사용하는 것이 좋습니다. 정밀도가 필요한 경우 정수가 아닌 수학에는 10 진수를 사용하십시오 (예 : 돈과 통화)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="185d307474f65d7cc00f8857fe0e56200fcf2116" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Double&lt;/strong&gt;  64 bit (15-16 digits)
Double Types are probably the most normally used data type for real values, except handling money.
Use double for non-integer math where the most precise answer isn't necessary.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이중&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 64 비트 (15-16 자리) 이중 유형은 비용 처리를 제외하고 실제 값에 가장 일반적으로 사용되는 데이터 유형입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가장 정확한 답이 필요하지 않은 정수가 아닌 수학에는 double을 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f093dfc3e53e2c222216fbb1bfc8fa6c92036836" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Float&lt;/strong&gt;  32 bit (7 digits)
It is used mostly in graphic libraries because very high demands for processing powers,
also used situations that can endure rounding errors.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Float&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 32 비트 (7 자리) 주로 처리 능력에 대한 요구가 높고 반올림 오류를 견딜 수있는 상황이 발생하기 때문에 주로 그래픽 라이브러리에서 사용됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5dc78fb0697aac997dda8d17bfff6e646454d8a4" translate="yes" xml:space="preserve">
          <source>A certain loss of precision is acceptable in many scientific calculations because of the practical limits of the physical problem or artifact being measured.  Loss of precision is not acceptable in finance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;많은 과학적 계산에서 측정되는 물리적 문제 나 아티팩트의 실제 한계로 인해 특정 정밀도 손실이 허용됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;금융에서 정밀도 손실은 허용되지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4ef78f26486462f6e58ed78f44b95eb1644cd586" translate="yes" xml:space="preserve">
          <source>Again, the number and the location of the &lt;em&gt;decimal&lt;/em&gt; point are both encoded within the value &amp;ndash; that's what makes &lt;code&gt;decimal&lt;/code&gt; still a floating point type instead of a fixed point type.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다시 말하지만, 수와의 위치 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;진수&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 만드는거야 - 포인트는 두 값 내에서 인코딩 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대신 고정 소수점 형의 여전히 부동 소수점 유형입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d5cb8f03ec3721ef8296ed8405aeeffa8c153d09" translate="yes" xml:space="preserve">
          <source>And Bytes Occupied by each are</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 각각에 의해 점유 된 바이트는&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eff1aa36668e9a3c0d25c7e2e2466197321adb95" translate="yes" xml:space="preserve">
          <source>Answer: On a 32 bit machine bLower contains TRUE !!!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;답 : 32 비트 컴퓨터에서 bLower는 TRUE를 포함합니다 !!!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="485700f7043c8456198f16eb6045364d5da2f1e0" translate="yes" xml:space="preserve">
          <source>As for what to use when:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;언제 사용 하는가에 관해서 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="08cc8c02c63b46ebc579432f8c69389e02d147cb" translate="yes" xml:space="preserve">
          <source>But these do not:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 이들은하지 않습니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1e3ee7d6b3e6f808401117bf1a8f2f3409ad4fee" translate="yes" xml:space="preserve">
          <source>Caution: I think that same problem can certainly exists for other number because Decimal is only a double with higher precision and the precision has always a limit.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주의 : Decimal은 정밀도가 두 배이고 정밀도는 항상 한계가 있기 때문에 다른 숫자에도 동일한 문제가 존재할 수 있다고 생각합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f19f90ee06a28bdc8b0c742c9a2f3a160958b045" translate="yes" xml:space="preserve">
          <source>Decimal - 128 bit (28-29 significant digits)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;십진수-128 비트 (28-29 유효 숫자)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6994cc636981c612cd5ddee0d0f52ce2bd0810a5" translate="yes" xml:space="preserve">
          <source>Decimal cannot be divided by integer zero. Compilation will always fail if you do that.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;10 진수는 정수 0으로 나눌 수 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇게하면 컴파일이 항상 실패합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6cd6dadd2bf0d0fccc1df4f5e3878b48efc89733" translate="yes" xml:space="preserve">
          <source>Decimal has an unacceptably smaller value range than double, despite the fact that it supports more digits of precision. Therefore, Decimal can't be used to represent many scientific values.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;십진수는 더 많은 자릿수를 지원한다는 사실에도 불구하고 두 배보다 허용 할 수 없을 정도로 작은 값 범위를 갖습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 Decimal은 많은 과학적 가치를 나타내는 데 사용될 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="34dbdeeeb507cdf0af128686ef1a1e17076b6f64" translate="yes" xml:space="preserve">
          <source>Decimal is much (much) slower than float and double for most operations, primarily because floating point operations are done in binary, whereas Decimal stuff is done in base 10 (i.e. floats and doubles are handled by the FPU hardware, such as MMX/SSE, whereas decimals are calculated in software).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;십진법은 대부분 부동 소수점 연산이 부동 소수 점수보다 두 배 느립니다. 대부분 부동 소수점 연산은 2 진법으로 이루어 지지만 10 진법은 10 진수로 이루어집니다 (즉, 부동 소수 점수는 MMX / SSE와 같은 FPU 하드웨어에 의해 처리됩니다) , 소수는 소프트웨어에서 계산됩니다).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b0417119a8eb94dee10113420f3a0c8295a58fd" translate="yes" xml:space="preserve">
          <source>Decimals and Floats/Doubles cannot be compared without a cast whereas Floats and Doubles can. Decimals also allow the encoding or trailing zeros.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;십진법과 실수 / 더블은 캐스트없이 비교할 수 없지만, 실수와 복식은 비교할 수 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;10 진수는 인코딩 또는 후행 0도 허용합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="290f8962dc6457e06c7c0b66b4bdc4334c02d9c8" translate="yes" xml:space="preserve">
          <source>Decimals have much higher precision and are usually used within financial applications that require a high degree of accuracy. Decimals are much slower (up to 20X times in some tests) than a double/float.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;십진법은 훨씬 높은 정밀도를 가지며 일반적으로 높은 정확도를 요구하는 금융 응용 프로그램에서 사용됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;십진법은 이중 / 부동식보다 훨씬 느립니다 (일부 테스트에서는 최대 20 배).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d7865dc73c1fd69ab20f944788bf6d9a1c552749" translate="yes" xml:space="preserve">
          <source>Difference between decimal, float and double in .NET</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.NET에서 decimal, float 및 double의 차이점&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bc911cfbddffb9538d45b9578fd21d74ee90e558" translate="yes" xml:space="preserve">
          <source>Double - 64 bit (15-16 digits)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이중-64 비트 (15-16 자리)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6abd1a14943f2820b07e78eeb705520a400930da" translate="yes" xml:space="preserve">
          <source>Double and float can be divided by integer zero without an exception at both compilation and run time.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컴파일 및 런타임 모두에서 예외없이 Double 및 float을 정수 0으로 나눌 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c2e9a11930cc502b08afe163fdfd2f183a45d18b" translate="yes" xml:space="preserve">
          <source>Double click your new button to get at the code. Add the following three lines to your button code:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드를 보려면 새 버튼을 두 번 클릭하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;버튼 코드에 다음 세 줄을 추가하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="45d91068e57e7aa6be5a19be6d1ffbc741c38aa4" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;double&lt;/code&gt; has less precision than a &lt;code&gt;decimal&lt;/code&gt;, this actually ensured small numbers would still be recognised. For some reason, &lt;strong&gt;&lt;code&gt;double.TryParse&lt;/code&gt;&lt;/strong&gt; was actually able to retrieve such small numbers, whereas &lt;strong&gt;&lt;code&gt;decimal.TryParse&lt;/code&gt;&lt;/strong&gt; would set them to zero.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; 의&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 정밀도는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 보다 정밀도가 떨어지지 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;만 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제로는 소수가 여전히 인식되도록 보장합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어떤 이유로 든 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;double.TryParse&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 실제로 작은 숫자를 검색 할 수 있었지만 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;decimal.TryParse&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는이를 0으로 설정했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ff1e5f13adaf9f0fdf0cdf0c8e6464dee6a34247" translate="yes" xml:space="preserve">
          <source>Float - 32 bit (7 digits)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;부동-32 비트 (7 자리)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5ebf31648c60aad9ea0489937f26b8f7e8e9e148" translate="yes" xml:space="preserve">
          <source>For applications such as games and embedded systems where memory and performance are both critical, float is usually the numeric type of choice as it is faster and half the size of a double. Integers used to be the weapon of choice, but floating point performance has overtaken integer in modern processors. Decimal is right out!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;메모리와 성능이 모두 중요한 게임 및 임베디드 시스템과 같은 응용 프로그램의 경우 float는 일반적으로 두 배 크기의 절반이 빠르기 때문에 숫자 선택 유형입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정수는 선택의 무기 였지만 부동 소수점 성능은 최신 프로세서에서 정수를 능가했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;십진법이 바로입니다!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3cadad1fb936cd59a173ee4ad751226d192504b1" translate="yes" xml:space="preserve">
          <source>For more information, see:</source>
          <target state="translated">자세한 내용은 다음을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b34aa2ddc6b0b7f92e2cb186e000ad6920534dfa" translate="yes" xml:space="preserve">
          <source>For values which are &quot;naturally exact decimals&quot; it's good to use &lt;code&gt;decimal&lt;/code&gt;. This is usually suitable for any concepts invented by humans: financial values are the most obvious example, but there are others too. Consider the score given to divers or ice skaters, for example.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;자연스럽게 정확한 소수&quot;인 값의 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 사용하는 것이 좋습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 일반적으로 인간이 발명 한 모든 개념에 적합합니다. 재무 적 가치가 가장 명백한 예이지만 다른 것도 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 다이버 나 아이스 스케이터에게 주어진 점수를 고려하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="784a45840a6dbc10c33232b2978abcd9c20f1767" translate="yes" xml:space="preserve">
          <source>For values which are more artefacts of nature which can't really be measured &lt;em&gt;exactly&lt;/em&gt; anyway, &lt;code&gt;float&lt;/code&gt;/&lt;code&gt;double&lt;/code&gt; are more appropriate. For example, scientific data would usually be represented in this form. Here, the original values won't be &quot;decimally accurate&quot; to start with, so it's not important for the expected results to maintain the &quot;decimal accuracy&quot;. Floating binary point types are much faster to work with than decimals.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어쨌든 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정확하게&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 측정 할 수없는 자연의 인공물 인 값의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 더 적합합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 과학 데이터는 일반적으로이 형식으로 표시됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 원래 값은 &quot;소수 적으로 정확&quot;하지 않으므로 예상 결과가 &quot;소수 정확도&quot;를 유지하는 것은 중요하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;부동 이진 소수점 유형은 소수보다 작업 속도가 훨씬 빠릅니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c2899e015c1b320354e27e895ffdbd99d0f7a36e" translate="yes" xml:space="preserve">
          <source>Halt your program and return to the coding window. Change this line:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로그램을 중단하고 코딩 창으로 돌아갑니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 줄을 바꾸십시오 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0851ff1fdbfbdb0f6caaf5a3ba5cae4456653e36" translate="yes" xml:space="preserve">
          <source>I found this is interesting. &lt;a href=&quot;http://download.oracle.com/docs/cd/E19957-01/806-3568/ncg_goldberg.html&quot;&gt;What Every Computer Scientist Should Know About Floating-Point Arithmetic&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 이것이 재미 있다는 것을 알았다. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://download.oracle.com/docs/cd/E19957-01/806-3568/ncg_goldberg.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;부동 소수점 산술에 대해 모든 컴퓨터 과학자가 알아야 할 사항&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f071c332fe3b74368233c2668d23c2389de4c550" translate="yes" xml:space="preserve">
          <source>I mean</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내말은&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ea289abec6a48909512c260da49bc88db258fac" translate="yes" xml:space="preserve">
          <source>I won't reiterate tons of good (and some bad) information already answered in other answers and comments, but I will answer your followup question with a tip:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 답변과 의견에 이미 답변 된 좋은 (그리고 일부 나쁜) 정보를 반복하지는 않지만 다음 질문에 대한 팁으로 답변 해 드리겠습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="22ca062b737f9ab0dc8b97338ee6389620f87e92" translate="yes" xml:space="preserve">
          <source>If I replace Double by Decimal, bLower contains FALSE which is the good answer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Double을 Decimal로 바꾸면 bLower에 FALSE가 포함되어 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10d24ddd90fb10edf96b9876f7473a6ae41f2b0e" translate="yes" xml:space="preserve">
          <source>If you need better accuracy, use double instead of float.
In modern CPUs both data types have almost the same performance. The only benifit of using float is they take up less space. Practically matters only if you have got many of them.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 나은 정확도가 필요하면 float 대신 double을 사용하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;최신 CPU에서는 두 데이터 유형이 거의 동일한 성능을 갖습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;float를 사용하는 유일한 이점은 공간을 덜 차지한다는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제로 많은 것을 가지고있는 경우에만 중요합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="830d72c2cd3996f27fcf7be7d1b65878293ab5f9" translate="yes" xml:space="preserve">
          <source>In default settings, Floats (System.Single) and doubles (System.Double) will never use
  overflow checking while Decimal (System.Decimal) will always use
  overflow checking.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본 설정에서 Floats (System.Single) 및 Double (System.Double)은 오버플로 검사를 사용하지 않지만 Decimal (System.Decimal)은 항상 오버플로 검사를 사용합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3fa99cabd00f27462a64a618353a7a9855415d72" translate="yes" xml:space="preserve">
          <source>In double, the problem is that fMean-fDelta = 1.09999999999 that is lower that 1.1.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이중으로, 문제는 fMean-fDelta = 1.09999999999이며 1.1보다 낮습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4c47a2e284cfcd472e106fb991146fcd4fed932c" translate="yes" xml:space="preserve">
          <source>In fact, Double, Float and Decimal correspond to BINARY decimal in COBOL !</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제로 Double, Float 및 Decimal은 COBOL의 BINARY 10 진수에 해당합니다!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="07dc8b89fbb3234f10185a52f8f3c5af703cf7f4" translate="yes" xml:space="preserve">
          <source>In our C# code, we are reading numeric values from an Excel spreadsheet, converting them into a &lt;code&gt;decimal&lt;/code&gt;, then sending this &lt;code&gt;decimal&lt;/code&gt; back to a Service to save into a &lt;em&gt;SQL Server&lt;/em&gt; database.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # 코드에서는 Excel 스프레드 시트에서 숫자 값을 읽어 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 변환 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한 다음이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 서비스로 다시 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전송 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQL Server&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 데이터베이스에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;저장 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d0c84010367b3b1669cacd2b79cfdd7e88cb34e5" translate="yes" xml:space="preserve">
          <source>In simple words:</source>
          <target state="translated">간단히 말해서 :</target>
        </trans-unit>
        <trans-unit id="5163c90523edb7a9c674140755cab21cd9aec85e" translate="yes" xml:space="preserve">
          <source>Integers, as was mentioned, are whole numbers. They can't store the point something, like .7, .42, and .007. If you need to store numbers that are not whole numbers, you need a different type of variable. You can use the double type or the float type. You set these types of variables up in exactly the same way: instead of using the word &lt;code&gt;int&lt;/code&gt;, you type &lt;code&gt;double&lt;/code&gt; or &lt;code&gt;float&lt;/code&gt;. Like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;언급 한 바와 같이 정수는 정수입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.7, .42 및 .007과 같이 포인트를 저장할 수 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정수가 아닌 숫자를 저장해야하는 경우 다른 유형의 변수가 필요합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;double 형이나 float 형을 사용할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이러한 유형의 변수는 정확히 같은 방식으로 설정합니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 단어를 사용하는 대신 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 입력 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이처럼 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0e0cb2234b0a4b7f63dc36082317422c7cb3dcbb" translate="yes" xml:space="preserve">
          <source>It is regrettable that other numeric types implemented in COBOL don't exist in .Net. For those that don't know COBOL, there exist in COBOL following numeric type</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;COBOL로 구현 된 다른 숫자 유형이 .Net에 존재하지 않는 것이 유감입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;COBOL을 모르는 사람들은 COBOL에 숫자 유형 다음에 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a6e42d11ec97b74e1620a4643850ff92433fbf2e" translate="yes" xml:space="preserve">
          <source>More about...&lt;a href=&quot;http://net-informations.com/q/faq/float.html&quot;&gt;the difference between Decimal, Float and Double&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;http://net-informations.com/q/faq/float.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Decimal, Float 및 Double의 차이점&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 대한 자세한 내용&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f880cdfc96654120d58d9c431037af613ce952a3" translate="yes" xml:space="preserve">
          <source>No one has mentioned that</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아무도 언급하지 않았습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9615655bffcd31033b60b263d25dd29c970def96" translate="yes" xml:space="preserve">
          <source>Now, for &lt;em&gt;almost all&lt;/em&gt; of our Excel values, this worked beautifully. But for some, very small Excel values, using &lt;strong&gt;&lt;code&gt;decimal.TryParse&lt;/code&gt;&lt;/strong&gt; lost the value completely. One such example is</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;거의 모든&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Excel 값에 대해 이것은 아름답게 작동했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 매우 작은 Excel 값의 경우 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;decimal.TryParse&lt;/code&gt; 를&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 값이 완전히 손실됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러한 예 중 하나는&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2686849c501d2416b51d4e4ea5481bd89ef299fe" translate="yes" xml:space="preserve">
          <source>Odd. Very odd.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이상한. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;매우 이상합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a90f6e6032d9f943a48737b193c7cfae6abe6fe" translate="yes" xml:space="preserve">
          <source>Precision is the &lt;strong&gt;&lt;em&gt;main difference&lt;/em&gt;&lt;/strong&gt; (Notice that this is not the single difference) where &lt;strong&gt;float&lt;/strong&gt; is a single precision (32 bit) floating point data type, &lt;strong&gt;double&lt;/strong&gt; is a double precision (64 bit) floating point data type and &lt;strong&gt;decimal&lt;/strong&gt; is a 128-bit floating point data type.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;float&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 단 정밀도 (32 비트) 부동 소수점 데이터 유형이고, &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;double&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 배정도 (64 비트) 부동 소수점 데이터 유형이고 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;10 진수&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 128 비트입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정밀도는 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주요 차이점입니다&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (단일 차이가 아님). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;부동 소수점 데이터 유형.&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c4fe7d68ec1652d914ee80df8b26311175ed660" translate="yes" xml:space="preserve">
          <source>Precision is the main difference.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주요 차이점은 정밀성입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9c0b1c555445750f0b860529fcf224d93b6f626f" translate="yes" xml:space="preserve">
          <source>Question: Which value does bLower variable contain ?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;질문 : bLower 변수에는 어떤 값이 포함되어 있습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="04b95e3fcc2dae4db1fd7ec8821a54c3be101611" translate="yes" xml:space="preserve">
          <source>Result :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결과 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="40c5dd5e0ef46f5c025a53e99f1a084b47d5d657" translate="yes" xml:space="preserve">
          <source>Run your programme and click your double button. The message box correctly displays the number. Add another number on the end, though, and C# will again round up or down. The moral is if you want accuracy, be careful of rounding!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로그램을 실행하고 이중 버튼을 클릭하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;메시지 상자에 번호가 올바르게 표시됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 끝에 다른 숫자를 추가하면 C #이 다시 반올림 또는 내림됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;도덕은 정확성을 원한다면 반올림에주의하십시오!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="01706013cfdbcb0fc543d3c97784f3f4c235d630" translate="yes" xml:space="preserve">
          <source>Some examples:</source>
          <target state="translated">몇 가지 예 :</target>
        </trans-unit>
        <trans-unit id="fb1a22d66493c3c914ca7a85c92827a5141f74d7" translate="yes" xml:space="preserve">
          <source>The Decimal structure is strictly geared to financial calculations requiring accuracy, which are relatively intolerant of rounding.  Decimals are not adequate for scientific applications, however, for several reasons:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Decimal 구조는 정확성을 요구하는 재무 계산에 엄격하게 맞춰져 있으며, 이는 상대적으로 반올림하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 십진법은 몇 가지 이유로 과학적 응용에는 적합하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8eac488092dae714dc29895af6ea7e3489096568" translate="yes" xml:space="preserve">
          <source>The Decimal, Double, and Float variable types are different in the way that they store the values.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Decimal, Double 및 Float 변수 유형은 값을 저장하는 방식이 다릅니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="322ed86d8d5897e8bcb9d947c962d88c35efe78a" translate="yes" xml:space="preserve">
          <source>The Decimal, Double, and Float variable types are different in the way that they store the values. Precision is the main difference where float is a single precision (32 bit) floating point data type, double is a double precision (64 bit) floating point data type and decimal is a 128-bit floating point data type.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Decimal, Double 및 Float 변수 유형은 값을 저장하는 방식이 다릅니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;float는 단 정밀도 (32 비트) 부동 소수점 데이터 유형이고 double은 배정 밀도 (64 비트) 부동 소수점 데이터 유형이고 10 진수는 128 비트 부동 소수점 데이터 유형 인 경우 정밀도는 주요 차이점입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="929f51732e3f719802e94908d39685b28af442ff" translate="yes" xml:space="preserve">
          <source>The binary number and the location of the binary point are both encoded within the value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이진수와 이진수의 위치는 모두 값 내에 인코딩됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="80357d1d9d23e73c226694fd0d8a72cc95a3901f" translate="yes" xml:space="preserve">
          <source>The difference between the two is in the size of the numbers that they can hold. For &lt;code&gt;float&lt;/code&gt;, you can have up to 7 digits in your number. For &lt;code&gt;double&lt;/code&gt;s, you can have up to 16 digits. To be more precise, here's the official size:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;둘의 차이점은 보유 할 수있는 숫자의 크기입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;들어 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 당신은 당신의 번호 7 자리까지 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;들어 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의, 당신은 16 자리까지 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;보다 정확한 공식 크기는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba1df49d1ef57a71eece485cd18664262a6dbc2b" translate="yes" xml:space="preserve">
          <source>The important thing to note is that humans are used to representing non-integers in a decimal form, and expect exact results in decimal representations; not all decimal numbers are exactly representable in binary floating point &amp;ndash; 0.1, for example &amp;ndash; so if you use a binary floating point value you'll actually get an approximation to 0.1. You'll still get approximations when using a floating decimal point as well &amp;ndash; the result of dividing 1 by 3 can't be exactly represented, for example.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주목해야 할 중요한 점은 인간은 정수가 아닌 정수를 10 진수 형식으로 표현하는 데 사용되며 10 진수로 정확한 결과를 기대한다는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 소수를 이진 부동 소수점 (예 : 0.1)으로 정확하게 표현할 수있는 것은 아닙니다. 따라서 이진 부동 소수점 값을 사용하면 실제로는 대략 0.1이됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;부동 소수점을 사용할 때도 근사값을 얻을 수 있습니다. 예를 들어 1을 3으로 나눈 결과는 정확하게 표현할 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bbab681f843131c60f1225901e664ffee19a8131" translate="yes" xml:space="preserve">
          <source>The main difference between each of these is the precision.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이들 각각의 주요 차이점은 정밀도입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bc0bac6d4c290b7b8cfdc112f47219e721c4536b" translate="yes" xml:space="preserve">
          <source>The problem with all these types is that a certain imprecision subsists 
AND that this problem can occur with small decimal numbers like in the following example</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이러한 모든 유형의 문제점은 특정 부정확성이 존재하며이 예제는 다음 예제와 같이 작은 소수로 발생할 수 있다는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="88d67b540cdb282af3ab915739f56e913bc26ae4" translate="yes" xml:space="preserve">
          <source>The solution, bizarrely, was to convert the Excel values into a &lt;code&gt;double&lt;/code&gt; first, and then into a &lt;code&gt;decimal&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기괴하게도 해결책은 Excel 값을 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 먼저 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변환 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한 다음 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 변환하는 것입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d0bd130c1325b1dc425a336a6f40366da340bc0" translate="yes" xml:space="preserve">
          <source>The summary table:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;요약표 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a7a578757cb8a6be91971ce3516e00e040f7d0f4" translate="yes" xml:space="preserve">
          <source>This has been an interesting thread for me, as today, we've just had a nasty little bug, concerning &lt;code&gt;decimal&lt;/code&gt; having less precision than a &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;오늘 나에게 흥미로운 스레드였습니다. 오늘날 우리는 &lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 보다 정밀도가 낮은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 관한 작은 버그가있었습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f7d1b6e129e9adce21c4af662ecfce79a6ab47b" translate="yes" xml:space="preserve">
          <source>To define Decimal, Float and Double in .Net (c#)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.Net에서 십진수, 부동 및 이중을 정의하려면 (C #)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9bfb32c5b38d433ef9b222243cc37f4e2fd80293" translate="yes" xml:space="preserve">
          <source>Use decimal for &lt;strong&gt;counted&lt;/strong&gt; values</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;계산 된&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 값에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;10 진수 사용&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fdbec70ed5782c7b1b95679cab01d2ba0abb3e19" translate="yes" xml:space="preserve">
          <source>Use float/double for &lt;strong&gt;measured&lt;/strong&gt; values</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;측정&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 값에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;float / double 사용&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d433b2fe6871e1b194e63ff47b8f2abd5b7d063" translate="yes" xml:space="preserve">
          <source>We always count money and should never measure it. We usually measure distance. We often count scores.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리는 항상 돈을 세고 측정해서는 안됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리는 보통 거리를 측정합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리는 종종 점수를 계산합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="094d32b5055c68122c16a97011e63affae838ca0" translate="yes" xml:space="preserve">
          <source>What is the difference between &lt;code&gt;decimal&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt; in .NET?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.NET에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 차이점은 무엇입니까 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="794aaac23d6f61a5da2a4d132871a694b1431687" translate="yes" xml:space="preserve">
          <source>When would someone use one of these?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;누군가이 중 하나를 언제 사용합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1777e568bec7c8e3d15f744eca32e777323f3671" translate="yes" xml:space="preserve">
          <source>You can read more &lt;a href=&quot;http://net-informations.com/q/faq/float.html&quot;&gt;here&lt;/a&gt;, &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/float&quot;&gt;Float&lt;/a&gt;, &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/double&quot;&gt;Double&lt;/a&gt;, and &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/decimal&quot;&gt;Decimal&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자세한 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://net-informations.com/q/faq/float.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내용&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/float&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Float&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/double&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Double&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/decimal&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Decimal을 참조하십시오&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="04f5116b35cc2be15c84a5e7d9cc60b86e8e4f9f" translate="yes" xml:space="preserve">
          <source>and check the results.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결과를 확인하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="02e9e7ae1696f0016afc3b6979a7b7ea97ec81f2" translate="yes" xml:space="preserve">
          <source>cellValue = &lt;strong&gt;0.00006317592&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cellValue = &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;0.00006317592&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4acb42a7cdd18b9c59c950b72156333ef8c552f8" translate="yes" xml:space="preserve">
          <source>decimal: &amp;plusmn;1.0 x 10^-28 to &amp;plusmn;7.9 x 10^28 (28-29 significant figures)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;10 진수 : &amp;plusmn; 1.0 x 10 ^ -28 ~ &amp;plusmn; 7.9 x 10 ^ 28 (28-29 유효 숫자)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77a41a30e08b5ac6bbd97597c92762b4232cd4b6" translate="yes" xml:space="preserve">
          <source>distance (do we count distance or measure distance? *)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;거리 (거리를 세거나 거리를 측정합니까? *)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ce7db2dc37d77a5440ebd7e0fee300c577b05b3f" translate="yes" xml:space="preserve">
          <source>double: &amp;plusmn;5.0 x 10^-324 to &amp;plusmn;1.7 x 10^308 (15-16 significant figures)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이중 : &amp;plusmn; 5.0 x 10 ^ -324 ~ &amp;plusmn; 1.7 x 10 ^ 308 (15-16 유효 숫자)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77dc75324948b92927d4e8628ff3c0a2339bbbe9" translate="yes" xml:space="preserve">
          <source>float: &amp;plusmn;1.5 x 10^-45 to &amp;plusmn;3.4 x 10^38 (~7 significant figures</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;부동 : &amp;plusmn; 1.5 x 10 ^ -45 ~ &amp;plusmn; 3.4 x 10 ^ 38 (~ 7 유효 숫자&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="417e8bf6d0a838c93d152b30e62d4659637eaa43" translate="yes" xml:space="preserve">
          <source>money (do we count money or measure money?)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;돈 (돈을 세거나 돈을 측정합니까?)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="429a9c5d0383db06b143d7dcd26625d9bb16bef1" translate="yes" xml:space="preserve">
          <source>scores (do we count scores or measure scores?)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;점수 (점수를 세거나 점수를 측정합니까?)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="23d20324c6b6649855686b87312af67f8d5afbea" translate="yes" xml:space="preserve">
          <source>throws &lt;strong&gt;OverflowException&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;OverflowException을&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 던집니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b681723e574c1fda766cd4acd3eb149f410ee7c" translate="yes" xml:space="preserve">
          <source>you must mention values as:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같이 값을 언급해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
