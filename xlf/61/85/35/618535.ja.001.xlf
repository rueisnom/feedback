<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/618535">
    <body>
      <group id="618535">
        <trans-unit id="54f697a1ff421e46f37022813a88d0937a82090c" translate="yes" xml:space="preserve">
          <source>&amp;amp;</source>
          <target state="translated">&amp;amp;</target>
        </trans-unit>
        <trans-unit id="37f5899c4710f8727a605f1a95f04b602caa2b9e" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;float&lt;/code&gt; is short for &quot;floating point&quot;, and just means a number with a point something on the end.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は「浮動小数点」の略で、端に何か点がある数字を意味します。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6026b7526a6fbebe8bb8ee7cad7eadcde609078a" translate="yes" xml:space="preserve">
          <source>* In some cases, what I would call &lt;em&gt;nominal distance&lt;/em&gt;, we may indeed want to 'count' distance. For example, maybe we are dealing with country signs that show distances to cities, and we know that those distances never have more than one decimal digit (xxx.x km).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;*場合によっては、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;公称距離&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」と呼ばれる&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;こともありますが、実際に距離を「カウント」したい場合があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、都市までの距離を示す国の標識を扱っている場合、それらの距離には10進数字（xxx.x km）が1つしかないことがわかっています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db7c0dfcd6cfb7953eef10c524b854307943d947" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.decimal&quot;&gt;Decimal&lt;/a&gt; -28-29 significant digits (128 bit)</source>
          <target state="translated">&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.decimal&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;10進数の&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -28-29の有効数字（128ビット）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99b49c919651808b27b1b7c158f9eea3a5ede42c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.double&quot;&gt;Double&lt;/a&gt;-15-16 digits (64 bit)</source>
          <target state="translated">&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.double&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;桁の-15-16桁（64ビット）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43da59246dc5d76525a79d2a54749a9898adcc81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.single&quot;&gt;Float&lt;/a&gt; - 7 digits (32 bit)</source>
          <target state="translated">&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.single&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フロート&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -7桁（32ビット）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac558e5ef8c193696b7c197f275d9d8091e73496" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Decimals&lt;/code&gt; also allow the encoding or trailing zeros.</source>
          <target state="translated">&lt;code&gt;Decimals&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、エンコードまたは末尾のゼロも使用できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2952f98519ef996b537e1e36f53c2b89e3a8fa23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Decimals&lt;/code&gt; and &lt;code&gt;Floats/Doubles&lt;/code&gt; cannot be compared without a cast whereas &lt;code&gt;Floats&lt;/code&gt; and &lt;code&gt;Doubles&lt;/code&gt; can.</source>
          <target state="translated">&lt;code&gt;Decimals&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Floats/Doubles&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はキャストなしでは比較できませんが、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Floats&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Doubles&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;比較&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29847fbe2116c3f60cf5bbf95957b4f49286de2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Decimals&lt;/code&gt; are much slower than a &lt;code&gt;double/float&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Decimals&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;double/float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;よりもはるかに遅くなります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b0b5a548ebd297b64756bcf2987496babb034ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decimal&lt;/code&gt; has about 28 digits of precision</source>
          <target state="translated">&lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数の精度は約28桁です&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c18bc459005b7daf7dcdf90e7ef4f1df9ec789b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decimal&lt;/code&gt; is a &lt;a href=&quot;http://csharpindepth.com/Articles/General/Decimal.aspx&quot;&gt;floating &lt;em&gt;decimal&lt;/em&gt; point type&lt;/a&gt;. In other words, they represent a number like this:</source>
          <target state="translated">&lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://csharpindepth.com/Articles/General/Decimal.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;浮動&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;小数点&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タイプ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、次のような数値を表します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e14a3b3326b3904af1c6dd05e4a5ac4b5efa27d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;double&lt;/code&gt; has about 15 digits of precision</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の精度は約15桁です&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d5c5850696e768cc0a9f3c96d1c5ec7ff6d7959" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;float&lt;/code&gt; 7 digits of precision</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;7桁の精度を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;浮動小数点&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9953f558e77705ed916c73f4c1ee595e16a57557" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;float&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt; are &lt;a href=&quot;http://csharpindepth.com/Articles/General/FloatingPoint.aspx&quot;&gt;floating &lt;em&gt;binary&lt;/em&gt; point types&lt;/a&gt;. In other words, they represent a number like this:</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;されている&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://csharpindepth.com/Articles/General/FloatingPoint.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;浮動&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;進&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;小数点型を&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、次のような数値を表します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1cf9e77ba2278cb0cbc185195f53d2a482e775ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;float&lt;/code&gt; is a 32-bit number, and &lt;code&gt;double&lt;/code&gt; is a 64-bit number.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は32ビットの数値で、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は64ビットの数値です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a76b42ff2d3f5f9e3109b54babcfadf24d5e595f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;float&lt;/code&gt; is a &lt;code&gt;32-bit&lt;/code&gt; number, &lt;code&gt;double&lt;/code&gt; is a &lt;code&gt;64-bit&lt;/code&gt; number and &lt;code&gt;decimal&lt;/code&gt; is a &lt;code&gt;128-bit&lt;/code&gt; number.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;32-bit&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数値、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;64-bit&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数値、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;128-bit&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数値です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="264ccccd5c0320688718ce31bc051692eeaf0f6b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Decimal.TryParse(cellValue.ToString(), out value);&lt;/em&gt; // would return &lt;strong&gt;0&lt;/strong&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Decimal.TryParse（cellValue.ToString（）、out value）; &lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;// &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;0&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を返し&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="08a5aff3c15e244f6108b22c6942310599188602" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;When would someone use one of these?&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いつこれらのいずれかを使用しますか？&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d7e3111731095b413fe21355ada9217edeb7f029" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Decimal&lt;/strong&gt; 128 bit (28-29 significant digits)
In case of financial applications it is better to use 
Decimal types because it gives you a high level of accuracy and easy to avoid rounding errors
Use decimal for non-integer math where precision is needed (e.g. money and currency)</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Decimal&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 128ビット（有効桁数28〜29桁）金融アプリケーションの場合は、Decimalタイプを使用することをお勧めします。高精度で丸め誤差を簡単に回避できるため、精度が必要な非整数演算にはDecimalタイプを使用します（例：お金と通貨）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="185d307474f65d7cc00f8857fe0e56200fcf2116" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Double&lt;/strong&gt;  64 bit (15-16 digits)
Double Types are probably the most normally used data type for real values, except handling money.
Use double for non-integer math where the most precise answer isn't necessary.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ダブル&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 64ビット（15〜16桁）ダブルタイプは、金額の処理を除いて、実際の値に最もよく使用されるデータタイプです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最も正確な答えが不要な非整数演算にはdoubleを使用します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f093dfc3e53e2c222216fbb1bfc8fa6c92036836" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Float&lt;/strong&gt;  32 bit (7 digits)
It is used mostly in graphic libraries because very high demands for processing powers,
also used situations that can endure rounding errors.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フロート&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 32ビット（7桁）処理能力に対する要求が非常に高いため、ほとんどの場合グラフィックライブラリで使用され、丸めエラーに耐えられる状況も使用されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5dc78fb0697aac997dda8d17bfff6e646454d8a4" translate="yes" xml:space="preserve">
          <source>A certain loss of precision is acceptable in many scientific calculations because of the practical limits of the physical problem or artifact being measured.  Loss of precision is not acceptable in finance.</source>
          <target state="translated">多くの科学的計算では,測定される物理的な問題や人工物の実用的な限界のために,ある種の精度の損失は許容される.精度の損失は、金融では認められない。</target>
        </trans-unit>
        <trans-unit id="4ef78f26486462f6e58ed78f44b95eb1644cd586" translate="yes" xml:space="preserve">
          <source>Again, the number and the location of the &lt;em&gt;decimal&lt;/em&gt; point are both encoded within the value &amp;ndash; that's what makes &lt;code&gt;decimal&lt;/code&gt; still a floating point type instead of a fixed point type.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;繰り返しになりますが、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;小数点&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の数と位置&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はどちらも値内にエンコードされています。そのため、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は固定小数点型ではなく浮動小数点型になります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d5cb8f03ec3721ef8296ed8405aeeffa8c153d09" translate="yes" xml:space="preserve">
          <source>And Bytes Occupied by each are</source>
          <target state="translated">そして、それぞれが占有するバイト数は</target>
        </trans-unit>
        <trans-unit id="eff1aa36668e9a3c0d25c7e2e2466197321adb95" translate="yes" xml:space="preserve">
          <source>Answer: On a 32 bit machine bLower contains TRUE !!!</source>
          <target state="translated">答えは?32ビットマシンでは、bLowerにはTRUEが含まれています!</target>
        </trans-unit>
        <trans-unit id="485700f7043c8456198f16eb6045364d5da2f1e0" translate="yes" xml:space="preserve">
          <source>As for what to use when:</source>
          <target state="translated">いつ使うかについては</target>
        </trans-unit>
        <trans-unit id="08cc8c02c63b46ebc579432f8c69389e02d147cb" translate="yes" xml:space="preserve">
          <source>But these do not:</source>
          <target state="translated">しかし、これらはそうではありません。</target>
        </trans-unit>
        <trans-unit id="1e3ee7d6b3e6f808401117bf1a8f2f3409ad4fee" translate="yes" xml:space="preserve">
          <source>Caution: I think that same problem can certainly exists for other number because Decimal is only a double with higher precision and the precision has always a limit.</source>
          <target state="translated">注意。10進数は精度の高い倍数に過ぎず、精度には常に限界があるので、他の数でも同じ問題は確かに存在すると思います。</target>
        </trans-unit>
        <trans-unit id="f19f90ee06a28bdc8b0c742c9a2f3a160958b045" translate="yes" xml:space="preserve">
          <source>Decimal - 128 bit (28-29 significant digits)</source>
          <target state="translated">10進数-128ビット(28-29有効桁</target>
        </trans-unit>
        <trans-unit id="6994cc636981c612cd5ddee0d0f52ce2bd0810a5" translate="yes" xml:space="preserve">
          <source>Decimal cannot be divided by integer zero. Compilation will always fail if you do that.</source>
          <target state="translated">10進数を整数の0で割ることはできません。そうするとコンパイルは必ず失敗します。</target>
        </trans-unit>
        <trans-unit id="6cd6dadd2bf0d0fccc1df4f5e3878b48efc89733" translate="yes" xml:space="preserve">
          <source>Decimal has an unacceptably smaller value range than double, despite the fact that it supports more digits of precision. Therefore, Decimal can't be used to represent many scientific values.</source>
          <target state="translated">10進数は、より多くの桁数の精度をサポートしているにもかかわらず、ダブルよりも許容できないほど小さい値の範囲を持っています。そのため、10進数は多くの科学的な値を表現するのには使えません。</target>
        </trans-unit>
        <trans-unit id="34dbdeeeb507cdf0af128686ef1a1e17076b6f64" translate="yes" xml:space="preserve">
          <source>Decimal is much (much) slower than float and double for most operations, primarily because floating point operations are done in binary, whereas Decimal stuff is done in base 10 (i.e. floats and doubles are handled by the FPU hardware, such as MMX/SSE, whereas decimals are calculated in software).</source>
          <target state="translated">ほとんどの演算では、浮動小数点演算はバイナリで行われるのに対し、10進数演算はベース10で行われるからです(つまり、浮動小数点と2倍はMMXSSEのようなFPUハードウェアで処理されるのに対し、10進数はソフトウェアで計算されます)。</target>
        </trans-unit>
        <trans-unit id="2b0417119a8eb94dee10113420f3a0c8295a58fd" translate="yes" xml:space="preserve">
          <source>Decimals and Floats/Doubles cannot be compared without a cast whereas Floats and Doubles can. Decimals also allow the encoding or trailing zeros.</source>
          <target state="translated">小数型と FloatsDoubles はキャストなしでは比較できませんが、 Floats と Doubles は比較できます。小数はエンコードや末尾のゼロも可能です。</target>
        </trans-unit>
        <trans-unit id="290f8962dc6457e06c7c0b66b4bdc4334c02d9c8" translate="yes" xml:space="preserve">
          <source>Decimals have much higher precision and are usually used within financial applications that require a high degree of accuracy. Decimals are much slower (up to 20X times in some tests) than a double/float.</source>
          <target state="translated">小数ははるかに高い精度を持っており、通常、高度な精度を必要とする金融アプリケーション内で使用されます。小数はダブルフロートよりもはるかに遅い(いくつかのテストでは20倍まで)。</target>
        </trans-unit>
        <trans-unit id="d7865dc73c1fd69ab20f944788bf6d9a1c552749" translate="yes" xml:space="preserve">
          <source>Difference between decimal, float and double in .NET</source>
          <target state="translated">.NETでの10進数、float、doubleの違い</target>
        </trans-unit>
        <trans-unit id="bc911cfbddffb9538d45b9578fd21d74ee90e558" translate="yes" xml:space="preserve">
          <source>Double - 64 bit (15-16 digits)</source>
          <target state="translated">ダブル-64 ビット (15-16 桁)</target>
        </trans-unit>
        <trans-unit id="6abd1a14943f2820b07e78eeb705520a400930da" translate="yes" xml:space="preserve">
          <source>Double and float can be divided by integer zero without an exception at both compilation and run time.</source>
          <target state="translated">ダブルとフロートは、コンパイル時と実行時の両方で例外なく整数のゼロで割ることができます。</target>
        </trans-unit>
        <trans-unit id="c2e9a11930cc502b08afe163fdfd2f183a45d18b" translate="yes" xml:space="preserve">
          <source>Double click your new button to get at the code. Add the following three lines to your button code:</source>
          <target state="translated">新しいボタンをダブルクリックしてコードを取得します。ボタンのコードに次の3行を追加します。</target>
        </trans-unit>
        <trans-unit id="45d91068e57e7aa6be5a19be6d1ffbc741c38aa4" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;double&lt;/code&gt; has less precision than a &lt;code&gt;decimal&lt;/code&gt;, this actually ensured small numbers would still be recognised. For some reason, &lt;strong&gt;&lt;code&gt;double.TryParse&lt;/code&gt;&lt;/strong&gt; was actually able to retrieve such small numbers, whereas &lt;strong&gt;&lt;code&gt;decimal.TryParse&lt;/code&gt;&lt;/strong&gt; would set them to zero.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;にもかかわらず&lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;より低い精度持つ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、この実際に確保小さな数字はまだ認識されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;何らかの理由で、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;double.TryParse&lt;/code&gt; は&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一方で、実際にこのような小さな数字を取得することができました&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;decimal.TryParse&lt;/code&gt; が&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ゼロにそれらを設定します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ff1e5f13adaf9f0fdf0cdf0c8e6464dee6a34247" translate="yes" xml:space="preserve">
          <source>Float - 32 bit (7 digits)</source>
          <target state="translated">フロート-32 ビット(7 桁</target>
        </trans-unit>
        <trans-unit id="5ebf31648c60aad9ea0489937f26b8f7e8e9e148" translate="yes" xml:space="preserve">
          <source>For applications such as games and embedded systems where memory and performance are both critical, float is usually the numeric type of choice as it is faster and half the size of a double. Integers used to be the weapon of choice, but floating point performance has overtaken integer in modern processors. Decimal is right out!</source>
          <target state="translated">ゲームや組み込みシステムのように、メモリと性能の両方が重要なアプリケーションでは、通常、数値型である浮動小数点演算が選択されます。かつては整数が武器として使われていましたが、最近のプロセッサでは浮動小数点の性能が整数を追い越しています。10進数はすぐに出てきます。</target>
        </trans-unit>
        <trans-unit id="3cadad1fb936cd59a173ee4ad751226d192504b1" translate="yes" xml:space="preserve">
          <source>For more information, see:</source>
          <target state="translated">詳細はこちらをご覧ください。</target>
        </trans-unit>
        <trans-unit id="b34aa2ddc6b0b7f92e2cb186e000ad6920534dfa" translate="yes" xml:space="preserve">
          <source>For values which are &quot;naturally exact decimals&quot; it's good to use &lt;code&gt;decimal&lt;/code&gt;. This is usually suitable for any concepts invented by humans: financial values are the most obvious example, but there are others too. Consider the score given to divers or ice skaters, for example.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「自然に正確な&lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」の値の場合は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;decimal&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用することをお&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;勧めし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは通常、人間が考案したすべての概念に適しています。金銭的価値は最も明白な例ですが、他にもあります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例えば、ダイバーやアイススケーターに与えられるスコアを考えてみてください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="784a45840a6dbc10c33232b2978abcd9c20f1767" translate="yes" xml:space="preserve">
          <source>For values which are more artefacts of nature which can't really be measured &lt;em&gt;exactly&lt;/em&gt; anyway, &lt;code&gt;float&lt;/code&gt;/&lt;code&gt;double&lt;/code&gt; are more appropriate. For example, scientific data would usually be represented in this form. Here, the original values won't be &quot;decimally accurate&quot; to start with, so it's not important for the expected results to maintain the &quot;decimal accuracy&quot;. Floating binary point types are much faster to work with than decimals.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;とにかく&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正確&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に測定することができない自然のより多くのアーティファクトである値の場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がより適切です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、科学データは通常、この形式で表されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここでは、元の値は最初は「10進数の精度」ではないため、期待される結果が「10進数の精度」を維持することは重要ではありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;浮動小数点型は、10進数よりもはるかに高速に処理できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c2899e015c1b320354e27e895ffdbd99d0f7a36e" translate="yes" xml:space="preserve">
          <source>Halt your program and return to the coding window. Change this line:</source>
          <target state="translated">プログラムを停止して、コーディング・ウィンドウに戻ります。この行を変更します。</target>
        </trans-unit>
        <trans-unit id="0851ff1fdbfbdb0f6caaf5a3ba5cae4456653e36" translate="yes" xml:space="preserve">
          <source>I found this is interesting. &lt;a href=&quot;http://download.oracle.com/docs/cd/E19957-01/806-3568/ncg_goldberg.html&quot;&gt;What Every Computer Scientist Should Know About Floating-Point Arithmetic&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは面白いと思いました。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://download.oracle.com/docs/cd/E19957-01/806-3568/ncg_goldberg.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてのコンピューター科学者が浮動小数点演算について知っておくべきこと&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f071c332fe3b74368233c2668d23c2389de4c550" translate="yes" xml:space="preserve">
          <source>I mean</source>
          <target state="translated">つまり</target>
        </trans-unit>
        <trans-unit id="2ea289abec6a48909512c260da49bc88db258fac" translate="yes" xml:space="preserve">
          <source>I won't reiterate tons of good (and some bad) information already answered in other answers and comments, but I will answer your followup question with a tip:</source>
          <target state="translated">他の回答やコメントで既に回答されている良い情報(と悪い情報)のトンを繰り返しはしませんが、あなたのフォローアップの質問にはヒントを与えて回答させていただきます。</target>
        </trans-unit>
        <trans-unit id="22ca062b737f9ab0dc8b97338ee6389620f87e92" translate="yes" xml:space="preserve">
          <source>If I replace Double by Decimal, bLower contains FALSE which is the good answer.</source>
          <target state="translated">ダブルを10進数に置き換えると、bLowerにはFALSEが含まれていて、これが正解です。</target>
        </trans-unit>
        <trans-unit id="10d24ddd90fb10edf96b9876f7473a6ae41f2b0e" translate="yes" xml:space="preserve">
          <source>If you need better accuracy, use double instead of float.
In modern CPUs both data types have almost the same performance. The only benifit of using float is they take up less space. Practically matters only if you have got many of them.</source>
          <target state="translated">より良い精度が必要な場合は、float の代わりに double を使用します。最近のCPUでは、どちらのデータ型もほぼ同じ性能を持っています。float を使用する唯一の利点は、スペースを取らないことです。実質的に重要なのは、多くのデータ型を持っている場合だけです。</target>
        </trans-unit>
        <trans-unit id="830d72c2cd3996f27fcf7be7d1b65878293ab5f9" translate="yes" xml:space="preserve">
          <source>In default settings, Floats (System.Single) and doubles (System.Double) will never use
  overflow checking while Decimal (System.Decimal) will always use
  overflow checking.</source>
          <target state="translated">既定の設定では、float(System.Single)とdouble(System.Double)はオーバーフローチェックを使用しませんが、Decimal(System.Decimal)は常にオーバーフローチェックを使用します。</target>
        </trans-unit>
        <trans-unit id="3fa99cabd00f27462a64a618353a7a9855415d72" translate="yes" xml:space="preserve">
          <source>In double, the problem is that fMean-fDelta = 1.09999999999 that is lower that 1.1.</source>
          <target state="translated">doubleでは、fMean-fDelta=1.099999999と1.1よりも低いことが問題になっています。</target>
        </trans-unit>
        <trans-unit id="4c47a2e284cfcd472e106fb991146fcd4fed932c" translate="yes" xml:space="preserve">
          <source>In fact, Double, Float and Decimal correspond to BINARY decimal in COBOL !</source>
          <target state="translated">実際には、Double,Float,DecimalはCOBOLのBINARY 10進数に対応しています!</target>
        </trans-unit>
        <trans-unit id="07dc8b89fbb3234f10185a52f8f3c5af703cf7f4" translate="yes" xml:space="preserve">
          <source>In our C# code, we are reading numeric values from an Excel spreadsheet, converting them into a &lt;code&gt;decimal&lt;/code&gt;, then sending this &lt;code&gt;decimal&lt;/code&gt; back to a Service to save into a &lt;em&gt;SQL Server&lt;/em&gt; database.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C＃コードでは、Excelスプレッドシートから数値を読み取り、それらを&lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変換して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この&lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をサービスに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;送信&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;して&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQL Server&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;データベース&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に保存してい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d0c84010367b3b1669cacd2b79cfdd7e88cb34e5" translate="yes" xml:space="preserve">
          <source>In simple words:</source>
          <target state="translated">簡単に言うと</target>
        </trans-unit>
        <trans-unit id="5163c90523edb7a9c674140755cab21cd9aec85e" translate="yes" xml:space="preserve">
          <source>Integers, as was mentioned, are whole numbers. They can't store the point something, like .7, .42, and .007. If you need to store numbers that are not whole numbers, you need a different type of variable. You can use the double type or the float type. You set these types of variables up in exactly the same way: instead of using the word &lt;code&gt;int&lt;/code&gt;, you type &lt;code&gt;double&lt;/code&gt; or &lt;code&gt;float&lt;/code&gt;. Like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;前述のように、整数は整数です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.7、.42、.007などのポイントを保存することはできません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;整数ではない数値を格納する必要がある場合は、別のタイプの変数が必要です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ダブルタイプまたはフロートタイプを使用できます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらのタイプの変数は、まったく同じ方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で設定します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;単語&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用する代わりに、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; と入力し&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このような：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0e0cb2234b0a4b7f63dc36082317422c7cb3dcbb" translate="yes" xml:space="preserve">
          <source>It is regrettable that other numeric types implemented in COBOL don't exist in .Net. For those that don't know COBOL, there exist in COBOL following numeric type</source>
          <target state="translated">COBOLで実装されている他の数値型が.Netには存在しないのが残念です。COBOLを知らない人のために、COBOLには以下のような数値型が存在する。</target>
        </trans-unit>
        <trans-unit id="a6e42d11ec97b74e1620a4643850ff92433fbf2e" translate="yes" xml:space="preserve">
          <source>More about...&lt;a href=&quot;http://net-informations.com/q/faq/float.html&quot;&gt;the difference between Decimal, Float and Double&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細... &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://net-informations.com/q/faq/float.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Decimal、Float、Doubleの違い&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f880cdfc96654120d58d9c431037af613ce952a3" translate="yes" xml:space="preserve">
          <source>No one has mentioned that</source>
          <target state="translated">誰もそんなことは言っていない</target>
        </trans-unit>
        <trans-unit id="9615655bffcd31033b60b263d25dd29c970def96" translate="yes" xml:space="preserve">
          <source>Now, for &lt;em&gt;almost all&lt;/em&gt; of our Excel values, this worked beautifully. But for some, very small Excel values, using &lt;strong&gt;&lt;code&gt;decimal.TryParse&lt;/code&gt;&lt;/strong&gt; lost the value completely. One such example is</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これで、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ほとんどすべて&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のExcel値で、これは美しく機能しました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;decimal.TryParse&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用した一部の非常に小さなExcel値で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、値が完全に失われました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのような例の1つは&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2686849c501d2416b51d4e4ea5481bd89ef299fe" translate="yes" xml:space="preserve">
          <source>Odd. Very odd.</source>
          <target state="translated">変わってる とても奇妙だ</target>
        </trans-unit>
        <trans-unit id="2a90f6e6032d9f943a48737b193c7cfae6abe6fe" translate="yes" xml:space="preserve">
          <source>Precision is the &lt;strong&gt;&lt;em&gt;main difference&lt;/em&gt;&lt;/strong&gt; (Notice that this is not the single difference) where &lt;strong&gt;float&lt;/strong&gt; is a single precision (32 bit) floating point data type, &lt;strong&gt;double&lt;/strong&gt; is a double precision (64 bit) floating point data type and &lt;strong&gt;decimal&lt;/strong&gt; is a 128-bit floating point data type.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;精度は&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;主な違いです&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（これは単一の違いではないことに注意してください）&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。float&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は単精度（32ビット）浮動小数点データ型、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;double&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は倍精度（64ビット）浮動小数点データ型、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;10進数&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は128ビットです。浮動小数点データ型。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c4fe7d68ec1652d914ee80df8b26311175ed660" translate="yes" xml:space="preserve">
          <source>Precision is the main difference.</source>
          <target state="translated">精密さが大きな違いです。</target>
        </trans-unit>
        <trans-unit id="9c0b1c555445750f0b860529fcf224d93b6f626f" translate="yes" xml:space="preserve">
          <source>Question: Which value does bLower variable contain ?</source>
          <target state="translated">質問です。bLower変数にはどの値が含まれていますか?</target>
        </trans-unit>
        <trans-unit id="04b95e3fcc2dae4db1fd7ec8821a54c3be101611" translate="yes" xml:space="preserve">
          <source>Result :</source>
          <target state="translated">結果 .</target>
        </trans-unit>
        <trans-unit id="40c5dd5e0ef46f5c025a53e99f1a084b47d5d657" translate="yes" xml:space="preserve">
          <source>Run your programme and click your double button. The message box correctly displays the number. Add another number on the end, though, and C# will again round up or down. The moral is if you want accuracy, be careful of rounding!</source>
          <target state="translated">プログラムを実行し、ダブルボタンをクリックします。メッセージボックスには正しく数字が表示されます。しかし、最後に別の数字を追加すると、C#は再び四捨五入をしてしまいます。正確さを求めるのであれば、丸めには気をつけましょう。</target>
        </trans-unit>
        <trans-unit id="01706013cfdbcb0fc543d3c97784f3f4c235d630" translate="yes" xml:space="preserve">
          <source>Some examples:</source>
          <target state="translated">いくつかの例を紹介します。</target>
        </trans-unit>
        <trans-unit id="fb1a22d66493c3c914ca7a85c92827a5141f74d7" translate="yes" xml:space="preserve">
          <source>The Decimal structure is strictly geared to financial calculations requiring accuracy, which are relatively intolerant of rounding.  Decimals are not adequate for scientific applications, however, for several reasons:</source>
          <target state="translated">十進法は、正確さを必要とする金融計算に厳密に対応しており、四捨五入には比較的寛容ではありません。しかし、いくつかの理由から、十進数は科学的なアプリケーションには適切ではありません。</target>
        </trans-unit>
        <trans-unit id="8eac488092dae714dc29895af6ea7e3489096568" translate="yes" xml:space="preserve">
          <source>The Decimal, Double, and Float variable types are different in the way that they store the values.</source>
          <target state="translated">Decimal、Double、Floatの変数型は、値を格納する方法が異なります。</target>
        </trans-unit>
        <trans-unit id="322ed86d8d5897e8bcb9d947c962d88c35efe78a" translate="yes" xml:space="preserve">
          <source>The Decimal, Double, and Float variable types are different in the way that they store the values. Precision is the main difference where float is a single precision (32 bit) floating point data type, double is a double precision (64 bit) floating point data type and decimal is a 128-bit floating point data type.</source>
          <target state="translated">変数型のDecimal、Double、Floatは値を格納する方法が異なります。精度が主な違いで、floatは単精度(32ビット)の浮動小数点データ型、doubleは倍精度(64ビット)の浮動小数点データ型、decimalは128ビットの浮動小数点データ型です。</target>
        </trans-unit>
        <trans-unit id="929f51732e3f719802e94908d39685b28af442ff" translate="yes" xml:space="preserve">
          <source>The binary number and the location of the binary point are both encoded within the value.</source>
          <target state="translated">2進数と2進点の位置の両方が値の中でエンコードされています。</target>
        </trans-unit>
        <trans-unit id="80357d1d9d23e73c226694fd0d8a72cc95a3901f" translate="yes" xml:space="preserve">
          <source>The difference between the two is in the size of the numbers that they can hold. For &lt;code&gt;float&lt;/code&gt;, you can have up to 7 digits in your number. For &lt;code&gt;double&lt;/code&gt;s, you can have up to 16 digits. To be more precise, here's the official size:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2つの違いは、保持できる数値のサイズです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下のために&lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、あなたの数は7桁まで持つことができます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下のために&lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の、あなたは16桁まで持つことができます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;より正確には、公式サイズは次のとおりです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba1df49d1ef57a71eece485cd18664262a6dbc2b" translate="yes" xml:space="preserve">
          <source>The important thing to note is that humans are used to representing non-integers in a decimal form, and expect exact results in decimal representations; not all decimal numbers are exactly representable in binary floating point &amp;ndash; 0.1, for example &amp;ndash; so if you use a binary floating point value you'll actually get an approximation to 0.1. You'll still get approximations when using a floating decimal point as well &amp;ndash; the result of dividing 1 by 3 can't be exactly represented, for example.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意すべき重要な点は、人間は非整数を10進形式で表現することに慣れており、正確な結果を10進表現で期待することです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべての10進数が2進浮動小数点（たとえば、0.1）で正確に表現できるわけではないため、2進浮動小数点値を使用すると、実際には0.1に近い値が得られます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;浮動小数点を使用した場合でも、近似値は得られます。たとえば、1を3で除算した結果は、正確に表すことができません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bbab681f843131c60f1225901e664ffee19a8131" translate="yes" xml:space="preserve">
          <source>The main difference between each of these is the precision.</source>
          <target state="translated">それぞれの主な違いは、精度です。</target>
        </trans-unit>
        <trans-unit id="bc0bac6d4c290b7b8cfdc112f47219e721c4536b" translate="yes" xml:space="preserve">
          <source>The problem with all these types is that a certain imprecision subsists 
AND that this problem can occur with small decimal numbers like in the following example</source>
          <target state="translated">これらすべてのタイプの問題は、ある種の不正確さが存在することと、次の例のような小さな10進数でこの問題が発生する可能性があることです。</target>
        </trans-unit>
        <trans-unit id="88d67b540cdb282af3ab915739f56e913bc26ae4" translate="yes" xml:space="preserve">
          <source>The solution, bizarrely, was to convert the Excel values into a &lt;code&gt;double&lt;/code&gt; first, and then into a &lt;code&gt;decimal&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;奇妙なことに、解決策はまずExcelの値を&lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に変換し、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に変換することでした&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d0bd130c1325b1dc425a336a6f40366da340bc0" translate="yes" xml:space="preserve">
          <source>The summary table:</source>
          <target state="translated">まとめ表です。</target>
        </trans-unit>
        <trans-unit id="a7a578757cb8a6be91971ce3516e00e040f7d0f4" translate="yes" xml:space="preserve">
          <source>This has been an interesting thread for me, as today, we've just had a nasty little bug, concerning &lt;code&gt;decimal&lt;/code&gt; having less precision than a &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは私にとって興味深いスレッドでした。今日、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;精度が&lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;よりも低い&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;という、厄介な小さなバグ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が発生しました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f7d1b6e129e9adce21c4af662ecfce79a6ab47b" translate="yes" xml:space="preserve">
          <source>To define Decimal, Float and Double in .Net (c#)</source>
          <target state="translated">.Netで10進数、フロート、ダブルを定義するには (c#)</target>
        </trans-unit>
        <trans-unit id="9bfb32c5b38d433ef9b222243cc37f4e2fd80293" translate="yes" xml:space="preserve">
          <source>Use decimal for &lt;strong&gt;counted&lt;/strong&gt; values</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;カウント&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;小数を使用&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fdbec70ed5782c7b1b95679cab01d2ba0abb3e19" translate="yes" xml:space="preserve">
          <source>Use float/double for &lt;strong&gt;measured&lt;/strong&gt; values</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;測定&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値には&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;float / doubleを使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d433b2fe6871e1b194e63ff47b8f2abd5b7d063" translate="yes" xml:space="preserve">
          <source>We always count money and should never measure it. We usually measure distance. We often count scores.</source>
          <target state="translated">私たちはいつもお金を数えていますが、決して測ってはいけません。私たちはいつも距離を測る。私たちはよく点数を数える。</target>
        </trans-unit>
        <trans-unit id="094d32b5055c68122c16a97011e63affae838ca0" translate="yes" xml:space="preserve">
          <source>What is the difference between &lt;code&gt;decimal&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt; in .NET?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.NETの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の違いは何&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ですか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="794aaac23d6f61a5da2a4d132871a694b1431687" translate="yes" xml:space="preserve">
          <source>When would someone use one of these?</source>
          <target state="translated">誰かがこれを使うのはいつ?</target>
        </trans-unit>
        <trans-unit id="1777e568bec7c8e3d15f744eca32e777323f3671" translate="yes" xml:space="preserve">
          <source>You can read more &lt;a href=&quot;http://net-informations.com/q/faq/float.html&quot;&gt;here&lt;/a&gt;, &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/float&quot;&gt;Float&lt;/a&gt;, &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/double&quot;&gt;Double&lt;/a&gt;, and &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/decimal&quot;&gt;Decimal&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳しく&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://net-informations.com/q/faq/float.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/float&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Float&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/double&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Double&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/decimal&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Decimalを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ご覧&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="04f5116b35cc2be15c84a5e7d9cc60b86e8e4f9f" translate="yes" xml:space="preserve">
          <source>and check the results.</source>
          <target state="translated">とチェックしてみてください。</target>
        </trans-unit>
        <trans-unit id="02e9e7ae1696f0016afc3b6979a7b7ea97ec81f2" translate="yes" xml:space="preserve">
          <source>cellValue = &lt;strong&gt;0.00006317592&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cellValue = &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;0.00006317592&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4acb42a7cdd18b9c59c950b72156333ef8c552f8" translate="yes" xml:space="preserve">
          <source>decimal: &amp;plusmn;1.0 x 10^-28 to &amp;plusmn;7.9 x 10^28 (28-29 significant figures)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;10進数：&amp;plusmn;1.0 x 10 ^ -28から&amp;plusmn;7.9 x 10 ^ 28（有効数字28-29）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77a41a30e08b5ac6bbd97597c92762b4232cd4b6" translate="yes" xml:space="preserve">
          <source>distance (do we count distance or measure distance? *)</source>
          <target state="translated">距離</target>
        </trans-unit>
        <trans-unit id="ce7db2dc37d77a5440ebd7e0fee300c577b05b3f" translate="yes" xml:space="preserve">
          <source>double: &amp;plusmn;5.0 x 10^-324 to &amp;plusmn;1.7 x 10^308 (15-16 significant figures)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;double：&amp;plusmn;5.0 x 10 ^ -324から&amp;plusmn;1.7 x 10 ^ 308（有効数字15-16）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77dc75324948b92927d4e8628ff3c0a2339bbbe9" translate="yes" xml:space="preserve">
          <source>float: &amp;plusmn;1.5 x 10^-45 to &amp;plusmn;3.4 x 10^38 (~7 significant figures</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;float：&amp;plusmn;1.5 x 10 ^ -45から&amp;plusmn;3.4 x 10 ^ 38（〜7桁の有効数字）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="417e8bf6d0a838c93d152b30e62d4659637eaa43" translate="yes" xml:space="preserve">
          <source>money (do we count money or measure money?)</source>
          <target state="translated">かね</target>
        </trans-unit>
        <trans-unit id="429a9c5d0383db06b143d7dcd26625d9bb16bef1" translate="yes" xml:space="preserve">
          <source>scores (do we count scores or measure scores?)</source>
          <target state="translated">点数</target>
        </trans-unit>
        <trans-unit id="23d20324c6b6649855686b87312af67f8d5afbea" translate="yes" xml:space="preserve">
          <source>throws &lt;strong&gt;OverflowException&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;OverflowExceptionを&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スローし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b681723e574c1fda766cd4acd3eb149f410ee7c" translate="yes" xml:space="preserve">
          <source>you must mention values as:</source>
          <target state="translated">のように値を言及しなければなりません。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
