<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/610406">
    <body>
      <group id="610406">
        <trans-unit id="ac0c4b088b819d6d80c035b23d569889bcde5fcb" translate="yes" xml:space="preserve">
          <source>&amp;lt; ES6</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;lt;ES6&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24dde53b4985d927de7a2e9bb936a2beda072ec1" translate="yes" xml:space="preserve">
          <source>+1 Zippo with the exception that the function body needs to be as below or otherwise it appends the current string on every iteration:</source>
          <target state="translated">+1 Zippoは、関数本体が以下のようになっていなければならないという例外を除いて、反復のたびに現在の文字列を追加します。</target>
        </trans-unit>
        <trans-unit id="05b6f4b80093c34aaa190ea2d702cb8e134eb791" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Number/toFixed&quot;&gt;Mozilla reference page for toFixed()&lt;/a&gt; (with links to toPrecision(), toExponential(), toLocaleString(), ...)</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Number/toFixed&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;toFixed（）のMozillaリファレンスページ（&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; toPrecision（）、toExponential（）、toLocaleString（）などへのリンク付き）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bdd9a990cf687211029cad7b04d3f0fa49e1e141" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:
Check the mozilla-site to find a list of supported browsers.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注：サポートされているブラウザーのリストを見つけるには、mozilla-siteを確認してください。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f39174c88d9d62b0d6c5926062af43c51bcc33bd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;reduce&lt;/em&gt; applies a function against an accumulator and each element in the array (from left to right) to reduce it to a single value.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;reduce&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、アキュムレータと配列内の各要素（左から右へ）に対して関数を適用して、単一の値に減らします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31bd1d1fd6d7bd052ebdee8904ffa291ccde3146" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;String Format for Objects including specifiers:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指定子を含むオブジェクトの文字列形式：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ef97977e1e952ee7e064592245660ef011d32799" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;String Format for specifiers:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指定子の文字列形式：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8aa70159a128cfe08dc6b5f9bc53fcb941734cdf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;String.Format():&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;String.Format():&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1e60c41328f256ad8cc9c03dbe0c79ee1a33dd6f" translate="yes" xml:space="preserve">
          <source>A variation would be:</source>
          <target state="translated">バリエーションとしては</target>
        </trans-unit>
        <trans-unit id="d359bc6a1122c5ed9cb49c0ff53fca46fab3beb4" translate="yes" xml:space="preserve">
          <source>ASP is dead, but ASP.NET is alive! ASP {2}</source>
          <target state="translated">ASPは死んだが、ASP.NETは生きている! ASP {2}の</target>
        </trans-unit>
        <trans-unit id="5578b70263fecf9d22aae08f67ff8ab82822f122" translate="yes" xml:space="preserve">
          <source>Adding to &lt;code&gt;zippoxer&lt;/code&gt;'s answer, I use this function:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;追加&lt;/font&gt;&lt;/font&gt; &lt;code&gt;zippoxer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の答えを、私はこの機能を使用します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b2ec6db0a14761a5c1836c73c3aedfa4b04a52c" translate="yes" xml:space="preserve">
          <source>All the cool new stuff in ES 2015 makes this a lot easier:</source>
          <target state="translated">ES 2015のすべてのクールな新しいものは、これを非常に簡単にします。</target>
        </trans-unit>
        <trans-unit id="3f3cbc976ccf3fdc173dc52762dea60efd39d1f4" translate="yes" xml:space="preserve">
          <source>Also, if you have say a ObjectBase.prototype.format (such as with &lt;a href=&quot;http://www.datejs.com/&quot;&gt;DateJS&lt;/a&gt;) it will use that.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、ObjectBase.prototype.format（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.datejs.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DateJS&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;など&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;言った場合は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それを使用します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="96330a4d72055b19afde931ad561eec1704c947f" translate="yes" xml:space="preserve">
          <source>Be aware that template strings are &lt;strong&gt;surrounded by backticks&lt;/strong&gt; ` instead of (single) quotes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テンプレート文字列は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、（単一の）引用符ではなく、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バッククォート&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; `で&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;囲まれ&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ていることに注意してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e08de4e7c390c0fcb03ad62f39180669eea5ce51" translate="yes" xml:space="preserve">
          <source>Because most of the other proposals that are mentioned fail when a replace string of previous replacement does also contain a format sequence like this:</source>
          <target state="translated">なぜなら、言及されている他の提案のほとんどは、前の置換の置換文字列がこのようなフォーマットのシーケンスを含む場合にも失敗するからです。</target>
        </trans-unit>
        <trans-unit id="39196b8d431b2bae834269a6a7ee257de505f1ee" translate="yes" xml:space="preserve">
          <source>Building on the previously suggested solutions:</source>
          <target state="translated">以前に提案された解決策に基づいて構築する。</target>
        </trans-unit>
        <trans-unit id="ff5cc657db4e7291dcbeb3dbaaf1db950b8a86f3" translate="yes" xml:space="preserve">
          <source>Credit goes to &lt;del&gt;&lt;a href=&quot;http://technoblogia.net/2011/11/08/%D7%98%D7%99%D7%A4-%D7%A4%D7%95%D7%A0%D7%A7%D7%A6%D7%99%D7%99%D7%AA-%D7%A2%D7%96%D7%A8-%D7%91-javascript-%D7%9C%D7%A2%D7%99%D7%A6%D7%95%D7%91-%D7%9E%D7%97%D7%A8%D7%95%D7%96%D7%95%D7%AA/&quot;&gt;(broken link)&lt;/a&gt;&lt;/del&gt;&lt;a href=&quot;https://gist.github.com/0i0/1519811&quot;&gt;https://gist.github.com/0i0/1519811&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クレジットは &lt;/font&gt;&lt;/font&gt;&lt;del&gt;&lt;a href=&quot;http://technoblogia.net/2011/11/08/%D7%98%D7%99%D7%A4-%D7%A4%D7%95%D7%A0%D7%A7%D7%A6%D7%99%D7%99%D7%AA-%D7%A2%D7%96%D7%A8-%D7%91-javascript-%D7%9C%D7%A2%D7%99%D7%A6%D7%95%D7%91-%D7%9E%D7%97%D7%A8%D7%95%D7%96%D7%95%D7%AA/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（リンク切れ）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/del&gt;&lt;a href=&quot;https://gist.github.com/0i0/1519811&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://gist.github.com/0i0/1519811&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0e3ad4f6e0bc4f9376c23a7c0a6576ef1bfb637" translate="yes" xml:space="preserve">
          <source>ES 2015 update</source>
          <target state="translated">ES 2015年更新</target>
        </trans-unit>
        <trans-unit id="e16d490320a0b5fa20c6da3c4979e7a480758272" translate="yes" xml:space="preserve">
          <source>ES6 (EcmaScript2015)</source>
          <target state="translated">ES6(EcmaScript2015</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="f3013b173ef0557a12aee76a30f4c26e06763310" translate="yes" xml:space="preserve">
          <source>Examples...</source>
          <target state="translated">Examples...</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">スニペットを展開</target>
        </trans-unit>
        <trans-unit id="251443e1dc8c718702beb09941ca543e39f481ad" translate="yes" xml:space="preserve">
          <source>Exponential form</source>
          <target state="translated">指数形</target>
        </trans-unit>
        <trans-unit id="3ded7238b7f0e680fa7905b13b87309be1395479" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;http://en.wikipedia.org/wiki/Node.js&quot;&gt;Node.js&lt;/a&gt; users there is &lt;a href=&quot;https://nodejs.org/api/util.html#util_util_format_format_args&quot;&gt;&lt;code&gt;util.format&lt;/code&gt;&lt;/a&gt; which has printf-like functionality:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下のため&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Node.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のNode.jsの&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ユーザーが存在し&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://nodejs.org/api/util.html#util_util_format_format_args&quot;&gt; &lt;code&gt;util.format&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; printfのような機能があります：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee4d33394faafb03ee6335258ac7876baf8d3f9b" translate="yes" xml:space="preserve">
          <source>For basic formatting:</source>
          <target state="translated">基本的な書式設定のため。</target>
        </trans-unit>
        <trans-unit id="f205af7230fbb1817b0c357609896dcefc678cc3" translate="yes" xml:space="preserve">
          <source>For further information:</source>
          <target state="translated">詳細はこちらをご覧ください。</target>
        </trans-unit>
        <trans-unit id="d0fd4bee3024bb438ea228e185912f06c1e7cae1" translate="yes" xml:space="preserve">
          <source>For those who like &lt;a href=&quot;http://nodejs.org&quot;&gt;Node.JS&lt;/a&gt; and its &lt;a href=&quot;http://nodejs.org/api/util.html#util_util_format_format&quot;&gt;&lt;code&gt;util.format&lt;/code&gt;&lt;/a&gt; feature, I've just extracted it out into its vanilla JavaScript form (with only functions that util.format uses):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://nodejs.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Node.JS&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;とその&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://nodejs.org/api/util.html#util_util_format_format&quot;&gt; &lt;code&gt;util.format&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;機能&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が好きな人のために&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、私は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; JavaScriptフォームに抽出しました（util.formatが使用する関数のみ）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="588f2a5eb7433697f5262a4d20049335be6aaf57" translate="yes" xml:space="preserve">
          <source>For use with jQuery.ajax() success functions.  Pass only a single argument and string replace with the properties of that object as {propertyName}:</source>
          <target state="translated">jQuery.ajax()の成功関数で使用します。引数を1つだけ渡して、そのオブジェクトのプロパティを{propertyName}として文字列置換します。</target>
        </trans-unit>
        <trans-unit id="6e0a93cb0914250124a2b2c11b3fa2ee969e8b6b" translate="yes" xml:space="preserve">
          <source>From ES6 on you could use &lt;strong&gt;template strings&lt;/strong&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6以降では、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テンプレート文字列を&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用でき&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b5fcb8ed22281003f12f2fa1eb7b4a3e745f5922" translate="yes" xml:space="preserve">
          <source>From ES6 on you could use template strings:</source>
          <target state="translated">ES6以降では、テンプレート文字列を使用することができます。</target>
        </trans-unit>
        <trans-unit id="c47252fcf3986d201e6d4fb22182fc937d631ad1" translate="yes" xml:space="preserve">
          <source>Gives you the much more familiar:</source>
          <target state="translated">より身近なものを提供します。</target>
        </trans-unit>
        <trans-unit id="0019ddb9ef5930f52e65aa882a44f8a614b53a6d" translate="yes" xml:space="preserve">
          <source>Harvested from: &lt;a href=&quot;https://github.com/joyent/node/blob/master/lib/util.js&quot;&gt;https://github.com/joyent/node/blob/master/lib/util.js&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;収穫元：&lt;/font&gt;&lt;a href=&quot;https://github.com/joyent/node/blob/master/lib/util.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//github.com/joyent/node/blob/master/lib/util.js&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a3fc3dac7c2610f19172d33b654b99f82029bf8" translate="yes" xml:space="preserve">
          <source>Here are a few examples:</source>
          <target state="translated">いくつかの例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="ff796aee6f7d4ad991cd763de7702190da695385" translate="yes" xml:space="preserve">
          <source>Here's a &lt;em&gt;minimal&lt;/em&gt; implementation of sprintf in JavaScript: it only does &quot;%s&quot; and &quot;%d&quot;, but I have left space for it to be extended. It is useless to the OP, but other people who stumble across this thread coming from Google might benefit from it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここだ&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、最小限&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のsprintfの実装では、JavaScriptで：それが唯一の「％sの」と「％d個」をし、それを拡張するために、私はスペースを残しています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それはOPにとって役に立たないですが、Googleからのこのスレッドに出くわした他の人々はそれから利益を得るかもしれません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="38784861a6d4f110f71dc108118abe1b503e798b" translate="yes" xml:space="preserve">
          <source>Hexadecimal and other bases</source>
          <target state="translated">16進数とその他の塩基</target>
        </trans-unit>
        <trans-unit id="72ecbf9c4f9912ea2a1eabb0058233274e8c8371" translate="yes" xml:space="preserve">
          <source>How it works:</source>
          <target state="translated">どのように機能するのか。</target>
        </trans-unit>
        <trans-unit id="7bb2ebde643cfebe02c85706502a9132b209cd59" translate="yes" xml:space="preserve">
          <source>I also have a non-prototype version which I use more often for its Java-like syntax:</source>
          <target state="translated">非プロトタイプ版も持っていますが、こちらの方がJavaライクな構文でよく使っています。</target>
        </trans-unit>
        <trans-unit id="6ed1f5d69ab185595ccfe7117a6196e9aa8aef84" translate="yes" xml:space="preserve">
          <source>I did not see the &lt;code&gt;String.format&lt;/code&gt; variant:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;String.format&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バリアント&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;見つかり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ませんでした&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ccfb776dd5a00cf9e5f80085232cd4e47e5954c" translate="yes" xml:space="preserve">
          <source>I figured that since this, like the older ones, doesn't actually parse the letters, it might as well just use a single token &lt;code&gt;%%&lt;/code&gt;. This has the benefit of being obvious and not making it difficult to use a single &lt;code&gt;%&lt;/code&gt;. However, if you need &lt;code&gt;%%&lt;/code&gt; for some reason, you would need to replace it with itself:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、古いものと同様に、実際には文字を解析しないため、単一のトークン&lt;/font&gt;&lt;/font&gt; &lt;code&gt;%%&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用するだけでよいと考えました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これには明らかであり、単一の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;%&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用することを難しくしないという利点があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;何らかの理由で&lt;/font&gt;&lt;/font&gt; &lt;code&gt;%%&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が必要な場合は、それ自体で置き換える必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f8570bd745f35d0ac8eab8b9cb10a567945f8a89" translate="yes" xml:space="preserve">
          <source>I got to this question page hoping to find how to &lt;strong&gt;format numbers&lt;/strong&gt; in JavaScript, without introducing yet another library.  Here's what I've found:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さらに別のライブラリを導入せずに、JavaScriptで&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数値&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フォーマット&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する方法を見つけることを期待して、この質問ページに行きました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これが私が見つけたものです：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a1437b131151631a7fb5b921bcb6eeb2b7f0bd20" translate="yes" xml:space="preserve">
          <source>I have a slightly longer formatter for JavaScript &lt;a href=&quot;https://github.com/tracker1/core-js/blob/master/js-extensions/100-String.format.js&quot;&gt;here&lt;/a&gt;...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/tracker1/core-js/blob/master/js-extensions/100-String.format.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;にJavaScriptの少し長いフォーマッターがあります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea704d1acd1ccebd043917271cf56dc7fc75ceda" translate="yes" xml:space="preserve">
          <source>I have a solution very close to Peter's, but it deals with number and object case.</source>
          <target state="translated">ピーターに非常に近い解決策がありますが、それは数とオブジェクトのケースを扱うものです。</target>
        </trans-unit>
        <trans-unit id="e3e0fa99a3e7614e633ee0b456ec625a70421544" translate="yes" xml:space="preserve">
          <source>I realize Microsoft's &lt;a href=&quot;http://en.wikipedia.org/wiki/Ajax_%28programming%29&quot;&gt;Ajax&lt;/a&gt; library provides a version of &lt;code&gt;String.Format()&lt;/code&gt;, but we don't want the entire overhead of that framework.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Microsoftの&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Ajax_%28programming%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ajax&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ライブラリが&lt;/font&gt;&lt;/font&gt; &lt;code&gt;String.Format()&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バージョンを提供していることに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;気づきました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、そのフレームワークのオーバーヘッド全体は必要ありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="04979dd4bb187be6e059c6eb63d73daacef44aa5" translate="yes" xml:space="preserve">
          <source>I use a small library called &lt;a href=&quot;http://www.masterdata.se/r/string_format_for_javascript/&quot;&gt;String.format for JavaScript&lt;/a&gt; which supports most of the format string capabilities (including format of numbers and dates), and uses the .NET syntax. The script itself is smaller than 4 kB, so it doesn't create much of overhead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私は、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.masterdata.se/r/string_format_for_javascript/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptのString.format&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼ばれる小さなライブラリを使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、ほとんどのフォーマット文字列機能（数値と日付のフォーマットを含む）をサポートし、.NET構文を使用します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スクリプト自体は4 kBよりも小さいため、オーバーヘッドはあまり発生しません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ab51e35cff4eaa52eac6f790e879d8000edf0fab" translate="yes" xml:space="preserve">
          <source>I use this one:</source>
          <target state="translated">私はこれを使っています。</target>
        </trans-unit>
        <trans-unit id="d8da71834ece48d31966a5aa8f6480e8724578d7" translate="yes" xml:space="preserve">
          <source>I use this simple function:</source>
          <target state="translated">私はこのシンプルな機能を使っています。</target>
        </trans-unit>
        <trans-unit id="9af29310165b99d8eb8b7bddc0cf163bdf240340" translate="yes" xml:space="preserve">
          <source>I want to share my solution for the 'problem'. I haven't re-invented the wheel but tries to find a solution based on what JavaScript already does. The advantage is, that you get all implicit conversions for free. Setting the prototype property $ of String gives a very nice and compact syntax (see examples below). It is maybe not the most efficient way, but in most cases dealing with output it does not have to be super optimized.</source>
          <target state="translated">私は「問題」のための私の解決策を共有したいと思っています。私はホイールを再発明していませんが、JavaScriptがすでに行っていることに基づいて解決策を見つけようとしています。利点は、あなたが自由のためにすべての暗黙の変換を得ることです。Stringのprototypeプロパティ$を設定すると、非常に美しくコンパクトな構文が得られます(以下の例を参照してください)。これは最も効率的な方法ではないかもしれませんが、ほとんどの場合、出力を扱う際に超最適化する必要はありません。</target>
        </trans-unit>
        <trans-unit id="97676edd9062f343bb5354a30c0499ea32fa11d0" translate="yes" xml:space="preserve">
          <source>I'll add my own discoveries which I've found since I asked:</source>
          <target state="translated">頼んでから見つけた自分なりの発見を追加しておきます。</target>
        </trans-unit>
        <trans-unit id="a1667a8777d608df9ab1f4186b93003e671df0ea" translate="yes" xml:space="preserve">
          <source>I'm looking for a good JavaScript equivalent of the C/PHP &lt;code&gt;printf()&lt;/code&gt; or for C#/Java programmers, &lt;code&gt;String.Format()&lt;/code&gt; (&lt;code&gt;IFormatProvider&lt;/code&gt; for .NET).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C / PHPの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;printf()&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相当するJavaScriptに相当するもの、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;またはC＃/ Javaプログラマー&lt;/font&gt;&lt;/font&gt; &lt;code&gt;String.Format()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Formatの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;IFormatProvider&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）を探し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a960a6a4466b6651dc5f93b95469db2839d9decd" translate="yes" xml:space="preserve">
          <source>I'm surprised no one used &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce&quot;&gt;&lt;code&gt;reduce&lt;/code&gt;&lt;/a&gt;, this is a native concise and powerful JavaScript function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;誰も&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce&quot;&gt; &lt;code&gt;reduce&lt;/code&gt; を&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用していないことに驚いてい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。これはネイティブの簡潔で強力なJavaScript関数です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6fd62565f2ef83ad184009ce57400ab4a8120a06" translate="yes" xml:space="preserve">
          <source>I've also aliased with .asFormat and have some detection in place in case there's already a string.format (such as with MS Ajax Toolkit (I hate that library).</source>
          <target state="translated">また、.asFormatをエイリアス化して、すでにstring.formatがある場合に備えて、いくつかの検出方法を用意しています(MS Ajax Toolkitのように(あのライブラリは嫌いです)。</target>
        </trans-unit>
        <trans-unit id="ee15158b1d0d1465d6f200642d50f25230dad9ae" translate="yes" xml:space="preserve">
          <source>If you are looking to handle the thousands separator, you should really use toLocaleString() from the JavaScript &lt;a href=&quot;http://www.hunlock.com/blogs/The_Complete_Javascript_Number_Reference&quot;&gt;Number&lt;/a&gt; class since it will format the string for the user's region.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3桁ごとの区切り記号を処理する場合は、JavaScriptの&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.hunlock.com/blogs/The_Complete_Javascript_Number_Reference&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Number&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;toLocaleString（）を使用する必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、ユーザーの地域の文字列をフォーマットするためです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="856dc7ab0ea1d451691fc07bb41ae4311513da0a" translate="yes" xml:space="preserve">
          <source>If you prefer not to modify &lt;code&gt;String&lt;/code&gt;'s prototype:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;String&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のプロトタイプ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を変更したくない場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="132a3d20bdf3665b77e187d76ada47dd8ef196ee" translate="yes" xml:space="preserve">
          <source>If you really want to do a simple format method on your own, don&amp;rsquo;t do the replacements successively but do them simultaneously.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自分で簡単なフォーマット方法を本当に実行したい場合は、置換を連続して行わずに、同時に行います。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="59fa5c49edc3247b20cb7cd8c51772c2c44e7a48" translate="yes" xml:space="preserve">
          <source>In contrast with similar solutions in previous replies, this one does all substitutions &lt;em&gt;in one go&lt;/em&gt;, so it will not replace parts of previously replaced values.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以前の返信の同様のソリューションとは対照的に、これは一度にすべての置換&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;行うため、以前に置き換えられた値の一部を置き換えません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65e4a18e67a453e6a3c5f881de4482fe76ddb343" translate="yes" xml:space="preserve">
          <source>It's funny because Stack&amp;nbsp;Overflow actually has their own formatting function for the &lt;code&gt;String&lt;/code&gt; prototype called &lt;code&gt;formatUnicorn&lt;/code&gt;. Try it! Go into the console and type something like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;面白いことに、Stack Overflowには、実際には&lt;/font&gt; &lt;code&gt;formatUnicorn&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;という&lt;/font&gt;&lt;/font&gt; &lt;code&gt;String&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロトタイプ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用の独自のフォーマット関数があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それを試してみてください！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンソールに移動し、次のように入力します。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fabff81231ddc02d0eac610d342d2a108631e47b" translate="yes" xml:space="preserve">
          <source>JavaScript equivalent to printf/String.Format</source>
          <target state="translated">printfString.Format と同等の JavaScript</target>
        </trans-unit>
        <trans-unit id="d433e43a50883133f797229d7ef70e1bbdc18e0e" translate="yes" xml:space="preserve">
          <source>JavaScript programmers can use String.prototype.sprintf at &lt;a href=&quot;https://github.com/ildar-shaimordanov/jsxt/blob/master/js/String.js&quot;&gt;https://github.com/ildar-shaimordanov/jsxt/blob/master/js/String.js&lt;/a&gt;. Below is example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptプログラマーは、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/ildar-shaimordanov/jsxt/blob/master/js/String.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https：&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; //github.com/ildar-shaimordanov/jsxt/blob/master/js/String.jsにあるString.prototype.sprintfを使用でき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下は例です：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="06d6c3152f8a48606a11845dc058fe6f84bc4929" translate="yes" xml:space="preserve">
          <source>Just in case someone needs a function to prevent polluting global scope, here is the function that does the same:</source>
          <target state="translated">誰かがグローバルスコープを汚染しないようにするための関数を必要としている場合に備えて、ここに同じことを行う関数があります。</target>
        </trans-unit>
        <trans-unit id="32185aa686592b13c3cf00dab9305390c1e636d2" translate="yes" xml:space="preserve">
          <source>Maybe it could be even better to deal with the all deeps cases, but for my needs this is just fine.</source>
          <target state="translated">オールディープスのケースに対応してくれればもっといいのかもしれませんが、私のニーズにはこれでちょうどいいです。</target>
        </trans-unit>
        <trans-unit id="002b3107b74eccab17194600a070c0cd9bd240ce" translate="yes" xml:space="preserve">
          <source>My basic requirement is a thousand separator format for numbers for now, but something that handles lots of combinations (including dates) would be good.</source>
          <target state="translated">私の基本的な要件は、今のところ数字の1000区切り形式ですが、(日付を含む)多くの組み合わせを扱えるものが良いでしょう。</target>
        </trans-unit>
        <trans-unit id="9e159894a74f19f30f245576fe16912b13985dd8" translate="yes" xml:space="preserve">
          <source>Neat.</source>
          <target state="translated">Neat.</target>
        </trans-unit>
        <trans-unit id="0a390f7fd077a61a4461e04da8301bd82d3aa34d" translate="yes" xml:space="preserve">
          <source>Normally you would expect the output to be &lt;code&gt;{1}{0}&lt;/code&gt; but the actual output is &lt;code&gt;{1}{1}&lt;/code&gt;. So do a simultaneously replacement instead like in &lt;a href=&quot;https://stackoverflow.com/questions/610406/javascript-printf-string-format/4673436#4673436&quot;&gt;fearphage&amp;rsquo;s suggestion&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常、出力は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;{1}{0}&lt;/code&gt; である&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と予想されます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、実際の出力は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;{1}{1}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのため、代わりに&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/610406/javascript-printf-string-format/4673436#4673436&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;恐怖症の提案の&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ように同時に置換を行います&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec75b59d9d3864b16b12895ccfe54841ccdb3f51" translate="yes" xml:space="preserve">
          <source>Note the clever &lt;code&gt;Array.prototype.slice.call(arguments)&lt;/code&gt; call -- that means if you throw in arguments that are strings or numbers, not a single JSON-style object, you get C#'s &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.string.format(v=vs.110).aspx#Starting&quot;&gt;&lt;code&gt;String.Format&lt;/code&gt;&lt;/a&gt; behavior almost exactly.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;巧妙な&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Array.prototype.slice.call(arguments)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出しに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意してください。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、単一のJSONスタイルのオブジェクトではなく、文字列または数値である引数をスローすると、C＃の&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.string.format(v=vs.110).aspx#Starting&quot;&gt; &lt;code&gt;String.Format&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;動作がほぼ正確に得られます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a520f6ba13920d7df33cc6d1be0e020bc310f38" translate="yes" xml:space="preserve">
          <source>Number Formatting in JavaScript</source>
          <target state="translated">JavaScriptでの数字の書式設定</target>
        </trans-unit>
        <trans-unit id="546195868283cf5f331454d9ac786d3931141561" translate="yes" xml:space="preserve">
          <source>One very slightly different version, the one I prefer (this one uses {xxx} tokens rather than {0} numbered arguments, this is much more self-documenting and suits localization much better):</source>
          <target state="translated">私が好きなのは、少し変わったバージョンです(このバージョンでは、{0}の番号付き引数ではなく{xxx}トークンを使用します。)</target>
        </trans-unit>
        <trans-unit id="5cbc6561d27e47c3ea5b5fa6d9459eb9629b7617" translate="yes" xml:space="preserve">
          <source>Otherwise:</source>
          <target state="translated">Otherwise:</target>
        </trans-unit>
        <trans-unit id="eea95e96f0e7affc5e49e875c6e81f10185c6e00" translate="yes" xml:space="preserve">
          <source>PS: This function is very cool if you are using translations in templates frameworks like &lt;a href=&quot;http://en.wikipedia.org/wiki/AngularJS&quot;&gt;AngularJS&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PS：この機能は、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/AngularJS&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJS&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などのテンプレートフレームワークで翻訳を使用している場合に非常に便利です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="401e5c24d7dc761a16831c726b3545be289ad061" translate="yes" xml:space="preserve">
          <source>Quick tutorial on JS number formatting</source>
          <target state="translated">JS番号の書式設定に関するクイックチュートリアル</target>
        </trans-unit>
        <trans-unit id="06ed56b5b4f8d922f9c81aa03a0ece5b042c8e91" translate="yes" xml:space="preserve">
          <source>Reference Pages</source>
          <target state="translated">参考ページ</target>
        </trans-unit>
        <trans-unit id="952c5c4cd482dd522d230ff94a2978fd781bb409" translate="yes" xml:space="preserve">
          <source>Rounding floating-point numbers</source>
          <target state="translated">浮動小数点数の丸め</target>
        </trans-unit>
        <trans-unit id="ea8d4eed33c1ec0fbade41fcd414951bbc84532c" translate="yes" xml:space="preserve">
          <source>Sadly it seems sprintf doesn't handle thousand separator formatting like .NET's string format.</source>
          <target state="translated">悲しいことに、sprintfは.NETの文字列フォーマットのような1000区切りのフォーマットは扱えないようです。</target>
        </trans-unit>
        <trans-unit id="e1b748b45ce190171f07a2dc82f0c5cdea92e9dc" translate="yes" xml:space="preserve">
          <source>See Kim's &lt;a href=&quot;https://stackoverflow.com/a/32202320/2430448&quot;&gt;answer&lt;/a&gt; below for details.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;については、以下の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Kimの&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/32202320/2430448&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;回答を&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照してください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5a7ad291a20a427de0f8879a5e6e5aa7082e76de" translate="yes" xml:space="preserve">
          <source>That's because &lt;code&gt;Array&lt;/code&gt;'s &lt;code&gt;slice&lt;/code&gt; will force whatever's in &lt;code&gt;arguments&lt;/code&gt; into an &lt;code&gt;Array&lt;/code&gt;, whether it was originally or not, and the &lt;code&gt;key&lt;/code&gt; will be the index (0, 1, 2...) of each array element coerced into a string (eg, &quot;0&quot;, so &lt;code&gt;&quot;\\{0\\}&quot;&lt;/code&gt; for your first regexp pattern).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;slice&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が元々あったかどうかにかかわらず、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてを強制&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;入れ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;key&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は文字列に強制変換された各配列要素のインデックス（0、1、2 ...）になるためです（たとえば、 「0」なので&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、最初の正規表現パターンは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;\\{0\\}&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a8b279e3c1480b0c7e72b6023fd98c28e4d6cd45" translate="yes" xml:space="preserve">
          <source>That's very similar to string.format:</source>
          <target state="translated">これはstring.formatと非常に似ています。</target>
        </trans-unit>
        <trans-unit id="2228aebf4ec941c36ba82fdb5245fd9e3e6c7c8a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://phpjs.org/&quot;&gt;PHPJS project&lt;/a&gt; has written JavaScript implementations for many of PHP's functions. Since PHP's &lt;code&gt;sprintf()&lt;/code&gt; function is basically the same as C's &lt;code&gt;printf()&lt;/code&gt;, &lt;a href=&quot;http://phpjs.org/functions/sprintf&quot;&gt;their JavaScript implementation of it&lt;/a&gt; should satisfy your needs.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://phpjs.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHPJSプロジェクトは&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; PHPの機能の多くのためのJavaScriptの実装を書いています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHPの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sprintf()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数は基本的にCの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;printf()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と同じであるため&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://phpjs.org/functions/sprintf&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのJavaScript実装は&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ニーズを満たして&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いる&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はずです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eab1ebfc4a2762212a655d9cbb50628926688692" translate="yes" xml:space="preserve">
          <source>The JavaScript &lt;a href=&quot;http://www.hunlock.com/blogs/Javascript_Dates-The_Complete_Reference&quot;&gt;Date&lt;/a&gt; class can format localized dates and times.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptの&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.hunlock.com/blogs/Javascript_Dates-The_Complete_Reference&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Date&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスは、ローカライズされた日付と時刻をフォーマットできます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee8a3da6f511297351d4f51f40626947e0da2950" translate="yes" xml:space="preserve">
          <source>The equivalent of &lt;code&gt;sprintf(&quot;%.2e&quot;, num)&lt;/code&gt; is &lt;code&gt;num.toExponential(2)&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;sprintf(&quot;%.2e&quot;, num)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;num.toExponential(2)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;、num）に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相当するの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;num.toExponential（2）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="32fad565e4a20513dc7a58bb7fb500f7dc38fddd" translate="yes" xml:space="preserve">
          <source>The equivalent of &lt;code&gt;sprintf(&quot;%.2f&quot;, num)&lt;/code&gt; in JavaScript seems to be &lt;code&gt;num.toFixed(2)&lt;/code&gt;, which formats &lt;code&gt;num&lt;/code&gt; to 2 decimal places, with rounding (but see @ars265's comment about &lt;code&gt;Math.round&lt;/code&gt; below).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sprintf(&quot;%.2f&quot;, num)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;num.toFixed(2)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;、num）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相当するのは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;num.toFixed（2）のようです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。これは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;num&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を小数点以下2桁に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フォーマット&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;し、丸めます（ただし、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Math.round&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に関する@ ars265のコメントを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b39c1e2a520a1db3ac07d890ba8c849453ba034a" translate="yes" xml:space="preserve">
          <source>Then I call it:</source>
          <target state="translated">それから電話します。</target>
        </trans-unit>
        <trans-unit id="745c4df4aba9ae7cd78eb1cb10d7f49148e99741" translate="yes" xml:space="preserve">
          <source>There is &quot;sprintf&quot; for JavaScript which you can find at &lt;a href=&quot;http://www.webtoolkit.info/javascript-sprintf.html&quot;&gt;http://www.webtoolkit.info/javascript-sprintf.html&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptの「sprintf」が&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.webtoolkit.info/javascript-sprintf.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://www.webtoolkit.info/javascript-sprintf.htmlにあります&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d60eb48a776bca1695c62037ddbb310ff21569dd" translate="yes" xml:space="preserve">
          <source>This option fits better.</source>
          <target state="translated">このオプションの方がフィットします。</target>
        </trans-unit>
        <trans-unit id="17ff162360478c74c06fba740cb887632c27d6b3" translate="yes" xml:space="preserve">
          <source>To print numbers in base B, try &lt;code&gt;num.toString(B)&lt;/code&gt;.  JavaScript supports automatic conversion to and from bases 2 through 36 (in addition, some browsers have &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/window.btoa&quot;&gt;limited support for base64 encoding&lt;/a&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;基数Bの数値を出力するには、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;num.toString(B)&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;試してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptは、base 2からbase 36への自動変換をサポートします（さらに、一部のブラウザーは&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/window.btoa&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;base64エンコードのサポートを制限しています&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d07056965f91bc43e93fdcfdb54a145f2f05d9de" translate="yes" xml:space="preserve">
          <source>Try &lt;a href=&quot;https://github.com/alexei/sprintf.js&quot;&gt;sprintf() for JavaScript&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/alexei/sprintf.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptのsprintf（）を&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;試してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a232f75903c119a7dbadd0a86985ab2c2e7a382c" translate="yes" xml:space="preserve">
          <source>Very elegant:</source>
          <target state="translated">とてもエレガントです。</target>
        </trans-unit>
        <trans-unit id="05fed25bab903c89f8987fd6e53995088034a61b" translate="yes" xml:space="preserve">
          <source>We can use a simple lightweight &lt;a href=&quot;https://github.com/sevensc/typescript-string-operations#stringformat&quot;&gt;String.Format&lt;/a&gt; string operation library for Typescript.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/sevensc/typescript-string-operations#stringformat&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Typescriptに&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、単純な軽量の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;String.Format&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列操作ライブラリを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0ea4e0c5ea6de2b45fe78b8ef2d347f740cfc180" translate="yes" xml:space="preserve">
          <source>Where the en.json is something like</source>
          <target state="translated">en.json は以下のようなものです。</target>
        </trans-unit>
        <trans-unit id="1da20fb8338172fd121b4c39570563fe9f7f137d" translate="yes" xml:space="preserve">
          <source>With this option I can replace strings like these:</source>
          <target state="translated">このオプションを使うと、このような文字列を置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="1413f495dd3f61c85539ecac074760087cef0fd5" translate="yes" xml:space="preserve">
          <source>With your code the second {0} wouldn't be replaced. ;)</source>
          <target state="translated">あなたのコードでは、2 番目の {0}は置き換えられません。)</target>
        </trans-unit>
        <trans-unit id="e4fe018f944c341c7ed041f98fd607acf220f334" translate="yes" xml:space="preserve">
          <source>You can do formatting several ways:</source>
          <target state="translated">フォーマットはいくつかの方法で行うことができます。</target>
        </trans-unit>
        <trans-unit id="3952953af74efaa66d969ce4d62b25e1889cfc90" translate="yes" xml:space="preserve">
          <source>You can use objects, arrays, and strings as arguments! I got its code and reworked it to produce a new version of &lt;code&gt;String.prototype.format&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト、配列、文​​字列を引数として使用できます！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私はそのコードを取得して、新しいバージョンの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;String.prototype.format&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を生成するように&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;修正しました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="295cea5f788570b3e716c65e415608ab439ddf39" translate="yes" xml:space="preserve">
          <source>You get this output:</source>
          <target state="translated">このような出力が得られます。</target>
        </trans-unit>
        <trans-unit id="c3dbd37ba49c0692abb85d0e9aec8e9d0f9d7805" translate="yes" xml:space="preserve">
          <source>jsxt, Zippo</source>
          <target state="translated">jsxt,Zippo</target>
        </trans-unit>
        <trans-unit id="cdeefdbb93fd01cec4f8836367b0c4ca019fc82a" translate="yes" xml:space="preserve">
          <source>number_format (for thousand separator/currency formatting)</source>
          <target state="translated">number_format (千区切り通貨フォーマット用)</target>
        </trans-unit>
        <trans-unit id="e71003c6b7dd4093ce139ac0c51a6ba38d54a439" translate="yes" xml:space="preserve">
          <source>outputs</source>
          <target state="translated">outputs</target>
        </trans-unit>
        <trans-unit id="5f7800289a83fd8fec38fb0d953c7131a151e19d" translate="yes" xml:space="preserve">
          <source>sprintf (same author as above)</source>
          <target state="translated">スプリントフ</target>
        </trans-unit>
        <trans-unit id="bad85e0749786bfab214f1fe3b19ce96b39e2bfa" translate="yes" xml:space="preserve">
          <source>that calls an l() localization function first.</source>
          <target state="translated">は、最初に l()ローカライズ関数を呼び出すことになります。</target>
        </trans-unit>
        <trans-unit id="202eb8f8428a0a8effa9058e4dd4dc2ec444032f" translate="yes" xml:space="preserve">
          <source>with the same result:</source>
          <target state="translated">と同じ結果になります。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
