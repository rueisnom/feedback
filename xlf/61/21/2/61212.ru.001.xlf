<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/61212">
    <body>
      <group id="61212">
        <trans-unit id="f8e13f91d90758aea3dc53595243f02f1e0d355a" translate="yes" xml:space="preserve">
          <source>-d for directory</source>
          <target state="translated">-d для каталога</target>
        </trans-unit>
        <trans-unit id="91e471083fc48a4b0d2b23121d9083958a9aface" translate="yes" xml:space="preserve">
          <source>-f for force</source>
          <target state="translated">-для силы</target>
        </trans-unit>
        <trans-unit id="e20b2ee78233cdc808b587b1e17d58f6c7f44313" translate="yes" xml:space="preserve">
          <source>-i for interactive</source>
          <target state="translated">-i для интерактивного взаимодействия</target>
        </trans-unit>
        <trans-unit id="67f5ef2b5a314a01ace0162d64fa4a7c7dfda3e8" translate="yes" xml:space="preserve">
          <source>-x for ignored files(add if required)</source>
          <target state="translated">-x для игнорируемых файлов (добавлять при необходимости)</target>
        </trans-unit>
        <trans-unit id="491faa0f780a676af996359040f36480886cb2d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.kernel.org/pub/software/scm/git/docs/git-clean.html&quot;&gt;git-clean&lt;/a&gt; is what you are looking for. It is used to remove untracked files from the working tree.</source>
          <target state="translated">&lt;a href=&quot;http://www.kernel.org/pub/software/scm/git/docs/git-clean.html&quot;&gt;git-clean&lt;/a&gt; - это то, что вы ищете. Используется для удаления неотслеживаемых файлов из рабочего дерева.</target>
        </trans-unit>
        <trans-unit id="30566993e0eb6d405a8eee5786ecdb9ff8b223d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://git-scm.com/docs/git-clean&quot;&gt;git-clean&lt;/a&gt; - Remove untracked files from the working tree</source>
          <target state="translated">&lt;a href=&quot;https://git-scm.com/docs/git-clean&quot;&gt;git-clean&lt;/a&gt; - удаляет неотслеживаемые файлы из рабочего дерева</target>
        </trans-unit>
        <trans-unit id="9a26307d594f269f5903229015c81534ae2d88de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gclean&lt;/code&gt;&lt;em&gt;removes untracked directories in addition to untracked files&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;gclean&lt;/code&gt; &lt;em&gt;удаляет неотслеживаемые каталоги в дополнение к неотслеживаемым файлам&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="2ed503241d84ef2925d73991bb5fc3ccdc6f37b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git clean -f -d -x $(git rev-parse --show-cdup)&lt;/code&gt; applies clean to the root directory, no matter where you call it within a repository directory tree. I use it all the time as it does not force you to leave the folder where you working now and allows to clean &amp;amp; commit right from the place where you are.</source>
          <target state="translated">&lt;code&gt;git clean -f -d -x $(git rev-parse --show-cdup)&lt;/code&gt; применяет clean к корневому каталогу, независимо от того, где вы вызываете его в дереве каталогов репозитория. Я использую его все время, так как он не заставляет вас покидать папку, в которой вы сейчас работаете, и позволяет чистить и фиксировать прямо из того места, где вы находитесь.</target>
        </trans-unit>
        <trans-unit id="e4a62dd451d54ec2c9d98fbf018f72d98cdb79a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git clean -fX&lt;/code&gt; removes ignored files</source>
          <target state="translated">&lt;code&gt;git clean -fX&lt;/code&gt; удаляет игнорируемые файлы</target>
        </trans-unit>
        <trans-unit id="0b171c41e7aa2d6a7ebe1fa6cc067cdf9aeb00cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git clean -fd&lt;/code&gt; removes directory</source>
          <target state="translated">&lt;code&gt;git clean -fd&lt;/code&gt; удаляет каталог</target>
        </trans-unit>
        <trans-unit id="d07b0c60b56c2f89ffc4b5b99092632f9b724d21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git clean -fx&lt;/code&gt; removes ignored and un-ignored files</source>
          <target state="translated">&lt;code&gt;git clean -fx&lt;/code&gt; удаляет проигнорированные и не проигнорированные файлы</target>
        </trans-unit>
        <trans-unit id="1225174a2a2abffedc7c2cf37b9eef78da42df98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git-clean&lt;/code&gt; - Remove untracked files from the working tree</source>
          <target state="translated">&lt;code&gt;git-clean&lt;/code&gt; - удаляет неотслеживаемые файлы из рабочего дерева</target>
        </trans-unit>
        <trans-unit id="c9e0779f2d6e8f621be06fc249f303016c3aad86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gpristine&lt;/code&gt; hard reset the local changes, remove untracked directories, 
untracked files and &lt;em&gt;don't use the standard ignore rules read from .gitignore (per directory) and $GIT_DIR/info/exclude, but do still use the ignore rules given with -e options. This allows removing all untracked files, including build products. This can be used (possibly in conjunction with git reset) to create a pristine working directory to test a clean build&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;gpristine&lt;/code&gt; жестко сбрасывает локальные изменения, удаляет неотслеживаемые каталоги, неотслеживаемые файлы и &lt;em&gt;не использует стандартные правила игнорирования, считываемые из .gitignore (для каждого каталога) и $ GIT_DIR / info / exclude, но все же использует правила игнорирования, заданные с опциями -e ,&lt;/em&gt; &lt;em&gt;Это позволяет удалить все неотслеживаемые файлы, включая продукты сборки.&lt;/em&gt; &lt;em&gt;Это может быть использовано (возможно, в сочетании с git reset) для создания первичного рабочего каталога для тестирования чистой сборки&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="74b236a6e234cf1350d9af3faaaa3ca84402e491" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1.&lt;/strong&gt;&lt;strong&gt;-d&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;1.&lt;/strong&gt;&lt;strong&gt;-d&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d08233db6862a17feb1997b9910ce3195dbf1c6e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2. -f, --force&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;2. -f, --force&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="25045d3df5aff0b55caf157174f766d9501f41b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;3. -i, --interactive&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;3. -i, - интерактивный&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="01e0f34f86b8234cee28e7e0653ea2b7646e0391" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;4. -n, --dry-run&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;4. -n, --dry-run&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ac304d1feab25bdb7e40682d3352a651b99034d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;5. -q, --quiet&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;5. -q, --quiet&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="329af57da90bd2e1b4f721924916fe60037d4613" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;6. -e , --exclude=&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;6. -e, --exclude =&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="20eb9e362510213cd5d84384a0e5891329d20a8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;7. -x&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;7.-х&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b82dcd5a8b651bd96a4f834e67f12a6180020e5d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;8. -X&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;8. -X&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fa49ea65aa07d04393c0da72249ee14cbdec5c29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3df10d701d2ca9f180ba469d962e4eed4d54ed3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;-d&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;-d&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4ef0aa9fde2cc3c92a29539c0fbeff28d1561d02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;-f&lt;/code&gt;, &lt;code&gt;--force&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;-f&lt;/code&gt; , &lt;code&gt;--force&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d2cf5b873fdfc0dae624388fe53183fefd4483a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;-n&lt;/code&gt;, &lt;code&gt;--dry-run&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;-n&lt;/code&gt; , &lt;code&gt;--dry-run&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb9ad3ef040b5b1baf95a7bffd14fa100cc53d1c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;-x&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;-x&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0b6f86cf0b1375c361afebbfeca7e41055d7a5b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;User interactive approach:&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Пользовательский интерактивный подход:&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ae6c80c214fc813ff9eb9ae37bd66d56384b0c33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Always use&lt;/strong&gt;&lt;code&gt;-n&lt;/code&gt; before running the actual command as it will show you what files would get removed.</source>
          <target state="translated">&lt;strong&gt;Всегда используйте&lt;/strong&gt; &lt;code&gt;-n&lt;/code&gt; перед запуском фактической команды, так как она покажет вам, какие файлы будут удалены.</target>
        </trans-unit>
        <trans-unit id="ffdab263c07c85624929243ad015561f1deecb22" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available Options:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Доступные Варианты:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3826df3b723ae26f22c2c13190a5adc9450c8637" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Beware!&lt;/strong&gt; Be sure to &lt;strong&gt;commit any needed changes&lt;/strong&gt; (even in non-untracked files) &lt;strong&gt;before performing this&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;Осторожно!&lt;/strong&gt; Обязательно передайте &lt;strong&gt;все необходимые изменения&lt;/strong&gt; (даже в неотслеживаемых файлах) &lt;strong&gt;перед выполнением этого&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="e591909e65e44db7e3f343b4d73bb6e0f9195fb3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Clean out git repository and all submodules recursively&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Очистить git-репозиторий и все подмодули рекурсивно&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7252d71fbd00904dd2ab1c736ae4f1cda781dc24" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Double check&lt;/strong&gt; before doing it as it will delete the files and folders without making any history...</source>
          <target state="translated">&lt;strong&gt;Дважды проверьте,&lt;/strong&gt; прежде чем делать это, поскольку он будет удалять файлы и папки, не делая истории ...</target>
        </trans-unit>
        <trans-unit id="4168878b06eaa6917a0f012585506612f5054ea6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a9108ede24ec6135336892fdeecab45ae62e7a84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Explanation:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Explanation:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0627813abb3f85abd51bf4dc9ea4382836dfa698" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Links :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ссылки:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="998bea9f8169ec97ae2a691bc7d5dcb4df13f247" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New interactive mode&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Новый интерактивный режим&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c1600edccdcfa368dad597d738d0fb2a3ae5cd3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;em&gt;Add &lt;strong&gt;-n&lt;/strong&gt; or &lt;strong&gt;--dry-run&lt;/strong&gt; to just check what it will do.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;Примечание:&lt;/strong&gt; &lt;em&gt;добавьте &lt;strong&gt;-n&lt;/strong&gt; или &lt;strong&gt;--dry-run,&lt;/strong&gt; чтобы просто проверить, что он будет делать.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7f2a5d05005cbe394442613972c8d4ea6cbed026" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; the case difference on the &lt;code&gt;X&lt;/code&gt; for the two latter commands.</source>
          <target state="translated">&lt;strong&gt;Обратите внимание&lt;/strong&gt; на различие в регистре &lt;code&gt;X&lt;/code&gt; для двух последних команд.</target>
        </trans-unit>
        <trans-unit id="a8fe3cec22bbf9ce81918964dd2820c142ed2542" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OK,&lt;/strong&gt; deleting &lt;strong&gt;unwanted untracked files and folders&lt;/strong&gt; are easy using &lt;code&gt;git&lt;/code&gt; in command line, just do it like this:</source>
          <target state="translated">&lt;strong&gt;ОК,&lt;/strong&gt; удалить &lt;strong&gt;ненужные неотслеживаемые файлы и папки&lt;/strong&gt; легко с помощью &lt;code&gt;git&lt;/code&gt; в командной строке, просто сделайте это так:</target>
        </trans-unit>
        <trans-unit id="b9f929ef9cedbfdfa6e6f5ba4a6a1b6863150dbb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remove all extra folders and files in this repo + submodules&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Удалите все лишние папки и файлы в этом репо + подмодули&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b97ccc1a2ee72810c2ea9f55e5270273eba7ac77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remove all extra folders and files in this repo but not its submodules&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Удалите все дополнительные папки и файлы в этом репо, но не его подмодули&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="25192fc7ddcd21dff67407f12e55fc4444994d99" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remove extra folders + ignored files (but not newly added files)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Удалить лишние папки + пропущенные файлы (но не новые добавленные файлы)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2aacf88f4357e83cdc41b2949a990fae43818919" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remove extra folders but not files (ex. build or logs folder)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Удалите лишние папки, но не файлы (например, папку build или logs)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b4e4b014b1c68d632e7f6e2f89c37ae40f37524c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Removing sample.txt&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Удаление файла sample.txt&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7300568fab47ae0a1ce9f8602c59436ee6b510f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Suggested Method:&lt;/strong&gt;  Interative Mode by using &lt;code&gt;git clean -i&lt;/code&gt;
so we can have control over it. let see remaining available options.</source>
          <target state="translated">&lt;strong&gt;Предлагаемый метод:&lt;/strong&gt; Интерактивный режим с использованием &lt;code&gt;git clean -i&lt;/code&gt; , чтобы мы могли контролировать его. давайте посмотрим оставшиеся доступные варианты.</target>
        </trans-unit>
        <trans-unit id="c35a7cc72a06f0634abe8ddb79bc1ba1960a6c95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Would remove sample.txt&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Удалил sample.txt&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b1d52e1461980eeea7dd2c388cf355f31b827ffd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;git clean&lt;/strong&gt; - Remove untracked files from the working tree</source>
          <target state="translated">&lt;strong&gt;git clean&lt;/strong&gt; - удаляет неотслеживаемые файлы из рабочего дерева</target>
        </trans-unit>
        <trans-unit id="db15877443fa2f2d1522de9e2bf4b971d5e18fea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;oh-my-zsh&lt;/strong&gt; with &lt;strong&gt;zsh&lt;/strong&gt; provides those great aliases via the git plugin. They can be used in bash as well.</source>
          <target state="translated">&lt;strong&gt;oh-my-zsh&lt;/strong&gt; с &lt;strong&gt;zsh&lt;/strong&gt; предоставляет эти отличные псевдонимы через плагин git. Их также можно использовать в bash.</target>
        </trans-unit>
        <trans-unit id="3e10fa3725daa71e318c92f1e382ced7e1fc56e2" translate="yes" xml:space="preserve">
          <source>A better way is to use: git clean</source>
          <target state="translated">Лучше использовать:git чистый</target>
        </trans-unit>
        <trans-unit id="fe9de18a72ef4a0beb354c0f64075f36a28df745" translate="yes" xml:space="preserve">
          <source>A lifehack for such situation I just invented and tried (that works perfectly):</source>
          <target state="translated">Спасательный круг для такой ситуации я только что изобрел и попробовал (это отлично работает):</target>
        </trans-unit>
        <trans-unit id="3edef6f7b59c26fc947e12403346e8ec6f2bab72" translate="yes" xml:space="preserve">
          <source>Again see the &lt;a href=&quot;http://git-scm.com/docs/git-clean&quot;&gt;&lt;code&gt;git-clean&lt;/code&gt;&lt;/a&gt; docs for more information.</source>
          <target state="translated">Снова посмотрите &lt;a href=&quot;http://git-scm.com/docs/git-clean&quot;&gt; &lt;code&gt;git-clean&lt;/code&gt; &lt;/a&gt; docs для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="d8df13cdd881f013755e1d4316dd6938d7a85f91" translate="yes" xml:space="preserve">
          <source>Also in this case, &lt;code&gt;-f&lt;/code&gt; stands for force and &lt;code&gt;-d&lt;/code&gt; stands for directory...</source>
          <target state="translated">Также в этом случае &lt;code&gt;-f&lt;/code&gt; обозначает силу, а &lt;code&gt;-d&lt;/code&gt; обозначает каталог ...</target>
        </trans-unit>
        <trans-unit id="b489241b3fab808421aeb93865ff8207792006bf" translate="yes" xml:space="preserve">
          <source>Also, replace the &lt;code&gt;-f&lt;/code&gt; argument with &lt;code&gt;-n&lt;/code&gt; to perform a &lt;code&gt;dry-run&lt;/code&gt; or &lt;code&gt;-i&lt;/code&gt; for interactive mode and it will tell you what will be removed.</source>
          <target state="translated">Также замените аргумент &lt;code&gt;-f&lt;/code&gt; на &lt;code&gt;-n&lt;/code&gt; , чтобы выполнить &lt;code&gt;dry-run&lt;/code&gt; или &lt;code&gt;-i&lt;/code&gt; для интерактивного режима, и он сообщит вам, что будет удалено.</target>
        </trans-unit>
        <trans-unit id="9304e6bf4c3543883a2042f8480cbf7d0f0111fa" translate="yes" xml:space="preserve">
          <source>Also, you can use &lt;code&gt;-x&lt;/code&gt; flag for including the files which are ignored by git. This would be helpful if you want to delete everything.</source>
          <target state="translated">Также вы можете использовать флаг &lt;code&gt;-x&lt;/code&gt; для включения файлов, которые игнорируются git. Это было бы полезно, если вы хотите удалить все.</target>
        </trans-unit>
        <trans-unit id="c3a4e8c26a7e201ca1796172afe0d242bb8303d1" translate="yes" xml:space="preserve">
          <source>Alternatively</source>
          <target state="translated">Alternatively</target>
        </trans-unit>
        <trans-unit id="84728b60d32c439988dd77259a566417ebcec7d0" translate="yes" xml:space="preserve">
          <source>And adding &lt;code&gt;-i&lt;/code&gt; flag, makes git asking you for permission for deleting files one by one on the go.</source>
          <target state="translated">А добавление флага &lt;code&gt;-i&lt;/code&gt; заставляет git запрашивать разрешение на удаление файлов один за другим на ходу.</target>
        </trans-unit>
        <trans-unit id="fc6f22f358415029a4bab3e4b038d5c2074427e8" translate="yes" xml:space="preserve">
          <source>And combined way to delete untracked dir/files and ignored files.</source>
          <target state="translated">И комбинированный способ удаления неотслеживаемых файлов и игнорируемых файлов.</target>
        </trans-unit>
        <trans-unit id="3e0eb79f908ec8f740f9fa7331c5220f78e3ad18" translate="yes" xml:space="preserve">
          <source>Be careful while running `git clean` command.</source>
          <target state="translated">Будьте осторожны,выполняя команду ''Git clean''.</target>
        </trans-unit>
        <trans-unit id="5a76ff079f12b1a74eb9b1c43645e96dd86361c1" translate="yes" xml:space="preserve">
          <source>Be quiet, only report errors, but not the files that are successfully removed.</source>
          <target state="translated">Будьте спокойны,сообщайте только об ошибках,но не о файлах,которые успешно удалены.</target>
        </trans-unit>
        <trans-unit id="a970e4d24368ec80a52531632e941bee5b58a319" translate="yes" xml:space="preserve">
          <source>Be sure that flags &lt;code&gt;-f&lt;/code&gt;, &lt;code&gt;-d&lt;/code&gt;, &lt;code&gt;-x&lt;/code&gt; match your needs:</source>
          <target state="translated">Убедитесь, что флаги &lt;code&gt;-f&lt;/code&gt; , &lt;code&gt;-d&lt;/code&gt; , &lt;code&gt;-x&lt;/code&gt; соответствуют вашим потребностям:</target>
        </trans-unit>
        <trans-unit id="ba4d0b6277b4d8651f0563244eb65556e9a44fd9" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;git clean&lt;/code&gt; will only remove untracked files that are not ignored. Any file that matches a pattern in your .gitignore or other ignore files will not be removed. If you want to remove those files too, you can add a &lt;code&gt;-x&lt;/code&gt; to the clean command.</source>
          <target state="translated">По умолчанию &lt;code&gt;git clean&lt;/code&gt; удаляет только неотслеживаемые файлы, которые не игнорируются. Любой файл, который соответствует шаблону в вашем .gitignore или других игнорируемых файлах, не будет удален. Если вы тоже хотите удалить эти файлы, вы можете добавить &lt;code&gt;-x&lt;/code&gt; к команде clean.</target>
        </trans-unit>
        <trans-unit id="f1c87dfaee105599595109043d7898b5206e989e" translate="yes" xml:space="preserve">
          <source>Clean Step - &lt;strong&gt;beware: this will delete files&lt;/strong&gt;:</source>
          <target state="translated">Clean Step - &lt;strong&gt;будьте осторожны: это удалит файлы&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="38d8bc1c18fe237ff5923fdf20c7ff8a302dc45d" translate="yes" xml:space="preserve">
          <source>Cleans the working tree by recursively removing files that are not under version control, &lt;strong&gt;starting from the current directory&lt;/strong&gt;.</source>
          <target state="translated">Очищает рабочее дерево путем рекурсивного удаления файлов, которые не находятся под контролем версий, &lt;strong&gt;начиная с текущего каталога&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="8a190a462c45d47d231a38f49fbd7f2f651bc199" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t actually remove anything, just show what would be done.</source>
          <target state="translated">На самом деле ничего не удаляйте, просто покажите, что будет сделано.</target>
        </trans-unit>
        <trans-unit id="592ac5698739501beb280e8c09e191b45525f651" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use the standard ignore rules read from .gitignore (per
  directory) and &lt;code&gt;$GIT_DIR/info/exclude&lt;/code&gt;, but do still use the ignore
  rules given with &lt;code&gt;-e&lt;/code&gt; options. This allows removing all untracked files,
  including build products. This can be used (possibly in conjunction
  with git reset) to create a pristine working directory to test a clean
  build.</source>
          <target state="translated">Не используйте стандартные правила игнорирования, считанные из .gitignore (для каждого каталога) и &lt;code&gt;$GIT_DIR/info/exclude&lt;/code&gt; , но все же используйте правила игнорирования, заданные с опциями &lt;code&gt;-e&lt;/code&gt; . Это позволяет удалить все неотслеживаемые файлы, включая продукты сборки. Это может быть использовано (возможно, в сочетании с git reset) для создания первичного рабочего каталога для тестирования чистой сборки.</target>
        </trans-unit>
        <trans-unit id="090a3d0a6d55a2120c1e94017bed539936206cb1" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use the standard ignore rules read from .gitignore (per directory) and $GIT_DIR/info/exclude, but do still use the ignore
   rules given with -e options. This allows removing all untracked files, including build products. This can be used (possibly in
   conjunction with git reset) to create a pristine working directory to test a clean build.</source>
          <target state="translated">Не используйте стандартные правила игнорирования, считанные из .gitignore (для каждого каталога) и $ GIT_DIR / info / exclude, но все же используйте правила игнорирования, заданные с опциями -e. Это позволяет удалить все неотслеживаемые файлы, включая продукты сборки. Это может быть использовано (возможно, в сочетании с git reset) для создания первичного рабочего каталога для тестирования чистой сборки.</target>
        </trans-unit>
        <trans-unit id="6ced447a0ccef8b9d5bd51b43aa690b514c9d9e1" translate="yes" xml:space="preserve">
          <source>EDIT2: &lt;code&gt;git stash save&lt;/code&gt; is deprecated in favor of &lt;code&gt;push&lt;/code&gt;. Thanks @script-wolf.</source>
          <target state="translated">EDIT2: &lt;code&gt;git stash save&lt;/code&gt; устарело в пользу &lt;code&gt;push&lt;/code&gt; . Спасибо @ script-волк.</target>
        </trans-unit>
        <trans-unit id="25b497511a97b55b25a07bccb030302f7aa18643" translate="yes" xml:space="preserve">
          <source>EDIT: Also I found a way to show untracked file in a stash (e.g. &lt;code&gt;git show stash@{0}^3&lt;/code&gt;) &lt;a href=&quot;https://stackoverflow.com/a/12681856/338986&quot;&gt;https://stackoverflow.com/a/12681856/338986&lt;/a&gt;</source>
          <target state="translated">РЕДАКТИРОВАТЬ: Также я нашел способ показать неотслеживаемый файл в тайнике (например, &lt;code&gt;git show stash@{0}^3&lt;/code&gt; ) &lt;a href=&quot;https://stackoverflow.com/a/12681856/338986&quot;&gt;https://stackoverflow.com/a/12681856/338986&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fc8b383c9472f4133ca234be53a8c0ec2f32066a" translate="yes" xml:space="preserve">
          <source>For a very large project you might want to run it a couple of times.</source>
          <target state="translated">Для очень большого проекта вы,возможно,захотите запустить его пару раз.</target>
        </trans-unit>
        <trans-unit id="a9a6f512934b9e9061ab3a56083a7816ab6b68c5" translate="yes" xml:space="preserve">
          <source>For me only following worked:</source>
          <target state="translated">Для меня только после работы:</target>
        </trans-unit>
        <trans-unit id="6a5d1f6865cd5150a661d32e536a80a76baf3012" translate="yes" xml:space="preserve">
          <source>How do I use 'git reset --hard HEAD' to revert to a previous commit?</source>
          <target state="translated">Как использовать 'git reset --hard HEAD' для возврата к предыдущему коммиту?</target>
        </trans-unit>
        <trans-unit id="081b31ee66011caf6a19bddd2a19ff044c4eeac3" translate="yes" xml:space="preserve">
          <source>How do you delete untracked local files from your current working tree?</source>
          <target state="translated">Как удалить неотслеживаемые локальные файлы из текущего рабочего дерева?</target>
        </trans-unit>
        <trans-unit id="8335f5e425ae34982cd1fe9959f4f9b10e207b2e" translate="yes" xml:space="preserve">
          <source>How to remove local (untracked) files from the current Git working tree</source>
          <target state="translated">Как удалить локальные (неотслеживаемые)файлы из текущего дерева работы Git'а?</target>
        </trans-unit>
        <trans-unit id="d11fdad8fc441f590c72760be67d7f049c40ac4b" translate="yes" xml:space="preserve">
          <source>I also create the image below to make it more memorable, especially I have seen many people confuse &lt;code&gt;-f&lt;/code&gt; for cleaning folder sometimes or mix it up somehow!</source>
          <target state="translated">Я также создаю изображение ниже, чтобы сделать его более запоминающимся, особенно я видел, как многие люди путают &lt;code&gt;-f&lt;/code&gt; иногда чистят папку или как-то путают!</target>
        </trans-unit>
        <trans-unit id="c22560de75194a8d1f689d35361957562fd17125" translate="yes" xml:space="preserve">
          <source>I am surprised nobody mentioned this before:</source>
          <target state="translated">Удивительно,что никто не упомянул об этом раньше:</target>
        </trans-unit>
        <trans-unit id="38b91cd88481477b0992675088e1151805744fdd" translate="yes" xml:space="preserve">
          <source>I have covered some basics here in my blog, &lt;a href=&quot;https://vaisakh.github.io/2017/02/14/git-intro-basic-commands.html&quot;&gt;git-intro-basic-commands&lt;/a&gt;</source>
          <target state="translated">Здесь я рассмотрел некоторые основы в своем блоге, &lt;a href=&quot;https://vaisakh.github.io/2017/02/14/git-intro-basic-commands.html&quot;&gt;git-intro-basic-команды&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21fb57c2c17b8b7e6aed463b2f0ac4789e27c1f1" translate="yes" xml:space="preserve">
          <source>I like &lt;code&gt;git stash push -u&lt;/code&gt; because you can undo them all with &lt;code&gt;git stash pop&lt;/code&gt;.</source>
          <target state="translated">Мне нравится &lt;code&gt;git stash push -u&lt;/code&gt; , потому что вы можете отменить их все с помощью &lt;code&gt;git stash pop&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a83ea73dd37fe9a9ac8b06b223d673e88238f23" translate="yes" xml:space="preserve">
          <source>I like to use &lt;code&gt;git stash&lt;/code&gt; command, later you can get stashed files and changes.
&lt;code&gt;git clean&lt;/code&gt; is also a good option but totally depends on your requirement.
here is the explanation of git stash and git clean,&lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Tools-Stashing-and-Cleaning&quot;&gt;7.3 Git Tools - Stashing and Cleaning&lt;/a&gt;</source>
          <target state="translated">Мне нравится использовать команду &lt;code&gt;git stash&lt;/code&gt; , позже вы можете получить спрятанные файлы и изменения. &lt;code&gt;git clean&lt;/code&gt; также хороший вариант, но полностью зависит от ваших требований. Вот объяснение git stash и git clean, &lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Tools-Stashing-and-Cleaning&quot;&gt;7.3 Git Tools - Копирование и очистка&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a61c80c3295e8ffd1bddabc9f569d809724a1c1f" translate="yes" xml:space="preserve">
          <source>I prefer this to 'git clean' because 'git clean' will delete files
ignored by git, so your next build will have to rebuild everything
and you may lose your IDE settings too.</source>
          <target state="translated">Я предпочитаю это,а не 'git clean',потому что 'git clean' удалит файлы,проигнорированные git'ом,так что вашей следующей сборке придётся пересобирать всё,и вы тоже можете потерять настройки IDE.</target>
        </trans-unit>
        <trans-unit id="8bba395e9fb25ea42d05011ddb8f30a6c4997f12" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;clean.requireForce&lt;/code&gt; is set to &quot;true&quot; (the default) in your configuration, one needs to specify &lt;code&gt;-f&lt;/code&gt; otherwise nothing will actually happen.</source>
          <target state="translated">Если в вашей конфигурации &lt;code&gt;clean.requireForce&lt;/code&gt; имеет значение &amp;laquo;true&amp;raquo; (по умолчанию), необходимо указать &lt;code&gt;-f&lt;/code&gt; , иначе ничего не произойдет.</target>
        </trans-unit>
        <trans-unit id="27aabdb37af0432fadcd5ffecc44449505cac9be" translate="yes" xml:space="preserve">
          <source>If any optional &lt;code&gt;&amp;lt;path&amp;gt;...&lt;/code&gt; arguments are given, only those paths are affected.</source>
          <target state="translated">Если заданы необязательные аргументы &lt;code&gt;&amp;lt;path&amp;gt;...&lt;/code&gt; , затрагиваются только эти пути.</target>
        </trans-unit>
        <trans-unit id="ca0bf1f76700c07ea80b2ae0d66a11fe045d27fe" translate="yes" xml:space="preserve">
          <source>If file wasn't ignored and not yet checked-in then  it stays. Note the capital X.</source>
          <target state="translated">Если файл не был проигнорирован и еще не зарегистрирован,то он остается.Обратите внимание на заглавную букву X.</target>
        </trans-unit>
        <trans-unit id="e260ac28fbd02674a586da9a188ce001cb9eecdf" translate="yes" xml:space="preserve">
          <source>If needed to remove untracked files from particular subdirectory,</source>
          <target state="translated">При необходимости удалить неотслеживаемые файлы из определенного подкаталога,</target>
        </trans-unit>
        <trans-unit id="754fbfa8cea73d7b9d6656e7d40cd36b33d3ae34" translate="yes" xml:space="preserve">
          <source>If the Git configuration variable clean.requireForce is not set to
  false, git clean will refuse to run unless given &lt;code&gt;-f&lt;/code&gt;, &lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;-i&lt;/code&gt;.</source>
          <target state="translated">Если для переменной конфигурации Git clean.requireForce не задано значение false, git clean откажется запускаться, если не указано &lt;code&gt;-f&lt;/code&gt; , &lt;code&gt;-n&lt;/code&gt; или &lt;code&gt;-i&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="242707623aae5f8bb3ccecd10afa24b00b26d4fd" translate="yes" xml:space="preserve">
          <source>If the Git configuration variable clean.requireForce is not set to false, git clean will refuse to run unless given -f, -n or
   -i.</source>
          <target state="translated">Если переменная конфигурации Git'а clean.requireForce не установлена в false,то git clean откажется запускаться,если не заданы -f,-n или -i.</target>
        </trans-unit>
        <trans-unit id="2ee3cd6157b586c292f5bebaf4742a1125d45d74" translate="yes" xml:space="preserve">
          <source>If untracked directory is a git repository of its own (e.g. submodule), you need to use &lt;code&gt;-f&lt;/code&gt; twice:</source>
          <target state="translated">Если неотслеживаемый каталог является собственным репозиторием git (например, подмодулем), вам нужно дважды использовать &lt;code&gt;-f&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ddaa8eb84490ef1ecfb6e1a55d18ca3b6c59edcc" translate="yes" xml:space="preserve">
          <source>If you are not 100% sure that deleting your uncommitted work is safe, you could use stashing instead</source>
          <target state="translated">Если вы не уверены на 100% в том,что удаление вашей незанятой работы безопасно,вы можете использовать тайник вместо этого</target>
        </trans-unit>
        <trans-unit id="36dcbfc96818563f54fac10886429ec6381667cb" translate="yes" xml:space="preserve">
          <source>If you just want to delete the files listed as untracked by 'git status'</source>
          <target state="translated">Если вы просто хотите удалить файлы,перечисленные как неотслеживаемые в 'git-статусе'.</target>
        </trans-unit>
        <trans-unit id="8b008f30f86ee94d5a13d3cecd09ba7139209355" translate="yes" xml:space="preserve">
          <source>If you not sure and want to check things first, add &lt;code&gt;-n&lt;/code&gt; flag.</source>
          <target state="translated">Если вы не уверены и хотите сначала проверить, добавьте флаг &lt;code&gt;-n&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f6e5f19b1a5afda5c1449fc36242e65cb820536" translate="yes" xml:space="preserve">
          <source>If you want to &lt;strong&gt;delete&lt;/strong&gt;(directories) and files, you can delete only untracked directories and files like this:</source>
          <target state="translated">Если вы хотите &lt;strong&gt;удалить&lt;/strong&gt; (каталоги) и файлы, вы можете удалить только неотслеживаемые каталоги и файлы, например:</target>
        </trans-unit>
        <trans-unit id="4f36449b364ff484c4a02190964b7fe4122e73b4" translate="yes" xml:space="preserve">
          <source>In addition to those found in .gitignore (per directory) and $GIT_DIR/info/exclude, also consider these patterns to be in the
   set of the ignore rules in effect.</source>
          <target state="translated">В дополнение к тем,что найдены в .gitignore (для каждого каталога)и $GIT_DIRinfoexclude,также считаем эти паттерны в наборе действующих правил игнорирования.</target>
        </trans-unit>
        <trans-unit id="b893078d9232f3e109a41b6d6ebe51b2d07315e2" translate="yes" xml:space="preserve">
          <source>In all other cases, I was getting message &lt;em&gt;&quot;Skipping Directory&quot;&lt;/em&gt; for some subdirectories.</source>
          <target state="translated">Во всех остальных случаях я получал сообщение &lt;em&gt;&amp;laquo;Пропуск каталога&amp;raquo;&lt;/em&gt; для некоторых подкаталогов.</target>
        </trans-unit>
        <trans-unit id="6e513fc79360d52998798eee704e12c54ed41d39" translate="yes" xml:space="preserve">
          <source>It will also clear your directory but give you flexibility to retrieve the files at any point in time using &lt;strong&gt;stash&lt;/strong&gt; with &lt;strong&gt;apply&lt;/strong&gt; or &lt;strong&gt;pop&lt;/strong&gt;. Then at later point you could clear your stash using:</source>
          <target state="translated">Это также очистит ваш каталог, но даст вам возможность извлекать файлы в любой момент времени, используя &lt;strong&gt;stash&lt;/strong&gt; с &lt;strong&gt;apply&lt;/strong&gt; или &lt;strong&gt;pop&lt;/strong&gt; . Затем на более позднем этапе вы можете очистить свой тайник, используя:</target>
        </trans-unit>
        <trans-unit id="818bce931054af6e21ef60b1e85e7ad8e2358f51" translate="yes" xml:space="preserve">
          <source>It will output something like:</source>
          <target state="translated">Это выведет что-то вроде:</target>
        </trans-unit>
        <trans-unit id="355083de1b3e519b28ad884fe5846d74ccde9520" translate="yes" xml:space="preserve">
          <source>Normal &lt;code&gt;git clean&lt;/code&gt; command doesn't remove untracked files with my &lt;code&gt;git version 2.9.0.windows.1&lt;/code&gt;.</source>
          <target state="translated">Обычная команда &lt;code&gt;git clean&lt;/code&gt; не удаляет неотслеживаемые файлы с моей &lt;code&gt;git version 2.9.0.windows.1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7d70adae9e248dcbf5927b7eeba22fdf79a73fb" translate="yes" xml:space="preserve">
          <source>Normally, only files unknown to Git are removed, but if the &lt;code&gt;-x&lt;/code&gt; option is specified, ignored files are also removed. This can, for example, be useful to remove all build products.</source>
          <target state="translated">Обычно удаляются только файлы, неизвестные Git, но если указана опция &lt;code&gt;-x&lt;/code&gt; , игнорируемые файлы также удаляются. Это может быть полезно, например, для удаления всех продуктов сборки.</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="f4bb9a18f09e2a84cc163ecae438e47b1c4edd13" translate="yes" xml:space="preserve">
          <source>Remove only files ignored by Git. This may be useful to rebuild everything from scratch, but keep manually created files.</source>
          <target state="translated">Удаляйте только файлы,проигнорированные Git'ом.Это может быть полезно для восстановления всего с нуля,но сохраняйте файлы,созданные вручную.</target>
        </trans-unit>
        <trans-unit id="478b2510a9b32cfb4adf26e1a8d78520b35a469c" translate="yes" xml:space="preserve">
          <source>Remove untracked directories in addition to untracked files. If an
  untracked directory is managed by a different Git repository, it is
  not removed by default. Use &lt;code&gt;-f&lt;/code&gt; option twice if you really want to
  remove such a directory.</source>
          <target state="translated">Удалите неотслеживаемые каталоги в дополнение к неотслеживаемым файлам. Если неотслеживаемый каталог управляется другим Git-репозиторием, по умолчанию он не удаляется. Используйте параметр &lt;code&gt;-f&lt;/code&gt; дважды, если вы действительно хотите удалить такой каталог.</target>
        </trans-unit>
        <trans-unit id="99c804d5c0eaa814c037388cb990936343e9518f" translate="yes" xml:space="preserve">
          <source>Remove untracked directories in addition to untracked files. If an untracked directory is managed by a different Git repository,
   it is not removed by default. Use -f option twice if you really want to remove such a directory.</source>
          <target state="translated">Удалите неисправленные каталоги в дополнение к неисправленным файлам.Если неотслеживаемый каталог управляется другим репозиторием Git'а,то по умолчанию он не удаляется.Используйте опцию -f дважды,если вы действительно хотите удалить такой каталог.</target>
        </trans-unit>
        <trans-unit id="80dadf8fcd42d7c5ddbd03379233401ea5695869" translate="yes" xml:space="preserve">
          <source>Reset local repository branch to be just like remote repository HEAD</source>
          <target state="translated">Сбросить локальную ветку репозитория,чтобы она была похожа на удаленный репозиторий HEAD</target>
        </trans-unit>
        <trans-unit id="bf9833b3864a606f143f671880d0d7c492524c3a" translate="yes" xml:space="preserve">
          <source>Show what would be done and clean files interactively. See &amp;ldquo;Interactive mode&amp;rdquo; for details.</source>
          <target state="translated">Покажите, что будет сделано, и очистите файлы в интерактивном режиме. Подробнее см. &amp;laquo;Интерактивный режим&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="d835cccb62bd8e11c7c7781ea51546dd0145d044" translate="yes" xml:space="preserve">
          <source>Simple Way to remove untracked files</source>
          <target state="translated">Простой способ удаления неотслеживаемых файлов</target>
        </trans-unit>
        <trans-unit id="229db1118475a8de7544cd247da0f8892998a352" translate="yes" xml:space="preserve">
          <source>So, if you want to delete files only, you can use &lt;code&gt;-f&lt;/code&gt; only:</source>
          <target state="translated">Итак, если вы хотите удалить только файлы, вы можете использовать только &lt;code&gt;-f&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fd5af672dd9226255f29b30a83a865c6d3b6f65c" translate="yes" xml:space="preserve">
          <source>Step 1 is to show what will be deleted by using the &lt;code&gt;-n&lt;/code&gt; option:</source>
          <target state="translated">Шаг 1 - показать, что будет удалено с помощью опции &lt;code&gt;-n&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="36c0630a340d2960affa1c4d2360b0e2c06793fb" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Synopsis</target>
        </trans-unit>
        <trans-unit id="d1a81156a427a3ba3ea08032dbccaa760fef0709" translate="yes" xml:space="preserve">
          <source>That being said, the extra hand holding of interactive commands can be tiring for experienced users.  These days I just use the already mentioned &lt;code&gt;git clean -fd&lt;/code&gt;</source>
          <target state="translated">Это сказанное, дополнительное удерживание руки интерактивных команд может быть утомительным для опытных пользователей. В эти дни я просто использую уже упомянутый &lt;code&gt;git clean -fd&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1e16979dadae90503d2a8d2563cb926b66a51508" translate="yes" xml:space="preserve">
          <source>That stands for &lt;em&gt;interactive&lt;/em&gt; and you will get a quick overview of what is going to be deleted offering you the possibility to include/exclude the affected files. Overall, still faster than running the mandatory &lt;code&gt;--dry-run&lt;/code&gt; before the real cleaning.</source>
          <target state="translated">Это означает &lt;em&gt;интерактивный,&lt;/em&gt; и вы получите быстрый обзор того, что будет удалено, предлагая вам возможность включить / исключить затронутые файлы. В целом, все еще быстрее, чем запуск обязательного &lt;code&gt;--dry-run&lt;/code&gt; перед реальной уборкой.</target>
        </trans-unit>
        <trans-unit id="8ecaa8c7363592fdace347348dc5704a2b2c320c" translate="yes" xml:space="preserve">
          <source>The following command will clean out
  the current git repository and all its submodules recursively:</source>
          <target state="translated">Следующая команда очистит текущий git-репозиторий и все его субмодули рекурсивно:</target>
        </trans-unit>
        <trans-unit id="d3c7f411ae2d15e9739d393e258ed44b43398355" translate="yes" xml:space="preserve">
          <source>There are other flags as well available, just check &lt;code&gt;git clean --help&lt;/code&gt;.</source>
          <target state="translated">Также доступны другие флаги, просто проверьте &lt;code&gt;git clean --help&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5dc8cefe79b062a5cba4e594ef334d2c4eb9e90" translate="yes" xml:space="preserve">
          <source>There is also interactive mode available &lt;code&gt;-i&lt;/code&gt; with the clean command</source>
          <target state="translated">Также доступен интерактивный режим &lt;code&gt;-i&lt;/code&gt; с командой clean</target>
        </trans-unit>
        <trans-unit id="c60b8250b722eb69193b0a2fe349cca854f990c0" translate="yes" xml:space="preserve">
          <source>This gets you in same state as fresh clone.</source>
          <target state="translated">Это приведет тебя в то же состояние,что и свежий клон.</target>
        </trans-unit>
        <trans-unit id="2cb8460a11f39262d84f8fd686f68a30cd1990b0" translate="yes" xml:space="preserve">
          <source>This is what I always use:</source>
          <target state="translated">Это то,что я всегда использую:</target>
        </trans-unit>
        <trans-unit id="bd71539cc5afeadc964f0d5993385fea74630620" translate="yes" xml:space="preserve">
          <source>This removes untracked files, including directories &lt;code&gt;(-d)&lt;/code&gt; and files ignored by &lt;code&gt;git (-x)&lt;/code&gt;.</source>
          <target state="translated">Это удаляет неотслеживаемые файлы, включая каталоги &lt;code&gt;(-d)&lt;/code&gt; и файлы, игнорируемые &lt;code&gt;git (-x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="06f1bd9f4fe0dfb218e10f796b7563b4634dfd34" translate="yes" xml:space="preserve">
          <source>This will show you the list of files that will be deleted. Now to actually delete those files use this command:</source>
          <target state="translated">Здесь будет показан список файлов,которые будут удалены.Теперь для фактического удаления этих файлов используйте эту команду:</target>
        </trans-unit>
        <trans-unit id="a6b0b319ceb25080098e11794cb448bd66afa4c5" translate="yes" xml:space="preserve">
          <source>To delete everything listed in the output of the previous command:</source>
          <target state="translated">Удалить все перечисленное в выводе предыдущей команды:</target>
        </trans-unit>
        <trans-unit id="3ff0a08ec2f239c3866d1e2fb210a0746cae14d0" translate="yes" xml:space="preserve">
          <source>To know what will be deleted before actually deleting:</source>
          <target state="translated">Узнать,что будет удалено перед фактическим удалением:</target>
        </trans-unit>
        <trans-unit id="5faaa7eae6c6f7a19b9a4b7821c4628e8b7d69e1" translate="yes" xml:space="preserve">
          <source>To remove all untracked files, The simple
way is to &lt;strong&gt;add all of them first&lt;/strong&gt; and &lt;strong&gt;reset the repo&lt;/strong&gt; as below</source>
          <target state="translated">Чтобы удалить все неотслеживаемые файлы, простой способ - &lt;strong&gt;сначала добавить их все&lt;/strong&gt; и &lt;strong&gt;сбросить&lt;/strong&gt; репозиторий, как показано ниже.</target>
        </trans-unit>
        <trans-unit id="ebff74a2a3032771203ee8bf63589faff1d048da" translate="yes" xml:space="preserve">
          <source>To remove directories, run &lt;code&gt;git clean -f -d&lt;/code&gt; or &lt;code&gt;git clean -fd&lt;/code&gt;</source>
          <target state="translated">Чтобы удалить каталоги, запустите &lt;code&gt;git clean -f -d&lt;/code&gt; или &lt;code&gt;git clean -fd&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="43e5095e742f2512dc6627c9ece53a6400b1e013" translate="yes" xml:space="preserve">
          <source>To remove ignored and non-ignored files, run &lt;code&gt;git clean -f -x&lt;/code&gt; or &lt;code&gt;git clean -fx&lt;/code&gt;</source>
          <target state="translated">Чтобы удалить проигнорированные и не проигнорированные файлы, запустите &lt;code&gt;git clean -f -x&lt;/code&gt; или &lt;code&gt;git clean -fx&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14620a566b22360746cf44846bd2000a6573ce83" translate="yes" xml:space="preserve">
          <source>To remove ignored files, run &lt;code&gt;git clean -f -X&lt;/code&gt; or &lt;code&gt;git clean -fX&lt;/code&gt;</source>
          <target state="translated">Чтобы удалить проигнорированные файлы, запустите &lt;code&gt;git clean -f -X&lt;/code&gt; или &lt;code&gt;git clean -fX&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab95ec59cf77f165602d98d8afeccd692525ebd1" translate="yes" xml:space="preserve">
          <source>To remove the untracked files you should first use command to view the files that will be affected by cleaning</source>
          <target state="translated">Чтобы удалить неотслеживаемые файлы,вы должны сначала использовать команду просмотра файлов,которые будут затронуты очисткой</target>
        </trans-unit>
        <trans-unit id="996de08bbccbc8b245338231646f0f8f8fb991f9" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;-q&lt;/code&gt; if you don't want to see any report after successful deletion.</source>
          <target state="translated">Используйте &lt;code&gt;-q&lt;/code&gt; , если вы не хотите видеть какой-либо отчет после успешного удаления.</target>
        </trans-unit>
        <trans-unit id="303116fd3c2f98d3c8f28d835f9d096de52954bc" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git clean -f -d&lt;/code&gt; to make sure that &lt;strong&gt;directories&lt;/strong&gt; are also removed.</source>
          <target state="translated">Используйте &lt;code&gt;git clean -f -d&lt;/code&gt; , чтобы убедиться, что &lt;strong&gt;каталоги&lt;/strong&gt; также удалены.</target>
        </trans-unit>
        <trans-unit id="f9b4b01b269b34589eb4eac0c47e3a3e7b0d503a" translate="yes" xml:space="preserve">
          <source>We can easily removed local untracked files from the current git working tree by using below git comments.</source>
          <target state="translated">Мы можем легко удалить локальные неотслеживаемые файлы из текущего дерева работы git'а,используя нижеприведённые git-комментарии.</target>
        </trans-unit>
        <trans-unit id="b88a96d49a5e68a33d925ec449b13f60e31821cc" translate="yes" xml:space="preserve">
          <source>You can then check if your files are really gone with &lt;code&gt;git status&lt;/code&gt;.</source>
          <target state="translated">Затем вы можете проверить, действительно ли ваши файлы ушли со &lt;code&gt;git status&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4db1272a1c7187287693eb58c3731401daa08567" translate="yes" xml:space="preserve">
          <source>You will have to toss in a &lt;code&gt;-d&lt;/code&gt; if you also want to take care of empty folders. At the end, it makes  for a nice alias:</source>
          <target state="translated">Вам нужно будет добавить &lt;code&gt;-d&lt;/code&gt; , если вы также хотите позаботиться о пустых папках. В конце концов, это дает хороший псевдоним:</target>
        </trans-unit>
        <trans-unit id="3aa67f9a6628d26864d04c147f1b94f395c846bc" translate="yes" xml:space="preserve">
          <source>after this you will have modified files only in &lt;code&gt;git status&lt;/code&gt;.</source>
          <target state="translated">после этого вы будете изменять файлы только в &lt;code&gt;git status&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="acc851f29df6fed8949d25c2cd53062a360ba4a0" translate="yes" xml:space="preserve">
          <source>can be used all above options in combination as</source>
          <target state="translated">могут быть использованы все вышеперечисленные опции в комбинации,как</target>
        </trans-unit>
        <trans-unit id="c2d07dc7c3fe9d372a3232a60824048bb1d17b7d" translate="yes" xml:space="preserve">
          <source>check git manual for more help</source>
          <target state="translated">подробная справка в руководстве по ведению химии</target>
        </trans-unit>
        <trans-unit id="479c512e5d47cbf05ade4d80d1a2130fd5935511" translate="yes" xml:space="preserve">
          <source>uggested Command for &lt;strong&gt;Removing Untracked Files from git docs&lt;/strong&gt; is &lt;strong&gt;git clean&lt;/strong&gt;</source>
          <target state="translated">Команда для &lt;strong&gt;удаления неотслеживаемых файлов из git docs&lt;/strong&gt; - это &lt;strong&gt;git clean&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4e0e31dec679361e40e8eeda86527b35cb5b41e0" translate="yes" xml:space="preserve">
          <source>when you want to remove directories and files, this will delete only untracked directories and files</source>
          <target state="translated">когда вы хотите удалить каталоги и файлы,это удалит только необнаруженные каталоги и файлы</target>
        </trans-unit>
        <trans-unit id="c6ed0daecfba6ba6da45e6968091b4ff08a40eed" translate="yes" xml:space="preserve">
          <source>will remove the untracked files from the current git</source>
          <target state="translated">удалит неотслеживаемые файлы из текущего git'а.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
