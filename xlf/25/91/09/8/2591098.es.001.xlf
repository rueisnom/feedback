<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/2591098">
    <body>
      <group id="2591098">
        <trans-unit id="ea65c5c96e1eac1d9c4435b5e12b399ffced32c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://code.google.com/p/quick-json/&quot;&gt;quick-json parser&lt;/a&gt; is very straightforward, flexible, very fast and customizable. Try it</source>
          <target state="translated">&lt;a href=&quot;https://code.google.com/p/quick-json/&quot;&gt;El analizador quick-json&lt;/a&gt; es muy sencillo, flexible, muy r&amp;aacute;pido y personalizable. Intentalo</target>
        </trans-unit>
        <trans-unit id="581c985eea09e3d23ece6c4273d96320b7a256bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/FasterXML/jackson-databind/&quot;&gt;Jackson&lt;/a&gt; (&lt;a href=&quot;http://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind&quot;&gt;Maven&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;https://github.com/FasterXML/jackson-databind/&quot;&gt;Jackson&lt;/a&gt; ( &lt;a href=&quot;http://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind&quot;&gt;Maven&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="54b860be7eb1706dd022135cab0fcf7ba4e7faf3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/google/gson&quot;&gt;Google GSON&lt;/a&gt; (&lt;a href=&quot;http://mvnrepository.com/artifact/com.google.code.gson/gson&quot;&gt;Maven&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;https://github.com/google/gson&quot;&gt;Google GSON&lt;/a&gt; ( &lt;a href=&quot;http://mvnrepository.com/artifact/com.google.code.gson/gson&quot;&gt;Maven&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="3ee7e3039883c031f4cdb591853c88b660863b1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/stleary/JSON-java&quot;&gt;Org.JSON&lt;/a&gt; (&lt;a href=&quot;http://mvnrepository.com/artifact/org.json/json&quot;&gt;Maven&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;https://github.com/stleary/JSON-java&quot;&gt;Org.JSON&lt;/a&gt; ( &lt;a href=&quot;http://mvnrepository.com/artifact/org.json/json&quot;&gt;Maven&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="05f76f0d55a1a802b770e68d6fdf7db04a914eee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jsoniter&lt;/code&gt; (jsoniterator) is a relatively new and simple json library, designed to be simple and fast. All you need to do to deserialize json data is</source>
          <target state="translated">&lt;code&gt;jsoniter&lt;/code&gt; (jsoniterator) es una biblioteca json relativamente nueva y simple, dise&amp;ntilde;ada para ser simple y r&amp;aacute;pida. Todo lo que necesita hacer para deserializar los datos json es</target>
        </trans-unit>
        <trans-unit id="03610e46c3979f79023144c6bf30ea1d6e343100" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;fromJson()&lt;/em&gt;&lt;/strong&gt; &amp;ndash; Convert JSON into Java object</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;fromJson ()&lt;/em&gt;&lt;/strong&gt; - Convierte JSON en objeto Java</target>
        </trans-unit>
        <trans-unit id="705c755a5250c8b1f571cf8890ad4135858b182f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;toJson()&lt;/em&gt;&lt;/strong&gt; &amp;ndash; Convert Java object to JSON format</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;toJson ()&lt;/em&gt;&lt;/strong&gt; - Convertir objeto Java a formato JSON</target>
        </trans-unit>
        <trans-unit id="fb8f9c8b1988dbf445e49cc72e660540c1cce355" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Code for converting this JSON to a Java class.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;C&amp;oacute;digo para convertir este JSON a una clase Java.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f561f0a28a73c1cfb924e851f87e5d54afde91ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DSM is very good for complex json and xml.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;DSM es muy bueno para json y xml complejos.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9251863320abe2fea319e96654ab3025da8e313e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Gson&lt;/strong&gt; is easy to learn and implement, what we need to know are following two methods</source>
          <target state="translated">&lt;strong&gt;Gson&lt;/strong&gt; es f&amp;aacute;cil de aprender e implementar, lo que necesitamos saber es seguir dos m&amp;eacute;todos</target>
        </trans-unit>
        <trans-unit id="ff1a5ff658b0821446261c49fa429c9c5086a950" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;I have JSON like this:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Tengo JSON as&amp;iacute;:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab280e1e06c703b1cad8b270301293d1d14cc3ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Jackson&lt;/strong&gt; takes 6.5~7 seconds</source>
          <target state="translated">&lt;strong&gt;Jackson&lt;/strong&gt; toma 6.5 ~ 7 segundos</target>
        </trans-unit>
        <trans-unit id="e7af3e9da3894854740bb7458fbfd889afae67ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Java class&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Clase de Java&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f1f5f742f9fbb132d6357c0198a1f1c2c4ef5414" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Maven&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Maven&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e1129c7696d19cfbf06a0a0f1333da3bff9e773b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Page&lt;/strong&gt; Class, a composite of &lt;strong&gt;PageInfo&lt;/strong&gt; Class and array of &lt;strong&gt;Post&lt;/strong&gt; Instances</source>
          <target state="translated">&lt;strong&gt;Page&lt;/strong&gt; Class, un compuesto de &lt;strong&gt;PageInfo&lt;/strong&gt; Class y una matriz de &lt;strong&gt;Post&lt;/strong&gt; Instances</target>
        </trans-unit>
        <trans-unit id="0dc53093af6d0bc6129a4b99c67b4821d7476c6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PageInfo&lt;/strong&gt; Class</source>
          <target state="translated">&lt;strong&gt;PageInfo&lt;/strong&gt; Class</target>
        </trans-unit>
        <trans-unit id="5bdf7aae131dcf748c7b9ace65a6cbcede925cd4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Performance comparison&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Comparaci&amp;oacute;n de rendimiento&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1b1137c7cde8f7f4f635ccde6b622d5a38018762" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Posts&lt;/strong&gt; Class</source>
          <target state="translated">Clase de &lt;strong&gt;publicaciones&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="43f038c62b45a67bf440ca6fe8caa39490287184" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Solution&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Solution&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1886539a537103abdbc2deba551ee10fab14bc0c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Step 1&lt;/strong&gt;: Add the jayway JSON path dependency in your class path using Maven or download the JAR file and manually add it.</source>
          <target state="translated">&lt;strong&gt;Paso 1&lt;/strong&gt; : Agregue la dependencia de la ruta JAYway JSON en su ruta de clase usando Maven o descargue el archivo JAR y agr&amp;eacute;guelo manualmente.</target>
        </trans-unit>
        <trans-unit id="2fbd052391bb5db3b551a01917005442e6578fba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Step 2&lt;/strong&gt;: Please save your input JSON as a file for this example. In my case I saved your JSON as sampleJson.txt. Note you missed a comma between pageInfo and posts.</source>
          <target state="translated">&lt;strong&gt;Paso 2&lt;/strong&gt; : guarde su entrada JSON como un archivo para este ejemplo. En mi caso, guard&amp;eacute; su JSON como sampleJson.txt. Tenga en cuenta que se perdi&amp;oacute; una coma entre pageInfo y las publicaciones.</target>
        </trans-unit>
        <trans-unit id="048e0b165aae8387f19fb8f66135b22372f11de4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Step 3&lt;/strong&gt;: Read the JSON contents from the above file using bufferedReader and save it as String.</source>
          <target state="translated">&lt;strong&gt;Paso 3&lt;/strong&gt; : Lea el contenido JSON del archivo anterior usando bufferedReader y gu&amp;aacute;rdelo como String.</target>
        </trans-unit>
        <trans-unit id="84f862c1d56afbc5d00599cfbabc74c958688a25" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Step 4&lt;/strong&gt;: Parse your JSON string using jayway JSON parser.</source>
          <target state="translated">&lt;strong&gt;Paso 4&lt;/strong&gt; : Analiza tu cadena JSON usando el analizador jayway JSON.</target>
        </trans-unit>
        <trans-unit id="cc327bb753d6694e6d587e28b624df3fd2decf43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Step 5&lt;/strong&gt;: Read the details like below.</source>
          <target state="translated">&lt;strong&gt;Paso 5&lt;/strong&gt; : Lea los detalles como a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b913191ee8246154e8264c165558cedbc926ca35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The output will be&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;La salida ser&amp;aacute;&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="200627b0eb37efd54845f9a6bd7c0133da5e8d51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Update&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f25f3e28c57eff39cd3e2e6eadedc301de5413fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;jackson-annotations-2.5.0.jar&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;jackson-annotations-2.5.0.jar&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="86d8a75250ca1708ac4c4b1ec45987048798776d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;jackson-core-2.5.1.jar&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;jackson-core-2.5.1.jar&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b6feda883de2fd3be3de89dd9b83fc93c7213d6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;jackson-databind-2.5.1.jar&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;jackson-databind-2.5.1.jar&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12743475bf50fb900579f074c47e0df51b6d05c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;org.json&lt;/strong&gt; takes 20~21 seconds</source>
          <target state="translated">&lt;strong&gt;org.json&lt;/strong&gt; toma 20 ~ 21 segundos</target>
        </trans-unit>
        <trans-unit id="fb28eb98a5cc6cac6edaa0094b2e5918a1aad2ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;page&lt;/strong&gt; variable serialized to json:</source>
          <target state="translated">variable de &lt;strong&gt;p&amp;aacute;gina&lt;/strong&gt; serializada a json:</target>
        </trans-unit>
        <trans-unit id="d810459f3180bff7e2a7a6af2c59c8c67e8fa178" translate="yes" xml:space="preserve">
          <source>A - Explanation</source>
          <target state="translated">A-Explicación</target>
        </trans-unit>
        <trans-unit id="b67ce5d5635f015e9f01c6db5b0c651824b1cb5b" translate="yes" xml:space="preserve">
          <source>Almost all the answers given requires a full deserialization of the JSON into a Java object before accessing the value in the property of interest. Another alternative, which does not go this route is to use &lt;a href=&quot;http://goessner.net/articles/JsonPath/&quot;&gt;JsonPATH&lt;/a&gt; which is like XPath for JSON and allows traversing of JSON objects.</source>
          <target state="translated">Casi todas las respuestas dadas requieren una deserializaci&amp;oacute;n completa del JSON en un objeto Java antes de acceder al valor en la propiedad de inter&amp;eacute;s. Otra alternativa, que no sigue esta ruta es utilizar &lt;a href=&quot;http://goessner.net/articles/JsonPath/&quot;&gt;JsonPATH,&lt;/a&gt; que es como XPath para JSON y permite atravesar objetos JSON.</target>
        </trans-unit>
        <trans-unit id="af8d410d429ad57fab9c29adda1ef85707482ce8" translate="yes" xml:space="preserve">
          <source>And &lt;strong&gt;to help you decide&lt;/strong&gt;... I found this article as well:</source>
          <target state="translated">Y &lt;strong&gt;para ayudarlo a decidir&lt;/strong&gt; ... Tambi&amp;eacute;n encontr&amp;eacute; este art&amp;iacute;culo:</target>
        </trans-unit>
        <trans-unit id="663653cb78ef87e0bb6480289ada2bfff8942b72" translate="yes" xml:space="preserve">
          <source>Automatic model generation</source>
          <target state="translated">Generación automática de modelos</target>
        </trans-unit>
        <trans-unit id="b738ee3e56540b60fee89056a48118c59804bed7" translate="yes" xml:space="preserve">
          <source>B - Main POJO Class : Page</source>
          <target state="translated">B-Clase principal de POJO:Página</target>
        </trans-unit>
        <trans-unit id="d66d5132e915f27b988bbcb532fd4097e0995031" translate="yes" xml:space="preserve">
          <source>But if one just want to parse a JSON string and get some values, (OR create a JSON string from scratch to send over wire) just use JaveEE jar which contains JsonReader, JsonArray, JsonObject etc. You may want to download the implementation of that spec like javax.json. With these two jars I am able to parse the json and use the values.</source>
          <target state="translated">Pero si uno sólo quiere analizar una cadena de JSON y obtener algunos valores,(O crear una cadena de JSON desde cero para enviarla por cable)sólo tiene que usar el frasco de JaveEE que contiene JsonReader,JsonArray,JsonObject etc.Puede que quieras descargar la implementación de esa especificación como javax.json.Con estos dos frascos soy capaz de analizar el json y usar los valores.</target>
        </trans-unit>
        <trans-unit id="76ff8126da6f93d5ee3697f05578f8cbc37e3819" translate="yes" xml:space="preserve">
          <source>C - Child POJO Class : PageInfo</source>
          <target state="translated">C-Clase de POJO para niños:PageInfo</target>
        </trans-unit>
        <trans-unit id="8a2dc4ac0a59e84b96d9e4e2011a1d324b5615a6" translate="yes" xml:space="preserve">
          <source>Check out the &lt;a href=&quot;http://jsoniter.com/&quot;&gt;official website&lt;/a&gt;
for more information.</source>
          <target state="translated">Visite el &lt;a href=&quot;http://jsoniter.com/&quot;&gt;sitio web oficial&lt;/a&gt; para m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5d412e7449d9e26d0c1415515ac836426e5d9116" translate="yes" xml:space="preserve">
          <source>Check the JsonPath specification page for more information on the other ways to transverse JSON.</source>
          <target state="translated">Revise la página de especificaciones de JsonPath para más información sobre las otras formas de atravesar JSON.</target>
        </trans-unit>
        <trans-unit id="5f16c172ef732329922fe4de767f371ef0e8a14c" translate="yes" xml:space="preserve">
          <source>Compliant with JSON specification (RFC4627)</source>
          <target state="translated">Cumple con la especificación JSON (RFC4627)</target>
        </trans-unit>
        <trans-unit id="69c7ed2e68fc1c1c410d3a15220f49b10f78ddc3" translate="yes" xml:space="preserve">
          <source>Configurable validation of key/value pairs of any JSON Hierarchy</source>
          <target state="translated">Validación configurable de los pares de valores clave de cualquier jerarquía JSON</target>
        </trans-unit>
        <trans-unit id="b43f50ee8ee18a4adf5d2723ee8fe73aa7a2fa98" translate="yes" xml:space="preserve">
          <source>Create Java object from JSON</source>
          <target state="translated">Crear un objeto Java a partir de JSON</target>
        </trans-unit>
        <trans-unit id="bfe5f0fdd4ad15aa4bcd6cf27f41fdb5fa152040" translate="yes" xml:space="preserve">
          <source>Create a yaml Mapping file.</source>
          <target state="translated">Crear un archivo de mapeo yaml.</target>
        </trans-unit>
        <trans-unit id="5a1f8dfe343d664415ddc94739883a4753af831f" translate="yes" xml:space="preserve">
          <source>Creating JSON:</source>
          <target state="translated">Creando a JSON:</target>
        </trans-unit>
        <trans-unit id="ba357fa573625c18a64c4a5ec0aa47fe1deb81cf" translate="yes" xml:space="preserve">
          <source>D - Child POJO Class : Post</source>
          <target state="translated">D-Niño Clase POJO:Post</target>
        </trans-unit>
        <trans-unit id="1555271c54fe56903d1f72ec8246497a843bcfc1" translate="yes" xml:space="preserve">
          <source>Done. &lt;em&gt;Drops microphone&lt;/em&gt;.
This works with &lt;code&gt;JSONObjects&lt;/code&gt; as well. After that, you can just look through your hierarchy of &lt;code&gt;Objects&lt;/code&gt; using the &lt;code&gt;get()&lt;/code&gt; methods on your objects.</source>
          <target state="translated">Hecho. &lt;em&gt;Gotas de micr&amp;oacute;fono&lt;/em&gt; . Esto tambi&amp;eacute;n funciona con &lt;code&gt;JSONObjects&lt;/code&gt; . Despu&amp;eacute;s de eso, puede mirar a trav&amp;eacute;s de su jerarqu&amp;iacute;a de &lt;code&gt;Objects&lt;/code&gt; usando los m&amp;eacute;todos &lt;code&gt;get()&lt;/code&gt; en sus objetos.</target>
        </trans-unit>
        <trans-unit id="ab13932a6db4b8954dec2f6bc4eb7836527a70a7" translate="yes" xml:space="preserve">
          <source>Downloadable jar:  &lt;a href=&quot;http://mvnrepository.com/artifact/org.json/json&quot;&gt;http://mvnrepository.com/artifact/org.json/json&lt;/a&gt;</source>
          <target state="translated">Jar descargable: &lt;a href=&quot;http://mvnrepository.com/artifact/org.json/json&quot;&gt;http://mvnrepository.com/artifact/org.json/json&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b4d50543ce7975d4b13d9a5652eeb5444ad618b" translate="yes" xml:space="preserve">
          <source>E - Sample JSON File : sampleJSONFile.json</source>
          <target state="translated">E-Archivo JSON de muestra:sampleJSONFile.json</target>
        </trans-unit>
        <trans-unit id="00feb5912c0950d28a766de9161106eb61bf7ec1" translate="yes" xml:space="preserve">
          <source>Ease of use (code is simple to write and legible) - that goes with features.</source>
          <target state="translated">Facilidad de uso (el código es simple de escribir y legible)-eso va con las características.</target>
        </trans-unit>
        <trans-unit id="ce370a5c966639d991d2edbcf30aa43459931fb1" translate="yes" xml:space="preserve">
          <source>Easy to use # Very small footprint</source>
          <target state="translated">Fácil de usar#Huella muy pequeña</target>
        </trans-unit>
        <trans-unit id="1203b487908e8c8120e99871d562a439ab5dac96" translate="yes" xml:space="preserve">
          <source>F - Demo Code</source>
          <target state="translated">F-Código demográfico</target>
        </trans-unit>
        <trans-unit id="5df81ffa82179b458e1d55e350db9d88805a69b2" translate="yes" xml:space="preserve">
          <source>Features:</source>
          <target state="translated">Features:</target>
        </trans-unit>
        <trans-unit id="4fd018f9b4541f8c7b5f7b837295fec5fbe165f9" translate="yes" xml:space="preserve">
          <source>First you need to select an &lt;strong&gt;implementation library&lt;/strong&gt; to do that.</source>
          <target state="translated">Primero debe seleccionar una &lt;strong&gt;biblioteca de implementaci&amp;oacute;n&lt;/strong&gt; para hacer eso.</target>
        </trans-unit>
        <trans-unit id="2fab5b640e16bedd65b12cef9e96c7aa9b3dc83b" translate="yes" xml:space="preserve">
          <source>For 1, see this benchmark: &lt;a href=&quot;https://github.com/fabienrenaud/java-json-benchmark&quot;&gt;https://github.com/fabienrenaud/java-json-benchmark&lt;/a&gt; I did using &lt;a href=&quot;http://openjdk.java.net/projects/code-tools/jmh/&quot;&gt;JMH&lt;/a&gt; which compares (jackson, gson, genson, fastjson, org.json, jsonp) performance of serializers and deserializers using stream and databind APIs.
For 2, you can find numerous examples on the Internet. The benchmark above can also be used as a source of examples...</source>
          <target state="translated">Para 1, vea este punto de referencia: &lt;a href=&quot;https://github.com/fabienrenaud/java-json-benchmark&quot;&gt;https://github.com/fabienrenaud/java-json-benchmark&lt;/a&gt; que hice usando &lt;a href=&quot;http://openjdk.java.net/projects/code-tools/jmh/&quot;&gt;JMH&lt;/a&gt; que compara (jackson, gson, genson, fastjson, org.json, jsonp) el rendimiento de serializadores y deserializadores usando stream y API de enlace de datos. Para 2, puede encontrar numerosos ejemplos en Internet. El punto de referencia anterior tambi&amp;eacute;n se puede utilizar como fuente de ejemplos ...</target>
        </trans-unit>
        <trans-unit id="2f0a74d7dfe882b3c0628193b58ea62013cab0bc" translate="yes" xml:space="preserve">
          <source>For further reference you can refer to the following &lt;a href=&quot;http://javahai.blogspot.in/2016/03/create-java-object-from-json-string.html&quot;&gt;link&lt;/a&gt;.</source>
          <target state="translated">Para mayor referencia, puede consultar el siguiente &lt;a href=&quot;http://javahai.blogspot.in/2016/03/create-java-object-from-json-string.html&quot;&gt;enlace&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cc0b99d1a4fc0b06d6dcf2ceb23a820e9c3d979e" translate="yes" xml:space="preserve">
          <source>For mobile apps: dependency/jar size</source>
          <target state="translated">Para aplicaciones móviles:tamaño de la dependencia</target>
        </trans-unit>
        <trans-unit id="e5e03d0772320e98ed4376b556afec9cf1112698" translate="yes" xml:space="preserve">
          <source>For the sake of the example lets assume you have a class &lt;strong&gt;&lt;code&gt;Person&lt;/code&gt;&lt;/strong&gt; with just a &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">Por el bien del ejemplo, supongamos que tiene una clase &lt;strong&gt; &lt;code&gt;Person&lt;/code&gt; a&lt;/strong&gt; con solo un &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2885f44578c0f825368033cb53176134ed3d590b" translate="yes" xml:space="preserve">
          <source>For your particular example, the following code decodes your json with jackson:</source>
          <target state="translated">Para su ejemplo particular,el siguiente código decodifica su json con jackson:</target>
        </trans-unit>
        <trans-unit id="46bef7454065eebd2a67f75cdc30df17dc513844" translate="yes" xml:space="preserve">
          <source>From your example:</source>
          <target state="translated">De tu ejemplo:</target>
        </trans-unit>
        <trans-unit id="a69798c76d0a5628b350f29769d994d62ecbe059" translate="yes" xml:space="preserve">
          <source>G - Demo Output</source>
          <target state="translated">G-Salida de demostración</target>
        </trans-unit>
        <trans-unit id="9adca0a1f8e9c23815dd4bc100592ef7dd2c16b1" translate="yes" xml:space="preserve">
          <source>Gradle import</source>
          <target state="translated">Importación de gradientes</target>
        </trans-unit>
        <trans-unit id="5a3edd9462d95d94e4c206a206631620177058b8" translate="yes" xml:space="preserve">
          <source>Here is the required code;</source>
          <target state="translated">Aquí está el código requerido;</target>
        </trans-unit>
        <trans-unit id="cb1d161d6ba6dfb003d26634a915d135c72556ab" translate="yes" xml:space="preserve">
          <source>Here you can find a &lt;strong&gt;list of implementations&lt;/strong&gt; of JSR 353:</source>
          <target state="translated">Aqu&amp;iacute; puede encontrar una &lt;strong&gt;lista de implementaciones&lt;/strong&gt; de JSR 353:</target>
        </trans-unit>
        <trans-unit id="ea240118c4bf850ae6636a1a53c032f94886def1" translate="yes" xml:space="preserve">
          <source>High-Performance JSON parser</source>
          <target state="translated">Parser JSON de alto rendimiento</target>
        </trans-unit>
        <trans-unit id="e91c5dffba99be277021da86df113a93045c9b6d" translate="yes" xml:space="preserve">
          <source>Hope it helps!</source>
          <target state="translated">¡Espero que ayude!</target>
        </trans-unit>
        <trans-unit id="68df6e851d85c7d09297b9204c8a83b835f72f14" translate="yes" xml:space="preserve">
          <source>How to parse JSON in Java</source>
          <target state="translated">Cómo analizar JSON en Java</target>
        </trans-unit>
        <trans-unit id="7cce87c2a84ffcdb1ce79866d0ce75d3a7b725e5" translate="yes" xml:space="preserve">
          <source>I believe the best practice should be to go through the official &lt;a href=&quot;http://json-processing-spec.java.net/&quot;&gt;Java JSON API&lt;/a&gt; which are still work in progress.</source>
          <target state="translated">Creo que la mejor pr&amp;aacute;ctica deber&amp;iacute;a ser pasar por la &lt;a href=&quot;http://json-processing-spec.java.net/&quot;&gt;API&lt;/a&gt; oficial de Java JSON que todav&amp;iacute;a est&amp;aacute;n en progreso.</target>
        </trans-unit>
        <trans-unit id="2f9613b87bf96a3f80b384dbf2950b16ecee7d47" translate="yes" xml:space="preserve">
          <source>I have the following JSON text. How can I parse it to get the values of &lt;code&gt;pageName&lt;/code&gt;, &lt;code&gt;pagePic&lt;/code&gt;, &lt;code&gt;post_id&lt;/code&gt;, etc.?</source>
          <target state="translated">Tengo el siguiente texto JSON. &amp;iquest;C&amp;oacute;mo puedo analizarlo para obtener los valores de &lt;code&gt;pageName&lt;/code&gt; , &lt;code&gt;pagePic&lt;/code&gt; , &lt;code&gt;post_id&lt;/code&gt; , etc.?</target>
        </trans-unit>
        <trans-unit id="d8f0c4e0c9f55071e5234777e393a4c7be6419e6" translate="yes" xml:space="preserve">
          <source>I want to retrieve the value of &quot;translatedText&quot; attribute e.g. &quot;Arbeit&quot; using Google's Gson.</source>
          <target state="translated">Quiero recuperar el valor del atributo &quot;translatedText&quot;,por ejemplo &quot;Arbeit&quot;,usando el Gson de Google.</target>
        </trans-unit>
        <trans-unit id="d5f6b48ca5241e591de492e8026eabcfac5704ca" translate="yes" xml:space="preserve">
          <source>I wrote JSON content containing three arrays of respectively 20, 20 and 100 elements. I only want to get the 100 elements from the third array. I use the following JavaScript function to parse and get my entries.</source>
          <target state="translated">Escribí el contenido de JSON que contiene tres matrices de 20,20 y 100 elementos respectivamente.Sólo quiero obtener los 100 elementos de la tercera matriz.Utilizo la siguiente función de JavaScript para analizar y obtener mis entradas.</target>
        </trans-unit>
        <trans-unit id="bc670ce71e17cb364032562f9990059824ae23de" translate="yes" xml:space="preserve">
          <source>I've just copied your JSON sample into this file and put it under the project folder.</source>
          <target state="translated">Acabo de copiar tu muestra de JSON en este archivo y la puse en la carpeta del proyecto.</target>
        </trans-unit>
        <trans-unit id="ceb2cc12a904bbb5d45b6e59986a3aafd5b680bb" translate="yes" xml:space="preserve">
          <source>If one wants to create Java object from JSON and vice versa, use GSON or JACKSON third party jars etc.</source>
          <target state="translated">Si se quiere crear un objeto Java a partir de JSON y viceversa,se deben utilizar jarras de terceros de GSON o JACKSON,etc.</target>
        </trans-unit>
        <trans-unit id="c35a7233c9b98527537ebaf8214644c098990138" translate="yes" xml:space="preserve">
          <source>If you don't need object de-serialisation but to simply get an attribute, you can try org.json (&lt;strong&gt;or look GSON example above!&lt;/strong&gt;)</source>
          <target state="translated">Si no necesita la deserializaci&amp;oacute;n de objetos, sino simplemente obtener un atributo, puede probar org.json (&amp;iexcl; &lt;strong&gt;o consulte el ejemplo de GSON anterior!&lt;/strong&gt; )</target>
        </trans-unit>
        <trans-unit id="86de2921b10bc48cdd2792ee251a69936f29851b" translate="yes" xml:space="preserve">
          <source>If you go for Jackson, here is a good article about conversion between JSON to/from Java using Jackson: &lt;a href=&quot;https://www.mkyong.com/java/how-to-convert-java-object-to-from-json-jackson/&quot;&gt;https://www.mkyong.com/java/how-to-convert-java-object-to-from-json-jackson/&lt;/a&gt;</source>
          <target state="translated">Si opta por Jackson, aqu&amp;iacute; hay un buen art&amp;iacute;culo sobre la conversi&amp;oacute;n entre JSON a / desde Java usando Jackson: &lt;a href=&quot;https://www.mkyong.com/java/how-to-convert-java-object-to-from-json-jackson/&quot;&gt;https://www.mkyong.com/java/how-to-convert-java-object-to-from-json- jackson /&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b3a718b5da6f863dd650d28b31b7f39126c939b8" translate="yes" xml:space="preserve">
          <source>If you have some Java class(say Message) representing the JSON string(jsonString), you can use &lt;a href=&quot;https://github.com/FasterXML/jackson&quot;&gt;Jackson&lt;/a&gt;  JSON library with:</source>
          <target state="translated">Si tiene alguna clase Java (digamos Mensaje) que representa la cadena JSON (jsonString), puede usar la biblioteca &lt;a href=&quot;https://github.com/FasterXML/jackson&quot;&gt;Jackson&lt;/a&gt; JSON con:</target>
        </trans-unit>
        <trans-unit id="7b6b38e774913e413531ed50fe8f99c268dc10e0" translate="yes" xml:space="preserve">
          <source>If you want to get a single attribute out you can do it easily with the Google library as well:</source>
          <target state="translated">Si quieres sacar un solo atributo,también puedes hacerlo fácilmente con la biblioteca de Google:</target>
        </trans-unit>
        <trans-unit id="f8db7127b046e469b834e6462fa961384b7d6965" translate="yes" xml:space="preserve">
          <source>In addition to other answers, I recomend this online opensource service &lt;a href=&quot;http://www.jsonschema2pojo.org/&quot;&gt;jsonschema2pojo.org&lt;/a&gt; for quick generating Java classes from json or json schema for GSON, Jackson 1.x or Jackson 2.x. For example, if you have:</source>
          <target state="translated">Adem&amp;aacute;s de otras respuestas, recomiendo este servicio en l&amp;iacute;nea de c&amp;oacute;digo &lt;a href=&quot;http://www.jsonschema2pojo.org/&quot;&gt;abierto jsonschema2pojo.org&lt;/a&gt; para generar r&amp;aacute;pidamente clases Java a partir de esquemas json o json para GSON, Jackson 1.xo Jackson 2.x. Por ejemplo, si tienes:</target>
        </trans-unit>
        <trans-unit id="2c59ace1ec6d4b3f2c5104567e4ac03a2a140852" translate="yes" xml:space="preserve">
          <source>In this case Jackson performs better than Nashorn, which performs much better than org.json.
Nashorn API is harder to use than org.json's or Jackson's. Depending on your requirements Jackson and Nashorn both can be viable solutions.</source>
          <target state="translated">En este caso Jackson se desempeña mejor que Nashorn,que se desempeña mucho mejor que org.json.El API de Nashorn es más difícil de usar que el de org.json o el de Jackson.Dependiendo de sus requerimientos,tanto Jackson como Nashorn pueden ser soluciones viables.</target>
        </trans-unit>
        <trans-unit id="6ee9922191e0c50a3726173d2d2a5807b35d614f" translate="yes" xml:space="preserve">
          <source>In your JSON object, which is actually a &lt;strong&gt;composite&lt;/strong&gt; object, the main object consists o two sub-objects. So, our POJO classes should have the same hierarchy. I'll call the whole JSON Object as &lt;strong&gt;Page&lt;/strong&gt; object. &lt;strong&gt;Page&lt;/strong&gt; object consist of a &lt;strong&gt;PageInfo&lt;/strong&gt; object, and a &lt;strong&gt;Post&lt;/strong&gt; object array.</source>
          <target state="translated">En su objeto JSON, que en realidad es un objeto &lt;strong&gt;compuesto&lt;/strong&gt; , el objeto principal consta de dos subobjetos. Entonces, nuestras clases POJO deben tener la misma jerarqu&amp;iacute;a. Llamar&amp;eacute; a todo el objeto JSON como objeto de &lt;strong&gt;p&amp;aacute;gina&lt;/strong&gt; . &lt;strong&gt;El&lt;/strong&gt; objeto de &lt;strong&gt;p&amp;aacute;gina&lt;/strong&gt; consta de un objeto &lt;strong&gt;PageInfo&lt;/strong&gt; y una matriz de objetos &lt;strong&gt;Post&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="7957cdd685e55b0659e0f881b1501d7538cec20a" translate="yes" xml:space="preserve">
          <source>It can be used like this:</source>
          <target state="translated">Se puede usar así:</target>
        </trans-unit>
        <trans-unit id="b8a08f56b44c2d87e99bd4f90e6ce3b988da05f1" translate="yes" xml:space="preserve">
          <source>It is a specification and the good folks at JayWay have created a Java implementation for the specification which you can find here: &lt;a href=&quot;https://github.com/jayway/JsonPath&quot;&gt;https://github.com/jayway/JsonPath&lt;/a&gt;</source>
          <target state="translated">Es una especificaci&amp;oacute;n y la buena gente de JayWay ha creado una implementaci&amp;oacute;n de Java para la especificaci&amp;oacute;n que puede encontrar aqu&amp;iacute;: &lt;a href=&quot;https://github.com/jayway/JsonPath&quot;&gt;https://github.com/jayway/JsonPath&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="53caf5fac63a362f1b42f0a9bf30b0d1429744ca" translate="yes" xml:space="preserve">
          <source>Let me know if you have any questions.</source>
          <target state="translated">Hágame saber si tiene alguna pregunta.</target>
        </trans-unit>
        <trans-unit id="eb7d999e07b1970c76f70121da876b6c2277edcc" translate="yes" xml:space="preserve">
          <source>Let's say we have &lt;strong&gt;Page&lt;/strong&gt; class to deserialize given json data.</source>
          <target state="translated">Digamos que tenemos una clase de &lt;strong&gt;p&amp;aacute;gina&lt;/strong&gt; para deserializar datos json dados.</target>
        </trans-unit>
        <trans-unit id="3d575f5e4334f1ec638628bfc8458d0aaaae4399" translate="yes" xml:space="preserve">
          <source>Maven:</source>
          <target state="translated">Maven:</target>
        </trans-unit>
        <trans-unit id="68c2cc7f0ceaa3e499ecb4db331feb4debbbcc23" translate="yes" xml:space="preserve">
          <source>Model</source>
          <target state="translated">Model</target>
        </trans-unit>
        <trans-unit id="cf9db3cb2277b774f7e804d9f63363f022644951" translate="yes" xml:space="preserve">
          <source>My personal favourite as to the great JSON serialisation / de-serialisation of objects.</source>
          <target state="translated">Mi favorito personal en cuanto a la gran des-serialización de objetos de JSON.</target>
        </trans-unit>
        <trans-unit id="bce347b8b84e91a762a886a1d5505fcc68cb0f69" translate="yes" xml:space="preserve">
          <source>No dependency on external libraries</source>
          <target state="translated">No hay dependencia de bibliotecas externas</target>
        </trans-unit>
        <trans-unit id="fd5a170699b9eb4b30561cd70cabb9b28942c677" translate="yes" xml:space="preserve">
          <source>Now you can parse using Gson library:</source>
          <target state="translated">Ahora puedes analizar usando la biblioteca Gson:</target>
        </trans-unit>
        <trans-unit id="a484f9dc3e0f6afa1adeb91f3dbdf89f99016e46" translate="yes" xml:space="preserve">
          <source>Now, before anyone goes and downvotes this answer because it doesn't use GSON, org.json, Jackson, or any of the other 3rd party frameworks available, it's an example of &quot;required code&quot; per the question to parse the provided text.  I am well aware that &lt;a href=&quot;http://openjdk.java.net/jeps/198&quot;&gt;adherence to the current standard JSR 353 was not being considered for JDK 9&lt;/a&gt; and as such the &lt;a href=&quot;https://jcp.org/en/jsr/detail?id=353&quot;&gt;JSR 353 spec&lt;/a&gt; should be treated the same as any other 3rd party JSON handling implementation.</source>
          <target state="translated">Ahora, antes de que alguien vaya y rechace esta respuesta porque no usa GSON, org.json, Jackson o cualquiera de los otros marcos de terceros disponibles, es un ejemplo de &quot;c&amp;oacute;digo requerido&quot; seg&amp;uacute;n la pregunta para analizar el texto proporcionado. Soy consciente de que la &lt;a href=&quot;http://openjdk.java.net/jeps/198&quot;&gt;adhesi&amp;oacute;n al est&amp;aacute;ndar JSR 353 actual no se estaba considerando para JDK 9&lt;/a&gt; y, como tal, la &lt;a href=&quot;https://jcp.org/en/jsr/detail?id=353&quot;&gt;especificaci&amp;oacute;n JSR 353&lt;/a&gt; deber&amp;iacute;a tratarse de la misma manera que cualquier otra implementaci&amp;oacute;n de manejo de JSON de terceros.</target>
        </trans-unit>
        <trans-unit id="9bf41a6d92f4678e2f2e1714e549e74448f091ce" translate="yes" xml:space="preserve">
          <source>Now, use this object to get your values:</source>
          <target state="translated">Ahora,usa este objeto para obtener tus valores:</target>
        </trans-unit>
        <trans-unit id="7e2ce87913736a80d592df235669758288745cc1" translate="yes" xml:space="preserve">
          <source>One can use &lt;a href=&quot;https://github.com/apache/incubator-netbeans-html4j&quot;&gt;Apache @Model annotation&lt;/a&gt; to create &lt;strong&gt;Java&lt;/strong&gt; model classes representing structure of &lt;strong&gt;JSON&lt;/strong&gt; files and use them to access various elements in the &lt;strong&gt;JSON&lt;/strong&gt; tree. Unlike other solutions this one &lt;em&gt;works completely without reflection&lt;/em&gt; and is thus suitable for environments where reflection is impossible or comes with significant overhead.</source>
          <target state="translated">Se puede usar la &lt;a href=&quot;https://github.com/apache/incubator-netbeans-html4j&quot;&gt;anotaci&amp;oacute;n Apache @Model&lt;/a&gt; para crear clases de modelos &lt;strong&gt;Java&lt;/strong&gt; que representan la estructura de los archivos &lt;strong&gt;JSON&lt;/strong&gt; y usarlos para acceder a varios elementos en el &amp;aacute;rbol &lt;strong&gt;JSON&lt;/strong&gt; . A diferencia de otras soluciones, esta &lt;em&gt;funciona completamente sin reflexi&amp;oacute;n&lt;/em&gt; y, por lo tanto, es adecuada para entornos donde la reflexi&amp;oacute;n es imposible o conlleva una sobrecarga significativa.</target>
        </trans-unit>
        <trans-unit id="dff366f935f687805e17e00bde34355d9df3edef" translate="yes" xml:space="preserve">
          <source>Page class</source>
          <target state="translated">Clase de página</target>
        </trans-unit>
        <trans-unit id="7294d33710169103141018bfcb0ee5ad3daa81e2" translate="yes" xml:space="preserve">
          <source>Parsing</source>
          <target state="translated">Parsing</target>
        </trans-unit>
        <trans-unit id="33e92b6b98157a0b3e332d3aff1d2cdddbdcc5a2" translate="yes" xml:space="preserve">
          <source>Parsing:</source>
          <target state="translated">Parsing:</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="78567b320dd5ce717616b908847878e0a7b0a67c" translate="yes" xml:space="preserve">
          <source>Please do something like this:</source>
          <target state="translated">Por favor,haz algo como esto:</target>
        </trans-unit>
        <trans-unit id="2e3e17743adee6ed5daa287a499018808e01b737" translate="yes" xml:space="preserve">
          <source>Please follow the below steps.</source>
          <target state="translated">Por favor,siga los siguientes pasos.</target>
        </trans-unit>
        <trans-unit id="06a02c250ba2e9a5ec6d861f17aa8cad8565b535" translate="yes" xml:space="preserve">
          <source>Pluggable Custom Validation support - Keys/Values can be validated by configuring custom validators as and when encountered</source>
          <target state="translated">Soporte de validación personalizada enchufable-KeysValues puede ser validado configurando los validadores personalizados como y cuando se encuentren</target>
        </trans-unit>
        <trans-unit id="37f53753a64b29e001d0ac82c818162cc4fdeacc" translate="yes" xml:space="preserve">
          <source>Quick takeaway of the benchmark: &lt;strong&gt;Jackson&lt;/strong&gt; performs 5 to 6 times better than org.json and more than twice better than GSON.</source>
          <target state="translated">Conclusi&amp;oacute;n r&amp;aacute;pida del punto de referencia: &lt;strong&gt;Jackson se&lt;/strong&gt; desempe&amp;ntilde;a 5 a 6 veces mejor que org.json y m&amp;aacute;s del doble que GSON.</target>
        </trans-unit>
        <trans-unit id="5196b11c8315c8990c058efb8fc0fb14bee4e072" translate="yes" xml:space="preserve">
          <source>Raises developer friendly and easy to trace exceptions</source>
          <target state="translated">Aumenta las excepciones para los desarrolladores y es fácil de rastrear.</target>
        </trans-unit>
        <trans-unit id="a7b6bb6b6a7622460165f03ea7d746ba932816dd" translate="yes" xml:space="preserve">
          <source>Read the following blog post, &lt;a href=&quot;http://javahai.blogspot.in/2016/03/create-java-object-from-json-string.html&quot;&gt;JSON in Java&lt;/a&gt;.</source>
          <target state="translated">Lea la siguiente publicaci&amp;oacute;n de blog, &lt;a href=&quot;http://javahai.blogspot.in/2016/03/create-java-object-from-json-string.html&quot;&gt;JSON en Java&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9ba33b97f81c7d33f86a74e8b5ced42856b9b058" translate="yes" xml:space="preserve">
          <source>Remember to import the library in the app Gradle file</source>
          <target state="translated">Recuerde que debe importar la biblioteca en el archivo de la manzana Gradle</target>
        </trans-unit>
        <trans-unit id="8f09413ed3181ec583f8fe8a75d11dd2246abc05" translate="yes" xml:space="preserve">
          <source>Requires JDK 1.5</source>
          <target state="translated">Requisitos JDK 1.5</target>
        </trans-unit>
        <trans-unit id="aeac71ea0fd2ec62ec82e35cfa2b5656823dc3f1" translate="yes" xml:space="preserve">
          <source>Retrieve just one needed attribute</source>
          <target state="translated">Recuperar sólo un atributo necesario</target>
        </trans-unit>
        <trans-unit id="747797349181f1717cb1e6154cba08113cc22a2d" translate="yes" xml:space="preserve">
          <source>Running the call a million times using &lt;strong&gt;Nashorn&lt;/strong&gt; takes 7.5~7.8 seconds</source>
          <target state="translated">Ejecutar la llamada un mill&amp;oacute;n de veces usando &lt;strong&gt;Nashorn&lt;/strong&gt; toma 7.5 ~ 7.8 segundos</target>
        </trans-unit>
        <trans-unit id="6d5f28546a36aa1ca02116c9ecd7d308a81aec26" translate="yes" xml:space="preserve">
          <source>Sample data:</source>
          <target state="translated">Datos de la muestra:</target>
        </trans-unit>
        <trans-unit id="f984f1b22f545290ce43e2c70ffa6a52b1e2353c" translate="yes" xml:space="preserve">
          <source>Since nobody mentioned it yet, here is a beginning of a solution using &lt;a href=&quot;http://openjdk.java.net/projects/nashorn/&quot;&gt;Nashorn&lt;/a&gt; (JavaScript runtime part of Java 8, but deprecated in Java 11).</source>
          <target state="translated">Como nadie lo mencion&amp;oacute; todav&amp;iacute;a, aqu&amp;iacute; hay un comienzo de una soluci&amp;oacute;n que usa &lt;a href=&quot;http://openjdk.java.net/projects/nashorn/&quot;&gt;Nashorn&lt;/a&gt; (JavaScript runtime parte de Java 8, pero obsoleto en Java 11).</target>
        </trans-unit>
        <trans-unit id="65201ee692e303421c8629f7432b4ea90f8187bb" translate="yes" xml:space="preserve">
          <source>So basically to use it, add it to your project, eg:</source>
          <target state="translated">Así que básicamente para usarlo,añádelo a tu proyecto,por ejemplo:</target>
        </trans-unit>
        <trans-unit id="fa4cda1b6f05e89b3e0fb913778da8d50fea28cf" translate="yes" xml:space="preserve">
          <source>So this is the JSON returned by Google Translate API:</source>
          <target state="translated">Así que este es el JSON devuelto por el API de Google Translate:</target>
        </trans-unit>
        <trans-unit id="61b0bb62aebfcdd9ea3216424e2be71fc16d3f18" translate="yes" xml:space="preserve">
          <source>So we have to create three different POJO classes;</source>
          <target state="translated">Así que tenemos que crear tres clases diferentes de POJO;</target>
        </trans-unit>
        <trans-unit id="0b15f607ce4802b8168dc099d186021a765ea7ae" translate="yes" xml:space="preserve">
          <source>Specifically for JSON libraries (and any serialization/deserialization libs), databinding is also usually of interest as it removes the need of writing boiler-plate code to pack/unpack the data.</source>
          <target state="translated">Específicamente para las bibliotecas JSON (y cualquier librería de serialización-deserialización),la vinculación de bases de datos también suele ser de interés,ya que elimina la necesidad de escribir código de calderas para empaquetar los datos.</target>
        </trans-unit>
        <trans-unit id="c4a8ec5fbf826704a452d2ff8dc55a69f8d01117" translate="yes" xml:space="preserve">
          <source>Step 1: Create a POJO class of your data.</source>
          <target state="translated">Paso 1:Crear una clase POJO de sus datos.</target>
        </trans-unit>
        <trans-unit id="f256c7c1bed808e53ff3cb16960966d3aaf1e80d" translate="yes" xml:space="preserve">
          <source>Step 2: Now create a object using JSON.</source>
          <target state="translated">Paso 2:Ahora crea un objeto usando JSON.</target>
        </trans-unit>
        <trans-unit id="f0fcfae11fa1883d14c0d9809e80909475c86ff6" translate="yes" xml:space="preserve">
          <source>Support for JSON Generation through object serialisation</source>
          <target state="translated">Apoyo a la generación JSON a través de la serialización de objetos</target>
        </trans-unit>
        <trans-unit id="7eb03cadb2fc7eb966c242ad99350591d8b0f6d8" translate="yes" xml:space="preserve">
          <source>Support for collection type selection during parsing process</source>
          <target state="translated">Apoyo a la selección del tipo de colección durante el proceso de análisis sintáctico</target>
        </trans-unit>
        <trans-unit id="afac24cd0f87a58c47d5ce59dda54327482583d2" translate="yes" xml:space="preserve">
          <source>Support for two types of configuration (JSON/XML) for using quick-JSON validating parser</source>
          <target state="translated">Soporte para dos tipos de configuración (JSONXML)para usar el analizador de validación JSON rápido</target>
        </trans-unit>
        <trans-unit id="d83e899da1f3b82cb28cd3141bdeff7abe873c2c" translate="yes" xml:space="preserve">
          <source>Supports Flexible/Configurable parsing approach</source>
          <target state="translated">Soporta el enfoque de análisis flexible y configurable</target>
        </trans-unit>
        <trans-unit id="50a6c9deb20f64043205b5e165c63d8709b1e139" translate="yes" xml:space="preserve">
          <source>That is it! In addition to that here is a &lt;a href=&quot;http://dew.apidesign.org/dew/#7138581&quot;&gt;live gist&lt;/a&gt; showing similar example together with asynchronous network communication.</source>
          <target state="translated">&amp;iexcl;Eso es! Adem&amp;aacute;s de eso, aqu&amp;iacute; hay un &lt;a href=&quot;http://dew.apidesign.org/dew/#7138581&quot;&gt;resumen en vivo que&lt;/a&gt; muestra un ejemplo similar junto con la comunicaci&amp;oacute;n de red as&amp;iacute;ncrona.</target>
        </trans-unit>
        <trans-unit id="e948eed3f7c58d6a508c2ea8ef03c2e28ca93572" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.jsonschema2pojo.org/&quot;&gt;jsonschema2pojo.org&lt;/a&gt; for GSON generated:</source>
          <target state="translated">El &lt;a href=&quot;http://www.jsonschema2pojo.org/&quot;&gt;jsonschema2pojo.org&lt;/a&gt; para GSON gener&amp;oacute;:</target>
        </trans-unit>
        <trans-unit id="e2c1a81b0b1db4f644b2eaf11f5657efbdc2422c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/stleary/JSON-java&quot;&gt;org.json&lt;/a&gt; library is easy to use. Example code below:</source>
          <target state="translated">La biblioteca &lt;a href=&quot;https://github.com/stleary/JSON-java&quot;&gt;org.json&lt;/a&gt; es f&amp;aacute;cil de usar. C&amp;oacute;digo de ejemplo a continuaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="a4a83b11267f4452d16f9ed523cdf2d6db64dafa" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Java API for JSON Processing (JSR 353)&lt;/strong&gt; provides portable APIs to parse, generate, transform, and query JSON using object model and streaming APIs.</source>
          <target state="translated">La &lt;strong&gt;API Java para el procesamiento JSON (JSR 353)&lt;/strong&gt; proporciona API port&amp;aacute;tiles para analizar, generar, transformar y consultar JSON utilizando el modelo de objetos y las API de transmisi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7952a2393450285e76fd98aa15897de2bc703396" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;reference implementation&lt;/strong&gt; is here: &lt;a href=&quot;https://jsonp.java.net/&quot;&gt;https://jsonp.java.net/&lt;/a&gt;</source>
          <target state="translated">La &lt;strong&gt;implementaci&amp;oacute;n de referencia&lt;/strong&gt; est&amp;aacute; aqu&amp;iacute;: &lt;a href=&quot;https://jsonp.java.net/&quot;&gt;https://jsonp.java.net/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5728e0be6d0ee1ae0d0ddf88386b3d07df6e2a14" translate="yes" xml:space="preserve">
          <source>The below example shows how to read the text in the question, represented as the &quot;jsonText&quot; variable.  This solution uses the Java EE7 &lt;a href=&quot;http://docs.oracle.com/javaee/7/api/javax/json/package-summary.html&quot;&gt;javax.json&lt;/a&gt; API (which is mentioned in some of the other answers).  The reason I've added it as a separate answer is that the following code shows how to &lt;em&gt;actually&lt;/em&gt; access some of the values shown in the question.  An &lt;a href=&quot;https://jsonp.java.net/download.html&quot;&gt;implementation of the javax.json API&lt;/a&gt; would be required to make this code run.  The full package for each of the classes required was included as I didn't want to declare &quot;import&quot; statements.</source>
          <target state="translated">El siguiente ejemplo muestra c&amp;oacute;mo leer el texto en la pregunta, representada como la variable &quot;jsonText&quot;. Esta soluci&amp;oacute;n utiliza la API Java EE7 &lt;a href=&quot;http://docs.oracle.com/javaee/7/api/javax/json/package-summary.html&quot;&gt;javax.json&lt;/a&gt; (que se menciona en algunas de las otras respuestas). La raz&amp;oacute;n por la que lo agregu&amp;eacute; como una respuesta separada es que el siguiente c&amp;oacute;digo muestra c&amp;oacute;mo acceder &lt;em&gt;realmente&lt;/em&gt; a algunos de los valores que se muestran en la pregunta. Se &lt;a href=&quot;https://jsonp.java.net/download.html&quot;&gt;necesitar&amp;iacute;a&lt;/a&gt; una implementaci&amp;oacute;n de la API javax.json para ejecutar este c&amp;oacute;digo. Se incluy&amp;oacute; el paquete completo para cada una de las clases requeridas, ya que no quer&amp;iacute;a declarar declaraciones de &quot;importaci&amp;oacute;n&quot;.</target>
        </trans-unit>
        <trans-unit id="f5634c0efba44765ff890cad41d8be7ab547400a" translate="yes" xml:space="preserve">
          <source>The most notorious ones are: Jackson, GSON, Genson, FastJson and org.json.</source>
          <target state="translated">Los más notorios son:Jackson,GSON,Genson,FastJson y org.json.</target>
        </trans-unit>
        <trans-unit id="23fffe987d93f66048ec9ac769e5dd36c834f920" translate="yes" xml:space="preserve">
          <source>The only package I've used is Jackson ObjectMapper, what we do is binding data;</source>
          <target state="translated">El único paquete que he usado es el Jackson ObjectMapper,lo que hacemos es vincular datos;</target>
        </trans-unit>
        <trans-unit id="808091f429ed669a8665cfed3ed98b2d4c2f6f6e" translate="yes" xml:space="preserve">
          <source>The required dependencies, the jar files is listed below;</source>
          <target state="translated">Las dependencias requeridas,los archivos del frasco se enumeran a continuación;</target>
        </trans-unit>
        <trans-unit id="1fe5f9a38a375f6340eae1fa099d8dd1c4d26367" translate="yes" xml:space="preserve">
          <source>There are many JSON libraries available in Java.</source>
          <target state="translated">Hay muchas bibliotecas JSON disponibles en Java.</target>
        </trans-unit>
        <trans-unit id="cd7f393468d8ac71394cdc687baab38627b89b2c" translate="yes" xml:space="preserve">
          <source>There are many open source libraries present to parse JSON content to an object or just to read JSON values. Your requirement is just to read values and parsing it to custom object. So org.json library is enough in your case.</source>
          <target state="translated">Hay muchas bibliotecas de código abierto presentes para analizar el contenido de JSON a un objeto o sólo para leer los valores de JSON.Su requisito es sólo leer los valores y analizarlos en un objeto personalizado.Así que la biblioteca org.json es suficiente en tu caso.</target>
        </trans-unit>
        <trans-unit id="3beded183424f6ed0877466312d0466c173e267a" translate="yes" xml:space="preserve">
          <source>There are typically three things one should look at for choosing any library:</source>
          <target state="translated">Típicamente hay tres cosas que uno debe mirar para elegir cualquier biblioteca:</target>
        </trans-unit>
        <trans-unit id="3ccd26c78ba65de44475356a712b29bac1c5371b" translate="yes" xml:space="preserve">
          <source>There is a &lt;a href=&quot;https://github.com/JaroslavTulach/incubator-netbeans-html4j/blob/examples/examples/jsonparse/README.md&quot;&gt;sample Maven project&lt;/a&gt; showing the usage. First of all it defines the structure:</source>
          <target state="translated">Hay un &lt;a href=&quot;https://github.com/JaroslavTulach/incubator-netbeans-html4j/blob/examples/examples/jsonparse/README.md&quot;&gt;proyecto de muestra de Maven que&lt;/a&gt; muestra el uso. En primer lugar, define la estructura:</target>
        </trans-unit>
        <trans-unit id="a84dada52a2d88cfaf4879a9ebff060f7ba639b3" translate="yes" xml:space="preserve">
          <source>These APIs actually follow the DOM/SAX parsing model of XML.</source>
          <target state="translated">Estas APIs en realidad siguen el modelo de análisis DOMSAX de XML.</target>
        </trans-unit>
        <trans-unit id="f283c6a2c2d8218ba8199b2fc76c55313954c0ec" translate="yes" xml:space="preserve">
          <source>This blew my mind with how easy it was. You can just pass a &lt;code&gt;String&lt;/code&gt; holding your JSON to the constructor of a JSONObject in the default org.json package.</source>
          <target state="translated">Esto me dej&amp;oacute; alucinado con lo f&amp;aacute;cil que fue. Simplemente puede pasar una &lt;code&gt;String&lt;/code&gt; que contenga su JSON al constructor de un JSONObject en el paquete org.json predeterminado.</target>
        </trans-unit>
        <trans-unit id="5993f0df1bb4be49ad42ceb63ecf7fd4d774f862" translate="yes" xml:space="preserve">
          <source>This post is a little bit old, but still I want to answer you question.</source>
          <target state="translated">Este post es un poco viejo,pero aún así quiero responder a tu pregunta.</target>
        </trans-unit>
        <trans-unit id="1744e31c7b17d23ecbea63ae91f72b82d93a03ec" translate="yes" xml:space="preserve">
          <source>Top answers on this page use too simple examples like object with one property (e.g. {name: value}). I think that still simple but real life example can help someone.</source>
          <target state="translated">Las respuestas de esta página utilizan ejemplos demasiado simples como el objeto con una propiedad (por ejemplo,{nombre:valor}).Creo que un ejemplo simple pero real puede ayudar a alguien.</target>
        </trans-unit>
        <trans-unit id="e08928c6100c5f26a6c10dcf288c804025b48e95" translate="yes" xml:space="preserve">
          <source>Two possible approaches:</source>
          <target state="translated">Dos posibles enfoques:</target>
        </trans-unit>
        <trans-unit id="cc14179c743382808f9e74d4e9ec10a570710306" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://github.com/ralfstx/minimal-json&quot;&gt;minimal-json&lt;/a&gt; which is very fast and easy to use.
You can parse from String obj and Stream.</source>
          <target state="translated">Use &lt;a href=&quot;https://github.com/ralfstx/minimal-json&quot;&gt;minimal-json,&lt;/a&gt; que es muy r&amp;aacute;pido y f&amp;aacute;cil de usar. Puede analizar desde String obj y Stream.</target>
        </trans-unit>
        <trans-unit id="9a4a7774e7a2a8f2cd9dd46a13350306f9b613c0" translate="yes" xml:space="preserve">
          <source>Use DSM to extract fields.</source>
          <target state="translated">Usar el DSM para extraer los campos.</target>
        </trans-unit>
        <trans-unit id="de80861d34aeb2ec7058638972e4a0316739e902" translate="yes" xml:space="preserve">
          <source>Use org.json library to parse it and create JsonObject:</source>
          <target state="translated">Usa la biblioteca org.json para analizarla y crear JsonObject:</target>
        </trans-unit>
        <trans-unit id="d5ecf0ed037efb9183e2f08bdb08774b7852d7dc" translate="yes" xml:space="preserve">
          <source>Using this library you only need to create a model with the same JSON structure. Then the model is automatically filled in. You have to call your variables as your JSON keys, or use &lt;a href=&quot;https://www.javadoc.io/doc/com.google.code.gson/gson/latest/com.google.gson/com/google/gson/annotations/SerializedName.html&quot;&gt;&lt;code&gt;@SerializedName&lt;/code&gt;&lt;/a&gt; if you want to use different names.</source>
          <target state="translated">Con esta biblioteca, solo necesita crear un modelo con la misma estructura JSON. Luego, el modelo se completa autom&amp;aacute;ticamente. &lt;a href=&quot;https://www.javadoc.io/doc/com.google.code.gson/gson/latest/com.google.gson/com/google/gson/annotations/SerializedName.html&quot;&gt; &lt;code&gt;@SerializedName&lt;/code&gt; &lt;/a&gt; llamar a sus variables como sus claves JSON, o usar @SerializedName si desea usar nombres diferentes.</target>
        </trans-unit>
        <trans-unit id="ce452f49a22173c844854192c968edd7b0ab91dd" translate="yes" xml:space="preserve">
          <source>Validating and Non-Validating parser support</source>
          <target state="translated">Validación y no validación del soporte de parser</target>
        </trans-unit>
        <trans-unit id="f56c314abd8f309e656f2b1afa4819e8b22a6b2a" translate="yes" xml:space="preserve">
          <source>We can use the JSONObject class to convert a JSON string to a JSON object,
and to iterate over the JSON object. Use the following code.</source>
          <target state="translated">Podemos usar la clase JSONObjecto para convertir una cadena JSON en un objeto JSON,y para iterar sobre el objeto JSON.Utiliza el siguiente código.</target>
        </trans-unit>
        <trans-unit id="d39e447fecdad1f90b83cab9cdabcd361a315fcd" translate="yes" xml:space="preserve">
          <source>What are the API that does implement JSR-353 (JSON)</source>
          <target state="translated">¿Cuáles son las API que implementan JSR-353 (JSON)</target>
        </trans-unit>
        <trans-unit id="494e0a51f1cb85162e2e1d6c23583e1a1c2940ad" translate="yes" xml:space="preserve">
          <source>You can also loop through the &quot;posts&quot; array as so:</source>
          <target state="translated">También puedes hacer un bucle a través de la matriz de &quot;posts&quot; como tal:</target>
        </trans-unit>
        <trans-unit id="2286851d16c9f677feb653c1051894fb28e1f3ee" translate="yes" xml:space="preserve">
          <source>You can generate model from JSON automatically using online tools like &lt;a href=&quot;http://www.jsonschema2pojo.org/&quot;&gt;this&lt;/a&gt;.</source>
          <target state="translated">Puede generar modelos desde JSON autom&amp;aacute;ticamente utilizando herramientas en l&amp;iacute;nea como &lt;a href=&quot;http://www.jsonschema2pojo.org/&quot;&gt;esta&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f22b2364e92a604b636eb1af775cc217bf949a8b" translate="yes" xml:space="preserve">
          <source>You can see a complete example here:</source>
          <target state="translated">Puedes ver un ejemplo completo aquí:</target>
        </trans-unit>
        <trans-unit id="3871d2c5232d22375b0eeb6345c2e283ed7f4bcb" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;https://mfatihercik.github.io/dsm&quot;&gt;DSM&lt;/a&gt; stream parsing library for parsing complex json and XML document. DSM parse data only once and not load all data into memory.</source>
          <target state="translated">Puede utilizar la biblioteca de an&amp;aacute;lisis de flujo de &lt;a href=&quot;https://mfatihercik.github.io/dsm&quot;&gt;DSM&lt;/a&gt; para analizar documentos json y XML complejos. DSM analiza los datos solo una vez y no carga todos los datos en la memoria.</target>
        </trans-unit>
        <trans-unit id="51dae0bf3fc8f570a97d4e9a63b4e622ad88275b" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;JsonNode&lt;/code&gt; for a structured tree representation of your JSON string. It's part of the rock solid &lt;a href=&quot;https://github.com/FasterXML/jackson&quot;&gt;&lt;em&gt;jackson&lt;/em&gt; library&lt;/a&gt; which is omnipresent.</source>
          <target state="translated">Puede usar &lt;code&gt;JsonNode&lt;/code&gt; para una representaci&amp;oacute;n de &amp;aacute;rbol estructurado de su cadena JSON. Es parte de la s&amp;oacute;lida &lt;a href=&quot;https://github.com/FasterXML/jackson&quot;&gt;biblioteca de &lt;em&gt;Jackson&lt;/em&gt;&lt;/a&gt; que es omnipresente.</target>
        </trans-unit>
        <trans-unit id="1739b37566f3eb9d69fdcaeff614eee0838dd678" translate="yes" xml:space="preserve">
          <source>You can use &lt;strong&gt;Jackson&lt;/strong&gt; libraries, for binding JSON String into &lt;strong&gt;POJO&lt;/strong&gt; (&lt;strong&gt;&lt;em&gt;Plain Old Java Object&lt;/em&gt;&lt;/strong&gt;) instances. POJO is simply a class with only private fields and public getter/setter methods. Jackson is going to traverse the methods (using &lt;strong&gt;reflection&lt;/strong&gt;), and maps the JSON object into the POJO instance as the field names of the class fits to the field names of the JSON object.</source>
          <target state="translated">Puede usar las bibliotecas de &lt;strong&gt;Jackson&lt;/strong&gt; , para vincular la cadena JSON en instancias de &lt;strong&gt;POJO&lt;/strong&gt; ( &lt;strong&gt;&lt;em&gt;Objeto Java antiguo simple&lt;/em&gt;&lt;/strong&gt; ). POJO es simplemente una clase con solo campos privados y m&amp;eacute;todos p&amp;uacute;blicos getter / setter. Jackson va a atravesar los m&amp;eacute;todos (usando la &lt;strong&gt;reflexi&amp;oacute;n&lt;/strong&gt; ), y asigna el objeto JSON a la instancia de POJO a medida que los nombres de campo de la clase se ajustan a los nombres de campo del objeto JSON.</target>
        </trans-unit>
        <trans-unit id="1833a7fcec164db264b95fc3f2c7116552f703f3" translate="yes" xml:space="preserve">
          <source>You can use &lt;strong&gt;Jayway JsonPath&lt;/strong&gt;. Below is a GitHub link with source code, pom details and good documentation.</source>
          <target state="translated">Puedes usar &lt;strong&gt;Jayway JsonPath&lt;/strong&gt; . A continuaci&amp;oacute;n se muestra un enlace de GitHub con c&amp;oacute;digo fuente, detalles de pom y buena documentaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="27feb53b95d6cc0a8e5dbfe7c29a6b57cd36577c" translate="yes" xml:space="preserve">
          <source>You can use the Gson Library to parse the JSON string.</source>
          <target state="translated">Puedes usar la Biblioteca Gson para analizar la cadena JSON.</target>
        </trans-unit>
        <trans-unit id="829d83a3ff692e4b324b2503fa7e9625db4df88a" translate="yes" xml:space="preserve">
          <source>You could use &lt;a href=&quot;https://github.com/google/gson&quot;&gt;Google Gson&lt;/a&gt;.</source>
          <target state="translated">Podr&amp;iacute;as usar &lt;a href=&quot;https://github.com/google/gson&quot;&gt;Google Gson&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="18f0351dcd2f2cc886942c22f5380be9b3d6b2ad" translate="yes" xml:space="preserve">
          <source>You may find more examples from: &lt;a href=&quot;http://theoryapp.com/parse-json-in-java/&quot;&gt;Parse JSON in Java&lt;/a&gt;</source>
          <target state="translated">Puede encontrar m&amp;aacute;s ejemplos de: &lt;a href=&quot;http://theoryapp.com/parse-json-in-java/&quot;&gt;Parse JSON en Java&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e15bb5c01e7dd56499e37c634cf791d3a519aee" translate="yes" xml:space="preserve">
          <source>`</source>
          <target state="translated">`</target>
        </trans-unit>
        <trans-unit id="c4c7bfd2eb4f931d7799bfe2622f04431fafc657" translate="yes" xml:space="preserve">
          <source>and from message object you can fetch any of its attribute.</source>
          <target state="translated">y del objeto del mensaje puedes obtener cualquiera de sus atributos.</target>
        </trans-unit>
        <trans-unit id="cf207c66af7e6aad1158ac914cd0992bc4f2b6bf" translate="yes" xml:space="preserve">
          <source>and then it uses the generated RepositoryInfo and Owner classes to parse the provided input stream and pick certain information up while doing that:</source>
          <target state="translated">y luego utiliza las clases generadas RepositoryInfo y Owner para analizar el flujo de entrada proporcionado y recoger cierta información mientras lo hace:</target>
        </trans-unit>
        <trans-unit id="8e3d482d85fad29be0fda23ab59f7468fbda5329" translate="yes" xml:space="preserve">
          <source>and to use:</source>
          <target state="translated">y para usar:</target>
        </trans-unit>
        <trans-unit id="5e9b496a0935b15e72709835275b0a4dd4c2a1c6" translate="yes" xml:space="preserve">
          <source>etc...</source>
          <target state="translated">etc...</target>
        </trans-unit>
        <trans-unit id="161f626fb46e32dc28bb28ba0e99d92b77a220a5" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;jsonData&lt;/code&gt; is a string of json data.</source>
          <target state="translated">donde &lt;code&gt;jsonData&lt;/code&gt; es una cadena de datos json.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
