<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/25203556">
    <body>
      <group id="25203556">
        <trans-unit id="c510d2e3eb78822e59de418242697b0036a06cff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;APIClient Initial Interface&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Interfaz inicial APIClient&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0fbc4cfbb8ed3c2e9e2e87bc959f96f26da6f10a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Completion Handler&lt;/strong&gt;
Inside set of block is executed and returned when source is available, Handler will wait until response comes so that UI can be updated after.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Controlador de finalizaci&amp;oacute;n El&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; conjunto interno de bloque se ejecuta y se devuelve cuando la fuente est&amp;aacute; disponible, el controlador esperar&amp;aacute; hasta que llegue la respuesta para que la IU pueda actualizarse despu&amp;eacute;s.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="96be8c32566abc60744917724e7efde3788f70b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Delegates&lt;/strong&gt;
Set of methods will get triggered when delegate is been called, Source must be provided via methods itself</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Delegados El&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; conjunto de m&amp;eacute;todos se activar&amp;aacute; cuando se llame al delegado. La fuente se debe proporcionar a trav&amp;eacute;s de los m&amp;eacute;todos mismos&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a52349be59d2dc0787abf428431179d1c994582" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Notification&lt;/strong&gt;
Bunch of information is triggered over all the app, Listner can retrieve n make use of that info. Async way of getting info through out the project.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Notificaci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Se activa un mont&amp;oacute;n de informaci&amp;oacute;n en toda la aplicaci&amp;oacute;n, Listner puede recuperar y hacer uso de esa informaci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Manera asincr&amp;oacute;nica de obtener informaci&amp;oacute;n a trav&amp;eacute;s del proyecto.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30e598d68bea586c7b116fd407356708bc4f521f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Swift 4.0&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Swift 4.0&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f61d88d5c22ed9179275db42ae2b2a5f30ba3e95" translate="yes" xml:space="preserve">
          <source>An alternative approach would be to return a callback that will provide the data you need as soon as it is ready.</source>
          <target state="translated">Un enfoque alternativo sería devolver una llamada que le proporcione los datos que necesita tan pronto como esté lista.</target>
        </trans-unit>
        <trans-unit id="7ebbab529e9a4820968d3b93810887172271b741" translate="yes" xml:space="preserve">
          <source>And you&amp;rsquo;d call it like so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Y lo llamar&amp;iacute;as as&amp;iacute;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67c377687d3900d9ca07b9ce4951a6e91f755ee8" translate="yes" xml:space="preserve">
          <source>But that&amp;rsquo;s not material here. The key issue is the use of completion handler to specify the block of code to be run when the asynchronous request is done.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero eso no es material aqu&amp;iacute;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La cuesti&amp;oacute;n clave es el uso del controlador de finalizaci&amp;oacute;n para especificar el bloque de c&amp;oacute;digo que se ejecutar&amp;aacute; cuando se realice la solicitud asincr&amp;oacute;nica.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="154376a656eb7c75db283f478a773723f9e32779" translate="yes" xml:space="preserve">
          <source>Closures/Completion handler</source>
          <target state="translated">CierresManejador de cierre</target>
        </trans-unit>
        <trans-unit id="7dcccba4f8856a9df41efcf1d5ea4f2cfd327cec" translate="yes" xml:space="preserve">
          <source>Delegates</source>
          <target state="translated">Delegates</target>
        </trans-unit>
        <trans-unit id="f9bdfe712ac0a387c156acf24c7385e968fd6f97" translate="yes" xml:space="preserve">
          <source>For async Request-Response you can use completion handler. See below I have modified the solution with completion handle paradigm.</source>
          <target state="translated">Para la solicitud-respuesta de sincronización puedes usar el manejador de finalización.A continuación he modificado el paradigma de la solución con el manejador de finalización.</target>
        </trans-unit>
        <trans-unit id="4342310e3ebcfb54bffb8ea8cecbe88a2d6082f6" translate="yes" xml:space="preserve">
          <source>For example, in the forthcoming Swift 5, you&amp;rsquo;d use &lt;code&gt;Result&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo, en el pr&amp;oacute;ximo Swift 5, usar&amp;iacute;as &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Result&lt;/code&gt; ado&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="377ea4eb3ce60143f054182667aa0740de1f96a3" translate="yes" xml:space="preserve">
          <source>Hopefully will expand to a full Scala-style Promise eventually (I may write it myself at some point; I'm sure other PRs would be welcome; it's not that difficult with Future already in place).</source>
          <target state="translated">Con suerte se expandirá a una Promesa completa al estilo de Scala eventualmente (puedo escribirla yo mismo en algún momento;estoy seguro de que otras relaciones públicas serían bienvenidas;no es tan difícil con el Futuro ya en marcha).</target>
        </trans-unit>
        <trans-unit id="5a5285ec992e236e3e4c7bcc18b2ff2534c226cf" translate="yes" xml:space="preserve">
          <source>I do not recommend prefixing functions with &lt;code&gt;get&lt;/code&gt; in Swift. It will break certain kinds of interoperability with ObjC.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No recomiendo funciones de prefijo con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;get&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en Swift. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Romper&amp;aacute; ciertos tipos de interoperabilidad con ObjC.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eb97f7bf2cc0145e0d62c3441b05976a5078b82b" translate="yes" xml:space="preserve">
          <source>I have created a utility class in my Swift project that handles all the REST requests and responses. I have built a simple REST API so I can test my code. I have created a class method that needs to return an NSArray but because the API call is async I need to return from the method inside the async call. The problem is the async returns void.
If I were doing this in Node I would use JS promises but I can't figure out a solution that works in Swift.</source>
          <target state="translated">He creado una clase de utilidad en mi proyecto Swift que se encarga de todas las solicitudes y respuestas de REST.He construido una sencilla API de REST para poder probar mi código.He creado un método de clase que necesita devolver un NSArray pero como la llamada a la API es async necesito devolver desde el método dentro de la llamada async.El problema es que async devuelve vacío.Si estuviera haciendo esto en Node usaría las promesas de JS pero no puedo encontrar una solución que funcione en Swift.</target>
        </trans-unit>
        <trans-unit id="4cab216081c44e467ea042d3bea6f1cf0163e308" translate="yes" xml:space="preserve">
          <source>I hope you're not still stuck on this, but the short answer is that you can't do this in Swift.</source>
          <target state="translated">Espero que no sigas atascado en esto,pero la respuesta corta es que no puedes hacer esto en Swift.</target>
        </trans-unit>
        <trans-unit id="a85d34eee2c0dc7f329c3645e89473d576581cdc" translate="yes" xml:space="preserve">
          <source>I recommend parsing all the way down to a &lt;code&gt;Book&lt;/code&gt; object before returning your results as a &lt;code&gt;Future&lt;/code&gt;. There are several ways this system can fail, and it's much more convenient if you check for all of those things before wrapping them up into a &lt;code&gt;Future&lt;/code&gt;. Getting to &lt;code&gt;[Book]&lt;/code&gt; is much better for the rest of your Swift code than handing around an &lt;code&gt;NSArray&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Recomiendo analizar todo el camino hasta un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Book&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; antes de devolver sus resultados como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Future&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hay varias formas en que este sistema puede fallar, y es mucho m&amp;aacute;s conveniente si verifica todas esas cosas antes de resumirlas en un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Future&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Llegar a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[Book]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es mucho mejor para el resto de su c&amp;oacute;digo Swift que entregar un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;NSArray&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4f50b663530b96f939105fe7522c566d07248099" translate="yes" xml:space="preserve">
          <source>In your particular case, I would probably create a &lt;code&gt;Result&amp;lt;[Book]&amp;gt;&lt;/code&gt; (based on &lt;a href=&quot;http://nomothetis.svbtle.com/error-handling-in-swift-part-ii&quot;&gt;Alexandros Salazar's version of &lt;code&gt;Result&lt;/code&gt;&lt;/a&gt;). Then your method signature would be:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En su caso particular, probablemente crear&amp;iacute;a un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Result&amp;lt;[Book]&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (basado en &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://nomothetis.svbtle.com/error-handling-in-swift-part-ii&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la versi&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Result&lt;/code&gt; ado&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de Alexandros Salazar&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces la firma de su m&amp;eacute;todo ser&amp;iacute;a:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="471af9c19515d20dd8b3e4e60b03f0f10772228b" translate="yes" xml:space="preserve">
          <source>Note, above I retired the use of &lt;code&gt;NSArray&lt;/code&gt; (we don&amp;rsquo;t use &lt;a href=&quot;https://developer.apple.com/documentation/foundation/object_runtime/classes_bridged_to_swift_standard_library_value_types&quot;&gt;those bridged Objective-C types&lt;/a&gt; any more). I assume that we had a &lt;code&gt;Genre&lt;/code&gt; type and we presumably used &lt;code&gt;JSONDecoder&lt;/code&gt;, rather than &lt;code&gt;JSONSerialization&lt;/code&gt;, to decode it. But this question didn&amp;rsquo;t have enough information about the underlying JSON to get into the details here, so I omitted that to avoid clouding the core issue, the use of closures as completion handlers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que anteriormente retir&amp;eacute; el uso de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;NSArray&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (ya no usamos &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.apple.com/documentation/foundation/object_runtime/classes_bridged_to_swift_standard_library_value_types&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;esos tipos de Objective-C puenteados&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Supongo que ten&amp;iacute;amos un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tipo de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Genre&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y presumiblemente usamos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSONDecoder&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , en lugar de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSONSerialization&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , para decodificarlo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero esta pregunta no ten&amp;iacute;a suficiente informaci&amp;oacute;n sobre el JSON subyacente para entrar en detalles aqu&amp;iacute;, por lo que omit&amp;iacute; que para evitar nublar el problema central, el uso de cierres como controladores de finalizaci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e2498b7932a662e153f66faf7f57580fcc196795" translate="yes" xml:space="preserve">
          <source>Note, above I&amp;rsquo;m dispatching the completion handler back to the main queue to simplify model and UI updates. Some developers take exception to this practice and either use whatever queue &lt;code&gt;URLSession&lt;/code&gt; used or use their own queue (requiring the caller to manually synchronize the results themselves).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que arriba estoy enviando el controlador de finalizaci&amp;oacute;n a la cola principal para simplificar las actualizaciones del modelo y la interfaz de usuario. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Algunos desarrolladores hacen una excepci&amp;oacute;n a esta pr&amp;aacute;ctica y usan cualquier &lt;/font&gt;&lt;/font&gt; &lt;code&gt;URLSession&lt;/code&gt; de&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cola &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;utilizada o usan su propia cola (lo que requiere que la persona que llama sincronice manualmente los resultados).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="753a22b2eb617204efee4644795034b8ace1ee14" translate="yes" xml:space="preserve">
          <source>Notifications</source>
          <target state="translated">Notifications</target>
        </trans-unit>
        <trans-unit id="c3c7ca7344ce10210a898c17cb8bf8c0c6345900" translate="yes" xml:space="preserve">
          <source>Now Please check complete api structure</source>
          <target state="translated">Ahora,por favor,compruebe la estructura completa de la API</target>
        </trans-unit>
        <trans-unit id="ca2d425cef83128ec0a20ed97a298c67c80a9045" translate="yes" xml:space="preserve">
          <source>Observers can also be used to get notified once the async task has been completed.</source>
          <target state="translated">Los observadores también pueden ser utilizados para ser notificados una vez que la tarea de asincronía ha sido completada.</target>
        </trans-unit>
        <trans-unit id="95ea2250a94be92b9b5c99f8db93d804ceabeb6d" translate="yes" xml:space="preserve">
          <source>Returning data from async call in Swift function</source>
          <target state="translated">Devolviendo los datos de la llamada async en la función Swift</target>
        </trans-unit>
        <trans-unit id="9ed518514a3cbea72d715d1d9c28704e12c8bc90" translate="yes" xml:space="preserve">
          <source>Swift 3 version of @Alexey Globchastyy's answer:</source>
          <target state="translated">La versión Swift 3 de la respuesta de @Alexey Globchastyy:</target>
        </trans-unit>
        <trans-unit id="51cd39f7d75342cd8ca5614506b3faa58c351053" translate="yes" xml:space="preserve">
          <source>Swiftz already offers Future, which is the basic building block of a Promise. A Future is a Promise that cannot fail (all terms here are based on the Scala interpretation, &lt;a href=&quot;https://stackoverflow.com/questions/22724883/js-deferred-promise-future-compared-to-functional-languages-like-scala?rq=1&quot;&gt;where a Promise is a Monad&lt;/a&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Swiftz ya ofrece Future, que es el componente b&amp;aacute;sico de una Promesa. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un futuro es una promesa que no puede fallar (todos los t&amp;eacute;rminos aqu&amp;iacute; se basan en la interpretaci&amp;oacute;n de Scala, &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/22724883/js-deferred-promise-future-compared-to-functional-languages-like-scala?rq=1&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;donde una promesa es una m&amp;oacute;nada&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac1f9ef245a3b10e54a68e4a4bcce32858364623" translate="yes" xml:space="preserve">
          <source>The basic pattern is to use completion handlers closure.</source>
          <target state="translated">La pauta básica es utilizar el cierre de los manipuladores de terminación.</target>
        </trans-unit>
        <trans-unit id="51fca48045be018843010b6a4c2c218f7615ed4d" translate="yes" xml:space="preserve">
          <source>The main thread is the UI thread, whenever you make an async task and you want to update the UI you must do all the UI changes on the UI thread</source>
          <target state="translated">El hilo principal es el hilo de la UI,siempre que hagas una tarea de sincronización y quieras actualizar la UI debes hacer todos los cambios de la UI en el hilo de la UI</target>
        </trans-unit>
        <trans-unit id="0dccee69ee40909c637c9d01dee6680b7d63bdb6" translate="yes" xml:space="preserve">
          <source>The older, Swift 4 pattern is:</source>
          <target state="translated">El patrón más antiguo,Swift 4,es:</target>
        </trans-unit>
        <trans-unit id="7e41ac91e7836703978c1c85deffd0fd393929f9" translate="yes" xml:space="preserve">
          <source>There are 3 ways of creating call back functions namely:
1. Completion handler
2. Notification
3. Delegates</source>
          <target state="translated">Hay 3 formas de crear funciones de llamada de retorno,a saber:1.Manejador de finalización 2.Notificación 3.Delegados</target>
        </trans-unit>
        <trans-unit id="4ef1f4651b9e21d01aa91ff891682983bbd68b47" translate="yes" xml:space="preserve">
          <source>There are mainly 3 ways of achieving callback in swift</source>
          <target state="translated">Hay principalmente 3 maneras de lograr la devolución de llamada en swift</target>
        </trans-unit>
        <trans-unit id="c8cfd31c5f2fa380e4e81d4e1997fbf3ba87ba8c" translate="yes" xml:space="preserve">
          <source>There are some very generic requirements that would like every good API Manager to satisfy:
will implement a &lt;strong&gt;protocol-oriented API Client.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hay algunos requisitos muy gen&amp;eacute;ricos que quisieran que todo buen administrador de API satisfaga: implementar&amp;aacute; un &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cliente API orientado a protocolos.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6edf876e1dd16ba30ab1e7bb46d6abf5e4cadf9a" translate="yes" xml:space="preserve">
          <source>This is a small use case that might be helpful:-</source>
          <target state="translated">Este es un pequeño caso de uso que podría ser útil:-</target>
        </trans-unit>
        <trans-unit id="6d93327a494f273f8373e66a922af984d7fa9ac9" translate="yes" xml:space="preserve">
          <source>Use completion blocks and activate then on the main thread.</source>
          <target state="translated">Usar bloques de terminación y activarlos luego en el hilo principal.</target>
        </trans-unit>
        <trans-unit id="b107e7fde341f7c746ab2a50be30f16df2888d85" translate="yes" xml:space="preserve">
          <source>While calling the function:-</source>
          <target state="translated">Al llamar a la función:-</target>
        </trans-unit>
        <trans-unit id="492600fc20952c19d7d564917a54861be600573c" translate="yes" xml:space="preserve">
          <source>You can call this function as below:</source>
          <target state="translated">Puede llamar a esta función como se indica a continuación:</target>
        </trans-unit>
        <trans-unit id="5f6fb05957878828dd52a0141b964038cd5da62a" translate="yes" xml:space="preserve">
          <source>You can pass callback, and call callback inside async call</source>
          <target state="translated">Puedes pasar la devolución de llamada,y llamar la devolución de llamada dentro de la llamada de sincronización</target>
        </trans-unit>
        <trans-unit id="ed2e7ade7b8198c94d3afc330e61c9876d6f2e31" translate="yes" xml:space="preserve">
          <source>and then call this method:</source>
          <target state="translated">y luego llamar a este método:</target>
        </trans-unit>
        <trans-unit id="b58d80edf0d9a5f19d17ce43b0b4205bab0262a4" translate="yes" xml:space="preserve">
          <source>example:</source>
          <target state="translated">example:</target>
        </trans-unit>
        <trans-unit id="1bc3878c5b1eaee17acdf12033cb2803a770ad3f" translate="yes" xml:space="preserve">
          <source>something like:</source>
          <target state="translated">algo así como:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
