<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/25203556">
    <body>
      <group id="25203556">
        <trans-unit id="c510d2e3eb78822e59de418242697b0036a06cff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;APIClient Initial Interface&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;APIClient 초기 인터페이스&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0fbc4cfbb8ed3c2e9e2e87bc959f96f26da6f10a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Completion Handler&lt;/strong&gt;
Inside set of block is executed and returned when source is available, Handler will wait until response comes so that UI can be updated after.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Completion Handler&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 소스가 사용 가능할 때 내부 블록 세트가 실행되고 리턴되면 Handler는 응답이 올 때까지 기다린 후 UI를 업데이트 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="96be8c32566abc60744917724e7efde3788f70b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Delegates&lt;/strong&gt;
Set of methods will get triggered when delegate is been called, Source must be provided via methods itself</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;델리게이트&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 델리게이트가 호출되면 메소드 세트가 트리거됩니다. 소스는 메소드 자체를 통해 제공되어야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a52349be59d2dc0787abf428431179d1c994582" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Notification&lt;/strong&gt;
Bunch of information is triggered over all the app, Listner can retrieve n make use of that info. Async way of getting info through out the project.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;알림 많은&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 응용 프로그램이 모든 응용 프로그램에서 트리거되며 Listner는 해당 정보를 사용하여 n을 검색 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로젝트를 통해 정보를 얻는 비동기 방식.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30e598d68bea586c7b116fd407356708bc4f521f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Swift 4.0&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스위프트 4.0&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f61d88d5c22ed9179275db42ae2b2a5f30ba3e95" translate="yes" xml:space="preserve">
          <source>An alternative approach would be to return a callback that will provide the data you need as soon as it is ready.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 방법은 필요한 데이터를 준비하는 즉시 제공하는 콜백을 반환하는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7ebbab529e9a4820968d3b93810887172271b741" translate="yes" xml:space="preserve">
          <source>And you&amp;rsquo;d call it like so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 당신은 그렇게 그렇게 부를 것입니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67c377687d3900d9ca07b9ce4951a6e91f755ee8" translate="yes" xml:space="preserve">
          <source>But that&amp;rsquo;s not material here. The key issue is the use of completion handler to specify the block of code to be run when the asynchronous request is done.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 여기서 중요한 것은 아닙니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주요 문제는 완료 요청을 사용하여 비동기 요청이 실행될 때 실행될 코드 블록을 지정하는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="154376a656eb7c75db283f478a773723f9e32779" translate="yes" xml:space="preserve">
          <source>Closures/Completion handler</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;폐쇄 / 완료 핸들러&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7dcccba4f8856a9df41efcf1d5ea4f2cfd327cec" translate="yes" xml:space="preserve">
          <source>Delegates</source>
          <target state="translated">Delegates</target>
        </trans-unit>
        <trans-unit id="f9bdfe712ac0a387c156acf24c7385e968fd6f97" translate="yes" xml:space="preserve">
          <source>For async Request-Response you can use completion handler. See below I have modified the solution with completion handle paradigm.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;비동기 요청-응답의 경우 완료 처리기를 사용할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;완료 핸들 패러다임으로 솔루션을 수정했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4342310e3ebcfb54bffb8ea8cecbe88a2d6082f6" translate="yes" xml:space="preserve">
          <source>For example, in the forthcoming Swift 5, you&amp;rsquo;d use &lt;code&gt;Result&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어, 다음 Swift 5에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Result&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="377ea4eb3ce60143f054182667aa0740de1f96a3" translate="yes" xml:space="preserve">
          <source>Hopefully will expand to a full Scala-style Promise eventually (I may write it myself at some point; I'm sure other PRs would be welcome; it's not that difficult with Future already in place).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;바라건대 완전한 스칼라 스타일의 약속으로 확장 될 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5a5285ec992e236e3e4c7bcc18b2ff2534c226cf" translate="yes" xml:space="preserve">
          <source>I do not recommend prefixing functions with &lt;code&gt;get&lt;/code&gt; in Swift. It will break certain kinds of interoperability with ObjC.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Swift에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;get&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 으로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수를 접두어로 사용하지 않는 것이 좋습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ObjC와의 특정 상호 운용성을 손상시킵니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eb97f7bf2cc0145e0d62c3441b05976a5078b82b" translate="yes" xml:space="preserve">
          <source>I have created a utility class in my Swift project that handles all the REST requests and responses. I have built a simple REST API so I can test my code. I have created a class method that needs to return an NSArray but because the API call is async I need to return from the method inside the async call. The problem is the async returns void.
If I were doing this in Node I would use JS promises but I can't figure out a solution that works in Swift.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Swift 프로젝트에서 모든 REST 요청 및 응답을 처리하는 유틸리티 클래스를 작성했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;간단한 REST API를 작성하여 코드를 테스트 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NSArray를 반환 해야하는 클래스 메서드를 만들었지 만 API 호출이 비동기이기 때문에 비동기 호출 내부의 메서드에서 반환해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문제는 비동기가 void를 반환한다는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Node 에서이 작업을 수행하는 경우 JS 약속을 사용하지만 Swift에서 작동하는 솔루션을 파악할 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4cab216081c44e467ea042d3bea6f1cf0163e308" translate="yes" xml:space="preserve">
          <source>I hope you're not still stuck on this, but the short answer is that you can't do this in Swift.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 아직도 당신이 이것에 붙어 있지 않기를 희망하지만 짧은 대답은 Swift에서 이것을 할 수 없다는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a85d34eee2c0dc7f329c3645e89473d576581cdc" translate="yes" xml:space="preserve">
          <source>I recommend parsing all the way down to a &lt;code&gt;Book&lt;/code&gt; object before returning your results as a &lt;code&gt;Future&lt;/code&gt;. There are several ways this system can fail, and it's much more convenient if you check for all of those things before wrapping them up into a &lt;code&gt;Future&lt;/code&gt;. Getting to &lt;code&gt;[Book]&lt;/code&gt; is much better for the rest of your Swift code than handing around an &lt;code&gt;NSArray&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결과를 &lt;/font&gt; &lt;code&gt;Future&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 반환하기 전에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Book&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;까지 구문 분석하는 것이 좋습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 시스템이 실패 할 수있는 몇 가지 방법이 있으며, &lt;/font&gt; &lt;code&gt;Future&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 묶기 전에 모든 것을 확인하면 훨씬 편리합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에 도착 &lt;/font&gt; &lt;code&gt;[Book]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 일주 나눠보다는 당신의 스위프트 코드의 나머지 부분에 대한 훨씬 더 &lt;/font&gt; &lt;code&gt;NSArray&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4f50b663530b96f939105fe7522c566d07248099" translate="yes" xml:space="preserve">
          <source>In your particular case, I would probably create a &lt;code&gt;Result&amp;lt;[Book]&amp;gt;&lt;/code&gt; (based on &lt;a href=&quot;http://nomothetis.svbtle.com/error-handling-in-swift-part-ii&quot;&gt;Alexandros Salazar's version of &lt;code&gt;Result&lt;/code&gt;&lt;/a&gt;). Then your method signature would be:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;귀하의 특별한 경우에는 아마도 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Result&amp;lt;[Book]&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://nomothetis.svbtle.com/error-handling-in-swift-part-ii&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Alexandros Salazar의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 버전을&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 기반으로)를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;만들 것입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 메소드 서명은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="471af9c19515d20dd8b3e4e60b03f0f10772228b" translate="yes" xml:space="preserve">
          <source>Note, above I retired the use of &lt;code&gt;NSArray&lt;/code&gt; (we don&amp;rsquo;t use &lt;a href=&quot;https://developer.apple.com/documentation/foundation/object_runtime/classes_bridged_to_swift_standard_library_value_types&quot;&gt;those bridged Objective-C types&lt;/a&gt; any more). I assume that we had a &lt;code&gt;Genre&lt;/code&gt; type and we presumably used &lt;code&gt;JSONDecoder&lt;/code&gt;, rather than &lt;code&gt;JSONSerialization&lt;/code&gt;, to decode it. But this question didn&amp;rsquo;t have enough information about the underlying JSON to get into the details here, so I omitted that to avoid clouding the core issue, the use of closures as completion handlers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;NSArray&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;중단했습니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.apple.com/documentation/foundation/object_runtime/classes_bridged_to_swift_standard_library_value_types&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이러한 브리지 된 Objective-C 유형&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 더 이상 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하지 않습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;). &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Genre&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 유형 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 있다고 가정하고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSONDecoder&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대신 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSONSerialization&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 사용하여 디코딩했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나이 질문에는 여기에 세부 정보를 넣을 수있는 기본 JSON에 대한 정보가 충분하지 않으므로 핵심 문제가 흐리게되는 것을 피하기 위해 클로저를 완료 처리기로 사용하는 것을 피했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e2498b7932a662e153f66faf7f57580fcc196795" translate="yes" xml:space="preserve">
          <source>Note, above I&amp;rsquo;m dispatching the completion handler back to the main queue to simplify model and UI updates. Some developers take exception to this practice and either use whatever queue &lt;code&gt;URLSession&lt;/code&gt; used or use their own queue (requiring the caller to manually synchronize the results themselves).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위에서, 모델 및 UI 업데이트를 단순화하기 위해 완료 핸들러를 기본 큐로 다시 발송합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일부 개발자는이 방법을 제외하고 사용 된 대기열 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;URLSession&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하거나 자체 대기열을 사용합니다 (호출자가 결과를 수동으로 동기화해야 함)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="753a22b2eb617204efee4644795034b8ace1ee14" translate="yes" xml:space="preserve">
          <source>Notifications</source>
          <target state="translated">Notifications</target>
        </trans-unit>
        <trans-unit id="c3c7ca7344ce10210a898c17cb8bf8c0c6345900" translate="yes" xml:space="preserve">
          <source>Now Please check complete api structure</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 완전한 API 구조를 확인하십시오&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ca2d425cef83128ec0a20ed97a298c67c80a9045" translate="yes" xml:space="preserve">
          <source>Observers can also be used to get notified once the async task has been completed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;비동기 작업이 완료되면 관찰자를 사용하여 알림을받을 수도 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95ea2250a94be92b9b5c99f8db93d804ceabeb6d" translate="yes" xml:space="preserve">
          <source>Returning data from async call in Swift function</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Swift 함수에서 비동기 호출에서 데이터 반환&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9ed518514a3cbea72d715d1d9c28704e12c8bc90" translate="yes" xml:space="preserve">
          <source>Swift 3 version of @Alexey Globchastyy's answer:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Alexey Globchastyy의 답변의 스위프트 3 버전 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="51cd39f7d75342cd8ca5614506b3faa58c351053" translate="yes" xml:space="preserve">
          <source>Swiftz already offers Future, which is the basic building block of a Promise. A Future is a Promise that cannot fail (all terms here are based on the Scala interpretation, &lt;a href=&quot;https://stackoverflow.com/questions/22724883/js-deferred-promise-future-compared-to-functional-languages-like-scala?rq=1&quot;&gt;where a Promise is a Monad&lt;/a&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Swiftz는 이미 약속의 기본 구성 요소 인 Future를 제공합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;미래는 실패 할 수없는 약속입니다 (여기의 모든 용어 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/22724883/js-deferred-promise-future-compared-to-functional-languages-like-scala?rq=1&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 약속이 모나드 인&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 스칼라 해석을 기반으로합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac1f9ef245a3b10e54a68e4a4bcce32858364623" translate="yes" xml:space="preserve">
          <source>The basic pattern is to use completion handlers closure.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본 패턴은 완료 핸들러 클로저를 사용하는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="51fca48045be018843010b6a4c2c218f7615ed4d" translate="yes" xml:space="preserve">
          <source>The main thread is the UI thread, whenever you make an async task and you want to update the UI you must do all the UI changes on the UI thread</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주요 스레드는 UI 스레드입니다. 비동기 작업을 수행 할 때마다 UI를 업데이트하려면 UI 스레드에서 모든 UI 변경을 수행해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0dccee69ee40909c637c9d01dee6680b7d63bdb6" translate="yes" xml:space="preserve">
          <source>The older, Swift 4 pattern is:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;오래된 Swift 4 패턴은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7e41ac91e7836703978c1c85deffd0fd393929f9" translate="yes" xml:space="preserve">
          <source>There are 3 ways of creating call back functions namely:
1. Completion handler
2. Notification
3. Delegates</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;콜백 함수를 생성하는 방법은 3 가지가 있습니다. 1. 완료 핸들러 2. 알림 3. 대리인&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4ef1f4651b9e21d01aa91ff891682983bbd68b47" translate="yes" xml:space="preserve">
          <source>There are mainly 3 ways of achieving callback in swift</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;신속한 콜백을 달성하는 방법은 주로 3 가지가 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c8cfd31c5f2fa380e4e81d4e1997fbf3ba87ba8c" translate="yes" xml:space="preserve">
          <source>There are some very generic requirements that would like every good API Manager to satisfy:
will implement a &lt;strong&gt;protocol-oriented API Client.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 훌륭한 API 관리자가 만족해야 할 매우 일반적인 요구 사항이 있습니다. &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로토콜 지향 API 클라이언트를&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 구현합니다 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6edf876e1dd16ba30ab1e7bb46d6abf5e4cadf9a" translate="yes" xml:space="preserve">
          <source>This is a small use case that might be helpful:-</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 도움이 될 수있는 작은 사용 사례입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d93327a494f273f8373e66a922af984d7fa9ac9" translate="yes" xml:space="preserve">
          <source>Use completion blocks and activate then on the main thread.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;완료 블록을 사용하고 메인 스레드에서 활성화하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b107e7fde341f7c746ab2a50be30f16df2888d85" translate="yes" xml:space="preserve">
          <source>While calling the function:-</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수를 호출하는 동안 :-&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="492600fc20952c19d7d564917a54861be600573c" translate="yes" xml:space="preserve">
          <source>You can call this function as below:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같이이 함수를 호출 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f6fb05957878828dd52a0141b964038cd5da62a" translate="yes" xml:space="preserve">
          <source>You can pass callback, and call callback inside async call</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;콜백을 전달하고 비동기 호출 내에서 콜백을 호출 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed2e7ade7b8198c94d3afc330e61c9876d6f2e31" translate="yes" xml:space="preserve">
          <source>and then call this method:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음이 메소드를 호출하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b58d80edf0d9a5f19d17ce43b0b4205bab0262a4" translate="yes" xml:space="preserve">
          <source>example:</source>
          <target state="translated">example:</target>
        </trans-unit>
        <trans-unit id="1bc3878c5b1eaee17acdf12033cb2803a770ad3f" translate="yes" xml:space="preserve">
          <source>something like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;같은 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
