<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/25385173">
    <body>
      <group id="25385173">
        <trans-unit id="5f69ef7078b27c4474ee99ff65f422379bf72b90" translate="yes" xml:space="preserve">
          <source>A debugger is a program that can examine the state of your program while your program is running. The &lt;a href=&quot;https://stackoverflow.com/questions/216819/how-does-a-debugger-work&quot;&gt;technical means it uses for doing this&lt;/a&gt; are not important for understanding the basics of how to use a debugger. You can use a debugger to halt the execution of your program when it reaches a particular place in your code, then examine the values of the variables in the program. You can use a debugger to run your program very slowly, one line of code at a time (called &lt;em&gt;single stepping&lt;/em&gt;), while you examine the values of its variables.</source>
          <target state="translated">Un depurador es un programa que puede examinar el estado de su programa mientras se ejecuta. Los &lt;a href=&quot;https://stackoverflow.com/questions/216819/how-does-a-debugger-work&quot;&gt;medios t&amp;eacute;cnicos que utiliza para hacer esto&lt;/a&gt; no son importantes para comprender los conceptos b&amp;aacute;sicos de c&amp;oacute;mo usar un depurador. Puede usar un depurador para detener la ejecuci&amp;oacute;n de su programa cuando llegue a un lugar particular en su c&amp;oacute;digo, luego examine los valores de las variables en el programa. Puede usar un depurador para ejecutar su programa muy lentamente, una l&amp;iacute;nea de c&amp;oacute;digo a la vez (llamado &lt;em&gt;paso &amp;uacute;nico&lt;/em&gt; ), mientras examina los valores de sus variables.</target>
        </trans-unit>
        <trans-unit id="6e018c35cc220755b7a04fa0475268287db8bf4c" translate="yes" xml:space="preserve">
          <source>A debugger is a very powerful tool for helping diagnose problems with programs.  And debuggers are available for all practical programming languages. Therefore being able to use a debugger is considered a &lt;strong&gt;basic skill&lt;/strong&gt; of any professional or enthusiast programmer. And using a debugger &lt;em&gt;yourself&lt;/em&gt;  is considered &lt;strong&gt;basic work&lt;/strong&gt; you should do &lt;em&gt;yourself&lt;/em&gt; before asking others for help. As this site is for professional and enthusiast programmers, and not a helpdesk or mentoring site, if you have a question about a problem with a specific program, but have not used a debugger, your question is very likely to be closed and downvoted. If you persist with questions like that, you will eventually be blocked from posting more.</source>
          <target state="translated">Un depurador es una herramienta muy poderosa para ayudar a diagnosticar problemas con los programas. Y los depuradores est&amp;aacute;n disponibles para todos los lenguajes de programaci&amp;oacute;n pr&amp;aacute;cticos. Por lo tanto, poder usar un depurador se considera una &lt;strong&gt;habilidad b&amp;aacute;sica&lt;/strong&gt; de cualquier programador profesional o entusiasta. Y usar un depurador &lt;em&gt;usted mismo&lt;/em&gt; se considera &lt;strong&gt;un trabajo b&amp;aacute;sico&lt;/strong&gt; que debe hacer &lt;em&gt;usted mismo&lt;/em&gt; antes de pedir ayuda a otros. Como este sitio es para programadores profesionales y entusiastas, y no un servicio de asistencia o un sitio de tutor&amp;iacute;a, si tiene alguna pregunta sobre un problema con un programa espec&amp;iacute;fico, pero no ha utilizado un depurador, es muy probable que su pregunta sea cerrada y rechazada. Si persiste con preguntas como esa, eventualmente se le bloquear&amp;aacute; la publicaci&amp;oacute;n de m&amp;aacute;s.</target>
        </trans-unit>
        <trans-unit id="b35f6135c776dab42b1e067f67a94a571242079c" translate="yes" xml:space="preserve">
          <source>Assertions can be used to trap incorrect values as they occur, rather than once they have a visible effect to the end user. The quicker you catch an incorrect value, the closer you are to the line that produced it.</source>
          <target state="translated">Las aseveraciones pueden utilizarse para atrapar valores incorrectos a medida que se producen,en lugar de una vez que tienen un efecto visible para el usuario final.Cuanto más rápido se atrapa un valor incorrecto,más cerca se está de la línea que lo produjo.</target>
        </trans-unit>
        <trans-unit id="476f3ccc8db71ae5789e361542fbed5211ce7306" translate="yes" xml:space="preserve">
          <source>By using a debugger  you can discover whether a variable has the wrong value, and where in your program its value changed to the wrong value.</source>
          <target state="translated">Usando un depurador puedes descubrir si una variable tiene el valor incorrecto,y dónde en tu programa su valor cambió al valor incorrecto.</target>
        </trans-unit>
        <trans-unit id="d9a81caeb68a068dc7c4d3981dcf5e3f68ad634a" translate="yes" xml:space="preserve">
          <source>Example markdown: &lt;code&gt;[What is a debugger and how can it help me diagnose problems?](https://stackoverflow.com/q/25385173)&lt;/code&gt;</source>
          <target state="translated">Ejemplo de rebaja: &lt;code&gt;[What is a debugger and how can it help me diagnose problems?](https://stackoverflow.com/q/25385173)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dac53d9920a5cefff69f5b44bd3dd26c07e0d837" translate="yes" xml:space="preserve">
          <source>General notes on using a debugger</source>
          <target state="translated">Notas generales sobre el uso de un depurador</target>
        </trans-unit>
        <trans-unit id="35d81ad9a2d1d250a49b8763e25f523915145fda" translate="yes" xml:space="preserve">
          <source>How a debugger can help you</source>
          <target state="translated">Cómo puede ayudarte un depurador</target>
        </trans-unit>
        <trans-unit id="e65758af1bcb0f30c4a0a43a8bbb8fd2e5f5fc23" translate="yes" xml:space="preserve">
          <source>I want to add that a debugger isn't always the perfect solution, and shouldn't always be the go-to solution to debugging. Here are a few cases where a debugger might not work for you:</source>
          <target state="translated">Quiero añadir que un depurador no siempre es la solución perfecta,y no siempre debería ser la solución a la depuración.Aquí hay algunos casos en los que un depurador podría no funcionar para usted:</target>
        </trans-unit>
        <trans-unit id="ee4ad88e14d5c3ab22281f68119e6b85800f009c" translate="yes" xml:space="preserve">
          <source>In all of these cases, either having your program stop abruptly could cause the end results to differ, or stepping through manually in search of the one line where the bug is caused is too much of a hassle. This can equally happen whether your bug is incorrect behavior, or a crash. For instance, if memory corruption causes a crash, by the time the crash happens, it's too far from where the memory corruption first occurred, and no useful information is left.</source>
          <target state="translated">En todos estos casos,o bien hacer que el programa se detenga abruptamente podría hacer que los resultados finales difieran,o bien pasar manualmente a buscar la única línea donde se provoca el error es demasiado complicado.Esto también puede suceder si el error es un comportamiento incorrecto o un fallo.Por ejemplo,si la corrupción de la memoria causa un bloqueo,para cuando el bloqueo ocurre,está demasiado lejos de donde ocurrió la corrupción de la memoria por primera vez,y no queda ninguna información útil.</target>
        </trans-unit>
        <trans-unit id="a338c62ab23f15aaec89a72d247ffbe4985f1d02" translate="yes" xml:space="preserve">
          <source>In case of memory leaks or memory stomping, use appropriate tools which are able to analyze and detect these at runtime. Being able to detect where the actual corruption occurs is the first step. After this, you can use logs to work your way back to where incorrect values were introduced.</source>
          <target state="translated">En caso de fugas de memoria o de &quot;stomping&quot; de memoria,utilice herramientas apropiadas que sean capaces de analizar y detectarlas en tiempo de ejecución.Ser capaz de detectar dónde se produce la corrupción real es el primer paso.Después de esto,puede utilizar los registros para volver a donde se introdujeron los valores incorrectos.</target>
        </trans-unit>
        <trans-unit id="32b83cd5b35e63e0288dc2dda08e7f1561b7457b" translate="yes" xml:space="preserve">
          <source>In practice it is often easier to  run your program under the control of a debugger from the very start.</source>
          <target state="translated">En la práctica,a menudo es más fácil ejecutar el programa bajo el control de un depurador desde el principio.</target>
        </trans-unit>
        <trans-unit id="2fa82613d6dc16314e47d0ef35347e6c187f5e0a" translate="yes" xml:space="preserve">
          <source>Most &lt;a href=&quot;https://stackoverflow.com/a/426586/545127&quot;&gt;modern debuggers are part of an IDE&lt;/a&gt; and provide you with a convenient GUI for examining the source code and variables of your program, with a point-and-click interface for setting breakpoints, running your program and single stepping it.</source>
          <target state="translated">La mayor&amp;iacute;a de &lt;a href=&quot;https://stackoverflow.com/a/426586/545127&quot;&gt;los depuradores modernos son parte de un IDE&lt;/a&gt; y le proporcionan una GUI conveniente para examinar el c&amp;oacute;digo fuente y las variables de su programa, con una interfaz de apuntar y hacer clic para establecer puntos de interrupci&amp;oacute;n, ejecutar su programa y seguirlo.</target>
        </trans-unit>
        <trans-unit id="c272bc7b5d1faf3b5ac046f446162bfc7579d7ca" translate="yes" xml:space="preserve">
          <source>Refactor and unit test. If your program is too big, it might be worthwhile to test it one class or one function at a time. Give it inputs, and look at the outputs, and see which are not as you're expecting. Being able to narrow down a bug from an entire program to a single function can make a huge difference in debugging time.</source>
          <target state="translated">Refactor y prueba de unidad.Si su programa es demasiado grande,podría valer la pena probarlo una clase o una función a la vez.Dale entradas,y mira las salidas,y mira cuáles no son como esperas.Ser capaz de reducir un error de un programa entero a una sola función puede hacer una gran diferencia en el tiempo de depuración.</target>
        </trans-unit>
        <trans-unit id="cfea533fc55110066831cc9a113752f303aa158f" translate="yes" xml:space="preserve">
          <source>Remember that debugging is a process going backwards. You have the end result - a bug - and find the cause, which preceded it. It's about working your way backwards and, unfortunately, debuggers only step forwards. This is where good logging and postmortem analysis can give you much better results.</source>
          <target state="translated">Recuerda que la depuración es un proceso que va hacia atrás.Tienes el resultado final,un error,y encuentras la causa que lo precedió.Se trata de trabajar hacia atrás y,por desgracia,los depuradores sólo dan un paso adelante.Aquí es donde un buen registro y análisis postmortem puede darte resultados mucho mejores.</target>
        </trans-unit>
        <trans-unit id="68a3d0db4761dfac59bdfef0acdc7d355621a5cd" translate="yes" xml:space="preserve">
          <source>Simplest is simply logging and assertions. Add logs to your program at various points, and compare what you get with what you're expecting. For instance, see if the function where you think there's a bug is even called in the first place. See if the variables at a start of a method are what you think they are. Unlike breakpoints, it's okay for there to be many log lines in which nothing special happens. You can simply search through the log afterwards. Once you hit a log line that's different from what you're expecting, add more in the same area. Narrow it down farther and farther, until it's small enough to be able to log every line in the bugged area.</source>
          <target state="translated">Lo más sencillo es simplemente registrar y hacer afirmaciones.Añade registros a tu programa en varios puntos,y compara lo que obtienes con lo que esperas.Por ejemplo,mira si la función donde crees que hay un error se llama en primer lugar.Mira si las variables al principio de un método son lo que crees que son.A diferencia de los puntos de ruptura,está bien que haya muchas líneas de registro en las que no pase nada especial.Puedes simplemente buscar a través del registro después.Una vez que encuentre una línea de registro que sea diferente de la que espera,añada más en la misma área.Redúcelo más y más,hasta que sea lo suficientemente pequeño como para poder registrar cada línea en el área intervenida.</target>
        </trans-unit>
        <trans-unit id="11af1f5e4a737d4646ee0deef9b7797bdb5baf23" translate="yes" xml:space="preserve">
          <source>So, what are the alternatives?</source>
          <target state="translated">Entonces,¿cuáles son las alternativas?</target>
        </trans-unit>
        <trans-unit id="8db71d409c1383bc4dea16cad514b565f96d3c83" translate="yes" xml:space="preserve">
          <source>The code that has the bug in it runs many times before it bugs out. This can be particularly problematic in main loops, or worse yet, in physics engines, where the problem could be numerical. Even setting a breakpoint, in this case, would simply have you hitting it many times, with the bug not appearing.</source>
          <target state="translated">El código que tiene el error se ejecuta muchas veces antes de que se elimine.Esto puede ser particularmente problemático en los bucles principales,o peor aún,en los motores de física,donde el problema podría ser numérico.Incluso estableciendo un punto de ruptura,en este caso,simplemente te haría golpear muchas veces,sin que el error aparezca.</target>
        </trans-unit>
        <trans-unit id="11e64b63167eaba5daad013db47bfe5af9956dc0" translate="yes" xml:space="preserve">
          <source>The part of your program which fails is really large (poor modularization, perhaps?) and you're not exactly sure where to start stepping through the code. Stepping through all of it might be too time consuming.</source>
          <target state="translated">La parte de su programa que falla es realmente grande (pobre modularización,tal vez?)y no está exactamente seguro de por dónde empezar a pasar por el código.Pasar por todo esto podría llevar demasiado tiempo.</target>
        </trans-unit>
        <trans-unit id="0fe06a3d38eb67781158d1b6de356c30215cb125" translate="yes" xml:space="preserve">
          <source>The specifics of using a debugger depend on the debugger and, to a lesser degree, the programming language you are using.</source>
          <target state="translated">Los detalles del uso de un depurador dependen del depurador y,en menor medida,del lenguaje de programación que se utilice.</target>
        </trans-unit>
        <trans-unit id="f5ad5b8430e85c61bfe851f89842b9b5e6fd30da" translate="yes" xml:space="preserve">
          <source>This is intended to be a general purpose question to assist new programmers who have a problem with a program, but do not know how to use a debugger to diagnose the cause of the problem.</source>
          <target state="translated">Se trata de una pregunta de propósito general para ayudar a los nuevos programadores que tienen un problema con un programa,pero que no saben cómo utilizar un depurador para diagnosticar la causa del problema.</target>
        </trans-unit>
        <trans-unit id="317a81e5612bede9ef0ebf356b49a815d401cb81" translate="yes" xml:space="preserve">
          <source>This question covers three classes of more specific question:</source>
          <target state="translated">Esta pregunta cubre tres clases de preguntas más específicas:</target>
        </trans-unit>
        <trans-unit id="d402cbbb81d8dd60aa13040027a9a9b28f4267dd" translate="yes" xml:space="preserve">
          <source>Using a debugger can be very difficult unless your program executable or bytecode files  include debugging &lt;em&gt;symbol information&lt;/em&gt; and cross references to your source-code. You might have to &lt;a href=&quot;https://stackoverflow.com/questions/89603/how-does-the-debugging-option-g-change-the-binary-executable&quot;&gt;compile (or recompile) your program slightly differently&lt;/a&gt; to ensure that information is present. If the compiler performs extensive optimizations, those cross references can become confusing. You might therefore have to &lt;a href=&quot;https://stackoverflow.com/a/7857696/545127&quot;&gt;recompile your program with optimizations turned off&lt;/a&gt;.</source>
          <target state="translated">El uso de un depurador puede ser muy dif&amp;iacute;cil a menos que los archivos ejecutables o de bytecode de su programa incluyan &lt;em&gt;informaci&amp;oacute;n de s&amp;iacute;mbolos de&lt;/em&gt; depuraci&amp;oacute;n y referencias cruzadas a su c&amp;oacute;digo fuente. Puede que tenga que &lt;a href=&quot;https://stackoverflow.com/questions/89603/how-does-the-debugging-option-g-change-the-binary-executable&quot;&gt;compilar (o recompilar) su programa de forma ligeramente diferente&lt;/a&gt; para asegurarse de que la informaci&amp;oacute;n est&amp;eacute; presente. Si el compilador realiza optimizaciones extensas, esas referencias cruzadas pueden volverse confusas. Por lo tanto, es posible que &lt;a href=&quot;https://stackoverflow.com/a/7857696/545127&quot;&gt;deba volver&lt;/a&gt; a compilar su programa con las optimizaciones desactivadas .</target>
        </trans-unit>
        <trans-unit id="c7cf49b12a749436a9ef554222db7bab809eb274" translate="yes" xml:space="preserve">
          <source>Using a debugger is an expected basic skill</source>
          <target state="translated">Usar un depurador es una habilidad básica esperada</target>
        </trans-unit>
        <trans-unit id="3e279e4ed2ae68ef124cd2d91bc59889848b5935" translate="yes" xml:space="preserve">
          <source>Using single stepping you can also discover whether the control flow is as you expect. For example, whether an &lt;code&gt;if&lt;/code&gt; branch executed when you expect it ought to be.</source>
          <target state="translated">Usando un solo paso tambi&amp;eacute;n puede descubrir si el flujo de control es el esperado. Por ejemplo, si una rama &lt;code&gt;if&lt;/code&gt; se ejecuta cuando espera que deba serlo.</target>
        </trans-unit>
        <trans-unit id="01283b82b512012e10c02769d68c8090ddc60c84" translate="yes" xml:space="preserve">
          <source>What is a debugger and how can it help me diagnose problems</source>
          <target state="translated">¿Qué es un depurador y cómo puede ayudarme a diagnosticar problemas</target>
        </trans-unit>
        <trans-unit id="bb0345f67d917d6883f66311548fb70b5de97da9" translate="yes" xml:space="preserve">
          <source>When I run my program, it crashes and gives me a stack trace. I have &lt;a href=&quot;https://stackoverflow.com/questions/3988788/what-is-a-stack-trace-and-how-can-i-use-it-to-debug-my-application-errors&quot;&gt;examined the stack trace&lt;/a&gt;, but I still do not know the cause of the problem because the stack trace does not provide me with enough information.</source>
          <target state="translated">Cuando ejecuto mi programa, se bloquea y me da un seguimiento de la pila. He &lt;a href=&quot;https://stackoverflow.com/questions/3988788/what-is-a-stack-trace-and-how-can-i-use-it-to-debug-my-application-errors&quot;&gt;examinado el seguimiento de la pila&lt;/a&gt; , pero todav&amp;iacute;a no s&amp;eacute; la causa del problema porque el seguimiento de la pila no me proporciona suficiente informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="21d75a40a11cab8c9bd1000513184a5edb68b004" translate="yes" xml:space="preserve">
          <source>When I run my program, it crashes because of a segmentation fault (SEGV).</source>
          <target state="translated">Cuando ejecuto mi programa,se bloquea por un fallo de segmentación (SEGV).</target>
        </trans-unit>
        <trans-unit id="362b817e599fe88871572e82a0a7459085492df9" translate="yes" xml:space="preserve">
          <source>When I run my program, it does not produce the output I expect for the input I gave it.</source>
          <target state="translated">Cuando ejecuto mi programa,no produce la salida que espero por la entrada que le di.</target>
        </trans-unit>
        <trans-unit id="bba0c0b6c3d8bfbe7dacab2b87da00e4bc4a5f02" translate="yes" xml:space="preserve">
          <source>You can &lt;em&gt;attach&lt;/em&gt; a debugger to a process already running your program. You  might do if your program is stuck.</source>
          <target state="translated">Puede &lt;em&gt;adjuntar&lt;/em&gt; un depurador a un proceso que ya ejecuta su programa. Puede hacerlo si su programa est&amp;aacute; atascado.</target>
        </trans-unit>
        <trans-unit id="3a05e0a9c5c99e4bb417913c643133e002238ba1" translate="yes" xml:space="preserve">
          <source>You can tell that your bug is caused by incorrect values arriving at function X, but you don't know where these values come from. Having to run through the program, again and again, setting breakpoints farther and farther back, can be a huge hassle. Especially if function X is called from many places throughout the program.</source>
          <target state="translated">Puedes decir que tu error está causado por valores incorrectos que llegan a la función X,pero no sabes de dónde vienen estos valores.Tener que correr a través del programa,una y otra vez,estableciendo puntos de ruptura más y más atrás,puede ser una gran molestia.Especialmente si la función X es llamada desde muchos lugares a lo largo del programa.</target>
        </trans-unit>
        <trans-unit id="fba390354c53382829fca30a0664e9c72d72f969" translate="yes" xml:space="preserve">
          <source>You indicate &lt;em&gt;where&lt;/em&gt; your program should stop executing by indicating the source-code file and line number of the line at which execution should stop, or by indicating the name of the method/function at which the program should stop (if you want to stop as soon as execution enters the method). The technical means that the debugger uses to cause your program to stop is called a &lt;em&gt;breakpoint&lt;/em&gt; and this process is called &lt;em&gt;setting a breakpoint&lt;/em&gt;.</source>
          <target state="translated">Usted indica &lt;em&gt;d&amp;oacute;nde&lt;/em&gt; debe dejar de ejecutarse su programa indicando el archivo de c&amp;oacute;digo fuente y el n&amp;uacute;mero de l&amp;iacute;nea de la l&amp;iacute;nea en la que debe detenerse la ejecuci&amp;oacute;n, o indicando el nombre del m&amp;eacute;todo / funci&amp;oacute;n en el que debe detenerse el programa (si desea detenerse como tan pronto como la ejecuci&amp;oacute;n ingrese al m&amp;eacute;todo). Los medios t&amp;eacute;cnicos que utiliza el depurador para hacer que su programa se detenga se llaman &lt;em&gt;puntos de interrupci&amp;oacute;n&lt;/em&gt; y este proceso se llama &lt;em&gt;establecer un punto de interrupci&amp;oacute;n&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="36a877db5fba4c1c71b6a6dc4aee4eaf879d1f64" translate="yes" xml:space="preserve">
          <source>Your program is multi-threaded. Or even worse, your problem is caused by a race condition.</source>
          <target state="translated">Su programa es multi-hilo.O peor aún,su problema es causado por una condición de raza.</target>
        </trans-unit>
        <trans-unit id="ef19f674fef2005af2ff2b50f2cab28caf87470e" translate="yes" xml:space="preserve">
          <source>Your program must run in real time. This is a big issue for programs that connect to the network. If you set up a breakpoint in your network code, the other end isn't going to wait for you to step through, it's simply going to time out. Programs which rely on the system clock, e.g. games with frame skip, aren't much better off either.</source>
          <target state="translated">Su programa debe funcionar en tiempo real.Esto es un gran problema para los programas que se conectan a la red.Si establece un punto de interrupción en su código de red,el otro extremo no va a esperar a que usted pase,simplemente va a tiempo fuera.Los programas que dependen del reloj del sistema,por ejemplo,los juegos con salto de cuadro,tampoco están mucho mejor.</target>
        </trans-unit>
        <trans-unit id="00fa062298e582b7d61242405c699fc9a9bf07dd" translate="yes" xml:space="preserve">
          <source>Your program performs some form of destructive actions, like writing to files or sending e-mails, and you'd like to limit the number of times you need to run through it.</source>
          <target state="translated">Su programa realiza algún tipo de acciones destructivas,como escribir en archivos o enviar correos electrónicos,y le gustaría limitar el número de veces que necesita repasarlo.</target>
        </trans-unit>
        <trans-unit id="eaadc1ee03032694703d617ad9e3871bdbd49308" translate="yes" xml:space="preserve">
          <source>Your program uses a lot of callbacks and other non-linear flow control methods, which makes the debugger confused when you step through it.</source>
          <target state="translated">Su programa utiliza muchas llamadas de retorno y otros métodos de control de flujo no lineales,lo que hace que el depurador se confunda al pasar por él.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
