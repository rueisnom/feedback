<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/2559527">
    <body>
      <group id="2559527">
        <trans-unit id="d2aec5d71f25dd3c929c3ae05f315100ab9855ce" translate="yes" xml:space="preserve">
          <source>And the advice for you is: you misunderstood the idea of the scope of the variables and static functionalities. Get clear idea about that.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 당신을위한 조언은 : 당신은 변수와 정적 기능의 범위에 대한 아이디어를 오해했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것에 대해 분명한 아이디어를 얻으십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1456f898bebc17c04a971a20e9a659df53d983ae" translate="yes" xml:space="preserve">
          <source>Anything bound to the static keyword is available in the context of the class rather than in the context of an instance of the class</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 키워드에 바인딩 된 것은 클래스 인스턴스의 컨텍스트가 아닌 클래스의 컨텍스트에서 사용할 수 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f7655ad14779fb831345dd6017898bf950fa3f7b" translate="yes" xml:space="preserve">
          <source>As a corollary to the above</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 결과로&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d600e5ecb3300a6c2840600e11a1121a709f80a0" translate="yes" xml:space="preserve">
          <source>At the same time, the car you see is an instance of the class &quot;car&quot; since it has all the properties which you expect: There is someone driving it, it has an engine, wheels.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동시에, 당신이 보는 자동차는 당신이 기대하는 모든 속성을 가지고 있기 때문에 &quot;자동차&quot;클래스의 인스턴스입니다 : 그것을 운전하는 누군가가 있고, 엔진, 바퀴가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f52f9635c25173d612233d1a7bdfd13015dddc60" translate="yes" xml:space="preserve">
          <source>Before you call an instance method or instance variable It needs a object(Instance). When instance variable is called from static method compiler doesn't know which is the object this variable belongs to. Because static methods doesn't have an object (Only one copy always). When you call an instance variable or instance methods from instance method it refer the &lt;code&gt;this&lt;/code&gt; object. It means the variable belongs to whatever object created and each object have it's own copy of instance methods and variables.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인스턴스 메소드 또는 인스턴스 변수를 호출하기 전에 오브젝트 (인스턴스)가 필요합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 메서드 컴파일러에서 인스턴스 변수를 호출하면이 변수가 속한 개체를 알 수 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 메소드에는 객체가 없기 때문에 (한 사본 만 항상). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인스턴스 메소드에서 인스턴스 변수 또는 인스턴스 메소드를 호출 할 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 오브젝트를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수가 생성 된 객체에 속하고 각 객체에 고유 한 인스턴스 메소드 및 변수 사본이 있음을 의미합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fdf6cd3b285796913ce74a547e9045609a45a79c" translate="yes" xml:space="preserve">
          <source>Below code explains you neatly</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아래 코드는 깔끔하게 설명합니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2d4f7289bb09ea7c868bd69996ab7600104e58d" translate="yes" xml:space="preserve">
          <source>But it gives the following error:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 다음과 같은 오류가 발생합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c142a9be9f6b43f1957dd753348f42afd1f5c2e" translate="yes" xml:space="preserve">
          <source>E.g. 
Say, car has the property colour, and exhibits the behaviour 'motion'.
An instance of the car would be a Red Volkswagen Beetle in motion at 25kmph.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어, 자동차는 속성 색상을 가지며 '모션'동작을 나타냅니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자동차의 예는 25kmph에서 움직이는 레드 폭스 바겐 비틀입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8ef2e1210c47909b18d1b60b9c30a0116c39a246" translate="yes" xml:space="preserve">
          <source>Example 1:</source>
          <target state="translated">예 1 :</target>
        </trans-unit>
        <trans-unit id="af265b4af8b5dc4a436d1f9e01ebb8d28ab33ed0" translate="yes" xml:space="preserve">
          <source>HTH</source>
          <target state="translated">HTH</target>
        </trans-unit>
        <trans-unit id="3598138f0ee250c01a79c1a479cb4662b5ef5b8e" translate="yes" xml:space="preserve">
          <source>How do I get my methods to recognize my class variables?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 변수를 인식하는 메소드를 얻으려면 어떻게해야합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="838b94d6f796c95b2046c9e8357ca90591e46ffb" translate="yes" xml:space="preserve">
          <source>However, those variables and methods of the class which are outside of the &lt;code&gt;main()&lt;/code&gt; method which do not have the &lt;code&gt;static&lt;/code&gt; modifier can not be used until an instance of the class has been created as an object within the &lt;code&gt;main()&lt;/code&gt; method. After creating the object you can then use the variables and methods of the object. An attempt to use the variables and methods of the class which do not have the &lt;code&gt;static&lt;/code&gt; modifier without going through an object of the class is caught by the Java compiler at compile time and flagged as an error.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 &lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 수정자를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;갖지 않는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;main()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;외부에있는 클래스의 변수 및 메소드는 클래스 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인스턴스가 &lt;/font&gt; &lt;code&gt;main()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내에서 오브젝트로 작성 될 때까지 사용할 수 없습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 객체를 생성 한 후 객체의 변수와 메소드를 사용할 수 있습니다. 클래스 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 오브젝트를 거치지 않고 &lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 수정자가없는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스의 변수 및 메소드를 사용하려는 시도 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 컴파일시 Java 컴파일러에 의해 포착되어 오류로 플래그됩니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c3f999018019b0336c0974ffb6d2aeab8ed94757" translate="yes" xml:space="preserve">
          <source>I will try to explain the static thing to you. First of all static variables do not belong to any particular instance of the class. They are recognized with the name of the class. Static methods again do not belong again to any particular instance. They can access only static variables. Imagine you call MyClass.myMethod() and myMethod is a static method. If you use non-static variables inside the method, how the hell on earth would it know which variables to use? That's why you can use from static methods only static variables. I repeat again they do NOT belong to any particular instance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 당신에게 정적 인 것을 설명하려고 노력할 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;먼저 모든 정적 변수는 클래스의 특정 인스턴스에 속하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그들은 클래스의 이름으로 인식됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 메소드는 다시 특정 인스턴스에 속하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 변수에만 액세스 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MyClass.myMethod ()를 호출한다고 가정하면 myMethod는 정적 메소드입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;메소드 내에서 정적이 아닌 변수를 사용하면 지구상의 지옥은 어떤 변수를 사용할지 어떻게 알 수 있습니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그래서 정적 메소드에서만 정적 변수를 사용할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 특정 인스턴스에 속하지 않는 것을 반복한다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5505403c960d97c565a4824355c06f0c1537b207" translate="yes" xml:space="preserve">
          <source>I've written this test code:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 테스트 코드를 작성했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c68edb472b533abd4a6c2c2d6895927750bd048e" translate="yes" xml:space="preserve">
          <source>If its not static, you need a variable of the class,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적이 아닌 경우 클래스 변수가 필요합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="779daebe3f0923ea58fe5a71b8c2ed6579bb6d06" translate="yes" xml:space="preserve">
          <source>If you observe in codes, Some functions are directly called with Class names like</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드에서 관찰하면 일부 함수는 다음과 같은 클래스 이름으로 직접 호출됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4ad39630cafe914cf18e155e7ab4efa3acd337ea" translate="yes" xml:space="preserve">
          <source>In Example 2 CE error is because we call non static method from a static context. So it is not possible for ClassLoader to recognize method display() at compile time.So compile time error is occurred.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예제 2에서 CE 오류는 정적 컨텍스트에서 비 정적 메소드를 호출하기 때문입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 컴파일시 ClassLoader가 메소드 display ()를 인식 할 수 없으므로 컴파일 시간 오류가 발생합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4b1ff3e182638f7bfae34492f4ac5391c71d7dc9" translate="yes" xml:space="preserve">
          <source>In order to have an initial entry point for an application, Java has adopted the convention that the Java program must have a class that contains a method with an agreed upon or special name. This special method is called &lt;code&gt;main()&lt;/code&gt;. Since the method must exist whether the class containing the main method has been instantiated or not, the &lt;code&gt;main()&lt;/code&gt; method must be declared with the &lt;code&gt;static&lt;/code&gt; modifier so that as soon as the class is loaded, the &lt;code&gt;main()&lt;/code&gt; method is available.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;응용 프로그램의 초기 진입 점을 갖기 위해 Java는 Java 프로그램에 합의되었거나 특수한 이름의 메소드가 포함 된 클래스가 있어야한다는 규칙을 채택했습니다. 이 특별한 메소드를 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;main()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이라고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. main 메소드를 포함하는 클래스가 인스턴스화되었는지 여부에 관계없이 메소드가 존재해야하므로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;main()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 수정자를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하여 선언해야 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스가로드되는 즉시 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;main()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드를 사용할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc468dd35b615fe993b0c722a26e797b4eaa8add" translate="yes" xml:space="preserve">
          <source>In the OO world, you define the class and inside the class, you define a field of type &lt;code&gt;Color&lt;/code&gt;. When the class is instantiated (when you create a specific instance), memory is reserved for the color and you can give this specific instance a color. Since these attributes are specific, they are non-static.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;OO 세계에서는 클래스를 정의하고 클래스 내부에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Color&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 유형의 필드를 정의합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스가 인스턴스화되면 (특정 인스턴스를 생성 할 때) 메모리가 색상에 예약되어 있으며이 특정 인스턴스에 색상을 부여 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이러한 속성은 고유하기 때문에 비 정적입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dd01adf6562fc2bb03b6c615e744b6dd2591a6ee" translate="yes" xml:space="preserve">
          <source>In your case, try this code as a starting block:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;귀하의 경우이 코드를 시작 블록으로 사용해보십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a5b4594a3aa8d550fa7797eca26adb62c2a9d02f" translate="yes" xml:space="preserve">
          <source>It is ClassLoader responsible to load the class files.Let's see what happens when we write our own classes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 파일을로드하는 것은 ClassLoader의 책임입니다. 클래스를 작성할 때 어떤 일이 발생하는지 봅시다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="70d59f235488bc70f4665b941656a205723da62b" translate="yes" xml:space="preserve">
          <source>Let's analyze your program first..
In your program, your first method is &lt;code&gt;main()&lt;/code&gt;, and keep it in mind it is the static method... Then you declare the local variable for that method (compareCount, low, high, etc..). The scope of this variable is only the declared method, regardless of it being a static or non static method. So you can't use those variables outside that method. This is the basic error u made.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로그램을 먼저 분석해 봅시다. 프로그램에서 첫 번째 메소드는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;main()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이고 정적 메소드임을 명심하십시오. 그런 다음 해당 메소드의 로컬 변수 (compareCount, low, high 등)를 선언하십시오. ). 이 변수의 범위는 정적 또는 정적이 아닌 메소드에 관계없이 선언 된 메소드입니다. 따라서 해당 메소드 외부에서 해당 변수를 사용할 수 없습니다. 이것이 기본 오류입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="22ceb7c53031a505277c39133ceb61ac5c44f967" translate="yes" xml:space="preserve">
          <source>Let's see another example:
Example 2:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 예를 보자 : 예 2 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d3b8d5dcf1237e381425ebe03844b2a3b104923" translate="yes" xml:space="preserve">
          <source>Non-static variable cannot be referenced from a static context</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적이 아닌 변수는 정적 컨텍스트에서 참조 할 수 없습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="26aca3a70772f82cba9551cc4b2634df9a1f490e" translate="yes" xml:space="preserve">
          <source>Now For ClassLoader it looks like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 ClassLoader의 경우 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5aac769e54adb5f914debe950e39dc08d0a14c75" translate="yes" xml:space="preserve">
          <source>Now a static property of the car would be the number of wheels (4) on the road, and this would apply to all cars.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 자동차의 정적 속성은 도로의 바퀴 수 (4)가 될 것이며, 이는 모든 자동차에 적용됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="55f62b5fe733feed7075474749b56ada897ff79b" translate="yes" xml:space="preserve">
          <source>Now if we try to compile this code compiler will give CE error.
CE: non-static method display() cannot be referenced from a static context.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제이 코드를 컴파일하려고하면 CE 오류가 발생합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CE : 정적이 아닌 메소드 display ()는 정적 컨텍스트에서 참조 할 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a4c6baf33cc894816461f3c33e7f435e8bd2366c" translate="yes" xml:space="preserve">
          <source>Now we can see that class &quot;StaticTest&quot; has 3 fields.But actually there is no existence of b,c member variable.But why ???. OK Lest's see. Here b,c are instance variable.Since instance variable gets the memory at the time of object creation. So here b,c are not getting any memory yet. That's why there is no existence of b,c. So There is only existence of a.
For ClassLoader it has only one information about a. ClassLoader yet not recognize b,c because it's object not instantiated yet.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 &quot;StaticTest&quot;클래스에 3 개의 필드가 있음을 알 수 있지만 실제로 b, c 멤버 변수는 없습니다. 그러나 왜 ???. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;알았어요. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 b, c는 인스턴스 변수입니다. 인스턴스 변수는 객체를 만들 때 메모리를 가져옵니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 b, c는 아직 메모리를 얻지 못했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것이 b, c의 존재가없는 이유입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그래서 오직 존재합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ClassLoader의 경우 a에 대한 정보가 하나만 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ClassLoader는 아직 인스턴스화되지 않은 객체이므로 b, c를 인식하지 못합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="66e7974266b7f27644bb52cd8bb94ec7d92a6e90" translate="yes" xml:space="preserve">
          <source>Now you can add/use instances with in the method</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 메소드에서 인스턴스를 추가 / 사용할 수 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5303b5862a7a03213993da7f02ba0ab845bf51a8" translate="yes" xml:space="preserve">
          <source>So the class says &quot;all cars have a color&quot; and the instance says &quot;this specific car is red&quot;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 클래스는 &quot;모든 자동차는 색상을가집니다&quot;라고 말하고 인스턴스는 &quot;이 특정 자동차는 빨간색입니다&quot;를 말합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec7c8c4ad414a51df3965a76861df12c694b52ff" translate="yes" xml:space="preserve">
          <source>So you need to create an instance of your class as an object and then you can access the methods and variables of the class that have not been declared with the &lt;code&gt;static&lt;/code&gt; modifier. Once your Java program has started with the &lt;code&gt;main()&lt;/code&gt; function you can then use any variables or methods that have the modifier of &lt;code&gt;static&lt;/code&gt; since they exist as part of the class being loaded.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 클래스의 인스턴스를 객체로 생성 한 다음 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 수정 자로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;선언되지 않은 클래스의 메서드 및 변수에 액세스 할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. Java 프로그램이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;main()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;시작되면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로드중인 클래스의 일부로 존재하므로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 수정자가있는 변수 또는 메소드를 사용할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc0b8787e157ef7daaef4bc4295c1283c986652a" translate="yes" xml:space="preserve">
          <source>Static fields and methods are connected to the class itself and not its instances. If you have a class &lt;code&gt;A&lt;/code&gt;, a 'normal' method &lt;code&gt;b&lt;/code&gt;, and a static method &lt;code&gt;c&lt;/code&gt;, and you make an instance &lt;code&gt;a&lt;/code&gt; of your class &lt;code&gt;A&lt;/code&gt;, the calls to &lt;code&gt;A.c()&lt;/code&gt; and &lt;code&gt;a.b()&lt;/code&gt; are valid. Method &lt;code&gt;c()&lt;/code&gt; has no idea which instance is connected, so it cannot use non-static fields.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 필드와 메소드는 인스턴스가 아닌 클래스 자체에 연결됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , '정상'메소드 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 정적 메소드 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 있고 클래스 &lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 인스턴스를 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;만들면 &lt;/font&gt; &lt;code&gt;A.c()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt; &lt;code&gt;a.b()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 호출 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 유효합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;메소드 &lt;/font&gt; &lt;code&gt;c()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 어떤 인스턴스가 연결되어 있는지 알 수 없으므로 비 정적 필드를 사용할 수 없습니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dd9384367916225428aefbc0fd2391d0c819c3f9" translate="yes" xml:space="preserve">
          <source>Static fields and methods are shared with all instances. They are for values which are specific to the class and not a specific instance. For methods, this usually are global helper methods (like &lt;code&gt;Integer.parseInt()&lt;/code&gt;). For fields, it's usually constants (like car types, i.e. something where you have a limited set which doesn't change often).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 필드와 메소드는 모든 인스턴스와 공유됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이들은 특정 인스턴스가 아닌 클래스에 특정한 값을위한 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;메서드의 경우 일반적으로 전역 도우미 메서드입니다 (예 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Integer.parseInt()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;필드의 경우 일반적으로 상수입니다 (예 : 자동차 유형, 즉 자주 변경되지 않는 제한된 세트가있는 항목).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="36494db0df9466ed4e6b0bb1015d67aec1ba26f6" translate="yes" xml:space="preserve">
          <source>Static variables are marked as &lt;code&gt;static&lt;/code&gt; and instance variables doesn't have specific keyword.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 변수로 표시됩니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 특정 키워드가 없습니다 및 인스턴스 변수.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e0b9fd46cbe94367b2372ca27e7e29c075d5bac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;static&lt;/code&gt; keyword modifies the lifecycle of a method or variable within a class. A &lt;code&gt;static&lt;/code&gt; method or variable is created at the time a class is loaded. A method or variable that is not declared as &lt;code&gt;static&lt;/code&gt; is created only when the class is instantiated as an object for example by using the &lt;code&gt;new&lt;/code&gt; operator.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 키워드 수정 클래스 내에서 메소드 나 변수의 라이프 사이클. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 방법 또는 변수는 클래스가로드 될 때 생성된다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 으로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;선언되지 않은 메소드 또는 변수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 클래스가 예를 들어 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 연산자 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 사용하여 객체로 인스턴스화 될 때만 작성됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="390648a9531e0593ca91c8fcd1c34b99ba9c6525" translate="yes" xml:space="preserve">
          <source>The first thing is to know the difference between an instance of a class, and the class itself. A class models certain properties, and the behaviour of the whole in the context of those properties. An instance will define specific values for those properties.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째는 클래스의 인스턴스와 클래스 자체의 차이점을 아는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스는 특정 속성과 해당 속성의 맥락에서 전체의 동작을 모델링합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인스턴스는 해당 속성에 대한 특정 값을 정의합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a59be2f543a266d0dfe7ec6749aa19db8676e29" translate="yes" xml:space="preserve">
          <source>The lifecycle of a class, in broad terms, is:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스의 수명주기는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e09ee9207b516f080909bd79855b0c8feae78efc" translate="yes" xml:space="preserve">
          <source>The lifetime of a static field/method is equivalent to the lifetime of your application</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 필드 / 방법의 수명은 응용 프로그램의 수명과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="45e61462fec0ea6d869a606732bad6c26cb6d26e" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;main()&lt;/code&gt; method creates an instance of the class it contains (sounds strange but since &lt;code&gt;main()&lt;/code&gt; is created with the class instead of with the instance, it can do this) and then calls an instance method (&lt;code&gt;run()&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;새로운 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;main()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드는 포함하는 클래스의 인스턴스를 작성합니다 (이상하게 들리지만 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;main()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 인스턴스 대신 클래스로 작성되므로이를 수행 할 수 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;run()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 인스턴스 메소드 ( &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;run ()&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 호출합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba17f3eb5b1f6622bb98dfac5f62c8e5968d76cc" translate="yes" xml:space="preserve">
          <source>The result is that when you start your Java application by a command line such as &lt;code&gt;java helloworld&lt;/code&gt; a series of actions happen. First of all a Java Virtual Machine is started up and initialized. Next the helloworld.class file containing the compiled Java code is loaded into the Java Virtual Machine. Then the Java Virtual Machine looks for a method in the &lt;code&gt;helloworld&lt;/code&gt; class that is called &lt;code&gt;main(String [] args)&lt;/code&gt;. this method must be &lt;code&gt;static&lt;/code&gt; so that it will exist even though the class has not actually been instantiated as an object. The Java Virtual Machine does not create an instance of the class by creating an object from the class. It just loads the class and starts execution at the &lt;code&gt;main()&lt;/code&gt; method.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결과적으로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;java helloworld&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 같은 명령 행으로 Java 응용 프로그램을 시작 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 일련의 조치가 발생합니다. 우선, Java Virtual Machine이 시작되고 초기화됩니다. 다음으로 컴파일 된 Java 코드가 포함 된 helloworld.class 파일이 Java Virtual Machine에로드됩니다. 그런 다음 Java Virtual Machine은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;helloworld&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;main(String [] args)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 라는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;메소드를 찾습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 이 메소드는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스가 실제로 객체로 인스턴스화되지 않은 경우에도 존재하도록 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이어야 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. Java Virtual Machine은 클래스에서 객체를 만들어 클래스의 인스턴스를 만들지 않습니다. 그냥 클래스를로드하고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;main()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 실행을 시작합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0fd0cd58867fba502c049c9f6c94736acdd35d8d" translate="yes" xml:space="preserve">
          <source>The solution for you is that you either make your fields static or your methods non-static. You main could look like this then:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신을위한 해결책은 필드를 정적으로 만들거나 메소드를 비 정적으로 만드는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 다음과 같이 보일 수 있습니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9323c9f3505b2a95c08a5ec197540540572d98ef" translate="yes" xml:space="preserve">
          <source>The very basic thing is static variables or static methods are at class level. Class level variables or methods gets loaded prior to instance level methods or variables.And obviously the thing which is not loaded can not be used. So java compiler not letting the things to be handled at run time resolves at compile time. That's why it is giving you error non-static things can not be referred from static context. You just need to read about Class Level Scope, Instance Level Scope and Local Scope.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가장 기본적인 것은 정적 변수이거나 정적 메서드는 클래스 수준입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 레벨 변수 또는 메소드는 인스턴스 레벨 메소드 또는 변수보다 먼저로드되며로드되지 않은 것은 사용할 수 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 Java 컴파일러는 런타임에 처리되는 것을 컴파일하지 않으면 해결됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그래서 정적이 아닌 것을 정적 컨텍스트에서 참조 할 수 없다는 오류가 발생하는 이유입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 레벨 범위, 인스턴스 레벨 범위 및 로컬 범위에 대해 읽으면됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bb0438759b21be8d6fa47176b6cbb2df2b826e50" translate="yes" xml:space="preserve">
          <source>Then we come to next point. You told static is killing you. (It may be killing you but it only gives life to your program!!) First you must understand the basic thing.
*Static method calls only the static method and use only the static variable.
*Static variable or static method are not dependent on any instance of that class. (i.e. If you change any state of the static variable it will reflect in all objects of the class)
*Because of this you call it as a class variable or a class method.
And a lot more is there about the &quot;static&quot; keyword.
I hope now you get the idea. First change the scope of the variable and declare it as a static (to be able to use it in static methods).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음으로 넘어갑니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 정적이 당신을 죽이고 있다고 말했다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(그것은 당신을 죽일지도 모르지만 그것은 당신의 프로그램에 생명을 줄뿐입니다!) 먼저 당신은 기본적인 것을 이해해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;* 정적 메소드는 정적 메소드 만 호출하고 정적 변수 만 사용하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;* 정적 변수 또는 정적 메소드는 해당 클래스의 인스턴스에 종속되지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(즉, 정적 변수의 상태를 변경하면 클래스의 모든 객체에 반영됩니다) *이 때문에 클래스 변수 또는 클래스 메소드로 호출합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 &quot;정적&quot;키워드에 대해 더 많은 것이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 이제 당신이 아이디어를 얻길 바랍니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;먼저 변수의 범위를 변경하고 정적로 선언하십시오 (정적 메소드에서 사용할 수 있도록).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7cfdb1cf2d05cf4d0790aeabaecf7a998c774d8d" translate="yes" xml:space="preserve">
          <source>This is because NamFnc and println wil be declared using key word static before them.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NamFnc와 println은 키워드 static을 사용하여 선언해야하기 때문입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="27e1a6c2a446413eb561255236488609660d3153" translate="yes" xml:space="preserve">
          <source>This is bit diff to explain about static key word for all beginners.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 모든 초보자를위한 정적 키워드에 대해 설명하기에는 약간 다릅니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b0c4aa70a1b80654cd9bcda07013ffb87eff889e" translate="yes" xml:space="preserve">
          <source>To be able to access them from your static methods they need to be static member variables, like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 메소드에서 액세스하려면 다음과 같이 정적 멤버 변수 여야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2656f5aecff1e079f1ab521bdf4dac1038cb53ae" translate="yes" xml:space="preserve">
          <source>To solve your problem, you need to instantiate an instance (create an object) of your class so the runtime can reserve memory for the instance (otherwise, different instances would overwrite each other which you don't want).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문제를 해결하려면 런타임에서 인스턴스의 메모리를 예약 할 수 있도록 클래스의 인스턴스를 인스턴스화 (객체 생성)해야합니다 (그렇지 않으면 다른 인스턴스가 원하지 않는 서로 덮어 쓰기).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="539d69698bbab3b002db35480dec636fa14a9588" translate="yes" xml:space="preserve">
          <source>You must understand the difference between a class and an instance of that class. If you see a car on the street, you know immediately that it's a car even if you can't see which model or type. This is because you compare what you see with the &lt;em&gt;class&lt;/em&gt; &quot;car&quot;. The class contains which is similar to all cars. Think of it as a template or an idea.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스와 해당 클래스의 인스턴스의 차이점을 이해해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;길거리에서 자동차를 보면 어떤 모델이나 유형을 볼 수 없어도 자동차라는 것을 즉시 알 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;car&quot; &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 비교 한 것이기 때문 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 클래스에는 모든 자동차와 비슷한 것이 포함되어 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;템플릿이나 아이디어로 생각하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c1b6b80376a0d4497c8861939bc5b776f80ec246" translate="yes" xml:space="preserve">
          <source>You wil get to know it clearly when you work more with Classes and Objects.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스와 객체로 더 많은 작업을 할 때 명확하게 알 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc674784561e27b2227e3462250dd671b32c4fd3" translate="yes" xml:space="preserve">
          <source>create an object with the &lt;code&gt;new&lt;/code&gt; operator using the class to make an instance of the class as an actual object and then when done with the object</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;와 객체 생성 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체와이 완료되면 다음 실제 객체로 클래스의 인스턴스를 만들고하는 클래스를 사용하여 연산자를&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="12a8502e4f50af9638b33a8989fbdb1df9824d1f" translate="yes" xml:space="preserve">
          <source>destroy the object reclaiming the resources it is holding such as memory during garbage collection.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가비지 콜렉션 중에 메모리와 같이 보유하고있는 자원을 회수하는 오브젝트를 제거하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="847752f58bd217bbb23a7b07574639a3a3447211" translate="yes" xml:space="preserve">
          <source>put dot after the class variable and</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 변수 뒤에 점을 넣고&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc226f9e2f3ab746b96051993d98192787fbf605" translate="yes" xml:space="preserve">
          <source>static fields, and methods must be invoked using the class-name e.g. MyProgram7.main(...)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 필드 및 메소드는 클래스 이름을 사용하여 호출해야합니다. 예 : MyProgram7.main (...)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="caf734e52efe3f4b85a81fec2d2bec42f855caad" translate="yes" xml:space="preserve">
          <source>the source code for the class is written creating a template or
pattern or stamp which can then be used to</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스의 소스 코드가 작성되어 템플릿 또는 패턴 또는 스탬프를 작성하여&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8d22b50c348189ba313357307fcd3c1d549e12c7" translate="yes" xml:space="preserve">
          <source>then call function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 함수를 호출하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a28261b2bccbb507b1b76467aac8ef65d6fe809" translate="yes" xml:space="preserve">
          <source>variables within a method can not be static</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;메소드 내의 변수는 정적 일 수 없습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="84c1a41d7170b5a32d2a24521aacbadd8f836d3b" translate="yes" xml:space="preserve">
          <source>|*| &lt;b&gt;Non Static :&lt;/b&gt;Non Static items can be called with Class Variable</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;| * | &lt;/font&gt;&lt;/font&gt;&lt;b&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;비 정적 :&lt;/font&gt;&lt;/font&gt;&lt;/b&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 비 정적 항목은 클래스 변수로 호출 가능&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4b74ecdf209ae54db532c1aff1f6a2836bd3f4d1" translate="yes" xml:space="preserve">
          <source>|*| &lt;b&gt;Static :&lt;/b&gt; Static items can be called with Class Name</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;| * | &lt;/font&gt;&lt;/font&gt;&lt;b&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 :&lt;/font&gt;&lt;/font&gt;&lt;/b&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 정적 아이템은 클래스 이름으로 호출 가능&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f296b910c67258e1d52585136a179b73a188aea" translate="yes" xml:space="preserve">
          <source>|*| Static and non Static Class inside a Class :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;| * | &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 내부의 정적 및 비 정적 클래스 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="70dd75e88766d32fa97bd5de4fce591df8373ad9" translate="yes" xml:space="preserve">
          <source>|*| Static and non Static function in class :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;| * | &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스의 정적 및 비 정적 함수 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
