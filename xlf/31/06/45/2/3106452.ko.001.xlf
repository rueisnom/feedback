<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/3106452">
    <body>
      <group id="3106452">
        <trans-unit id="ba1101c8ab0d885bc53afe10070029b088b582d5" translate="yes" xml:space="preserve">
          <source>1) Serializing requests (queuing) to a single instance - this is similar to a servlet NOT implementing SingleThreadModel BUT synchronizing the service/ doXXX methods; OR</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1) 단일 인스턴스로 요청을 직렬화 (큐잉)-이는 서비스 / doXXX 메소드를 동기화하는 SingleThreadModel BUT을 구현하지 않는 서블릿과 유사합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5614fd50cde75417ad30de39e97dc444129ebb07" translate="yes" xml:space="preserve">
          <source>1)when control leaves from servlet code to client don't forget that session object is being held by servlet container ie, the servlet engine</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1) 제어가 서블릿 코드에서 클라이언트로 떠날 때 세션 오브젝트가 서블릿 컨테이너, 즉 서블릿 엔진에 의해 유지되고 있음을 잊지 않습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a20fdd483546f0c5ce18b9f38e38c6db4fb633c6" translate="yes" xml:space="preserve">
          <source>1: context information</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1 : 상황 정보&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a55bac31770151c11b64a20f6e6835991ef07b2b" translate="yes" xml:space="preserve">
          <source>2) Creating a pool of instances - which's a better option and a trade-off between the boot-up/initialization effort/time of the servlet as against the restrictive parameters (memory/ CPU time) of the environment hosting the servlet.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2) 인스턴스 풀 생성-서블릿을 호스팅하는 환경의 제한 매개 변수 (메모리 / CPU 시간)와 비교하여 서블릿의 부팅 / 초기화 노력 / 시간 사이의 트레이드 오프와 더 나은 옵션입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8008ae6cff9ec65a0e3d57321dafe58e449f1c94" translate="yes" xml:space="preserve">
          <source>2)multithreading is left to servlet developers people for implementing ie., handle the multiple requests of client nothing to bother about multithread code</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2) 멀티 스레딩은 구현을 위해 서블릿 개발자들에게 맡겨져 있습니다. 즉, 멀티 스레드 코드에 대해 신경 쓰지 않아도 클라이언트의 여러 요청을 처리하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="69ce12ce4ff3251bf69d6681a147ecf02c9d0530" translate="yes" xml:space="preserve">
          <source>2: initial configuration information</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2 : 초기 구성 정보&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c8ce079d1747d58cddf550625484cdb316a408b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Implement SingleThreadInterface(i)&lt;/code&gt; 
which is a blank Interface there is no</source>
          <target state="translated">&lt;code&gt;Implement SingleThreadInterface(i)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 빈 인터페이스 인 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SingleThreadInterface (i) 구현&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="59a728b80d0826f20125748e535aae2220443b23" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit&lt;/strong&gt; There is an excellent tutorial &lt;a href=&quot;http://www.apl.jhu.edu/~hall/java/Servlet-Tutorial/Servlet-Tutorial-Session-Tracking.html&quot;&gt;here&lt;/a&gt; on how to work with session inside of servlets. And &lt;a href=&quot;http://docs.oracle.com/javaee/5/tutorial/doc/bnafd.html&quot;&gt;here&lt;/a&gt; is a chapter from Sun about Java Servlets, what they are and how to use them.  Between those two articles, you should be able to answer all of your questions.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;편집 &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://www.apl.jhu.edu/~hall/java/Servlet-Tutorial/Servlet-Tutorial-Session-Tracking.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 서블릿 내부에서 세션을 다루는 방법에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대한 훌륭한 튜토리얼이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javaee/5/tutorial/doc/bnafd.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 그들이 및 사용 방법에 어떤 자바 서블릿에 대한 썬의 장이다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 두 기사 사이에서 모든 질문에 대답 할 수 있어야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="495b3e33baeca9bfc43448046fff832a0c39550a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example::&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example::&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="31d05cba08a9f02be6fa8c2ccfae722ea0ae924f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Instantiation&lt;/strong&gt; - a servlet is instantiated when the container receives the first request mapped to the servlet (unless the servlet is configured to load on startup with the &lt;code&gt;&amp;lt;load-on-startup&amp;gt;&lt;/code&gt; element in &lt;code&gt;web.xml&lt;/code&gt;). The same instance is used to serve subsequent requests.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인스턴스화&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -서블릿은 컨테이너가 서블릿에 맵핑 된 첫 번째 요청을 수신 할 때 인스턴스화됩니다 (서블릿이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;load-on-startup&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;web.xml&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;lt;load-on-startup&amp;gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 요소 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로로드되도록 구성되지 않은 경우 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;후속 요청을 처리하는 데 동일한 인스턴스가 사용됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="140adedf00aa6524e936b4f37cb938fed444395d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;No.&lt;/strong&gt; Servlets are &lt;strong&gt;not Thread safe&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;제&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 서블릿은되어 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드로부터 안전하지 않습니다&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7f84a3ed795e47b7293f053ee98d38fafa98c4c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sessions&lt;/strong&gt; - what Chris Thompson said.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;세션&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -크리스 톰슨의 말.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="129f80e177fbbfa121ddb68b66aff455d82d5674" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Step 1&lt;/strong&gt;: request object is evaluated for incoming session ID.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1 단계&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : 요청 세션이 들어오는 세션 ID에 대해 평가됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="250ad378e0e8f2a205369e68f39e0a69821ff396" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Step 2&lt;/strong&gt;: if ID not available a brand new HttpSession object is created and its corresponding session ID is generated (ie of HashTable) session ID is stored into httpservlet response object and the reference of HttpSession object is returned to the servlet (doGet/doPost).</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2 단계&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : ID를 사용할 수없는 경우 새 HttpSession 오브젝트가 작성되고 해당 세션 ID가 생성되면 (예 : HashTable) 세션 ID가 httpservlet 응답 오브젝트에 저장되고 HttpSession 오브젝트의 참조가 서블릿 (doGet / doPost)으로 리턴됩니다. .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="21746fbb5b2cd0e8dd6549bc0ad9f343aed1379b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Step 3&lt;/strong&gt;: if ID available brand new session object is not created session ID is picked up from the request object search is made in the collection of sessions by using session ID as the key.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3 단계&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : 사용 가능한 ID의 새 세션 오브젝트가 작성되지 않은 경우 세션 ID를 키로 사용하여 세션 콜렉션에서 요청 오브젝트 검색이 수행됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b7805639872d5d299df4ab9f6224f0215682c3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;if u want to make it Servlet as Thread safe ., U can go for&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;U를 스레드 안전으로 서블릿으로 만들고 싶다면 U는&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d02afe5b4227e603cc94a824dd0e800553acc816" translate="yes" xml:space="preserve">
          <source>A servlet container may send concurrent requests through the service
  method of the servlet. To handle the requests, the Servlet Developer
  must make adequate provisions for concurrent processing with multiple
  threads in the service method.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서블릿 컨테이너는 서블릿의 서비스 메소드를 통해 동시 요청을 보낼 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;요청을 처리하려면 서블릿 개발자는 서비스 메소드에서 여러 스레드로 동시 처리를 위해 적절한 프로비저닝을해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9d59511176e0968cbfd8008b4b1ee2d73f9831c" translate="yes" xml:space="preserve">
          <source>A servlet is created when the application starts (it is deployed on the servlet container) or when it is first accessed (depending on the load-on-startup setting)
when the servlet is instantiated, the init() method of the servlet is called
then the servlet (its one and only instance) handles all requests (its service() method being called by multiple threads). That's why it is not advisable to have any synchronization in it, and you should avoid instance variables of the servlet
when the application is undeployed (the servlet container stops), the destroy() method is called.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서블릿은 애플리케이션이 시작될 때 (서블릿 컨테이너에 배치됨) 또는 서블릿이 인스턴스화 될 때 처음 시작 (로드시 설정에 따라) 액세스 될 때 작성됩니다. 서블릿의 init () 메소드가 호출됩니다. 그런 다음 서블릿 (하나의 유일한 인스턴스)은 모든 요청 (여러 스레드가 호출하는 service () 메소드)을 처리합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇기 때문에 동기화가 바람직하지 않으며 애플리케이션이 배포 취소 될 때 (서블릿 컨테이너가 중지 된 경우) destroy () 메소드가 호출 될 때 서블릿의 인스턴스 변수를 피해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="489a01a9e61b04486464aaddfe186dbe55155600" translate="yes" xml:space="preserve">
          <source>A)only once (for every client request a new thread is created)
only one instance of the servlet serves any number of the client request ie, after serving one client request server does not die. It waits for other client requests ie what CGI (for every client request a new process is created) limitation is overcome with the servlet (internally servlet engine creates the thread).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A) 한 번만 (모든 클라이언트 요청에 대해 새 스레드가 작성 됨) 하나의 서블릿 인스턴스 만 클라이언트 요청을 처리합니다 (즉, 하나의 클라이언트 요청 서버를 제공 한 후에도 죽지 않음). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서블릿 (내부 서블릿 엔진이 스레드를 작성 함)을 사용하여 다른 클라이언트 요청, 즉 CGI (모든 클라이언트 요청에 대해 새 프로세스가 작성 됨) 한계를 극복합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0e7e4a3f75bd46b69450d4a294001b70092512d4" translate="yes" xml:space="preserve">
          <source>A)whenever getSession() is called on HttpServletRequest object</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A) getSession ()이 HttpServletRequest 객체에서 호출 될 때마다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c5a010287e089f0cd9f1ddd206bdcc45b53e8653" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Servlet&lt;/code&gt;, &lt;code&gt;Filter&lt;/code&gt; and &lt;code&gt;Listener&lt;/code&gt; instances live as long as the web app lives. They are shared among &lt;em&gt;all&lt;/em&gt; requests in &lt;em&gt;all&lt;/em&gt; sessions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Servlet&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Filter&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Listener&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 인스턴스는 웹 앱이 존재하는 한 지속됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그들은 공유됩니다 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모두&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 요청 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 모든&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 세션.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e2827eacbe609c170dd90d31c0c77c0b063983d5" translate="yes" xml:space="preserve">
          <source>Although it is not recommended, an alternative for the Developer is to
  implement the SingleThreadModel interface which requires the container
  to guarantee that there is only one request thread at a time in the
  service method. A servlet container may satisfy this requirement by
  serializing requests on a servlet, or by maintaining a pool of servlet
  instances. If the servlet is part of a Web application that has been
  marked as distributable, the container may maintain a pool of servlet
  instances in each JVM that the application is distributed across.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;권장되지는 않지만 개발자의 대안은 서비스 메소드에 한 번에 하나의 요청 스레드 만 있음을 보장하기 위해 컨테이너가 필요한 SingleThreadModel 인터페이스를 구현하는 것입니다. 서블릿 컨테이너는 서블릿에서 요청을 직렬화하거나 서블릿 인스턴스 풀을 유지함으로써이 요구 사항을 충족시킬 수 있습니다. 서블릿이 분배 가능으로 표시된 웹 애플리케이션의 일부인 경우 컨테이너는 애플리케이션이 분배되는 각 JVM에서 서블릿 인스턴스 풀을 유지할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="566d8a9623231782bd4c71ed922e58a54fc837de" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;attribute&lt;/code&gt; that is defined in &lt;code&gt;ServletContext&lt;/code&gt;, &lt;code&gt;HttpServletRequest&lt;/code&gt; and &lt;code&gt;HttpSession&lt;/code&gt; will live as long as the object in question lives. The object itself represents the &quot;scope&quot; in bean management frameworks such as JSF, CDI, Spring, etc. Those frameworks store their scoped beans as an &lt;code&gt;attribute&lt;/code&gt; of its closest matching scope.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;ServletContext&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt; &lt;code&gt;HttpServletRequest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt; &lt;code&gt;HttpSession&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 정의 된 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;attribute&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해당 오브젝트가 존재하는 한 지속됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;오브젝트 자체는 JSF, CDI, Spring 등과 같은 Bean 관리 프레임 워크에서 &quot;범위&quot;를 나타냅니다. 이러한 프레임 워크는 범위가 지정된 Bean을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가장 일치하는 범위 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 &lt;/font&gt; &lt;code&gt;attribute&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 으로 저장합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6ff0f1f4f96e23320df4c0f6bdbe98d10f813b18" translate="yes" xml:space="preserve">
          <source>As is clear from above explanations, by implementing the &lt;b&gt;SingleThreadModel&lt;/b&gt;, a servlet can be assured thread-safety by the servlet container. The container implementation can do this in 2 ways:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 설명에서 알 수 있듯이 &lt;/font&gt;&lt;/font&gt;&lt;b&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SingleThreadModel&lt;/font&gt;&lt;/font&gt;&lt;/b&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 구현 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 서블릿 컨테이너가 서블릿을 스레드로부터 안전하게 보호 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컨테이너 구현은 두 가지 방법으로이를 수행 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6c0932fe90514f985aa06ab25b9e5c252c1965d" translate="yes" xml:space="preserve">
          <source>As per the &lt;a href=&quot;http://www.faqs.org/rfcs/rfc2965.html&quot;&gt;HTTP cookie specification&lt;/a&gt; (a contract any decent web browser and web server must adhere to), the client (the web browser) is required to send this cookie back in subsequent requests in the &lt;code&gt;Cookie&lt;/code&gt; header for as long as the cookie is valid (i.e. the unique ID must refer to an unexpired session and the domain and path are correct). Using your browser's built-in HTTP traffic monitor, you can verify that the cookie is valid (press F12 in Chrome / Firefox 23+ / IE9+, and check the &lt;em&gt;Net/Network&lt;/em&gt; tab). The servlet container will check the &lt;code&gt;Cookie&lt;/code&gt; header of every incoming HTTP request for the presence of the cookie with the name &lt;code&gt;JSESSIONID&lt;/code&gt; and use its value (the session ID) to get the associated &lt;code&gt;HttpSession&lt;/code&gt; from server's memory.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당으로 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.faqs.org/rfcs/rfc2965.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HTTP 쿠키 사양&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (계약을 준수해야 어떤 점잖은 웹 브라우저와 웹 서버), 클라이언트 (웹 브라우저)는 후속 요청에서이 쿠키 다시 보낼 필요가있을 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Cookie&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 쿠키가 유효 길이만큼을위한 헤더 (예 : 고유 ID는 만료되지 않은 세션을 참조해야하며 도메인과 경로는 정확합니다). 브라우저의 내장 HTTP 트래픽 모니터를 사용하여 쿠키가 유효한지 확인할 수 있습니다 (Chrome / Firefox 23 + / IE9 +에서 F12를 누르고 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Net / Network&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 탭을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;확인 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하십시오). 서블릿 컨테이너는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;들어오는 모든 HTTP 요청 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Cookie&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 헤더에서 이름이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSESSIONID&lt;/code&gt; 인&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 쿠키 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가 있는지 확인하고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해당 값 (세션 ID)을 사용하여 연관된 값을 가져옵니다.&lt;/font&gt;&lt;/font&gt; &lt;code&gt;HttpSession&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서버 메모리에서 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HttpSession&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="986f60bb84101ffe61792add1e31f00ed705b1d1" translate="yes" xml:space="preserve">
          <source>Best option for Session management in Java</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java 세션 관리를위한 최상의 옵션&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="69cfd0e34cd0468b9efd3410978aafd23969f6d3" translate="yes" xml:space="preserve">
          <source>Difference between / and /* in servlet mapping url pattern</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서블릿 매핑 URL 패턴에서 /와 / *의 차이점&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ca316e6598b03852b8642eb459d6b143fa63fedd" translate="yes" xml:space="preserve">
          <source>During instantiation phase of the servlet, servlet instance is ready but it cannot serve the client request because it is missing with two pieces of information:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서블릿의 인스턴스화 단계에서 서블릿 인스턴스는 준비되었지만 두 가지 정보로 누락되어 클라이언트 요청을 처리 할 수 ​​없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d623266db941a8e2731c8b0f4bf7944c27ec351" translate="yes" xml:space="preserve">
          <source>For servlets not implementing the SingleThreadModel interface, if the
  service method (or methods such as doGet or doPost which are
  dispatched to the service method of the HttpServlet abstract class)
  has been defined with the synchronized keyword, the servlet container
  cannot use the instance pool approach, but must serialize requests
  through it. It is strongly recommended that Developers not synchronize
  the service method (or methods dispatched to it) in these
  circumstances because of detrimental effects on performance</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SingleThreadModel 인터페이스를 구현하지 않는 서블릿의 경우 서비스 메소드 (또는 HttpServlet 추상 클래스의 서비스 메소드로 전달되는 doGet 또는 doPost와 같은 메소드)가 동기화 된 키워드로 정의 된 경우, 서블릿 컨테이너는 인스턴스 풀 접근을 사용할 수 없습니다. 요청을 직렬화해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이러한 상황에서 개발자는 성능에 부정적인 영향을 미치므로 서비스 방법 (또는 전달 된 방법)을 동기화하지 않는 것이 좋습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f1c1bd42ea7c7148d7b35f564134ddc034b75c21" translate="yes" xml:space="preserve">
          <source>How do servlets work? Instantiation, sessions, shared variables and multithreading</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서블릿은 어떻게 작동합니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인스턴스화, 세션, 공유 변수 및 멀티 스레딩&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49660b6f0dd470e2821cf24018e1ceb00fb0d695" translate="yes" xml:space="preserve">
          <source>HttpServletRequest and HttpServletResponse</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HttpServletRequest 및 HttpServletResponse&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed11342ec40f4d2d37a220c113516b670adc52bb" translate="yes" xml:space="preserve">
          <source>HttpSession</source>
          <target state="translated">HttpSession</target>
        </trans-unit>
        <trans-unit id="c23894758b7df14abd8b4f723a36d83a8fee66bd" translate="yes" xml:space="preserve">
          <source>I feel that Synchronized block is better than making the whole method</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전체 블록을 만드는 것보다 동기화 된 블록이 더 좋다고 생각합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30a942487747396fb1240e188b44c416f86c3812" translate="yes" xml:space="preserve">
          <source>If &lt;strong&gt;load-on-startup&lt;/strong&gt; is &lt;strong&gt;false&lt;/strong&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;만약 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;시작시로드가&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있습니다 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;거짓&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c12a13537e71c85b97056247cc8961ba0c68fa41" translate="yes" xml:space="preserve">
          <source>If &lt;strong&gt;load-on-startup&lt;/strong&gt; is &lt;strong&gt;true&lt;/strong&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;만약 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;시작시로드가&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있다 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;진실&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="217ea5cca9699504b57fcecb48b0029845d1abba" translate="yes" xml:space="preserve">
          <source>In a nutshell</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;간단히 말해서&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="36fc80f14fa7c5420d415452f328b748294b2f21" translate="yes" xml:space="preserve">
          <source>In short: the web server issues a unique identifier to &lt;em&gt;each visitor&lt;/em&gt; on his &lt;em&gt;first&lt;/em&gt; visit. The visitor must bring back that ID for him to be recognised next time around. This identifier also allows the server to properly segregate objects owned by one session against that of another.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한마디로 : 웹 서버 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 방문시 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;각 방문자&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에게 고유 식별자를 발급합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;방문자는 다음 번에 자신을 인식 할 수 있도록 해당 ID를 가져와야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 식별자를 사용하면 서버가 한 세션이 소유 한 개체를 다른 세션의 개체와 올바르게 분리 할 수 ​​있습니다.&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="59ff4077a58bdbe02b1ebec7305f4e7056ab4bbb" translate="yes" xml:space="preserve">
          <source>In the case of &lt;a href=&quot;https://stackoverflow.com/tags/servlet-filters/info&quot;&gt;filters&lt;/a&gt;, the &lt;code&gt;doFilter()&lt;/code&gt; method is invoked. When the servlet container's code calls &lt;code&gt;chain.doFilter(request, response)&lt;/code&gt;, the request and response continue on to the next filter, or hit the servlet if there are no remaining filters.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 경우에는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/tags/servlet-filters/info&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;필터&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;doFilter()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드가 호출된다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서블릿 컨테이너의 코드가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;chain.doFilter(request, response)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 호출 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 요청 및 응답이 다음 필터로 계속 진행되거나 남아있는 필터가없는 경우 서블릿을 누르십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a4a0cf437739d0294cf41b2bbea4cd4e1fc12757" translate="yes" xml:space="preserve">
          <source>In the case of &lt;a href=&quot;https://stackoverflow.com/tags/servlets/info&quot;&gt;servlets&lt;/a&gt;, the &lt;code&gt;service()&lt;/code&gt; method is invoked. By default, this method determines which one of the &lt;code&gt;doXxx()&lt;/code&gt; methods to invoke based off of  &lt;code&gt;request.getMethod()&lt;/code&gt;. If the determined method is absent from the servlet, then an HTTP 405 error is returned in the response.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 경우에는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/tags/servlets/info&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서블릿&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;service()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드가 호출된다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본적으로이 메소드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 &lt;/font&gt; &lt;code&gt;request.getMethod()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 기반으로 호출 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;할 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;doXxx()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;중 하나를 판별 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결정된 메소드가 서블릿에없는 경우 응답에 HTTP 405 오류가 리턴됩니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9703fb09fa8d1f2220de1ecaa2ef3c5110aa295b" translate="yes" xml:space="preserve">
          <source>Inshort form:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;짧은 형태 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b4a3c736d6c8baf7c51c19ad582571dfdd3f2aa0" translate="yes" xml:space="preserve">
          <source>It comes with a small risk though. Remember: this single guy holds all the order information in his pocket: so if you're not cautious about &lt;a href=&quot;http://tutorials.jenkov.com/java-servlets/servlet-concurrency.html&quot;&gt;thread safety on servlets&lt;/a&gt;, he may end up giving the wrong order to a certain client.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 작은 위험이 따릅니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기억하십시오 :이 싱글 녀석은 주머니에 모든 주문 정보를 가지고 있습니다 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://tutorials.jenkov.com/java-servlets/servlet-concurrency.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 서블릿의 스레드 안전에&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대해주의하지 않으면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;특정 클라이언트에게 잘못된 주문을 줄 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">Note:</target>
        </trans-unit>
        <trans-unit id="6389b1c1e8688e37da90a236912f4b66399c9d7a" translate="yes" xml:space="preserve">
          <source>Now, if 2 or more users send request to this server then what happens to the session variables? Will they all be common for all the users or they will be different for each user. If they are different, then how was the server able to differentiate between different users?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 두 명 이상의 사용자가이 서버에 요청을 보내면 세션 변수는 어떻게됩니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 사용자에게 공통적이거나 각 사용자마다 다를 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서로 다른 경우 서버는 어떻게 다른 사용자를 구별 할 수 있었습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bdaf7009ca8cf1117a5f574b819499f71badba07" translate="yes" xml:space="preserve">
          <source>On the client side, the session cookie stays alive for as long as the browser instance is running. So, if the client closes the browser instance (all tabs/windows), then the session is trashed on the client's side. In a new browser instance, the cookie associated with the session wouldn't exist, so it would no longer be sent. This causes an entirely new &lt;code&gt;HttpSession&lt;/code&gt; to be created, with an entirely new session cookie being used.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클라이언트 측에서 세션 쿠키는 브라우저 인스턴스가 실행되는 동안 계속 유지됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 클라이언트가 브라우저 인스턴스 (모든 탭 / 창)를 닫으면 세션이 클라이언트 쪽에서 휴지통으로 이동합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;새 브라우저 인스턴스에는 세션과 관련된 쿠키가 존재하지 않으므로 더 이상 쿠키가 전송되지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이로 인해 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;완전히 새로운 세션 쿠키가 사용되는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;완전히 새로운 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;HttpSession&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 생성됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd62ccec79f68daf950e4b9578045433edb8102e" translate="yes" xml:space="preserve">
          <source>Once he's on the service mode and on the groove, the &lt;em&gt;same&lt;/em&gt; servlet will work on the requests from all other clients.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그가 서비스 모드와 그루브에 있으면 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;같은&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 서블릿이 다른 모든 클라이언트의 요청에 대해 작동합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db6e07a52452c21614dfd7e885c72b10d8b345b4" translate="yes" xml:space="preserve">
          <source>Once the search is successful session ID is stored into HttpServletResponse and the existing session object references are returned to the doGet() or doPost() of UserDefineservlet.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;검색에 성공하면 세션 ID가 HttpServletResponse에 저장되고 기존 세션 오브젝트 참조가 UserDefineservlet의 doGet () 또는 doPost ()로 리턴됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c476d2316f1dace46f2e8e7329173f96071fb6ec" translate="yes" xml:space="preserve">
          <source>One more similar question, if there are &lt;code&gt;n&lt;/code&gt; users accessing a particular servlet, then this servlet gets instantiated only the first time the first user accessed it or does it get instantiated for all the users separately? In other words, what happens to the instance variables?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하나 더 비슷한 질문, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;특정 서블릿에 액세스하는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 명의 사용자가있는 경우이 서블릿은 처음 사용자가 처음 액세스 할 때만 인스턴스화되거나 모든 사용자에 대해 개별적으로 인스턴스화됩니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉, 인스턴스 변수는 어떻게됩니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="724c20efc1967b9636f822455cb3f495483ba931" translate="yes" xml:space="preserve">
          <source>Q) In the lifetime of servlet how many times instantiation and initialization happens ??</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Q) 서블릿의 수명 동안 몇 번이나 인스턴스화 및 초기화가 발생합니까 ??&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c9f9f5aea0ed83675a99943348e4412fc43dc336" translate="yes" xml:space="preserve">
          <source>Q)How session concept works?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Q) 세션 개념은 어떻게 작동합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="371a87eafb4de078ff674d69a5a89c186532eb49" translate="yes" xml:space="preserve">
          <source>See also:</source>
          <target state="translated">또한보십시오:</target>
        </trans-unit>
        <trans-unit id="228745ca65291e57f982d3f64ba7625efd08c1ac" translate="yes" xml:space="preserve">
          <source>Servlet Instantiation</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서블릿 인스턴스화&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c15ea98bfe8b84f54453a39359f5904050da2aee" translate="yes" xml:space="preserve">
          <source>Servlet engine creates servletConfig interface object encapsulating the above missing information into it
servlet engine calls init() of the servlet by supplying servletConfig object references as an argument. Once init() is completely executed servlet is ready to serve the client request.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서블릿 엔진은 위에 누락 된 정보를 캡슐화하는 servletConfig 인터페이스 오브젝트를 작성합니다. 서블릿 엔진은 servletConfig 오브젝트 참조를 인수로 제공하여 서블릿의 init ()를 호출합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;init ()가 완전히 실행되면 서블릿은 클라이언트 요청을 처리 할 준비가됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cbffd42c126e938577b2e7f7005d85bfa192d015" translate="yes" xml:space="preserve">
          <source>Servlet seems to handle multiple concurrent browser requests synchronously</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서블릿은 여러 동시 브라우저 요청을 동 기적으로 처리하는 것 같습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ee7ac0925504d16a00343ba1fd8c5a44cb9385c" translate="yes" xml:space="preserve">
          <source>ServletContext</source>
          <target state="translated">ServletContext</target>
        </trans-unit>
        <trans-unit id="9e6d3553a005afa1a6658369414c1ecdfaa516b3" translate="yes" xml:space="preserve">
          <source>Session in Java servlets is the same as session in other languages such as PHP.  It is unique to the user.  The server can keep track of it in different ways such as cookies, url rewriting etc.  This &lt;a href=&quot;http://java.sun.com/products/servlet/2.2/javadoc/javax/servlet/http/HttpSession.html&quot;&gt;Java doc&lt;/a&gt; article explains it in the context of Java servlets and indicates that exactly how session is maintained is an implementation detail left to the designers of the server.  The specification only stipulates that it must be maintained as unique to a user across multiple connections to the server.  Check out &lt;a href=&quot;http://download.oracle.com/docs/cd/A97336_01/buslog.102/a83726/tecbkgn2.htm&quot;&gt;this article from Oracle&lt;/a&gt; for more information about both of your questions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java 서블릿의 세션은 PHP와 같은 다른 언어의 세션과 동일합니다. 사용자에게 고유합니다. 서버는 쿠키, URL 재 작성 등과 같은 다양한 방법으로 서버를 추적 할 수 있습니다.이 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://java.sun.com/products/servlet/2.2/javadoc/javax/servlet/http/HttpSession.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java doc&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 기사는 Java 서블릿의 컨텍스트에서이를 설명하고 세션을 유지 보수하는 방법이 서버 설계자에게 남겨진 구현 세부 사항임을 정확하게 나타냅니다. 이 사양은 서버에 대한 여러 연결을 통해 사용자에게 고유하게 유지되어야한다고 규정합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 가지 질문에 대한 자세한 내용은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://download.oracle.com/docs/cd/A97336_01/buslog.102/a83726/tecbkgn2.htm&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Oracle의이 기사를&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 확인하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e11e37a9253b34ff1c7224447e143fabca1be9fd" translate="yes" xml:space="preserve">
          <source>Sessions</source>
          <target state="translated">Sessions</target>
        </trans-unit>
        <trans-unit id="62f7732829f81134162d0f74d5aa608b568f6523" translate="yes" xml:space="preserve">
          <source>Suppose, I have a webserver which holds numerous servlets. For information passing among those servlets I am setting session and instance variables.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수많은 서블릿을 보유하고있는 웹 서버가 있다고 가정 해보십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해당 서블릿간에 정보를 전달하기 위해 세션 및 인스턴스 변수를 설정하고 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c195e4374c85d74cc43f4f08a33d51e3c51b4cfd" translate="yes" xml:space="preserve">
          <source>Synchronized</source>
          <target state="translated">Synchronized</target>
        </trans-unit>
        <trans-unit id="73d25761130091f5753c528e18539b4d1bc14933" translate="yes" xml:space="preserve">
          <source>That said, your major concern is possibly &lt;em&gt;thread safety&lt;/em&gt;. You should now know that servlets and filters are shared among all requests. That's the nice thing about Java, it's multithreaded and different threads (read: HTTP requests) can make use of the same instance. It would otherwise be too expensive to recreate, &lt;code&gt;init()&lt;/code&gt; and &lt;code&gt;destroy()&lt;/code&gt; them for every single request.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉, 주요 관심사는 아마도 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드 안전&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서블릿과 필터가 모든 요청에서 공유됨을 알아야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java의 좋은 점은 멀티 스레드이며 다른 스레드 (읽기 : HTTP 요청)가 동일한 인스턴스를 사용할 수 있다는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇지 않으면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 단일 요청에 대해 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다시 작성, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;init()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;destroy()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하기에는 너무 비쌉니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa33e56928d3333daa556c21f16efbe5bde31ea8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HttpServletRequest&lt;/code&gt; and &lt;code&gt;HttpServletResponse&lt;/code&gt; live from the time the servlet receives an HTTP request from the client, until the complete response (the web page) has arrived. It is &lt;em&gt;not&lt;/em&gt; shared elsewhere.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;HttpServletRequest&lt;/code&gt; 의&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;HttpServletResponse&lt;/code&gt; 를가&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 전체 응답 (웹 페이지)에 도착 할 때까지, 서블릿이 클라이언트에서 HTTP 요청을 수신 할 때부터 살고 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은되어 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있지&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 다른 곳에서 공유했다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2276c8c634ce7bce6c35c99b7dfc38f19adacaff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HttpSession&lt;/code&gt; lives for as long as the client is interacting with the web app with the same browser instance, and the session hasn't timed out at the server side. It is shared among &lt;em&gt;all&lt;/em&gt; requests in the &lt;em&gt;same&lt;/em&gt; session.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;HttpSession&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 긴 클라이언트가 동일한 브라우저 인스턴스 웹 응용 프로그램과 상호 작용하고, 세션이 서버 측에서 제한 시간을 초과하지 않은만큼을위한 삶. &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동일한&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 세션의 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 요청 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;간에 공유 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;됩니다.&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="efc305c6f0e447dd307bb85fa40046fd85936562" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HttpSession&lt;/code&gt; stays alive until it has been idle (i.e. not used in a request) for more than the timeout value specified in &lt;code&gt;&amp;lt;session-timeout&amp;gt;&lt;/code&gt;, a setting in &lt;code&gt;web.xml&lt;/code&gt;. The timeout value defaults to 30 minutes. So, when the client doesn't visit the web app for longer than the time specified, the servlet container trashes the session. Every subsequent request, even with the cookie specified, will not have access to the same session anymore; the servlet container will create a new session.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;HttpSession&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 지정된 시간 초과 값보다 더 살아 숙박이 유휴 때까지 (즉, 요청에서 사용되지 않음) &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;session-timeout&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에, 설정 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;web.xml&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;시간 종료 값은 기본적으로 30 분입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 클라이언트가 지정된 시간보다 오랫동안 웹 앱을 방문하지 않으면 서블릿 컨테이너가 세션을 휴지통에 버립니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;쿠키가 지정된 경우에도 이후의 모든 요청은 더 이상 동일한 세션에 액세스 할 수 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서블릿 컨테이너는 새 세션을 만듭니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b9bd226407e0a43f9128e98f8a3781f17a554ffd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ServletContext&lt;/code&gt; lives for as long as the web app lives. It is shared among &lt;em&gt;all&lt;/em&gt; requests in &lt;em&gt;all&lt;/em&gt; sessions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;ServletContext&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 한 웹 응용 프로그램의 삶 등을위한 삶. &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 세션의 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 요청 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;간에 공유 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;됩니다.&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a87668a97eb0d5404ee1cfd8d5b4e4c464ed63f0" translate="yes" xml:space="preserve">
          <source>The Servlet Specification &lt;strong&gt;JSR-315&lt;/strong&gt; clearly defines the web container behavior in the service (and doGet, doPost, doPut etc.) methods (2.3.3.1 Multithreading Issues, Page 9):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서블릿 사양 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSR-315&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 서비스 (및 doGet, doPost, doPut 등) 메소드 (2.3.3.1 멀티 스레딩 문제, 페이지 9)에서 웹 컨테이너 동작을 명확하게 정의합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8bba4eb5bf7c898a439883a844395be85297fd24" translate="yes" xml:space="preserve">
          <source>The request object provides access to all of the information about the HTTP request, such as its URL, headers, query string and body. The response object provides the ability to control and send the HTTP response the way you want by, for instance, allowing you to set the headers and the body (usually with generated HTML content from a JSP file). When the HTTP response is committed and finished, both the request and response objects are recycled and made available for reuse.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;요청 객체는 URL, 헤더, 쿼리 문자열 및 본문과 같은 HTTP 요청에 대한 모든 정보에 대한 액세스를 제공합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;응답 객체는 원하는 방식으로 HTTP 응답을 제어하고 보낼 수있는 기능을 제공합니다. 예를 들어 헤더 및 본문 (일반적으로 JSP 파일에서 생성 된 HTML 내용으로)을 설정할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HTTP 응답이 커밋되고 완료되면 요청 및 응답 객체가 모두 재활용되고 재사용 할 수있게됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="02113366bc46c507f2083b374a78e8a9578378b3" translate="yes" xml:space="preserve">
          <source>The servlet container is attached to a web server that listens for HTTP requests on a certain port number (port 8080 is usually used during development and port 80 in production). When a client (e.g. user with a web browser, or &lt;a href=&quot;https://stackoverflow.com/questions/2793150/how-to-use-java-net-urlconnection-to-fire-and-handle-http-requests&quot;&gt;programmatically using &lt;code&gt;URLConnection&lt;/code&gt;&lt;/a&gt;) sends an HTTP request, the servlet container creates new &lt;a href=&quot;https://javaee.github.io/javaee-spec/javadocs/javax/servlet/http/HttpServletRequest.html&quot;&gt;&lt;code&gt;HttpServletRequest&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://javaee.github.io/javaee-spec/javadocs/javax/servlet/http/HttpServletResponse.html&quot;&gt;&lt;code&gt;HttpServletResponse&lt;/code&gt;&lt;/a&gt; objects and passes them through any defined &lt;code&gt;Filter&lt;/code&gt; in the chain and, eventually, the &lt;code&gt;Servlet&lt;/code&gt; instance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서블릿 컨테이너는 특정 포트 번호에서 HTTP 요청을 수신하는 웹 서버에 연결됩니다 (포트 8080은 일반적으로 개발 중에 사용되고 포트 80은 프로덕션에 사용됨). 클라이언트 (예 : 웹 브라우저 사용자 또는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2793150/how-to-use-java-net-urlconnection-to-fire-and-handle-http-requests&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로그래밍 방식으로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;URLConnection&lt;/code&gt; 을&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하는 사용자 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;)가 HTTP 요청을 보내면 서블릿 컨테이너는 새 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://javaee.github.io/javaee-spec/javadocs/javax/servlet/http/HttpServletRequest.html&quot;&gt; &lt;code&gt;HttpServletRequest&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://javaee.github.io/javaee-spec/javadocs/javax/servlet/http/HttpServletResponse.html&quot;&gt; &lt;code&gt;HttpServletResponse&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 체인의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정의 된 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Filter&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 결국 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Servlet&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 인스턴스를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;통해 전달합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b41d5f82f68e790d6eef2166e786219cb9e7a0ef" translate="yes" xml:space="preserve">
          <source>This is allows accessing more than one threads at a time</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한 번에 둘 이상의 스레드에 액세스 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b66b6cbe04365929e922b75680e179e46127f3a3" translate="yes" xml:space="preserve">
          <source>Thread Safety</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드 안전&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3d6c6af5cdbac0a71f7d2038ab2a2940a6bbcebd" translate="yes" xml:space="preserve">
          <source>What is the difference between JSF, Servlet and JSP?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSF, Servlet 및 JSP의 차이점은 무엇입니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd18896b344bb508af6f2197b91881e60d485b1c" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;Servlet&lt;/code&gt; has a &lt;code&gt;&amp;lt;servlet&amp;gt;&amp;lt;load-on-startup&amp;gt;&lt;/code&gt; or &lt;code&gt;@WebServlet(loadOnStartup)&lt;/code&gt; value greater than &lt;code&gt;0&lt;/code&gt;, then its &lt;code&gt;init()&lt;/code&gt; method is also invoked during startup with a new &lt;a href=&quot;https://javaee.github.io/javaee-spec/javadocs/javax/servlet/ServletConfig.html&quot;&gt;&lt;code&gt;ServletConfig&lt;/code&gt;&lt;/a&gt;. Those servlets are initialized in the same order specified by that value (&lt;code&gt;1&lt;/code&gt; is 1st, &lt;code&gt;2&lt;/code&gt; is 2nd, etc). If the same value is specified for more than one servlet, then each of those servlets is loaded in the same order as they appear in the &lt;code&gt;web.xml&lt;/code&gt;, &lt;code&gt;web-fragment.xml&lt;/code&gt;, or &lt;code&gt;@WebServlet&lt;/code&gt; classloading. In the event the &quot;load-on-startup&quot; value is absent, the &lt;code&gt;init()&lt;/code&gt; method will be invoked whenever the HTTP request hits that servlet for the very first time.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;때 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Servlet&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 갖는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;servlet&amp;gt;&amp;lt;load-on-startup&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@WebServlet(loadOnStartup)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 보다 큰 값 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 다음의, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;init()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드와 같은 새로운 시작시 호출 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://javaee.github.io/javaee-spec/javadocs/javax/servlet/ServletConfig.html&quot;&gt; &lt;code&gt;ServletConfig&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . 해당 서블릿은 해당 값으로 지정된 순서대로 초기화됩니다 ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 1, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 2 등). 둘 이상의 서블릿에 대해 동일한 값이 지정되면 해당 서블릿 각각은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;web.xml&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;web-fragment.xml&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@WebServlet&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로딩과 동일한 순서로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로드됩니다. &quot;start-on-startup&quot;값이 없으면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;init()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; HTTP 요청이 해당 서블릿에 처음으로 도달 할 때마다 메소드가 호출됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="afdd47fbdf1b79e44e8286593bcd1c9ec0634865" translate="yes" xml:space="preserve">
          <source>When a client visits the webapp for the first time and/or the &lt;a href=&quot;https://javaee.github.io/javaee-spec/javadocs/javax/servlet/http/HttpSession.html&quot;&gt;&lt;code&gt;HttpSession&lt;/code&gt;&lt;/a&gt; is obtained for the first time via &lt;code&gt;request.getSession()&lt;/code&gt;, the servlet container creates a new &lt;code&gt;HttpSession&lt;/code&gt; object, generates a long and unique ID (which you can get by &lt;code&gt;session.getId()&lt;/code&gt;), and stores it in the server's memory. The servlet container also sets a &lt;a href=&quot;https://javaee.github.io/javaee-spec/javadocs/javax/servlet/http/Cookie.html&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;Set-Cookie&lt;/code&gt; header of the HTTP response with &lt;code&gt;JSESSIONID&lt;/code&gt; as its name and the unique session ID as its value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클라이언트가 처음으로 webapp를 방문하거나 &lt;/font&gt; &lt;code&gt;request.getSession()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 통해 처음으로 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://javaee.github.io/javaee-spec/javadocs/javax/servlet/http/HttpSession.html&quot;&gt; &lt;code&gt;HttpSession&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 얻는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경우, 서블릿 컨테이너는 새 &lt;/font&gt; &lt;code&gt;HttpSession&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체를 생성하고 길고 고유 한 ID를 생성합니다 ( &lt;/font&gt; &lt;code&gt;session.getId()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 별로 얻을 수 있음) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.getId ()&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )를 서버의 메모리에 저장합니다. 서블릿 컨테이너는 또한 설정 &lt;/font&gt;&lt;a href=&quot;https://javaee.github.io/javaee-spec/javadocs/javax/servlet/http/Cookie.html&quot;&gt; &lt;code&gt;Cookie&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 &lt;/font&gt; &lt;code&gt;Set-Cookie&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 HTTP 응답의 헤더 &lt;/font&gt; &lt;code&gt;JSESSIONID&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 이름과 값으로 고유 한 세션 ID 등을.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7754c29f9531cf59284aab7b205687e3e4bdc8a8" translate="yes" xml:space="preserve">
          <source>When the servlet container (like &lt;a href=&quot;http://tomcat.apache.org&quot;&gt;Apache Tomcat&lt;/a&gt;) starts up, it will deploy and load all its web applications. When a web application is loaded, the servlet container creates the &lt;a href=&quot;https://javaee.github.io/javaee-spec/javadocs/javax/servlet/ServletContext.html&quot;&gt;&lt;code&gt;ServletContext&lt;/code&gt;&lt;/a&gt; once and keeps it in the server's memory. The web app's &lt;code&gt;web.xml&lt;/code&gt; and all of included &lt;code&gt;web-fragment.xml&lt;/code&gt; files is parsed, and each &lt;code&gt;&amp;lt;servlet&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;filter&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;listener&amp;gt;&lt;/code&gt; found (or each class annotated with &lt;code&gt;@WebServlet&lt;/code&gt;, &lt;code&gt;@WebFilter&lt;/code&gt; and &lt;code&gt;@WebListener&lt;/code&gt; respectively) is instantiated once and kept in the server's memory as well. For each instantiated filter, its &lt;code&gt;init()&lt;/code&gt; method is invoked with a new &lt;a href=&quot;https://javaee.github.io/javaee-spec/javadocs/javax/servlet/FilterConfig.html&quot;&gt;&lt;code&gt;FilterConfig&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서블릿 컨테이너 (예 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://tomcat.apache.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Apache Tomcat&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )가 시작되면 모든 웹 애플리케이션을 배치하고로드합니다. 웹 애플리케이션이로드되면 서블릿 컨테이너는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://javaee.github.io/javaee-spec/javadocs/javax/servlet/ServletContext.html&quot;&gt; &lt;code&gt;ServletContext&lt;/code&gt; 를&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 한 번 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;작성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 서버의 메모리에 보관합니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;web.xml&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;web.xml&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 포함 된 모든 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;web-fragment.xml&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 파일이 구문 분석되고 각 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;servlet&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;filter&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;listener&amp;gt;&lt;/code&gt; 가&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 발견되었습니다 (또는 각각 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@WebServlet&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@WebFilter&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@WebListener&lt;/code&gt; 로&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 주석이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;지정된&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 각 클래스 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;). 한 번 인스턴스화하고 서버의 메모리에도 보관합니다. 인스턴스화 된 각 필터에 대해 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;init()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;메소드는 새로운 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://javaee.github.io/javaee-spec/javadocs/javax/servlet/FilterConfig.html&quot;&gt; &lt;code&gt;FilterConfig&lt;/code&gt; 로&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 호출됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa7481bd9b40d44c74f00f6544404f1fdb70aaee" translate="yes" xml:space="preserve">
          <source>When the servlet container (like Apache Tomcat) starts up, it will read from the web.xml file (only one per application) if anything goes wrong or shows up an error at container side console, otherwise, it will deploy and load all web applications by using web.xml (so named it as deployment descriptor).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서블릿 컨테이너 (Apache Tomcat과 같은)가 시작될 때 컨테이너 측 콘솔에 문제가 발생하거나 오류가 표시되면 web.xml 파일 (애플리케이션 당 하나만)에서 읽습니다. 그렇지 않으면 모든 웹이 배포되고로드됩니다. web.xml을 사용하여 응용 프로그램 (배포 설명 자라고도 함)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="71053ee3582b645a370a1b774ee49cd141cce9ea" translate="yes" xml:space="preserve">
          <source>When the servlet container is finished with all of the above described initialization steps, then the &lt;a href=&quot;https://javaee.github.io/javaee-spec/javadocs/javax/servlet/ServletContextListener.html#contextInitialized-javax.servlet.ServletContextEvent-&quot;&gt;&lt;code&gt;ServletContextListener#contextInitialized()&lt;/code&gt;&lt;/a&gt; will be invoked.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서블릿 컨테이너가 위에서 설명한 모든 초기화 단계로 완료되면 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://javaee.github.io/javaee-spec/javadocs/javax/servlet/ServletContextListener.html#contextInitialized-javax.servlet.ServletContextEvent-&quot;&gt; &lt;code&gt;ServletContextListener#contextInitialized()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 호출됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9e0d859f91edc9c7a964c5f4387000db4486f424" translate="yes" xml:space="preserve">
          <source>When the servlet container shuts down, it unloads all web applications, invokes the &lt;code&gt;destroy()&lt;/code&gt; method of all its initialized servlets and filters, and all &lt;code&gt;ServletContext&lt;/code&gt;, &lt;code&gt;Servlet&lt;/code&gt;, &lt;code&gt;Filter&lt;/code&gt; and &lt;code&gt;Listener&lt;/code&gt; instances are trashed. Finally the &lt;a href=&quot;https://javaee.github.io/javaee-spec/javadocs/javax/servlet/ServletContextListener.html#contextDestroyed-javax.servlet.ServletContextEvent-&quot;&gt;&lt;code&gt;ServletContextListener#contextDestroyed()&lt;/code&gt;&lt;/a&gt; will be invoked.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서블릿 컨테이너가 종료되면 모든 웹 애플리케이션을 언로드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하고 초기화 된 모든 서블릿 및 필터 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;destroy()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;호출 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하며 모든 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ServletContext&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Servlet&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Filter&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Listener&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 인스턴스가 휴지통으로 이동합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;마지막으로 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://javaee.github.io/javaee-spec/javadocs/javax/servlet/ServletContextListener.html#contextDestroyed-javax.servlet.ServletContextEvent-&quot;&gt; &lt;code&gt;ServletContextListener#contextDestroyed()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 호출됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d698fa04731c4b1bd22bc11a1942ea62c9c78c44" translate="yes" xml:space="preserve">
          <source>Why Servlets are not thread Safe?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서블릿이 스레드로부터 안전하지 않은 이유는 무엇입니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8ae157ebc853261faf3acd064f769265b724e76a" translate="yes" xml:space="preserve">
          <source>Why isn't it a good idea to have one instance per client? Think about this: Will you hire one pizza guy for every order that came? Do that and you'd be out of business in no time.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클라이언트 당 하나의 인스턴스를 갖는 것이 좋지 않은 이유는 무엇입니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생각해보십시오 : 주문할 때마다 피자 한 명을 고용 하시겠습니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇게하면 곧 비즈니스가 중단 될 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="473a4264af288265c7bcf8749a7f052c8215827d" translate="yes" xml:space="preserve">
          <source>You should also realize that you should &lt;strong&gt;never&lt;/strong&gt; assign any request or session scoped data as an &lt;em&gt;instance&lt;/em&gt; variable of a servlet or filter. It will be shared among all other requests in other sessions. That's &lt;strong&gt;not&lt;/strong&gt; thread-safe! The below example illustrates this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;요청 또는 세션 범위 데이터를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서블릿 또는 필터 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인스턴스&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 변수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로 지정 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해서는 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;안된다는&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 것을 알아야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 세션의 다른 모든 요청과 공유됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그건 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 스레드 안전! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아래 예제는 이것을 보여줍니다.&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="27b38379d7aa8c77c508d949568e595f1a9f5575" translate="yes" xml:space="preserve">
          <source>doGet and doPost in Servlets</source>
          <target state="translated">서블릿의 doGet 및 doPost</target>
        </trans-unit>
        <trans-unit id="0e5be5ed1699acb3eee7ef2a4509663247672e58" translate="yes" xml:space="preserve">
          <source>keyword in front of method</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;메소드 앞의 키워드&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b85dac7f646475d4018a5c35390352f94773c821" translate="yes" xml:space="preserve">
          <source>methods</source>
          <target state="translated">methods</target>
        </trans-unit>
        <trans-unit id="13b5cb05d544123f64be7d38e0f42e7eb9992e5e" translate="yes" xml:space="preserve">
          <source>or we can go for synchronize methods</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는 우리는 동기화 방법으로 갈 수 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9f9d5ac5a2970fb6e40c13c031087887dfaab124" translate="yes" xml:space="preserve">
          <source>or we can the put block of the code in the Synchronized block</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는 코드의 블록을 동기화 블록에 넣을 수 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e1c77b21ffda1d01aa3fb93e67ba27df22d543c" translate="yes" xml:space="preserve">
          <source>we can make whole service method as synchronized by using synchronized</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동기화를 사용하여 전체 서비스 방법을 동기화 된 것으로 만들 수 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
