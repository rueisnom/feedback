<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/310870">
    <body>
      <group id="310870">
        <trans-unit id="1a6f157f19caa72c8ba37c93c91f741050915946" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A.prototype&lt;/code&gt; is TOTALLY DIFFERENT from the &lt;code&gt;__proto__&lt;/code&gt; property. In our example, 'A' now has TWO properties called 'prototype' and &lt;code&gt;__proto__&lt;/code&gt; . This is a big confusion for people. &lt;code&gt;prototype&lt;/code&gt; and &lt;code&gt;__proto__&lt;/code&gt; properties are in no way related, they're separate things pointing to separate values.</source>
          <target state="translated">&lt;code&gt;A.prototype&lt;/code&gt; ПОЛНОСТЬЮ ОТЛИЧАЕТСЯ&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; от &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;свойства &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . В нашем примере &amp;laquo;A&amp;raquo; теперь имеет ДВА свойства, называемые &amp;laquo;prototype&amp;raquo; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Это большая путаница для людей. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Свойства &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; никак не связаны, это разные вещи, указывающие на отдельные значения.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa496268d52a7b13b5dc519098a8aadd5a8f698f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a1.__proto__&lt;/code&gt; property is assigned to point at the same thing as &lt;code&gt;A.prototype&lt;/code&gt; points to (another empty object {} )</source>
          <target state="translated">&lt;code&gt;a1.__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; присваивается так же, как &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;указывает &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (еще один пустой объект {})&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="94cb063e7ce9fdcbe8793aaf001187e4752b19ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;amy.constructor&lt;/code&gt;'s lookup fails and thus is delegated to &lt;code&gt;Car.prototype&lt;/code&gt;, which does have the constructor property. And so &lt;code&gt;amy.constructor&lt;/code&gt; is &lt;code&gt;Car&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;amy.constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; завершается неудачей, и поэтому он делегируется &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Car.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , который имеет свойство constructor. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;И так &lt;/font&gt;&lt;/font&gt; &lt;code&gt;amy.constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; это &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Car&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f61c95ca5cb48c5bbfd7f2a435edff389b40e3bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/questions/3127429/javascript-this-keyword&quot;&gt;How does the &quot;this&quot; keyword work?&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/questions/3127429/javascript-this-keyword&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как работает ключевое слово &quot;this&quot;?&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e41f61d04c99037105b9ee78d76751a5668f66b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT&lt;/strong&gt; Didn't mean to imply that the scope of the variable was private, I was just trying to illustrate how I define my classes in javascript.  Variable name has been changed to reflect this.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;РЕДАКТИРОВАТЬ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Не имелось в виду, что область действия переменной была закрытой, я просто пытался проиллюстрировать, как я определяю свои классы в javascript. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Имя переменной было изменено, чтобы отразить это.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="585116bdd8ba3dd4a4edf774cb8e07bd06db012c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related questions&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Смежные вопросы&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0619f7ed60e8eeb1a1f718f0cf87792b5daa4614" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sidenote:&lt;/strong&gt; There may not be any significant memory savings between the two approaches, however using the prototype to share methods and properties will likely use less memory than each instance having its own copy.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Примечание: между этими&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; двумя подходами не может быть значительной экономии памяти, однако использование прототипа для совместного использования методов и свойств, вероятно, будет использовать меньше памяти, чем каждый экземпляр, имеющий свою собственную копию.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6f31dd204bcdda17b1324677e21673dda9549e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What does it mean that JavaScript is a prototypal language?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Что это означает, что JavaScript является языком-прототипом?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="27fc74636f13d6850973b4244d9df16a5d144b64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What is the scope of a function in JavaScript?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Какова область действия функции в JavaScript?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2bfc3701f71054631db27ff1201c8c11f85cf3cc" translate="yes" xml:space="preserve">
          <source>A constructor's &lt;em&gt;prototype&lt;/em&gt; provides a way to share methods and values among instances via the instance's private &lt;code&gt;[[Prototype]]&lt;/code&gt; property.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Прототип&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; конструктора &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;обеспечивает способ обмена методами и значениями между экземплярами с помощью частного &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;свойства &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; экземпляра &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d2ee4379b4acdd82edaa8bdb55ca80e7c1f8097d" translate="yes" xml:space="preserve">
          <source>A function in JavaScript is a specialised object. In addition to being invoked, a function can store properties like any other object.</source>
          <target state="translated">Функция в JavaScript является специализированным объектом.Помимо того,что функция вызывается,она может хранить свойства,как и любой другой объект.</target>
        </trans-unit>
        <trans-unit id="396460920abf6c3bb0621afc58e2bc44893b98bd" translate="yes" xml:space="preserve">
          <source>A function's &lt;em&gt;this&lt;/em&gt; is set by how the function is called or by the use of &lt;em&gt;bind&lt;/em&gt; (not discussed here). Where a function is called on an object (e.g. &lt;code&gt;myObj.method()&lt;/code&gt;) then &lt;em&gt;this&lt;/em&gt; within the method references the object. Where &lt;em&gt;this&lt;/em&gt; is not set by the call or by the use of &lt;em&gt;bind&lt;/em&gt;, it defaults to the global object (window in a browser) or in strict mode, remains undefined.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Функция &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;это&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; определяется тем, как она вызывается, или использованием &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bind&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (здесь не обсуждается). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если функция вызывается для объекта (например, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;myObj.method()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), то &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;это&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; внутри метода ссылается на объект. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;это&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не установлено вызовом или использованием &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bind&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , по умолчанию используется глобальный объект (окно в браузере) или в строгом режиме, он остается неопределенным.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="45966dac101bec7852f1deda8e51fef286fb4aae" translate="yes" xml:space="preserve">
          <source>A reason to use the first form is to access &quot;private members&quot;. For example:</source>
          <target state="translated">Причина использования первой формы-доступ к &quot;приватным членам&quot;.Например:</target>
        </trans-unit>
        <trans-unit id="499a9f218e00438d3a0cf14f0cf7260e52cc4b90" translate="yes" xml:space="preserve">
          <source>A totally new empty object is created and assigned to &lt;code&gt;a1&lt;/code&gt;. &lt;code&gt;a1 = {}&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Совершенно новый пустой объект создается и присваивается &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1 = {}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="581fdb8f0bcea7bf634c3f54dd065571aef05131" translate="yes" xml:space="preserve">
          <source>All that stuff inside &lt;code&gt;function() { }&lt;/code&gt; is going to execute. When you reach the &lt;code&gt;this.hey..&lt;/code&gt; line, &lt;code&gt;this&lt;/code&gt; is changed to &lt;code&gt;a1&lt;/code&gt; and you get this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Все эти вещи внутри &lt;/font&gt;&lt;/font&gt; &lt;code&gt;function() { }&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будут выполняться. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда вы достигнете &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this.hey..&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; изменится на &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и вы получите это:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f5ed6446475acfae79b53b98de3a4c05e013b251" translate="yes" xml:space="preserve">
          <source>And another section where you put the definitions that distinguish the objects from each other (&lt;code&gt;loc&lt;/code&gt; variable in the examples).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;И еще один раздел, где вы помещаете определения, которые отличают объекты друг от друга ( &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;переменная &lt;/font&gt;&lt;/font&gt; &lt;code&gt;loc&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в примерах).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9f623214ec66460787835246331d7a8431d0d95d" translate="yes" xml:space="preserve">
          <source>Another example is below.  It's similar to the first one (and maybe what you meant to ask about):</source>
          <target state="translated">Другой пример ниже.Он похож на первый (и,возможно,на то,о чем вы хотели спросить):</target>
        </trans-unit>
        <trans-unit id="0213ecf516b2d4882d739982f9db700f291e6d62" translate="yes" xml:space="preserve">
          <source>Another way of achieving a similar result is to use an immediately invoked function expression:</source>
          <target state="translated">Другой способ достижения аналогичного результата-использование выражения сразу вызываемой функции:</target>
        </trans-unit>
        <trans-unit id="981aec6b82d4aef2ab9869eeaaddcde70f35e9f6" translate="yes" xml:space="preserve">
          <source>As discussed in other answers, it's really a performance consideration because the function in the prototype is shared with all of the instantiations - rather than the function being created for each instantiation.</source>
          <target state="translated">Как обсуждалось в других ответах,это действительно является рассмотрением производительности,потому что функция в прототипе разделяется со всеми инстанциями-а не функция,создаваемая для каждой инстанциии.</target>
        </trans-unit>
        <trans-unit id="ebabf85ca06b23cb95f024f10b759ca642217e40" translate="yes" xml:space="preserve">
          <source>As others have mentioned, there are various reasons to choose one method or the other.  My sample is just meant to clearly demonstrate the difference.</source>
          <target state="translated">Как упоминали другие,существуют различные причины для выбора того или иного метода.Мой образец предназначен только для того,чтобы наглядно продемонстрировать разницу.</target>
        </trans-unit>
        <trans-unit id="9ca2d8b0f061f98b7e60e7a9c1fa9639212c0666" translate="yes" xml:space="preserve">
          <source>As others have said the first version, using &quot;this&quot; results in every instance of the class A having its own independent copy of function method &quot;x&quot;.  Whereas using &quot;prototype&quot; will mean that each instance of class A will use the same copy of method &quot;x&quot;.</source>
          <target state="translated">Как уже говорилось в первой версии,использование &quot;this&quot; приводит к тому,что каждый экземпляр класса A имеет свою собственную независимую копию метода функции &quot;x&quot;.В то время как использование &quot;прототипа&quot; будет означать,что каждый экземпляр класса A будет использовать одну и ту же копию метода &quot;x&quot;.</target>
        </trans-unit>
        <trans-unit id="562429007d4478f062f7b1115e1ecc040b939321" translate="yes" xml:space="preserve">
          <source>Because of javascript's scoping rules, private_var is available to the function assigned to this.x, but not outside the object.</source>
          <target state="translated">Из-за правил определения масштаба javascript,private_var доступен для функции,назначенной this.x,но не за пределами объекта.</target>
        </trans-unit>
        <trans-unit id="514ae34b3f92bfa48cc0a06bcba267d346bbe101" translate="yes" xml:space="preserve">
          <source>Before looking at the differences, the following should be noted:</source>
          <target state="translated">Прежде чем рассматривать различия,следует отметить следующее:</target>
        </trans-unit>
        <trans-unit id="ae90c980e638dd03a0023fb896a1307a3f40e7ba" translate="yes" xml:space="preserve">
          <source>Concerning the last three lines:</source>
          <target state="translated">Что касается последних трех строк:</target>
        </trans-unit>
        <trans-unit id="2b8a7b9e2cf97fc63ca3ff461c377262490a1646" translate="yes" xml:space="preserve">
          <source>Cool! Now, when you create &lt;code&gt;a1&lt;/code&gt;, it again goes through all of the 3 steps above, and in step 3, it doesn't do anything, since &lt;code&gt;function A()&lt;/code&gt; has nothing to execute. And if we do:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Прохладно! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь, когда вы создаете &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , он снова проходит все 3 шага, описанных выше, и на шаге 3 он ничего не делает, так как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;function A()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; нечего выполнять. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;И если мы сделаем:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a6dd015187d0ada3686c3bc302de7d0b64e2af15" translate="yes" xml:space="preserve">
          <source>Different adults have different ages, but all of the adults get the same rights.</source>
          <target state="translated">Разные взрослые имеют разный возраст,но все взрослые получают одинаковые права.</target>
        </trans-unit>
        <trans-unit id="7a45229532c15d2fa73aad667937ce56403a1a42" translate="yes" xml:space="preserve">
          <source>Every object is linked to a prototype object. When trying to access a property that does not exist, JavaScript will look in the object's prototype object for that property and return it if it exists.</source>
          <target state="translated">Каждый объект связан с объектом-прототипом.При попытке получить доступ к свойству,которого не существует,JavaScript будет искать в объекте-прототипе объекта это свойство и возвращать его,если оно существует.</target>
        </trans-unit>
        <trans-unit id="1f67de5a9c375290139f103847bab77b1f3187b5" translate="yes" xml:space="preserve">
          <source>Feel free to add or edit. Once more complete I could make this a community wiki maybe.</source>
          <target state="translated">Не стесняйтесь добавлять или редактировать.Ещё раз,когда я закончу,я смогу сделать это вики-сообщество,может быть,и вики-сообщество.</target>
        </trans-unit>
        <trans-unit id="30c1034505f0dae85e722fbe58cd4a0976ebb7b2" translate="yes" xml:space="preserve">
          <source>Finally, it should not be too difficult to realize how object oriented programming can be done. There are two sections.</source>
          <target state="translated">Наконец,не должно быть слишком сложно понять,как может быть осуществлено объектно-ориентированное программирование.Существует два раздела.</target>
        </trans-unit>
        <trans-unit id="616fd4e7af8e063af8b704651be5d8e96ff90c42" translate="yes" xml:space="preserve">
          <source>Functional Classes</source>
          <target state="translated">Функциональные классы</target>
        </trans-unit>
        <trans-unit id="1378319ea2e44565319a2798a7f9ab0ed1f666ee" translate="yes" xml:space="preserve">
          <source>Furthermore, &lt;code&gt;amy&lt;/code&gt; is an &lt;code&gt;instanceof&lt;/code&gt;&lt;code&gt;Car&lt;/code&gt;. The &lt;code&gt;instanceof&lt;/code&gt; operator works by seeing if the right operand's prototype object (&lt;code&gt;Car&lt;/code&gt;) can be found anywhere in the left operand's prototype (&lt;code&gt;amy&lt;/code&gt;) chain.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Кроме того, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;amy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является &lt;/font&gt;&lt;/font&gt; &lt;code&gt;instanceof&lt;/code&gt; &lt;code&gt;Car&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Оператор &lt;/font&gt;&lt;/font&gt; &lt;code&gt;instanceof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; работает, проверяя, находится ли объект-прототип правого операнда ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Car&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) где-нибудь в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;цепочке &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;прототипов ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;amy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;левого операнда &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a7c6fc25c03c684ec456561dda6f16904d9fb9b2" translate="yes" xml:space="preserve">
          <source>Here is some code to show this subtle difference:</source>
          <target state="translated">Вот код,показывающий эту тонкую разницу:</target>
        </trans-unit>
        <trans-unit id="a512ea9bd1a2595e6564a628ec13cd5d0173a27f" translate="yes" xml:space="preserve">
          <source>Here we're creating 2,000,000 new objects with a &lt;code&gt;print&lt;/code&gt; method in Chrome. We're storing every object in an array. Putting &lt;code&gt;print&lt;/code&gt; on the prototype takes about 1/2 as long.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Здесь мы создаем 2 000 000 новых объектов &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;методом &lt;/font&gt;&lt;/font&gt; &lt;code&gt;print&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в Chrome. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Мы храним каждый объект в массиве. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Нанесение &lt;/font&gt;&lt;/font&gt; &lt;code&gt;print&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; на прототип занимает около 1/2 времени.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="21a690c2811cf3a8e2fcb03ca0c412aeb6c8978e" translate="yes" xml:space="preserve">
          <source>Here's where most people get confused:</source>
          <target state="translated">Здесь большинство людей путаются:</target>
        </trans-unit>
        <trans-unit id="a6a0ce9031e0776d5fc6120b3023d51bccf114f1" translate="yes" xml:space="preserve">
          <source>Hope this helps.</source>
          <target state="translated">Надеюсь,это поможет.</target>
        </trans-unit>
        <trans-unit id="f9bebf368c86101e6a1de11b79f2745a5a9cce68" translate="yes" xml:space="preserve">
          <source>However there is one point interesting to know:
Every &lt;code&gt;prototype&lt;/code&gt; object has has a convenience property &lt;code&gt;constructor&lt;/code&gt;, which points back to the function (think object) it came attached to.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Однако есть один интересный момент: у каждого &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объекта- &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; есть удобный &lt;/font&gt;&lt;/font&gt; &lt;code&gt;constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; свойств &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, который указывает на функцию (думайте объект), к которой он был присоединен.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a50c839129a8568a2bdb8b1eb71615c8ca03bab5" translate="yes" xml:space="preserve">
          <source>However, the primary difference is that there are optimizations implemented in JavaScript engines that only apply when using the pseudoclassical pattern. Think of the pseudoclassical pattern a probably faster version of the prototypal pattern; the object relations in both examples are the same.</source>
          <target state="translated">Однако основное отличие заключается в том,что в JavaScript-движках реализованы оптимизации,которые применяются только при использовании псевдоклассического паттерна.Думайте о псевдоклассическом шаблоне как о возможно более быстрой версии прототипа;объектные отношения в обоих примерах одинаковы.</target>
        </trans-unit>
        <trans-unit id="8d4860ab556155819ce1e0d3bbe7982e93f66780" translate="yes" xml:space="preserve">
          <source>I believe that @Matthew Crumley is right.  They are &lt;em&gt;functionally&lt;/em&gt;, if not structurally, equivalent.  If you use Firebug to look at the objects that are created using &lt;code&gt;new&lt;/code&gt;, you can see that they are the same.  However, my preference would be the following.  I'm guessing that it just seems more like what I'm used to in C#/Java.  That is, define the class, define the fields, constructor, and methods.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я считаю, что @Matthew Crumley прав. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Они &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;функционально&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , если не структурно, эквивалентны. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы используете Firebug для просмотра объектов, созданных с помощью &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , вы увидите, что они одинаковы. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Тем не менее, мои предпочтения будут следующие. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я предполагаю, что это больше похоже на то, к чему я привык в C # / Java. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;То есть, определить класс, определить поля, конструктор и методы.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15622b8173641c92e63c1ee36c4e0b230517bf70" translate="yes" xml:space="preserve">
          <source>I know this has been answered to death but I'd like to show an actual example of speed differences.</source>
          <target state="translated">Я знаю,что на это ответили до смерти,но я хотел бы показать реальный пример разницы в скорости.</target>
        </trans-unit>
        <trans-unit id="56482a797b855ebf28ae5afc4251b5db57e29525" translate="yes" xml:space="preserve">
          <source>I put together a jsperf to show this. There is a dramatic difference in the time it takes to instantiate the class, although it is really only relevant if you are making many instances.</source>
          <target state="translated">Я собрал шутку,чтобы показать это.Существует драматическая разница во времени,которое требуется для инстанцирования класса,хотя на самом деле это имеет значение только в том случае,если вы делаете много экземпляров.</target>
        </trans-unit>
        <trans-unit id="f431a5529a17c6802ccb464328c61e22ee961e03" translate="yes" xml:space="preserve">
          <source>I think, the &lt;code&gt;this&lt;/code&gt; version is used to enable encapsulation, i.e. data hiding.
It helps to manipulate private variables.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я думаю, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; версия используется для включения инкапсуляции, то есть сокрытия данных. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это помогает манипулировать частными переменными.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d870f91c01fd9fe42353544305311db08719426e" translate="yes" xml:space="preserve">
          <source>I won't cover why &lt;code&gt;this&lt;/code&gt; changes to &lt;code&gt;a1&lt;/code&gt; but &lt;a href=&quot;https://stackoverflow.com/a/80478/1085998&quot;&gt;this is a great answer&lt;/a&gt; to learn more.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я не буду объяснять, почему &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; меняется на &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; но &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/80478/1085998&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;это отличный ответ,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; чтобы узнать больше.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="89078c5b79458591085ee64d7f970de4d93797ee" translate="yes" xml:space="preserve">
          <source>If you think this is not a problem, then it depends on whether you can live without private variables, and whether you are experienced enough to know a leak when you see one. Also, having to put the constructor logic after the method definitions is inconvenient.</source>
          <target state="translated">Если вы считаете,что это не проблема,то это зависит от того,можете ли вы жить без частных переменных,и достаточно ли вы опытны,чтобы знать об утечке,когда вы ее видите.Также неудобно ставить логику конструктора после определения метода.</target>
        </trans-unit>
        <trans-unit id="5217801ffee692a0d0416de94ce40dcc69d5d848" translate="yes" xml:space="preserve">
          <source>In conclusion, in the first example &lt;strong&gt;a copy of the function is assigned to each instance&lt;/strong&gt;. In the second example &lt;strong&gt;a single copy of the function is shared by all instances&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В заключение, в первом примере &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;копия функции присваивается каждому экземпляру&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Во втором примере &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;одна копия функции является общей для всех экземпляров&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64a03b3c9405b8097a143dbb32c646d5cd09f22e" translate="yes" xml:space="preserve">
          <source>In general there is no right or wrong, it's more a matter of taste or a design decision depending on your requirements. The prototype however is the technique that is used to develop in an object oriented manner, as I hope you'll see at the end of this answer.</source>
          <target state="translated">В общем,нет ничего правильного или неправильного,это скорее вопрос вкуса или дизайнерского решения в зависимости от ваших требований.Прототип,однако,является методом,который используется для разработки в объектно-ориентированной манере,как я надеюсь,вы увидите в конце этого ответа.</target>
        </trans-unit>
        <trans-unit id="666df82d0c8fe3053b47e6a0219f55650ccc2aff" translate="yes" xml:space="preserve">
          <source>In most cases they are essentially the same, but the second version saves memory because there is only one instance of the function instead of a separate function for each object.</source>
          <target state="translated">В большинстве случаев они по сути одни и те же,но второй вариант экономит память,потому что для каждого объекта есть только один экземпляр функции,а не отдельная функция.</target>
        </trans-unit>
        <trans-unit id="91aee306e0db067a91d992a548f5fa66a86b83c9" translate="yes" xml:space="preserve">
          <source>In the case of:</source>
          <target state="translated">В случае:</target>
        </trans-unit>
        <trans-unit id="3a06ec36da521fee44241221c9d5800a01c8444c" translate="yes" xml:space="preserve">
          <source>In the second example you are adding a property to the prototype object that all the instances created with &lt;code&gt;A&lt;/code&gt; point to.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Во втором примере вы добавляете свойство к объекту-прототипу, на которое &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;указывают &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;все экземпляры, созданные с помощью &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; .&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="68d939a819d95a1b232c797326d7169b5ded8eeb" translate="yes" xml:space="preserve">
          <source>In the second line, &lt;em&gt;A.prototype.x&lt;/em&gt; is assigned a reference to a function. This will create an &lt;em&gt;x&lt;/em&gt; property if it doesn't exist, or assign a new value if it does. So the difference with the first example in which object's &lt;em&gt;x&lt;/em&gt; property is involved in the expression.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Во второй строке &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A.prototype.x&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; назначается ссылка на функцию. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это создаст &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;свойство &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;x,&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; если оно не существует, или назначит новое значение, если оно существует. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, разница с первым примером, в котором &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;свойство &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;x&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; объекта участвует в выражении.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f1f444d3fad61ca80f657809854392a20d97c79" translate="yes" xml:space="preserve">
          <source>In this case &lt;code&gt;Car&lt;/code&gt; is a &lt;strong&gt;function&lt;/strong&gt; (&lt;strong&gt;also&lt;/strong&gt; think &lt;strong&gt;object&lt;/strong&gt;) that can be invoked as you are used to do. It has a property &lt;code&gt;methods&lt;/code&gt; (which is an object with a &lt;code&gt;move&lt;/code&gt; function). When &lt;code&gt;Car&lt;/code&gt; is invoked the &lt;code&gt;extend&lt;/code&gt; function is called, which does some magic, and extends the &lt;code&gt;Car&lt;/code&gt; function (think object) with the methods defined within &lt;code&gt;methods&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В этом случае &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Car&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;функция&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ( &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;также&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; думайте об &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объекте&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), которая может быть вызвана так, как вы привыкли. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;У него есть свойство &lt;/font&gt;&lt;/font&gt; &lt;code&gt;methods&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (это объект с &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;функцией &lt;/font&gt;&lt;/font&gt; &lt;code&gt;move&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Car&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вызывается в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extend&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вызова функции, которая делает некоторые магии, и расширяет &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Car&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; функции (думаю , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объект) с помощью методов , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;определенных в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;methods&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="412ce250c444246830eebe423a5e0e2d9149c14c" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;A&lt;/code&gt; assigned the return value of calling the function on the right-hand side. Here again, since &lt;em&gt;this&lt;/em&gt; is not set in the call, it will reference the global object and &lt;code&gt;this.x&lt;/code&gt; is effective &lt;code&gt;window.x&lt;/code&gt;. Since the function doesn't return anything, &lt;code&gt;A&lt;/code&gt; will have a value of &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В этом случае &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; присваивает возвращаемое значение вызова функции с правой стороны. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Здесь снова, поскольку &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;это&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не установлено в вызове, оно будет ссылаться на глобальный объект, а &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this.x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является эффективным &lt;/font&gt;&lt;/font&gt; &lt;code&gt;window.x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Поскольку функция ничего не возвращает, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будет иметь значение &lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9dcc855b3c241eea76935dfb826e530678f84354" translate="yes" xml:space="preserve">
          <source>In this case, variable &lt;code&gt;A&lt;/code&gt; is assigned a value that is a reference to a function.  When that function is called using &lt;code&gt;A()&lt;/code&gt;, the function's &lt;em&gt;this&lt;/em&gt; isn't set by the call so it defaults to the global object and the expression &lt;code&gt;this.x&lt;/code&gt; is effective &lt;code&gt;window.x&lt;/code&gt;. The result is that a reference to the function expression on the right-hand side is assigned to &lt;code&gt;window.x&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В этом случае переменной &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; присваивается значение, которое является ссылкой на функцию. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда эта функция вызывается с помощью &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , функция &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;this&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не устанавливается вызовом, поэтому по умолчанию используется глобальный объект, а выражение &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this.x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является эффективным &lt;/font&gt;&lt;/font&gt; &lt;code&gt;window.x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В результате ссылка на выражение функции в правой части назначается для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;window.x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c9c1162f8649ee6c800e3c7ee24847b2ec12ab6c" translate="yes" xml:space="preserve">
          <source>In this example &lt;code&gt;Car&lt;/code&gt; links to the &lt;code&gt;prototype&lt;/code&gt; object, which links via &lt;code&gt;constructor&lt;/code&gt; to &lt;code&gt;Car&lt;/code&gt; itself, i.e. &lt;code&gt;Car.prototype.constructor&lt;/code&gt; is &lt;code&gt;Car&lt;/code&gt; itself. This allows you to figure out which constructor function built a certain object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В этом примере &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Car&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; связывается с &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объектом- &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , который через &lt;/font&gt;&lt;/font&gt; &lt;code&gt;constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; связывается &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;с &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;самим &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Car&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , т.е. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Car.prototype.constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;сам &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Car&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это позволяет выяснить, какая функция конструктора построила определенный объект.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bdba5bd5e74f1b3ee8430302ca046662463d4fe0" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;new&lt;/code&gt; operator has been added before the function expression so that the function is called as a constructor. When called with &lt;code&gt;new&lt;/code&gt;, the function's &lt;em&gt;this&lt;/em&gt; is set to reference a new Object whose private &lt;code&gt;[[Prototype]]&lt;/code&gt; property is set to reference the constructor's public &lt;em&gt;prototype&lt;/em&gt;. So in the assignment statement, the &lt;code&gt;x&lt;/code&gt; property will be created on this new object. When called as a constructor, a function returns its &lt;em&gt;this&lt;/em&gt; object by default, so there is no need for a separate &lt;code&gt;return this;&lt;/code&gt; statement.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В этом примере &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;оператор &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; был добавлен перед выражением функции, поэтому функция вызывается как конструктор. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;При вызове с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; функцией &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;this&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; устанавливается для ссылки на новый объект, чье личное &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;свойство &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; установлено для ссылки на открытый &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;прототип конструктора&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, в операторе присваивания для &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;этого нового объекта будет создано свойство &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;При вызове в качестве конструктора функция возвращает свой &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объект &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;this&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; по умолчанию, поэтому нет необходимости в отдельном &lt;/font&gt;&lt;/font&gt; &lt;code&gt;return this;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;заявление.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="89bfdc078a207ee283d2d0a52398f24343989b97" translate="yes" xml:space="preserve">
          <source>In your first example, you are adding a property &lt;code&gt;x&lt;/code&gt; to each instance created with the &lt;code&gt;A&lt;/code&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В первом примере вы добавляете свойство &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; к каждому экземпляру, созданному с помощью &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;функции &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; .&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bb4c3a5d3272e73f58dce20dcda9040a1a637e9e" translate="yes" xml:space="preserve">
          <source>It does the same as in the prototypal pattern really, it is just syntactic sugar overtop of the prototypal pattern.</source>
          <target state="translated">Он делает то же самое,что и в прототипной модели на самом деле,это просто синтаксический сахар над прототипной моделью.</target>
        </trans-unit>
        <trans-unit id="723750099350c4865d1a35080b4c625513b94ce7" translate="yes" xml:space="preserve">
          <source>It will see that &lt;code&gt;a1&lt;/code&gt; does not contain &lt;code&gt;hey&lt;/code&gt; and it will check its &lt;code&gt;__proto__&lt;/code&gt; property object to see if it has it, which is the case.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Он увидит, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не содержит &lt;/font&gt;&lt;/font&gt; &lt;code&gt;hey&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и проверит свой &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; свойства &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;__proto__,&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; чтобы увидеть, есть ли он, что имеет место.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed913fb6557c9ddd4efa7738e62a2126ab7b507a" translate="yes" xml:space="preserve">
          <source>JavaScript is an object-oriented language, i.e. most values are objects, including functions. (Strings, numbers, and booleans are &lt;em&gt;not&lt;/em&gt; objects.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript является объектно-ориентированным языком, т.е. большинство значений являются объектами, включая функции. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Строки, числа и логические значения &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;не&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; являются &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объектами.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a2fdf9d982a02784e0975ab4455583df7ff00a3c" translate="yes" xml:space="preserve">
          <source>JavaScript isn't a low-level language.  It may not be very valuable to think of prototyping or other inheritance patterns as a way to explicitly change the way memory is allocated.</source>
          <target state="translated">JavaScript не является низкоуровневым языком.Может быть не очень ценным думать о прототипировании или других шаблонах наследования,как о способе явного изменения способа выделения памяти.</target>
        </trans-unit>
        <trans-unit id="8fdca31371e433fd45f5ce78b0ac9a2214f60370" translate="yes" xml:space="preserve">
          <source>Let me give you a more comprehensive answer that I learned during a JavaScript training course.</source>
          <target state="translated">Позвольте мне дать вам более полный ответ,который я узнал во время обучения на JavaScript.</target>
        </trans-unit>
        <trans-unit id="b03b280b17407f067546235b537992021180eadf" translate="yes" xml:space="preserve">
          <source>Let us look at the following example:</source>
          <target state="translated">Давайте рассмотрим следующий пример:</target>
        </trans-unit>
        <trans-unit id="1f5f057f5d33bae053072b69aa5b677d4464cea0" translate="yes" xml:space="preserve">
          <source>Let's go on with our example and create an &quot;object&quot; out of &lt;code&gt;A&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Давайте продолжим с нашим примером и создадим &amp;laquo;объект&amp;raquo; из &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7bebb77119825ff6eb9b617e8afcfe33f39e3a01" translate="yes" xml:space="preserve">
          <source>Lets look at the implementation now.</source>
          <target state="translated">Давайте посмотрим на реализацию сейчас.</target>
        </trans-unit>
        <trans-unit id="c0f8fd08fd1ae3fed7665265a11fa998dbd5952c" translate="yes" xml:space="preserve">
          <source>Most answers mentioned the difference already, i.e. when prototyping the function is shared with all (future) instances. Whereas declaring the function in the class will create a copy for each instance.</source>
          <target state="translated">В большинстве ответов уже упоминалось об этой разнице,т.е.когда прототипирование функции разделяется со всеми (будущими)экземплярами.В то время как объявление функции в классе создаст копию для каждого экземпляра.</target>
        </trans-unit>
        <trans-unit id="6371c6ad3fae9de8ee8f263431e6d38bbd8ba8d0" translate="yes" xml:space="preserve">
          <source>Most people here (especially the top-rated answers) tried to explain how they are different without explaining WHY. I think this is wrong and if you understand the fundamentals first, the difference will become obvious. Let's try to explain the fundamentals first...</source>
          <target state="translated">Большинство людей здесь (особенно высококлассные ответы)пытались объяснить,чем они отличаются друг от друга,не объясняя,ПОЧЕМУ.Я думаю,что это неправильно,и если вы сначала поймете основы,то разница станет очевидной.Давайте сначала попробуем объяснить основы...</target>
        </trans-unit>
        <trans-unit id="af8ddf39a6e280886e3a21db4258fe6c6694944a" translate="yes" xml:space="preserve">
          <source>NOTE: Some people tend to not call the internal Prototype property as &lt;code&gt;__proto__&lt;/code&gt;, I've used this name through the post to distinguish it clearly to the &lt;code&gt;Functional.prototype&lt;/code&gt; property as two different things.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ПРИМЕЧАНИЕ. Некоторые люди склонны не вызывать внутреннее свойство Prototype как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , я использовал это имя в посте, чтобы четко отличить его от &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;свойства &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Functional.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; как две разные вещи.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9e08b3dab8de59f8684d10acd61311d09f996379" translate="yes" xml:space="preserve">
          <source>Not sure if this pattern is still relevant nowadays, but it exists. And it is good to know about it.
You simply pass an object and a property to the decorator function. The decorator returns the object with property and method.</source>
          <target state="translated">Не уверен,что эта закономерность все еще актуальна в настоящее время,но она существует.И хорошо знать об этом.Вы просто передаете объект и свойство декоратору.Декоратор возвращает объект со свойством и методом.</target>
        </trans-unit>
        <trans-unit id="19bda0638ba7632222a0cb55603f398896425e39" translate="yes" xml:space="preserve">
          <source>Now, let's try to create another object:</source>
          <target state="translated">Теперь попробуем создать другой объект:</target>
        </trans-unit>
        <trans-unit id="419574ffc2da398be8c2c847ff168ef513bfe459" translate="yes" xml:space="preserve">
          <source>Now, the &lt;code&gt;prototype&lt;/code&gt; structure can be applied as following:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;структура &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; может применяться следующим образом:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7165ad3fec60f094c503a8486cf19a6a37782c89" translate="yes" xml:space="preserve">
          <source>Now, there's another thing happening when &lt;code&gt;var a1 = new A()&lt;/code&gt; statement is processed. Basically &lt;code&gt;A()&lt;/code&gt; is executed and if A is something like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь происходит другая вещь, когда &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;обрабатывается оператор &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var a1 = new A()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В основном &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; выполняется, и если A что-то вроде этого:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="83d1f08532a2d718637904b4c370e11fc354f1dc" translate="yes" xml:space="preserve">
          <source>Object Decorator pattern</source>
          <target state="translated">Объект Декоратор шаблон</target>
        </trans-unit>
        <trans-unit id="1afec21842c90d30de589ac2651b4ea942c64d94" translate="yes" xml:space="preserve">
          <source>One section that defines common properties/methods in the prototype (chain).</source>
          <target state="translated">Один раздел,который определяет общие свойства-методы в прототипе (цепочке).</target>
        </trans-unit>
        <trans-unit id="f8555b3f33258c80236579e089299ab9f568e09a" translate="yes" xml:space="preserve">
          <source>Prototypal Classes</source>
          <target state="translated">Прототипные классы</target>
        </trans-unit>
        <trans-unit id="ebaab3675de408919997f055a33be6353eee8b66" translate="yes" xml:space="preserve">
          <source>Prototype is the template of the class; which applies to all future instances of it. Whereas this is the particular instance of the object.</source>
          <target state="translated">Прототип-это шаблон класса,который применяется ко всем будущим его экземплярам.В то время как это конкретный экземпляр объекта.</target>
        </trans-unit>
        <trans-unit id="7c10620b77891a5a8f24861d5ce595bd9ce31cc1" translate="yes" xml:space="preserve">
          <source>Pseudoclassical patterns</source>
          <target state="translated">псевдоклассические узоры</target>
        </trans-unit>
        <trans-unit id="99e10fb4f059613db70e3de60d817eff342bc563" translate="yes" xml:space="preserve">
          <source>Remember why the &lt;code&gt;__proto__&lt;/code&gt; property exists on every object? So that if you retrieve the &lt;code&gt;yoMan&lt;/code&gt; property on &lt;code&gt;a1&lt;/code&gt; (which doesn't exist), its &lt;code&gt;__proto__&lt;/code&gt; property will be consulted, which if it's an object (and is most cases it is), it will check if it contains &lt;code&gt;yoMan&lt;/code&gt;, and if it doesn't, it will consult that object's &lt;code&gt;__proto__&lt;/code&gt; etc. If it does, it will take that property value and display it to you.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Помните, почему &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;свойство &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; существует для каждого объекта? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, если вы извлекаете &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;свойство &lt;/font&gt;&lt;/font&gt; &lt;code&gt;yoMan&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (которое не существует), &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;будет рассматриваться &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;его &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;свойство &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , которое, если это объект (и в большинстве случаев так оно и есть), проверит, содержит ли оно &lt;/font&gt;&lt;/font&gt; &lt;code&gt;yoMan&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , и если оно нет, он будет обращаться к &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; этого объекта и &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;т. д. Если это произойдет, он примет значение этого свойства и отобразит его вам.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b0a6e2e15bdc9df61cac47d196cd4068c8ed4bfe" translate="yes" xml:space="preserve">
          <source>So here are the snippets in question:</source>
          <target state="translated">Итак,вот фрагменты,о которых идет речь:</target>
        </trans-unit>
        <trans-unit id="48bcbce51ee2114152267f2210d7eb26c82bc1a0" translate="yes" xml:space="preserve">
          <source>So someone decided to use this fact + the fact that when you create &lt;code&gt;a1&lt;/code&gt;, its &lt;code&gt;__proto__&lt;/code&gt; property points to the same (empty) object &lt;code&gt;A.prototype&lt;/code&gt; points to and do this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Поэтому кто-то решил использовать этот факт + тот факт, что при создании &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; его &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;свойство &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; указывает на тот же (пустой) объект, на &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; указывает &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A.prototype,&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и делает это:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e8e06d432de29a74b35aa0883013e73afe1ae28" translate="yes" xml:space="preserve">
          <source>So to summarize, when you do &lt;code&gt;var a1 = new A()&lt;/code&gt; there are 3 things happening in the background:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Итак, подведем итог: когда вы делаете &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var a1 = new A()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , в фоновом режиме происходит 3 вещи:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="22ed9816149fa3050650e31e821017731cbc0d1f" translate="yes" xml:space="preserve">
          <source>So we're now at the point where we have a freshly baked empty &lt;code&gt;a1&lt;/code&gt; object. We said that all objects in JavaScript have an internal &lt;code&gt;__proto__&lt;/code&gt; property which points to something (&lt;code&gt;a1&lt;/code&gt; also has it), whether it's null or another object. What the &lt;code&gt;new&lt;/code&gt; operator does is that it sets that &lt;code&gt;__proto__&lt;/code&gt; property to point to the function's &lt;code&gt;prototype&lt;/code&gt; property. Read that again. It's basically this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Итак, мы находимся в точке, где у нас есть свежеиспеченный пустой &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объект &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Мы сказали, что все объекты в JavaScript имеют внутреннее &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;свойство &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; которое указывает на что-то (у &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; также есть), независимо от того, является ли оно нулевым или другим объектом. Что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; оператор делает то , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;что он устанавливает , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; свойство точки к функции в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; собственности. Прочитайте это снова. Это в основном это:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="91cc8422370d40ae76ed33226042018137312f86" translate="yes" xml:space="preserve">
          <source>So what does this &lt;code&gt;__proto__&lt;/code&gt; property points to? Well, usually another object (we'll explain why later). The only way to force JavaScript for the &lt;code&gt;__proto__&lt;/code&gt; property to NOT point to another object is to use &lt;code&gt;var newObj = Object.create(null)&lt;/code&gt;. Even if you do this, the &lt;code&gt;__proto__&lt;/code&gt; property STILL exists as a property of the object,  just it doesn't point to another object, it points to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Так на что же &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; это &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;свойство &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;__proto__&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ну, обычно другой объект (мы объясним, почему позже). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Единственный способ заставить JavaScript для &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;свойства &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; НЕ указывать на другой объект - это использовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var newObj = Object.create(null)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Даже если вы сделаете это, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;свойство &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; STILL существует как свойство объекта, просто оно не указывает на другой объект, оно указывает на &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="68f8dbb71bc22f1b333dff6ea439d77f35689fff" translate="yes" xml:space="preserve">
          <source>So, we add it using prototype, rather than this.</source>
          <target state="translated">Итак,мы добавляем его с помощью прототипа,а не этого.</target>
        </trans-unit>
        <trans-unit id="14733402dd610d5b95df826ad8095da2e9ad0b60" translate="yes" xml:space="preserve">
          <source>Some developers can be confused in the beginning. See below example:</source>
          <target state="translated">Некоторые разработчики могут запутаться в самом начале.См.пример ниже:</target>
        </trans-unit>
        <trans-unit id="5dce25ee28014dce88c211954e9a1c27a9b6793f" translate="yes" xml:space="preserve">
          <source>Steps 1,2,3 will repeat. Do you notice something? The key word is &lt;strong&gt;repeat.&lt;/strong&gt; Step 1: &lt;code&gt;a2&lt;/code&gt; will be a new empty object, step 2: its &lt;code&gt;__proto__&lt;/code&gt; property will point to the same thing &lt;code&gt;A.prototype&lt;/code&gt; points to and most importantly, step 3: function &lt;code&gt;A()&lt;/code&gt; is AGAIN executed, which means that &lt;code&gt;a2&lt;/code&gt; will get &lt;code&gt;hey&lt;/code&gt; property containing a function. &lt;code&gt;a1&lt;/code&gt; and &lt;code&gt;a2&lt;/code&gt; have two SEPARATE properties named &lt;code&gt;hey&lt;/code&gt; which point to 2 SEPARATE functions! We now have duplicate functions in same two different objects doing the same thing, oops...You can imagine the memory implications of this if we have 1000 objects created with &lt;code&gt;new A&lt;/code&gt;, after all functions declarations take more memory than something like the number 2. So how do we prevent this?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Шаги 1,2,3 повторится. Вы что-то замечаете? Ключевое слово - &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;повторить.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Шаг 1: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будет новым пустым объектом, шаг 2: его &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;свойство &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будет указывать на то же, на что &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;указывает &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A.prototype&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и, что наиболее важно, шаг 3: функция &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; выполняется снова, а это означает, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; получит &lt;/font&gt;&lt;/font&gt; &lt;code&gt;hey&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; свойство, содержащее функцию. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; имеют два свойства SEPARATE с именем &lt;/font&gt;&lt;/font&gt; &lt;code&gt;hey&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; которые указывают на 2 отдельные функции! Теперь у нас есть дубликаты функций в тех же двух разных объектах, которые делают одно и то же, упс ... Вы можете представить себе последствия памяти, если у нас есть 1000 объектов, созданных с&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , после того, как все объявления функций занимают больше памяти, чем что-то вроде числа 2. Итак, как мы можем предотвратить это?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba42003109816715679c7cec7df83598908ebb1c" translate="yes" xml:space="preserve">
          <source>Take these 2 examples:</source>
          <target state="translated">Возьмите эти 2 примера:</target>
        </trans-unit>
        <trans-unit id="1a1285513924c3fcc88d19dd90ef1b7247c97be6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;instanceof&lt;/code&gt; operator returns &lt;code&gt;false&lt;/code&gt;, because &lt;code&gt;Dog&lt;/code&gt;'s prototype cannot be found anywhere in &lt;code&gt;fido&lt;/code&gt;'s prototype chain. &lt;code&gt;fido&lt;/code&gt; is a simple object that is created with an object literal, i.e. it just delegates to &lt;code&gt;Object.prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Оператор &lt;/font&gt;&lt;/font&gt; &lt;code&gt;instanceof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; возвращает &lt;/font&gt;&lt;/font&gt; &lt;code&gt;false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , поскольку &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;прототип &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Dog&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не может быть найден нигде в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;цепочке прототипов &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fido&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fido&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это простой объект, который создается с помощью литерала объекта, то есть он просто делегирует &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="59cba9bc0a9bd21c18ba6a3cd21c7e6251c3604c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prototype&lt;/code&gt; property of a function constructor refers to the prototype object of all instances created with that function when using &lt;code&gt;new&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Свойство &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; конструктора функции ссылается на объект-прототип всех экземпляров, созданных с помощью этой функции при использовании &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5fe4abd47db3ca32634516e9378bb727fff7e1ff" translate="yes" xml:space="preserve">
          <source>The examples have very different outcomes.</source>
          <target state="translated">Примеры имеют очень разные результаты.</target>
        </trans-unit>
        <trans-unit id="597df3874dbfac5cd4c24cbbd34b592696279cd5" translate="yes" xml:space="preserve">
          <source>The fact that you used the operator &lt;code&gt;new&lt;/code&gt; before a function invocation &lt;code&gt;A()&lt;/code&gt; did something ADDITIONAL in the background. The &lt;code&gt;new&lt;/code&gt; keyword created a new object which now references &lt;code&gt;a1&lt;/code&gt; and that object is empty. Here's what happening additionally:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Тот факт, что вы использовали оператор &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; перед вызовом функции &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; сделал что-то ДОПОЛНИТЕЛЬНОЕ в фоновом режиме. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ключевое слово создается новый объект , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;который в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;настоящее время ссылки &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и что объект пуст. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вот что происходит дополнительно:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7e55db4e23b6f32c08ffe74b551e861a639ca0e4" translate="yes" xml:space="preserve">
          <source>The first example changes the interface for that object only. The second example changes the interface for all object of that class.</source>
          <target state="translated">Первый пример изменяет интерфейс только для этого объекта.Во втором примере интерфейс изменяется для всех объектов этого класса.</target>
        </trans-unit>
        <trans-unit id="3d067c8d8a017b9c83dc914075cce47ebc57d678" translate="yes" xml:space="preserve">
          <source>The first two patterns allow a discussion of using techniques to define  shared methods or using methods that are defined inline in the body of the constructor. In both cases every instance has its own &lt;code&gt;move&lt;/code&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Первые два шаблона позволяют обсудить использование методов для определения общих методов или использование методов, которые встроены в теле конструктора. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В обоих случаях каждый экземпляр имеет свою собственную &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;функцию &lt;/font&gt;&lt;/font&gt; &lt;code&gt;move&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="82ae2b7331064f17552e8317206e9a42246c5f28" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;A()&lt;/code&gt; is being executed with &lt;code&gt;this&lt;/code&gt; set to the new, empty object created in step 1 (read the answer I referenced above as to why &lt;code&gt;this&lt;/code&gt; changes to &lt;code&gt;a1&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Функция &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; выполняется с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; набором для нового пустого объекта, созданного на шаге 1 (прочитайте ответ, на который я ссылался выше, чтобы узнать, почему &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; меняется на &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b2318654afa23c4d76517a2dd3e321c2338ca9a" translate="yes" xml:space="preserve">
          <source>The prototypal pattern does not lend itself well to the same examination, because function sharing via a prototype delegation is the very goal for the prototypal pattern. As others pointed out, it is expected to have a better memory footprint.</source>
          <target state="translated">Прототипный образец не поддается одинаковому исследованию,так как разделение функций через делегирование прототипа является самой целью для прототипного образца.Как отмечали другие,ожидается,что он будет иметь лучший отпечаток памяти.</target>
        </trans-unit>
        <trans-unit id="81a9d5f167760be8b398327c28ef552413c90ceb" translate="yes" xml:space="preserve">
          <source>The ultimate problem with using &lt;code&gt;this&lt;/code&gt; instead of &lt;code&gt;prototype&lt;/code&gt; is that when overriding a method, the constructor of the base class will still refer to the overridden method. Consider this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Основная проблема с использованием &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вместо &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; заключается в том, что при переопределении метода конструктор базового класса будет по-прежнему ссылаться на переопределенный метод. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Учти это:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cb8a7a4b9ba94c3c72b9b96dae39a5767b6c3728" translate="yes" xml:space="preserve">
          <source>There's something happening in the background when this thing happened. &lt;code&gt;a1&lt;/code&gt; is an ordinary variable which was assigned a new, empty object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Что-то происходит на заднем плане, когда это случилось. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - обычная переменная, которой был присвоен новый пустой объект.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dad014627fd09fcb90b0d1758b0b7befb734da14" translate="yes" xml:space="preserve">
          <source>These differences between the two approaches also manifest if you're serializing and de-serializing your Javascript objects to/from JSON. Methods defined on an object's prototype are not serialized when you serialize the object, which can be convenient when for example you want to serialize just the data portions of an object, but not it's methods:</source>
          <target state="translated">Эти различия между двумя подходами проявляются и в том,что вы сериализуете и десериализуете объекты Javascript из JSON.Методы,определенные на прототипе объекта,не сериализуются при сериализации объекта,что может быть удобно,например,когда вы хотите сериализовать только порции данных объекта,а не его методы:</target>
        </trans-unit>
        <trans-unit id="9067e4c49b46c1e9bbb2aec0015f46bb87b79ddd" translate="yes" xml:space="preserve">
          <source>Think about statically typed language, things on &lt;code&gt;prototype&lt;/code&gt; are static and things on &lt;code&gt;this&lt;/code&gt; are instance related.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Подумайте о статически типизированном языке, вещи на &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; статичны, а вещи на &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; связаны с экземплярами.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2355c245479715e65d721ee60eaa07117437d333" translate="yes" xml:space="preserve">
          <source>This example, though different, comes closest to the first example in the question.</source>
          <target state="translated">Этот пример,хотя и отличается от других,но наиболее близок к первому примеру в вопросе.</target>
        </trans-unit>
        <trans-unit id="ca0afa04c7a867ec6cfc7913f8acd8d206551180" translate="yes" xml:space="preserve">
          <source>This is an uncommon use of &lt;em&gt;new&lt;/em&gt; since the only way to reference the constructor is via &lt;em&gt;A.constructor&lt;/em&gt;. It would be much more common to do:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это необычное использование &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;new,&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; поскольку единственный способ ссылаться на конструктор - через &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A.constructor&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Было бы гораздо более распространенным сделать:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="036187c48acf9dbe69bc45355dde270b1aec2e23" translate="yes" xml:space="preserve">
          <source>This is really just another form of the prototypal pattern in simplified form and more familiar to do those who program in Java for example, since it uses the &lt;code&gt;new&lt;/code&gt; constructor.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это на самом деле просто еще одна форма шаблона-прототипа в упрощенной форме, и она более привычна для тех, кто программирует на Java, например, поскольку она использует &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; конструктор.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5029be1875db619a586bd4a66a39dc6782bd2ffa" translate="yes" xml:space="preserve">
          <source>This is what allows us to apply concepts like superclass or subclass in JavaScript.</source>
          <target state="translated">Именно это позволяет нам применять в JavaScript такие понятия,как супер-класс или подкласс.</target>
        </trans-unit>
        <trans-unit id="8e91f2df575afa57c8758a2f705311ee0e328b72" translate="yes" xml:space="preserve">
          <source>To check that &lt;em&gt;A&lt;/em&gt; has an &lt;em&gt;x&lt;/em&gt; property:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Чтобы проверить, что &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; имеет &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;свойство &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;x&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="040a03f3b5302125518bef7090315aeab9a7bb1b" translate="yes" xml:space="preserve">
          <source>Use of 'prototype' vs. 'this' in JavaScript</source>
          <target state="translated">Использование &quot;прототипа&quot; против &quot;этого&quot; в JavaScript.</target>
        </trans-unit>
        <trans-unit id="9d00fbb739bf112dec2029fddeb77b8657217f24" translate="yes" xml:space="preserve">
          <source>We said that &lt;code&gt;A.prototype&lt;/code&gt; is nothing more than an empty object (unless we change it to something else before defining &lt;code&gt;a1&lt;/code&gt;). So now basically &lt;code&gt;a1.__proto__&lt;/code&gt; points to the same thing &lt;code&gt;A.prototype&lt;/code&gt; points to, which is that empty object. They both point to the same object which was created when this line happened:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Мы сказали, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это не что иное, как пустой объект (если мы не изменим его на что-то еще до определения &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Так что теперь в основном &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1.__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; указывает на то же, на что &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;указывает &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , то есть на этот пустой объект. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Они оба указывают на один и тот же объект, который был создан, когда произошла эта строка:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eb13a5422040b1640e4e7a0c5454ebb645c4d9c1" translate="yes" xml:space="preserve">
          <source>We said that on each function definition there's a new property created called &lt;code&gt;prototype&lt;/code&gt; (which you can access it, unlike with the &lt;code&gt;__proto__&lt;/code&gt; property) created? Well, that property is being used now.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Мы говорили, что в каждом определении функции создается новое свойство с именем &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (к которому вы можете обращаться, в отличие от &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;свойства &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ну, это свойство сейчас используется.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c6dc267ab3b9d3d635dbd0662b24434319206abe" translate="yes" xml:space="preserve">
          <source>What's the difference between</source>
          <target state="translated">В чем разница между</target>
        </trans-unit>
        <trans-unit id="47d12f46bd7d79018cce2ea06e4664512459a236" translate="yes" xml:space="preserve">
          <source>What's the difference? =&amp;gt; A lot.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Какая разница? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;=&amp;gt; Много.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d2f85f01731ca1bab5a86d8e3aba08a7efa46e93" translate="yes" xml:space="preserve">
          <source>When you create a new function in JavaScript (which is an object as well, remember?), the moment it is defined, JavaScript automatically creates a new property on that function called &lt;code&gt;prototype&lt;/code&gt;. Try it:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда вы создаете новую функцию в JavaScript (которая также является объектом, помните?), В момент ее определения JavaScript автоматически создает новое свойство для этой функции, которое называется &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Попытайся:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b6473c77919835536c99c5a79f1980fb08ea7f56" translate="yes" xml:space="preserve">
          <source>With this approach we eliminate the part from step 3 where functions are duplicated on each new object creation. Instead of &lt;code&gt;a1&lt;/code&gt; and &lt;code&gt;a2&lt;/code&gt; having a separate &lt;code&gt;hey&lt;/code&gt; property, now NONE of them has it. Which, I guess, you figured out yourself by now. That's the nice thing...if you understand &lt;code&gt;__proto__&lt;/code&gt; and &lt;code&gt;Function.prototype&lt;/code&gt;, questions like these will be pretty obvious.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;При таком подходе мы исключаем часть из шага 3, где функции дублируются при каждом создании нового объекта. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вместо того, чтобы &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; имели отдельное &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;свойство &lt;/font&gt;&lt;/font&gt; &lt;code&gt;hey&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , теперь ни у кого из них его нет. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Который, я полагаю, ты сам уже понял. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это хорошо ... если вы понимаете &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , подобные вопросы будут довольно очевидными.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed7ea4136777240f51ec615c9b731cd154f02835" translate="yes" xml:space="preserve">
          <source>You may also wonder, why does JavaScript creates a property called &lt;code&gt;prototype&lt;/code&gt; for a function when you define the function? Because it tries to fool you, yes &lt;strong&gt;fool you&lt;/strong&gt; that it works like class-based languages.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы также можете задаться вопросом, почему JavaScript создает свойство с именем &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для функции при ее определении? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Потому что он пытается обмануть вас, да &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;обмануть вас,&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; что он работает как языки на основе классов.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cdcbed7468dabda887ee2ad3bed61463436ef43a" translate="yes" xml:space="preserve">
          <source>You may wonder: Why does JavaScript has &lt;code&gt;__proto__&lt;/code&gt; property created on every single object? Well, one word: &lt;strong&gt;delegation&lt;/strong&gt;. When you call a property on an object and the object doesn't have it, then JavaScript looks for the object referenced by &lt;code&gt;__proto__&lt;/code&gt; to see if it maybe has it. If it doesn't have it, then it looks at that object's &lt;code&gt;__proto__&lt;/code&gt; property and so on...until the chain ends. Thus the name &lt;strong&gt;prototype chain&lt;/strong&gt;. Of course, if &lt;code&gt;__proto__&lt;/code&gt; doesn't point to an object and instead points to &lt;code&gt;null&lt;/code&gt;, well tough luck, JavaScript realizes that and will return you &lt;code&gt;undefined&lt;/code&gt; for the property.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете задаться вопросом: почему JavaScript имеет &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;свойство &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; созданное для каждого отдельного объекта? Ну, одним словом: &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;делегирование&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Когда вы вызываете свойство для объекта, а у объекта его нет, JavaScript ищет объект, на который ссылается &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; чтобы выяснить, есть ли у него его. Если его нет, он просматривает &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;свойство &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; этого&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; объекта и т. Д. До тех пор, пока цепочка не закончится. Таким образом, название &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;прототипа цепи&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Конечно, если &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не указывает на объект , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;а вместо этого указывает на &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , а вот незадача, JavaScript понимает , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;что и возвратит вас &lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для свойства.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="228a84adb74c5fcc8902823a8da25305d1e558d9" translate="yes" xml:space="preserve">
          <source>You showed two patterns in your question. I will try to explain two more and try to explain the differences if relevant. Feel free to edit/extend.
In all examples it is about a car object that has a location and can move.</source>
          <target state="translated">Вы показали две закономерности в вашем вопросе.Я постараюсь объяснить еще две и постараюсь объяснить различия,если это уместно.Не стесняйтесь редактировать.Во всех примерах речь идет об автомобильном объекте,который имеет местоположение и может перемещаться.</target>
        </trans-unit>
        <trans-unit id="abed52bbf756ca559bba9e9c61017226edbec61c" translate="yes" xml:space="preserve">
          <source>a) A function is an object in JavaScript. EVERY object in JavaScript gets an internal property (meaning, you can't access it like other properties, except maybe in browsers like Chrome), often referred to as &lt;code&gt;__proto__&lt;/code&gt; (you can actually type &lt;code&gt;anyObject.__proto__&lt;/code&gt; in Chrome to see what it references. This is just that, a property, nothing more. A property in JavaScript = a variable inside an object, nothing more. What do variables do? They point to things.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;а) Функция - это объект в JavaScript. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;КАЖДЫЙ объект в JavaScript получает внутреннее свойство (то есть, вы не можете получить к нему доступ, как и к другим свойствам, за исключением, может быть, в браузерах, таких как Chrome), часто называемых &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (вы можете фактически ввести &lt;/font&gt;&lt;/font&gt; &lt;code&gt;anyObject.__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в Chrome, чтобы увидеть, на что он ссылается. Это просто свойство, не более того. Свойство в JavaScript = переменная внутри объекта, ничего более. Что делают переменные? Они указывают на вещи.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="f7023942206621acc838b9f351c2bfc78689b792" translate="yes" xml:space="preserve">
          <source>something very different occurs.  In the first line, variable &lt;code&gt;A&lt;/code&gt; is assigned a reference to a function.  In JavaScript, all functions objects have a &lt;em&gt;prototype&lt;/em&gt; property by default so there is no separate code to create an &lt;em&gt;A.prototype&lt;/em&gt; object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;происходит что-то совсем другое. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В первой строке переменной &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; назначается ссылка на функцию. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В JavaScript все объекты функций &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;по умолчанию &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;имеют &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;свойство &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;prototype&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , поэтому нет отдельного кода для создания &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объекта &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A.prototype&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d1add0059bf8e9b747aba843af8d9a92c234489d" translate="yes" xml:space="preserve">
          <source>versus:</source>
          <target state="translated">versus:</target>
        </trans-unit>
        <trans-unit id="b4993da023bb6cf4528cc249a4a1168cbc4c7731" translate="yes" xml:space="preserve">
          <source>vs.</source>
          <target state="translated">vs.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
