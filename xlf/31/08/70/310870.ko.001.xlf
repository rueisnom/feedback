<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/310870">
    <body>
      <group id="310870">
        <trans-unit id="1a6f157f19caa72c8ba37c93c91f741050915946" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A.prototype&lt;/code&gt; is TOTALLY DIFFERENT from the &lt;code&gt;__proto__&lt;/code&gt; property. In our example, 'A' now has TWO properties called 'prototype' and &lt;code&gt;__proto__&lt;/code&gt; . This is a big confusion for people. &lt;code&gt;prototype&lt;/code&gt; and &lt;code&gt;__proto__&lt;/code&gt; properties are in no way related, they're separate things pointing to separate values.</source>
          <target state="translated">&lt;code&gt;A.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성과 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;완전히 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다릅니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . 이 예에서 'A'에는 이제 'prototype'과 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 라는 두 가지 속성이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다. 이것은 사람들에게 큰 혼란입니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성은 전혀 관련이 없으며 별도의 값을 가리키는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa496268d52a7b13b5dc519098a8aadd5a8f698f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a1.__proto__&lt;/code&gt; property is assigned to point at the same thing as &lt;code&gt;A.prototype&lt;/code&gt; points to (another empty object {} )</source>
          <target state="translated">&lt;code&gt;a1.__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A.prototype&lt;/code&gt; 이&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가리키는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것과 동일한 것을 가리 키도록 할당 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;됩니다 (또 다른 빈 객체 {})&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="94cb063e7ce9fdcbe8793aaf001187e4752b19ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;amy.constructor&lt;/code&gt;'s lookup fails and thus is delegated to &lt;code&gt;Car.prototype&lt;/code&gt;, which does have the constructor property. And so &lt;code&gt;amy.constructor&lt;/code&gt; is &lt;code&gt;Car&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;amy.constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 조회가 실패 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 생성자 속성이있는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Car.prototype&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 위임됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그래서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;amy.constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Car&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f61c95ca5cb48c5bbfd7f2a435edff389b40e3bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/questions/3127429/javascript-this-keyword&quot;&gt;How does the &quot;this&quot; keyword work?&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/questions/3127429/javascript-this-keyword&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;this&quot;키워드는 어떻게 작동합니까?&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e41f61d04c99037105b9ee78d76751a5668f66b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT&lt;/strong&gt; Didn't mean to imply that the scope of the variable was private, I was just trying to illustrate how I define my classes in javascript.  Variable name has been changed to reflect this.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;편집&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 변수의 범위가 개인임을 암시하는 것이 아니라 자바 스크립트에서 클래스를 정의하는 방법을 설명하려고했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이를 반영하여 변수 이름이 변경되었습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="585116bdd8ba3dd4a4edf774cb8e07bd06db012c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related questions&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;관련 질문&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0619f7ed60e8eeb1a1f718f0cf87792b5daa4614" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sidenote:&lt;/strong&gt; There may not be any significant memory savings between the two approaches, however using the prototype to share methods and properties will likely use less memory than each instance having its own copy.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참고 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 두 접근 방식간에 메모리를 크게 절약 할 수는 없지만 프로토 타입을 사용하여 메서드와 속성을 공유하면 각 인스턴스가있는 각 인스턴스보다 적은 메모리를 사용하게됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6f31dd204bcdda17b1324677e21673dda9549e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What does it mean that JavaScript is a prototypal language?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript가 프로토 타입 언어라는 것은 무엇을 의미합니까?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="27fc74636f13d6850973b4244d9df16a5d144b64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What is the scope of a function in JavaScript?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript에서 함수의 범위는 무엇입니까?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2bfc3701f71054631db27ff1201c8c11f85cf3cc" translate="yes" xml:space="preserve">
          <source>A constructor's &lt;em&gt;prototype&lt;/em&gt; provides a way to share methods and values among instances via the instance's private &lt;code&gt;[[Prototype]]&lt;/code&gt; property.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생성자의 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로토 타입&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 인스턴스의 private &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;통해 인스턴스간에 메서드와 값을 공유하는 방법을 제공 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d2ee4379b4acdd82edaa8bdb55ca80e7c1f8097d" translate="yes" xml:space="preserve">
          <source>A function in JavaScript is a specialised object. In addition to being invoked, a function can store properties like any other object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript의 함수는 특수 객체입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수는 호출되는 것 외에도 다른 객체와 마찬가지로 속성을 저장할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="396460920abf6c3bb0621afc58e2bc44893b98bd" translate="yes" xml:space="preserve">
          <source>A function's &lt;em&gt;this&lt;/em&gt; is set by how the function is called or by the use of &lt;em&gt;bind&lt;/em&gt; (not discussed here). Where a function is called on an object (e.g. &lt;code&gt;myObj.method()&lt;/code&gt;) then &lt;em&gt;this&lt;/em&gt; within the method references the object. Where &lt;em&gt;this&lt;/em&gt; is not set by the call or by the use of &lt;em&gt;bind&lt;/em&gt;, it defaults to the global object (window in a browser) or in strict mode, remains undefined.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수입니다 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이이&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수가 호출되는 방법 또는를 사용하여 설정 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;바인드&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (여기서 논의하지 않음). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기능 (예를 들어 개체에서 호출되는 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;myObj.method()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )을 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 목적에있어서 참조 내에. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어디 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이이&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 호출 또는 사용으로 설정되지 않습니다 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;바인딩&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 그것은 (브라우저의 창) 전역 객체에 대한 기본값 또는 엄격 모드는 정의되지 않은 상태로 유지됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="45966dac101bec7852f1deda8e51fef286fb4aae" translate="yes" xml:space="preserve">
          <source>A reason to use the first form is to access &quot;private members&quot;. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째 양식을 사용하는 이유는 &quot;개인 구성원&quot;에 액세스하기위한 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들면 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="499a9f218e00438d3a0cf14f0cf7260e52cc4b90" translate="yes" xml:space="preserve">
          <source>A totally new empty object is created and assigned to &lt;code&gt;a1&lt;/code&gt;. &lt;code&gt;a1 = {}&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;완전히 새로운 빈 객체가 생성되어 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 할당됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1 = {}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="581fdb8f0bcea7bf634c3f54dd065571aef05131" translate="yes" xml:space="preserve">
          <source>All that stuff inside &lt;code&gt;function() { }&lt;/code&gt; is going to execute. When you reach the &lt;code&gt;this.hey..&lt;/code&gt; line, &lt;code&gt;this&lt;/code&gt; is changed to &lt;code&gt;a1&lt;/code&gt; and you get this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;function() { }&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 안의 모든 것들이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실행될 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신이 도달하면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this.hey..&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 라인을, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 변경됩니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 당신이 얻을 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f5ed6446475acfae79b53b98de3a4c05e013b251" translate="yes" xml:space="preserve">
          <source>And another section where you put the definitions that distinguish the objects from each other (&lt;code&gt;loc&lt;/code&gt; variable in the examples).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 객체를 서로 구별하는 정의를 넣는 다른 섹션 ( &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예제에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;loc&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 변수).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9f623214ec66460787835246331d7a8431d0d95d" translate="yes" xml:space="preserve">
          <source>Another example is below.  It's similar to the first one (and maybe what you meant to ask about):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 예는 다음과 같습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 첫 번째 것과 비슷합니다 (아마도 당신이 묻고 싶었던 것) :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0213ecf516b2d4882d739982f9db700f291e6d62" translate="yes" xml:space="preserve">
          <source>Another way of achieving a similar result is to use an immediately invoked function expression:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;비슷한 결과를 얻는 또 다른 방법은 즉시 호출 된 함수 표현식을 사용하는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="981aec6b82d4aef2ab9869eeaaddcde70f35e9f6" translate="yes" xml:space="preserve">
          <source>As discussed in other answers, it's really a performance consideration because the function in the prototype is shared with all of the instantiations - rather than the function being created for each instantiation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 답변에서 설명한 것처럼 프로토 타입의 함수는 각 인스턴스화에 대해 생성되는 함수가 아닌 모든 인스턴스화와 공유되므로 실제로 성능을 고려해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ebabf85ca06b23cb95f024f10b759ca642217e40" translate="yes" xml:space="preserve">
          <source>As others have mentioned, there are various reasons to choose one method or the other.  My sample is just meant to clearly demonstrate the difference.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 사람들이 언급했듯이 한 가지 방법을 선택해야하는 여러 가지 이유가 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 샘플은 차이점을 명확하게 보여주기위한 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9ca2d8b0f061f98b7e60e7a9c1fa9639212c0666" translate="yes" xml:space="preserve">
          <source>As others have said the first version, using &quot;this&quot; results in every instance of the class A having its own independent copy of function method &quot;x&quot;.  Whereas using &quot;prototype&quot; will mean that each instance of class A will use the same copy of method &quot;x&quot;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 사람들이 첫 번째 버전을 말했듯이, &quot;this&quot;를 사용하면 클래스 A의 모든 인스턴스에 독자적인 함수 메소드 &quot;x&quot;의 사본이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;prototype&quot;을 사용한다는 것은 클래스 A의 각 인스턴스가 동일한 방법 &quot;x&quot;의 복사본을 사용한다는 것을 의미합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="562429007d4478f062f7b1115e1ecc040b939321" translate="yes" xml:space="preserve">
          <source>Because of javascript's scoping rules, private_var is available to the function assigned to this.x, but not outside the object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Javascript의 범위 지정 규칙으로 인해 private_var은 this.x에 지정된 함수에 사용 가능하지만 오브젝트 외부에서는 사용할 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="514ae34b3f92bfa48cc0a06bcba267d346bbe101" translate="yes" xml:space="preserve">
          <source>Before looking at the differences, the following should be noted:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;차이점을 살펴보기 전에 다음 사항에 유의해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ae90c980e638dd03a0023fb896a1307a3f40e7ba" translate="yes" xml:space="preserve">
          <source>Concerning the last three lines:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;마지막 세 줄에 대해 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b8a7b9e2cf97fc63ca3ff461c377262490a1646" translate="yes" xml:space="preserve">
          <source>Cool! Now, when you create &lt;code&gt;a1&lt;/code&gt;, it again goes through all of the 3 steps above, and in step 3, it doesn't do anything, since &lt;code&gt;function A()&lt;/code&gt; has nothing to execute. And if we do:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;멋있는! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 만들면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 3 단계를 모두 거치고 3 단계에서는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;function A()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 실행할 것이 없으므로 아무 것도 수행하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 우리가 할 경우 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a6dd015187d0ada3686c3bc302de7d0b64e2af15" translate="yes" xml:space="preserve">
          <source>Different adults have different ages, but all of the adults get the same rights.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;성인마다 나이가 다르지만 모든 성인은 동일한 권리를 갖습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7a45229532c15d2fa73aad667937ce56403a1a42" translate="yes" xml:space="preserve">
          <source>Every object is linked to a prototype object. When trying to access a property that does not exist, JavaScript will look in the object's prototype object for that property and return it if it exists.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 객체는 프로토 타입 객체에 연결됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;존재하지 않는 속성에 액세스하려고하면 JavaScript는 해당 속성에 대한 객체의 프로토 타입 객체를 찾아 해당 속성이있는 경우이를 반환합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1f67de5a9c375290139f103847bab77b1f3187b5" translate="yes" xml:space="preserve">
          <source>Feel free to add or edit. Once more complete I could make this a community wiki maybe.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자유롭게 추가하거나 편집하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한 번 더 완성되면 이것을 커뮤니티 위키로 만들 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30c1034505f0dae85e722fbe58cd4a0976ebb7b2" translate="yes" xml:space="preserve">
          <source>Finally, it should not be too difficult to realize how object oriented programming can be done. There are two sections.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;마지막으로, 객체 지향 프로그래밍이 어떻게 수행 될 수 있는지를 깨닫기가 어렵지 않아야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 개의 섹션이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="616fd4e7af8e063af8b704651be5d8e96ff90c42" translate="yes" xml:space="preserve">
          <source>Functional Classes</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기능성 클래스&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1378319ea2e44565319a2798a7f9ab0ed1f666ee" translate="yes" xml:space="preserve">
          <source>Furthermore, &lt;code&gt;amy&lt;/code&gt; is an &lt;code&gt;instanceof&lt;/code&gt;&lt;code&gt;Car&lt;/code&gt;. The &lt;code&gt;instanceof&lt;/code&gt; operator works by seeing if the right operand's prototype object (&lt;code&gt;Car&lt;/code&gt;) can be found anywhere in the left operand's prototype (&lt;code&gt;amy&lt;/code&gt;) chain.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;amy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt; &lt;code&gt;Car&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;instanceof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. &lt;/font&gt; &lt;code&gt;instanceof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 연산자는 오른쪽 피연산자의 프로토 타입 객체 (경우에보고하여 작동 &lt;/font&gt; &lt;code&gt;Car&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) 왼쪽 피연산자의 프로토 타입 (어디서나 찾을 수 있습니다 &lt;/font&gt; &lt;code&gt;amy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) 체인.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a7c6fc25c03c684ec456561dda6f16904d9fb9b2" translate="yes" xml:space="preserve">
          <source>Here is some code to show this subtle difference:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 미묘한 차이를 보여주는 코드는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a512ea9bd1a2595e6564a628ec13cd5d0173a27f" translate="yes" xml:space="preserve">
          <source>Here we're creating 2,000,000 new objects with a &lt;code&gt;print&lt;/code&gt; method in Chrome. We're storing every object in an array. Putting &lt;code&gt;print&lt;/code&gt; on the prototype takes about 1/2 as long.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Chrome에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;print&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 방법으로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2,000,000 개의 새로운 객체를 만들고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 객체를 배열에 저장합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;퍼팅 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;print&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 프로토 타입에하는 것은 긴으로 1/2 정도 걸립니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="21a690c2811cf3a8e2fcb03ca0c412aeb6c8978e" translate="yes" xml:space="preserve">
          <source>Here's where most people get confused:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대부분의 사람들이 혼란스러워하는 곳은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a6a0ce9031e0776d5fc6120b3023d51bccf114f1" translate="yes" xml:space="preserve">
          <source>Hope this helps.</source>
          <target state="translated">도움이 되었기를 바랍니다.</target>
        </trans-unit>
        <trans-unit id="f9bebf368c86101e6a1de11b79f2745a5a9cce68" translate="yes" xml:space="preserve">
          <source>However there is one point interesting to know:
Every &lt;code&gt;prototype&lt;/code&gt; object has has a convenience property &lt;code&gt;constructor&lt;/code&gt;, which points back to the function (think object) it came attached to.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 한 가지 흥미로운 점이 있습니다. 모든 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체에는 편리한 속성 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 있습니다.이 속성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 연결된 함수 (생각 객체)를 가리 킵니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a50c839129a8568a2bdb8b1eb71615c8ca03bab5" translate="yes" xml:space="preserve">
          <source>However, the primary difference is that there are optimizations implemented in JavaScript engines that only apply when using the pseudoclassical pattern. Think of the pseudoclassical pattern a probably faster version of the prototypal pattern; the object relations in both examples are the same.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 주요 차이점은 유사 클래식 패턴을 사용할 때만 적용되는 JavaScript 엔진에 최적화가 구현되어 있다는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;pseudoclassical 패턴을 프로토 타입 패턴의 빠른 버전으로 생각하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 예제의 객체 관계는 동일합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8d4860ab556155819ce1e0d3bbe7982e93f66780" translate="yes" xml:space="preserve">
          <source>I believe that @Matthew Crumley is right.  They are &lt;em&gt;functionally&lt;/em&gt;, if not structurally, equivalent.  If you use Firebug to look at the objects that are created using &lt;code&gt;new&lt;/code&gt;, you can see that they are the same.  However, my preference would be the following.  I'm guessing that it just seems more like what I'm used to in C#/Java.  That is, define the class, define the fields, constructor, and methods.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Matthew Crumley가 옳다고 생각합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것들은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;구조적으로는 아니지만 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기능적으로&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 동등합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Firebug를 사용하여 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하여 생성 된 객체를 보면 동일한 객체임을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;알 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 내 선호는 다음과 같습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # / Java에서 익숙한 것보다 더 비슷하다고 생각합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉, 클래스를 정의하고 필드, 생성자 및 메소드를 정의하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15622b8173641c92e63c1ee36c4e0b230517bf70" translate="yes" xml:space="preserve">
          <source>I know this has been answered to death but I'd like to show an actual example of speed differences.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 이것이 죽음에 대한 답변임을 알고 있지만 속도 차이의 실제 예를 보여주고 싶습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="56482a797b855ebf28ae5afc4251b5db57e29525" translate="yes" xml:space="preserve">
          <source>I put together a jsperf to show this. There is a dramatic difference in the time it takes to instantiate the class, although it is really only relevant if you are making many instances.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 이것을 보여주기 위해 jsperf를 모았다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스를 인스턴스화하는 데 걸리는 시간에는 극적인 차이가 있지만 실제로 인스턴스를 많이 만드는 경우에만 관련이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f431a5529a17c6802ccb464328c61e22ee961e03" translate="yes" xml:space="preserve">
          <source>I think, the &lt;code&gt;this&lt;/code&gt; version is used to enable encapsulation, i.e. data hiding.
It helps to manipulate private variables.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 생각 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 버전은 캡슐화, 즉 데이터 숨기기를 사용하도록 설정하는 데 사용됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;개인 변수를 조작하는 데 도움이됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d870f91c01fd9fe42353544305311db08719426e" translate="yes" xml:space="preserve">
          <source>I won't cover why &lt;code&gt;this&lt;/code&gt; changes to &lt;code&gt;a1&lt;/code&gt; but &lt;a href=&quot;https://stackoverflow.com/a/80478/1085998&quot;&gt;this is a great answer&lt;/a&gt; to learn more.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;왜 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; 로&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 바뀌는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;지에 대해서는 다루지 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;않겠지 만 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자세한 내용을 알아 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/80478/1085998&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;보는 데 큰 도움이&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="89078c5b79458591085ee64d7f970de4d93797ee" translate="yes" xml:space="preserve">
          <source>If you think this is not a problem, then it depends on whether you can live without private variables, and whether you are experienced enough to know a leak when you see one. Also, having to put the constructor logic after the method definitions is inconvenient.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 문제가 아니라고 생각한다면, 그것은 사적 변수없이 살 수 있는지, 그리고 누수를 볼 때 누수를 알기에 충분한 경험이 있는지에 달려 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 메소드 정의 후에 생성자 논리를 넣어야하는 것이 불편합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5217801ffee692a0d0416de94ce40dcc69d5d848" translate="yes" xml:space="preserve">
          <source>In conclusion, in the first example &lt;strong&gt;a copy of the function is assigned to each instance&lt;/strong&gt;. In the second example &lt;strong&gt;a single copy of the function is shared by all instances&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결론적으로, 첫 번째 예 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 함수의 사본이 각 인스턴스에 지정됩니다&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째 예 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 함수의 단일 사본은 모든 인스턴스에서 공유됩니다&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64a03b3c9405b8097a143dbb32c646d5cd09f22e" translate="yes" xml:space="preserve">
          <source>In general there is no right or wrong, it's more a matter of taste or a design decision depending on your requirements. The prototype however is the technique that is used to develop in an object oriented manner, as I hope you'll see at the end of this answer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적으로 옳고 그름은 없으며 요구 사항에 따라 취향이나 디자인 결정의 문제입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 프로토 타입은 객체 지향 방식으로 개발하는 데 사용되는 기술입니다.이 답변의 끝 부분에서 볼 수 있기를 바랍니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="666df82d0c8fe3053b47e6a0219f55650ccc2aff" translate="yes" xml:space="preserve">
          <source>In most cases they are essentially the same, but the second version saves memory because there is only one instance of the function instead of a separate function for each object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대부분의 경우 기본적으로 동일하지만 두 번째 버전은 각 객체에 대해 별도의 함수 대신 함수의 인스턴스가 하나만 있기 때문에 메모리를 절약합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="91aee306e0db067a91d992a548f5fa66a86b83c9" translate="yes" xml:space="preserve">
          <source>In the case of:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음의 경우 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a06ec36da521fee44241221c9d5800a01c8444c" translate="yes" xml:space="preserve">
          <source>In the second example you are adding a property to the prototype object that all the instances created with &lt;code&gt;A&lt;/code&gt; point to.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째 예에서는 모든 인스턴스가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; 로&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 만든 프로토 타입 객체에 속성을 추가합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="68d939a819d95a1b232c797326d7169b5ded8eeb" translate="yes" xml:space="preserve">
          <source>In the second line, &lt;em&gt;A.prototype.x&lt;/em&gt; is assigned a reference to a function. This will create an &lt;em&gt;x&lt;/em&gt; property if it doesn't exist, or assign a new value if it does. So the difference with the first example in which object's &lt;em&gt;x&lt;/em&gt; property is involved in the expression.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째 줄에서 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A.prototype.x&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에는 함수에 대한 참조가 할당됩니다. &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;x&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성이 없으면 새 속성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을 만들 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;거나 새 속성이 있으면 새 값을 할당합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 객체의 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;x&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성이 표현식에 포함 된 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째 예제와의 차이점입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f1f444d3fad61ca80f657809854392a20d97c79" translate="yes" xml:space="preserve">
          <source>In this case &lt;code&gt;Car&lt;/code&gt; is a &lt;strong&gt;function&lt;/strong&gt; (&lt;strong&gt;also&lt;/strong&gt; think &lt;strong&gt;object&lt;/strong&gt;) that can be invoked as you are used to do. It has a property &lt;code&gt;methods&lt;/code&gt; (which is an object with a &lt;code&gt;move&lt;/code&gt; function). When &lt;code&gt;Car&lt;/code&gt; is invoked the &lt;code&gt;extend&lt;/code&gt; function is called, which does some magic, and extends the &lt;code&gt;Car&lt;/code&gt; function (think object) with the methods defined within &lt;code&gt;methods&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Car&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; A는 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기능&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ( &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;도&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 생각 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;개체를&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 당신이하는 데 사용됩니다로 호출 할 수 있습니다). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;속성 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;methods&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;move&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가있는 오브젝트 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;)가 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;때 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Car&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 호출 된되는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extend&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 마법을 수행하고, 확장 호출 기능, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Car&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 기능 내에서 정의 된 방법으로 (개체를 생각하는) &lt;/font&gt;&lt;/font&gt; &lt;code&gt;methods&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="412ce250c444246830eebe423a5e0e2d9149c14c" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;A&lt;/code&gt; assigned the return value of calling the function on the right-hand side. Here again, since &lt;em&gt;this&lt;/em&gt; is not set in the call, it will reference the global object and &lt;code&gt;this.x&lt;/code&gt; is effective &lt;code&gt;window.x&lt;/code&gt;. Since the function doesn't return anything, &lt;code&gt;A&lt;/code&gt; will have a value of &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 경우, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 오른쪽에서 함수를 호출 한 반환 값을 할당했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서도 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 호출에서 설정되지 않았 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this.x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 전역 객체를 참조하고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;this.x&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 유효 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;window.x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 함수는 아무것도 반환하지 않으므로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 값은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9dcc855b3c241eea76935dfb826e530678f84354" translate="yes" xml:space="preserve">
          <source>In this case, variable &lt;code&gt;A&lt;/code&gt; is assigned a value that is a reference to a function.  When that function is called using &lt;code&gt;A()&lt;/code&gt;, the function's &lt;em&gt;this&lt;/em&gt; isn't set by the call so it defaults to the global object and the expression &lt;code&gt;this.x&lt;/code&gt; is effective &lt;code&gt;window.x&lt;/code&gt;. The result is that a reference to the function expression on the right-hand side is assigned to &lt;code&gt;window.x&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 경우 변수 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에는 함수에 대한 참조 값이 할당됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 기능을 사용하여 호출 될 때 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 함수의 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이이&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 호출에 의해 설정되지 않은 전역 객체와 표현에 기본값 너무 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this.x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 효과가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;window.x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결과적으로 오른쪽의 함수 표현식에 대한 참조가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;window.x&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 지정됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c9c1162f8649ee6c800e3c7ee24847b2ec12ab6c" translate="yes" xml:space="preserve">
          <source>In this example &lt;code&gt;Car&lt;/code&gt; links to the &lt;code&gt;prototype&lt;/code&gt; object, which links via &lt;code&gt;constructor&lt;/code&gt; to &lt;code&gt;Car&lt;/code&gt; itself, i.e. &lt;code&gt;Car.prototype.constructor&lt;/code&gt; is &lt;code&gt;Car&lt;/code&gt; itself. This allows you to figure out which constructor function built a certain object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 예제에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Car&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체에 연결되며, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;통해 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Car&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 자체에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;연결 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Car.prototype.constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Car&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 자체입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이를 통해 특정 객체를 생성 한 생성자 함수를 파악할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bdba5bd5e74f1b3ee8430302ca046662463d4fe0" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;new&lt;/code&gt; operator has been added before the function expression so that the function is called as a constructor. When called with &lt;code&gt;new&lt;/code&gt;, the function's &lt;em&gt;this&lt;/em&gt; is set to reference a new Object whose private &lt;code&gt;[[Prototype]]&lt;/code&gt; property is set to reference the constructor's public &lt;em&gt;prototype&lt;/em&gt;. So in the assignment statement, the &lt;code&gt;x&lt;/code&gt; property will be created on this new object. When called as a constructor, a function returns its &lt;em&gt;this&lt;/em&gt; object by default, so there is no need for a separate &lt;code&gt;return this;&lt;/code&gt; statement.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 예에서는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수가 생성자로 호출되도록 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 연산자가 함수 표현식 앞에 추가되었습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;호출 할 때 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수이다 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 누구의 개인 새로운 객체 참조로 설정되어 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성이 생성자의 공개 참조하도록 설정되어 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로토 타입을&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대 입문 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서이 새 객체에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성이 만들어집니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생성자로 호출되면 함수는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본적 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;으로이&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;반환 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하므로 별도로이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;return this;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 할 필요가 없습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;성명서.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="89bfdc078a207ee283d2d0a52398f24343989b97" translate="yes" xml:space="preserve">
          <source>In your first example, you are adding a property &lt;code&gt;x&lt;/code&gt; to each instance created with the &lt;code&gt;A&lt;/code&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째 예에서는 &lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;만든 각 인스턴스에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;속성 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bb4c3a5d3272e73f58dce20dcda9040a1a637e9e" translate="yes" xml:space="preserve">
          <source>It does the same as in the prototypal pattern really, it is just syntactic sugar overtop of the prototypal pattern.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 프로토 타입 패턴에서와 동일하게 실제로 프로토 타입 패턴 위에있는 구문 설탕입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="723750099350c4865d1a35080b4c625513b94ce7" translate="yes" xml:space="preserve">
          <source>It will see that &lt;code&gt;a1&lt;/code&gt; does not contain &lt;code&gt;hey&lt;/code&gt; and it will check its &lt;code&gt;__proto__&lt;/code&gt; property object to see if it has it, which is the case.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 그 볼 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 포함되지 않은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;hey&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하고 그것 확인합니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 어떤 경우인지, 그것을 가지고 있는지 확인하기 위해 속성 개체를.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed913fb6557c9ddd4efa7738e62a2126ab7b507a" translate="yes" xml:space="preserve">
          <source>JavaScript is an object-oriented language, i.e. most values are objects, including functions. (Strings, numbers, and booleans are &lt;em&gt;not&lt;/em&gt; objects.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript는 객체 지향 언어입니다. 즉, 대부분의 값은 함수를 포함한 객체입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(문자열, 숫자 및 부울은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아닙니다&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a2fdf9d982a02784e0975ab4455583df7ff00a3c" translate="yes" xml:space="preserve">
          <source>JavaScript isn't a low-level language.  It may not be very valuable to think of prototyping or other inheritance patterns as a way to explicitly change the way memory is allocated.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript는 저수준 언어가 아닙니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로토 타입 또는 기타 상속 패턴을 메모리 할당 방식을 명시 적으로 변경하는 방법으로 생각하는 것은 그리 가치가 없을 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8fdca31371e433fd45f5ce78b0ac9a2214f60370" translate="yes" xml:space="preserve">
          <source>Let me give you a more comprehensive answer that I learned during a JavaScript training course.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript 교육 과정에서 배운 더 포괄적 인 답변을 드리겠습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b03b280b17407f067546235b537992021180eadf" translate="yes" xml:space="preserve">
          <source>Let us look at the following example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 예제를 보자.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1f5f057f5d33bae053072b69aa5b677d4464cea0" translate="yes" xml:space="preserve">
          <source>Let's go on with our example and create an &quot;object&quot; out of &lt;code&gt;A&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예제를 계속 진행하고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 &quot;객체&quot;를 만듭니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7bebb77119825ff6eb9b617e8afcfe33f39e3a01" translate="yes" xml:space="preserve">
          <source>Lets look at the implementation now.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 구현을 살펴 보겠습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0f8fd08fd1ae3fed7665265a11fa998dbd5952c" translate="yes" xml:space="preserve">
          <source>Most answers mentioned the difference already, i.e. when prototyping the function is shared with all (future) instances. Whereas declaring the function in the class will create a copy for each instance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대부분의 답변은 이미 차이점을 언급했습니다. 즉, 프로토 타입 제작시 모든 (미래) 인스턴스와 공유됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스에서 함수를 선언하면 각 인스턴스에 대한 사본이 작성됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6371c6ad3fae9de8ee8f263431e6d38bbd8ba8d0" translate="yes" xml:space="preserve">
          <source>Most people here (especially the top-rated answers) tried to explain how they are different without explaining WHY. I think this is wrong and if you understand the fundamentals first, the difference will become obvious. Let's try to explain the fundamentals first...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에있는 대부분의 사람들 (특히 최고 답변)은 WHY를 설명하지 않고 어떻게 다른지 설명하려고했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 이것이 잘못되었다고 생각하고 기본을 먼저 이해하면 그 차이가 분명해질 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본 사항을 먼저 설명해 봅시다 ...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="af8ddf39a6e280886e3a21db4258fe6c6694944a" translate="yes" xml:space="preserve">
          <source>NOTE: Some people tend to not call the internal Prototype property as &lt;code&gt;__proto__&lt;/code&gt;, I've used this name through the post to distinguish it clearly to the &lt;code&gt;Functional.prototype&lt;/code&gt; property as two different things.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참고 : 일부 사람들은 내부 프로토 타입 속성을 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 부르지 않는 경향 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 있습니다.이 게시물을 통해이 이름을 사용하여 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Functional.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성을 두 가지 다른 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것으로 명확히 구분했습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9e08b3dab8de59f8684d10acd61311d09f996379" translate="yes" xml:space="preserve">
          <source>Not sure if this pattern is still relevant nowadays, but it exists. And it is good to know about it.
You simply pass an object and a property to the decorator function. The decorator returns the object with property and method.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;현재이 패턴이 여전히 관련이 있는지 확실하지 않지만 존재합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 그것에 대해 아는 것이 좋습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체와 속성을 데코레이터 함수에 전달하기 만하면됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;데코레이터는 속성과 메서드를 사용하여 개체를 반환합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="19bda0638ba7632222a0cb55603f398896425e39" translate="yes" xml:space="preserve">
          <source>Now, let's try to create another object:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 다른 객체를 만들어 봅시다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="419574ffc2da398be8c2c847ff168ef513bfe459" translate="yes" xml:space="preserve">
          <source>Now, the &lt;code&gt;prototype&lt;/code&gt; structure can be applied as following:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 구조를 다음과 같이 적용 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7165ad3fec60f094c503a8486cf19a6a37782c89" translate="yes" xml:space="preserve">
          <source>Now, there's another thing happening when &lt;code&gt;var a1 = new A()&lt;/code&gt; statement is processed. Basically &lt;code&gt;A()&lt;/code&gt; is executed and if A is something like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;var a1 = new A()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 문이 처리 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;될 때 또 다른 일이 발생 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본적으로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 실행되고 A가 다음과 같은 경우 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="83d1f08532a2d718637904b4c370e11fc354f1dc" translate="yes" xml:space="preserve">
          <source>Object Decorator pattern</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;오브젝트 데코레이터 패턴&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1afec21842c90d30de589ac2651b4ea942c64d94" translate="yes" xml:space="preserve">
          <source>One section that defines common properties/methods in the prototype (chain).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로토 타입 (체인)에서 공통 속성 / 방법을 정의하는 섹션입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f8555b3f33258c80236579e089299ab9f568e09a" translate="yes" xml:space="preserve">
          <source>Prototypal Classes</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로토 타입 수업&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ebaab3675de408919997f055a33be6353eee8b66" translate="yes" xml:space="preserve">
          <source>Prototype is the template of the class; which applies to all future instances of it. Whereas this is the particular instance of the object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로토 타입은 클래스의 템플릿입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;미래의 모든 인스턴스에 적용됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 객체의 특정 인스턴스입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c10620b77891a5a8f24861d5ce595bd9ce31cc1" translate="yes" xml:space="preserve">
          <source>Pseudoclassical patterns</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;슈도 클래식 패턴&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99e10fb4f059613db70e3de60d817eff342bc563" translate="yes" xml:space="preserve">
          <source>Remember why the &lt;code&gt;__proto__&lt;/code&gt; property exists on every object? So that if you retrieve the &lt;code&gt;yoMan&lt;/code&gt; property on &lt;code&gt;a1&lt;/code&gt; (which doesn't exist), its &lt;code&gt;__proto__&lt;/code&gt; property will be consulted, which if it's an object (and is most cases it is), it will check if it contains &lt;code&gt;yoMan&lt;/code&gt;, and if it doesn't, it will consult that object's &lt;code&gt;__proto__&lt;/code&gt; etc. If it does, it will take that property value and display it to you.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성이 모든 개체에 존재하는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이유를 기억 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하십니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;존재하지 않는 &lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;yoMan&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을 검색하면 &lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성이 참조됩니다.이 속성은 객체 (대부분의 경우) 인 경우 &lt;/font&gt; &lt;code&gt;yoMan&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 포함되어 있는지 확인 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. 그렇지 않으면 해당 객체의 &lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 등을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 그렇다면 해당 속성 값을 가져 와서 표시합니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b0a6e2e15bdc9df61cac47d196cd4068c8ed4bfe" translate="yes" xml:space="preserve">
          <source>So here are the snippets in question:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문제의 스 니펫은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="48bcbce51ee2114152267f2210d7eb26c82bc1a0" translate="yes" xml:space="preserve">
          <source>So someone decided to use this fact + the fact that when you create &lt;code&gt;a1&lt;/code&gt;, its &lt;code&gt;__proto__&lt;/code&gt; property points to the same (empty) object &lt;code&gt;A.prototype&lt;/code&gt; points to and do this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;누군가가이 사실 + 사실을 사용하기로 결정 그래서 당신이 만들 때 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 그 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; 의&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 동일 (빈) 객체에 속성 포인트 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A.prototype&lt;/code&gt; 의&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 포인트와이 작업을 수행 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e8e06d432de29a74b35aa0883013e73afe1ae28" translate="yes" xml:space="preserve">
          <source>So to summarize, when you do &lt;code&gt;var a1 = new A()&lt;/code&gt; there are 3 things happening in the background:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;요약하면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var a1 = new A()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 할 때 백그라운드에서 3 가지 일이 발생합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="22ed9816149fa3050650e31e821017731cbc0d1f" translate="yes" xml:space="preserve">
          <source>So we're now at the point where we have a freshly baked empty &lt;code&gt;a1&lt;/code&gt; object. We said that all objects in JavaScript have an internal &lt;code&gt;__proto__&lt;/code&gt; property which points to something (&lt;code&gt;a1&lt;/code&gt; also has it), whether it's null or another object. What the &lt;code&gt;new&lt;/code&gt; operator does is that it sets that &lt;code&gt;__proto__&lt;/code&gt; property to point to the function's &lt;code&gt;prototype&lt;/code&gt; property. Read that again. It's basically this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 우리는 갓 구운 빈 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체를 가지고 있습니다. 우리는 자바 스크립트의 모든 객체는 내부가 있다고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (뭔가 포인트 재산 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 또한 그것을 가지고)를 그것의 널 (null) 또는 다른 개체 여부. 어떤 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 운영자가하는 것은 그 설정이다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수의에 지점 속성을 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성입니다. 다시 읽어보세요. 기본적으로 이것입니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="91cc8422370d40ae76ed33226042018137312f86" translate="yes" xml:space="preserve">
          <source>So what does this &lt;code&gt;__proto__&lt;/code&gt; property points to? Well, usually another object (we'll explain why later). The only way to force JavaScript for the &lt;code&gt;__proto__&lt;/code&gt; property to NOT point to another object is to use &lt;code&gt;var newObj = Object.create(null)&lt;/code&gt;. Even if you do this, the &lt;code&gt;__proto__&lt;/code&gt; property STILL exists as a property of the object,  just it doesn't point to another object, it points to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 무엇을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가리 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;킵&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;글쎄, 일반적으로 다른 객체입니다 (나중에 이유를 설명하겠습니다). &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가 다른 객체를 가리 키지 않도록 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 유일한 방법 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var newObj = Object.create(null)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 작업을 수행하더라도 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성 STILL은 객체의 속성으로 존재하며 다른 객체를 가리 키지 않고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가리 킵니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="68f8dbb71bc22f1b333dff6ea439d77f35689fff" translate="yes" xml:space="preserve">
          <source>So, we add it using prototype, rather than this.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그래서 우리는 이것보다는 프로토 타입을 사용하여 추가합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="14733402dd610d5b95df826ad8095da2e9ad0b60" translate="yes" xml:space="preserve">
          <source>Some developers can be confused in the beginning. See below example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일부 개발자는 처음에 혼란 스러울 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아래 예를 참조하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5dce25ee28014dce88c211954e9a1c27a9b6793f" translate="yes" xml:space="preserve">
          <source>Steps 1,2,3 will repeat. Do you notice something? The key word is &lt;strong&gt;repeat.&lt;/strong&gt; Step 1: &lt;code&gt;a2&lt;/code&gt; will be a new empty object, step 2: its &lt;code&gt;__proto__&lt;/code&gt; property will point to the same thing &lt;code&gt;A.prototype&lt;/code&gt; points to and most importantly, step 3: function &lt;code&gt;A()&lt;/code&gt; is AGAIN executed, which means that &lt;code&gt;a2&lt;/code&gt; will get &lt;code&gt;hey&lt;/code&gt; property containing a function. &lt;code&gt;a1&lt;/code&gt; and &lt;code&gt;a2&lt;/code&gt; have two SEPARATE properties named &lt;code&gt;hey&lt;/code&gt; which point to 2 SEPARATE functions! We now have duplicate functions in same two different objects doing the same thing, oops...You can imagine the memory implications of this if we have 1000 objects created with &lt;code&gt;new A&lt;/code&gt;, after all functions declarations take more memory than something like the number 2. So how do we prevent this?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1,2,3 단계가 반복됩니다. 당신은 뭔가를 알아? 핵심 단어는 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;반복입니다.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 1 단계 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 새로운 빈 객체, 2 단계가 될 것입니다 : 그 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성은 같은 일을 가리 킵니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A.prototype&lt;/code&gt; 의&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 기능 :에 점 그리고 가장 중요한 3 단계 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 것을하는 수단, 다시 실행 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 얻을 것이다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;hey&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수를 포함하는 속성. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;hey&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 라는 두 개의 SEPARATE 속성이 있습니다.이 속성은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2 개의 SEPARATE 함수를 가리 킵니다! 이제 동일한 두 가지 객체에 동일한 기능을 수행하는 중복 함수가 있습니다. 죄송합니다.&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 모든 함수 선언이 숫자 2와 같은 메모리보다 많은 메모리를 차지합니다. 그렇다면 어떻게 방지 할 수 있습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba42003109816715679c7cec7df83598908ebb1c" translate="yes" xml:space="preserve">
          <source>Take these 2 examples:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 두 가지 예를 보자.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a1285513924c3fcc88d19dd90ef1b7247c97be6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;instanceof&lt;/code&gt; operator returns &lt;code&gt;false&lt;/code&gt;, because &lt;code&gt;Dog&lt;/code&gt;'s prototype cannot be found anywhere in &lt;code&gt;fido&lt;/code&gt;'s prototype chain. &lt;code&gt;fido&lt;/code&gt; is a simple object that is created with an object literal, i.e. it just delegates to &lt;code&gt;Object.prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;instanceof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 연산자를 반환 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 때문에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Dog&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 프로토 타입은 어디에서 찾을 수 없습니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fido&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 프로토 타입 체인 '. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fido&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 객체 리터럴로 생성 된 간단한 객체입니다. 즉, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 위임합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="59cba9bc0a9bd21c18ba6a3cd21c7e6251c3604c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prototype&lt;/code&gt; property of a function constructor refers to the prototype object of all instances created with that function when using &lt;code&gt;new&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수 생성자 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 사용할 때 해당 함수로 생성 된 모든 인스턴스의 프로토 타입 객체를 나타냅니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5fe4abd47db3ca32634516e9378bb727fff7e1ff" translate="yes" xml:space="preserve">
          <source>The examples have very different outcomes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예제의 결과는 매우 다릅니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="597df3874dbfac5cd4c24cbbd34b592696279cd5" translate="yes" xml:space="preserve">
          <source>The fact that you used the operator &lt;code&gt;new&lt;/code&gt; before a function invocation &lt;code&gt;A()&lt;/code&gt; did something ADDITIONAL in the background. The &lt;code&gt;new&lt;/code&gt; keyword created a new object which now references &lt;code&gt;a1&lt;/code&gt; and that object is empty. Here's what happening additionally:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수 호출 &lt;/font&gt; &lt;code&gt;A()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 전에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 연산자를 사용했다는 사실 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 백그라운드에서 추가 작업을 수행했습니다. &lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 키워드는 이제 참조가 새로운 객체 생성 &lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 해당 개체가 비어 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추가로 일어나는 일은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7e55db4e23b6f32c08ffe74b551e861a639ca0e4" translate="yes" xml:space="preserve">
          <source>The first example changes the interface for that object only. The second example changes the interface for all object of that class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째 예는 해당 객체의 인터페이스 만 변경합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째 예는 해당 클래스의 모든 객체에 대한 인터페이스를 변경합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3d067c8d8a017b9c83dc914075cce47ebc57d678" translate="yes" xml:space="preserve">
          <source>The first two patterns allow a discussion of using techniques to define  shared methods or using methods that are defined inline in the body of the constructor. In both cases every instance has its own &lt;code&gt;move&lt;/code&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;처음 두 패턴은 기술을 사용하여 공유 메소드를 정의하거나 생성자 본문에 인라인으로 정의 된 메소드를 사용하는 것에 대한 토론을 허용합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 경우 모두 모든 인스턴스에는 자체 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;move&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 기능이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="82ae2b7331064f17552e8317206e9a42246c5f28" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;A()&lt;/code&gt; is being executed with &lt;code&gt;this&lt;/code&gt; set to the new, empty object created in step 1 (read the answer I referenced above as to why &lt;code&gt;this&lt;/code&gt; changes to &lt;code&gt;a1&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1 단계에서 생성 된 새로운 빈 객체 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 세트 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로 실행됩니다 ( &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 왜 &lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; 으로&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 변경 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되는지에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 위에서 언급 한 답변을 읽으십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;)&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b2318654afa23c4d76517a2dd3e321c2338ca9a" translate="yes" xml:space="preserve">
          <source>The prototypal pattern does not lend itself well to the same examination, because function sharing via a prototype delegation is the very goal for the prototypal pattern. As others pointed out, it is expected to have a better memory footprint.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로토 타입 위임을 통한 함수 공유는 프로토 타입 패턴의 목표이므로 프로토 타입 패턴은 동일한 시험에 적합하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 사람들이 지적했듯이 더 나은 메모리 공간을 가질 것으로 예상됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="81a9d5f167760be8b398327c28ef552413c90ceb" translate="yes" xml:space="preserve">
          <source>The ultimate problem with using &lt;code&gt;this&lt;/code&gt; instead of &lt;code&gt;prototype&lt;/code&gt; is that when overriding a method, the constructor of the base class will still refer to the overridden method. Consider this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대신에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용할 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;때 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 궁극적 인 문제 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 메소드를 재정의 할 때 기본 클래스의 생성자가 여전히 재정의 된 메소드를 참조한다는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이걸 고려하세요:&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cb8a7a4b9ba94c3c72b9b96dae39a5767b6c3728" translate="yes" xml:space="preserve">
          <source>There's something happening in the background when this thing happened. &lt;code&gt;a1&lt;/code&gt; is an ordinary variable which was assigned a new, empty object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 일이 발생했을 때 백그라운드에서 무언가가 발생했습니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 새로운 빈 객체에 할당 된 일반 변수입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dad014627fd09fcb90b0d1758b0b7befb734da14" translate="yes" xml:space="preserve">
          <source>These differences between the two approaches also manifest if you're serializing and de-serializing your Javascript objects to/from JSON. Methods defined on an object's prototype are not serialized when you serialize the object, which can be convenient when for example you want to serialize just the data portions of an object, but not it's methods:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Javascript 객체를 JSON으로 직렬화하거나 직렬화 해제하는 경우 두 접근 방식 간의 이러한 차이점도 나타납니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;오브젝트의 프로토 타입에 정의 된 메소드는 오브젝트를 직렬화 할 때 직렬화되지 않습니다. 예를 들어 오브젝트의 데이터 부분 만 직렬화하려고하지만 메소드는 아닙니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9067e4c49b46c1e9bbb2aec0015f46bb87b79ddd" translate="yes" xml:space="preserve">
          <source>Think about statically typed language, things on &lt;code&gt;prototype&lt;/code&gt; are static and things on &lt;code&gt;this&lt;/code&gt; are instance related.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적으로 유형이 지정된 언어, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 것은 정적이며 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 관한 것은 인스턴스와 관련 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2355c245479715e65d721ee60eaa07117437d333" translate="yes" xml:space="preserve">
          <source>This example, though different, comes closest to the first example in the question.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 예는 다르지만 질문의 첫 번째 예에 가장 가깝습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ca0afa04c7a867ec6cfc7913f8acd8d206551180" translate="yes" xml:space="preserve">
          <source>This is an uncommon use of &lt;em&gt;new&lt;/em&gt; since the only way to reference the constructor is via &lt;em&gt;A.constructor&lt;/em&gt;. It would be much more common to do:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생성자를 참조하는 유일한 방법은 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A.constructor&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;통하는 것이므로 &lt;/font&gt;&lt;/em&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;new를&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 일반적으로 사용하지 않습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수행하는 것이 훨씬 일반적입니다.&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="036187c48acf9dbe69bc45355dde270b1aec2e23" translate="yes" xml:space="preserve">
          <source>This is really just another form of the prototypal pattern in simplified form and more familiar to do those who program in Java for example, since it uses the &lt;code&gt;new&lt;/code&gt; constructor.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 실제로 단순한 형태의 프로토 타입 패턴의 또 다른 형식이며 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 생성자를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하기 때문에 Java로 프로그래밍하는 사람들에게 익숙합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5029be1875db619a586bd4a66a39dc6782bd2ffa" translate="yes" xml:space="preserve">
          <source>This is what allows us to apply concepts like superclass or subclass in JavaScript.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이를 통해 JavaScript에서 수퍼 클래스 또는 서브 클래스와 같은 개념을 적용 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e91f2df575afa57c8758a2f705311ee0e328b72" translate="yes" xml:space="preserve">
          <source>To check that &lt;em&gt;A&lt;/em&gt; has an &lt;em&gt;x&lt;/em&gt; property:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;x&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있는지 확인하려면&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="040a03f3b5302125518bef7090315aeab9a7bb1b" translate="yes" xml:space="preserve">
          <source>Use of 'prototype' vs. 'this' in JavaScript</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript에서 'prototype'과 'this'의 사용&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9d00fbb739bf112dec2029fddeb77b8657217f24" translate="yes" xml:space="preserve">
          <source>We said that &lt;code&gt;A.prototype&lt;/code&gt; is nothing more than an empty object (unless we change it to something else before defining &lt;code&gt;a1&lt;/code&gt;). So now basically &lt;code&gt;a1.__proto__&lt;/code&gt; points to the same thing &lt;code&gt;A.prototype&lt;/code&gt; points to, which is that empty object. They both point to the same object which was created when this line happened:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 빈 객체에 지나지 않는다고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;말했다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 정의하기 전에 다른 것으로 변경하지 않는 한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 기본적으로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1.__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가리키는 것과 동일한 것을 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 이는 빈 객체입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;둘 다이 줄이 발생할 때 만들어진 동일한 개체를 가리 킵니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eb13a5422040b1640e4e7a0c5454ebb645c4d9c1" translate="yes" xml:space="preserve">
          <source>We said that on each function definition there's a new property created called &lt;code&gt;prototype&lt;/code&gt; (which you can access it, unlike with the &lt;code&gt;__proto__&lt;/code&gt; property) created? Well, that property is being used now.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리는 각 함수 정의에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;과 달리 액세스 할 수있는) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이라는 새로운 속성이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생성 되었습니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그 속성은 현재 사용되고 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c6dc267ab3b9d3d635dbd0662b24434319206abe" translate="yes" xml:space="preserve">
          <source>What's the difference between</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;차이점은 무엇입니까&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="47d12f46bd7d79018cce2ea06e4664512459a236" translate="yes" xml:space="preserve">
          <source>What's the difference? =&amp;gt; A lot.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;차이점이 뭐야? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;=&amp;gt; 많이.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d2f85f01731ca1bab5a86d8e3aba08a7efa46e93" translate="yes" xml:space="preserve">
          <source>When you create a new function in JavaScript (which is an object as well, remember?), the moment it is defined, JavaScript automatically creates a new property on that function called &lt;code&gt;prototype&lt;/code&gt;. Try it:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript에서 새 함수 (객체이기도 함을 기억 하는가?)를 작성하면 함수가 정의되는 순간 JavaScript는 해당 함수에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이라는 새 특성을 자동으로 작성합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;시도 해봐:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b6473c77919835536c99c5a79f1980fb08ea7f56" translate="yes" xml:space="preserve">
          <source>With this approach we eliminate the part from step 3 where functions are duplicated on each new object creation. Instead of &lt;code&gt;a1&lt;/code&gt; and &lt;code&gt;a2&lt;/code&gt; having a separate &lt;code&gt;hey&lt;/code&gt; property, now NONE of them has it. Which, I guess, you figured out yourself by now. That's the nice thing...if you understand &lt;code&gt;__proto__&lt;/code&gt; and &lt;code&gt;Function.prototype&lt;/code&gt;, questions like these will be pretty obvious.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 방법을 사용하면 3 단계에서 각각의 새 객체 생성시 함수가 복제되는 부분을 제거합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대신에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 별도의 가진 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;hey&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성을, 지금 그들 중 누구도 그것을이 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 생각 엔 너는 지금 너 자신을 알아 냈어 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 이해하면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이와 같은 질문이 분명합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed7ea4136777240f51ec615c9b731cd154f02835" translate="yes" xml:space="preserve">
          <source>You may also wonder, why does JavaScript creates a property called &lt;code&gt;prototype&lt;/code&gt; for a function when you define the function? Because it tries to fool you, yes &lt;strong&gt;fool you&lt;/strong&gt; that it works like class-based languages.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수를 정의 할 때 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript가 왜 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수에 대한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이라는 속성을 작성하는지 궁금 할 수도 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 당신을 속이려고하기 때문에, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 기반 언어처럼 작동한다는 것을 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;속이십시오&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cdcbed7468dabda887ee2ad3bed61463436ef43a" translate="yes" xml:space="preserve">
          <source>You may wonder: Why does JavaScript has &lt;code&gt;__proto__&lt;/code&gt; property created on every single object? Well, one word: &lt;strong&gt;delegation&lt;/strong&gt;. When you call a property on an object and the object doesn't have it, then JavaScript looks for the object referenced by &lt;code&gt;__proto__&lt;/code&gt; to see if it maybe has it. If it doesn't have it, then it looks at that object's &lt;code&gt;__proto__&lt;/code&gt; property and so on...until the chain ends. Thus the name &lt;strong&gt;prototype chain&lt;/strong&gt;. Of course, if &lt;code&gt;__proto__&lt;/code&gt; doesn't point to an object and instead points to &lt;code&gt;null&lt;/code&gt;, well tough luck, JavaScript realizes that and will return you &lt;code&gt;undefined&lt;/code&gt; for the property.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;궁금 할 수도 있습니다. JavaScript가 왜 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 단일 객체에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성을 생성합니까? 한마디 : &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위임&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . 객체에서 속성을 호출 할 때 객체에 속성이없는 경우 JavaScript는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 참조 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 객체를 찾아 해당 객체 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가 있는지 확인합니다. 그것이 없다면, 그 객체의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성 등을보고 체인이 끝날 때까지 ... 따라서 이름 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로토 타입 체인&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. 물론, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 객체를 가리 키지 않고 대신 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 행운을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가리키는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경우 JavaScript는이를 인식 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하고 속성에 대해 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 것을 반환합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="228a84adb74c5fcc8902823a8da25305d1e558d9" translate="yes" xml:space="preserve">
          <source>You showed two patterns in your question. I will try to explain two more and try to explain the differences if relevant. Feel free to edit/extend.
In all examples it is about a car object that has a location and can move.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 당신의 질문에 두 가지 패턴을 보여주었습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 두 가지를 더 설명하고 관련이 있다면 차이점을 설명하려고 노력할 것이다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자유롭게 편집 / 확장하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 예에서 위치가 있고 움직일 수있는 자동차 객체에 관한 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="abed52bbf756ca559bba9e9c61017226edbec61c" translate="yes" xml:space="preserve">
          <source>a) A function is an object in JavaScript. EVERY object in JavaScript gets an internal property (meaning, you can't access it like other properties, except maybe in browsers like Chrome), often referred to as &lt;code&gt;__proto__&lt;/code&gt; (you can actually type &lt;code&gt;anyObject.__proto__&lt;/code&gt; in Chrome to see what it references. This is just that, a property, nothing more. A property in JavaScript = a variable inside an object, nothing more. What do variables do? They point to things.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;a) 함수는 JavaScript의 객체입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자바 스크립트의 모든 객체는 종종 언급, (, 당신은 크롬과 같은 브라우저에서 어쩌면 제외시켰다 다른 속성처럼 액세스 할 수 없습니다 의미) 내부 속성을 가져옵니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (실제로 입력 할 수 있습니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;anyObject.__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 무엇 참조를 볼 크롬에. 이것은 단지 속성 일뿐 아니라 JavaScript의 속성 = 객체 내부의 변수 일뿐 더 이상은 아닙니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="f7023942206621acc838b9f351c2bfc78689b792" translate="yes" xml:space="preserve">
          <source>something very different occurs.  In the first line, variable &lt;code&gt;A&lt;/code&gt; is assigned a reference to a function.  In JavaScript, all functions objects have a &lt;em&gt;prototype&lt;/em&gt; property by default so there is no separate code to create an &lt;em&gt;A.prototype&lt;/em&gt; object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;매우 다른 일이 일어납니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째 행에서 변수 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에는 함수에 대한 참조가 할당됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript에서 모든 함수 객체에는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본적으로 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로토 타입&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성이 있으므로 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A.prototype&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 만드는 별도의 코드가 없습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d1add0059bf8e9b747aba843af8d9a92c234489d" translate="yes" xml:space="preserve">
          <source>versus:</source>
          <target state="translated">versus:</target>
        </trans-unit>
        <trans-unit id="b4993da023bb6cf4528cc249a4a1168cbc4c7731" translate="yes" xml:space="preserve">
          <source>vs.</source>
          <target state="translated">vs.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
