<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/388242">
    <body>
      <group id="388242">
        <trans-unit id="f9d918d89317e4567921b7cabc4657524230f17d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.cppreference.com/&quot;&gt;&lt;em&gt;cppreference.com (C++03/11/14/17/&amp;hellip;)&lt;/em&gt;&lt;/a&gt; (initiated by Nate Kohl) is a wiki that summarizes the basic core-language features and has extensive documentation of the C++ standard library. The documentation is very precise but is easier to read than the official standard document and provides better navigation due to its wiki nature. The project documents all versions of the C++ standard and the site allows filtering the display for a specific version. The project was &lt;a href=&quot;https://isocpp.org/blog/2015/07/cppcon-2014-cppreference.com-documenting-cpp-one-edit-at-a-time-nate-kohl&quot;&gt;presented by Nate Kohl at CppCon'14&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://en.cppreference.com/&quot;&gt;&lt;em&gt;cppreference.com（C ++ 03/11/14/17 /&amp;hellip;）&lt;/em&gt;&lt;/a&gt; （Nate Kohlによって開始）は、基本的なコア言語機能をまとめたwikiであり、C ++標準ライブラリの詳細なドキュメントがあります。 ドキュメントは非常に正確ですが、公式の標準ドキュメントよりも読みやすく、Wikiの性質により、ナビゲーションが向上しています。 プロジェクトはC ++標準のすべてのバージョンを文書化しており、サイトでは特定のバージョンの表示をフィルタリングできます。 プロジェクトは&lt;a href=&quot;https://isocpp.org/blog/2015/07/cppcon-2014-cppreference.com-documenting-cpp-one-edit-at-a-time-nate-kohl&quot;&gt;CppCon'14でネイトコールによって提示されました&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f867cd3016ffd99ea34518f168add88660e4c97" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.artima.com/shop/overview_of_the_new_cpp&quot;&gt;&lt;em&gt;Overview of the New C++ (C++11/14) (PDF only)&lt;/em&gt;&lt;/a&gt; (Scott Meyers) (&lt;strong&gt;updated for C++14&lt;/strong&gt;) These are the presentation materials (slides and some lecture notes) of a three-day training course offered by Scott Meyers, who's a highly respected author on C++. Even though the list of items is short, the quality is high.</source>
          <target state="translated">&lt;a href=&quot;http://www.artima.com/shop/overview_of_the_new_cpp&quot;&gt;&lt;em&gt;新しいC ++の概要（C ++ 11/14）（PDFのみ）&lt;/em&gt;&lt;/a&gt; （Scott Meyers）（ &lt;strong&gt;C ++ 14向けに更新&lt;/strong&gt; ）これらは、以下が提供する3日間のトレーニングコースのプレゼンテーション資料（スライドといくつかの講義ノート）です。 C ++で非常に尊敬されている作家であるスコットマイヤーズ。 アイテムのリストは短いですが、品質は高いです。</target>
        </trans-unit>
        <trans-unit id="b5ec74aa1a68b982553e8094cda3748cf0007920" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://leanpub.com/cpp17/&quot;&gt;&lt;em&gt;C++ 17 - The Complete Guide&lt;/em&gt;&lt;/a&gt; (Nicolai M. Josuttis) This book describes all the new features introduced in the C++17 Standard covering everything from the simple ones like 'Inline Variables', 'constexpr if' all the way up to 'Polymorphic Memory Resources' and 'New and Delete with overaligned Data'.</source>
          <target state="translated">&lt;a href=&quot;https://leanpub.com/cpp17/&quot;&gt;&lt;em&gt;C ++ 17-完全ガイド&lt;/em&gt;&lt;/a&gt; （Nicolai M. Josuttis）この本は、C ++ 17標準で導入されたすべての新機能について説明します。「インライン変数」、「constexpr if」から「ポリモーフィック」までのすべてのシンプルな機能をカバーしています。メモリリソース」および「オーバーアライメントされたデータを含む新規および削除」。</target>
        </trans-unit>
        <trans-unit id="b5e04538422f8beb843d44710eb4e2c1345eda75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0139798099&quot;&gt;&lt;em&gt;Thinking in C++&lt;/em&gt;&lt;/a&gt; (Bruce Eckel, 2nd Edition, 2000).  Two volumes; is a tutorial style &lt;em&gt;free&lt;/em&gt; set of intro level books. Downloads: &lt;a href=&quot;https://ia800100.us.archive.org/10/items/TICPP2ndEdVolOne/TICPP-2nd-ed-Vol-one.zip&quot;&gt;vol 1&lt;/a&gt;, &lt;a href=&quot;https://ia800108.us.archive.org/24/items/TICPP2ndEdVolTwo/TICPP-2nd-ed-Vol-two.zip&quot;&gt;vol 2&lt;/a&gt;. Unfortunately they&amp;rsquo;re marred by a number of trivial errors (e.g. maintaining that temporaries are automatically &lt;code&gt;const&lt;/code&gt;), with no official errata list. A partial 3&lt;sup&gt;rd&lt;/sup&gt; party errata list is available at (&lt;a href=&quot;http://www.computersciencelab.com/Eckel.htm&quot;&gt;http://www.computersciencelab.com/Eckel.htm&lt;/a&gt;), but it&amp;rsquo;s apparently not maintained.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0139798099&quot;&gt;&lt;em&gt;C ++で考える&lt;/em&gt;&lt;/a&gt; （Bruce Eckel、第2版、2000）。 2巻。 入門レベルの本のチュートリアル形式の&lt;em&gt;無料&lt;/em&gt;セットです。 ダウンロード： &lt;a href=&quot;https://ia800100.us.archive.org/10/items/TICPP2ndEdVolOne/TICPP-2nd-ed-Vol-one.zip&quot;&gt;巻1&lt;/a&gt; 、 &lt;a href=&quot;https://ia800108.us.archive.org/24/items/TICPP2ndEdVolTwo/TICPP-2nd-ed-Vol-two.zip&quot;&gt;巻2&lt;/a&gt; 。 残念ながら、それらはいくつかの些細なエラー（例えば、一時的なものを自動的に &lt;code&gt;const&lt;/code&gt; に維持すること）によって損なわれ、公式のエラッタリストはありません。 &lt;sup&gt;サード&lt;/sup&gt;パーティの正誤表の一部は（ &lt;a href=&quot;http://www.computersciencelab.com/Eckel.htm&quot;&gt;http://www.computersciencelab.com/Eckel.htm&lt;/a&gt; ）で入手できますが、維持されていないようです。</target>
        </trans-unit>
        <trans-unit id="c20ce9f9efcac9236091048ae44674524cec84c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201183951&quot;&gt;&lt;em&gt;The C++ IO Streams and Locales&lt;/em&gt;&lt;/a&gt; (Angelika Langer and Klaus Kreft)  There's very little to say about this book except that, if you want to know anything about streams and locales, then this is the one place to find definitive answers. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=200&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201183951&quot;&gt;&lt;em&gt;C ++ IOストリームとロケール&lt;/em&gt;&lt;/a&gt; （Angelika LangerとKlaus Kreft）この本について言うことはほとんどありません。ただし、ストリームとロケールについて何か知りたい場合は、ここが決定的な答えを見つけるための1つの場所です。 &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=200&quot;&gt;[レビュー]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00eaeef927722507d7727198777261f474bf62bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201423391&quot;&gt;&lt;em&gt;Ruminations on C++&lt;/em&gt;&lt;/a&gt; - (Andrew Koenig and Barbara Moo) &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=776&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201423391&quot;&gt;&lt;em&gt;C ++の反芻&lt;/em&gt;&lt;/a&gt; -（Andrew KoenigおよびBarbara Moo） &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=776&quot;&gt;[レビュー]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a9b297b1861ba6e63ab49530562cedc7d09900dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201514591&quot;&gt;&lt;em&gt;The Annotated C++ Reference Manual&lt;/em&gt;&lt;/a&gt; (Bjarne Stroustrup, Margaret A. Ellis) This book is quite outdated in the fact that it explores the 1989 C++ 2.0 version - Templates, exceptions, namespaces and new casts were not yet introduced. Saying that however, this book goes through the entire C++ standard of the time explaining the rationale, the possible implementations, and features of the language. This is not a book to learn programming principles and patterns on C++, but to understand every aspect of the C++ language.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201514591&quot;&gt;&lt;em&gt;注釈付きC ++リファレンスマニュアル&lt;/em&gt;&lt;/a&gt; （Bjarne Stroustrup、Margaret A. Ellis）この本は、1989 C ++ 2.0バージョンを探索しているという点で非常に古く、テンプレート、例外、名前空間、および新しいキャストはまだ導入されていません。 ただし、この本は、その理論的根拠、可能な実装、および言語の機能を説明する当時のC ++標準全体を通過していると言います。 これは、C ++のプログラミングの原則とパターンを学ぶための本ではなく、C ++言語のあらゆる側面を理解するための本です。</target>
        </trans-unit>
        <trans-unit id="6ccf6268415acd377f9f2e70110ceec83387a313" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201533936&quot;&gt;&lt;em&gt;Scientific and Engineering C++: An Introduction to Advanced Techniques and Examples&lt;/em&gt;&lt;/a&gt; (John Barton and Lee Nackman) 
It is a comprehensive and very detailed book that tried to explain and make use of all the features available in C++, in the context of numerical methods. It introduced at the time several new techniques, such as the Curiously Recurring Template Pattern (CRTP, also called Barton-Nackman trick).
It pioneered several techniques such as dimensional analysis and automatic differentiation. 
It came with a lot of compilable and useful code, ranging from an expression parser to a Lapack wrapper. 
The code is still available here: &lt;a href=&quot;http://www.informit.com/store/scientific-and-engineering-c-plus-plus-an-introduction-9780201533934&quot;&gt;http://www.informit.com/store/scientific-and-engineering-c-plus-plus-an-introduction-9780201533934&lt;/a&gt;.
Unfortunately, the books have become somewhat outdated in the style and C++ features, however, it was an incredible tour-de-force at the time (1994, pre-STL).
The chapters on dynamics inheritance are a bit complicated to understand and not very useful.
An updated version of this classic book that includes move semantics and the lessons learned from the STL would be very nice.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201533936&quot;&gt;&lt;em&gt;Scientific and Engineering C ++：An Introduction to Advanced Techniques and Examples&lt;/em&gt;&lt;/a&gt; （John Barton and Lee Nackman）これは、数値メソッドのコンテキストで、C ++で利用可能なすべての機能を説明して利用しようとした、包括的で非常に詳細な本です。 それは、奇妙に繰り返されるテンプレートパターン（CRTP、Barton-Nackmanトリックとも呼ばれます）など、いくつかの新しい手法を当時導入しました。 次元分析や自動微分などのいくつかの技術を開拓しました。 これには、式パーサーからラパックラッパーに至るまで、多くのコンパイル可能で便利なコードが付属しています。 コードは引き続き&lt;a href=&quot;http://www.informit.com/store/scientific-and-engineering-c-plus-plus-an-introduction-9780201533934&quot;&gt;http://www.informit.com/store/scientific-and-engineering-c-plus-plus-an-introduction-9780201533934から&lt;/a&gt;入手できます 。 残念ながら、本はスタイルとC ++機能が多少古くなっていますが、当時（1994年、STL以前）は信じられないほど強力なツアーでした。 ダイナミクス継承に関する章は、理解するのが少し複雑であまり役に立ちません。 移動のセマンティクスとSTLから学んだ教訓を含む、この古典的な本の更新版は非常に素晴らしいでしょう。</target>
        </trans-unit>
        <trans-unit id="809901ca9d8ef4d4d2841999a5dd30e6c93bafbe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201543303&quot;&gt;&lt;em&gt;The Design and Evolution of C++&lt;/em&gt;&lt;/a&gt; (Bjarne Stroustrup)  If you want to know &lt;em&gt;why&lt;/em&gt; the language is the way it is, this book is where you find answers. This covers everything &lt;em&gt;before the standardization&lt;/em&gt; of C++.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201543303&quot;&gt;&lt;em&gt;C ++の設計と進化&lt;/em&gt;&lt;/a&gt; （Bjarne Stroustrup）言語が現状のままである&lt;em&gt;理由&lt;/em&gt;を知りたい場合は、この本で答えを見つけることができます。 これは、C ++ &lt;em&gt;の標準化前の&lt;/em&gt;すべてをカバーしています。</target>
        </trans-unit>
        <trans-unit id="4d4ea160d9325161dd4cada6a6213a0dfddfc7e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201548550&quot;&gt;&lt;em&gt;Advanced C++ Programming Styles and Idioms&lt;/em&gt;&lt;/a&gt; (James Coplien)  A predecessor of the pattern movement, it describes many C++-specific &amp;ldquo;idioms&amp;rdquo;. It's certainly a very good book and might still be worth a read if you can spare the time, but quite old and not up-to-date with current C++.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201548550&quot;&gt;&lt;em&gt;高度なC ++プログラミングスタイルとイディオム&lt;/em&gt;&lt;/a&gt; （James Coplien）パターンムーブメントの前身であり、多くのC ++固有の「イディオム」について説明しています。 これは確かに非常に優れた本であり、時間を節約できれば一読に値するかもしれませんが、かなり古く、現在のC ++では最新ではありません。</target>
        </trans-unit>
        <trans-unit id="53f01f20e6fa1ca6317e73225408b3bf74d639f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201615622&quot;&gt;&lt;em&gt;Exceptional C++&lt;/em&gt;&lt;/a&gt; (Herb Sutter)  Presented as a set of puzzles, this has one of the best and thorough discussions of the proper resource management and exception safety in C++ through Resource Acquisition is Initialization (RAII) in addition to in-depth coverage of a variety of other topics including the pimpl idiom, name lookup, good class design, and the C++ memory model. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=209&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201615622&quot;&gt;&lt;em&gt;Exceptional C ++&lt;/em&gt;&lt;/a&gt; （Herb Sutter）パズルのセットとして提示され、これは、リソースの取得によるC ++での適切なリソース管理と例外の安全性に関する最良かつ徹底的な議論の1つであり、さまざまなものの詳細なカバレッジに加えて、初期化（RAII）があります。 pimplイディオム、名前のルックアップ、適切なクラス設計、C ++メモリモデルなど、他のトピックの一覧です。 &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=209&quot;&gt;[レビュー]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="523a09c730657d6627588ca169800b4c58f20dac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201633620&quot;&gt;&lt;em&gt;Large Scale C++ Software Design&lt;/em&gt;&lt;/a&gt; (John Lakos)  Lakos explains techniques to manage very big C++ software projects. Certainly, a good read, if it only was up to date. It was written long before C++ 98 and misses on many features (e.g. namespaces) important for large-scale projects. If you need to work in a big C++ software project, you might want to read it, although you need to take more than a grain of salt with it. The first volume of a new edition is &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201717069&quot;&gt;released in 2019&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201633620&quot;&gt;&lt;em&gt;大規模なC ++ソフトウェア設計&lt;/em&gt;&lt;/a&gt; （John Lakos）Lakosは、非常に大きなC ++ソフトウェアプロジェクトを管理する手法について説明しています。 確かに、それが最新の情報だったとしても、良い読み物です。 C ++ 98よりもずっと前に書かれており、大規模なプロジェクトに重要な多くの機能（名前空間など）がありません。 大規模なC ++ソフトウェアプロジェクトで作業する必要がある場合は、それを読みたいと思うかもしれませんが、それを一気に理解する必要はありません。 新版第1巻は&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201717069&quot;&gt;2019年に発売&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="0f912ca087659cbbf44b90e067c4f0759022b75e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/020163371X&quot;&gt;&lt;em&gt;More Effective C++&lt;/em&gt;&lt;/a&gt; (Scott Meyers) Even more rules of thumb than &lt;em&gt;Effective C++&lt;/em&gt;. Not as important as the ones in the first book, but still good to know.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/020163371X&quot;&gt;&lt;em&gt;より効果的なC ++&lt;/em&gt;&lt;/a&gt; （Scott Meyers） &lt;em&gt;効果的なC ++&lt;/em&gt;よりも&lt;em&gt;大まかな&lt;/em&gt;経験則。 最初の本ほど重要ではありませんが、知っておくと役に立ちます。</target>
        </trans-unit>
        <trans-unit id="d26a8f1b4fca58a7bc5c5dad7c92b89ac484f8b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/020170353X&quot;&gt;&lt;em&gt;Accelerated C++&lt;/em&gt;&lt;/a&gt; (Andrew Koenig and Barbara Moo, 1st Edition - August 24, 2000)  This basically covers the same ground as the &lt;em&gt;C++ Primer&lt;/em&gt;, but does so on a fourth of its space. This is largely because it does not attempt to be an introduction to &lt;em&gt;programming&lt;/em&gt;, but an introduction to &lt;em&gt;C++&lt;/em&gt; for people who've previously programmed in some other language. It has a steeper learning curve, but, for those who can cope with this, it is a very compact introduction to the language. (Historically, it broke new ground by being the first beginner's book to use a modern approach to teaching the language.) Despite this, the C++
it teaches is purely C++98. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1185&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/020170353X&quot;&gt;&lt;em&gt;高速化されたC ++&lt;/em&gt;&lt;/a&gt; （Andrew KoenigとBarbara Moo、第1版-2000年8月24日）これは基本的に&lt;em&gt;C ++プライマー&lt;/em&gt;と同じ点をカバーしますが、その4分の1で行います。 これは主に、 &lt;em&gt;プログラミングの&lt;/em&gt;紹介ではなく、以前に他の言語でプログラミングしたことがある人のための&lt;em&gt;C ++の&lt;/em&gt;紹介を目的としているためです。 学習曲線は急になりますが、これに対処できる人にとっては、非常にコンパクトな言語の紹介です。 （歴史的に、それは言語を教えるための現代的なアプローチを使用する最初の初心者向けの本であることによって新境地を切り開きました。）これにもかかわらず、それが教えるC ++は純粋にC ++ 98です。 &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1185&quot;&gt;[レビュー]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff3fb41a90c5d01bebd659d9bd295c8e020c99b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201704315&quot;&gt;&lt;em&gt;Modern C++ Design&lt;/em&gt;&lt;/a&gt; (Andrei Alexandrescu)  A groundbreaking book on advanced generic programming techniques.  Introduces policy-based design, type lists, and fundamental generic programming idioms then explains how many useful design patterns (including small object allocators, functors, factories, visitors, and multi-methods) can be implemented efficiently, modularly, and cleanly using generic programming. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=979&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201704315&quot;&gt;&lt;em&gt;Modern C ++ Design&lt;/em&gt;&lt;/a&gt; （Andrei Alexandrescu）高度な汎用プログラミング手法に関する画期的な本。 ポリシーベースのデザイン、タイプリスト、および基本的な一般的なプログラミングイディオムを紹介し、一般的なプログラミングを使用して効率的、モジュール化、およびクリーンに実装できる便利なデザインパターン（小さなオブジェクトアロケーター、ファンクター、ファクトリー、ビジター、マルチメソッドを含む）の数を説明します。 。 &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=979&quot;&gt;[レビュー]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4fd7152c6fab15b84d2e16ab604c91e0f1123d30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/020170434X&quot;&gt;&lt;em&gt;More Exceptional C++&lt;/em&gt;&lt;/a&gt; (Herb Sutter)  Covers additional exception safety topics not covered in &lt;em&gt;Exceptional C++&lt;/em&gt;, in addition to discussion of effective object-oriented programming in C++ and correct use of the STL. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=784&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/020170434X&quot;&gt;&lt;em&gt;More Exceptional C ++&lt;/em&gt;&lt;/a&gt; （Herb Sutter） &lt;em&gt;C ++&lt;/em&gt;での効果的なオブジェクト指向プログラミングとSTLの正しい使用法の説明に加えて、 &lt;em&gt;Exceptional C ++&lt;/em&gt;でカバーされていない追加の例外安全トピックをカバーし&lt;em&gt;ます&lt;/em&gt; 。 &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=784&quot;&gt;[レビュー]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aecc92d12d9d309965d37294bbbf91c0cc27a27f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201734842&quot;&gt;&lt;em&gt;C++ Templates: The Complete Guide&lt;/em&gt;&lt;/a&gt; (David Vandevoorde and Nicolai M. Josuttis) This is &lt;em&gt;the&lt;/em&gt; book about templates as they existed before C++11.  It covers everything from the very basics to some of the most advanced template metaprogramming and explains every detail of how templates work (both conceptually and at how they are implemented) and discusses many common pitfalls.  Has excellent summaries of the One Definition Rule (ODR) and overload resolution in the appendices. A &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321714121&quot;&gt;second edition&lt;/a&gt; covering C++11, C++14 and C++17 has been already published. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=506&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201734842&quot;&gt;&lt;em&gt;C ++テンプレート：完全ガイド&lt;/em&gt;&lt;/a&gt; （David VandevoordeおよびNicolai M. Josuttis）これは&lt;em&gt;、&lt;/em&gt; C ++ 11より前に存在していたテンプレートに関する本です。 非常に基本的なものから最も高度なテンプレートメタプログラミングまですべてをカバーし、テンプレートの動作の詳細（概念的および実装方法の両方）を説明し、多くの一般的な落とし穴について説明します。 付録には、One Definition Rule（ODR）とオーバーロード解決の優れた要約があります。 C ++ 11、C ++ 14、C ++ 17をカバーする&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321714121&quot;&gt;第2版&lt;/a&gt;はすでに公開されています。 &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=506&quot;&gt;[レビュー]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3ad765446fca1244cf5ddfda64c97b4f86524dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201749629&quot;&gt;&lt;em&gt;Effective STL&lt;/em&gt;&lt;/a&gt; (Scott Meyers)  This aims to do the same to the part of the standard library coming from the STL what &lt;em&gt;Effective C++&lt;/em&gt; did to the language as a whole: It presents rules of thumb along with their rationale. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=67&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201749629&quot;&gt;&lt;em&gt;効果的なSTL&lt;/em&gt;&lt;/a&gt; （Scott Meyers）これは、STLからの標準ライブラリの一部に対して、 &lt;em&gt;Effective C ++&lt;/em&gt;が言語全体に対して行ったことと同じことを行うことを目的としています。これは、経験則とその根拠を示しています。 &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=67&quot;&gt;[レビュー]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b796de57a32fff0863980a8d036a1cc9f5ba153" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201760428&quot;&gt;&lt;em&gt;Exceptional C++ Style&lt;/em&gt;&lt;/a&gt; (Herb Sutter)  Discusses generic programming, optimization, and resource management; this book also has an excellent exposition of how to write modular code in C++ by using non-member functions and the single responsibility principle. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=107&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201760428&quot;&gt;&lt;em&gt;例外的なC ++スタイル&lt;/em&gt;&lt;/a&gt; （Herb Sutter）一般的なプログラミング、最適化、およびリソース管理について説明します。 この本には、非メンバー関数と単一責任の原則を使用して、C ++でモジュラーコードを記述する方法についての優れた解説もあります。 &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=107&quot;&gt;[レビュー]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="173d19bad3dd7da8b2950b095396ce1ac6190fea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201834545&quot;&gt;&lt;em&gt;Inside the C++ Object Model&lt;/em&gt;&lt;/a&gt; (Stanley Lippman)  If you want to know how virtual member functions are commonly implemented and how base objects are commonly laid out in memory in a multi-inheritance scenario, and how all this affects performance, this is where you will find thorough discussions of such topics.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201834545&quot;&gt;&lt;em&gt;C ++オブジェクトモデル&lt;/em&gt;&lt;/a&gt; （Stanley Lippman）の&lt;em&gt;内部&lt;/em&gt;仮想メンバー関数が一般にどのように実装されているか、および基本オブジェクトが一般に複数継承シナリオでメモリ内にどのように配置されているか、およびこれがすべてパフォーマンスにどのように影響するかを知りたい場合は、ここでそのようなトピックの徹底的な議論を見つけてください。</target>
        </trans-unit>
        <trans-unit id="e4fd3ad4d5cd5aa7b7f348a72cc94f3d3cf4d194" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321113586&quot;&gt;&lt;em&gt;C++ Coding Standards&lt;/em&gt;&lt;/a&gt; (Herb Sutter and Andrei Alexandrescu) &amp;ldquo;Coding standards&amp;rdquo; here doesn't mean &amp;ldquo;how many spaces should I indent my code?&amp;rdquo;  This book contains 101 best practices, idioms, and common pitfalls that can help you to write correct, understandable, and efficient C++ code. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1439&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321113586&quot;&gt;&lt;em&gt;C ++コーディング標準&lt;/em&gt;&lt;/a&gt; （Herb SutterおよびAndrei Alexandrescu）ここでの「コーディング標準」は、「コードをインデントする必要があるスペースの数」を意味するものではありません。 この本には、101個のベストプラクティス、イディオム、および一般的な落とし穴が含まれており、正しく、理解しやすく、効率的なC ++コードの記述に役立ちます。 &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1439&quot;&gt;[レビュー]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b4287f65d0b57579f8434f72cdf1ce3a5aba6664" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321227255&quot;&gt;&lt;em&gt;C++ Template Metaprogramming&lt;/em&gt;&lt;/a&gt; (David Abrahams and Aleksey Gurtovoy)</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321227255&quot;&gt;&lt;em&gt;C ++テンプレートメタプログラミング&lt;/em&gt;&lt;/a&gt; （David AbrahamsおよびAleksey Gurtovoy）</target>
        </trans-unit>
        <trans-unit id="2230af863f13bba81183ad8f2f61b4af7dfdb549" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321334876&quot;&gt;&lt;em&gt;Effective C++&lt;/em&gt;&lt;/a&gt; (Scott Meyers, 3rd Edition - May 22, 2005)  This was written with the aim of being the best second book C++ programmers should read, and it succeeded. Earlier editions were aimed at programmers coming from C, the third edition changes this and targets programmers coming from languages like Java. It presents ~50 easy-to-remember rules of thumb along with their rationale in a very accessible (and enjoyable) style. For C++11 and C++14 the examples and a few issues are outdated and Effective Modern C++ should be preferred. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=700&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321334876&quot;&gt;&lt;em&gt;効果的なC ++&lt;/em&gt;&lt;/a&gt; （Scott Meyers、第3版-2005年5月22日）これは、C ++プログラマーが読むべき最高の2冊目の本になることを目的として書かれ、成功しました。 以前のエディションはCのプログラマを対象としており、第3版はこれを変更し、Javaなどの言語のプログラマを対象としています。 それは非常にアクセスしやすい（そして楽しい）スタイルでその理論的根拠とともに〜50の覚えやすい経験則を提示します。 C ++ 11およびC ++ 14の場合、例といくつかの問題は古くなっているため、Effective Modern C ++をお勧めします。 &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=700&quot;&gt;[レビュー]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="697a266ccc25bae4c5d622426ecc19cee0f5c6a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321623215&quot;&gt;&lt;em&gt;C++ Standard Library Tutorial and Reference&lt;/em&gt;&lt;/a&gt; (Nicolai Josuttis) (&lt;strong&gt;updated for C++11&lt;/strong&gt;) &lt;em&gt;The&lt;/em&gt; introduction and reference for the C++ Standard Library. The second edition (released on April 9, 2012) covers C++11. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1849&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321623215&quot;&gt;&lt;em&gt;C ++標準ライブラリのチュートリアルとリファレンス&lt;/em&gt;&lt;/a&gt; （Nicolai Josuttis）（ &lt;strong&gt;C ++ 11用に更新&lt;/strong&gt; ）C ++標準ライブラリ&lt;em&gt;の&lt;/em&gt;紹介とリファレンス。 第2版​​（2012年4月9日にリリース）はC ++ 11をカバーしています。 &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1849&quot;&gt;[レビュー]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1bc74438394b9ac362f7c5065b644f554d95f5fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321714113&quot;&gt;&lt;em&gt;C++ Primer&lt;/em&gt;&lt;/a&gt; * (Stanley Lippman, Jos&amp;eacute;e Lajoie, and Barbara E. Moo)  (&lt;strong&gt;updated for C++11&lt;/strong&gt;) Coming at 1k pages, this is a very thorough introduction into C++ that covers just about everything in the language in a very accessible format and in great detail. The fifth edition (released August 16, 2012) covers C++11. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1848&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321714113&quot;&gt;&lt;em&gt;C ++ Primer&lt;/em&gt;&lt;/a&gt; *（Stanley Lippman、Jos&amp;eacute;eLajoie、およびBarbara E. Moo）（ &lt;strong&gt;C ++ 11用に更新&lt;/strong&gt; ）1kページで提供される、これは非常にアクセスしやすい形式で言語のほぼすべてをカバーするC ++の非常に徹底的な紹介ですそして非常に詳細に。 第5版（2012年8月16日リリース）はC ++ 11をカバーしています。 &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1848&quot;&gt;[レビュー]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="869dfc1654977728308026b7b2e1e3e106d213f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321958322&quot;&gt;&lt;em&gt;The C++ Programming Language&lt;/em&gt;&lt;/a&gt; (Bjarne Stroustrup) (&lt;strong&gt;updated for C++11&lt;/strong&gt;) The classic introduction to C++ by its creator. Written to parallel the classic K&amp;amp;R, this indeed reads very much like it and covers just about everything from the core language to the standard library, to programming paradigms to the language's philosophy. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1853&quot;&gt;[Review]&lt;/a&gt; Note: All releases of the C++ standard are tracked in this question: &lt;a href=&quot;https://stackoverflow.com/a/4653479/14065&quot;&gt;Where do I find the current C++ standard&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321958322&quot;&gt;&lt;em&gt;C ++プログラミング言語&lt;/em&gt;&lt;/a&gt; （Bjarne Stroustrup）（ &lt;strong&gt;C ++ 11用に更新&lt;/strong&gt; ）作成者によるC ++の古典的な紹介。 古典的なK＆Rに対応するように書かれており、これは実際に非常によく読んでおり、コア言語から標準ライブラリ、プログラミングパラダイム、言語の哲学まで、ほぼすべてをカバーしています。 &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1853&quot;&gt;[レビュー]&lt;/a&gt;注：この質問では、C ++標準のすべてのリリースが追跡されて&lt;a href=&quot;https://stackoverflow.com/a/4653479/14065&quot;&gt;います&lt;/a&gt; 。 現在のC ++標準はどこにありますか？</target>
        </trans-unit>
        <trans-unit id="da0159f95ed75e7537af87baced3febe60af7587" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321992784&quot;&gt;&lt;em&gt;Programming: Principles and Practice Using C++&lt;/em&gt;&lt;/a&gt; (Bjarne Stroustrup, 2nd Edition - May 25, 2014) (&lt;strong&gt;updated for C++11/C++14&lt;/strong&gt;) An introduction to programming using C++ by the creator of the language. A good read, that assumes no previous programming experience, but is not only for beginners.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321992784&quot;&gt;&lt;em&gt;プログラミング：C ++を使用した原則と実践&lt;/em&gt;&lt;/a&gt; （Bjarne Stroustrup、第2版-2014年5月25日）（ &lt;strong&gt;C ++ 11 / C ++ 14用に更新&lt;/strong&gt; ）言語の作成者によるC ++を使用したプログラミングの紹介。 これまでのプログラミング経験がないことを前提としていますが、初心者向けではありません。</target>
        </trans-unit>
        <trans-unit id="c9020f8cd0be475fedb4de9123508cc326364359" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1460966163&quot;&gt;&lt;em&gt;Advanced C++ Metaprogramming&lt;/em&gt;&lt;/a&gt; (Davide Di Gennaro) A pre-C++11 manual of TMP techniques, focused more on practice than theory.  There are a ton of snippets in this book, some of which are made obsolete by type traits, but the techniques, are nonetheless useful to know.  If you can put up with the quirky formatting/editing, it is easier to read than Alexandrescu, and arguably, more rewarding.  For more experienced developers, there is a good chance that you may pick up something about a dark corner of C++ (a quirk) that usually only comes about through extensive experience.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1460966163&quot;&gt;&lt;em&gt;高度なC ++メタプログラミング&lt;/em&gt;&lt;/a&gt; （Davide Di Gennaro）理論よりも実践に重点を置いた、TMPテクニックのC ++ 11以前のマニュアル。 この本にはたくさんのスニペットがあり、そのうちのいくつかはタイプの特性によって時代遅れになっていますが、それでもテクニックは知っておくと役に立ちます。 風変わりなフォーマット/編集に我慢できれば、Alexandrescuよりも読みやすく、間違いなくもっとやりがいがあります。 経験豊富な開発者にとっては、C ++の暗いところ（奇妙なところ）について何かを手に入れる可能性が高いです。</target>
        </trans-unit>
        <trans-unit id="491d29c723a7d473841134c6eb63abd620ab5196" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1491903996&quot;&gt;&lt;em&gt;Effective Modern C++&lt;/em&gt;&lt;/a&gt; (Scott Meyers) This is basically the new version of &lt;em&gt;Effective C++&lt;/em&gt;, aimed at C++ programmers making the transition from C++03 to C++11 and C++14.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1491903996&quot;&gt;&lt;em&gt;Effective Modern C ++&lt;/em&gt;&lt;/a&gt; （Scott Meyers）これは基本的に、C ++プログラマーがC ++ 03からC ++ 11およびC ++ 14に移行することを目的とした、 &lt;em&gt;Effective C ++の&lt;/em&gt;新しいバージョンです。</target>
        </trans-unit>
        <trans-unit id="f8fe1bee78382d5f7dfe425a0e1cadbd3e95e47a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1933988770&quot;&gt;&lt;em&gt;C++ Concurrency In Action&lt;/em&gt;&lt;/a&gt; (Anthony Williams) A book covering C++11 concurrency support including the thread library, the atomics library, the C++ memory model, locks and mutexes, as well as issues of designing and debugging multithreaded applications. A &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1617294691&quot;&gt;second edition&lt;/a&gt; covering C++14 and C++17 has been already published.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1933988770&quot;&gt;&lt;em&gt;C ++ Concurrency In Action&lt;/em&gt;&lt;/a&gt; （Anthony Williams）スレッドライブラリ、アトミックライブラリ、C ++メモリモデル、ロックとミューテックス、およびマルチスレッドアプリケーションの設計とデバッグの問題を含むC ++ 11同時実行サポートをカバーする本。 C ++ 14およびC ++ 17をカバーする&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1617294691&quot;&gt;第2版&lt;/a&gt;はすでに公開されています。</target>
        </trans-unit>
        <trans-unit id="ce7269dd3f09530ebbf954f9bc271955ae3e7389" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/B00F8CWGOS&quot;&gt;&lt;em&gt;A Tour of C++&lt;/em&gt;&lt;/a&gt; (Bjarne Stroustrup) (&lt;strong&gt;&lt;a href=&quot;http://a.co/f7WPDeD&quot;&gt;2nd edition  for C++17&lt;/a&gt;&lt;/strong&gt;) The &amp;ldquo;tour&amp;rdquo; is a quick (about 180 pages and 14 chapters) tutorial overview of all of standard C++ (language and standard library, &lt;strong&gt;and using C++11&lt;/strong&gt;) at a moderately high level for people who already know C++ or at least are experienced programmers. This book is an extended version of the material that constitutes Chapters 2-5 of The C++ Programming Language, 4th edition.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/B00F8CWGOS&quot;&gt;&lt;em&gt;C ++&lt;/em&gt;&lt;/a&gt; （Bjarne Stroustrup） &lt;em&gt;のツアー&lt;/em&gt; （ &lt;strong&gt;&lt;a href=&quot;http://a.co/f7WPDeD&quot;&gt;C ++ 17の第2版&lt;/a&gt;&lt;/strong&gt; ）「ツアー」は、すべての標準C ++（言語と標準ライブラリ、 &lt;strong&gt;およびC ++の使用&lt;/strong&gt; ）のクイック（約180ページと14章）チュートリアルの概要&lt;strong&gt;です11&lt;/strong&gt; ）すでにC ++を知っているか、少なくとも経験豊富なプログラマーである人にとっては中程度のレベル。 この本は、C ++プログラミング言語、第4版の第2〜5章を構成する資料の拡張版です。</target>
        </trans-unit>
        <trans-unit id="6b6697a0c2a1482e966dda3d993d2b7c0dcb00c2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The C++&lt;a href=&quot;https://www.iso.org/standard/50372.html&quot;&gt;11&lt;/a&gt;/&lt;a href=&quot;https://www.iso.org/standard/64029.html&quot;&gt;14&lt;/a&gt;/&lt;a href=&quot;https://www.iso.org/standard/68564.html&quot;&gt;17&lt;/a&gt; Standard (INCITS/ISO/IEC 14882:2011/2014/2017)&lt;/em&gt; This, of course, is the final arbiter of all that is or isn't C++. Be aware, however, that it is intended purely as a reference for &lt;em&gt;experienced&lt;/em&gt; users willing to devote considerable time and effort to its understanding. The C++17 standard is released in electronic form for 198 Swiss Francs.</source>
          <target state="translated">&lt;em&gt;C ++ 11/14/17標準（INCITS / ISO / IEC 14882：2011/2014/2017）&lt;/em&gt;これは、もちろん、C ++であるかC ++でないかのすべての最終的な決定者です。 ただし、これは純粋に&lt;em&gt;経験豊富な&lt;/em&gt;ユーザーがその理解にかなりの時間と労力を費やすことをいとわない人のためのリファレンスとして意図されていることに注意してください。 C ++ 17標準は、198スイスフランの電子形式でリリースされています。</target>
        </trans-unit>
        <trans-unit id="1f996fa05714bb967d1d3dad45b15e3a4578137a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C++11/14/17/&amp;hellip; References:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;C ++ 11/14/17 /&amp;hellip;参照：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="461f31882057ec224f923e0dcf40c2beacb287a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Some information contained within these books may not be up-to-date or no longer considered best practice.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;これらの書籍に含まれる一部の情報は最新ではないか、ベストプラクティスとは見なされなくなっています。</target>
        </trans-unit>
        <trans-unit id="d814fecbb236ff95202084ea95f4b88e4cce5252" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;
* Not to be confused with &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0672326973&quot;&gt;&lt;em&gt;C++ Primer Plus&lt;/em&gt;&lt;/a&gt; (Stephen Prata), with a significantly less favorable &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1744&quot;&gt;review&lt;/a&gt;.
&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;* &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0672326973&quot;&gt;&lt;em&gt;C ++ Primer Plus&lt;/em&gt;&lt;/a&gt; （Stephen Prata）と混同しないでください。&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="fafbbffd1a85d713ba25d35cebf35d94da93577c" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;*Note: FAQs and other resources can be found in the &lt;a href=&quot;https://stackoverflow.com/tags/c%2b%2b/info&quot;&gt;C++ tag info&lt;/a&gt; and under &lt;a href=&quot;/questions/tagged/c%2b%2b-faq&quot;&gt;c++-faq&lt;/a&gt;. &lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;*注意：FAQおよびその他のリソースは、 &lt;a href=&quot;https://stackoverflow.com/tags/c%2b%2b/info&quot;&gt;C ++タグ情報&lt;/a&gt;および&lt;a href=&quot;/questions/tagged/c%2b%2b-faq&quot;&gt;c ++-faqにあります&lt;/a&gt; 。&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="4d064726954a17487f94e931f5b157b733ec22ed" translate="yes" xml:space="preserve">
          <source>Advanced</source>
          <target state="translated">Advanced</target>
        </trans-unit>
        <trans-unit id="60575a6ebba9f780b4312324662169830d12bea1" translate="yes" xml:space="preserve">
          <source>Beginner</source>
          <target state="translated">Beginner</target>
        </trans-unit>
        <trans-unit id="eb8de9ce8757ee3c542141ac80ff3b33dc04edff" translate="yes" xml:space="preserve">
          <source>Best practices</source>
          <target state="translated">ベストプラクティス</target>
        </trans-unit>
        <trans-unit id="071175830fe7092b1a52f8c955bf4b092df97637" translate="yes" xml:space="preserve">
          <source>Classics / Older</source>
          <target state="translated">クラシック 古い</target>
        </trans-unit>
        <trans-unit id="b1cfe72fd27178870354f9f4e07bb82072caea55" translate="yes" xml:space="preserve">
          <source>Intermediate</source>
          <target state="translated">Intermediate</target>
        </trans-unit>
        <trans-unit id="7249db688fcac7e2a2f2bf1b7ad9f55e77e33b97" translate="yes" xml:space="preserve">
          <source>Introductory, no previous programming experience</source>
          <target state="translated">入門、プログラミング経験不問</target>
        </trans-unit>
        <trans-unit id="4c2b843e44fb7dca8e7d3407c76bdd778c47418b" translate="yes" xml:space="preserve">
          <source>Introductory, with previous programming experience</source>
          <target state="translated">入門、プログラミング経験者</target>
        </trans-unit>
        <trans-unit id="af1dcc4aaa25fe83b8a89ba75807edec69e8d514" translate="yes" xml:space="preserve">
          <source>Please edit the accepted answer to provide &lt;strong&gt;quality books&lt;/strong&gt; and an approximate skill level &amp;mdash; &lt;em&gt;preferably&lt;/em&gt;&lt;strong&gt;after&lt;/strong&gt;&lt;em&gt;discussing your addition in &lt;a href=&quot;http://chat.stackoverflow.com/rooms/10/loungec&quot;&gt;the C++ chat room&lt;/a&gt;&lt;/em&gt;. (The regulars might mercilessly undo your work if they disagree with a recommendation.) Add a short blurb/description about each book that you have personally read/benefited from. Feel free to debate quality, headings, etc. Books that meet the criteria will be added to the list.  Books that have reviews by the Association of C and C++ Users (ACCU) have links to the review.</source>
          <target state="translated">承認された回答を編集して、 &lt;strong&gt;高品質の本&lt;/strong&gt;とおおよそのスキルレベルを提供してください（ &lt;em&gt;できれば&lt;/em&gt; &lt;em&gt;&lt;a href=&quot;http://chat.stackoverflow.com/rooms/10/loungec&quot;&gt;C ++チャットルームでの&lt;/a&gt;追加について話し合った&lt;/em&gt; &lt;strong&gt;後）&lt;/strong&gt; 。 （常連は、推薦に同意しない場合、無慈悲にあなたの仕事を取り消す可能性があります。）個人的に読んだ、または利益を得た各本について、短い宣伝文/説明を追加します。 品質、見出しなどを自由に議論してください。基準を満たす書籍がリストに追加されます。 CおよびC ++ユーザー協会（ACCU）によるレビューがある書籍には、レビューへのリンクがあります。</target>
        </trans-unit>
        <trans-unit id="8490ad3770e2562a83a8997c6373d3d062ef269a" translate="yes" xml:space="preserve">
          <source>Reference Style - All Levels</source>
          <target state="translated">リファレンススタイル-全レベル</target>
        </trans-unit>
        <trans-unit id="87501ec8f9c14578de24897ca30d9f6d23a240db" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md&quot;&gt;&lt;em&gt;C++ Core Guidelines (C++11/14/17/&amp;hellip;)&lt;/em&gt;&lt;/a&gt; (edited by Bjarne Stroustrup and Herb Sutter) is an evolving online document consisting of a set of guidelines for using modern C++ well. The guidelines are focused on relatively higher-level issues, such as interfaces, resource management, memory management and concurrency affecting application architecture and library design. The project was &lt;a href=&quot;https://isocpp.org/blog/2015/09/bjarne-stroustrup-announces-cpp-core-guidelines&quot;&gt;announced at CppCon'15 by Bjarne Stroustrup and others&lt;/a&gt; and welcomes contributions from the community. Most guidelines are supplemented with a rationale and examples as well as discussions of possible tool support. Many rules are designed specifically to be automatically checkable by static analysis tools.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md&quot;&gt;&lt;em&gt;C ++コアガイドライン（C ++&lt;/em&gt;&lt;/a&gt; 11/14/17 &lt;em&gt;/&amp;hellip;）&lt;/em&gt; （Bjarne StroustrupおよびHerb Sutterにより編集）は、最新のC ++を適切に使用するための一連のガイドラインで構成される進化するオンラインドキュメントです。 ガイドラインは、インターフェース、リソース管理、メモリ管理、およびアプリケーションアーキテクチャとライブラリ設計に影響を与える同時実行性など、比較的上位の問題に焦点を当てています。 このプロジェクトは&lt;a href=&quot;https://isocpp.org/blog/2015/09/bjarne-stroustrup-announces-cpp-core-guidelines&quot;&gt;、Bjarne Stroustrup氏などによってCppCon'15&lt;/a&gt;で発表され 、コミュニティからの貢献を歓迎しています。 ほとんどのガイドラインには、根拠と例、および可能なツールサポートの説明が補足されています。 多くのルールは、静的分析ツールで自動的にチェックできるように特別に設計されています。</target>
        </trans-unit>
        <trans-unit id="8673b09ab00c20f74df61950867054395adce51f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://isocpp.org/faq&quot;&gt;&lt;em&gt;C++ Super-FAQ&lt;/em&gt;&lt;/a&gt; (Marshall Cline, Bjarne Stroustrup and others) is an effort by the Standard C++ Foundation to unify the C++ FAQs previously maintained individually by Marshall Cline and Bjarne Stroustrup and also incorporating new contributions. The items mostly address issues at an intermediate level and are often written with a humorous tone. Not all items might be fully up to date with the latest edition of the C++ standard yet.</source>
          <target state="translated">&lt;a href=&quot;https://isocpp.org/faq&quot;&gt;&lt;em&gt;C ++ Super-FAQ&lt;/em&gt;&lt;/a&gt; （Marshall Cline、Bjarne Stroustrupなど）は、Standard C ++ Foundationによる、以前にMarshall ClineおよびBjarne Stroustrupによって個別に維持されていたC ++ FAQを統合し、新しい貢献を組み込む取り組みです。 アイテムは主に中級レベルの問題に対処し、ユーモラスな口調で書かれることがよくあります。 すべてのアイテムがC ++標準の最新版で完全に最新であるとは限りません。</target>
        </trans-unit>
        <trans-unit id="4de753951e85340f9c4af73faeb307883e1b71fc" translate="yes" xml:space="preserve">
          <source>The C++17 standard is available, but seemingly not in an economical form &amp;ndash; &lt;a href=&quot;https://www.iso.org/standard/68564.html&quot;&gt;directly from the ISO&lt;/a&gt; it costs 198 Swiss Francs (about $200 US). For most people, the &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/n4659.pdf&quot;&gt;final draft before standardization&lt;/a&gt; is more than adequate (and free). Many will prefer an &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/n4778.pdf&quot;&gt;even newer draft&lt;/a&gt;, documenting new features that are likely to be included in C++20.</source>
          <target state="translated">C ++ 17標準は利用できますが、経済的な形ではないようです&lt;a href=&quot;https://www.iso.org/standard/68564.html&quot;&gt;。ISOから直接、&lt;/a&gt; 198スイスフラン（約200米ドル）かかります。 ほとんどの人にとって、 &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/n4659.pdf&quot;&gt;標準化前&lt;/a&gt;の最終草案は十分すぎるほどです（そして無料です）。 多くの人は、C ++ 20に含まれる可能性が高い新機能を文書化した、 &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/n4778.pdf&quot;&gt;さらに新しいドラフト&lt;/a&gt;を好むでしょう。</target>
        </trans-unit>
        <trans-unit id="1f3cb028b6da88b6c74653791f11e503534cce53" translate="yes" xml:space="preserve">
          <source>The Definitive C++ Book Guide and List</source>
          <target state="translated">決定版C++ブックガイドとリスト</target>
        </trans-unit>
        <trans-unit id="4f8d2af30fed0ef3c4f5c0084d94c74ca73d472d" translate="yes" xml:space="preserve">
          <source>This question attempts to collect the few pearls among the dozens of bad C++ books that are published every year.</source>
          <target state="translated">この質問は、毎年出版されている数十冊の悪いC++の本の中から、いくつかの真珠を集めようとしています。</target>
        </trans-unit>
        <trans-unit id="ff95ebfa116cc80f7d355e6706bd2f0a500253e6" translate="yes" xml:space="preserve">
          <source>Unlike many other programming languages, which are often picked up on the go from tutorials found on the Internet, few are able to quickly pick up C++ without studying a well-written C++ book. It is way too big and complex for doing this. In fact, it is so big and complex, that &lt;strong&gt;&lt;em&gt;there are very many very bad C++ books&lt;/em&gt;&lt;/strong&gt; out there. And we are not talking about bad style, but things like sporting &lt;em&gt;glaringly obvious factual errors&lt;/em&gt; and &lt;em&gt;promoting abysmally bad programming styles&lt;/em&gt;.</source>
          <target state="translated">他の多くのプログラミング言語は、インターネットで見つけられるチュートリアルから頻繁に取り上げられるのとは異なり、よく書かれたC ++の本を勉強せずにC ++をすばやく取り上げることができるものはほとんどありません。 これを行うには大きすぎて複雑です。 実際、それは非常に大きくて複雑なので、 &lt;strong&gt;&lt;em&gt;非常に多くの非常に悪いC ++の本が&lt;/em&gt;&lt;/strong&gt;世に出ています。 そして、私たちは悪いスタイルについて話しているのではなく、 &lt;em&gt;明らかに明白な事実上のエラー&lt;/em&gt;をスポーツ&lt;em&gt;すること&lt;/em&gt;や&lt;em&gt;、非常に悪い悪いプログラミングスタイル&lt;/em&gt;を&lt;em&gt;促進することなどです&lt;/em&gt; 。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
