<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/388242">
    <body>
      <group id="388242">
        <trans-unit id="f9d918d89317e4567921b7cabc4657524230f17d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.cppreference.com/&quot;&gt;&lt;em&gt;cppreference.com (C++03/11/14/17/&amp;hellip;)&lt;/em&gt;&lt;/a&gt; (initiated by Nate Kohl) is a wiki that summarizes the basic core-language features and has extensive documentation of the C++ standard library. The documentation is very precise but is easier to read than the official standard document and provides better navigation due to its wiki nature. The project documents all versions of the C++ standard and the site allows filtering the display for a specific version. The project was &lt;a href=&quot;https://isocpp.org/blog/2015/07/cppcon-2014-cppreference.com-documenting-cpp-one-edit-at-a-time-nate-kohl&quot;&gt;presented by Nate Kohl at CppCon'14&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://en.cppreference.com/&quot;&gt;&lt;em&gt;cppreference.com (C ++ 03 / 11 / 14 / 17 /&amp;hellip;)&lt;/em&gt;&lt;/a&gt; (Nate Kohl에서 시작)은 기본 핵심 언어 기능을 요약하고 C ++ 표준 라이브러리에 대한 광범위한 문서를 제공하는 위키입니다. 문서는 매우 정확하지만 공식 표준 문서보다 읽기 쉽고 위키 특성으로 인해 더 나은 탐색 기능을 제공합니다. 이 프로젝트는 모든 버전의 C ++ 표준을 문서화하고 사이트에서 특정 버전의 디스플레이를 필터링 할 수 있습니다. 이 프로젝트는 &lt;a href=&quot;https://isocpp.org/blog/2015/07/cppcon-2014-cppreference.com-documenting-cpp-one-edit-at-a-time-nate-kohl&quot;&gt;CppCon'14에서 Nate Kohl&lt;/a&gt; 이 발표했습니다 .</target>
        </trans-unit>
        <trans-unit id="3f867cd3016ffd99ea34518f168add88660e4c97" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.artima.com/shop/overview_of_the_new_cpp&quot;&gt;&lt;em&gt;Overview of the New C++ (C++11/14) (PDF only)&lt;/em&gt;&lt;/a&gt; (Scott Meyers) (&lt;strong&gt;updated for C++14&lt;/strong&gt;) These are the presentation materials (slides and some lecture notes) of a three-day training course offered by Scott Meyers, who's a highly respected author on C++. Even though the list of items is short, the quality is high.</source>
          <target state="translated">&lt;a href=&quot;http://www.artima.com/shop/overview_of_the_new_cpp&quot;&gt;&lt;em&gt;새로운 C ++ (C ++ 11 / 14) 개요 (PDF 만 해당)&lt;/em&gt;&lt;/a&gt; (Scott Meyers) ( &lt;strong&gt;C ++ 14에 대해 업데이트 됨&lt;/strong&gt; ) C ++의 저명한 작가 인 Scott Meyers 품목 목록이 짧더라도 품질이 높습니다.</target>
        </trans-unit>
        <trans-unit id="b5ec74aa1a68b982553e8094cda3748cf0007920" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://leanpub.com/cpp17/&quot;&gt;&lt;em&gt;C++ 17 - The Complete Guide&lt;/em&gt;&lt;/a&gt; (Nicolai M. Josuttis) This book describes all the new features introduced in the C++17 Standard covering everything from the simple ones like 'Inline Variables', 'constexpr if' all the way up to 'Polymorphic Memory Resources' and 'New and Delete with overaligned Data'.</source>
          <target state="translated">&lt;a href=&quot;https://leanpub.com/cpp17/&quot;&gt;&lt;em&gt;C ++ 17-The Complete Guide&lt;/em&gt;&lt;/a&gt; (Nicolai M. Josuttis)이 책은 '인라인 변수', 'constexpr if'와 같은 간단한 것부터 '다형성'까지 모든 것을 다루는 C ++ 17 표준에 도입 된 모든 새로운 기능에 대해 설명합니다. 메모리 리소스 '및'과도하게 정렬 된 데이터로 새로 만들기 및 삭제 '.</target>
        </trans-unit>
        <trans-unit id="b5e04538422f8beb843d44710eb4e2c1345eda75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0139798099&quot;&gt;&lt;em&gt;Thinking in C++&lt;/em&gt;&lt;/a&gt; (Bruce Eckel, 2nd Edition, 2000).  Two volumes; is a tutorial style &lt;em&gt;free&lt;/em&gt; set of intro level books. Downloads: &lt;a href=&quot;https://ia800100.us.archive.org/10/items/TICPP2ndEdVolOne/TICPP-2nd-ed-Vol-one.zip&quot;&gt;vol 1&lt;/a&gt;, &lt;a href=&quot;https://ia800108.us.archive.org/24/items/TICPP2ndEdVolTwo/TICPP-2nd-ed-Vol-two.zip&quot;&gt;vol 2&lt;/a&gt;. Unfortunately they&amp;rsquo;re marred by a number of trivial errors (e.g. maintaining that temporaries are automatically &lt;code&gt;const&lt;/code&gt;), with no official errata list. A partial 3&lt;sup&gt;rd&lt;/sup&gt; party errata list is available at (&lt;a href=&quot;http://www.computersciencelab.com/Eckel.htm&quot;&gt;http://www.computersciencelab.com/Eckel.htm&lt;/a&gt;), but it&amp;rsquo;s apparently not maintained.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0139798099&quot;&gt;&lt;em&gt;C ++로 생각하기&lt;/em&gt;&lt;/a&gt; (Bruce Eckel, 2 판, 2000). 두 권; 튜토리얼 레벨 &lt;em&gt;무료&lt;/em&gt; 소개 레벨 도서 세트입니다. 다운로드 : &lt;a href=&quot;https://ia800100.us.archive.org/10/items/TICPP2ndEdVolOne/TICPP-2nd-ed-Vol-one.zip&quot;&gt;vol 1&lt;/a&gt; , &lt;a href=&quot;https://ia800108.us.archive.org/24/items/TICPP2ndEdVolTwo/TICPP-2nd-ed-Vol-two.zip&quot;&gt;vol 2&lt;/a&gt; . 불행히도 공식 정오표가없는 여러 가지 사소한 오류 (예 : 임시가 자동으로 &lt;code&gt;const&lt;/code&gt; 유지됨)로 인해 손상을 입었습니다. 부분적인 제 3 자 정오표 목록은 ( &lt;a href=&quot;http://www.computersciencelab.com/Eckel.htm&quot;&gt;http://www.computersciencelab.com/Eckel.htm&lt;/a&gt; )에서 볼 수 있지만 분명히 유지되지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="c20ce9f9efcac9236091048ae44674524cec84c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201183951&quot;&gt;&lt;em&gt;The C++ IO Streams and Locales&lt;/em&gt;&lt;/a&gt; (Angelika Langer and Klaus Kreft)  There's very little to say about this book except that, if you want to know anything about streams and locales, then this is the one place to find definitive answers. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=200&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201183951&quot;&gt;&lt;em&gt;C ++ IO 스트림 및 로케일&lt;/em&gt;&lt;/a&gt; (Angelika Langer 및 Klaus Kreft) 스트림 및 로케일에 대해 알고 싶은 경우이 책에 대해 할 말이 거의 없습니다. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=200&quot;&gt;[리뷰]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00eaeef927722507d7727198777261f474bf62bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201423391&quot;&gt;&lt;em&gt;Ruminations on C++&lt;/em&gt;&lt;/a&gt; - (Andrew Koenig and Barbara Moo) &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=776&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201423391&quot;&gt;&lt;em&gt;C ++에 대한 반론&lt;/em&gt;&lt;/a&gt; -(Andrew Koenig 및 Barbara Moo) &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=776&quot;&gt;[리뷰]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a9b297b1861ba6e63ab49530562cedc7d09900dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201514591&quot;&gt;&lt;em&gt;The Annotated C++ Reference Manual&lt;/em&gt;&lt;/a&gt; (Bjarne Stroustrup, Margaret A. Ellis) This book is quite outdated in the fact that it explores the 1989 C++ 2.0 version - Templates, exceptions, namespaces and new casts were not yet introduced. Saying that however, this book goes through the entire C++ standard of the time explaining the rationale, the possible implementations, and features of the language. This is not a book to learn programming principles and patterns on C++, but to understand every aspect of the C++ language.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201514591&quot;&gt;&lt;em&gt;주석이 달린 C ++ 참조 매뉴얼&lt;/em&gt;&lt;/a&gt; (Bjarne Stroustrup, Margaret A. Ellis)이 책은 1989 년의 C ++ 2.0 버전을 탐색한다는 사실에서 상당히 구식입니다. 템플릿, 예외, 네임 스페이스 및 새로운 캐스트는 아직 소개되지 않았습니다. 그러나이 책은 언어의 이론적 근거, 가능한 구현 및 기능을 설명하는 전체 C ++ 표준에 대해 설명합니다. 이 책은 C ++의 프로그래밍 원리와 패턴을 배우는 것이 아니라 C ++ 언어의 모든 측면을 이해하기위한 책입니다.</target>
        </trans-unit>
        <trans-unit id="6ccf6268415acd377f9f2e70110ceec83387a313" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201533936&quot;&gt;&lt;em&gt;Scientific and Engineering C++: An Introduction to Advanced Techniques and Examples&lt;/em&gt;&lt;/a&gt; (John Barton and Lee Nackman) 
It is a comprehensive and very detailed book that tried to explain and make use of all the features available in C++, in the context of numerical methods. It introduced at the time several new techniques, such as the Curiously Recurring Template Pattern (CRTP, also called Barton-Nackman trick).
It pioneered several techniques such as dimensional analysis and automatic differentiation. 
It came with a lot of compilable and useful code, ranging from an expression parser to a Lapack wrapper. 
The code is still available here: &lt;a href=&quot;http://www.informit.com/store/scientific-and-engineering-c-plus-plus-an-introduction-9780201533934&quot;&gt;http://www.informit.com/store/scientific-and-engineering-c-plus-plus-an-introduction-9780201533934&lt;/a&gt;.
Unfortunately, the books have become somewhat outdated in the style and C++ features, however, it was an incredible tour-de-force at the time (1994, pre-STL).
The chapters on dynamics inheritance are a bit complicated to understand and not very useful.
An updated version of this classic book that includes move semantics and the lessons learned from the STL would be very nice.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201533936&quot;&gt;&lt;em&gt;과학 및 공학 C ++ : 고급 기술 및 예제 소개&lt;/em&gt;&lt;/a&gt; (John Barton 및 Lee Nackman) 수치 방식의 맥락에서 C ++에서 사용할 수있는 모든 기능을 설명하고 활용하려고하는 포괄적이고 매우 상세한 책입니다. 당시에는 CTP (Curiously Recurring Template Pattern)와 같은 몇 가지 새로운 기술이 도입되었습니다 (CRTP, Barton-Nackman 트릭이라고도 함). 치수 분석 및 자동 차별화와 같은 몇 가지 기술을 개척했습니다. 표현식 파서에서 Lapack 래퍼에 이르기까지 많은 컴파일 가능하고 유용한 코드가 제공되었습니다. 코드는 여전히 여기에 있습니다 : &lt;a href=&quot;http://www.informit.com/store/scientific-and-engineering-c-plus-plus-an-introduction-9780201533934&quot;&gt;http://www.informit.com/store/scientific-and-engineering-c-plus-plus-an-introduction-9780201533934&lt;/a&gt; 불행히도,이 책은 스타일과 C ++ 기능이 다소 구식이되었지만, 당시 (1994 년, STL 이전) 놀라운 둘러보기였습니다. 역학 상속에 관한 챕터는 이해하기에 약간 복잡하고별로 유용하지 않습니다. 이동 의미론과 STL에서 배운 교훈을 포함하는이 고전 서적의 업데이트 된 버전은 매우 좋을 것입니다.</target>
        </trans-unit>
        <trans-unit id="809901ca9d8ef4d4d2841999a5dd30e6c93bafbe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201543303&quot;&gt;&lt;em&gt;The Design and Evolution of C++&lt;/em&gt;&lt;/a&gt; (Bjarne Stroustrup)  If you want to know &lt;em&gt;why&lt;/em&gt; the language is the way it is, this book is where you find answers. This covers everything &lt;em&gt;before the standardization&lt;/em&gt; of C++.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201543303&quot;&gt;&lt;em&gt;C ++의 디자인과 진화&lt;/em&gt;&lt;/a&gt; (Bjarne Stroustrup) 언어가 &lt;em&gt;왜 그런지&lt;/em&gt; 알고 싶다면이 책에서 답을 찾으십시오. 여기에는 C ++ &lt;em&gt;표준화 전의&lt;/em&gt; 모든 내용이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="4d4ea160d9325161dd4cada6a6213a0dfddfc7e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201548550&quot;&gt;&lt;em&gt;Advanced C++ Programming Styles and Idioms&lt;/em&gt;&lt;/a&gt; (James Coplien)  A predecessor of the pattern movement, it describes many C++-specific &amp;ldquo;idioms&amp;rdquo;. It's certainly a very good book and might still be worth a read if you can spare the time, but quite old and not up-to-date with current C++.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201548550&quot;&gt;&lt;em&gt;고급 C ++ 프로그래밍 스타일 및 숙어&lt;/em&gt;&lt;/a&gt; (James Coplien) 패턴 이동의 전신 인 많은 C ++ 관련 &quot;이디엄&quot;에 대해 설명합니다. 확실히 좋은 책이며 시간을 절약 할 수 있지만 현재 C ++로 최신이 아니더라도 여전히 읽을 가치가 있습니다.</target>
        </trans-unit>
        <trans-unit id="53f01f20e6fa1ca6317e73225408b3bf74d639f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201615622&quot;&gt;&lt;em&gt;Exceptional C++&lt;/em&gt;&lt;/a&gt; (Herb Sutter)  Presented as a set of puzzles, this has one of the best and thorough discussions of the proper resource management and exception safety in C++ through Resource Acquisition is Initialization (RAII) in addition to in-depth coverage of a variety of other topics including the pimpl idiom, name lookup, good class design, and the C++ memory model. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=209&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201615622&quot;&gt;&lt;em&gt;탁월한 C ++&lt;/em&gt;&lt;/a&gt; (Herb Sutter) 퍼즐 세트로 제시된이 클래스는 다양한 자원에 대한 심층적 인 적용 범위 외에 RAII (Resource Acquisition is Initialization)를 통해 C ++의 적절한 자원 관리 및 예외 안전성에 대한 최상의 철저한 토론 중 하나를 제공합니다. pimpl 관용구, 이름 조회, 좋은 클래스 디자인 및 C ++ 메모리 모델을 포함한 다른 주제. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=209&quot;&gt;[리뷰]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="523a09c730657d6627588ca169800b4c58f20dac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201633620&quot;&gt;&lt;em&gt;Large Scale C++ Software Design&lt;/em&gt;&lt;/a&gt; (John Lakos)  Lakos explains techniques to manage very big C++ software projects. Certainly, a good read, if it only was up to date. It was written long before C++ 98 and misses on many features (e.g. namespaces) important for large-scale projects. If you need to work in a big C++ software project, you might want to read it, although you need to take more than a grain of salt with it. The first volume of a new edition is &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201717069&quot;&gt;released in 2019&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201633620&quot;&gt;&lt;em&gt;대규모 C ++ 소프트웨어 디자인&lt;/em&gt;&lt;/a&gt; (John Lakos) Lakos는 매우 큰 C ++ 소프트웨어 프로젝트를 관리하는 기술을 설명합니다. 확실히 최신 상태라면 잘 읽어보십시오. C ++ 98보다 오래 전에 작성되었으며 대규모 프로젝트에 중요한 많은 기능 (예 : 네임 스페이스)이 누락되었습니다. 큰 C ++ 소프트웨어 프로젝트에서 작업해야하는 경우에는 소금 한 덩어리 이상을 섭취해야하지만 읽을 수 있습니다. 새 버전의 첫 번째 책은 &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201717069&quot;&gt;2019 년에 릴리스되었습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0f912ca087659cbbf44b90e067c4f0759022b75e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/020163371X&quot;&gt;&lt;em&gt;More Effective C++&lt;/em&gt;&lt;/a&gt; (Scott Meyers) Even more rules of thumb than &lt;em&gt;Effective C++&lt;/em&gt;. Not as important as the ones in the first book, but still good to know.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/020163371X&quot;&gt;&lt;em&gt;보다 효과적인 C ++&lt;/em&gt;&lt;/a&gt; (Scott Meyers) &lt;em&gt;Effective C ++&lt;/em&gt; 보다 더 많은 경험 법칙. 첫 번째 책의 내용만큼 중요하지는 않지만 여전히 잘 알고 있습니다.</target>
        </trans-unit>
        <trans-unit id="d26a8f1b4fca58a7bc5c5dad7c92b89ac484f8b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/020170353X&quot;&gt;&lt;em&gt;Accelerated C++&lt;/em&gt;&lt;/a&gt; (Andrew Koenig and Barbara Moo, 1st Edition - August 24, 2000)  This basically covers the same ground as the &lt;em&gt;C++ Primer&lt;/em&gt;, but does so on a fourth of its space. This is largely because it does not attempt to be an introduction to &lt;em&gt;programming&lt;/em&gt;, but an introduction to &lt;em&gt;C++&lt;/em&gt; for people who've previously programmed in some other language. It has a steeper learning curve, but, for those who can cope with this, it is a very compact introduction to the language. (Historically, it broke new ground by being the first beginner's book to use a modern approach to teaching the language.) Despite this, the C++
it teaches is purely C++98. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1185&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/020170353X&quot;&gt;&lt;em&gt;Accelerated C ++&lt;/em&gt;&lt;/a&gt; (Andrew Koenig 및 Barbara Moo, 초판-2000 년 8 월 24 일) 이것은 기본적으로 &lt;em&gt;C ++ Primer&lt;/em&gt; 와 동일한 근거를 다루지 만, 공간의 4 분의 1에 해당합니다. 이는 &lt;em&gt;프로그래밍&lt;/em&gt; 에 대한 소개가 아니라 이전에 다른 언어로 프로그래밍 한 사람들을위한 &lt;em&gt;C ++에&lt;/em&gt; 대한 소개가되기 때문입니다. 학습 곡선이 가파르지만 이에 대처할 수있는 사람들에게는 매우 간단한 언어 소개입니다. (역사적으로, 언어 교육에 대한 현대적인 접근 방식을 사용하는 최초의 초보자 도서가 됨으로써 새로운 지평을 열었습니다.) 그럼에도 불구하고, 가르치는 C ++는 순전히 C ++ 98입니다. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1185&quot;&gt;[리뷰]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff3fb41a90c5d01bebd659d9bd295c8e020c99b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201704315&quot;&gt;&lt;em&gt;Modern C++ Design&lt;/em&gt;&lt;/a&gt; (Andrei Alexandrescu)  A groundbreaking book on advanced generic programming techniques.  Introduces policy-based design, type lists, and fundamental generic programming idioms then explains how many useful design patterns (including small object allocators, functors, factories, visitors, and multi-methods) can be implemented efficiently, modularly, and cleanly using generic programming. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=979&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201704315&quot;&gt;&lt;em&gt;Modern C ++ Design&lt;/em&gt;&lt;/a&gt; (Andrei Alexandrescu) 고급 일반 프로그래밍 기술에 관한 혁신적인 책. 정책 기반 디자인, 유형 목록 및 기본 일반 프로그래밍 관용구를 소개 한 다음 일반 프로그래밍을 사용하여 효율적이고 모듈 식으로 깔끔하게 구현할 수있는 유용한 디자인 패턴 (작은 객체 할당 자, 펑터, 팩토리, 방문자 및 다중 방법 포함)을 설명합니다. . &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=979&quot;&gt;[리뷰]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4fd7152c6fab15b84d2e16ab604c91e0f1123d30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/020170434X&quot;&gt;&lt;em&gt;More Exceptional C++&lt;/em&gt;&lt;/a&gt; (Herb Sutter)  Covers additional exception safety topics not covered in &lt;em&gt;Exceptional C++&lt;/em&gt;, in addition to discussion of effective object-oriented programming in C++ and correct use of the STL. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=784&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/020170434X&quot;&gt;&lt;em&gt;보다 뛰어난 C ++&lt;/em&gt;&lt;/a&gt; (허브 스터 터) &lt;em&gt;C ++&lt;/em&gt; 에서 효과적인 객체 지향 프로그래밍 및 STL의 올바른 사용에 대한 설명과 함께, &lt;em&gt;예외적 인 C ++&lt;/em&gt; 에서 다루지 않은 추가 예외 안전 주제를 다룹니다. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=784&quot;&gt;[리뷰]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aecc92d12d9d309965d37294bbbf91c0cc27a27f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201734842&quot;&gt;&lt;em&gt;C++ Templates: The Complete Guide&lt;/em&gt;&lt;/a&gt; (David Vandevoorde and Nicolai M. Josuttis) This is &lt;em&gt;the&lt;/em&gt; book about templates as they existed before C++11.  It covers everything from the very basics to some of the most advanced template metaprogramming and explains every detail of how templates work (both conceptually and at how they are implemented) and discusses many common pitfalls.  Has excellent summaries of the One Definition Rule (ODR) and overload resolution in the appendices. A &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321714121&quot;&gt;second edition&lt;/a&gt; covering C++11, C++14 and C++17 has been already published. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=506&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201734842&quot;&gt;&lt;em&gt;C ++ 템플릿 : 전체 가이드&lt;/em&gt;&lt;/a&gt; (David Vandevoorde 및 Nicolai M. Josuttis)이 문서는 C ++ 11 이전에 존재했던 템플릿에 관한 책입니다. 기본부터 고급 템플릿 메타 프로그래밍에 이르기까지 모든 것을 다루며 템플릿 작동 방식 (개념적 및 구현 방식)에 대한 모든 세부 사항을 설명하고 많은 일반적인 함정에 대해 설명합니다. 부록에 하나의 정의 규칙 (ODR)과 과부하 해결에 대한 훌륭한 요약이 있습니다. C ++ 11, C ++ 14 및 C ++ 17을 다루는 &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321714121&quot;&gt;두 번째 버전&lt;/a&gt; 이 이미 게시되었습니다. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=506&quot;&gt;[리뷰]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3ad765446fca1244cf5ddfda64c97b4f86524dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201749629&quot;&gt;&lt;em&gt;Effective STL&lt;/em&gt;&lt;/a&gt; (Scott Meyers)  This aims to do the same to the part of the standard library coming from the STL what &lt;em&gt;Effective C++&lt;/em&gt; did to the language as a whole: It presents rules of thumb along with their rationale. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=67&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201749629&quot;&gt;&lt;em&gt;효과적인 STL&lt;/em&gt;&lt;/a&gt; (Scott Meyers) 이것은 &lt;em&gt;효과적인 C ++&lt;/em&gt; 이 언어 전체에 대해 STL에서 제공하는 표준 라이브러리의 일부와 동일한 작업을 수행하는 것을 목표로합니다. 이는 이론적 근거와 함께 경험 법칙을 제시합니다. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=67&quot;&gt;[리뷰]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b796de57a32fff0863980a8d036a1cc9f5ba153" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201760428&quot;&gt;&lt;em&gt;Exceptional C++ Style&lt;/em&gt;&lt;/a&gt; (Herb Sutter)  Discusses generic programming, optimization, and resource management; this book also has an excellent exposition of how to write modular code in C++ by using non-member functions and the single responsibility principle. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=107&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201760428&quot;&gt;&lt;em&gt;뛰어난 C ++ 스타일&lt;/em&gt;&lt;/a&gt; (허브 스터 터) 일반적인 프로그래밍, 최적화 및 리소스 관리에 대해 논의합니다. 이 책은 또한 비 멤버 함수와 단일 책임 원칙을 사용하여 C ++로 모듈 식 코드를 작성하는 방법에 대한 훌륭한 설명을 제공합니다. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=107&quot;&gt;[리뷰]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="173d19bad3dd7da8b2950b095396ce1ac6190fea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201834545&quot;&gt;&lt;em&gt;Inside the C++ Object Model&lt;/em&gt;&lt;/a&gt; (Stanley Lippman)  If you want to know how virtual member functions are commonly implemented and how base objects are commonly laid out in memory in a multi-inheritance scenario, and how all this affects performance, this is where you will find thorough discussions of such topics.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201834545&quot;&gt;&lt;em&gt;C ++ 개체 모델 내부&lt;/em&gt;&lt;/a&gt; (Stanley Lippman) 다중 상속 시나리오에서 가상 멤버 함수가 일반적으로 구현되는 방법과 기본 개체가 메모리에 일반적으로 배치되는 방법 및이 모든 것이 성능에 미치는 영향을 알고 싶다면 여기에서 그러한 주제에 대한 철저한 토론을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="e4fd3ad4d5cd5aa7b7f348a72cc94f3d3cf4d194" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321113586&quot;&gt;&lt;em&gt;C++ Coding Standards&lt;/em&gt;&lt;/a&gt; (Herb Sutter and Andrei Alexandrescu) &amp;ldquo;Coding standards&amp;rdquo; here doesn't mean &amp;ldquo;how many spaces should I indent my code?&amp;rdquo;  This book contains 101 best practices, idioms, and common pitfalls that can help you to write correct, understandable, and efficient C++ code. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1439&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321113586&quot;&gt;&lt;em&gt;C ++ 코딩 표준&lt;/em&gt;&lt;/a&gt; (Herb Sutter 및 Andrei Alexandrescu) 여기서 &quot;코딩 표준&quot;은 &quot;코드를 들여 쓰기해야하는 공간은 몇 개입니까?&quot;를 의미하지 않습니다. 이 책에는 정확하고 이해 가능하며 효율적인 C ++ 코드 작성에 도움이되는 101 가지 모범 사례, 관용구 및 일반적인 함정이 포함되어 있습니다. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1439&quot;&gt;[리뷰]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b4287f65d0b57579f8434f72cdf1ce3a5aba6664" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321227255&quot;&gt;&lt;em&gt;C++ Template Metaprogramming&lt;/em&gt;&lt;/a&gt; (David Abrahams and Aleksey Gurtovoy)</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321227255&quot;&gt;&lt;em&gt;C ++ 템플릿 메타 프로그래밍&lt;/em&gt;&lt;/a&gt; (David Abrahams and Aleksey Gurtovoy)</target>
        </trans-unit>
        <trans-unit id="2230af863f13bba81183ad8f2f61b4af7dfdb549" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321334876&quot;&gt;&lt;em&gt;Effective C++&lt;/em&gt;&lt;/a&gt; (Scott Meyers, 3rd Edition - May 22, 2005)  This was written with the aim of being the best second book C++ programmers should read, and it succeeded. Earlier editions were aimed at programmers coming from C, the third edition changes this and targets programmers coming from languages like Java. It presents ~50 easy-to-remember rules of thumb along with their rationale in a very accessible (and enjoyable) style. For C++11 and C++14 the examples and a few issues are outdated and Effective Modern C++ should be preferred. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=700&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321334876&quot;&gt;&lt;em&gt;효과적인 C ++&lt;/em&gt;&lt;/a&gt; (Scott Meyers, 3 판-2005 년 5 월 22 일) 이것은 C ++ 프로그래머가 읽어야 할 최고의 두 번째 책이되는 것을 목표로 작성되었으며 성공했습니다. 이전 버전은 C에서 온 프로그래머를 대상으로했으며 세 번째 버전은이를 변경하여 Java와 같은 언어에서 온 프로그래머를 대상으로합니다. 그것은 접근하기 쉽고 즐거운 스타일로 그 이론적 근거와 함께 기억하기 쉬운 ~ 50의 경험 법칙을 제시합니다. C ++ 11 및 C ++ 14의 경우 예제와 몇 가지 문제가 오래되었으며 효과적인 Modern C ++가 선호됩니다. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=700&quot;&gt;[리뷰]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="697a266ccc25bae4c5d622426ecc19cee0f5c6a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321623215&quot;&gt;&lt;em&gt;C++ Standard Library Tutorial and Reference&lt;/em&gt;&lt;/a&gt; (Nicolai Josuttis) (&lt;strong&gt;updated for C++11&lt;/strong&gt;) &lt;em&gt;The&lt;/em&gt; introduction and reference for the C++ Standard Library. The second edition (released on April 9, 2012) covers C++11. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1849&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321623215&quot;&gt;&lt;em&gt;C ++ 표준 라이브러리 자습서 및 참조&lt;/em&gt;&lt;/a&gt; (Nicolai Josuttis) ( &lt;strong&gt;C ++ 11 용으로 업데이트 됨&lt;/strong&gt; ) C ++ 표준 라이브러리에 대한 소개 및 참조. 2012 년 4 월 9 일에 릴리스 된 두 번째 버전은 C ++ 11을 다룹니다. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1849&quot;&gt;[리뷰]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1bc74438394b9ac362f7c5065b644f554d95f5fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321714113&quot;&gt;&lt;em&gt;C++ Primer&lt;/em&gt;&lt;/a&gt; * (Stanley Lippman, Jos&amp;eacute;e Lajoie, and Barbara E. Moo)  (&lt;strong&gt;updated for C++11&lt;/strong&gt;) Coming at 1k pages, this is a very thorough introduction into C++ that covers just about everything in the language in a very accessible format and in great detail. The fifth edition (released August 16, 2012) covers C++11. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1848&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321714113&quot;&gt;&lt;em&gt;C ++ Primer&lt;/em&gt;&lt;/a&gt; * (Stanley Lippman, Jos&amp;eacute;e Lajoie 및 Barbara E. Moo) ( &lt;strong&gt;C ++ 11 용으로 업데이트 됨&lt;/strong&gt; ) 1k 페이지로 제공되는이 언어는 C ++에 대한 매우 철저한 소개로, 언어의 거의 모든 것을 매우 접근 가능한 형식으로 다루고 있습니다. 아주 자세하게 제 5 판 (2012 년 8 월 16 일 릴리스)은 C ++ 11을 다룹니다. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1848&quot;&gt;[리뷰]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="869dfc1654977728308026b7b2e1e3e106d213f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321958322&quot;&gt;&lt;em&gt;The C++ Programming Language&lt;/em&gt;&lt;/a&gt; (Bjarne Stroustrup) (&lt;strong&gt;updated for C++11&lt;/strong&gt;) The classic introduction to C++ by its creator. Written to parallel the classic K&amp;amp;R, this indeed reads very much like it and covers just about everything from the core language to the standard library, to programming paradigms to the language's philosophy. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1853&quot;&gt;[Review]&lt;/a&gt; Note: All releases of the C++ standard are tracked in this question: &lt;a href=&quot;https://stackoverflow.com/a/4653479/14065&quot;&gt;Where do I find the current C++ standard&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321958322&quot;&gt;&lt;em&gt;C ++ 프로그래밍 언어&lt;/em&gt;&lt;/a&gt; (Bjarne Stroustrup) ( &lt;strong&gt;C ++ 11 용으로 업데이트 됨&lt;/strong&gt; ) 제작자가 C ++에 대한 고전적인 소개. 고전적인 K &amp;amp; R과 유사하게 작성된이 책은 실제로 그와 매우 흡사하며 핵심 언어에서 표준 라이브러리, 프로그래밍 패러다임, 언어 철학에 이르기까지 거의 모든 것을 다룹니다. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1853&quot;&gt;[리뷰]&lt;/a&gt; 참고 : C ++ 표준의 모든 릴리스는이 질문에서 추적됩니다. &lt;a href=&quot;https://stackoverflow.com/a/4653479/14065&quot;&gt;현재 C ++ 표준은 어디에 있습니까&lt;/a&gt; ?</target>
        </trans-unit>
        <trans-unit id="da0159f95ed75e7537af87baced3febe60af7587" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321992784&quot;&gt;&lt;em&gt;Programming: Principles and Practice Using C++&lt;/em&gt;&lt;/a&gt; (Bjarne Stroustrup, 2nd Edition - May 25, 2014) (&lt;strong&gt;updated for C++11/C++14&lt;/strong&gt;) An introduction to programming using C++ by the creator of the language. A good read, that assumes no previous programming experience, but is not only for beginners.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321992784&quot;&gt;&lt;em&gt;프로그래밍 : C ++를 사용한 원리와 실습&lt;/em&gt;&lt;/a&gt; (Bjarne Stroustrup, 2 판-2014 년 5 월 25 일) ( &lt;strong&gt;C ++ 11 / C ++ 14 용으로 업데이트 됨&lt;/strong&gt; ) 언어 작성자가 C ++를 사용한 프로그래밍에 대한 소개. 이전의 프로그래밍 경험이 없다고 가정하지만 초보자에게는 적합하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c9020f8cd0be475fedb4de9123508cc326364359" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1460966163&quot;&gt;&lt;em&gt;Advanced C++ Metaprogramming&lt;/em&gt;&lt;/a&gt; (Davide Di Gennaro) A pre-C++11 manual of TMP techniques, focused more on practice than theory.  There are a ton of snippets in this book, some of which are made obsolete by type traits, but the techniques, are nonetheless useful to know.  If you can put up with the quirky formatting/editing, it is easier to read than Alexandrescu, and arguably, more rewarding.  For more experienced developers, there is a good chance that you may pick up something about a dark corner of C++ (a quirk) that usually only comes about through extensive experience.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1460966163&quot;&gt;&lt;em&gt;고급 C ++ 메타 프로그래밍&lt;/em&gt;&lt;/a&gt; (Davide Di Gennaro) TMP 기술에 대한 C ++ 11 사전 매뉴얼로 이론보다는 실습에 중점을 두었습니다. 이 책에는 많은 스 니펫이 있으며 그중 일부는 유형 특성에 의해 사용되지 않지만 기술은 아는 것이 유용합니다. 기발한 형식 / 편집을 참을 수 있다면 Alexandrescu보다 읽기가 더 쉽고, 더 많은 보상이 있습니다. 보다 숙련 된 개발자에게는 일반적으로 광범위한 경험을 통해서만 발생하는 C ++의 어두운 구석에 대해 뭔가를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="491d29c723a7d473841134c6eb63abd620ab5196" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1491903996&quot;&gt;&lt;em&gt;Effective Modern C++&lt;/em&gt;&lt;/a&gt; (Scott Meyers) This is basically the new version of &lt;em&gt;Effective C++&lt;/em&gt;, aimed at C++ programmers making the transition from C++03 to C++11 and C++14.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1491903996&quot;&gt;&lt;em&gt;Effective Modern C ++&lt;/em&gt;&lt;/a&gt; (Scott Meyers) 기본적으로 C ++ 프로그래머에서 C ++ 03에서 C ++ 11 및 C ++ 14로 전환하는 것을 목표로하는 새로운 버전의 &lt;em&gt;Effective C ++&lt;/em&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f8fe1bee78382d5f7dfe425a0e1cadbd3e95e47a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1933988770&quot;&gt;&lt;em&gt;C++ Concurrency In Action&lt;/em&gt;&lt;/a&gt; (Anthony Williams) A book covering C++11 concurrency support including the thread library, the atomics library, the C++ memory model, locks and mutexes, as well as issues of designing and debugging multithreaded applications. A &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1617294691&quot;&gt;second edition&lt;/a&gt; covering C++14 and C++17 has been already published.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1933988770&quot;&gt;&lt;em&gt;C ++ Concurrency In Action&lt;/em&gt;&lt;/a&gt; (Anthony Williams) 스레드 라이브러리, 원자 라이브러리, C ++ 메모리 모델, 잠금 및 뮤텍스, 다중 스레드 응용 프로그램 설계 및 디버깅 문제를 포함하여 C ++ 11 동시성 지원을 다루는 책. C ++ 14 및 C ++ 17을 다루는 &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1617294691&quot;&gt;두 번째 버전&lt;/a&gt; 이 이미 게시되었습니다.</target>
        </trans-unit>
        <trans-unit id="ce7269dd3f09530ebbf954f9bc271955ae3e7389" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/B00F8CWGOS&quot;&gt;&lt;em&gt;A Tour of C++&lt;/em&gt;&lt;/a&gt; (Bjarne Stroustrup) (&lt;strong&gt;&lt;a href=&quot;http://a.co/f7WPDeD&quot;&gt;2nd edition  for C++17&lt;/a&gt;&lt;/strong&gt;) The &amp;ldquo;tour&amp;rdquo; is a quick (about 180 pages and 14 chapters) tutorial overview of all of standard C++ (language and standard library, &lt;strong&gt;and using C++11&lt;/strong&gt;) at a moderately high level for people who already know C++ or at least are experienced programmers. This book is an extended version of the material that constitutes Chapters 2-5 of The C++ Programming Language, 4th edition.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/B00F8CWGOS&quot;&gt;&lt;em&gt;C ++ 둘러보기&lt;/em&gt;&lt;/a&gt; (Bjarne Stroustrup) ( &lt;strong&gt;&lt;a href=&quot;http://a.co/f7WPDeD&quot;&gt;C ++ 17 용 2 판&lt;/a&gt;&lt;/strong&gt; ) &quot;tour&quot;는 모든 표준 C ++ (언어 및 표준 라이브러리 &lt;strong&gt;및 C ++ 사용&lt;/strong&gt; )에 대한 빠른 (약 180 페이지 및 14 장) 자습서 개요입니다. &lt;strong&gt;11&lt;/strong&gt; ) 이미 C ++을 알고 있거나 경험이 풍부한 프로그래머를위한 사람들에게 적당히 높은 수준입니다. 이 책은 The C ++ Programming Language, 4 판의 2-5 장을 구성하는 확장 된 자료입니다.</target>
        </trans-unit>
        <trans-unit id="6b6697a0c2a1482e966dda3d993d2b7c0dcb00c2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The C++&lt;a href=&quot;https://www.iso.org/standard/50372.html&quot;&gt;11&lt;/a&gt;/&lt;a href=&quot;https://www.iso.org/standard/64029.html&quot;&gt;14&lt;/a&gt;/&lt;a href=&quot;https://www.iso.org/standard/68564.html&quot;&gt;17&lt;/a&gt; Standard (INCITS/ISO/IEC 14882:2011/2014/2017)&lt;/em&gt; This, of course, is the final arbiter of all that is or isn't C++. Be aware, however, that it is intended purely as a reference for &lt;em&gt;experienced&lt;/em&gt; users willing to devote considerable time and effort to its understanding. The C++17 standard is released in electronic form for 198 Swiss Francs.</source>
          <target state="translated">&lt;em&gt;C ++ 11/14/17 표준 (INCITS / ISO / IEC 14882 : 2011/2014/2017)&lt;/em&gt; 물론 이것은 C ++이거나 그렇지 않은 모든 것의 최종 중재자입니다. 그러나 이는 순전히 이해하기 위해 상당한 시간과 노력을 기울일 의향이있는 &lt;em&gt;숙련 된&lt;/em&gt; 사용자를위한 참고 자료라는 것을 명심하십시오. C ++ 17 표준은 198 스위스 프랑의 전자 형식으로 출시되었습니다.</target>
        </trans-unit>
        <trans-unit id="1f996fa05714bb967d1d3dad45b15e3a4578137a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C++11/14/17/&amp;hellip; References:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;C ++ 11 / 14 / 17 /&amp;hellip; 참고 문헌 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="461f31882057ec224f923e0dcf40c2beacb287a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Some information contained within these books may not be up-to-date or no longer considered best practice.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 이 책에 포함 된 일부 정보는 최신 정보가 아니거나 더 이상 모범 사례로 간주되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d814fecbb236ff95202084ea95f4b88e4cce5252" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;
* Not to be confused with &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0672326973&quot;&gt;&lt;em&gt;C++ Primer Plus&lt;/em&gt;&lt;/a&gt; (Stephen Prata), with a significantly less favorable &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1744&quot;&gt;review&lt;/a&gt;.
&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;* &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0672326973&quot;&gt;&lt;em&gt;C ++ Primer Plus&lt;/em&gt;&lt;/a&gt; (Stephen Prata)와 혼동하지 마십시오.&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="fafbbffd1a85d713ba25d35cebf35d94da93577c" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;*Note: FAQs and other resources can be found in the &lt;a href=&quot;https://stackoverflow.com/tags/c%2b%2b/info&quot;&gt;C++ tag info&lt;/a&gt; and under &lt;a href=&quot;/questions/tagged/c%2b%2b-faq&quot;&gt;c++-faq&lt;/a&gt;. &lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;* 참고 : FAQ 및 기타 리소스는 &lt;a href=&quot;https://stackoverflow.com/tags/c%2b%2b/info&quot;&gt;C ++ 태그 정보&lt;/a&gt; 및 &lt;a href=&quot;/questions/tagged/c%2b%2b-faq&quot;&gt;c ++-faq&lt;/a&gt; 에서 찾을 수 있습니다.&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="4d064726954a17487f94e931f5b157b733ec22ed" translate="yes" xml:space="preserve">
          <source>Advanced</source>
          <target state="translated">Advanced</target>
        </trans-unit>
        <trans-unit id="60575a6ebba9f780b4312324662169830d12bea1" translate="yes" xml:space="preserve">
          <source>Beginner</source>
          <target state="translated">Beginner</target>
        </trans-unit>
        <trans-unit id="eb8de9ce8757ee3c542141ac80ff3b33dc04edff" translate="yes" xml:space="preserve">
          <source>Best practices</source>
          <target state="translated">모범 사례</target>
        </trans-unit>
        <trans-unit id="071175830fe7092b1a52f8c955bf4b092df97637" translate="yes" xml:space="preserve">
          <source>Classics / Older</source>
          <target state="translated">클래식 / 더 오래된</target>
        </trans-unit>
        <trans-unit id="b1cfe72fd27178870354f9f4e07bb82072caea55" translate="yes" xml:space="preserve">
          <source>Intermediate</source>
          <target state="translated">Intermediate</target>
        </trans-unit>
        <trans-unit id="7249db688fcac7e2a2f2bf1b7ad9f55e77e33b97" translate="yes" xml:space="preserve">
          <source>Introductory, no previous programming experience</source>
          <target state="translated">입문, 이전 프로그래밍 경험이 없음</target>
        </trans-unit>
        <trans-unit id="4c2b843e44fb7dca8e7d3407c76bdd778c47418b" translate="yes" xml:space="preserve">
          <source>Introductory, with previous programming experience</source>
          <target state="translated">이전 프로그래밍 경험이있는 입문</target>
        </trans-unit>
        <trans-unit id="af1dcc4aaa25fe83b8a89ba75807edec69e8d514" translate="yes" xml:space="preserve">
          <source>Please edit the accepted answer to provide &lt;strong&gt;quality books&lt;/strong&gt; and an approximate skill level &amp;mdash; &lt;em&gt;preferably&lt;/em&gt;&lt;strong&gt;after&lt;/strong&gt;&lt;em&gt;discussing your addition in &lt;a href=&quot;http://chat.stackoverflow.com/rooms/10/loungec&quot;&gt;the C++ chat room&lt;/a&gt;&lt;/em&gt;. (The regulars might mercilessly undo your work if they disagree with a recommendation.) Add a short blurb/description about each book that you have personally read/benefited from. Feel free to debate quality, headings, etc. Books that meet the criteria will be added to the list.  Books that have reviews by the Association of C and C++ Users (ACCU) have links to the review.</source>
          <target state="translated">&lt;em&gt;가급적&lt;/em&gt; &lt;em&gt;&lt;a href=&quot;http://chat.stackoverflow.com/rooms/10/loungec&quot;&gt;C ++ 대화방&lt;/a&gt; 에서 추가&lt;/em&gt; &lt;strong&gt;한&lt;/strong&gt; &lt;em&gt;내용을 논의한&lt;/em&gt; &lt;strong&gt;후&lt;/strong&gt; &lt;strong&gt;양질의 책&lt;/strong&gt; 과 대략적인 기술 수준을 제공하려면 허용 된 답변을 편집하십시오. (정규 직원은 권장 사항에 동의하지 않는 경우 무자비하게 작업을 취소 할 수 있습니다.) 개인적으로 읽거나 혜택을 얻은 각 책에 대해 간단한 설명 / 설명을 추가하십시오. 품질, 제목 등을 자유롭게 토론하십시오. 기준에 맞는 책이 목록에 추가됩니다. CCU 및 C ++ 사용자 협회 (ACCU)의 리뷰가있는 책은 리뷰에 대한 링크를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="8490ad3770e2562a83a8997c6373d3d062ef269a" translate="yes" xml:space="preserve">
          <source>Reference Style - All Levels</source>
          <target state="translated">참조 스타일-모든 레벨</target>
        </trans-unit>
        <trans-unit id="87501ec8f9c14578de24897ca30d9f6d23a240db" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md&quot;&gt;&lt;em&gt;C++ Core Guidelines (C++11/14/17/&amp;hellip;)&lt;/em&gt;&lt;/a&gt; (edited by Bjarne Stroustrup and Herb Sutter) is an evolving online document consisting of a set of guidelines for using modern C++ well. The guidelines are focused on relatively higher-level issues, such as interfaces, resource management, memory management and concurrency affecting application architecture and library design. The project was &lt;a href=&quot;https://isocpp.org/blog/2015/09/bjarne-stroustrup-announces-cpp-core-guidelines&quot;&gt;announced at CppCon'15 by Bjarne Stroustrup and others&lt;/a&gt; and welcomes contributions from the community. Most guidelines are supplemented with a rationale and examples as well as discussions of possible tool support. Many rules are designed specifically to be automatically checkable by static analysis tools.</source>
          <target state="translated">Bjarne Stroustrup and Herb Sutter가 편집 한 &lt;a href=&quot;https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md&quot;&gt;&lt;em&gt;C ++ 핵심 지침 (C ++ 11 / 14 / 17 /&amp;hellip;&lt;/em&gt;&lt;/a&gt; )은 최신 C ++를 잘 사용하기위한 일련의 지침으로 구성된 진화하는 온라인 문서입니다. 이 지침은 인터페이스, 리소스 관리, 메모리 관리 및 응용 프로그램 아키텍처 및 라이브러리 디자인에 영향을 미치는 동시성과 같은 비교적 높은 수준의 문제에 중점을 둡니다. 이 프로젝트는 &lt;a href=&quot;https://isocpp.org/blog/2015/09/bjarne-stroustrup-announces-cpp-core-guidelines&quot;&gt;Bjarne Stroustrup 및 다른 사람들에 의해 CppCon'15&lt;/a&gt; 에서 발표되었으며 커뮤니티의 기여를 환영합니다. 대부분의 가이드 라인에는 가능한 도구 지원에 대한 논의뿐만 아니라 이론적 근거와 예가 보충됩니다. 많은 규칙은 정적 분석 도구를 통해 자동으로 확인할 수 있도록 특별히 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="8673b09ab00c20f74df61950867054395adce51f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://isocpp.org/faq&quot;&gt;&lt;em&gt;C++ Super-FAQ&lt;/em&gt;&lt;/a&gt; (Marshall Cline, Bjarne Stroustrup and others) is an effort by the Standard C++ Foundation to unify the C++ FAQs previously maintained individually by Marshall Cline and Bjarne Stroustrup and also incorporating new contributions. The items mostly address issues at an intermediate level and are often written with a humorous tone. Not all items might be fully up to date with the latest edition of the C++ standard yet.</source>
          <target state="translated">&lt;a href=&quot;https://isocpp.org/faq&quot;&gt;&lt;em&gt;C ++ Super-FAQ&lt;/em&gt;&lt;/a&gt; (Marshall Cline, Bjarne Stroustrup 및 기타)는 Marshall Cline 및 Bjarne Stroustrup이 이전에 개별적으로 유지 관리 한 C ++ FAQ를 통합하고 새로운 기여를 통합하기 위해 Standard C ++ Foundation의 노력입니다. 이 항목은 주로 중간 수준의 문제를 다루며 종종 유머 톤으로 작성됩니다. 모든 항목이 최신 버전의 C ++ 표준으로 완전히 최신 상태 인 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="4de753951e85340f9c4af73faeb307883e1b71fc" translate="yes" xml:space="preserve">
          <source>The C++17 standard is available, but seemingly not in an economical form &amp;ndash; &lt;a href=&quot;https://www.iso.org/standard/68564.html&quot;&gt;directly from the ISO&lt;/a&gt; it costs 198 Swiss Francs (about $200 US). For most people, the &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/n4659.pdf&quot;&gt;final draft before standardization&lt;/a&gt; is more than adequate (and free). Many will prefer an &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/n4778.pdf&quot;&gt;even newer draft&lt;/a&gt;, documenting new features that are likely to be included in C++20.</source>
          <target state="translated">C ++ 17 표준은 사용 가능하지만 경제적 인 형태는 아닙니다 &lt;a href=&quot;https://www.iso.org/standard/68564.html&quot;&gt;. ISO에서 직접&lt;/a&gt; 198 스위스 프랑 (약 200 달러)을 지불해야합니다. 대부분의 사람들에게 &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/n4659.pdf&quot;&gt;표준화 이전&lt;/a&gt; 의 최종안 은 충분하고 무료입니다. 많은 사람들이 C ++ 20에 포함될 가능성이있는 새로운 기능을 문서화하여 &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/n4778.pdf&quot;&gt;훨씬 새로운 초안&lt;/a&gt; 을 선호 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="1f3cb028b6da88b6c74653791f11e503534cce53" translate="yes" xml:space="preserve">
          <source>The Definitive C++ Book Guide and List</source>
          <target state="translated">결정적인 C ++ 책 가이드 및 목록</target>
        </trans-unit>
        <trans-unit id="4f8d2af30fed0ef3c4f5c0084d94c74ca73d472d" translate="yes" xml:space="preserve">
          <source>This question attempts to collect the few pearls among the dozens of bad C++ books that are published every year.</source>
          <target state="translated">이 질문은 매년 출판되는 수십 개의 나쁜 C ++ 서적 중 몇 가지 진주를 모 으려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="ff95ebfa116cc80f7d355e6706bd2f0a500253e6" translate="yes" xml:space="preserve">
          <source>Unlike many other programming languages, which are often picked up on the go from tutorials found on the Internet, few are able to quickly pick up C++ without studying a well-written C++ book. It is way too big and complex for doing this. In fact, it is so big and complex, that &lt;strong&gt;&lt;em&gt;there are very many very bad C++ books&lt;/em&gt;&lt;/strong&gt; out there. And we are not talking about bad style, but things like sporting &lt;em&gt;glaringly obvious factual errors&lt;/em&gt; and &lt;em&gt;promoting abysmally bad programming styles&lt;/em&gt;.</source>
          <target state="translated">인터넷에서 제공되는 자습서에서 이동 중에 자주 사용되는 다른 프로그래밍 언어와 달리 잘 작성된 C ++ 책을 공부하지 않고 C ++를 빠르게 선택할 수있는 사람은 거의 없습니다. 이 작업을 수행하기에는 너무 크고 복잡합니다. 실제로, 그것은 너무 크고 복잡하여, &lt;strong&gt;&lt;em&gt;매우 나쁜 C ++ 서적이 매우 많습니다&lt;/em&gt;&lt;/strong&gt; . 그리고 우리는 나쁜 스타일에 대해 이야기하는 것이 아니라 &lt;em&gt;눈에 띄게 명백한 사실적 오류를 유발&lt;/em&gt; 하고 &lt;em&gt;심하게 나쁜 프로그래밍 스타일을 홍보하는&lt;/em&gt; 것과 같은 것들을 &lt;em&gt;말합니다&lt;/em&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
