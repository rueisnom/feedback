<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/388242">
    <body>
      <group id="388242">
        <trans-unit id="f9d918d89317e4567921b7cabc4657524230f17d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.cppreference.com/&quot;&gt;&lt;em&gt;cppreference.com (C++03/11/14/17/&amp;hellip;)&lt;/em&gt;&lt;/a&gt; (initiated by Nate Kohl) is a wiki that summarizes the basic core-language features and has extensive documentation of the C++ standard library. The documentation is very precise but is easier to read than the official standard document and provides better navigation due to its wiki nature. The project documents all versions of the C++ standard and the site allows filtering the display for a specific version. The project was &lt;a href=&quot;https://isocpp.org/blog/2015/07/cppcon-2014-cppreference.com-documenting-cpp-one-edit-at-a-time-nate-kohl&quot;&gt;presented by Nate Kohl at CppCon'14&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://en.cppreference.com/&quot;&gt;&lt;em&gt;cppreference.com (C ++ 03/11/14/17 /&amp;hellip;)&lt;/em&gt;&lt;/a&gt; (по инициативе Нейта Коля) - это вики, в котором обобщены основные функции основного языка и имеется обширная документация стандартной библиотеки C ++. Документация очень точная, но ее легче читать, чем официальный стандартный документ, и она обеспечивает лучшую навигацию благодаря своей вики-природе. Проект документирует все версии стандарта C ++, а сайт позволяет фильтровать отображение для конкретной версии. Проект был &lt;a href=&quot;https://isocpp.org/blog/2015/07/cppcon-2014-cppreference.com-documenting-cpp-one-edit-at-a-time-nate-kohl&quot;&gt;представлен Нейтом Колем на CppCon'14&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3f867cd3016ffd99ea34518f168add88660e4c97" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.artima.com/shop/overview_of_the_new_cpp&quot;&gt;&lt;em&gt;Overview of the New C++ (C++11/14) (PDF only)&lt;/em&gt;&lt;/a&gt; (Scott Meyers) (&lt;strong&gt;updated for C++14&lt;/strong&gt;) These are the presentation materials (slides and some lecture notes) of a three-day training course offered by Scott Meyers, who's a highly respected author on C++. Even though the list of items is short, the quality is high.</source>
          <target state="translated">&lt;a href=&quot;http://www.artima.com/shop/overview_of_the_new_cpp&quot;&gt;&lt;em&gt;Обзор нового C ++ (C ++ 11/14) (только PDF)&lt;/em&gt;&lt;/a&gt; (Скотт Мейерс) ( &lt;strong&gt;обновлено для C ++ 14&lt;/strong&gt; ) Это презентационные материалы (слайды и некоторые конспекты лекций) трехдневного учебного курса, предлагаемого Скотт Мейерс, уважаемый автор на C ++. Хотя список предметов короткий, качество высокое.</target>
        </trans-unit>
        <trans-unit id="b5ec74aa1a68b982553e8094cda3748cf0007920" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://leanpub.com/cpp17/&quot;&gt;&lt;em&gt;C++ 17 - The Complete Guide&lt;/em&gt;&lt;/a&gt; (Nicolai M. Josuttis) This book describes all the new features introduced in the C++17 Standard covering everything from the simple ones like 'Inline Variables', 'constexpr if' all the way up to 'Polymorphic Memory Resources' and 'New and Delete with overaligned Data'.</source>
          <target state="translated">&lt;a href=&quot;https://leanpub.com/cpp17/&quot;&gt;&lt;em&gt;C ++ 17 - Полное руководство&lt;/em&gt;&lt;/a&gt; (Николай М. Йосуттис) В этой книге описаны все новые функции, представленные в Стандарте C ++ 17, охватывающие все, от простых, таких как &amp;laquo;встроенные переменные&amp;raquo;, &amp;laquo;constexpr if&amp;raquo;, до &amp;laquo;полиморфных&amp;raquo;. Ресурсы памяти &amp;raquo;и&amp;laquo; Новые и удаляемые с переподписанными данными &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="b5e04538422f8beb843d44710eb4e2c1345eda75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0139798099&quot;&gt;&lt;em&gt;Thinking in C++&lt;/em&gt;&lt;/a&gt; (Bruce Eckel, 2nd Edition, 2000).  Two volumes; is a tutorial style &lt;em&gt;free&lt;/em&gt; set of intro level books. Downloads: &lt;a href=&quot;https://ia800100.us.archive.org/10/items/TICPP2ndEdVolOne/TICPP-2nd-ed-Vol-one.zip&quot;&gt;vol 1&lt;/a&gt;, &lt;a href=&quot;https://ia800108.us.archive.org/24/items/TICPP2ndEdVolTwo/TICPP-2nd-ed-Vol-two.zip&quot;&gt;vol 2&lt;/a&gt;. Unfortunately they&amp;rsquo;re marred by a number of trivial errors (e.g. maintaining that temporaries are automatically &lt;code&gt;const&lt;/code&gt;), with no official errata list. A partial 3&lt;sup&gt;rd&lt;/sup&gt; party errata list is available at (&lt;a href=&quot;http://www.computersciencelab.com/Eckel.htm&quot;&gt;http://www.computersciencelab.com/Eckel.htm&lt;/a&gt;), but it&amp;rsquo;s apparently not maintained.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0139798099&quot;&gt;&lt;em&gt;Мышление в C ++&lt;/em&gt;&lt;/a&gt; (Брюс Экель, 2-е издание, 2000). Два тома; &lt;em&gt;бесплатный&lt;/em&gt; набор учебников начального уровня. Скачиваний: &lt;a href=&quot;https://ia800100.us.archive.org/10/items/TICPP2ndEdVolOne/TICPP-2nd-ed-Vol-one.zip&quot;&gt;том 1&lt;/a&gt; , &lt;a href=&quot;https://ia800108.us.archive.org/24/items/TICPP2ndEdVolTwo/TICPP-2nd-ed-Vol-two.zip&quot;&gt;том 2&lt;/a&gt; . К сожалению, они омрачены рядом тривиальных ошибок (например, утверждение, что временные значения автоматически являются постоянными), без официального списка ошибок. Частичный список ошибок сторонних организаций доступен по адресу ( &lt;a href=&quot;http://www.computersciencelab.com/Eckel.htm&quot;&gt;http://www.computersciencelab.com/Eckel.htm&lt;/a&gt; ), но, по-видимому, он не поддерживается.</target>
        </trans-unit>
        <trans-unit id="c20ce9f9efcac9236091048ae44674524cec84c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201183951&quot;&gt;&lt;em&gt;The C++ IO Streams and Locales&lt;/em&gt;&lt;/a&gt; (Angelika Langer and Klaus Kreft)  There's very little to say about this book except that, if you want to know anything about streams and locales, then this is the one place to find definitive answers. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=200&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201183951&quot;&gt;&lt;em&gt;C ++ IO Streams и Locales&lt;/em&gt;&lt;/a&gt; (Angelika Langer и Klaus Kreft) Об этой книге очень мало что можно сказать, за исключением того, что, если вы хотите что-то узнать о потоках и локалях, то это единственное место, где можно найти окончательные ответы. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=200&quot;&gt;[Обзор]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00eaeef927722507d7727198777261f474bf62bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201423391&quot;&gt;&lt;em&gt;Ruminations on C++&lt;/em&gt;&lt;/a&gt; - (Andrew Koenig and Barbara Moo) &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=776&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201423391&quot;&gt;&lt;em&gt;Размышления на C ++&lt;/em&gt;&lt;/a&gt; - (Эндрю Кениг и Барбара Му) &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=776&quot;&gt;[Обзор]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a9b297b1861ba6e63ab49530562cedc7d09900dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201514591&quot;&gt;&lt;em&gt;The Annotated C++ Reference Manual&lt;/em&gt;&lt;/a&gt; (Bjarne Stroustrup, Margaret A. Ellis) This book is quite outdated in the fact that it explores the 1989 C++ 2.0 version - Templates, exceptions, namespaces and new casts were not yet introduced. Saying that however, this book goes through the entire C++ standard of the time explaining the rationale, the possible implementations, and features of the language. This is not a book to learn programming principles and patterns on C++, but to understand every aspect of the C++ language.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201514591&quot;&gt;&lt;em&gt;Справочное руководство по аннотированному C ++&lt;/em&gt;&lt;/a&gt; (Бьярн Страуструп, Маргарет А. Эллис) Эта книга устарела, поскольку в ней рассматривается версия C ++ 2.0 1989 года - шаблоны, исключения, пространства имен и новые преобразования еще не были представлены. Говоря об этом, однако, эта книга проходит через весь стандарт C ++ того времени, объясняя обоснование, возможные реализации и особенности языка. Это не книга для изучения принципов и шаблонов программирования на C ++, но для понимания каждого аспекта языка C ++.</target>
        </trans-unit>
        <trans-unit id="6ccf6268415acd377f9f2e70110ceec83387a313" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201533936&quot;&gt;&lt;em&gt;Scientific and Engineering C++: An Introduction to Advanced Techniques and Examples&lt;/em&gt;&lt;/a&gt; (John Barton and Lee Nackman) 
It is a comprehensive and very detailed book that tried to explain and make use of all the features available in C++, in the context of numerical methods. It introduced at the time several new techniques, such as the Curiously Recurring Template Pattern (CRTP, also called Barton-Nackman trick).
It pioneered several techniques such as dimensional analysis and automatic differentiation. 
It came with a lot of compilable and useful code, ranging from an expression parser to a Lapack wrapper. 
The code is still available here: &lt;a href=&quot;http://www.informit.com/store/scientific-and-engineering-c-plus-plus-an-introduction-9780201533934&quot;&gt;http://www.informit.com/store/scientific-and-engineering-c-plus-plus-an-introduction-9780201533934&lt;/a&gt;.
Unfortunately, the books have become somewhat outdated in the style and C++ features, however, it was an incredible tour-de-force at the time (1994, pre-STL).
The chapters on dynamics inheritance are a bit complicated to understand and not very useful.
An updated version of this classic book that includes move semantics and the lessons learned from the STL would be very nice.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201533936&quot;&gt;&lt;em&gt;Научно-технический&lt;/em&gt;&lt;/a&gt; проект &lt;em&gt;C ++: введение в передовые методы и примеры&lt;/em&gt; (Джон Бартон и Ли Нэкман). Это всеобъемлющая и очень подробная книга, в которой пытались объяснить и использовать все функции, доступные в C ++, в контексте численных методов. В то время он представил несколько новых методов, таких как шаблон любопытного повторения шаблона (CRTP, также называемый трюком Бартона-Нэкмана). Он впервые применил несколько методов, таких как размерный анализ и автоматическое дифференцирование. Он поставляется с большим количеством компилируемого и полезного кода, начиная от синтаксического анализатора выражений и заканчивая оболочкой Lapack. Код по-прежнему доступен здесь: &lt;a href=&quot;http://www.informit.com/store/scientific-and-engineering-c-plus-plus-an-introduction-9780201533934&quot;&gt;http://www.informit.com/store/scientific-and-engineering-c-plus-plus-an-introduction-9780201533934&lt;/a&gt; . К сожалению, книги стали несколько устаревшими по стилю и функциям C ++, однако в то время это была невероятная поездка (1994, pre-STL). Главы о наследовании динамики немного сложны для понимания и не очень полезны. Обновленная версия этой классической книги, которая включает семантику перемещения и уроки, извлеченные из STL, была бы очень хороша.</target>
        </trans-unit>
        <trans-unit id="809901ca9d8ef4d4d2841999a5dd30e6c93bafbe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201543303&quot;&gt;&lt;em&gt;The Design and Evolution of C++&lt;/em&gt;&lt;/a&gt; (Bjarne Stroustrup)  If you want to know &lt;em&gt;why&lt;/em&gt; the language is the way it is, this book is where you find answers. This covers everything &lt;em&gt;before the standardization&lt;/em&gt; of C++.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201543303&quot;&gt;&lt;em&gt;Дизайн и эволюция C ++&lt;/em&gt;&lt;/a&gt; (Бьярне Страуструп) Если вы хотите узнать, &lt;em&gt;почему&lt;/em&gt; язык такой, какой он есть, эта книга - то, где вы найдете ответы. Это охватывает все &lt;em&gt;до стандартизации&lt;/em&gt; C ++.</target>
        </trans-unit>
        <trans-unit id="4d4ea160d9325161dd4cada6a6213a0dfddfc7e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201548550&quot;&gt;&lt;em&gt;Advanced C++ Programming Styles and Idioms&lt;/em&gt;&lt;/a&gt; (James Coplien)  A predecessor of the pattern movement, it describes many C++-specific &amp;ldquo;idioms&amp;rdquo;. It's certainly a very good book and might still be worth a read if you can spare the time, but quite old and not up-to-date with current C++.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201548550&quot;&gt;&lt;em&gt;Расширенные стили и идиомы программирования на C ++&lt;/em&gt;&lt;/a&gt; (Джеймс Коплиен) Предшественник движения шаблонов, он описывает множество специфических для C ++ &amp;laquo;идиом&amp;raquo;. Это, безусловно, очень хорошая книга, и, возможно, ее стоит прочитать, если вы сможете сэкономить время, но она довольно старая и не соответствует современным требованиям C ++.</target>
        </trans-unit>
        <trans-unit id="53f01f20e6fa1ca6317e73225408b3bf74d639f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201615622&quot;&gt;&lt;em&gt;Exceptional C++&lt;/em&gt;&lt;/a&gt; (Herb Sutter)  Presented as a set of puzzles, this has one of the best and thorough discussions of the proper resource management and exception safety in C++ through Resource Acquisition is Initialization (RAII) in addition to in-depth coverage of a variety of other topics including the pimpl idiom, name lookup, good class design, and the C++ memory model. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=209&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201615622&quot;&gt;&lt;em&gt;Исключительный C ++&lt;/em&gt;&lt;/a&gt; (Херб Саттер) Представленный в виде набора головоломок, он представляет собой одно из лучших и подробных обсуждений правильного управления ресурсами и безопасности исключений в C ++ посредством Resource Acquisition is Initialization (RAII) в дополнение к углубленному охвату различных других тем, включая идиому pimpl, поиск имени, хороший дизайн классов и модель памяти C ++. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=209&quot;&gt;[Обзор]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="523a09c730657d6627588ca169800b4c58f20dac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201633620&quot;&gt;&lt;em&gt;Large Scale C++ Software Design&lt;/em&gt;&lt;/a&gt; (John Lakos)  Lakos explains techniques to manage very big C++ software projects. Certainly, a good read, if it only was up to date. It was written long before C++ 98 and misses on many features (e.g. namespaces) important for large-scale projects. If you need to work in a big C++ software project, you might want to read it, although you need to take more than a grain of salt with it. The first volume of a new edition is &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201717069&quot;&gt;released in 2019&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201633620&quot;&gt;&lt;em&gt;Разработка крупномасштабного программного обеспечения C ++&lt;/em&gt;&lt;/a&gt; (Джон Лакос) Лакос объясняет методы управления очень большими проектами программного обеспечения C ++. Конечно, хорошее чтение, если бы оно было актуальным. Он был написан задолго до C ++ 98 и пропускает многие функции (например, пространства имен), важные для крупномасштабных проектов. Если вам нужно работать в большом программном проекте на C ++, вы, возможно, захотите прочитать его, хотя вам нужно взять с собой больше, чем просто соль. Первый том нового издания &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201717069&quot;&gt;вышел в 2019 году&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0f912ca087659cbbf44b90e067c4f0759022b75e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/020163371X&quot;&gt;&lt;em&gt;More Effective C++&lt;/em&gt;&lt;/a&gt; (Scott Meyers) Even more rules of thumb than &lt;em&gt;Effective C++&lt;/em&gt;. Not as important as the ones in the first book, but still good to know.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/020163371X&quot;&gt;&lt;em&gt;Более эффективный C ++&lt;/em&gt;&lt;/a&gt; (Скотт Мейерс) Еще больше практических правил, чем в &lt;em&gt;Effective C ++&lt;/em&gt; . Не так важно, как в первой книге, но все же полезно знать.</target>
        </trans-unit>
        <trans-unit id="d26a8f1b4fca58a7bc5c5dad7c92b89ac484f8b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/020170353X&quot;&gt;&lt;em&gt;Accelerated C++&lt;/em&gt;&lt;/a&gt; (Andrew Koenig and Barbara Moo, 1st Edition - August 24, 2000)  This basically covers the same ground as the &lt;em&gt;C++ Primer&lt;/em&gt;, but does so on a fourth of its space. This is largely because it does not attempt to be an introduction to &lt;em&gt;programming&lt;/em&gt;, but an introduction to &lt;em&gt;C++&lt;/em&gt; for people who've previously programmed in some other language. It has a steeper learning curve, but, for those who can cope with this, it is a very compact introduction to the language. (Historically, it broke new ground by being the first beginner's book to use a modern approach to teaching the language.) Despite this, the C++
it teaches is purely C++98. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1185&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/020170353X&quot;&gt;&lt;em&gt;Ускоренный C ++&lt;/em&gt;&lt;/a&gt; (Эндрю Кениг и Барбара Му, 1-е издание - 24 августа 2000 г.) Это в основном охватывает ту же основу, что и &lt;em&gt;C ++ Primer&lt;/em&gt; , но делает это на четвертой части своего пространства. Во многом это связано с тем, что это не попытка быть введением в &lt;em&gt;программирование&lt;/em&gt; , а введение в &lt;em&gt;C ++&lt;/em&gt; для людей, которые ранее программировали на каком-то другом языке. У него более крутая кривая обучения, но для тех, кто может с этим справиться, это очень компактное введение в язык. (Исторически сложилось так, что он первым открыл книгу, в которой использовался современный подход к обучению языку.) Несмотря на это, C ++ - это чисто C ++ 98. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1185&quot;&gt;[Обзор]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff3fb41a90c5d01bebd659d9bd295c8e020c99b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201704315&quot;&gt;&lt;em&gt;Modern C++ Design&lt;/em&gt;&lt;/a&gt; (Andrei Alexandrescu)  A groundbreaking book on advanced generic programming techniques.  Introduces policy-based design, type lists, and fundamental generic programming idioms then explains how many useful design patterns (including small object allocators, functors, factories, visitors, and multi-methods) can be implemented efficiently, modularly, and cleanly using generic programming. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=979&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201704315&quot;&gt;&lt;em&gt;Современный дизайн C ++&lt;/em&gt;&lt;/a&gt; (Андрей Александреску) Новаторская книга о передовых общих методах программирования. Представляет дизайн на основе политик, списки типов и фундаментальные общие идиомы программирования, а затем объясняет, сколько полезных шаблонов проектирования (включая распределители небольших объектов, функторы, фабрики, посетителей и мульти-методы) могут быть реализованы эффективно, модульно и чисто с использованием универсального программирования. , &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=979&quot;&gt;[Обзор]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4fd7152c6fab15b84d2e16ab604c91e0f1123d30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/020170434X&quot;&gt;&lt;em&gt;More Exceptional C++&lt;/em&gt;&lt;/a&gt; (Herb Sutter)  Covers additional exception safety topics not covered in &lt;em&gt;Exceptional C++&lt;/em&gt;, in addition to discussion of effective object-oriented programming in C++ and correct use of the STL. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=784&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/020170434X&quot;&gt;&lt;em&gt;Подробнее Exceptional C ++&lt;/em&gt;&lt;/a&gt; (Херб Саттер) Охватывает дополнительные темы безопасности исключений, не охваченные в &lt;em&gt;Exceptional C ++&lt;/em&gt; , в дополнение к обсуждению эффективного объектно-ориентированного программирования на C ++ и правильного использования STL. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=784&quot;&gt;[Обзор]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aecc92d12d9d309965d37294bbbf91c0cc27a27f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201734842&quot;&gt;&lt;em&gt;C++ Templates: The Complete Guide&lt;/em&gt;&lt;/a&gt; (David Vandevoorde and Nicolai M. Josuttis) This is &lt;em&gt;the&lt;/em&gt; book about templates as they existed before C++11.  It covers everything from the very basics to some of the most advanced template metaprogramming and explains every detail of how templates work (both conceptually and at how they are implemented) and discusses many common pitfalls.  Has excellent summaries of the One Definition Rule (ODR) and overload resolution in the appendices. A &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321714121&quot;&gt;second edition&lt;/a&gt; covering C++11, C++14 and C++17 has been already published. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=506&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201734842&quot;&gt;&lt;em&gt;Шаблоны C ++: Полное руководство&lt;/em&gt;&lt;/a&gt; (David Vandevoorde и Nicolai M. Josuttis) Это книга о шаблонах, существовавших до C ++ 11. Он охватывает все, от самых базовых до самых передовых метапрограммирования шаблонов, и объясняет каждую деталь того, как работают шаблоны (как концептуально, так и как они реализованы), и обсуждает множество распространенных ошибок. Имеет отличные сводки по правилу единого определения (ODR) и разрешению перегрузки в приложениях. &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321714121&quot;&gt;Второе издание,&lt;/a&gt; охватывающее C ++ 11, C ++ 14 и C ++ 17, уже опубликовано. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=506&quot;&gt;[Обзор]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3ad765446fca1244cf5ddfda64c97b4f86524dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201749629&quot;&gt;&lt;em&gt;Effective STL&lt;/em&gt;&lt;/a&gt; (Scott Meyers)  This aims to do the same to the part of the standard library coming from the STL what &lt;em&gt;Effective C++&lt;/em&gt; did to the language as a whole: It presents rules of thumb along with their rationale. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=67&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201749629&quot;&gt;&lt;em&gt;Effective STL&lt;/em&gt;&lt;/a&gt; (Скотт Мейерс) Это делается для того, чтобы сделать ту же часть стандартной библиотеки, исходящей из STL, что &lt;em&gt;Effective C ++&lt;/em&gt; сделал с языком в целом: он представляет практические правила вместе с их обоснованием. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=67&quot;&gt;[Обзор]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b796de57a32fff0863980a8d036a1cc9f5ba153" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201760428&quot;&gt;&lt;em&gt;Exceptional C++ Style&lt;/em&gt;&lt;/a&gt; (Herb Sutter)  Discusses generic programming, optimization, and resource management; this book also has an excellent exposition of how to write modular code in C++ by using non-member functions and the single responsibility principle. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=107&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201760428&quot;&gt;&lt;em&gt;Исключительный стиль C ++&lt;/em&gt;&lt;/a&gt; (Херб Саттер) Обсуждает общее программирование, оптимизацию и управление ресурсами; В этой книге также представлено отличное изложение того, как писать модульный код на C ++, используя функции, не являющиеся членами, и принцип единой ответственности. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=107&quot;&gt;[Обзор]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="173d19bad3dd7da8b2950b095396ce1ac6190fea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201834545&quot;&gt;&lt;em&gt;Inside the C++ Object Model&lt;/em&gt;&lt;/a&gt; (Stanley Lippman)  If you want to know how virtual member functions are commonly implemented and how base objects are commonly laid out in memory in a multi-inheritance scenario, and how all this affects performance, this is where you will find thorough discussions of such topics.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201834545&quot;&gt;&lt;em&gt;Внутри объектной модели C ++&lt;/em&gt;&lt;/a&gt; (Стэнли Липпман) Если вы хотите узнать, как обычно реализуются виртуальные функции-члены и как базовые объекты обычно размещаются в памяти в сценарии с множественным наследованием, и как все это влияет на производительность, то здесь вы найдете найти подробные обсуждения таких тем.</target>
        </trans-unit>
        <trans-unit id="e4fd3ad4d5cd5aa7b7f348a72cc94f3d3cf4d194" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321113586&quot;&gt;&lt;em&gt;C++ Coding Standards&lt;/em&gt;&lt;/a&gt; (Herb Sutter and Andrei Alexandrescu) &amp;ldquo;Coding standards&amp;rdquo; here doesn't mean &amp;ldquo;how many spaces should I indent my code?&amp;rdquo;  This book contains 101 best practices, idioms, and common pitfalls that can help you to write correct, understandable, and efficient C++ code. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1439&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321113586&quot;&gt;&lt;em&gt;Стандарты кодирования C ++&lt;/em&gt;&lt;/a&gt; (Херб Саттер и Андрей Александреску) &amp;laquo;Стандарты кодирования&amp;raquo; здесь не означают &amp;laquo;сколько пробелов я должен сделать отступом для моего кода?&amp;raquo; Эта книга содержит 101 передовой опыт, идиомы и распространенные подводные камни, которые могут помочь вам написать правильный, понятный и эффективный код C ++. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1439&quot;&gt;[Обзор]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b4287f65d0b57579f8434f72cdf1ce3a5aba6664" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321227255&quot;&gt;&lt;em&gt;C++ Template Metaprogramming&lt;/em&gt;&lt;/a&gt; (David Abrahams and Aleksey Gurtovoy)</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321227255&quot;&gt;&lt;em&gt;Шаблон метапрограммирования на С ++&lt;/em&gt;&lt;/a&gt; (Дэвид Абрахамс и Алексей Гуртовой)</target>
        </trans-unit>
        <trans-unit id="2230af863f13bba81183ad8f2f61b4af7dfdb549" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321334876&quot;&gt;&lt;em&gt;Effective C++&lt;/em&gt;&lt;/a&gt; (Scott Meyers, 3rd Edition - May 22, 2005)  This was written with the aim of being the best second book C++ programmers should read, and it succeeded. Earlier editions were aimed at programmers coming from C, the third edition changes this and targets programmers coming from languages like Java. It presents ~50 easy-to-remember rules of thumb along with their rationale in a very accessible (and enjoyable) style. For C++11 and C++14 the examples and a few issues are outdated and Effective Modern C++ should be preferred. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=700&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321334876&quot;&gt;&lt;em&gt;Эффективный C ++&lt;/em&gt;&lt;/a&gt; (Скотт Мейерс, 3-е издание - 22 мая 2005 г.) Это было написано с целью стать лучшей второй книгой, которую должны читать программисты на C ++, и это удалось. Предыдущие выпуски были предназначены для программистов, пришедших из C, третье издание изменяет это и предназначается для программистов из таких языков, как Java. Он представляет ~ 50 легко запоминающихся эмпирических правил вместе с их обоснованием в очень доступном (и приятном) стиле. Для C ++ 11 и C ++ 14 примеры и некоторые проблемы устарели, и Effective Modern C ++ следует отдавать предпочтение. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=700&quot;&gt;[Обзор]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="697a266ccc25bae4c5d622426ecc19cee0f5c6a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321623215&quot;&gt;&lt;em&gt;C++ Standard Library Tutorial and Reference&lt;/em&gt;&lt;/a&gt; (Nicolai Josuttis) (&lt;strong&gt;updated for C++11&lt;/strong&gt;) &lt;em&gt;The&lt;/em&gt; introduction and reference for the C++ Standard Library. The second edition (released on April 9, 2012) covers C++11. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1849&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321623215&quot;&gt;&lt;em&gt;Учебное пособие и справочник по стандартной библиотеке C ++&lt;/em&gt;&lt;/a&gt; (Николай Йосуттис) ( &lt;strong&gt;обновлено для C ++ 11&lt;/strong&gt; ) Введение и справочник по стандартной библиотеке C ++. Второе издание (выпущено 9 апреля 2012 г.) охватывает C ++ 11. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1849&quot;&gt;[Обзор]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1bc74438394b9ac362f7c5065b644f554d95f5fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321714113&quot;&gt;&lt;em&gt;C++ Primer&lt;/em&gt;&lt;/a&gt; * (Stanley Lippman, Jos&amp;eacute;e Lajoie, and Barbara E. Moo)  (&lt;strong&gt;updated for C++11&lt;/strong&gt;) Coming at 1k pages, this is a very thorough introduction into C++ that covers just about everything in the language in a very accessible format and in great detail. The fifth edition (released August 16, 2012) covers C++11. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1848&quot;&gt;[Review]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321714113&quot;&gt;&lt;em&gt;Учебник по C ++&lt;/em&gt;&lt;/a&gt; * (Стэнли Липпман, Жозе Ладжой и Барбара Э. Му) ( &lt;strong&gt;обновлено для C ++ 11&lt;/strong&gt; ). Это 1-страничное введение, представляющее собой очень подробное введение в C ++, охватывающее практически все в языке в очень доступном формате. и очень подробно. Пятое издание (выпущено 16 августа 2012 г.) охватывает C ++ 11. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1848&quot;&gt;[Обзор]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="869dfc1654977728308026b7b2e1e3e106d213f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321958322&quot;&gt;&lt;em&gt;The C++ Programming Language&lt;/em&gt;&lt;/a&gt; (Bjarne Stroustrup) (&lt;strong&gt;updated for C++11&lt;/strong&gt;) The classic introduction to C++ by its creator. Written to parallel the classic K&amp;amp;R, this indeed reads very much like it and covers just about everything from the core language to the standard library, to programming paradigms to the language's philosophy. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1853&quot;&gt;[Review]&lt;/a&gt; Note: All releases of the C++ standard are tracked in this question: &lt;a href=&quot;https://stackoverflow.com/a/4653479/14065&quot;&gt;Where do I find the current C++ standard&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321958322&quot;&gt;&lt;em&gt;Язык программирования C ++&lt;/em&gt;&lt;/a&gt; (Бьярне Страуструп) ( &lt;strong&gt;обновлен для C ++ 11&lt;/strong&gt; ) Классическое введение в C ++ его создателем. Написанный параллельно классическому K &amp;amp; R, он действительно очень похож на него и охватывает практически все: от базового языка до стандартной библиотеки, от парадигм программирования до философии языка. &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1853&quot;&gt;[Обзор]&lt;/a&gt; Примечание. Все выпуски стандарта C ++ отслеживаются в следующем вопросе: &lt;a href=&quot;https://stackoverflow.com/a/4653479/14065&quot;&gt;Где найти текущий стандарт C ++&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="da0159f95ed75e7537af87baced3febe60af7587" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321992784&quot;&gt;&lt;em&gt;Programming: Principles and Practice Using C++&lt;/em&gt;&lt;/a&gt; (Bjarne Stroustrup, 2nd Edition - May 25, 2014) (&lt;strong&gt;updated for C++11/C++14&lt;/strong&gt;) An introduction to programming using C++ by the creator of the language. A good read, that assumes no previous programming experience, but is not only for beginners.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321992784&quot;&gt;&lt;em&gt;Программирование: принципы и практика использования C ++&lt;/em&gt;&lt;/a&gt; (Бьярн Страуструп, 2-е издание - 25 мая 2014 г.) ( &lt;strong&gt;обновлено для C ++ 11 / C ++ 14&lt;/strong&gt; ) Введение в программирование с использованием C ++ создателем языка. Хорошее чтение, которое не предполагает никакого предыдущего опыта программирования, но не только для начинающих.</target>
        </trans-unit>
        <trans-unit id="c9020f8cd0be475fedb4de9123508cc326364359" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1460966163&quot;&gt;&lt;em&gt;Advanced C++ Metaprogramming&lt;/em&gt;&lt;/a&gt; (Davide Di Gennaro) A pre-C++11 manual of TMP techniques, focused more on practice than theory.  There are a ton of snippets in this book, some of which are made obsolete by type traits, but the techniques, are nonetheless useful to know.  If you can put up with the quirky formatting/editing, it is easier to read than Alexandrescu, and arguably, more rewarding.  For more experienced developers, there is a good chance that you may pick up something about a dark corner of C++ (a quirk) that usually only comes about through extensive experience.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1460966163&quot;&gt;&lt;em&gt;Advanced C ++ Metaprogramming&lt;/em&gt;&lt;/a&gt; (Davide Di Gennaro) Руководство по методам TMP до C ++ 11, ориентированное больше на практику, чем на теорию. В этой книге содержится множество фрагментов, некоторые из которых устарели по типу черт, но методы, тем не менее, полезно знать. Если вы можете смириться с причудливым форматированием / редактированием, его легче читать, чем Александреску, и, возможно, это более полезно. Для более опытных разработчиков есть хороший шанс, что вы можете найти что-то о темном уголке C ++ (причуды), который обычно появляется только благодаря обширному опыту.</target>
        </trans-unit>
        <trans-unit id="491d29c723a7d473841134c6eb63abd620ab5196" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1491903996&quot;&gt;&lt;em&gt;Effective Modern C++&lt;/em&gt;&lt;/a&gt; (Scott Meyers) This is basically the new version of &lt;em&gt;Effective C++&lt;/em&gt;, aimed at C++ programmers making the transition from C++03 to C++11 and C++14.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1491903996&quot;&gt;&lt;em&gt;Effective Modern C ++&lt;/em&gt;&lt;/a&gt; (Скотт Мейерс) Это в основном новая версия &lt;em&gt;Effective C ++&lt;/em&gt; , предназначенная для программистов на C ++, которые переходят с C ++ 03 на C ++ 11 и C ++ 14.</target>
        </trans-unit>
        <trans-unit id="f8fe1bee78382d5f7dfe425a0e1cadbd3e95e47a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1933988770&quot;&gt;&lt;em&gt;C++ Concurrency In Action&lt;/em&gt;&lt;/a&gt; (Anthony Williams) A book covering C++11 concurrency support including the thread library, the atomics library, the C++ memory model, locks and mutexes, as well as issues of designing and debugging multithreaded applications. A &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1617294691&quot;&gt;second edition&lt;/a&gt; covering C++14 and C++17 has been already published.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1933988770&quot;&gt;&lt;em&gt;C ++ Concurrency In Action&lt;/em&gt;&lt;/a&gt; (Энтони Уильямс) Книга, посвященная поддержке параллелизма C ++ 11, включая библиотеку потоков, библиотеку атомарности, модель памяти C ++, блокировки и мьютексы, а также вопросы проектирования и отладки многопоточных приложений. &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1617294691&quot;&gt;Второе издание,&lt;/a&gt; охватывающее C ++ 14 и C ++ 17, уже опубликовано.</target>
        </trans-unit>
        <trans-unit id="ce7269dd3f09530ebbf954f9bc271955ae3e7389" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/B00F8CWGOS&quot;&gt;&lt;em&gt;A Tour of C++&lt;/em&gt;&lt;/a&gt; (Bjarne Stroustrup) (&lt;strong&gt;&lt;a href=&quot;http://a.co/f7WPDeD&quot;&gt;2nd edition  for C++17&lt;/a&gt;&lt;/strong&gt;) The &amp;ldquo;tour&amp;rdquo; is a quick (about 180 pages and 14 chapters) tutorial overview of all of standard C++ (language and standard library, &lt;strong&gt;and using C++11&lt;/strong&gt;) at a moderately high level for people who already know C++ or at least are experienced programmers. This book is an extended version of the material that constitutes Chapters 2-5 of The C++ Programming Language, 4th edition.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/B00F8CWGOS&quot;&gt;&lt;em&gt;Тур по C ++&lt;/em&gt;&lt;/a&gt; (Бьярне Страуструп) ( &lt;strong&gt;&lt;a href=&quot;http://a.co/f7WPDeD&quot;&gt;2-е издание для C ++ 17&lt;/a&gt;&lt;/strong&gt; ) &amp;laquo;Тур&amp;raquo; представляет собой краткий обзор (около 180 страниц и 14 глав) учебного пособия по всем стандартным C ++ (язык и стандартная библиотека, &lt;strong&gt;и с использованием C ++ 11&lt;/strong&gt; ) на умеренно высоком уровне для людей, которые уже знают C ++ или хотя бы являются опытными программистами. Эта книга представляет собой расширенную версию материала, который составляет главы 2-5 языка программирования C ++, 4-е издание.</target>
        </trans-unit>
        <trans-unit id="6b6697a0c2a1482e966dda3d993d2b7c0dcb00c2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The C++&lt;a href=&quot;https://www.iso.org/standard/50372.html&quot;&gt;11&lt;/a&gt;/&lt;a href=&quot;https://www.iso.org/standard/64029.html&quot;&gt;14&lt;/a&gt;/&lt;a href=&quot;https://www.iso.org/standard/68564.html&quot;&gt;17&lt;/a&gt; Standard (INCITS/ISO/IEC 14882:2011/2014/2017)&lt;/em&gt; This, of course, is the final arbiter of all that is or isn't C++. Be aware, however, that it is intended purely as a reference for &lt;em&gt;experienced&lt;/em&gt; users willing to devote considerable time and effort to its understanding. The C++17 standard is released in electronic form for 198 Swiss Francs.</source>
          <target state="translated">&lt;em&gt;Стандарт C ++ 11/14/17 (INCITS / ISO / IEC 14882: 2011/2014/2017)&lt;/em&gt; Это, конечно, окончательный арбитр всего, что является или не является C ++. Имейте в виду, однако, что это предназначено исключительно как справка для &lt;em&gt;опытных&lt;/em&gt; пользователей, желающих посвятить значительное время и усилия его пониманию. Стандарт C ++ 17 выпущен в электронном виде за 198 швейцарских франков.</target>
        </trans-unit>
        <trans-unit id="1f996fa05714bb967d1d3dad45b15e3a4578137a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C++11/14/17/&amp;hellip; References:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;C ++ 11/14/17 /&amp;hellip; Список литературы:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="461f31882057ec224f923e0dcf40c2beacb287a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Some information contained within these books may not be up-to-date or no longer considered best practice.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Некоторая информация, содержащаяся в этих книгах, может быть устаревшей или более не считаться передовой практикой.</target>
        </trans-unit>
        <trans-unit id="d814fecbb236ff95202084ea95f4b88e4cce5252" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;
* Not to be confused with &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0672326973&quot;&gt;&lt;em&gt;C++ Primer Plus&lt;/em&gt;&lt;/a&gt; (Stephen Prata), with a significantly less favorable &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1744&quot;&gt;review&lt;/a&gt;.
&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;* Не путать с &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0672326973&quot;&gt;&lt;em&gt;C ++ Primer Plus&lt;/em&gt;&lt;/a&gt; (Стивен Прата) со значительно менее благоприятным &lt;a href=&quot;http://accu.org/index.php?module=bookreviews&amp;amp;func=search&amp;amp;rid=1744&quot;&gt;обзором&lt;/a&gt; .&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="fafbbffd1a85d713ba25d35cebf35d94da93577c" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;*Note: FAQs and other resources can be found in the &lt;a href=&quot;https://stackoverflow.com/tags/c%2b%2b/info&quot;&gt;C++ tag info&lt;/a&gt; and under &lt;a href=&quot;/questions/tagged/c%2b%2b-faq&quot;&gt;c++-faq&lt;/a&gt;. &lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;* Примечание: часто задаваемые вопросы и другие ресурсы можно найти в информации о &lt;a href=&quot;https://stackoverflow.com/tags/c%2b%2b/info&quot;&gt;тегах C ++&lt;/a&gt; и в разделе &lt;a href=&quot;/questions/tagged/c%2b%2b-faq&quot;&gt;c ++ - faq&lt;/a&gt; .&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="4d064726954a17487f94e931f5b157b733ec22ed" translate="yes" xml:space="preserve">
          <source>Advanced</source>
          <target state="translated">Advanced</target>
        </trans-unit>
        <trans-unit id="60575a6ebba9f780b4312324662169830d12bea1" translate="yes" xml:space="preserve">
          <source>Beginner</source>
          <target state="translated">Beginner</target>
        </trans-unit>
        <trans-unit id="eb8de9ce8757ee3c542141ac80ff3b33dc04edff" translate="yes" xml:space="preserve">
          <source>Best practices</source>
          <target state="translated">Передовые методы</target>
        </trans-unit>
        <trans-unit id="071175830fe7092b1a52f8c955bf4b092df97637" translate="yes" xml:space="preserve">
          <source>Classics / Older</source>
          <target state="translated">Классика старше</target>
        </trans-unit>
        <trans-unit id="b1cfe72fd27178870354f9f4e07bb82072caea55" translate="yes" xml:space="preserve">
          <source>Intermediate</source>
          <target state="translated">Intermediate</target>
        </trans-unit>
        <trans-unit id="7249db688fcac7e2a2f2bf1b7ad9f55e77e33b97" translate="yes" xml:space="preserve">
          <source>Introductory, no previous programming experience</source>
          <target state="translated">Введение,без предыдущего опыта программирования</target>
        </trans-unit>
        <trans-unit id="4c2b843e44fb7dca8e7d3407c76bdd778c47418b" translate="yes" xml:space="preserve">
          <source>Introductory, with previous programming experience</source>
          <target state="translated">Введение,с предыдущим опытом программирования</target>
        </trans-unit>
        <trans-unit id="af1dcc4aaa25fe83b8a89ba75807edec69e8d514" translate="yes" xml:space="preserve">
          <source>Please edit the accepted answer to provide &lt;strong&gt;quality books&lt;/strong&gt; and an approximate skill level &amp;mdash; &lt;em&gt;preferably&lt;/em&gt;&lt;strong&gt;after&lt;/strong&gt;&lt;em&gt;discussing your addition in &lt;a href=&quot;http://chat.stackoverflow.com/rooms/10/loungec&quot;&gt;the C++ chat room&lt;/a&gt;&lt;/em&gt;. (The regulars might mercilessly undo your work if they disagree with a recommendation.) Add a short blurb/description about each book that you have personally read/benefited from. Feel free to debate quality, headings, etc. Books that meet the criteria will be added to the list.  Books that have reviews by the Association of C and C++ Users (ACCU) have links to the review.</source>
          <target state="translated">Отредактируйте принятый ответ, чтобы предоставить &lt;strong&gt;качественные книги&lt;/strong&gt; и приблизительный уровень навыков - &lt;em&gt;желательно&lt;/em&gt; &lt;strong&gt;после&lt;/strong&gt; &lt;em&gt;обсуждения вашего добавления в &lt;a href=&quot;http://chat.stackoverflow.com/rooms/10/loungec&quot;&gt;чате C ++&lt;/a&gt;&lt;/em&gt; . (Завсегдатаи могут беспощадно отменить вашу работу, если они не согласятся с рекомендацией.) Добавьте краткое описание / описание каждой книги, которую вы лично прочитали / получили пользу. Не стесняйтесь обсуждать качество, заголовки и т. Д. Книги, которые соответствуют критериям, будут добавлены в список. Книги с рецензиями Ассоциации пользователей C и C ++ (ACCU) содержат ссылки на рецензии.</target>
        </trans-unit>
        <trans-unit id="8490ad3770e2562a83a8997c6373d3d062ef269a" translate="yes" xml:space="preserve">
          <source>Reference Style - All Levels</source>
          <target state="translated">Справочный стиль-все уровни</target>
        </trans-unit>
        <trans-unit id="87501ec8f9c14578de24897ca30d9f6d23a240db" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md&quot;&gt;&lt;em&gt;C++ Core Guidelines (C++11/14/17/&amp;hellip;)&lt;/em&gt;&lt;/a&gt; (edited by Bjarne Stroustrup and Herb Sutter) is an evolving online document consisting of a set of guidelines for using modern C++ well. The guidelines are focused on relatively higher-level issues, such as interfaces, resource management, memory management and concurrency affecting application architecture and library design. The project was &lt;a href=&quot;https://isocpp.org/blog/2015/09/bjarne-stroustrup-announces-cpp-core-guidelines&quot;&gt;announced at CppCon'15 by Bjarne Stroustrup and others&lt;/a&gt; and welcomes contributions from the community. Most guidelines are supplemented with a rationale and examples as well as discussions of possible tool support. Many rules are designed specifically to be automatically checkable by static analysis tools.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md&quot;&gt;&lt;em&gt;Основные руководящие принципы C ++ (C ++ 11/14/17 /&amp;hellip;)&lt;/em&gt;&lt;/a&gt; (отредактированные Бьярном Страуструпом и Хербом Саттером) представляют собой развивающийся онлайн-документ, состоящий из набора руководящих принципов для хорошего использования современного C ++. Рекомендации ориентированы на проблемы более высокого уровня, такие как интерфейсы, управление ресурсами, управление памятью и параллелизм, влияющие на архитектуру приложения и дизайн библиотеки. Проект был &lt;a href=&quot;https://isocpp.org/blog/2015/09/bjarne-stroustrup-announces-cpp-core-guidelines&quot;&gt;объявлен на CppCon'15 Бьярном Страуструпом и другими&lt;/a&gt; и приветствует вклад сообщества. Большинство руководств дополнены обоснованием и примерами, а также обсуждениями возможной поддержки инструмента. Многие правила специально разработаны для автоматической проверки средствами статического анализа.</target>
        </trans-unit>
        <trans-unit id="8673b09ab00c20f74df61950867054395adce51f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://isocpp.org/faq&quot;&gt;&lt;em&gt;C++ Super-FAQ&lt;/em&gt;&lt;/a&gt; (Marshall Cline, Bjarne Stroustrup and others) is an effort by the Standard C++ Foundation to unify the C++ FAQs previously maintained individually by Marshall Cline and Bjarne Stroustrup and also incorporating new contributions. The items mostly address issues at an intermediate level and are often written with a humorous tone. Not all items might be fully up to date with the latest edition of the C++ standard yet.</source>
          <target state="translated">&lt;a href=&quot;https://isocpp.org/faq&quot;&gt;&lt;em&gt;Super-FAQ по C ++&lt;/em&gt;&lt;/a&gt; (Marshall Cline, Bjarne Stroustrup и др.) - это попытка Standard C ++ Foundation объединить часто задаваемые вопросы по C ++, которые ранее поддерживались индивидуально Marshall Cline и Bjarne Stroustrup, а также включить новые материалы. Предметы в основном касаются вопросов на промежуточном уровне и часто написаны с юмористическим тоном. Не все элементы могут быть полностью обновлены до последней версии стандарта C ++.</target>
        </trans-unit>
        <trans-unit id="4de753951e85340f9c4af73faeb307883e1b71fc" translate="yes" xml:space="preserve">
          <source>The C++17 standard is available, but seemingly not in an economical form &amp;ndash; &lt;a href=&quot;https://www.iso.org/standard/68564.html&quot;&gt;directly from the ISO&lt;/a&gt; it costs 198 Swiss Francs (about $200 US). For most people, the &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/n4659.pdf&quot;&gt;final draft before standardization&lt;/a&gt; is more than adequate (and free). Many will prefer an &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/n4778.pdf&quot;&gt;even newer draft&lt;/a&gt;, documenting new features that are likely to be included in C++20.</source>
          <target state="translated">Стандарт C ++ 17 доступен, но, по-видимому, не в экономичной форме - &lt;a href=&quot;https://www.iso.org/standard/68564.html&quot;&gt;напрямую от ISO&lt;/a&gt; он стоит 198 швейцарских франков (около 200 долларов США). Для большинства людей &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/n4659.pdf&quot;&gt;окончательный проект до стандартизации&lt;/a&gt; более чем адекватен (и бесплатен). Многие предпочтут &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/n4778.pdf&quot;&gt;еще более новый черновик&lt;/a&gt; , документирующий новые функции, которые, вероятно, будут включены в C ++ 20.</target>
        </trans-unit>
        <trans-unit id="1f3cb028b6da88b6c74653791f11e503534cce53" translate="yes" xml:space="preserve">
          <source>The Definitive C++ Book Guide and List</source>
          <target state="translated">Определительный справочник и список книг на C++</target>
        </trans-unit>
        <trans-unit id="4f8d2af30fed0ef3c4f5c0084d94c74ca73d472d" translate="yes" xml:space="preserve">
          <source>This question attempts to collect the few pearls among the dozens of bad C++ books that are published every year.</source>
          <target state="translated">В этом вопросе предпринимается попытка собрать несколько жемчужин среди десятков плохих книг на С++,которые издаются каждый год.</target>
        </trans-unit>
        <trans-unit id="ff95ebfa116cc80f7d355e6706bd2f0a500253e6" translate="yes" xml:space="preserve">
          <source>Unlike many other programming languages, which are often picked up on the go from tutorials found on the Internet, few are able to quickly pick up C++ without studying a well-written C++ book. It is way too big and complex for doing this. In fact, it is so big and complex, that &lt;strong&gt;&lt;em&gt;there are very many very bad C++ books&lt;/em&gt;&lt;/strong&gt; out there. And we are not talking about bad style, but things like sporting &lt;em&gt;glaringly obvious factual errors&lt;/em&gt; and &lt;em&gt;promoting abysmally bad programming styles&lt;/em&gt;.</source>
          <target state="translated">В отличие от многих других языков программирования, которые часто берутся на ходу из учебных пособий, найденных в Интернете, лишь немногие способны быстро освоить C ++ без изучения хорошо написанной книги по C ++. Это слишком большой и сложный для этого. На самом деле, он настолько большой и сложный, что &lt;strong&gt;&lt;em&gt;существует очень много очень плохих книг по С ++&lt;/em&gt;&lt;/strong&gt; . И мы говорим не о плохом стиле, а о таких вещах, как &lt;em&gt;выявление очевидных фактических ошибок&lt;/em&gt; и &lt;em&gt;пропаганда ужасно плохих стилей программирования&lt;/em&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
