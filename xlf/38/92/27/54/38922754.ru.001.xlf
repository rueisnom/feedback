<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/38922754">
    <body>
      <group id="38922754">
        <trans-unit id="8b386deca9817df4d9d4e35b35696c47d7c22b92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Add the following in your build gradle file in Android Studio.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Добавьте следующее в свой файл сборки Gradle в Android Studio.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="043c1435d1a44ba8a90d5868a5f9dd20fd27cb98" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Create the Application class and initialize it.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Создайте класс Application и инициализируйте его.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="81c0f51881f9e57861ba31f7d4bfe757dbd63520" translate="yes" xml:space="preserve">
          <source>Again, obvious to those who have any experience using Gradle in Java, but it took me a while to figure this out. If you see people saying &quot;Oh, just add &lt;code&gt;compile 'this-or-that.jar'&lt;/code&gt;&quot; or something similar, know that &lt;code&gt;compile&lt;/code&gt; is a directive in that build.gradle file that indicates compile-time dependencies. &lt;a href=&quot;https://docs.gradle.org/current/userguide/artifact_dependencies_tutorial.html&quot;&gt;Here's&lt;/a&gt; the official Gradle page on dependency management.</source>
          <target state="translated">Опять же, очевидно для тех, кто имеет опыт использования Gradle в Java, но мне потребовалось время, чтобы понять это. Если вы видите людей, говорящих &amp;laquo;О, просто добавьте &lt;code&gt;compile 'this-or-that.jar'&lt;/code&gt; &amp;raquo; или что-то подобное, знайте, что &lt;code&gt;compile&lt;/code&gt; - это директива в этом файле build.gradle, которая указывает зависимости времени компиляции. &lt;a href=&quot;https://docs.gradle.org/current/userguide/artifact_dependencies_tutorial.html&quot;&gt;Вот&lt;/a&gt; официальная страница Gradle по управлению зависимостями.</target>
        </trans-unit>
        <trans-unit id="234c2a3fe24c3c2aafef39b07961d880849b9184" translate="yes" xml:space="preserve">
          <source>Also add this to Application class:</source>
          <target state="translated">Также добавьте это в класс приложения:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Расширить фрагмент</target>
        </trans-unit>
        <trans-unit id="51c32976d4b6b341c9b2368a542e456961a6e25d" translate="yes" xml:space="preserve">
          <source>Fifth Discovery: ThreeTenABP Is Managed by Jake Wharton, not by ThreeTen</source>
          <target state="translated">Пятое открытие:ThreeTenABP управляется Джейком Уортоном,а не ThreeTen.</target>
        </trans-unit>
        <trans-unit id="ca523badfe96a858d4444118375d02317a8dd6ee" translate="yes" xml:space="preserve">
          <source>First Discovery: Why You Have To Use &lt;em&gt;ThreeTenABP&lt;/em&gt; Instead of &lt;em&gt;java.time&lt;/em&gt;, &lt;em&gt;ThreeTen-Backport&lt;/em&gt;, or even &lt;em&gt;Joda-Time&lt;/em&gt;</source>
          <target state="translated">Первое открытие: почему вы должны использовать &lt;em&gt;ThreeTenABP&lt;/em&gt; вместо &lt;em&gt;java.time&lt;/em&gt; , &lt;em&gt;ThreeTen-Backport&lt;/em&gt; или даже &lt;em&gt;Joda-Time&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="15286937432855e93f11d04a17f438b14df5894a" translate="yes" xml:space="preserve">
          <source>Fourth Discovery: Project Dependencies Are Listed in [project dir]/app/build.gradle</source>
          <target state="translated">Четвертое открытие:Зависимости проекта перечислены в [project dir]appbuild.gradle.</target>
        </trans-unit>
        <trans-unit id="7f9680d588b5b23072e24ad21e2bcf901def9be0" translate="yes" xml:space="preserve">
          <source>High on my to-do list is to read the Gradle docs &lt;a href=&quot;https://gradle.org/getting-started-gradle/&quot;&gt;here&lt;/a&gt;, including their free eBooks. Had I read these weeks ago when I started learning Android, I would surely have known that Gradle can use the Maven Central Repository to manage dependencies in Android Projects. Furthermore, as detailed in &lt;a href=&quot;https://stackoverflow.com/a/26630422/2065427&quot;&gt;this&lt;/a&gt; StackOverflow answer, as of Android Studio 0.8.9, Gradle uses Maven Central Repository implicitly through Bintray's JCenter, which means you don't have to do any extra config to set up the repo -- you just list the dependencies.</source>
          <target state="translated">Главное в моем списке дел - прочитать &lt;a href=&quot;https://gradle.org/getting-started-gradle/&quot;&gt;здесь&lt;/a&gt; документы Gradle, включая их бесплатные электронные книги. Если бы я читал эти недели назад, когда начал изучать Android, я бы наверняка знал, что Gradle может использовать центральный репозиторий Maven для управления зависимостями в проектах Android. Кроме того, как подробно описано в &lt;a href=&quot;https://stackoverflow.com/a/26630422/2065427&quot;&gt;этом&lt;/a&gt; ответе StackOverflow, начиная с Android Studio 0.8.9, Gradle неявно использует Maven Central Repository через JCenter Bintray, что означает, что вам не нужно делать никаких дополнительных настроек для настройки репо - вы просто перечисляете зависимостей.</target>
        </trans-unit>
        <trans-unit id="7d88bca3ed29444fd921181e6ca50269fb0579b6" translate="yes" xml:space="preserve">
          <source>How to use ThreeTenABP in Android Project</source>
          <target state="translated">Как использовать ThreeTenABP в Android проекте</target>
        </trans-unit>
        <trans-unit id="65913a11c393121b734aed4bbf75c9211653271b" translate="yes" xml:space="preserve">
          <source>However, &lt;code&gt;java.time&lt;/code&gt; was introduced in &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_version_history#Java_SE_8&quot;&gt;Java 8&lt;/a&gt;. Android up to &lt;a href=&quot;https://en.wikipedia.org/wiki/Android_Marshmallow&quot;&gt;Marshmallow&lt;/a&gt; runs on Java 7 (&quot;Android N&quot; is the first version to introduce Java 8 language features). Thus, unless you're only targeting &lt;a href=&quot;https://en.wikipedia.org/wiki/Android_Nougat&quot;&gt;Android N &lt;em&gt;Nougat&lt;/em&gt;&lt;/a&gt; and above, you can't rely on Java 8 language features (I'm not actually sure this is 100% true, but this is how I understand it). So &lt;code&gt;java.time&lt;/code&gt; is out.</source>
          <target state="translated">Однако &lt;code&gt;java.time&lt;/code&gt; был представлен в &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_version_history#Java_SE_8&quot;&gt;Java 8&lt;/a&gt; . Android до &lt;a href=&quot;https://en.wikipedia.org/wiki/Android_Marshmallow&quot;&gt;Marshmallow&lt;/a&gt; работает на Java 7 (&amp;laquo;Android N&amp;raquo; - первая версия, представившая возможности языка Java 8). Таким образом, если вы не ориентируетесь только на &lt;a href=&quot;https://en.wikipedia.org/wiki/Android_Nougat&quot;&gt;Android N &lt;em&gt;Nougat&lt;/em&gt;&lt;/a&gt; и выше, вы не можете полагаться на функции языка Java 8 (на самом деле я не уверен, что это на 100% верно, но я так понимаю). Так что &lt;code&gt;java.time&lt;/code&gt; отсутствует.</target>
        </trans-unit>
        <trans-unit id="e1623cd9e694b308f97a0270070a1ab17bfe4d6c" translate="yes" xml:space="preserve">
          <source>I am asking this question because I am new to Java and Android and I searched for hours trying to figure this out. The answer came from a combination of related answers, so I figured I would document what I learned for anyone else who may be struggling. See answer.</source>
          <target state="translated">Я задаю этот вопрос,потому что я новичок в Java и Android,и я искал в течение нескольких часов,пытаясь выяснить это.Ответ пришел из комбинации соответствующих ответов,так что я решил,что я буду документировать то,что я узнал для любого другого,кто,возможно,борется.Смотрите ответ.</target>
        </trans-unit>
        <trans-unit id="f6a6eaeeaec5499d0673f54be0c51bf990cd7b2a" translate="yes" xml:space="preserve">
          <source>I am using Android Studio 2.1.2. My Java setup is the following:</source>
          <target state="translated">Я использую Android Studio 2.1.2.Моя настройка Java следующая:</target>
        </trans-unit>
        <trans-unit id="afae2a39e63fa3ff30f2c45097982b44646282ae" translate="yes" xml:space="preserve">
          <source>Next is &lt;a href=&quot;http://www.threeten.org/threetenbp/&quot;&gt;&lt;em&gt;ThreeTen-Backport&lt;/em&gt;&lt;/a&gt;, which back-ports much (but not all) of the Java 8 &lt;code&gt;java.time&lt;/code&gt; functionality to Java 7. This is fine for most use cases, but, as indicated in the &lt;a href=&quot;https://github.com/JakeWharton/ThreeTenABP#why-not-use-threetenbp&quot;&gt;ThreeTenABP readme&lt;/a&gt;, it has performance issues with Android.</source>
          <target state="translated">Далее следует &lt;a href=&quot;http://www.threeten.org/threetenbp/&quot;&gt;&lt;em&gt;ThreeTen-Backport&lt;/em&gt;&lt;/a&gt; , который &lt;em&gt;переносит&lt;/em&gt; большую часть (но не все) функциональности Java 8 &lt;code&gt;java.time&lt;/code&gt; в Java 7. Это хорошо для большинства случаев использования, но, как указано в &lt;a href=&quot;https://github.com/JakeWharton/ThreeTenABP#why-not-use-threetenbp&quot;&gt;файле readme для ThreeTenABP&lt;/a&gt; , он имеет проблемы с производительностью Android.</target>
        </trans-unit>
        <trans-unit id="77d7408d34d8c05285e9b0dc13bd9cd08a7879d2" translate="yes" xml:space="preserve">
          <source>Now it all seems pretty easy. You can get modern time handling functions in an Android project by making sure your &lt;code&gt;[project folder]/app/build.gradle&lt;/code&gt; file has the &lt;code&gt;implementation 'com.jakewharton.threetenabp:threetenabp:1.2.1'&lt;/code&gt; line in its &lt;code&gt;dependencies&lt;/code&gt; section:</source>
          <target state="translated">Теперь все это кажется довольно простым. Вы можете получить современные функции обработки времени в проекте Android, убедившись, что в вашем файле &lt;code&gt;[project folder]/app/build.gradle&lt;/code&gt; есть &lt;code&gt;implementation 'com.jakewharton.threetenabp:threetenabp:1.2.1'&lt;/code&gt; в разделе &lt;code&gt;dependencies&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bab5cabe857d5be048483911ddaa35642de960b3" translate="yes" xml:space="preserve">
          <source>Second Discovery: Build Tools and Dependency Management</source>
          <target state="translated">Второе открытие:Создание инструментов и управление зависимостями</target>
        </trans-unit>
        <trans-unit id="c59f5b2810e3bec094a1bfeff7c4473f6bdc114b" translate="yes" xml:space="preserve">
          <source>Since compiling a program -- especially one using a bunch of external libraries -- is complex, Java almost invariably uses a &lt;a href=&quot;https://en.wikipedia.org/wiki/Build_automation&quot;&gt;&quot;build tool&quot;&lt;/a&gt; to manage the process. &lt;a href=&quot;https://en.wikipedia.org/wiki/Make_(software)&quot;&gt;&lt;em&gt;Make&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Apache_Ant&quot;&gt;&lt;em&gt;Apache Ant&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Apache_Maven&quot;&gt;&lt;em&gt;Apache Maven&lt;/em&gt;&lt;/a&gt;, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Gradle&quot;&gt;&lt;em&gt;Gradle&lt;/em&gt;&lt;/a&gt; are all build tools that are used with Java programs (see &lt;a href=&quot;https://technologyconversations.com/2014/06/18/build-tools/&quot;&gt;this post&lt;/a&gt; for comparisons). As noted further down, Gradle is the chosen build tool for Android projects.</source>
          <target state="translated">Поскольку компиляция программы, особенно с использованием нескольких внешних библиотек, является сложной, Java почти всегда использует &lt;a href=&quot;https://en.wikipedia.org/wiki/Build_automation&quot;&gt;&amp;laquo;инструмент сборки&amp;raquo;&lt;/a&gt; для управления процессом. &lt;a href=&quot;https://en.wikipedia.org/wiki/Make_(software)&quot;&gt;&lt;em&gt;Make&lt;/em&gt;&lt;/a&gt; , &lt;a href=&quot;https://en.wikipedia.org/wiki/Apache_Ant&quot;&gt;&lt;em&gt;Apache Ant&lt;/em&gt;&lt;/a&gt; , &lt;a href=&quot;https://en.wikipedia.org/wiki/Apache_Maven&quot;&gt;&lt;em&gt;Apache Maven&lt;/em&gt;&lt;/a&gt; и &lt;a href=&quot;https://en.wikipedia.org/wiki/Gradle&quot;&gt;&lt;em&gt;Gradle&lt;/em&gt;&lt;/a&gt; являются инструментами сборки, которые используются с Java-программами (см. &lt;a href=&quot;https://technologyconversations.com/2014/06/18/build-tools/&quot;&gt;Этот пост&lt;/a&gt; для сравнения). Как отмечалось ниже, Gradle - это выбранный инструмент для сборки проектов Android.</target>
        </trans-unit>
        <trans-unit id="7cd4a7270c64feabc3df09bda05bd5b40b7ab61c" translate="yes" xml:space="preserve">
          <source>So the last and seemingly correct option is &lt;a href=&quot;https://github.com/JakeWharton/ThreeTenABP&quot;&gt;&lt;em&gt;ThreeTenABP&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">Таким образом, последний и, казалось бы, правильный вариант - &lt;a href=&quot;https://github.com/JakeWharton/ThreeTenABP&quot;&gt;&lt;em&gt;ThreeTenABP&lt;/em&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cfee5ab5f67d6df1c11067e33187c3d1e0a7caaf" translate="yes" xml:space="preserve">
          <source>Summary: Making it work</source>
          <target state="translated">Резюме:Заставить его работать</target>
        </trans-unit>
        <trans-unit id="396e8e29c161040a31c661f24a6567aa418980a6" translate="yes" xml:space="preserve">
          <source>The most obvious solution would be to use the built-in &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/package-summary.html&quot;&gt;&lt;code&gt;java.time&lt;/code&gt;&lt;/a&gt; package, since this is the new standard way to deal with time and dates in Java. It is an implementation of &lt;a href=&quot;https://jcp.org/en/jsr/detail?id=310&quot;&gt;JSR 310&lt;/a&gt;, which was a new standard proposal for time handling based on the &lt;a href=&quot;http://www.joda.org/joda-time/&quot;&gt;Joda-Time&lt;/a&gt; library.</source>
          <target state="translated">Наиболее очевидным решением будет использование встроенного пакета &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/package-summary.html&quot;&gt; &lt;code&gt;java.time&lt;/code&gt; &lt;/a&gt; , поскольку это новый стандартный способ работы со временем и датами в Java. Это реализация &lt;a href=&quot;https://jcp.org/en/jsr/detail?id=310&quot;&gt;JSR 310&lt;/a&gt; , которая была новым стандартным предложением для обработки времени на &lt;a href=&quot;http://www.joda.org/joda-time/&quot;&gt;основе&lt;/a&gt; библиотеки Joda-Time .</target>
        </trans-unit>
        <trans-unit id="e518064ff9740117d564f3ecd61132e117c23f7f" translate="yes" xml:space="preserve">
          <source>The next option might be &lt;a href=&quot;http://www.joda.org/joda-time/&quot;&gt;&lt;em&gt;Joda-Time&lt;/em&gt;&lt;/a&gt;, since &lt;a href=&quot;https://www.jcp.org/en/jsr/detail?id=310&quot;&gt;JSR 310&lt;/a&gt; was based on Joda-Time. However, as the &lt;a href=&quot;https://github.com/JakeWharton/ThreeTenABP#why-not-use-threetenbp&quot;&gt;ThreeTenABP readme&lt;/a&gt; indicates, for a number of reasons, Joda-Time is not the best option.</source>
          <target state="translated">Следующим вариантом может быть &lt;a href=&quot;http://www.joda.org/joda-time/&quot;&gt;&lt;em&gt;Joda-Time&lt;/em&gt;&lt;/a&gt; , поскольку &lt;a href=&quot;https://www.jcp.org/en/jsr/detail?id=310&quot;&gt;JSR 310&lt;/a&gt; был основан на Joda-Time. Однако, как &lt;a href=&quot;https://github.com/JakeWharton/ThreeTenABP#why-not-use-threetenbp&quot;&gt;показывает readme ThreeTenABP&lt;/a&gt; , по ряду причин Joda-Time - не лучший вариант.</target>
        </trans-unit>
        <trans-unit id="b889451f235571367bb20058e2dfe4e3827d56b9" translate="yes" xml:space="preserve">
          <source>These build tools include dependency management. Apache Maven appears to be the first to include a centralized package repository. Maven introduced the &lt;a href=&quot;https://search.maven.org/&quot;&gt;Maven Central Repository&lt;/a&gt;, which allows functionality equivalent to php's &lt;code&gt;composer&lt;/code&gt; with Packagist and Ruby's &lt;code&gt;gem&lt;/code&gt; with rubygems.org. In other words, the Maven Central Repository is to Maven (and Gradle) what Packagist is to composer -- a definitive and secure source for versioned packages.</source>
          <target state="translated">Эти инструменты сборки включают управление зависимостями. Похоже, что Apache Maven первым включил централизованное хранилище пакетов. Maven представил &lt;a href=&quot;https://search.maven.org/&quot;&gt;Центральный репозиторий Maven&lt;/a&gt; , который обеспечивает функциональность, эквивалентную &lt;code&gt;composer&lt;/code&gt; php с Packagist и гему Ruby с rubygems.org. Другими словами, центральный репозиторий Maven для Maven (и Gradle) - то же самое, что Packagist для композитора - окончательный и безопасный источник для версионных пакетов.</target>
        </trans-unit>
        <trans-unit id="768315b79cd10966f62c991e59d5e08270da1b88" translate="yes" xml:space="preserve">
          <source>Third Discovery: Gradle Handles Dependencies in Android Projects</source>
          <target state="translated">Третье Открытие:Зависимости в проектах для Android от десктопов</target>
        </trans-unit>
        <trans-unit id="d869f5d32af6871802766705bf1d1cc9725fef0c" translate="yes" xml:space="preserve">
          <source>This is a really short version of the VERY LONG PROCESS of defining a new standard. All of these packages are pretty much the same thing: libraries that provide good, modern time handling functionality for Java. The differences are subtle but important.</source>
          <target state="translated">Это действительно короткая версия ОЧЕНЬ ДЛЯ НОВОГО ПРОЦЕССА по определению нового стандарта.Все эти пакеты практически одно и то же:библиотеки,которые обеспечивают хорошую,современную функциональность обработки времени для Java.Различия тонкие,но важные.</target>
        </trans-unit>
        <trans-unit id="31453897e93fc7f649fa022be2317aee5c16edb2" translate="yes" xml:space="preserve">
          <source>When I first hit this github repo, I didn't know what that compile line meant, and I tried to run it in my terminal (with an obvious and predictable failure). Frustrated, I didn't return to it until long after I figured the rest out, and finally realized that it's a Maven Repo line pointing to the &lt;code&gt;com.jakewharton.threetenabp&lt;/code&gt; repo, as opposed to the &lt;code&gt;org.threeten&lt;/code&gt; repo. That's why I thought the ThreeTenABP package wasn't in the Maven repo.</source>
          <target state="translated">Когда я впервые попал в репозиторий github, я не знал, что означает эта строка компиляции, и я попытался запустить ее в своем терминале (с очевидным и предсказуемым сбоем). Разочарованный, я вернулся к нему лишь вскоре после того, как понял все остальное, и, наконец, понял, что это линия репо Maven, указывающая на репо &lt;code&gt;com.jakewharton.threetenabp&lt;/code&gt; , а не на &lt;code&gt;org.threeten&lt;/code&gt; . Вот почему я думал, что пакета ThreeTenABP нет в репозитории Maven.</target>
        </trans-unit>
        <trans-unit id="bab2aac07d102f5a191b285de99054d2ad86bfbe" translate="yes" xml:space="preserve">
          <source>Yet another issue I spent too much time figuring out. If you look for ThreeTen in Maven Central, you'll only see packages for &lt;code&gt;threetenbp&lt;/code&gt;, not &lt;code&gt;threetenabp&lt;/code&gt;. If you go to the &lt;a href=&quot;https://github.com/JakeWharton/ThreeTenABP&quot;&gt;github repo for ThreeTenABP&lt;/a&gt;, you'll see that infamous &lt;code&gt;compile 'this-or-that'&lt;/code&gt; line under the Download section of the Readme.</source>
          <target state="translated">Еще одна проблема, которую я потратил слишком много времени на выяснение. Если вы ищете ThreeTen в Maven Central, вы увидите только пакеты для &lt;code&gt;threetenbp&lt;/code&gt; , а не &lt;code&gt;threetenabp&lt;/code&gt; . Если вы зайдете в &lt;a href=&quot;https://github.com/JakeWharton/ThreeTenABP&quot;&gt;репозиторий github для ThreeTenABP&lt;/a&gt; , вы увидите, что эта печально известная строка &lt;code&gt;compile 'this-or-that'&lt;/code&gt; в разделе &amp;laquo;Скачать&amp;raquo; в файле Readme.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
