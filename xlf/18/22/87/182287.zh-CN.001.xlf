<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/182287">
    <body>
      <group id="182287">
        <trans-unit id="24e710c67e0fd1aa1109e788dd7bfe15b56ab6e3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(Late answer, consult my side note).&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（最新答案，请参阅我的旁注）。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="abb4f45f57d5a02cc323d365ac9c7f7fff26508d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Side note:&lt;/strong&gt; I added this answer (as a community wiki) because it often used to close questions with, where some people posted questions similar to this in trying to bind a &lt;strong&gt;database&lt;/strong&gt; and not a table and/or column.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;旁注：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我添加了此答案（作为社区Wiki），因为它通常用于结束问题，有些人在试图绑定&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数据库&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而不是表和/或列时&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;发布了与此类似的问题&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3bc53861a89e7c37ae787827e0114f69f6a2947e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Table and Column names CANNOT be replaced by parameters in PDO.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;表名和列名不能用PDO中的参数替换。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1dbe76d641093b5ed16d2f150029f69b8de25715" translate="yes" xml:space="preserve">
          <source>As for the main question in this thread, the other posts made it clear why we can't bind values to column names when preparing statements, so here is one solution:</source>
          <target state="translated">至于这条线程中的主要问题,其他帖子已经说得很清楚了,为什么我们在准备语句时不能将值与列名绑定,这里有一个解决方案。</target>
        </trans-unit>
        <trans-unit id="384a1d8ea079e646068e0e42ace9abda19129a8d" translate="yes" xml:space="preserve">
          <source>By leaving no default case or using a default case that returns an error message you ensure that only values that you want used get used.</source>
          <target state="translated">通过不留默认情况,或者使用返回错误信息的默认情况,可以确保只有你想使用的值才会被使用。</target>
        </trans-unit>
        <trans-unit id="2b82ca65a8f1030df9353dd56f8a4f41409c89b5" translate="yes" xml:space="preserve">
          <source>Can PHP PDO Statements accept the table or column name as parameter</source>
          <target state="translated">PHP PDO语句可以接受表或列名作为参数吗?</target>
        </trans-unit>
        <trans-unit id="a83468588048f768624c0f8097bd42880f4e892f" translate="yes" xml:space="preserve">
          <source>I have a function that receives two parameters like...</source>
          <target state="translated">我有一个接收两个参数的函数,比如......</target>
        </trans-unit>
        <trans-unit id="a30f6494ace13f7bab1438deae1a138e622ce162" translate="yes" xml:space="preserve">
          <source>I haven't really thought through it, but it seems like removing anything except characters and underscores might work.</source>
          <target state="translated">我还没有真正考虑过,但似乎除了字符和下划线之外,删除任何东西都可以。</target>
        </trans-unit>
        <trans-unit id="5bad51b276706cc2ff3239c00b110342a169b1cd" translate="yes" xml:space="preserve">
          <source>I see this is an old post, but I found it useful and thought I'd share a solution similar to what @kzqai suggested:</source>
          <target state="translated">我看到这是个老帖子,但我觉得很有用,就想分享一个类似于@kzqai建议的解决方案。</target>
        </trans-unit>
        <trans-unit id="dc6c3cb6d26cb6f183c56b72e4222e789e6cb27e" translate="yes" xml:space="preserve">
          <source>I.e.:</source>
          <target state="translated">I.e.:</target>
        </trans-unit>
        <trans-unit id="02a6e1e3489628469a04b2c9b34a91dea3483252" translate="yes" xml:space="preserve">
          <source>In that case you will simply want to filter and sanitize the data manually. One way to do this is to pass in shorthand parameters to the function that will execute the query dynamically and then use a &lt;code&gt;switch()&lt;/code&gt; statement to create a white list of valid values to be used for the table name or column name. That way no user input ever goes directly into the query. So for example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在这种情况下，您只需要手动过滤和清理数据。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一种实现方法是将简写参数传递给将动态执行查询的函数，然后使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;switch()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;语句创建将用于表名或列名的有效值的白名单。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这样，就不会有用户输入直接进入查询。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，例如：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30e734282a8ea6a008a4977d23816c5e5fba6323" translate="yes" xml:space="preserve">
          <source>Inside I check against arrays I've set up to make sure only tables and columns with &quot;blessed&quot; tables are accessible:</source>
          <target state="translated">在里面,我对照我设置的数组进行检查,确保只有 &quot;受祝福 &quot;的表和列才可以访问。</target>
        </trans-unit>
        <trans-unit id="064641b43f5539b9ed82ee860d0cbb078a0c1794" translate="yes" xml:space="preserve">
          <source>Is there another safe way to insert a table name into a SQL query? With safe, I mean that I don't want to do</source>
          <target state="translated">有没有其他安全的方法可以在SQL查询中插入表名?我说的安全,是说我不想做</target>
        </trans-unit>
        <trans-unit id="8c3d882f0f16f841504e5c15869f8f42659ac2e3" translate="yes" xml:space="preserve">
          <source>Part of me wonders if you could provide your own custom sanitizing function as simple as this:</source>
          <target state="translated">我的一部分想法是,如果你能不能提供自己的自定义消毒功能,就像这样简单。</target>
        </trans-unit>
        <trans-unit id="16618efe59d5919d52e4497327442206630ee808" translate="yes" xml:space="preserve">
          <source>The above is just an example, so needless to say, copy-&amp;gt;paste won't work. Adjust for your needs.
Now this may not provide 100% security, but it allows some control over the column names when they &quot;come in&quot; as dynamic strings and may be changed on users end. Furthermore, there is no need to build some array with your table column names and types since they are extracted from the information_schema.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上面只是一个示例，所以不用说，copy-&amp;gt; paste将不起作用。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;根据您的需求进行调整。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，这可能无法提供100％的安全性，但是当列名称作为动态字符串&amp;ldquo;进入&amp;rdquo;时，可以对列名称进行一些控制，并且可以在用户端进行更改。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此外，由于表列的名称和类型是从information_schema中提取的，因此无需使用它们的表列名称和类型来构建数组。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e25cbdb25382ce69770855b24324b6ac8671b89f" translate="yes" xml:space="preserve">
          <source>The plan for &lt;code&gt;SELECT name FROM my_table WHERE id = :value&lt;/code&gt; will be the same whatever you substitute for &lt;code&gt;:value&lt;/code&gt;, but the seemingly similar &lt;code&gt;SELECT name FROM :table WHERE id = :value&lt;/code&gt; cannot be planned, because the DBMS has no idea what table you're actually going to select from.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于计划&lt;/font&gt;&lt;/font&gt; &lt;code&gt;SELECT name FROM my_table WHERE id = :value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;会不管你替换相同&lt;/font&gt;&lt;/font&gt; &lt;code&gt;:value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但表面上类似&lt;/font&gt;&lt;/font&gt; &lt;code&gt;SELECT name FROM :table WHERE id = :value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不能计划的，因为DBMS不知道什么表格你实际上是要选择的。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="91435555f22635a26c4d213da7d6fdfed16ec944" translate="yes" xml:space="preserve">
          <source>The same rule applies when trying to create a &quot;database&quot;.</source>
          <target state="translated">当试图创建一个 &quot;数据库 &quot;时,同样的规则也适用。</target>
        </trans-unit>
        <trans-unit id="73610e9c90576b5df793a7af90fbd0f7c51fa443" translate="yes" xml:space="preserve">
          <source>Then the PHP check before running PDO looks like...</source>
          <target state="translated">那么在运行PDO之前的PHP检查看起来像......</target>
        </trans-unit>
        <trans-unit id="d27f913ee472e2ac9a6a8080ed0bf6751e1374fb" translate="yes" xml:space="preserve">
          <source>This is not something an abstraction library like PDO can or should work around, either, since it would defeat the 2 key purposes of prepared statements: 1) to allow the database to decide in advance how a query will be run, and use the same plan multiple times; and 2) to prevent security issues by separating the logic of the query from the variable input.</source>
          <target state="translated">这也不是像PDO这样的抽象库所能或应该绕过的,因为这将违背了准备好的语句的两个关键目的。1)允许数据库提前决定如何运行查询,并多次使用相同的计划;2)通过将查询的逻辑与变量输入分开,防止安全问题。</target>
        </trans-unit>
        <trans-unit id="e566b4689c893755d6a15505c3c92934f2d0281c" translate="yes" xml:space="preserve">
          <source>To understand &lt;em&gt;why&lt;/em&gt; binding a table (or column) name doesn't work, you have to understand how the placeholders in prepared statements work: they are not simply substituted in as (suitably escaped) strings, and the resulting SQL executed. Instead, a DBMS asked to &quot;prepare&quot; a statement comes up with a complete query plan for how it would execute that query, including which tables and indexes it would use, which will be the same regardless of how you fill in the placeholders.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要了解&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为什么&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;绑定表（或列）名称不起作用的原因，您必须了解已准备好的语句中的占位符如何工作：不能简单地将它们替换为（适当地转义的）字符串，并执行生成的SQL。取而代之的是，要求&amp;ldquo;准​​备&amp;rdquo;一个语句的DBMS给出了一个完整的查询计划，以说明如何执行该查询，包括它将使用哪些表和索引，无论您如何填充占位符，都将是相同的。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4b5a2cee39ea258afb1c8f413cd4b8614e84b9c1" translate="yes" xml:space="preserve">
          <source>Using the former isn't inherently more safe than the latter, you need to sanitize the input whether it's part of a parameter array or a simple variable.  So I don't see anything wrong with using the latter form with &lt;code&gt;$table&lt;/code&gt;, provided you make sure that the content of &lt;code&gt;$table&lt;/code&gt; is safe (alphanum plus underscores?) before using it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用前者并不比后者本质上更安全，您需要清理输入（无论它是参数数组的一部分还是简单变量的一部分）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$table&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用后一种形式不会出现任何问题&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，前提是您在&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ table之前&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;确保&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$table&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的内容&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是安全的（字母加下划线？）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f1d29c71706c88f5bfc0eda5abb752bd03114d53" translate="yes" xml:space="preserve">
          <source>Why can't I pass the table name to a prepared PDO statement?</source>
          <target state="translated">为什么我不能将表名传递给准备好的PDO语句?</target>
        </trans-unit>
        <trans-unit id="ad0846d159368e05174643cfb15ae8e34fd48113" translate="yes" xml:space="preserve">
          <source>You cannot use a prepared statement to bind a database.</source>
          <target state="translated">你不能使用准备好的语句来绑定数据库。</target>
        </trans-unit>
        <trans-unit id="c870c45bc08c3074aad1e8f9f5c6cd8547361f2f" translate="yes" xml:space="preserve">
          <source>will not work. Use a safelist instead.</source>
          <target state="translated">将无法工作。请使用安全清单代替。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
