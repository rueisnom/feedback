<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/182287">
    <body>
      <group id="182287">
        <trans-unit id="24e710c67e0fd1aa1109e788dd7bfe15b56ab6e3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(Late answer, consult my side note).&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(늦은 대답, 내 쪽 참고를 참조하십시오).&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="abb4f45f57d5a02cc323d365ac9c7f7fff26508d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Side note:&lt;/strong&gt; I added this answer (as a community wiki) because it often used to close questions with, where some people posted questions similar to this in trying to bind a &lt;strong&gt;database&lt;/strong&gt; and not a table and/or column.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참고 사항 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 답변은 (커뮤니티 위키로) 종종 질문을 닫는 데 사용되었으므로 일부 사람들은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테이블 및 / 또는 열이 아닌 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;데이터베이스&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 바인딩하려고 할 때 이와 비슷한 질문을 게시했습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3bc53861a89e7c37ae787827e0114f69f6a2947e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Table and Column names CANNOT be replaced by parameters in PDO.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테이블 및 컬럼 이름은 PDO의 매개 변수로 대체 될 수 없습니다.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1dbe76d641093b5ed16d2f150029f69b8de25715" translate="yes" xml:space="preserve">
          <source>As for the main question in this thread, the other posts made it clear why we can't bind values to column names when preparing statements, so here is one solution:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 스레드의 주요 질문에 대해서는 다른 게시물에서 명령문을 준비 할 때 값을 열 이름에 바인딩 할 수없는 이유를 분명히 밝혔으므로 여기에 하나의 해결책이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="384a1d8ea079e646068e0e42ace9abda19129a8d" translate="yes" xml:space="preserve">
          <source>By leaving no default case or using a default case that returns an error message you ensure that only values that you want used get used.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본 사례를 그대로 두거나 오류 메시지를 반환하는 기본 사례를 사용하면 사용하려는 값만 사용할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b82ca65a8f1030df9353dd56f8a4f41409c89b5" translate="yes" xml:space="preserve">
          <source>Can PHP PDO Statements accept the table or column name as parameter</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP PDO 명령문이 테이블 또는 열 이름을 매개 변수로 승인 할 수 있습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a83468588048f768624c0f8097bd42880f4e892f" translate="yes" xml:space="preserve">
          <source>I have a function that receives two parameters like...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 두 개의 매개 변수를받는 기능이 있습니다 ...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a30f6494ace13f7bab1438deae1a138e622ce162" translate="yes" xml:space="preserve">
          <source>I haven't really thought through it, but it seems like removing anything except characters and underscores might work.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 그것을 실제로 생각하지 않았지만 문자와 밑줄을 제외한 것을 제거하는 것이 효과가있는 것 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5bad51b276706cc2ff3239c00b110342a169b1cd" translate="yes" xml:space="preserve">
          <source>I see this is an old post, but I found it useful and thought I'd share a solution similar to what @kzqai suggested:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 이것이 오래된 게시물 인 것을 보았지만 유용하다고 생각하고 @kzqai가 제안한 것과 비슷한 해결책을 공유 할 것이라고 생각했다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc6c3cb6d26cb6f183c56b72e4222e789e6cb27e" translate="yes" xml:space="preserve">
          <source>I.e.:</source>
          <target state="translated">I.e.:</target>
        </trans-unit>
        <trans-unit id="02a6e1e3489628469a04b2c9b34a91dea3483252" translate="yes" xml:space="preserve">
          <source>In that case you will simply want to filter and sanitize the data manually. One way to do this is to pass in shorthand parameters to the function that will execute the query dynamically and then use a &lt;code&gt;switch()&lt;/code&gt; statement to create a white list of valid values to be used for the table name or column name. That way no user input ever goes directly into the query. So for example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 경우 데이터를 수동으로 필터링하고 삭제하는 것이 좋습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이를 수행하는 한 가지 방법은 쿼리를 동적으로 실행하는 함수에 속기 매개 변수를 전달한 다음 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;switch()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 문을 사용하여 테이블 이름 또는 열 이름에 사용할 유효한 값의 화이트리스트를 작성하는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이렇게하면 사용자 입력이 쿼리로 직접 전달되지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30e734282a8ea6a008a4977d23816c5e5fba6323" translate="yes" xml:space="preserve">
          <source>Inside I check against arrays I've set up to make sure only tables and columns with &quot;blessed&quot; tables are accessible:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내부에서 배열을 검사하여 &quot;축복 된&quot;테이블이있는 테이블과 열에 만 액세스 할 수 있도록 설정했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="064641b43f5539b9ed82ee860d0cbb078a0c1794" translate="yes" xml:space="preserve">
          <source>Is there another safe way to insert a table name into a SQL query? With safe, I mean that I don't want to do</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테이블 이름을 SQL 쿼리에 삽입하는 또 다른 안전한 방법이 있습니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;안전하고, 나는하고 싶지 않다는 것을 의미합니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8c3d882f0f16f841504e5c15869f8f42659ac2e3" translate="yes" xml:space="preserve">
          <source>Part of me wonders if you could provide your own custom sanitizing function as simple as this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 일부는 다음과 같이 간단한 사용자 정의 살균 기능을 제공 할 수 있는지 궁금합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="16618efe59d5919d52e4497327442206630ee808" translate="yes" xml:space="preserve">
          <source>The above is just an example, so needless to say, copy-&amp;gt;paste won't work. Adjust for your needs.
Now this may not provide 100% security, but it allows some control over the column names when they &quot;come in&quot; as dynamic strings and may be changed on users end. Furthermore, there is no need to build some array with your table column names and types since they are extracted from the information_schema.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 예는 단지 예일 뿐이므로 복사-&amp;gt; 붙여 넣기가 작동하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;필요에 따라 조정하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 이것은 100 % 보안을 제공하지는 않지만 열이 동적 문자열로 &quot;들어올 때&quot;열 이름을 일부 제어 할 수 있으며 사용자 측에서 변경 될 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 information_schema에서 추출되므로 테이블 열 이름과 유형으로 배열을 만들 필요가 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e25cbdb25382ce69770855b24324b6ac8671b89f" translate="yes" xml:space="preserve">
          <source>The plan for &lt;code&gt;SELECT name FROM my_table WHERE id = :value&lt;/code&gt; will be the same whatever you substitute for &lt;code&gt;:value&lt;/code&gt;, but the seemingly similar &lt;code&gt;SELECT name FROM :table WHERE id = :value&lt;/code&gt; cannot be planned, because the DBMS has no idea what table you're actually going to select from.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에 대한 계획 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;SELECT name FROM my_table WHERE id = :value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 대체 무엇이든 동일합니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;:value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하지만 겉보기에 비슷한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;SELECT name FROM :table WHERE id = :value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; DBMS의 어떤 테이블을 아무 생각이 없기 때문에, 계획 할 수 없다 실제로 선택할 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="91435555f22635a26c4d213da7d6fdfed16ec944" translate="yes" xml:space="preserve">
          <source>The same rule applies when trying to create a &quot;database&quot;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;데이터베이스&quot;를 만들려고 할 때도 같은 규칙이 적용됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="73610e9c90576b5df793a7af90fbd0f7c51fa443" translate="yes" xml:space="preserve">
          <source>Then the PHP check before running PDO looks like...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇다면 PDO를 실행하기 전에 PHP 검사는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d27f913ee472e2ac9a6a8080ed0bf6751e1374fb" translate="yes" xml:space="preserve">
          <source>This is not something an abstraction library like PDO can or should work around, either, since it would defeat the 2 key purposes of prepared statements: 1) to allow the database to decide in advance how a query will be run, and use the same plan multiple times; and 2) to prevent security issues by separating the logic of the query from the variable input.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 PDO와 같은 추상화 라이브러리가 준비된 명령문의 두 가지 주요 목적을 무효화하기 때문에 해결할 수 있거나 해결할 수있는 것이 아닙니다 .1) 데이터베이스가 쿼리 실행 방법을 미리 결정하고 동일한 것을 사용하도록합니다. 여러 번 계획; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2) 쿼리의 논리를 변수 입력에서 분리하여 보안 문제를 방지합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e566b4689c893755d6a15505c3c92934f2d0281c" translate="yes" xml:space="preserve">
          <source>To understand &lt;em&gt;why&lt;/em&gt; binding a table (or column) name doesn't work, you have to understand how the placeholders in prepared statements work: they are not simply substituted in as (suitably escaped) strings, and the resulting SQL executed. Instead, a DBMS asked to &quot;prepare&quot; a statement comes up with a complete query plan for how it would execute that query, including which tables and indexes it would use, which will be the same regardless of how you fill in the placeholders.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테이블 (또는 열) 이름 바인딩이 작동하지 않는 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이유&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 이해하려면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;준비된 명령문의 플레이스 홀더가 작동하는 방식을 이해해야합니다. 즉, 적절하게 이스케이프 된 문자열로 대체되지 않고 결과 SQL이 실행됩니다. 대신, 문을 &quot;준비&quot;하도록 요청한 DBMS는 사용하는 테이블과 인덱스를 포함하여 해당 쿼리를 실행하는 방법에 대한 완전한 쿼리 계획을 제시하며, 이는 자리 표시자를 채우는 방법에 관계없이 동일합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4b5a2cee39ea258afb1c8f413cd4b8614e84b9c1" translate="yes" xml:space="preserve">
          <source>Using the former isn't inherently more safe than the latter, you need to sanitize the input whether it's part of a parameter array or a simple variable.  So I don't see anything wrong with using the latter form with &lt;code&gt;$table&lt;/code&gt;, provided you make sure that the content of &lt;code&gt;$table&lt;/code&gt; is safe (alphanum plus underscores?) before using it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전자를 사용하는 것이 전자를 사용하는 것보다 본질적으로 안전하지는 않으므로 입력이 매개 변수 배열이든 간단한 변수이든 상관없이 입력을 삭제해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내가 함께 후자의 양식을 사용하여 아무것도 잘못 표시되지 않습니다 그래서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$table&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 당신의 내용에 있는지 확인 제공 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$table&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 안전합니다 (영숫자 플러스 밑줄?)를 사용하기 전에.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f1d29c71706c88f5bfc0eda5abb752bd03114d53" translate="yes" xml:space="preserve">
          <source>Why can't I pass the table name to a prepared PDO statement?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테이블 이름을 준비된 PDO 문에 전달할 수없는 이유는 무엇입니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad0846d159368e05174643cfb15ae8e34fd48113" translate="yes" xml:space="preserve">
          <source>You cannot use a prepared statement to bind a database.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;준비된 명령문을 사용하여 데이터베이스를 바인드 할 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c870c45bc08c3074aad1e8f9f5c6cd8547361f2f" translate="yes" xml:space="preserve">
          <source>will not work. Use a safelist instead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;작동 안 할 것이다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대신 수신 허용 목록을 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
