<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/182287">
    <body>
      <group id="182287">
        <trans-unit id="24e710c67e0fd1aa1109e788dd7bfe15b56ab6e3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(Late answer, consult my side note).&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Поздний ответ, обратитесь к моей записке).&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="abb4f45f57d5a02cc323d365ac9c7f7fff26508d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Side note:&lt;/strong&gt; I added this answer (as a community wiki) because it often used to close questions with, where some people posted questions similar to this in trying to bind a &lt;strong&gt;database&lt;/strong&gt; and not a table and/or column.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Примечание:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; я добавил этот ответ (как вики сообщества), потому что он часто использовался для закрытия вопросов, где некоторые люди публиковали вопросы, подобные этим, пытаясь связать &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;базу данных,&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; а не таблицу и / или столбец.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3bc53861a89e7c37ae787827e0114f69f6a2947e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Table and Column names CANNOT be replaced by parameters in PDO.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Имена таблиц и столбцов НЕ МОГУТ заменяться параметрами в PDO.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1dbe76d641093b5ed16d2f150029f69b8de25715" translate="yes" xml:space="preserve">
          <source>As for the main question in this thread, the other posts made it clear why we can't bind values to column names when preparing statements, so here is one solution:</source>
          <target state="translated">Что касается основного вопроса в этой теме,то в других сообщениях было понятно,почему при подготовке операторов нельзя привязывать значения к названиям столбцов,так что вот одно из решений:</target>
        </trans-unit>
        <trans-unit id="384a1d8ea079e646068e0e42ace9abda19129a8d" translate="yes" xml:space="preserve">
          <source>By leaving no default case or using a default case that returns an error message you ensure that only values that you want used get used.</source>
          <target state="translated">Не оставляя регистр по умолчанию или используя регистр по умолчанию,который возвращает сообщение об ошибке,вы гарантируете,что будут использоваться только те значения,которые вы хотите использовать.</target>
        </trans-unit>
        <trans-unit id="2b82ca65a8f1030df9353dd56f8a4f41409c89b5" translate="yes" xml:space="preserve">
          <source>Can PHP PDO Statements accept the table or column name as parameter</source>
          <target state="translated">Могут ли PHP PDO-операторы принять имя таблицы или столбца в качестве параметра</target>
        </trans-unit>
        <trans-unit id="a83468588048f768624c0f8097bd42880f4e892f" translate="yes" xml:space="preserve">
          <source>I have a function that receives two parameters like...</source>
          <target state="translated">У меня есть функция,которая получает два параметра,например...</target>
        </trans-unit>
        <trans-unit id="a30f6494ace13f7bab1438deae1a138e622ce162" translate="yes" xml:space="preserve">
          <source>I haven't really thought through it, but it seems like removing anything except characters and underscores might work.</source>
          <target state="translated">На самом деле я не думал об этом,но кажется,что удаление всего,кроме символов и подчеркиваний,может сработать.</target>
        </trans-unit>
        <trans-unit id="5bad51b276706cc2ff3239c00b110342a169b1cd" translate="yes" xml:space="preserve">
          <source>I see this is an old post, but I found it useful and thought I'd share a solution similar to what @kzqai suggested:</source>
          <target state="translated">Вижу,что это старая заметка,но я нашел ее полезной и решил поделиться решением,похожим на то,что предложил @kzqai:</target>
        </trans-unit>
        <trans-unit id="dc6c3cb6d26cb6f183c56b72e4222e789e6cb27e" translate="yes" xml:space="preserve">
          <source>I.e.:</source>
          <target state="translated">I.e.:</target>
        </trans-unit>
        <trans-unit id="02a6e1e3489628469a04b2c9b34a91dea3483252" translate="yes" xml:space="preserve">
          <source>In that case you will simply want to filter and sanitize the data manually. One way to do this is to pass in shorthand parameters to the function that will execute the query dynamically and then use a &lt;code&gt;switch()&lt;/code&gt; statement to create a white list of valid values to be used for the table name or column name. That way no user input ever goes directly into the query. So for example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В этом случае вы просто захотите отфильтровать и очистить данные вручную. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Один из способов сделать это - передать сокращенные параметры в функцию, которая будет динамически выполнять запрос, а затем использовать &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;инструкцию &lt;/font&gt;&lt;/font&gt; &lt;code&gt;switch()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для создания белого списка допустимых значений, которые будут использоваться для имени таблицы или имени столбца. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, никакой пользовательский ввод никогда не входит непосредственно в запрос. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Так, например:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30e734282a8ea6a008a4977d23816c5e5fba6323" translate="yes" xml:space="preserve">
          <source>Inside I check against arrays I've set up to make sure only tables and columns with &quot;blessed&quot; tables are accessible:</source>
          <target state="translated">Внутри я проверяю по массивам,которые я настроил,чтобы убедиться,что доступны только таблицы и столбцы с &quot;благословенными&quot; таблицами:</target>
        </trans-unit>
        <trans-unit id="064641b43f5539b9ed82ee860d0cbb078a0c1794" translate="yes" xml:space="preserve">
          <source>Is there another safe way to insert a table name into a SQL query? With safe, I mean that I don't want to do</source>
          <target state="translated">Есть ли другой безопасный способ вставить имя таблицы в SQL-запрос? С безопасным,я имею в виду,что я не хочу делать...</target>
        </trans-unit>
        <trans-unit id="8c3d882f0f16f841504e5c15869f8f42659ac2e3" translate="yes" xml:space="preserve">
          <source>Part of me wonders if you could provide your own custom sanitizing function as simple as this:</source>
          <target state="translated">Часть меня интересуется,можете ли вы предоставить свою собственную функцию дезинфекции так же просто,как это:</target>
        </trans-unit>
        <trans-unit id="16618efe59d5919d52e4497327442206630ee808" translate="yes" xml:space="preserve">
          <source>The above is just an example, so needless to say, copy-&amp;gt;paste won't work. Adjust for your needs.
Now this may not provide 100% security, but it allows some control over the column names when they &quot;come in&quot; as dynamic strings and may be changed on users end. Furthermore, there is no need to build some array with your table column names and types since they are extracted from the information_schema.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Выше приведен только пример, поэтому, разумеется, copy-&amp;gt; paste не будет работать. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Отрегулируйте под свои нужды. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь это может не обеспечивать 100% -ную безопасность, но позволяет некоторый контроль над именами столбцов, когда они &amp;laquo;входят&amp;raquo; как динамические строки и могут быть изменены на стороне пользователя. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Кроме того, нет необходимости создавать некоторый массив с именами и типами столбцов таблицы, поскольку они извлекаются из information_schema.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e25cbdb25382ce69770855b24324b6ac8671b89f" translate="yes" xml:space="preserve">
          <source>The plan for &lt;code&gt;SELECT name FROM my_table WHERE id = :value&lt;/code&gt; will be the same whatever you substitute for &lt;code&gt;:value&lt;/code&gt;, but the seemingly similar &lt;code&gt;SELECT name FROM :table WHERE id = :value&lt;/code&gt; cannot be planned, because the DBMS has no idea what table you're actually going to select from.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;План для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;SELECT name FROM my_table WHERE id = :value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будет одинаковым независимо от того, что вы заменяете &lt;/font&gt;&lt;/font&gt; &lt;code&gt;:value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , но внешне похожее &lt;/font&gt;&lt;/font&gt; &lt;code&gt;SELECT name FROM :table WHERE id = :value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не может быть запланировано, потому что СУБД понятия не имеет, какую таблицу вы используете. на самом деле выберем из.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="91435555f22635a26c4d213da7d6fdfed16ec944" translate="yes" xml:space="preserve">
          <source>The same rule applies when trying to create a &quot;database&quot;.</source>
          <target state="translated">То же правило применяется при попытке создать &quot;базу данных&quot;.</target>
        </trans-unit>
        <trans-unit id="73610e9c90576b5df793a7af90fbd0f7c51fa443" translate="yes" xml:space="preserve">
          <source>Then the PHP check before running PDO looks like...</source>
          <target state="translated">Тогда проверка PHP перед запуском PDO выглядит как...</target>
        </trans-unit>
        <trans-unit id="d27f913ee472e2ac9a6a8080ed0bf6751e1374fb" translate="yes" xml:space="preserve">
          <source>This is not something an abstraction library like PDO can or should work around, either, since it would defeat the 2 key purposes of prepared statements: 1) to allow the database to decide in advance how a query will be run, and use the same plan multiple times; and 2) to prevent security issues by separating the logic of the query from the variable input.</source>
          <target state="translated">Такая библиотека абстракций,как PDO,тоже не может и не должна работать,так как это противоречит двум основным целям подготовленных высказываний:1)позволить БД заранее решить,как будет выполняться запрос,и использовать один и тот же план несколько раз;и 2)предотвратить проблемы безопасности,отделив логику запроса от входной переменной.</target>
        </trans-unit>
        <trans-unit id="e566b4689c893755d6a15505c3c92934f2d0281c" translate="yes" xml:space="preserve">
          <source>To understand &lt;em&gt;why&lt;/em&gt; binding a table (or column) name doesn't work, you have to understand how the placeholders in prepared statements work: they are not simply substituted in as (suitably escaped) strings, and the resulting SQL executed. Instead, a DBMS asked to &quot;prepare&quot; a statement comes up with a complete query plan for how it would execute that query, including which tables and indexes it would use, which will be the same regardless of how you fill in the placeholders.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Чтобы понять, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;почему не работает&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; привязка имени таблицы (или столбца), вы должны понять, как работают заполнители в подготовленных выражениях: они не просто подставляются в виде (соответствующим образом экранированных) строк, а полученный SQL выполняется. Вместо этого СУБД с просьбой &amp;laquo;подготовить&amp;raquo; оператор предлагает полный план запроса о том, как он будет выполнять этот запрос, включая таблицы и индексы, которые он будет использовать, которые будут одинаковыми независимо от того, как вы заполните заполнители.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4b5a2cee39ea258afb1c8f413cd4b8614e84b9c1" translate="yes" xml:space="preserve">
          <source>Using the former isn't inherently more safe than the latter, you need to sanitize the input whether it's part of a parameter array or a simple variable.  So I don't see anything wrong with using the latter form with &lt;code&gt;$table&lt;/code&gt;, provided you make sure that the content of &lt;code&gt;$table&lt;/code&gt; is safe (alphanum plus underscores?) before using it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Использование первого по своей природе не является более безопасным, чем второе, вам необходимо очистить входные данные, независимо от того, является ли это частью массива параметров или простой переменной. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Так что я не вижу ничего плохого в использовании последней формы с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$table&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , при условии, что вы убедитесь, что содержимое &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$table&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; безопасно (alphanum plus подчеркивания?) Перед его использованием.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f1d29c71706c88f5bfc0eda5abb752bd03114d53" translate="yes" xml:space="preserve">
          <source>Why can't I pass the table name to a prepared PDO statement?</source>
          <target state="translated">Почему я не могу передать название таблицы в подготовленное заявление о PDO?</target>
        </trans-unit>
        <trans-unit id="ad0846d159368e05174643cfb15ae8e34fd48113" translate="yes" xml:space="preserve">
          <source>You cannot use a prepared statement to bind a database.</source>
          <target state="translated">Вы не можете использовать подготовленное заявление для привязки базы данных.</target>
        </trans-unit>
        <trans-unit id="c870c45bc08c3074aad1e8f9f5c6cd8547361f2f" translate="yes" xml:space="preserve">
          <source>will not work. Use a safelist instead.</source>
          <target state="translated">не сработает.Вместо этого воспользуйтесь страховым листом.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
