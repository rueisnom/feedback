<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/182287">
    <body>
      <group id="182287">
        <trans-unit id="24e710c67e0fd1aa1109e788dd7bfe15b56ab6e3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(Late answer, consult my side note).&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Respuesta tard&amp;iacute;a, consulte mi nota al margen).&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="abb4f45f57d5a02cc323d365ac9c7f7fff26508d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Side note:&lt;/strong&gt; I added this answer (as a community wiki) because it often used to close questions with, where some people posted questions similar to this in trying to bind a &lt;strong&gt;database&lt;/strong&gt; and not a table and/or column.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nota al margen:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; agregu&amp;eacute; esta respuesta (como wiki de la comunidad) porque a menudo sol&amp;iacute;a cerrar preguntas, donde algunas personas publicaban preguntas similares a esta al tratar de vincular una &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;base de datos&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y no una tabla y / o columna.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3bc53861a89e7c37ae787827e0114f69f6a2947e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Table and Column names CANNOT be replaced by parameters in PDO.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los nombres de tabla y columna NO PUEDEN reemplazarse por par&amp;aacute;metros en PDO.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1dbe76d641093b5ed16d2f150029f69b8de25715" translate="yes" xml:space="preserve">
          <source>As for the main question in this thread, the other posts made it clear why we can't bind values to column names when preparing statements, so here is one solution:</source>
          <target state="translated">En cuanto a la pregunta principal de este hilo,los otros mensajes dejaron claro por qué no podemos vincular los valores a los nombres de las columnas cuando se preparan las declaraciones,así que aquí hay una solución:</target>
        </trans-unit>
        <trans-unit id="384a1d8ea079e646068e0e42ace9abda19129a8d" translate="yes" xml:space="preserve">
          <source>By leaving no default case or using a default case that returns an error message you ensure that only values that you want used get used.</source>
          <target state="translated">Al no dejar ningún caso por defecto o utilizar un caso por defecto que devuelva un mensaje de error,se asegura de que sólo se utilicen los valores que usted desea utilizar.</target>
        </trans-unit>
        <trans-unit id="2b82ca65a8f1030df9353dd56f8a4f41409c89b5" translate="yes" xml:space="preserve">
          <source>Can PHP PDO Statements accept the table or column name as parameter</source>
          <target state="translated">¿Pueden las declaraciones PHP PDO aceptar el nombre de la tabla o de la columna como parámetro</target>
        </trans-unit>
        <trans-unit id="a83468588048f768624c0f8097bd42880f4e892f" translate="yes" xml:space="preserve">
          <source>I have a function that receives two parameters like...</source>
          <target state="translated">Tengo una función que recibe dos parámetros como...</target>
        </trans-unit>
        <trans-unit id="a30f6494ace13f7bab1438deae1a138e622ce162" translate="yes" xml:space="preserve">
          <source>I haven't really thought through it, but it seems like removing anything except characters and underscores might work.</source>
          <target state="translated">No lo he pensado mucho,pero parece que eliminar cualquier cosa excepto los personajes y los guiones bajos podría funcionar.</target>
        </trans-unit>
        <trans-unit id="5bad51b276706cc2ff3239c00b110342a169b1cd" translate="yes" xml:space="preserve">
          <source>I see this is an old post, but I found it useful and thought I'd share a solution similar to what @kzqai suggested:</source>
          <target state="translated">Veo que es un post antiguo,pero lo encontré útil y pensé en compartir una solución similar a la que @kzqai sugirió:</target>
        </trans-unit>
        <trans-unit id="dc6c3cb6d26cb6f183c56b72e4222e789e6cb27e" translate="yes" xml:space="preserve">
          <source>I.e.:</source>
          <target state="translated">I.e.:</target>
        </trans-unit>
        <trans-unit id="02a6e1e3489628469a04b2c9b34a91dea3483252" translate="yes" xml:space="preserve">
          <source>In that case you will simply want to filter and sanitize the data manually. One way to do this is to pass in shorthand parameters to the function that will execute the query dynamically and then use a &lt;code&gt;switch()&lt;/code&gt; statement to create a white list of valid values to be used for the table name or column name. That way no user input ever goes directly into the query. So for example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En ese caso, simplemente querr&amp;aacute; filtrar y desinfectar los datos manualmente. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una forma de hacerlo es pasar par&amp;aacute;metros abreviados a la funci&amp;oacute;n que ejecutar&amp;aacute; la consulta din&amp;aacute;micamente y luego usar una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;instrucci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;switch()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para crear una lista blanca de valores v&amp;aacute;lidos para el nombre de la tabla o el nombre de la columna. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De esa manera, ninguna entrada del usuario va directamente a la consulta. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;As&amp;iacute; por ejemplo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30e734282a8ea6a008a4977d23816c5e5fba6323" translate="yes" xml:space="preserve">
          <source>Inside I check against arrays I've set up to make sure only tables and columns with &quot;blessed&quot; tables are accessible:</source>
          <target state="translated">En el interior compruebo los arreglos que he hecho para asegurarme de que sólo las mesas y columnas con mesas &quot;benditas&quot; son accesibles:</target>
        </trans-unit>
        <trans-unit id="064641b43f5539b9ed82ee860d0cbb078a0c1794" translate="yes" xml:space="preserve">
          <source>Is there another safe way to insert a table name into a SQL query? With safe, I mean that I don't want to do</source>
          <target state="translated">¿Hay otra forma segura de insertar un nombre de tabla en una consulta SQL? Con seguro,quiero decir que no quiero hacer</target>
        </trans-unit>
        <trans-unit id="8c3d882f0f16f841504e5c15869f8f42659ac2e3" translate="yes" xml:space="preserve">
          <source>Part of me wonders if you could provide your own custom sanitizing function as simple as this:</source>
          <target state="translated">Una parte de mí se pregunta si podría proporcionar su propia función de desinfección personalizada tan simple como esta:</target>
        </trans-unit>
        <trans-unit id="16618efe59d5919d52e4497327442206630ee808" translate="yes" xml:space="preserve">
          <source>The above is just an example, so needless to say, copy-&amp;gt;paste won't work. Adjust for your needs.
Now this may not provide 100% security, but it allows some control over the column names when they &quot;come in&quot; as dynamic strings and may be changed on users end. Furthermore, there is no need to build some array with your table column names and types since they are extracted from the information_schema.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo anterior es solo un ejemplo, por lo que no hace falta decir que copiar-&amp;gt; pegar no funcionar&amp;aacute;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aj&amp;uacute;state a tus necesidades. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora, esto puede no proporcionar un 100% de seguridad, pero permite cierto control sobre los nombres de las columnas cuando &quot;entran&quot; como cadenas din&amp;aacute;micas y pueden modificarse en los usuarios finales. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s, no es necesario crear una matriz con los nombres y tipos de columna de la tabla, ya que se extraen del esquema de informaci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e25cbdb25382ce69770855b24324b6ac8671b89f" translate="yes" xml:space="preserve">
          <source>The plan for &lt;code&gt;SELECT name FROM my_table WHERE id = :value&lt;/code&gt; will be the same whatever you substitute for &lt;code&gt;:value&lt;/code&gt;, but the seemingly similar &lt;code&gt;SELECT name FROM :table WHERE id = :value&lt;/code&gt; cannot be planned, because the DBMS has no idea what table you're actually going to select from.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El plan para &lt;/font&gt;&lt;/font&gt; &lt;code&gt;SELECT name FROM my_table WHERE id = :value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ser&amp;aacute; el mismo sea cual sea el sustituto de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;:value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero el aparentemente similar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;SELECT name FROM :table WHERE id = :value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no se puede planificar, porque el DBMS no tiene idea de qu&amp;eacute; tabla realmente va a seleccionar de.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="91435555f22635a26c4d213da7d6fdfed16ec944" translate="yes" xml:space="preserve">
          <source>The same rule applies when trying to create a &quot;database&quot;.</source>
          <target state="translated">La misma regla se aplica cuando se intenta crear una &quot;base de datos&quot;.</target>
        </trans-unit>
        <trans-unit id="73610e9c90576b5df793a7af90fbd0f7c51fa443" translate="yes" xml:space="preserve">
          <source>Then the PHP check before running PDO looks like...</source>
          <target state="translated">Entonces la comprobación de PHP antes de ejecutar PDO parece...</target>
        </trans-unit>
        <trans-unit id="d27f913ee472e2ac9a6a8080ed0bf6751e1374fb" translate="yes" xml:space="preserve">
          <source>This is not something an abstraction library like PDO can or should work around, either, since it would defeat the 2 key purposes of prepared statements: 1) to allow the database to decide in advance how a query will be run, and use the same plan multiple times; and 2) to prevent security issues by separating the logic of the query from the variable input.</source>
          <target state="translated">Esto no es algo que una biblioteca de abstracción como PDO pueda o deba trabajar,tampoco,ya que derrotaría los 2 propósitos clave de las declaraciones preparadas:1)permitir que la base de datos decida de antemano cómo se ejecutará una consulta,y utilizar el mismo plan varias veces;y 2)evitar problemas de seguridad separando la lógica de la consulta de la entrada variable.</target>
        </trans-unit>
        <trans-unit id="e566b4689c893755d6a15505c3c92934f2d0281c" translate="yes" xml:space="preserve">
          <source>To understand &lt;em&gt;why&lt;/em&gt; binding a table (or column) name doesn't work, you have to understand how the placeholders in prepared statements work: they are not simply substituted in as (suitably escaped) strings, and the resulting SQL executed. Instead, a DBMS asked to &quot;prepare&quot; a statement comes up with a complete query plan for how it would execute that query, including which tables and indexes it would use, which will be the same regardless of how you fill in the placeholders.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para comprender &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;por qu&amp;eacute; el&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; enlace de un nombre de tabla (o columna) no funciona, debe comprender c&amp;oacute;mo funcionan los marcadores de posici&amp;oacute;n en las declaraciones preparadas: no se sustituyen simplemente en cadenas (escaneadas adecuadamente) y se ejecuta el SQL resultante. En cambio, un DBMS al que se le pidi&amp;oacute; que &quot;preparara&quot; una declaraci&amp;oacute;n presenta un plan de consulta completo sobre c&amp;oacute;mo ejecutar&amp;iacute;a esa consulta, incluidas las tablas e &amp;iacute;ndices que usar&amp;iacute;a, que ser&amp;aacute;n las mismas independientemente de c&amp;oacute;mo complete los marcadores de posici&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4b5a2cee39ea258afb1c8f413cd4b8614e84b9c1" translate="yes" xml:space="preserve">
          <source>Using the former isn't inherently more safe than the latter, you need to sanitize the input whether it's part of a parameter array or a simple variable.  So I don't see anything wrong with using the latter form with &lt;code&gt;$table&lt;/code&gt;, provided you make sure that the content of &lt;code&gt;$table&lt;/code&gt; is safe (alphanum plus underscores?) before using it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Usar el primero no es inherentemente m&amp;aacute;s seguro que el segundo, debe desinfectar la entrada ya sea parte de una matriz de par&amp;aacute;metros o una variable simple. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo tanto, no veo nada de malo en usar el &amp;uacute;ltimo formulario con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$table&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , siempre que se asegure de que el contenido de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$table&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; sea ​​seguro (&amp;iquest;alfanum m&amp;aacute;s guiones bajos?) Antes de usarlo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f1d29c71706c88f5bfc0eda5abb752bd03114d53" translate="yes" xml:space="preserve">
          <source>Why can't I pass the table name to a prepared PDO statement?</source>
          <target state="translated">¿Por qué no puedo pasar el nombre de la mesa a una declaración preparada de la DOP?</target>
        </trans-unit>
        <trans-unit id="ad0846d159368e05174643cfb15ae8e34fd48113" translate="yes" xml:space="preserve">
          <source>You cannot use a prepared statement to bind a database.</source>
          <target state="translated">No se puede utilizar una declaración preparada para vincular una base de datos.</target>
        </trans-unit>
        <trans-unit id="c870c45bc08c3074aad1e8f9f5c6cd8547361f2f" translate="yes" xml:space="preserve">
          <source>will not work. Use a safelist instead.</source>
          <target state="translated">no funcionará.Usa una lista de seguridad en su lugar.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
