<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/18641899">
    <body>
      <group id="18641899">
        <trans-unit id="e3c892c5b997f08e9fd46773279483ded5db6112" translate="yes" xml:space="preserve">
          <source>(Note that &lt;a href=&quot;https://www.reddit.com/r/javascript/comments/2is81v/why_is_not_systemjs_dominating_the_field_of/cla66t3&quot;&gt;Webpack&lt;/a&gt; and &lt;a href=&quot;https://nolanlawson.com/2016/08/15/the-cost-of-small-modules/&quot;&gt;rollup&lt;/a&gt; are widely regarded to be better than Browserify as of Aug 2016.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(참고 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.reddit.com/r/javascript/comments/2is81v/why_is_not_systemjs_dominating_the_field_of/cla66t3&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;웹팩&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://nolanlawson.com/2016/08/15/the-cost-of-small-modules/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;롤업&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 널리 8월 2016 년 기준으로 더 나은 Browserify 이상으로 간주된다)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92fe5c7fac3d92d06d9df011ab00a3c3e302fbf3" translate="yes" xml:space="preserve">
          <source>2017-Oct update</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2017 년 10 월 업데이트&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f78cdfaf23c26fd843a6f84f55a00399daf4f585" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://bower.io&quot;&gt;Bower&lt;/a&gt; is created solely for the front-end and is optimized with that in mind.</source>
          <target state="translated">&lt;a href=&quot;http://bower.io&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bower&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 프론트 엔드 전용으로 만들어졌으며이를 염두에두고 최적화되었습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bc06d7b4679ae6190cf79f86970fd22e5998a5eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://maxogden.com/nested-dependencies.html&quot;&gt;Nested Dependencies&lt;/a&gt; - Insight into why node_modules works the way it does</source>
          <target state="translated">&lt;a href=&quot;http://maxogden.com/nested-dependencies.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;중첩 된 종속성&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -node_modules가 작동하는 방식에 대한 통찰력&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7aac87e5459fe6d9ca0b62445d05bba068ec9c58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.npmjs.org&quot;&gt;npm&lt;/a&gt; started out managing node.js modules (that's why packages go into &lt;code&gt;node_modules&lt;/code&gt; by default), but it works for the front-end too when combined with &lt;a href=&quot;http://browserify.org/&quot;&gt;Browserify&lt;/a&gt; or &lt;a href=&quot;https://webpack.js.org/&quot;&gt;webpack&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;npm&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 node.js 모듈 관리를 시작했지만 ( &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본적 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;으로 패키지가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;node_modules&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 들어가는 이유 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;) &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://browserify.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Browserify&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://webpack.js.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;webpack&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 결합하면 프론트 엔드에서도 작동합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0cb78dd5293e4dcfb423cd4dfac8f9dc48a1bff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.quora.com/Why-use-Bower-when-there-is-npm/answer/Mattias-Petter-Johansson&quot;&gt;From Mattias Petter Johansson, JavaScript developer at Spotify&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://www.quora.com/Why-use-Bower-when-there-is-npm/answer/Mattias-Petter-Johansson&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;마티아스 페터 요한슨, 스포티 파이에서 자바 스크립트 개발자에서&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f06bcb86c1c7be741ceed309e7a0f6cfb0ab3c1b" translate="yes" xml:space="preserve">
          <source>&lt;del&gt;dep A v1.0&lt;/del&gt; (uses root version)</source>
          <target state="translated">&lt;del&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;뎁 A v1.0&lt;/font&gt;&lt;/font&gt;&lt;/del&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (루트 버전 사용)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f10bae949b8a16b21d09c993312190dfbdecdf78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;On &lt;a href=&quot;http://bower.io/&quot;&gt;Bower&lt;/a&gt; homepage:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://bower.io/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;바우어의&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 홈페이지 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f5b81812627f96a354672b6975a48bc1714e7e1b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;On the &lt;a href=&quot;https://web.archive.org/web/20150906022540/https://docs.npmjs.com/misc/faq#why-can-t-npm-just-put-everything-in-one-place-like-other-package-managers&quot;&gt;npm FAQ&lt;/a&gt;:&lt;/strong&gt; (archive.org link from 6 Sep 2015)</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;온 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://web.archive.org/web/20150906022540/https://docs.npmjs.com/misc/faq#why-can-t-npm-just-put-everything-in-one-place-like-other-package-managers&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NPM 자주 묻는 질문&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (2015 9월 6일에서 archive.org 링크)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5fe995ebe89c0054fa664d0bd5da938d6bc266fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;So, why bother using npm?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇다면 왜 npm을 사용합니까?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bdb98bbfbf10fb45bde35a5238bebaa1dc162fb2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TL;DR: The biggest difference in everyday use isn't nested dependencies... it's the difference between modules and globals.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TL; DR : 일상적인 사용에서 가장 큰 차이점은 중첩 된 종속성이 아니라 모듈과 전역의 차이점입니다.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f8a4293b1fa984cdd4b664564082fc0b64c80768" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update for npm 3:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;npm 3 업데이트 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eaea6fd2d2bc84c6ededdc7e25cdf16ba5fb0c92" translate="yes" xml:space="preserve">
          <source>A nested dependency tree means that your dependencies can have their own dependencies which can have their own, and so on. This allows for two modules to require different versions of the same dependency and still work. Note since npm v3, the dependency tree will by flat by default (saving space) and only nest where needed, e.g., if two dependencies need their own version of Underscore.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;중첩 된 종속성 트리는 종속성에 고유 한 종속성 등이있을 수 있음을 의미합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이를 통해 두 모듈이 서로 다른 버전의 동일한 종속성을 요구하고 여전히 작동합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;npm v3 이후로 종속성 트리는 기본적으로 기본적으로 공간을 절약하고 필요한 경우에만 중첩됩니다 (예 : 두 종속성에 자체 버전의 Underscore가 필요한 경우).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="84a41066d598e49b9565bb2244854cc5222cd495" translate="yes" xml:space="preserve">
          <source>AND, since ES6 modules (which you'll likely transpile to ES5 with Babel or similar) are gaining wide acceptance, and work both in the browser or in Node 4.0, we should mention a &lt;a href=&quot;https://24ways.org/2014/javascript-modules-the-es6-way/&quot;&gt;good overview&lt;/a&gt; of those as well.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 ES6 모듈 (Babel 또는 이와 유사한 기능을 갖춘 ES5로 변환 될 가능성이 높음)이 널리 수용되고 있으며 브라우저 나 노드 4.0에서 모두 작동하기 때문에 이러한 모듈에 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://24ways.org/2014/javascript-modules-the-es6-way/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대한 개요도&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 언급해야 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="80b982db3e9c288d5d4bcca334dd4cf0b1f70216" translate="yes" xml:space="preserve">
          <source>All code in Node land (and thus all code loaded via npm) is structured as modules (specifically, as an implementation of the &lt;a href=&quot;http://wiki.commonjs.org/wiki/Modules&quot;&gt;CommonJS module format&lt;/a&gt;, or now, as an ES6 module). So, if you use NPM to handle browser-side dependencies (via Browserify or something else that does the same job), you'll structure your code the same way Node does.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Node land의 모든 코드 (및 npm을 통해로드 된 모든 코드)는 모듈 (구체적으로 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://wiki.commonjs.org/wiki/Modules&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CommonJS 모듈 형식&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 구현 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는 현재 ES6 모듈)로 구성됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 NPM을 사용하여 Browser-side 종속성을 처리하는 경우 (Browserify 또는 동일한 작업을 수행하는 다른 작업을 통해) Node와 같은 방식으로 코드를 구성합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b7112e09e2e3e4d3c4004068f35d6c8082ad1cdd" translate="yes" xml:space="preserve">
          <source>All package managers have many downsides. You just have to pick which you can live with.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 패키지 관리자는 많은 단점이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 당신이 살 수있는 것을 선택해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="58a384fd8df3ac3473e2f22a90e9be1e67a537d3" translate="yes" xml:space="preserve">
          <source>And, while Yarn &lt;a href=&quot;https://github.com/yarnpkg/yarn/issues/6953&quot;&gt;is still active&lt;/a&gt;, a lot of the momentum for it shifted back to npm once it adopted some of Yarn's key features.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 Yarn &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/yarnpkg/yarn/issues/6953&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 여전히 활성화되어 있지만&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Yarn의 주요 기능 중 일부를 채택하면 많은 모멘텀이 npm으로 되돌아갔습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4afd7a7442270503aeaf33257a946a311d9b6168" translate="yes" xml:space="preserve">
          <source>Anything inside a module is effectively &lt;em&gt;namespaced&lt;/em&gt;, meaning it's not a global variable any more, and you can't accidentally reference it without intending to.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모듈 내부의 모든 것은 사실상 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;네임 스페이스&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이므로 더 이상 전역 변수가 아니며 의도하지 않고 실수로 참조 할 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9168b8d058bc060bbe6bf5378c81e99ea0cad65d" translate="yes" xml:space="preserve">
          <source>Anything inside a module must be intentionally injected into a particular context (usually another module) in order to make use of it</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모듈을 사용하려면 모듈 내부의 모든 것을 특정 컨텍스트 (일반적으로 다른 모듈)에 의도적으로 주입해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f915628888bfa74240472d1661e6258d71aa6295" translate="yes" xml:space="preserve">
          <source>As you can see it installs some dependencies recursively. Dependency A has three installed instances!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;보시다시피 일부 종속성을 재귀 적으로 설치합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;종속성 A에는 세 개의 설치된 인스턴스가 있습니다!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c498e95f342cf8dd4edef009af31352ff70e47fa" translate="yes" xml:space="preserve">
          <source>As you can see, although they perform a similar task they are targeted to a very different set of libraries.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;보시다시피, 비슷한 작업을 수행하지만 매우 다른 라이브러리 세트를 대상으로합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9280c0fa1518b440aa2a189606cd5f05fb4d3687" translate="yes" xml:space="preserve">
          <source>At root, Bower is about loading plain-old script files. Whatever those script files contain, Bower will load them. Which basically means that Bower is just like including all your scripts in plain-old &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;'s in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; of your HTML.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본적으로 Bower는 일반 스크립트 파일을로드하는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해당 스크립트 파일이 무엇이든 Bower가로드합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본적으로 Bower는 모든 스크립트를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HTML &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 &lt;/font&gt; &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 일반 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 로&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 포함시키는 것과 같습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b6226b6d89fa8bd8e51e2f74998aab3a7e75d888" translate="yes" xml:space="preserve">
          <source>At the end of a file, you export whatever you want to share with the world, like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파일 끝에서 다음과 같이 세상과 공유하려는 모든 것을 내 보냅니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90a596114e041b7baa76045909003b6aa08b2846" translate="yes" xml:space="preserve">
          <source>Because all dependencies are manually injected into a particular module, it's very easy to reason about them. You know for a fact: &lt;em&gt;&quot;The only code I need to consider when working on this is what I have intentionally chosen to inject here&quot;&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 종속성은 특정 모듈에 수동으로 주입되기 때문에 추론하기가 매우 쉽습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 사실을 알고 있습니다 : &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;이 작업을 할 때 고려해야 할 유일한 코드는 의도적으로 여기에 주입하기로 선택한 것&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;&lt;/font&gt;&lt;/em&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a528f6ce5fe221e230a6ad48460adc2e89a8742" translate="yes" xml:space="preserve">
          <source>Because even the content of injected modules is &lt;em&gt;encapsulated&lt;/em&gt; behind the variable you assign it to, and all code executes inside a limited scope, surprises and collisions become very improbable. It's much, much less likely that something from one of your dependencies will accidentally redefine a global variable without you realizing it, or that you will do so. (It &lt;em&gt;can&lt;/em&gt; happen, but you usually have to go out of your way to do it, with something like &lt;code&gt;window.variable&lt;/code&gt;. The one accident that still tends to occur is assigning &lt;code&gt;this.variable&lt;/code&gt;, not realizing that &lt;code&gt;this&lt;/code&gt; is actually &lt;code&gt;window&lt;/code&gt; in the current context.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주입 된 모듈의 내용조차도 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용자가 할당 한 변수 뒤에 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;캡슐화&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 되고 모든 코드가 제한된 범위 내에서 실행되므로 놀라움과 충돌이 매우 불가능합니다. 의존성 중 하나에서 무언가가 실수로 전역 변수를 재정의하지 않고 실수로 재정의하거나 그렇게 할 가능성은 훨씬 적습니다. (이 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 일이 있지만, 일반적으로 같은과, 그것을 할 수있는 길 밖으로 갈 필요가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;window.variable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . 한 사고를 여전히이 할당 발생하는 경향이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this.variable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하지 않는 것이 실현 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 실제로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;window&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 현재에 문맥.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="81c86cde680e865b9b88b72ded5b749973ef009f" translate="yes" xml:space="preserve">
          <source>Bower brands itself as the package manager for the web. It would be awesome if this was true  - a package manager that made my life better as a front-end developer would be awesome. The problem is that Bower offers no specialized tooling for the purpose. It offers NO tooling that I know of that npm doesn't, and especially none that is specifically useful for front-end developers. &lt;strong&gt;There is simply no benefit for a front-end developer to use Bower over npm.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bower는 자체적으로 웹 패키지 관리자로 브랜드화합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 사실이라면 정말 좋을 것입니다. 프론트 엔드 개발자로서 제 인생을 더 좋게 만든 패키지 관리자는 정말 좋을 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문제는 Bower가 목적에 맞는 특수 공구를 제공하지 않는다는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 npm이 알지 못하는 툴링을 제공하지 않으며 특히 프론트 엔드 개발자에게 특히 유용한 툴을 제공하지 않습니다. &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프론트 엔드 개발자가 npm 이상 Bower를 사용하는 것은 아무런 이점이 없습니다.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d48238e40f0d7b72637017d7657f4d647349ce4e" translate="yes" xml:space="preserve">
          <source>Bower has a much smaller amount of packages.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;바우어는 훨씬 적은 양의 패키지를 가지고 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="74f7e154cf90a6f20a1f1346fb7c0a75512239bb" translate="yes" xml:space="preserve">
          <source>Bower has finally been &lt;a href=&quot;https://bower.io/blog/2017/how-to-migrate-away-from-bower/&quot;&gt;deprecated&lt;/a&gt;. End of story.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bower는 마침내 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://bower.io/blog/2017/how-to-migrate-away-from-bower/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 이상 사용되지 않습니다&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이야기의 끝.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1f14a2566a3a0034b1a47f9d222a931af930d704" translate="yes" xml:space="preserve">
          <source>Bower includes styles etc.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bower는 스타일 등을 포함합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a37db661f9bee5fa29cd0e46faa7dd983cd5b2e" translate="yes" xml:space="preserve">
          <source>Bower is optimized for the front-end. Bower uses a flat dependency
  tree, requiring only one version for each package, reducing page load
  to a minimum.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bower는 프론트 엔드에 최적화되어 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bower는 각 패키지마다 하나의 버전 만 필요로하는 단순 종속성 트리를 사용하여 페이지로드를 최소로 줄입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="52fe873c829f4f34c5ec439884791e1f680e385a" translate="yes" xml:space="preserve">
          <source>Bower maintains a single version of modules, it only tries to help you select the correct/best one for you.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bower는 단일 버전의 모듈을 유지 관리하며 올바른 / 최고의 모듈을 선택하도록 도와줍니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ab1a4b4968d463c8ce88330a9b1fd3a71beb3177" translate="yes" xml:space="preserve">
          <source>Bower's interface kept changing</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;바우어의 인터페이스는 계속 바뀌었다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1df781e973be6f5d828e526665db573d1995d28b" translate="yes" xml:space="preserve">
          <source>Bower:</source>
          <target state="translated">Bower:</target>
        </trans-unit>
        <trans-unit id="87c3cb4e3a844692bdc4e43322ceccf8599f9ad3" translate="yes" xml:space="preserve">
          <source>But beyond that, &lt;em&gt;Bower doesn't change how we write javascript&lt;/em&gt;. Nothing about what goes inside the files loaded by Bower needs to change at all. In particular, this means that the resources provided in scripts loaded by Bower will (usually, but not always) still be defined as &lt;em&gt;global variables&lt;/em&gt;, available from anywhere in the browser execution context.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 그 이상으로 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bower는 javascript 작성 방법을 변경하지 않습니다&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bower가로드 한 파일에 들어가는 내용은 전혀 변경할 필요가 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;특히 이것은 Bower가로드 한 스크립트에서 제공되는 리소스 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가 브라우저 실행 컨텍스트의 어느 곳에서나 사용할 수있는 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전역 변수&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 정의 될 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수 있음을 의미합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c1e9558b963244ee33e23be26311a9c47276e84" translate="yes" xml:space="preserve">
          <source>But this distinction of &lt;strong&gt;modules vs. globals&lt;/strong&gt; (or modules vs. 'scripts') is possibly the most important difference between Bower and npm. &lt;em&gt;The npm approach of putting everything in modules requires you to change the way you write Javascript for the browser, almost certainly for the better.&lt;/em&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모듈 대 전역&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (또는 모듈 대 '스크립트') &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 이러한 구분은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bower와 npm의 가장 중요한 차이점 일 수 있습니다. &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모듈에 모든 것을 넣는 npm 접근 방식을 사용하려면 브라우저의 Javascript 작성 방식을 거의 확실히 개선해야합니다.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="43968845091b9b89abbdfbe8fc2ebf6e725caa8a" translate="yes" xml:space="preserve">
          <source>CommonJS support is not straightforward</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CommonJS 지원은 간단하지 않습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="670322c662f5796d3e665f381e70b0501f21949d" translate="yes" xml:space="preserve">
          <source>Dependency handling</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의존성 처리&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="83d98262d5a843d8c9068c24cb3dee353316f7a2" translate="yes" xml:space="preserve">
          <source>EDIT (Feb 2017): Facebook's &lt;a href=&quot;http://yarnpkg.com&quot;&gt;Yarn&lt;/a&gt; is a very important potential replacement/supplement for npm these days: fast, deterministic, offline package-management that builds on what npm gives you. It's worth a look for any JS project, particularly since it's so easy to swap it in/out.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;편집 (2017 년 2 월) : Facebook의 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://yarnpkg.com&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Yarn&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 요즘 npm을위한 매우 중요한 잠재적 교체 / 보충입니다 : npm이 제공하는 것을 기반으로하는 빠르고 결정적인 오프라인 패키지 관리입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JS 프로젝트를 살펴볼 가치가 있습니다. 특히 프로젝트를 쉽게 교체 할 수 있기 때문입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="745c7d7dcdf1e7cb2140ae930e92a614c3ace3a1" translate="yes" xml:space="preserve">
          <source>EDIT (May 2019)
&quot;Bower has finally been &lt;a href=&quot;https://bower.io/blog/2017/how-to-migrate-away-from-bower/&quot;&gt;deprecated&lt;/a&gt;. End of story.&quot; (h/t: @DanDascalescu, below, for pithy summary.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;EDIT (2019 년 5 월) &quot;Bower는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://bower.io/blog/2017/how-to-migrate-away-from-bower/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 이상 사용되지 않습니다&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . 스토리 끝.&quot; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(h / t : @DanDascalescu, 아래에 정리 요약이 나와 있습니다.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2fece52345aefab97f90eb601e517505fc8ce950" translate="yes" xml:space="preserve">
          <source>For many people working with node.js, a major benefit of bower is for managing dependencies that are not javascript at all. If they are working with languages that compile to javascript, npm can be used to manage some of their dependencies. however, not all their dependencies are going to be node.js modules. Some of those that compile to javascript may have weird source language specific mangling that makes passing them around compiled to javascript an inelegant option when users are expecting source code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;node.js를 사용하는 많은 사람들에게 bower의 주요 이점은 전혀 자바 스크립트가 아닌 종속성을 관리하는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Javascript로 컴파일되는 언어로 작업하는 경우 npm을 사용하여 일부 종속성을 관리 할 수 ​​있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 모든 종속성이 node.js 모듈이되는 것은 아닙니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자바 스크립트로 컴파일하는 일부 사용자는 소스 코드를 기대할 때 이상한 소스 언어 특정 맹 글링을 사용하여 컴파일 된 코드를 자바 스크립트로 전달하는 것이 바람직하지 않은 옵션이 될 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5ae73b2a42b368d275358551f80727378f2df3a6" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;a href=&quot;https://medium.com/@nickheiner/why-my-team-uses-npm-instead-of-bower-eecfe1b9afcb&quot;&gt;&quot;Why my team uses npm instead of bower&quot;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자세한 내용은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://medium.com/@nickheiner/why-my-team-uses-npm-instead-of-bower-eecfe1b9afcb&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;팀에서 bower 대신 npm을 사용하는 이유&quot;를&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 참조하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ae1ae48f995c4befd6de748153f383a237ae93bc" translate="yes" xml:space="preserve">
          <source>For more information, I suggest reading the &lt;a href=&quot;https://docs.npmjs.com/how-npm-works/npm3-dupe&quot;&gt;docs of npm 3&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자세한 내용 &lt;/font&gt;&lt;a href=&quot;https://docs.npmjs.com/how-npm-works/npm3-dupe&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 npm 3&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문서를&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 읽는 것이 좋습니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7db4769e46e49080ea926036a1bd91ab4a492340" translate="yes" xml:space="preserve">
          <source>Found this useful explanation from &lt;a href=&quot;http://ng-learn.org/2013/11/Bower-vs-npm/&quot;&gt;http://ng-learn.org/2013/11/Bower-vs-npm/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 유용한 설명은 &lt;/font&gt;&lt;a href=&quot;http://ng-learn.org/2013/11/Bower-vs-npm/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://ng-learn.org/2013/11/Bower-vs-npm/&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 발견되었습니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4c0f7c1da6cc793ed10c3326398d674f59b073d4" translate="yes" xml:space="preserve">
          <source>Handling of styles etc</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스타일 처리&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65498994a3f03dc4a793bdd223c57781d0eba80b" translate="yes" xml:space="preserve">
          <source>Here you see that all unique dependencies are on the same level.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서는 모든 고유 한 종속성이 동일한 수준에 있음을 알 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">History</target>
        </trans-unit>
        <trans-unit id="66635288d97fadb7c1c87b234af29ade55f84465" translate="yes" xml:space="preserve">
          <source>I think the previous posters have covered well some of the basic distinctions. (npm's use of nested dependencies is indeed very helpful in managing large, complex applications, though I don't think it's the most important distinction.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이전 포스터는 기본적인 차이점을 잘 다루었다고 생각합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(npm의 중첩 된 종속성 사용은 실제로 가장 중요한 차이점이라고 생각하지 않지만 크고 복잡한 응용 프로그램을 관리하는 데 실제로 도움이됩니다.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a65d47b999b705dfb3c35b9cb8d8793e75537290" translate="yes" xml:space="preserve">
          <source>I'm surprised, however, that nobody has explicitly explained one of the most fundamental distinctions between Bower and npm. If you read the answers above, you'll see the word 'modules' used often in the context of npm. But it's mentioned casually, as if it might even just be a syntax difference.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 Bower와 npm의 가장 근본적인 차이점 중 하나를 명시 적으로 설명한 사람은 아무도 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 답변을 읽으면 'pms'라는 단어가 npm의 맥락에서 자주 사용됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 그것은 단지 구문 차이 일 수있는 것처럼 우연히 언급됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7ca9261def014f1a3d3d7cd3e6f7d88ed6f3749b" translate="yes" xml:space="preserve">
          <source>If a Bower dependency then specifies its own dependencies in its &lt;code&gt;bower.json&lt;/code&gt;, those'll be downloaded for you as well.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bower 종속성이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;bower.json&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 자체 종속성을 지정하면 해당 종속성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;도 다운로드됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a76a8f95de35071ca133346ff2882ac17d71c8d9" translate="yes" xml:space="preserve">
          <source>In almost all cases, it's more appropriate to use Browserify and npm over Bower. It is simply a better packaging solution for front-end apps than Bower is. At Spotify, we use npm to package entire web modules (html, css, js) and it works very well.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;거의 모든 경우에 Bower보다 Browserify 및 npm을 사용하는 것이 더 적합합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bower보다 프론트 엔드 앱을위한 더 나은 패키징 솔루션입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Spotify에서는 npm을 사용하여 전체 웹 모듈 (html, css, js)을 패키징하고 매우 잘 작동합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fb0750875d95a9fc3c27978d41dff79ada043db3" translate="yes" xml:space="preserve">
          <source>In short, npm aims for stability. Bower aims for minimal resource load. If you draw out the dependency structure, you will see this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;요컨대, npm은 안정성을 목표로합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bower는 최소한의 리소스로드를 목표로합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의존성 구조를 작성하면 다음과 같이 나타납니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="26de97e6ff3ab7f11b45edaa0684f030ee6002e1" translate="yes" xml:space="preserve">
          <source>Inside the file/module, you do whatever you normally would, and create some object or function that you'll want to expose to outside users, calling it perhaps &lt;code&gt;myModule&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파일 / 모듈 내에서 일반적으로하는 모든 작업을 수행하고 외부 사용자에게 노출하려는 객체 또는 함수를 만들어 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;myModule&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이라고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;부릅니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a8832e97ea3b7026213239e777f32f9d777dc727" translate="yes" xml:space="preserve">
          <source>It is much harder to avoid dependency conflicts without nesting
  dependencies. This is fundamental to the way that npm works, and has
  proven to be an extremely successful approach.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;중첩 종속성없이 종속성 충돌을 피하는 것이 훨씬 어렵습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 npm이 작동하는 방식의 기본이며 매우 성공적인 접근 방식으로 입증되었습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8d63fc8f192ef04dffb070c89ae7fb8865bf68cb" translate="yes" xml:space="preserve">
          <source>It only takes about 30 seconds to learn how to use the CommonJS/Node module syntax. Inside a given JS file, which is going to be a module, you first declare any outside dependencies you want to use, like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CommonJS / Node 모듈 구문을 사용하는 방법을 배우는 데 약 30 초가 걸립니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모듈이 될 주어진 JS 파일 내에서 먼저 다음과 같이 사용하려는 외부 종속성을 선언하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fb5abba279f6cf5fe8440430f216c55119018ae6" translate="yes" xml:space="preserve">
          <source>Javascript dependency management : npm vs bower vs volo?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자바 스크립트 의존성 관리 : npm vs bower vs volo?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6d6f7e5bee47bdc0df8bc3ebdd9c6d21bc4dada" translate="yes" xml:space="preserve">
          <source>Keeping bower.json version field in sync with git tags is painful</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bower.json 버전 필드를 git 태그와 동기화하는 것은 고통 스럽습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a390fb41cf45fca013e3e3aad03183596257c96" translate="yes" xml:space="preserve">
          <source>Maybe dependency B requires a different version of dependency A than dependency C. npm installs both versions of this dependency so it will work anyway, but Bower will give you a &lt;em&gt;conflict&lt;/em&gt; because it does not like duplication (because loading the same resource on a webpage is very inefficient and costly, also it can give some serious errors). You will have to manually pick which version you want to install. This can have the effect that one of the dependencies will break, but that is something that you will need to fix anyway.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어쩌면 종속성 B는 종속성 C와 다른 버전의 종속성 A가 필요할 수 있습니다. npm 은이 종속성의 두 버전을 모두 설치하므로 어쨌든 작동하지만 Bower는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;중복을 좋아하지 않기 때문에 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;충돌&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 줄 것입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(웹 페이지에 동일한 리소스를로드하기 때문에) 매우 비효율적이고 비용이 많이 들며 심각한 오류가 발생할 수 있습니다). 설치할 버전을 수동으로 선택해야합니다. 이렇게하면 종속성 중 하나가 중단 될 수 있지만 어쨌든 수정해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9e897fed4dcf806273fa8fbffa1b45132045ff35" translate="yes" xml:space="preserve">
          <source>More about patterns for working with modules in &lt;a href=&quot;http://darrenderidder.github.io/talks/ModulePatterns/&quot;&gt;this deck&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://darrenderidder.github.io/talks/ModulePatterns/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 데크&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 모듈로 작업하기위한 패턴에 대해 자세히 알아보십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8de8207e228c553e4b4edd53a448691c89c24a11" translate="yes" xml:space="preserve">
          <source>My team moved away from Bower and migrated to npm because:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리 팀은 Bower를 떠나 다음과 같은 이유로 npm으로 마이그레이션했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8fb8e37218981e994f1c3e84742ef8a01d7f5c86" translate="yes" xml:space="preserve">
          <source>NPM is better for node modules because there is a module system and you're working locally.
Bower is good for the browser because currently there is only the global scope, and you want to be very selective about the version you work with.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모듈 시스템이 있고 로컬에서 작업하기 때문에 NPM이 노드 모듈에 더 좋습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bower는 현재 글로벌 범위 만 있고 작업하는 버전에 대해 매우 선택 적이기 때문에 브라우저에 적합합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65805ad02f6cd960d86fc95bbe81b89d1d2b5fa2" translate="yes" xml:space="preserve">
          <source>Not everything in an npm package needs to be user-facing javascript, but for npm library packages, at least some of it should be.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;npm 패키지의 모든 내용이 사용자 용 자바 스크립트 일 필요는 없지만 npm 라이브러리 패키지의 경우 최소한 일부가 있어야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dfa4bc130128bf0aaef14a6bc250bc1045cfc71d" translate="yes" xml:space="preserve">
          <source>Older answer</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이전 답변&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6354af45764b22770585b3e727b2bc004e011bbe" translate="yes" xml:space="preserve">
          <source>On one hand npm was created to install modules used in a node.js environment, or development tools built using node.js such Karma, lint, minifiers and so on. npm can install modules locally in a project ( by default in node_modules ) or globally to be used by multiple projects. In large projects the way to specify dependencies is by creating a file called package.json which contains a list of dependencies. That list is recognized by npm when you run npm install, which then downloads and installs them for you.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한편으로 npm은 node.js 환경에서 사용되는 모듈 또는 Karma, lint, minifiers 등과 같은 node.js를 사용하여 작성된 개발 도구를 설치하기 위해 만들어졌습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;npm은 프로젝트에서 로컬로 (기본적으로 node_modules) 모듈을 설치하거나 여러 프로젝트에서 사용하기 위해 전체적으로 모듈을 설치할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대규모 프로젝트에서 종속성을 지정하는 방법은 종속성 목록이 포함 된 package.json이라는 파일을 작성하는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 목록은 npm install을 실행할 때 npm에 의해 인식 된 다음이를 다운로드하여 설치합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="356fb47f91b691300680256e8b273213c6aae0f6" translate="yes" xml:space="preserve">
          <source>On the other hand bower was created to manage your frontend dependencies. Libraries like jQuery, AngularJS, underscore, etc. Similar to npm it has a file in which you can specify a list of dependencies called bower.json. In this case your frontend dependencies are installed by running bower install which by default installs them in a folder called bower_components.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한편, bower는 프론트 엔드 종속성을 관리하기 위해 작성되었습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;jQuery, AngularJS, 밑줄 등과 같은 라이브러리. npm과 유사하게 bower.json이라는 종속성 목록을 지정할 수있는 파일이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 경우 프론트 엔드 종속성은 bower install을 실행하여 설치되며 기본적으로 bower_components라는 폴더에 설치됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e307479e8523f61b1c3913dbab367dd6c65ce4f0" translate="yes" xml:space="preserve">
          <source>Programmatic usage was painful</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로그래밍 방식의 사용법이 어려웠다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="87df60de337fb58864343e396696d74611e0d403" translate="yes" xml:space="preserve">
          <source>Resources</source>
          <target state="translated">Resources</target>
        </trans-unit>
        <trans-unit id="56358cfe25e58ee1f0a7fd11fff2a00cdf9e00b6" translate="yes" xml:space="preserve">
          <source>Size of repo</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;저장소의 크기&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e8d014987fb6d605c6e0e1f99243e39c950ebe59" translate="yes" xml:space="preserve">
          <source>Smarter people than I have tackled the question of 'Why modules?', but here's a capsule summary:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내가 왜 똑똑한 사람들이 '왜 모듈입니까?'라는 문제를 다루었지만 캡슐 요약은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee6c18de22e891c9b80027d5b1cbda03b96f551e" translate="yes" xml:space="preserve">
          <source>So, same basic approach you're used to, but you get some nice automation conveniences:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 동일한 기본 접근 방식을 사용하지만 몇 가지 자동화 편의를 얻을 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="46e1930ff4209d1abc23a5a0e14e70e8db2ec4e0" translate="yes" xml:space="preserve">
          <source>So, the common usage is Bower for the packages that you want to publish on your webpages (e.g. &lt;em&gt;runtime&lt;/em&gt;, where you avoid duplication), and use npm for other stuff, like testing, building, optimizing, checking, etc. (e.g. &lt;em&gt;development time&lt;/em&gt;, where duplication is of less concern).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 일반적인 사용법은 웹 페이지에 게시하려는 패키지 (예 : &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;런타임&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 중복을 피하는 위치) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에 대해 Bower &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이고 테스트, 빌드, 최적화, 확인 등과 같은 다른 항목 (예 : &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;개발 시간)에&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; npm을 사용합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;중복이 덜 우려되는 곳).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9cbe777696f3f98b5b8c300e3a222abf0aef370d" translate="yes" xml:space="preserve">
          <source>Some features, like the url shorthand, are entirely broken</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;url 속기와 같은 일부 기능은 완전히 손상되었습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92cf952778a32acc7a90b74f5298a78e6126952b" translate="yes" xml:space="preserve">
          <source>Some projects use both is that they use Bower for front-end packages and npm for developer tools like Yeoman, Grunt, Gulp, JSHint, CoffeeScript, etc.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일부 프로젝트는 프론트 엔드 패키지에는 Bower를, Yeoman, Grunt, Gulp, JSHint, CoffeeScript 등과 같은 개발자 도구에는 npm을 사용합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="936493c4e40ec80c06b09f5b273f3d8479e92c17" translate="yes" xml:space="preserve">
          <source>Source control != package management</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;소스 제어! = 패키지 관리&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed215664f2bd3726a035ba22d1ac0334c1dc4fd2" translate="yes" xml:space="preserve">
          <source>The Bower Approach: Global Resources, Like &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; Tags</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bower 접근법 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 태그 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;와 같은 글로벌 리소스&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99e8ef04515f6c45e7137916d6a1a7d4d74ba99b" translate="yes" xml:space="preserve">
          <source>The biggest difference is that npm does nested dependencies (but is flat by default) while Bower requires a flat dependency tree &lt;em&gt;(puts the burden of dependency resolution on the user)&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가장 큰 차이점은 NPM이 중첩 된 종속성을 수행이다 (그러나 기본적으로 평평하다) 정자가 평평한 종속성 트리가 필요하면서 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(풋 사용자에 종속 해상도의 부담을)&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e4dc6307bf3329c9171381eb249c05d690c4abb3" translate="yes" xml:space="preserve">
          <source>The npm Approach: Common JS Modules, Explicit Dependency Injection</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;npm 접근 방식 : 공통 JS 모듈, 명시 적 종속성 주입&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3dc90f6185fb33696241ec0b756b7f9990c24f7b" translate="yes" xml:space="preserve">
          <source>Then, to use a CommonJS-based workflow in the browser, you'll use tools like Browserify to grab all those individual module files, encapsulate their contents at runtime, and inject them into each other as needed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 브라우저에서 CommonJS 기반 워크 플로우를 사용하려면 Browserify와 같은 도구를 사용하여 모든 개별 모듈 파일을 가져 와서 런타임에 컨텐츠를 캡슐화하고 필요에 따라 서로 삽입하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49c40e5e0fd2efb70e2d89726d32e724895f8bb5" translate="yes" xml:space="preserve">
          <source>This answer is an addition to the answer of Sindre Sorhus. The major difference between npm and Bower is the way they treat recursive dependencies. Note that they can be used together in a single project.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 답변은 Sindre Sorhus의 답변에 추가 된 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;npm과 Bower의 주요 차이점은 재귀 종속성을 처리하는 방식입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;단일 프로젝트에서 함께 사용할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24d57acf55d025bac5d7c3ee0175f1147d314f57" translate="yes" xml:space="preserve">
          <source>This means you can have multiple versions of the same external dependency (lodash, let's say) in various parts of your application, and they won't collide/conflict. (This happens surprisingly often, because your own code wants to use one version of a dependency, but one of your external dependencies specifies another that conflicts. Or you've got two external dependencies that each want a different version.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉, 응용 프로그램의 여러 부분에서 동일한 외부 종속성 (lodash,하자)의 여러 버전을 가질 수 있으며 충돌 / 충돌하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(자신의 코드가 한 버전의 종속성을 사용하려고하지만 외부 종속성 중 하나가 충돌하는 다른 버전을 지정하기 때문에 놀라 울 정도로 자주 발생합니다. 또는 각각 다른 버전을 원하는 두 개의 외부 종속성이 있습니다.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="792a0d5fe777acd069b267aed137cfa5a40a3a10" translate="yes" xml:space="preserve">
          <source>To me, the use of modules for front-end code boils down to: working in a much narrower context that's easier to reason about and test, and having greater certainty about what's going on.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프론트 엔드 코드에 모듈을 사용하면 추론하고 테스트하기가 훨씬 더 좁은 컨텍스트에서 작업하고 어떤 일이 일어나고 있는지 확실하게 확인할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b1705c2add482c9a02c8d4196d5348dd7ca286fc" translate="yes" xml:space="preserve">
          <source>Using both Bower and npm in the same project is painful</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;같은 프로젝트에서 Bower와 npm을 모두 사용하는 것은 고통 스럽습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d1571328dab64f7825c632831fbe37680fb4b174" translate="yes" xml:space="preserve">
          <source>We should stop using bower and consolidate around npm. Thankfully, that is what &lt;a href=&quot;http://www.modulecounts.com/&quot;&gt;is happening&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리는 bower 사용을 중단하고 npm 주위에 강화해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;고맙게도, 그 일 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.modulecounts.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 일어나고 있습니다&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa4998d96017d325b3a07f2f0be85b944cb4ee9a" translate="yes" xml:space="preserve">
          <source>What is the difference between Bower and npm</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bower와 NPM의 차이점은 무엇입니까&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="493233b261ce1fe983ec786b3a719ef8f30c5259" translate="yes" xml:space="preserve">
          <source>What is the fundamental difference between &lt;code&gt;bower&lt;/code&gt; and &lt;code&gt;npm&lt;/code&gt;? Just want something plain and simple. I've seen some of my colleagues use &lt;code&gt;bower&lt;/code&gt; and &lt;code&gt;npm&lt;/code&gt; interchangeably in their projects.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;bower&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;npm&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 근본적인 차이점은 무엇입니까 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;평범하고 단순한 것을 원하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 동료 중 일부가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로젝트에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;bower&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;npm&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 상호 교환 적으로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하는 것을 보았습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="275d5bd4771827edf631c3d9f7dfb4acb26d4eaa" translate="yes" xml:space="preserve">
          <source>When you want to test an individual module, you're able to very easily know: exactly what else (dependencies) is affecting the code that runs inside the module? And, because you're explicitly injecting everything, you can easily mock those dependencies.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;개별 모듈을 테스트하려는 경우 모듈 내부에서 실행되는 코드에 정확히 어떤 다른 요소 (종속성)가 영향을 미치는지 쉽게 알 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 모든 것을 명시 적으로 주입하기 때문에 이러한 종속성을 쉽게 조롱 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0ea7edcd426a69dc4e2ffd9ce32ea0d9b3fa304d" translate="yes" xml:space="preserve">
          <source>With browserify or webpack, it becomes super-easy to concatenate all your modules into big minified files, which is awesome for performance, especially for mobile devices. Not so with Bower, which will require significantly more labor to get the same effect.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;browserify 또는 webpack을 사용하면 모든 모듈을 큰 축소 파일로 연결하는 것이 매우 쉬워 져 성능, 특히 모바일 장치에 적합합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;같은 효과를 얻으려면 훨씬 더 많은 노력이 필요합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="505dca46e300064a9457bdc421bba9c29e18ad69" translate="yes" xml:space="preserve">
          <source>You used to need to include JS dependencies in your project repo (while developing), or get them via CDN. Now, you can skip that extra download weight in the repo, and somebody can do a quick &lt;code&gt;bower install&lt;/code&gt; and instantly have what they need, locally.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예전에는 프로젝트 저장소에 JS 종속성을 포함 시키거나 (개발 중) CDN을 통해 JS 종속성을 가져와야했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 리포지토리에서 추가 다운로드 무게를 건너 뛸 수 있으며 누군가가 빠른 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;bower install&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하고 로컬에서 필요한 것을 즉시 가질 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e93e01806c14eb45009f9a3cda70cd44f997c058" translate="yes" xml:space="preserve">
          <source>[node_modules]</source>
          <target state="translated">[node_modules]</target>
        </trans-unit>
        <trans-unit id="1f2b44ce4ad4b3a1df4f1d6193620b7db1de5e33" translate="yes" xml:space="preserve">
          <source>dep A v1.0</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;뎁 A v1.0&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1eb2f1ffed1bff1f5bf273c9e16d150eaaff321c" translate="yes" xml:space="preserve">
          <source>dep A v2.0 (this version is different from the root version, so it will be an nested installation)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;dep A v2.0 (이 버전은 루트 버전과 다르므로 중첩 된 설치 임)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9ba95292f4397611a511e5aa7bdf6ccaa35d462e" translate="yes" xml:space="preserve">
          <source>dep B v1.0</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;뎁 B v1.0&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c52c552eb9cdd1e80d4faa098f31b3522a8b1001" translate="yes" xml:space="preserve">
          <source>dep C v1.0</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;뎁 C v1.0&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b8cbb7871bc1ef2213191800e2f802a80a446c1c" translate="yes" xml:space="preserve">
          <source>npm 3 still does things differently compared to Bower. It will install the dependencies globally, but only for the first version it encounters.  The other versions are installed in the tree (the parent module, then node_modules).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;npm 3은 여전히 ​​Bower와 다르게 작동합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;종속성을 전 세계적으로 설치하지만 첫 번째 버전에서만 발생합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 버전은 트리에 설치됩니다 (상위 모듈과 node_modules).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49f338486cf32be3afe459cba81d63d6fac2b93b" translate="yes" xml:space="preserve">
          <source>npm also offers you the ability to use multiple versions of modules simultaneously. If you have not done much application development, this might initially strike you as a bad thing, but once you've gone through a few bouts of &lt;a href=&quot;http://en.wikipedia.org/wiki/Dependency_hell&quot;&gt;Dependency hell&lt;/a&gt; you will realize that having the ability to have multiple versions of one module is a pretty darn great feature. Note that npm includes a very handy &lt;a href=&quot;https://docs.npmjs.com/cli/dedupe&quot;&gt;dedupe tool&lt;/a&gt; that automatically makes sure that you only use two versions of a module if you actually &lt;em&gt;have&lt;/em&gt; to - if two modules both &lt;em&gt;can&lt;/em&gt; use the same version of one module, they will. But if they &lt;em&gt;can't&lt;/em&gt;, you have a very handy out.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;npm은 또한 여러 버전의 모듈을 동시에 사용할 수있는 기능을 제공합니다. 많은 응용 프로그램 개발을 수행하지 않은 경우 처음에는 나쁜 일이 될 수 있지만 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Dependency_hell&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;종속성에&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대한 몇 가지 실패 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 겪고 나면 한 모듈의 여러 버전을 가질 수있는 능력이 꽤 있다는 것을 알게 될 것입니다. 훌륭한 기능. NPM이 매우 편리한 포함 참고 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.npmjs.com/cli/dedupe&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;중복 제거 도구를&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 자동으로 당신이 실제로있는 경우에만 모듈의 두 가지 버전을 사용할 수 있는지 확인합니다 것을 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 두 모듈이 모두있는 경우 -에 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 그들은 것 하나 개의 모듈의 동일한 버전을 사용하십시오. 그러나 그들이 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;할 수&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 없다면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;매우 유용합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="076b29b79d71d090b8ab776d3a64b53a8a6dcb6b" translate="yes" xml:space="preserve">
          <source>npm is focused on JavaScript. Styles are either downloaded separately or required by something like &lt;code&gt;npm-sass&lt;/code&gt; or &lt;code&gt;sass-npm&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;npm은 JavaScript에 중점을두고 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스타일은 별도로 다운로드하거나 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;npm-sass&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sass-npm&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 같은 형식으로 필요합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="16d331db1f0e99d9f6abd1b60151ec2e505a0b34" translate="yes" xml:space="preserve">
          <source>npm is much, much larger than bower, including general purpose JavaScript (like &lt;code&gt;country-data&lt;/code&gt; for country information or &lt;code&gt;sorts&lt;/code&gt; for sorting functions that is usable on the front end or the back end).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;npm은 범용 JavaScript ( &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;국가 정보의 국가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;country-data&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프런트 엔드 또는 백 엔드에서 사용할 수있는 정렬 함수의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sorts&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;포함하여 bower보다 훨씬 큽니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="582e3e8e9dd6fa1469d679f39c966e4aa32af1d0" translate="yes" xml:space="preserve">
          <source>npm:</source>
          <target state="translated">npm:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
