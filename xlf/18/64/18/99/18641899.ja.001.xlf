<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/18641899">
    <body>
      <group id="18641899">
        <trans-unit id="e3c892c5b997f08e9fd46773279483ded5db6112" translate="yes" xml:space="preserve">
          <source>(Note that &lt;a href=&quot;https://www.reddit.com/r/javascript/comments/2is81v/why_is_not_systemjs_dominating_the_field_of/cla66t3&quot;&gt;Webpack&lt;/a&gt; and &lt;a href=&quot;https://nolanlawson.com/2016/08/15/the-cost-of-small-modules/&quot;&gt;rollup&lt;/a&gt; are widely regarded to be better than Browserify as of Aug 2016.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2016年8月現在&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.reddit.com/r/javascript/comments/2is81v/why_is_not_systemjs_dominating_the_field_of/cla66t3&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Webpack&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://nolanlawson.com/2016/08/15/the-cost-of-small-modules/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ロールアップ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はBrowserifyよりも優れていると広く見なされています。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92fe5c7fac3d92d06d9df011ab00a3c3e302fbf3" translate="yes" xml:space="preserve">
          <source>2017-Oct update</source>
          <target state="translated">2017年10月更新</target>
        </trans-unit>
        <trans-unit id="f78cdfaf23c26fd843a6f84f55a00399daf4f585" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://bower.io&quot;&gt;Bower&lt;/a&gt; is created solely for the front-end and is optimized with that in mind.</source>
          <target state="translated">&lt;a href=&quot;http://bower.io&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bower&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はフロントエンド専用に作成され、それを念頭に置いて最適化されています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bc06d7b4679ae6190cf79f86970fd22e5998a5eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://maxogden.com/nested-dependencies.html&quot;&gt;Nested Dependencies&lt;/a&gt; - Insight into why node_modules works the way it does</source>
          <target state="translated">&lt;a href=&quot;http://maxogden.com/nested-dependencies.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ネストされた依存関係&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -node_modulesが機能する理由の洞察&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7aac87e5459fe6d9ca0b62445d05bba068ec9c58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.npmjs.org&quot;&gt;npm&lt;/a&gt; started out managing node.js modules (that's why packages go into &lt;code&gt;node_modules&lt;/code&gt; by default), but it works for the front-end too when combined with &lt;a href=&quot;http://browserify.org/&quot;&gt;Browserify&lt;/a&gt; or &lt;a href=&quot;https://webpack.js.org/&quot;&gt;webpack&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;npm&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はnode.jsモジュールの管理を開始しました（そのため、パッケージは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;デフォルトで&lt;/font&gt;&lt;/font&gt; &lt;code&gt;node_modules&lt;/code&gt; に移動&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します）が、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://browserify.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Browserify&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://webpack.js.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;webpack&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と組み合わせると、フロントエンドでも&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;機能し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0cb78dd5293e4dcfb423cd4dfac8f9dc48a1bff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.quora.com/Why-use-Bower-when-there-is-npm/answer/Mattias-Petter-Johansson&quot;&gt;From Mattias Petter Johansson, JavaScript developer at Spotify&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://www.quora.com/Why-use-Bower-when-there-is-npm/answer/Mattias-Petter-Johansson&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SpotifyのJavaScript開発者であるMattias Petter Johanssonから&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f06bcb86c1c7be741ceed309e7a0f6cfb0ab3c1b" translate="yes" xml:space="preserve">
          <source>&lt;del&gt;dep A v1.0&lt;/del&gt; (uses root version)</source>
          <target state="translated">&lt;del&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;dep A v1.0&lt;/font&gt;&lt;/font&gt;&lt;/del&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; （ルートバージョンを使用）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f10bae949b8a16b21d09c993312190dfbdecdf78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;On &lt;a href=&quot;http://bower.io/&quot;&gt;Bower&lt;/a&gt; homepage:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オン&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://bower.io/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バウアーの&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ホームページ：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f5b81812627f96a354672b6975a48bc1714e7e1b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;On the &lt;a href=&quot;https://web.archive.org/web/20150906022540/https://docs.npmjs.com/misc/faq#why-can-t-npm-just-put-everything-in-one-place-like-other-package-managers&quot;&gt;npm FAQ&lt;/a&gt;:&lt;/strong&gt; (archive.org link from 6 Sep 2015)</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オン&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://web.archive.org/web/20150906022540/https://docs.npmjs.com/misc/faq#why-can-t-npm-just-put-everything-in-one-place-like-other-package-managers&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NPMよくある質問&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（2015年9月6日からarchive.orgリンク）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5fe995ebe89c0054fa664d0bd5da938d6bc266fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;So, why bother using npm?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;では、なぜnpmを使用するのですか？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bdb98bbfbf10fb45bde35a5238bebaa1dc162fb2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TL;DR: The biggest difference in everyday use isn't nested dependencies... it's the difference between modules and globals.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TL; DR：日常的な使用における最大の違いは、依存関係のネストではありません...それは、モジュールとグローバルの違いです。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f8a4293b1fa984cdd4b664564082fc0b64c80768" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update for npm 3:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;npm 3の更新：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eaea6fd2d2bc84c6ededdc7e25cdf16ba5fb0c92" translate="yes" xml:space="preserve">
          <source>A nested dependency tree means that your dependencies can have their own dependencies which can have their own, and so on. This allows for two modules to require different versions of the same dependency and still work. Note since npm v3, the dependency tree will by flat by default (saving space) and only nest where needed, e.g., if two dependencies need their own version of Underscore.</source>
          <target state="translated">ネストされた依存関係ツリーとは、依存関係がそれぞれの依存関係を持つことができ、その依存関係がそれぞれの依存関係を持つことができることを意味します。これにより、2 つのモジュールが同じ依存関係の異なるバージョンを必要としていても動作するようになります。npm v3 以降、依存関係ツリーはデフォルトではフラットになり(スペースを節約するため)、必要な場所にのみ入れ子になることに注意してください。</target>
        </trans-unit>
        <trans-unit id="84a41066d598e49b9565bb2244854cc5222cd495" translate="yes" xml:space="preserve">
          <source>AND, since ES6 modules (which you'll likely transpile to ES5 with Babel or similar) are gaining wide acceptance, and work both in the browser or in Node 4.0, we should mention a &lt;a href=&quot;https://24ways.org/2014/javascript-modules-the-es6-way/&quot;&gt;good overview&lt;/a&gt; of those as well.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、ES6モジュール（BabelなどでES5にトランスパイルされる可能性が高い）は広く受け入れられており、ブラウザーとNode 4.0の両方で機能する&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://24ways.org/2014/javascript-modules-the-es6-way/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、それらの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;概要について&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;言及する必要があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="80b982db3e9c288d5d4bcca334dd4cf0b1f70216" translate="yes" xml:space="preserve">
          <source>All code in Node land (and thus all code loaded via npm) is structured as modules (specifically, as an implementation of the &lt;a href=&quot;http://wiki.commonjs.org/wiki/Modules&quot;&gt;CommonJS module format&lt;/a&gt;, or now, as an ES6 module). So, if you use NPM to handle browser-side dependencies (via Browserify or something else that does the same job), you'll structure your code the same way Node does.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nodeランド内のすべてのコード（つまり、npmを介して読み込まれるすべてのコード）は、モジュールとして（具体的には、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://wiki.commonjs.org/wiki/Modules&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CommonJSモジュール形式の&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実装として&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、または現在はES6モジュールとして&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）構造化されています&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、NPMを使用してブラウザー側の依存関係を処理する場合（Browserifyまたは同じことを行う他の何かを介して）、Nodeと同じようにコードを構成します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b7112e09e2e3e4d3c4004068f35d6c8082ad1cdd" translate="yes" xml:space="preserve">
          <source>All package managers have many downsides. You just have to pick which you can live with.</source>
          <target state="translated">すべてのパッケージマネージャーには多くの欠点があります。あなたは、あなたが一緒に暮らすことができるものを選ぶ必要があります。</target>
        </trans-unit>
        <trans-unit id="58a384fd8df3ac3473e2f22a90e9be1e67a537d3" translate="yes" xml:space="preserve">
          <source>And, while Yarn &lt;a href=&quot;https://github.com/yarnpkg/yarn/issues/6953&quot;&gt;is still active&lt;/a&gt;, a lot of the momentum for it shifted back to npm once it adopted some of Yarn's key features.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、Yarn &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/yarnpkg/yarn/issues/6953&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はまだアクティブですが&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、Yarnの主要な機能の一部を採用すると、Yarnの勢いの多くはnpmに戻りました。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4afd7a7442270503aeaf33257a946a311d9b6168" translate="yes" xml:space="preserve">
          <source>Anything inside a module is effectively &lt;em&gt;namespaced&lt;/em&gt;, meaning it's not a global variable any more, and you can't accidentally reference it without intending to.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;モジュール内の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてのもの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は事実上&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名前空間化されています&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。つまり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、モジュールは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もはやグローバル変数ではなく、意図せずに誤って参照することはできません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9168b8d058bc060bbe6bf5378c81e99ea0cad65d" translate="yes" xml:space="preserve">
          <source>Anything inside a module must be intentionally injected into a particular context (usually another module) in order to make use of it</source>
          <target state="translated">モジュールの中にあるものは、それを利用するために特定のコンテキスト (通常は別のモジュール)に意図的に注入されなければなりません。</target>
        </trans-unit>
        <trans-unit id="f915628888bfa74240472d1661e6258d71aa6295" translate="yes" xml:space="preserve">
          <source>As you can see it installs some dependencies recursively. Dependency A has three installed instances!</source>
          <target state="translated">ご覧のように、いくつかの依存関係を再帰的にインストールします。依存関係Aには3つのインスタンスがインストールされています!</target>
        </trans-unit>
        <trans-unit id="c498e95f342cf8dd4edef009af31352ff70e47fa" translate="yes" xml:space="preserve">
          <source>As you can see, although they perform a similar task they are targeted to a very different set of libraries.</source>
          <target state="translated">ご覧のように、似たようなタスクを実行しているにもかかわらず、対象としているライブラリは非常に異なっています。</target>
        </trans-unit>
        <trans-unit id="9280c0fa1518b440aa2a189606cd5f05fb4d3687" translate="yes" xml:space="preserve">
          <source>At root, Bower is about loading plain-old script files. Whatever those script files contain, Bower will load them. Which basically means that Bower is just like including all your scripts in plain-old &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;'s in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; of your HTML.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ルートでは、Bowerは古いスクリプトファイルをロードします。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらのスクリプトファイルに何が含まれていても、Bowerはそれらをロードします。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、Bowerは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、HTMLの&lt;/font&gt; &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;内の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてのスクリプトを従来の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;含めるようなもの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b6226b6d89fa8bd8e51e2f74998aab3a7e75d888" translate="yes" xml:space="preserve">
          <source>At the end of a file, you export whatever you want to share with the world, like this:</source>
          <target state="translated">ファイルの最後には、このように世界と共有したいものを何でも書き出します。</target>
        </trans-unit>
        <trans-unit id="90a596114e041b7baa76045909003b6aa08b2846" translate="yes" xml:space="preserve">
          <source>Because all dependencies are manually injected into a particular module, it's very easy to reason about them. You know for a fact: &lt;em&gt;&quot;The only code I need to consider when working on this is what I have intentionally chosen to inject here&quot;&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべての依存関係は手動で特定のモジュールに挿入されるため、それらについて推論するのは非常に簡単です。あなたは事実を知っています：&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「これに取り組むときに考慮する必要がある唯一のコードは、私がここに注入するために意図的に選択したものです」&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a528f6ce5fe221e230a6ad48460adc2e89a8742" translate="yes" xml:space="preserve">
          <source>Because even the content of injected modules is &lt;em&gt;encapsulated&lt;/em&gt; behind the variable you assign it to, and all code executes inside a limited scope, surprises and collisions become very improbable. It's much, much less likely that something from one of your dependencies will accidentally redefine a global variable without you realizing it, or that you will do so. (It &lt;em&gt;can&lt;/em&gt; happen, but you usually have to go out of your way to do it, with something like &lt;code&gt;window.variable&lt;/code&gt;. The one accident that still tends to occur is assigning &lt;code&gt;this.variable&lt;/code&gt;, not realizing that &lt;code&gt;this&lt;/code&gt; is actually &lt;code&gt;window&lt;/code&gt; in the current context.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注入されたモジュールのコンテンツでさえ、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;割り当てられた変数の背後に&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;カプセル化さ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れ、すべてのコードが限られたスコープ内で実行されるため、驚きや衝突はほとんど起こりません。依存関係の1つからの何かが、気付かないうちに誤ってグローバル変数を再定義するか、そうする可能性はほとんどありません。 （それ&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;起こる&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可能&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;性がありますが、通常は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;window.variable&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ようなものを使用して、それを行うためにあなたの方法から出なければなりません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。それでもなお発生する傾向がある1つの事故は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;this.variable&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;割り当てることで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が実際&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に現在の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;window&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;である&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことを認識していません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;環境。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="81c86cde680e865b9b88b72ded5b749973ef009f" translate="yes" xml:space="preserve">
          <source>Bower brands itself as the package manager for the web. It would be awesome if this was true  - a package manager that made my life better as a front-end developer would be awesome. The problem is that Bower offers no specialized tooling for the purpose. It offers NO tooling that I know of that npm doesn't, and especially none that is specifically useful for front-end developers. &lt;strong&gt;There is simply no benefit for a front-end developer to use Bower over npm.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bowerは、自身をWebのパッケージマネージャーとしてブランド化しています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これが本当なら素晴らしいだろう-フロントエンド開発者として私の人生をより良くしたパッケージマネージャーは素晴らしいだろう。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;問題は、Bowerがこの目的のための特別なツールを提供していないことです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、npmが提供していないツールを提供していません。特に、フロントエンドの開発者に特に役立つツールは提供していません。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フロントエンド開発者がnpmよりもBowerを使用するメリットはありません。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d48238e40f0d7b72637017d7657f4d647349ce4e" translate="yes" xml:space="preserve">
          <source>Bower has a much smaller amount of packages.</source>
          <target state="translated">バワーはパッケージの量がかなり少ないです。</target>
        </trans-unit>
        <trans-unit id="74f7e154cf90a6f20a1f1346fb7c0a75512239bb" translate="yes" xml:space="preserve">
          <source>Bower has finally been &lt;a href=&quot;https://bower.io/blog/2017/how-to-migrate-away-from-bower/&quot;&gt;deprecated&lt;/a&gt;. End of story.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バウアーはついに&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://bower.io/blog/2017/how-to-migrate-away-from-bower/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;廃止&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;話の終わり。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1f14a2566a3a0034b1a47f9d222a931af930d704" translate="yes" xml:space="preserve">
          <source>Bower includes styles etc.</source>
          <target state="translated">バワーにはスタイルなども含まれています。</target>
        </trans-unit>
        <trans-unit id="3a37db661f9bee5fa29cd0e46faa7dd983cd5b2e" translate="yes" xml:space="preserve">
          <source>Bower is optimized for the front-end. Bower uses a flat dependency
  tree, requiring only one version for each package, reducing page load
  to a minimum.</source>
          <target state="translated">Bowerはフロントエンドに最適化されています。Bowerはフラットな依存関係ツリーを使用しており、パッケージごとに1つのバージョンのみを必要とし、ページの負荷を最小限に抑えています。</target>
        </trans-unit>
        <trans-unit id="52fe873c829f4f34c5ec439884791e1f680e385a" translate="yes" xml:space="preserve">
          <source>Bower maintains a single version of modules, it only tries to help you select the correct/best one for you.</source>
          <target state="translated">Bowerはモジュールの単一のバージョンを維持し、それだけであなたがあなたのための正しいベストの1つを選択するのに役立つようにしようとします。</target>
        </trans-unit>
        <trans-unit id="ab1a4b4968d463c8ce88330a9b1fd3a71beb3177" translate="yes" xml:space="preserve">
          <source>Bower's interface kept changing</source>
          <target state="translated">バウワーのインターフェースは変化し続けていた</target>
        </trans-unit>
        <trans-unit id="1df781e973be6f5d828e526665db573d1995d28b" translate="yes" xml:space="preserve">
          <source>Bower:</source>
          <target state="translated">Bower:</target>
        </trans-unit>
        <trans-unit id="87c3cb4e3a844692bdc4e43322ceccf8599f9ad3" translate="yes" xml:space="preserve">
          <source>But beyond that, &lt;em&gt;Bower doesn't change how we write javascript&lt;/em&gt;. Nothing about what goes inside the files loaded by Bower needs to change at all. In particular, this means that the resources provided in scripts loaded by Bower will (usually, but not always) still be defined as &lt;em&gt;global variables&lt;/em&gt;, available from anywhere in the browser execution context.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、それを超えると、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バウアーはjavascriptの記述方法を変更しません&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bowerによってロードされたファイルの中に何が入っているかについては、何も変更する必要はありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;特に、これは、Bowerによってロードされたスクリプトで提供されるリソースが（通常、常にではないが）&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;グローバル変数&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;として定義され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、ブラウザ実行コンテキストのどこからでも利用できることを意味します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c1e9558b963244ee33e23be26311a9c47276e84" translate="yes" xml:space="preserve">
          <source>But this distinction of &lt;strong&gt;modules vs. globals&lt;/strong&gt; (or modules vs. 'scripts') is possibly the most important difference between Bower and npm. &lt;em&gt;The npm approach of putting everything in modules requires you to change the way you write Javascript for the browser, almost certainly for the better.&lt;/em&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、この&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;モジュールとグローバル&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（またはモジュールと「スクリプト」）の違いは、おそらくBowerとnpmの最も重要な違いです。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてをモジュールに配置するnpmアプローチでは、ブラウザーのJavascriptの記述方法を変更する必要があります。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="43968845091b9b89abbdfbe8fc2ebf6e725caa8a" translate="yes" xml:space="preserve">
          <source>CommonJS support is not straightforward</source>
          <target state="translated">CommonJSのサポートは一筋縄ではいかない</target>
        </trans-unit>
        <trans-unit id="670322c662f5796d3e665f381e70b0501f21949d" translate="yes" xml:space="preserve">
          <source>Dependency handling</source>
          <target state="translated">依存関係の処理</target>
        </trans-unit>
        <trans-unit id="83d98262d5a843d8c9068c24cb3dee353316f7a2" translate="yes" xml:space="preserve">
          <source>EDIT (Feb 2017): Facebook's &lt;a href=&quot;http://yarnpkg.com&quot;&gt;Yarn&lt;/a&gt; is a very important potential replacement/supplement for npm these days: fast, deterministic, offline package-management that builds on what npm gives you. It's worth a look for any JS project, particularly since it's so easy to swap it in/out.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;編集（2017年2月）：Facebookの&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://yarnpkg.com&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;糸&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、最近のnpmの非常に重要な潜在的な置き換え/補足です。npmが提供するものに基づいて構築された高速で確定的なオフラインパッケージ管理。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSプロジェクトは一見の価値があります。特に、プロジェクトを簡単に入れ替えることができるためです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="745c7d7dcdf1e7cb2140ae930e92a614c3ace3a1" translate="yes" xml:space="preserve">
          <source>EDIT (May 2019)
&quot;Bower has finally been &lt;a href=&quot;https://bower.io/blog/2017/how-to-migrate-away-from-bower/&quot;&gt;deprecated&lt;/a&gt;. End of story.&quot; (h/t: @DanDascalescu, below, for pithy summary.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;編集（2019年5月）「Bowerがついに&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://bower.io/blog/2017/how-to-migrate-away-from-bower/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非推奨になりました&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。ストーリーの終わり。」&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（h / t：簡潔な要約については、以下の@DanDascalescu。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2fece52345aefab97f90eb601e517505fc8ce950" translate="yes" xml:space="preserve">
          <source>For many people working with node.js, a major benefit of bower is for managing dependencies that are not javascript at all. If they are working with languages that compile to javascript, npm can be used to manage some of their dependencies. however, not all their dependencies are going to be node.js modules. Some of those that compile to javascript may have weird source language specific mangling that makes passing them around compiled to javascript an inelegant option when users are expecting source code.</source>
          <target state="translated">多くの人がnode.jsを使っている場合、bowerの大きな利点はjavascriptではない依存関係を管理することです。javascriptにコンパイルする言語で作業している場合、npmを使って依存関係の一部を管理することができます。javascriptにコンパイルされているものの中には、ソースコードを期待しているユーザーがいるときに、それらをjavascriptにコンパイルしたものを渡すのは無責任な選択肢になるような、ソース言語特有の奇妙なマングリングをしているものもあります。</target>
        </trans-unit>
        <trans-unit id="5ae73b2a42b368d275358551f80727378f2df3a6" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;a href=&quot;https://medium.com/@nickheiner/why-my-team-uses-npm-instead-of-bower-eecfe1b9afcb&quot;&gt;&quot;Why my team uses npm instead of bower&quot;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細については、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://medium.com/@nickheiner/why-my-team-uses-npm-instead-of-bower-eecfe1b9afcb&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「私のチームがbowerではなくnpmを使用する理由」を&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ae1ae48f995c4befd6de748153f383a237ae93bc" translate="yes" xml:space="preserve">
          <source>For more information, I suggest reading the &lt;a href=&quot;https://docs.npmjs.com/how-npm-works/npm3-dupe&quot;&gt;docs of npm 3&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細について&lt;/font&gt;&lt;a href=&quot;https://docs.npmjs.com/how-npm-works/npm3-dupe&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、npm 3のドキュメントを&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;読むことをお勧めします&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7db4769e46e49080ea926036a1bd91ab4a492340" translate="yes" xml:space="preserve">
          <source>Found this useful explanation from &lt;a href=&quot;http://ng-learn.org/2013/11/Bower-vs-npm/&quot;&gt;http://ng-learn.org/2013/11/Bower-vs-npm/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;http://ng-learn.org/2013/11/Bower-vs-npm/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://ng-learn.org/2013/11/Bower-vs-npm/&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;からこの有用な説明が見つかりました&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4c0f7c1da6cc793ed10c3326398d674f59b073d4" translate="yes" xml:space="preserve">
          <source>Handling of styles etc</source>
          <target state="translated">スタイルなどの取り扱い</target>
        </trans-unit>
        <trans-unit id="65498994a3f03dc4a793bdd223c57781d0eba80b" translate="yes" xml:space="preserve">
          <source>Here you see that all unique dependencies are on the same level.</source>
          <target state="translated">ここでは、ユニークな依存関係がすべて同じレベルにあることがわかります。</target>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">History</target>
        </trans-unit>
        <trans-unit id="66635288d97fadb7c1c87b234af29ade55f84465" translate="yes" xml:space="preserve">
          <source>I think the previous posters have covered well some of the basic distinctions. (npm's use of nested dependencies is indeed very helpful in managing large, complex applications, though I don't think it's the most important distinction.)</source>
          <target state="translated">前の投稿者は基本的な区別のいくつかをよくカバーしていると思います。(npm のネストされた依存関係の使用は、大規模で複雑なアプリケーションを管理するのに非常に役立ちますが、これが最も重要な区別だとは思いません)。</target>
        </trans-unit>
        <trans-unit id="a65d47b999b705dfb3c35b9cb8d8793e75537290" translate="yes" xml:space="preserve">
          <source>I'm surprised, however, that nobody has explicitly explained one of the most fundamental distinctions between Bower and npm. If you read the answers above, you'll see the word 'modules' used often in the context of npm. But it's mentioned casually, as if it might even just be a syntax difference.</source>
          <target state="translated">しかし、Bower と npm の最も基本的な区別の一つを誰も明示的に説明していないことに驚いています。上の回答を読むと、「モジュール」という言葉が npm の文脈でよく使われているのがわかります。しかし、まるで構文の違いだけかもしれないかのように、さりげなく言及されています。</target>
        </trans-unit>
        <trans-unit id="7ca9261def014f1a3d3d7cd3e6f7d88ed6f3749b" translate="yes" xml:space="preserve">
          <source>If a Bower dependency then specifies its own dependencies in its &lt;code&gt;bower.json&lt;/code&gt;, those'll be downloaded for you as well.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bower依存関係が&lt;/font&gt;&lt;/font&gt; &lt;code&gt;bower.json&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;独自の依存関係を指定している&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、それらもダウンロードされます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a76a8f95de35071ca133346ff2882ac17d71c8d9" translate="yes" xml:space="preserve">
          <source>In almost all cases, it's more appropriate to use Browserify and npm over Bower. It is simply a better packaging solution for front-end apps than Bower is. At Spotify, we use npm to package entire web modules (html, css, js) and it works very well.</source>
          <target state="translated">ほとんどの場合、BowerよりもBrowserifyやnpmを使う方が適切です。単純に、Bowerよりもフロントエンドアプリのパッケージングソリューションとして優れているからです。Spotify では、Web モジュール全体 (html,css,js)のパッケージ化に npm を使用していますが、非常にうまく機能しています。</target>
        </trans-unit>
        <trans-unit id="fb0750875d95a9fc3c27978d41dff79ada043db3" translate="yes" xml:space="preserve">
          <source>In short, npm aims for stability. Bower aims for minimal resource load. If you draw out the dependency structure, you will see this:</source>
          <target state="translated">要するに npm は安定性を目指しています。Bower はリソースの負荷を最小限に抑えることを目指しています。依存関係構造を描くとこんな感じです。</target>
        </trans-unit>
        <trans-unit id="26de97e6ff3ab7f11b45edaa0684f030ee6002e1" translate="yes" xml:space="preserve">
          <source>Inside the file/module, you do whatever you normally would, and create some object or function that you'll want to expose to outside users, calling it perhaps &lt;code&gt;myModule&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ファイル/モジュール内では、通常どおりに何でも行い、外部ユーザーに公開したいオブジェクトまたは関数を作成します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを、おそらく&lt;/font&gt;&lt;/font&gt; &lt;code&gt;myModule&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼び&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a8832e97ea3b7026213239e777f32f9d777dc727" translate="yes" xml:space="preserve">
          <source>It is much harder to avoid dependency conflicts without nesting
  dependencies. This is fundamental to the way that npm works, and has
  proven to be an extremely successful approach.</source>
          <target state="translated">依存関係を入れ子にしないで依存関係の衝突を回避するのははるかに困難です。これは npm の動作の基本であり、非常に成功したアプローチであることが証明されています。</target>
        </trans-unit>
        <trans-unit id="8d63fc8f192ef04dffb070c89ae7fb8865bf68cb" translate="yes" xml:space="preserve">
          <source>It only takes about 30 seconds to learn how to use the CommonJS/Node module syntax. Inside a given JS file, which is going to be a module, you first declare any outside dependencies you want to use, like this:</source>
          <target state="translated">CommonJSNodeモジュール構文の使い方を覚えるのに30秒ほどしかかかりません。与えられたJSファイルの中で、モジュールになりそうなものがあれば、まず外部の依存関係を宣言します。</target>
        </trans-unit>
        <trans-unit id="fb5abba279f6cf5fe8440430f216c55119018ae6" translate="yes" xml:space="preserve">
          <source>Javascript dependency management : npm vs bower vs volo?</source>
          <target state="translated">Javascript の依存関係管理:npm vs bower vs volo?</target>
        </trans-unit>
        <trans-unit id="e6d6f7e5bee47bdc0df8bc3ebdd9c6d21bc4dada" translate="yes" xml:space="preserve">
          <source>Keeping bower.json version field in sync with git tags is painful</source>
          <target state="translated">bower.jsonのバージョンフィールドをgitタグと同期させるのは痛い</target>
        </trans-unit>
        <trans-unit id="3a390fb41cf45fca013e3e3aad03183596257c96" translate="yes" xml:space="preserve">
          <source>Maybe dependency B requires a different version of dependency A than dependency C. npm installs both versions of this dependency so it will work anyway, but Bower will give you a &lt;em&gt;conflict&lt;/em&gt; because it does not like duplication (because loading the same resource on a webpage is very inefficient and costly, also it can give some serious errors). You will have to manually pick which version you want to install. This can have the effect that one of the dependencies will break, but that is something that you will need to fix anyway.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;おそらく、依存関係Bには依存関係Cとは異なるバージョンの依存関係Aが必要です。npmはこの依存関係の両方のバージョンをインストールするため、どちらのバージョンでも機能しますが、Bowerは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;重複を好まないため&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;競合を引き起こし&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（Webページに同じリソースをロードするため、非常に非効率的で費用がかかり、重大なエラーが発生する可能性もあります）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インストールするバージョンを手動で選択する必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これにより、依存関係の1つが壊れる可能性がありますが、これはとにかく修正する必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9e897fed4dcf806273fa8fbffa1b45132045ff35" translate="yes" xml:space="preserve">
          <source>More about patterns for working with modules in &lt;a href=&quot;http://darrenderidder.github.io/talks/ModulePatterns/&quot;&gt;this deck&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://darrenderidder.github.io/talks/ModulePatterns/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このデッキ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;でモジュールを操作するためのパターンの詳細&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8de8207e228c553e4b4edd53a448691c89c24a11" translate="yes" xml:space="preserve">
          <source>My team moved away from Bower and migrated to npm because:</source>
          <target state="translated">私のチームはBowerから離れてnpmに移行しました。</target>
        </trans-unit>
        <trans-unit id="8fb8e37218981e994f1c3e84742ef8a01d7f5c86" translate="yes" xml:space="preserve">
          <source>NPM is better for node modules because there is a module system and you're working locally.
Bower is good for the browser because currently there is only the global scope, and you want to be very selective about the version you work with.</source>
          <target state="translated">モジュールシステムがあり、ローカルで作業するので、ノードモジュールにはNPMの方が適しています。Bower はブラウザに向いていますが、現在はグローバルスコープしかないので、使うバージョンを厳選したいと思います。</target>
        </trans-unit>
        <trans-unit id="65805ad02f6cd960d86fc95bbe81b89d1d2b5fa2" translate="yes" xml:space="preserve">
          <source>Not everything in an npm package needs to be user-facing javascript, but for npm library packages, at least some of it should be.</source>
          <target state="translated">npm パッケージのすべてがユーザー向けの javascript である必要はありませんが、npm ライブラリパッケージの場合は、少なくとも一部はそうあるべきです。</target>
        </trans-unit>
        <trans-unit id="dfa4bc130128bf0aaef14a6bc250bc1045cfc71d" translate="yes" xml:space="preserve">
          <source>Older answer</source>
          <target state="translated">古い答え</target>
        </trans-unit>
        <trans-unit id="6354af45764b22770585b3e727b2bc004e011bbe" translate="yes" xml:space="preserve">
          <source>On one hand npm was created to install modules used in a node.js environment, or development tools built using node.js such Karma, lint, minifiers and so on. npm can install modules locally in a project ( by default in node_modules ) or globally to be used by multiple projects. In large projects the way to specify dependencies is by creating a file called package.json which contains a list of dependencies. That list is recognized by npm when you run npm install, which then downloads and installs them for you.</source>
          <target state="translated">npm は、node.js 環境で使用されるモジュールや Karma,lint,minifiers などの node.js を使用して構築された開発ツールをインストールするために作られました。大規模なプロジェクトでは、package.json というファイルを作成して依存関係を指定する方法があります。このリストは npm install を実行したときに npm に認識され、npm がダウンロードしてインストールしてくれます。</target>
        </trans-unit>
        <trans-unit id="356fb47f91b691300680256e8b273213c6aae0f6" translate="yes" xml:space="preserve">
          <source>On the other hand bower was created to manage your frontend dependencies. Libraries like jQuery, AngularJS, underscore, etc. Similar to npm it has a file in which you can specify a list of dependencies called bower.json. In this case your frontend dependencies are installed by running bower install which by default installs them in a folder called bower_components.</source>
          <target state="translated">一方、bowerはフロントエンドの依存関係を管理するために作られました。jQuery,AngularJS,underscoreなどのライブラリです。npmと同様に、bower.jsonという依存関係のリストを指定できるファイルを持っています。この場合、フロントエンドの依存関係は bower install を実行することでインストールされ、デフォルトでは bower_components というフォルダにインストールされます。</target>
        </trans-unit>
        <trans-unit id="e307479e8523f61b1c3913dbab367dd6c65ce4f0" translate="yes" xml:space="preserve">
          <source>Programmatic usage was painful</source>
          <target state="translated">プログラム的な使い方が苦痛だった</target>
        </trans-unit>
        <trans-unit id="87df60de337fb58864343e396696d74611e0d403" translate="yes" xml:space="preserve">
          <source>Resources</source>
          <target state="translated">Resources</target>
        </trans-unit>
        <trans-unit id="56358cfe25e58ee1f0a7fd11fff2a00cdf9e00b6" translate="yes" xml:space="preserve">
          <source>Size of repo</source>
          <target state="translated">レポのサイズ</target>
        </trans-unit>
        <trans-unit id="e8d014987fb6d605c6e0e1f99243e39c950ebe59" translate="yes" xml:space="preserve">
          <source>Smarter people than I have tackled the question of 'Why modules?', but here's a capsule summary:</source>
          <target state="translated">私よりも賢い人たちは、「なぜモジュールなのか」という疑問に取り組んできましたが、ここではカプセルの概要を紹介します。</target>
        </trans-unit>
        <trans-unit id="ee6c18de22e891c9b80027d5b1cbda03b96f551e" translate="yes" xml:space="preserve">
          <source>So, same basic approach you're used to, but you get some nice automation conveniences:</source>
          <target state="translated">だから、あなたが慣れているのと同じ基本的なアプローチですが、あなたはいくつかの素晴らしい自動化の便利さを得ることができます。</target>
        </trans-unit>
        <trans-unit id="46e1930ff4209d1abc23a5a0e14e70e8db2ec4e0" translate="yes" xml:space="preserve">
          <source>So, the common usage is Bower for the packages that you want to publish on your webpages (e.g. &lt;em&gt;runtime&lt;/em&gt;, where you avoid duplication), and use npm for other stuff, like testing, building, optimizing, checking, etc. (e.g. &lt;em&gt;development time&lt;/em&gt;, where duplication is of less concern).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、一般的な使用方法は、Webページに公開するパッケージ（例：&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ランタイム&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、重複を回避する場所）の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bowerであり、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テスト、ビルド、最適化、チェックなどの他の機能（&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;開発時間&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;など）にnpmを使用します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、重複の心配が少ない場合）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9cbe777696f3f98b5b8c300e3a222abf0aef370d" translate="yes" xml:space="preserve">
          <source>Some features, like the url shorthand, are entirely broken</source>
          <target state="translated">いくつかの機能は、URLの速記のように、完全に壊れています。</target>
        </trans-unit>
        <trans-unit id="92cf952778a32acc7a90b74f5298a78e6126952b" translate="yes" xml:space="preserve">
          <source>Some projects use both is that they use Bower for front-end packages and npm for developer tools like Yeoman, Grunt, Gulp, JSHint, CoffeeScript, etc.</source>
          <target state="translated">プロジェクトによっては、フロントエンドのパッケージにはBowerを、開発者ツールにはNpmを使用しています。</target>
        </trans-unit>
        <trans-unit id="936493c4e40ec80c06b09f5b273f3d8479e92c17" translate="yes" xml:space="preserve">
          <source>Source control != package management</source>
          <target state="translated">ソース管理 !=パッケージ管理</target>
        </trans-unit>
        <trans-unit id="ed215664f2bd3726a035ba22d1ac0334c1dc4fd2" translate="yes" xml:space="preserve">
          <source>The Bower Approach: Global Resources, Like &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; Tags</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バウアーアプローチ：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タグの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ようなグローバルリソース&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99e8ef04515f6c45e7137916d6a1a7d4d74ba99b" translate="yes" xml:space="preserve">
          <source>The biggest difference is that npm does nested dependencies (but is flat by default) while Bower requires a flat dependency tree &lt;em&gt;(puts the burden of dependency resolution on the user)&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最大の違いは、npmは依存関係をネストしますが（デフォルトではフラットです）、Bowerはフラットな依存関係ツリーを必要とします&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（依存関係の解決はユーザーに負担をかけます）&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e4dc6307bf3329c9171381eb249c05d690c4abb3" translate="yes" xml:space="preserve">
          <source>The npm Approach: Common JS Modules, Explicit Dependency Injection</source>
          <target state="translated">npm のアプローチ。共通の JS モジュール、明示的な依存性インジェクション</target>
        </trans-unit>
        <trans-unit id="3dc90f6185fb33696241ec0b756b7f9990c24f7b" translate="yes" xml:space="preserve">
          <source>Then, to use a CommonJS-based workflow in the browser, you'll use tools like Browserify to grab all those individual module files, encapsulate their contents at runtime, and inject them into each other as needed.</source>
          <target state="translated">次に、ブラウザでCommonJSベースのワークフローを使用するために、Browserifyのようなツールを使用して、個々のモジュールファイルをすべて取得し、実行時にその内容をカプセル化し、必要に応じて相互に注入します。</target>
        </trans-unit>
        <trans-unit id="49c40e5e0fd2efb70e2d89726d32e724895f8bb5" translate="yes" xml:space="preserve">
          <source>This answer is an addition to the answer of Sindre Sorhus. The major difference between npm and Bower is the way they treat recursive dependencies. Note that they can be used together in a single project.</source>
          <target state="translated">この回答は、Sindre Sorhusさんの回答に追加したものです。npmとBowerの大きな違いは、再帰的な依存関係の扱い方です。これらは一つのプロジェクトで一緒に使うことができることに注意してください。</target>
        </trans-unit>
        <trans-unit id="24d57acf55d025bac5d7c3ee0175f1147d314f57" translate="yes" xml:space="preserve">
          <source>This means you can have multiple versions of the same external dependency (lodash, let's say) in various parts of your application, and they won't collide/conflict. (This happens surprisingly often, because your own code wants to use one version of a dependency, but one of your external dependencies specifies another that conflicts. Or you've got two external dependencies that each want a different version.)</source>
          <target state="translated">これは、アプリケーションの様々な部分で同じ外部依存関係の複数のバージョン(例えばlodash)を持つことができ、それらが衝突したり衝突したりしないことを意味します。(これは、あなたのコードがあるバージョンの依存関係を使いたがっているのに、外部依存関係の一つが衝突する別のバージョンを指定している場合に、驚くほど頻繁に起こります。あるいは、2つの外部依存関係を持っていて、それぞれが異なるバージョンを望んでいる場合などです)。</target>
        </trans-unit>
        <trans-unit id="792a0d5fe777acd069b267aed137cfa5a40a3a10" translate="yes" xml:space="preserve">
          <source>To me, the use of modules for front-end code boils down to: working in a much narrower context that's easier to reason about and test, and having greater certainty about what's going on.</source>
          <target state="translated">私にとって、フロントエンドコードにモジュールを使用することは、次のことを意味します:より狭いコンテキストで作業することで、推論やテストが容易になり、何が起こっているかについてより確実性を持つことです。</target>
        </trans-unit>
        <trans-unit id="b1705c2add482c9a02c8d4196d5348dd7ca286fc" translate="yes" xml:space="preserve">
          <source>Using both Bower and npm in the same project is painful</source>
          <target state="translated">同じプロジェクトで Bower と npm の両方を使うのは痛い</target>
        </trans-unit>
        <trans-unit id="d1571328dab64f7825c632831fbe37680fb4b174" translate="yes" xml:space="preserve">
          <source>We should stop using bower and consolidate around npm. Thankfully, that is what &lt;a href=&quot;http://www.modulecounts.com/&quot;&gt;is happening&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bowerの使用を中止し、npmあたりで統合する必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ありがたいことに、それが&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.modulecounts.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;起こってい&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa4998d96017d325b3a07f2f0be85b944cb4ee9a" translate="yes" xml:space="preserve">
          <source>What is the difference between Bower and npm</source>
          <target state="translated">Bower と npm の違いは?</target>
        </trans-unit>
        <trans-unit id="493233b261ce1fe983ec786b3a719ef8f30c5259" translate="yes" xml:space="preserve">
          <source>What is the fundamental difference between &lt;code&gt;bower&lt;/code&gt; and &lt;code&gt;npm&lt;/code&gt;? Just want something plain and simple. I've seen some of my colleagues use &lt;code&gt;bower&lt;/code&gt; and &lt;code&gt;npm&lt;/code&gt; interchangeably in their projects.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;bower&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;npm&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;基本的な違いは何&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ですか？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;単純でシンプルなものが欲しいだけです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同僚の何人かが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロジェクトで&lt;/font&gt;&lt;/font&gt; &lt;code&gt;bower&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;npm&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;交換可能に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用しているのを見てきました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="275d5bd4771827edf631c3d9f7dfb4acb26d4eaa" translate="yes" xml:space="preserve">
          <source>When you want to test an individual module, you're able to very easily know: exactly what else (dependencies) is affecting the code that runs inside the module? And, because you're explicitly injecting everything, you can easily mock those dependencies.</source>
          <target state="translated">個々のモジュールをテストしたい場合、モジュール内で実行されているコードに影響を与えているものは何か (依存関係)を簡単に知ることができます。また、すべてを明示的に注入しているので、それらの依存関係を簡単にモックすることができます。</target>
        </trans-unit>
        <trans-unit id="0ea7edcd426a69dc4e2ffd9ce32ea0d9b3fa304d" translate="yes" xml:space="preserve">
          <source>With browserify or webpack, it becomes super-easy to concatenate all your modules into big minified files, which is awesome for performance, especially for mobile devices. Not so with Bower, which will require significantly more labor to get the same effect.</source>
          <target state="translated">browserify や webpack を使うと、すべてのモジュールを連結して大きなミニ化ファイルにするのが超簡単になり、特にモバイルデバイスでのパフォーマンスが向上します。Bowerではそうではなく、同じ効果を得るためにはかなり多くの労力が必要になります。</target>
        </trans-unit>
        <trans-unit id="505dca46e300064a9457bdc421bba9c29e18ad69" translate="yes" xml:space="preserve">
          <source>You used to need to include JS dependencies in your project repo (while developing), or get them via CDN. Now, you can skip that extra download weight in the repo, and somebody can do a quick &lt;code&gt;bower install&lt;/code&gt; and instantly have what they need, locally.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以前は、（開発中に）プロジェクトリポジトリにJSの依存関係を含めるか、CDN経由で取得する必要がありました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これで、リポジトリで余分なダウンロードの重みをスキップでき、誰かが簡単な&lt;/font&gt;&lt;/font&gt; &lt;code&gt;bower install&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;して、ローカルで必要なものをすぐに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;入手できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e93e01806c14eb45009f9a3cda70cd44f997c058" translate="yes" xml:space="preserve">
          <source>[node_modules]</source>
          <target state="translated">[node_modules]</target>
        </trans-unit>
        <trans-unit id="1f2b44ce4ad4b3a1df4f1d6193620b7db1de5e33" translate="yes" xml:space="preserve">
          <source>dep A v1.0</source>
          <target state="translated">dep A v1.0</target>
        </trans-unit>
        <trans-unit id="1eb2f1ffed1bff1f5bf273c9e16d150eaaff321c" translate="yes" xml:space="preserve">
          <source>dep A v2.0 (this version is different from the root version, so it will be an nested installation)</source>
          <target state="translated">dep A v2.0 (このバージョンはルートバージョンとは異なるので、ネストされたインストールになります)</target>
        </trans-unit>
        <trans-unit id="9ba95292f4397611a511e5aa7bdf6ccaa35d462e" translate="yes" xml:space="preserve">
          <source>dep B v1.0</source>
          <target state="translated">dep B v1.0</target>
        </trans-unit>
        <trans-unit id="c52c552eb9cdd1e80d4faa098f31b3522a8b1001" translate="yes" xml:space="preserve">
          <source>dep C v1.0</source>
          <target state="translated">dep C v1.0</target>
        </trans-unit>
        <trans-unit id="b8cbb7871bc1ef2213191800e2f802a80a446c1c" translate="yes" xml:space="preserve">
          <source>npm 3 still does things differently compared to Bower. It will install the dependencies globally, but only for the first version it encounters.  The other versions are installed in the tree (the parent module, then node_modules).</source>
          <target state="translated">npm 3 は Bower と比較して、まだ異なる動作をしています。依存関係はグローバルにインストールされますが、最初に遭遇したバージョンだけがインストールされます。他のバージョンはツリー (親モジュール、node_modules)にインストールされます。</target>
        </trans-unit>
        <trans-unit id="49f338486cf32be3afe459cba81d63d6fac2b93b" translate="yes" xml:space="preserve">
          <source>npm also offers you the ability to use multiple versions of modules simultaneously. If you have not done much application development, this might initially strike you as a bad thing, but once you've gone through a few bouts of &lt;a href=&quot;http://en.wikipedia.org/wiki/Dependency_hell&quot;&gt;Dependency hell&lt;/a&gt; you will realize that having the ability to have multiple versions of one module is a pretty darn great feature. Note that npm includes a very handy &lt;a href=&quot;https://docs.npmjs.com/cli/dedupe&quot;&gt;dedupe tool&lt;/a&gt; that automatically makes sure that you only use two versions of a module if you actually &lt;em&gt;have&lt;/em&gt; to - if two modules both &lt;em&gt;can&lt;/em&gt; use the same version of one module, they will. But if they &lt;em&gt;can't&lt;/em&gt;, you have a very handy out.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;npmには、モジュールの複数のバージョンを同時に使用する機能もあります。アプリケーション開発をあまり行っていない場合は、最初は悪いことと思われるかもしれませんが、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Dependency_hell&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Dependency hell&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;何度か試して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;みると、1つのモジュールの複数のバージョンを持つことができるのはかなり難しいことに気づくでしょう。素晴らしい機能。 npmには非常に便利な&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.npmjs.com/cli/dedupe&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;重複排除ツール&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;含まれている&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、実際に&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必要な&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合は自動的に2つのバージョンのモジュールのみを使用するようになっています&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。2つのモジュールが両方とも&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1つのモジュールの同じバージョンを使用&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;できる&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合、それらは使用されます。しかし、それ&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ができない&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合は、非常に便利です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="076b29b79d71d090b8ab776d3a64b53a8a6dcb6b" translate="yes" xml:space="preserve">
          <source>npm is focused on JavaScript. Styles are either downloaded separately or required by something like &lt;code&gt;npm-sass&lt;/code&gt; or &lt;code&gt;sass-npm&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;npmはJavaScriptに焦点を当てています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スタイルは個別にダウンロードされるか、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;npm-sass&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;や&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sass-npm&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などによって要求されます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="16d331db1f0e99d9f6abd1b60151ec2e505a0b34" translate="yes" xml:space="preserve">
          <source>npm is much, much larger than bower, including general purpose JavaScript (like &lt;code&gt;country-data&lt;/code&gt; for country information or &lt;code&gt;sorts&lt;/code&gt; for sorting functions that is usable on the front end or the back end).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;npmは、bowerよりもはるかに大きく、汎用JavaScript（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;国情報の場合はcountry &lt;/font&gt;&lt;/font&gt; &lt;code&gt;country-data&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、フロントエンドまたはバックエンドで使用可能なソート関数の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sorts&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;など）を含み&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="582e3e8e9dd6fa1469d679f39c966e4aa32af1d0" translate="yes" xml:space="preserve">
          <source>npm:</source>
          <target state="translated">npm:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
