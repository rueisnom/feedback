<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/18082">
    <body>
      <group id="18082">
        <trans-unit id="a534bc787c3f3ae5fa2067e98e6ea0a01ce04934" translate="yes" xml:space="preserve">
          <source>1) number</source>
          <target state="translated">1)número</target>
        </trans-unit>
        <trans-unit id="f42e9559bdd5484ddfe34c46aacc53d8669acbd8" translate="yes" xml:space="preserve">
          <source>2) digit</source>
          <target state="translated">2)dígito</target>
        </trans-unit>
        <trans-unit id="09e873e9a0244ee5280c603ee3889c5236d48bcd" translate="yes" xml:space="preserve">
          <source>3) min and max</source>
          <target state="translated">3)min y max</target>
        </trans-unit>
        <trans-unit id="7c786d62c3dd0de26e1ab54a0345fa440b0bbdad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/Yahoo!_UI_Library&quot;&gt;Yahoo! UI&lt;/a&gt; uses this:</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Yahoo!_UI_Library&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Yahoo! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;UI&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; usa esto:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4bc38746ad0ff1f3d2f760166538544eccdce9e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://api.jquery.com/jQuery.isNumeric/&quot;&gt;https://api.jquery.com/jQuery.isNumeric/&lt;/a&gt; (as of jQuery 1.7)</source>
          <target state="translated">&lt;a href=&quot;https://api.jquery.com/jQuery.isNumeric/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://api.jquery.com/jQuery.isNumeric/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (a partir de jQuery 1.7)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5bf380bc124eaf602f577b1e285131652ede6fd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/questions/18082/validate-numbers-in-javascript-isnumeric/174921#174921&quot;&gt;@Joel's answer&lt;/a&gt; is pretty close, but it will fail in the following cases:</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/18082/validate-numbers-in-javascript-isnumeric/174921#174921&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La respuesta de @ Joel&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; est&amp;aacute; bastante cerca, pero fallar&amp;aacute; en los siguientes casos:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fb69bbcc3eec75aa8873d6d4d5ce3c2b6b352a79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self.number = ko.observable(numberValue)&lt;/code&gt;&lt;strong&gt;.extend({ digit: true})&lt;/strong&gt;;</source>
          <target state="translated">&lt;code&gt;self.number = ko.observable(numberValue)&lt;/code&gt; &lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.extend ({digit: true})&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a065243661b1c2759661ed5f35228c12b362248" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self.number = ko.observable(numberValue)&lt;/code&gt;&lt;strong&gt;.extend({ min: 5}).extend({ max: 10})&lt;/strong&gt;;</source>
          <target state="translated">&lt;code&gt;self.number = ko.observable(numberValue)&lt;/code&gt; &lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.extend ({min: 5}). extend ({max: 10})&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f76fbbb7d7842e025a1178102e5332e89bbd0a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self.number = ko.observable(numberValue)&lt;/code&gt;&lt;strong&gt;.extend({ number: true})&lt;/strong&gt;;</source>
          <target state="translated">&lt;code&gt;self.number = ko.observable(numberValue)&lt;/code&gt; &lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.extend ({n&amp;uacute;mero: verdadero})&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee9c92569767e3c96657a8d5407c5dc6339ed413" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT:&lt;/strong&gt; As pointed out by &lt;a href=&quot;https://stackoverflow.com/a/15230431/592253&quot;&gt;Bergi&lt;/a&gt;, there are other possible objects that could be considered numeric and it would be better to whitelist than blacklist. With this in mind I would add to the criteria.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;EDITAR:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Como se&amp;ntilde;al&amp;oacute; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/15230431/592253&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bergi&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , hay otros objetos posibles que podr&amp;iacute;an considerarse num&amp;eacute;ricos y ser&amp;iacute;a mejor incluir en la lista blanca que en la lista negra. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Con esto en mente, agregar&amp;iacute;a a los criterios.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="61479b12043c26ae40fe0882c667ccfc4eae0d0c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Invalid numbers would be&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los n&amp;uacute;meros inv&amp;aacute;lidos ser&amp;iacute;an&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="de72cc80af4464eb303fb55c3f0fc08fbb0174c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;P.S.&lt;/strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isNaN&quot;&gt;isNaN&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isFinite&quot;&gt;isFinite&lt;/a&gt; have a confusing behavior due to forced conversion to number. In ES6, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN&quot;&gt;Number.isNaN&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite&quot;&gt;Number.isFinite&lt;/a&gt; would fix these issues. Keep that in mind when using them.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PS &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isNaN&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;isNaN&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; e &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isFinite&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;isFinite&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tienen un comportamiento confuso debido a la conversi&amp;oacute;n forzada a n&amp;uacute;mero. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En ES6, &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Number.isNaN&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Number.isFinite&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; solucionar&amp;iacute;an estos problemas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga eso en cuenta cuando los use.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="45490ef14e4f21eb08b74a7e1f5b26da982b17ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Test the solutions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Prueba las soluciones&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bf7f2f00047743847f43350edd7b9bdf13a83e97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt; :
&lt;a href=&quot;https://github.com/angular/angular/blob/4.3.x/packages/common/src/pipes/number_pipe.ts#L172&quot;&gt;Angular 4.3&lt;/a&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Actualizaci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/angular/angular/blob/4.3.x/packages/common/src/pipes/number_pipe.ts#L172&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Angular 4.3&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e8b5a77516c2f97d63e9c261dddc6bfcef5725f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt; : 
&lt;a href=&quot;https://github.com/jquery/jquery/blob/2.2-stable/src/core.js#L215&quot;&gt;Here's how jQuery does it now (2.2-stable)&lt;/a&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Actualizaci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : as&amp;iacute; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/jquery/jquery/blob/2.2-stable/src/core.js#L215&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;es como jQuery lo hace ahora (2.2-estable)&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a48482daa1418a6bc211d0490d1c324bcf97a6c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Valid numbers would include:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los n&amp;uacute;meros v&amp;aacute;lidos incluir&amp;iacute;an:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="190abad07458eea64859de62eff9b06c0effd9b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;knockoutJs Inbuild library validation functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funciones de validaci&amp;oacute;n de la biblioteca knockoutJs Inbuild&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d87457fab4b815e454ebab1c44ec69cea41d7e11" translate="yes" xml:space="preserve">
          <source>A couple of tests to add:</source>
          <target state="translated">Un par de pruebas para agregar:</target>
        </trans-unit>
        <trans-unit id="ae7b5d093eeb68d66f91793a426319d47d3d475a" translate="yes" xml:space="preserve">
          <source>A period that is followed by 1 or more numbers</source>
          <target state="translated">Un período que es seguido por 1 o más números</target>
        </trans-unit>
        <trans-unit id="f9041248de975321f47798953351f5b2c2c27f42" translate="yes" xml:space="preserve">
          <source>A single zero, or one or more digits not starting with 0, or nothing so long as a period follows</source>
          <target state="translated">Un solo cero,o uno o más dígitos que no empiezan con 0,o nada mientras siga un punto</target>
        </trans-unit>
        <trans-unit id="7003cd3614ff99516cf6c40ed95c501ad9bfa940" translate="yes" xml:space="preserve">
          <source>Although the results are somewhat different to what you're looking for (&lt;a href=&quot;http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_isnan&quot;&gt;try it&lt;/a&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aunque los resultados son algo diferentes a lo que est&amp;aacute;s buscando ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_isnan&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;pru&amp;eacute;balo&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67e797b9c9bfa1b03295cccb60b6d2b7aee7d390" translate="yes" xml:space="preserve">
          <source>An integer value can be verified by:</source>
          <target state="translated">Un valor entero puede ser verificado por:</target>
        </trans-unit>
        <trans-unit id="74b62771466f49cf8ba9cab325bac4e800ff60af" translate="yes" xml:space="preserve">
          <source>An optional negative sign at the beginning</source>
          <target state="translated">Un signo negativo opcional al principio</target>
        </trans-unit>
        <trans-unit id="3cd0680928fb5803699577d4e9b8285509fcd324" translate="yes" xml:space="preserve">
          <source>And to test it:</source>
          <target state="translated">Y para probarlo:</target>
        </trans-unit>
        <trans-unit id="70cd32e576a430797f6718e8cb7bf8ad3d74f345" translate="yes" xml:space="preserve">
          <source>Arrrgh!  Don't listen to the regular expression answers.  RegEx is icky for this, and I'm not talking just performance.  It's so easy to make subtle, impossible to spot mistakes with your regular expression.</source>
          <target state="translated">¡Arrrgh! No escuches las respuestas de la expresión regular.RegEx es asqueroso para esto,y no estoy hablando sólo de la actuación.Es tan fácil de hacer sutil,imposible de detectar errores con tu expresión regular.</target>
        </trans-unit>
        <trans-unit id="cd6274a24f10d9eedd162c57f2108e902cbcd1c3" translate="yes" xml:space="preserve">
          <source>Bonus points for:</source>
          <target state="translated">Puntos extra por:</target>
        </trans-unit>
        <trans-unit id="4dd5806ec124e76bc035017f6343d16dbcababb3" translate="yes" xml:space="preserve">
          <source>But, again, &lt;strong&gt;the only reason ever to use this is if for some reason you have to avoid isNaN().&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero, nuevamente, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la &amp;uacute;nica raz&amp;oacute;n para usar esto es si por alguna raz&amp;oacute;n tienes que evitar isNaN ().&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="08692c4d768ee9bcf4e0e72a244cc1961d1bbe37" translate="yes" xml:space="preserve">
          <source>By extending it the field get validated</source>
          <target state="translated">Al extenderlo el campo se valida</target>
        </trans-unit>
        <trans-unit id="11635b65d08cb6ad2397ee766a17dd7299d12766" translate="yes" xml:space="preserve">
          <source>Clarity. Solution should be clean and simple.</source>
          <target state="translated">Claridad.La solución debe ser limpia y simple.</target>
        </trans-unit>
        <trans-unit id="7ae3e9f0d87df2494fbaad9e4ff4e218748bf577" translate="yes" xml:space="preserve">
          <source>Create a copy of itself, then converts the number into float, then compares itself with the original number, if it is still a number, (whether integer or float) , and matches the original number, that means, it is indeed a number.</source>
          <target state="translated">Crea una copia de sí mismo,luego convierte el número en flotante,luego se compara con el número original,si sigue siendo un número,(ya sea entero o flotante),y coincide con el número original,es decir,es realmente un número.</target>
        </trans-unit>
        <trans-unit id="520164c4c72c1289f7ce8328d581ac093dc29d31" translate="yes" xml:space="preserve">
          <source>Cross-platform.</source>
          <target state="translated">Cross-platform.</target>
        </trans-unit>
        <trans-unit id="f7c9067bf3f34ef376a5dd4334de35a084aadd7e" translate="yes" xml:space="preserve">
          <source>During some projects I have needed to validate some data and be as certain as possible that it is a javascript numerical value that can be used in mathematical operations.</source>
          <target state="translated">Durante algunos proyectos he necesitado validar algunos datos y estar lo más seguro posible de que se trata de un valor numérico en javascript que puede ser utilizado en operaciones matemáticas.</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Ampliar fragmento</target>
        </trans-unit>
        <trans-unit id="a3608ef2d4fdb6f1ba5354a14fb5732f73bb1780" translate="yes" xml:space="preserve">
          <source>Explained:</source>
          <target state="translated">Explained:</target>
        </trans-unit>
        <trans-unit id="ef12ad55decf04d602c3e259e1aeb5f233c8f473" translate="yes" xml:space="preserve">
          <source>First, the code above would return true if the argument was an array of length 1, and that single element was of a type deemed as numeric by the above logic. In my opinion, if it's an array then its not numeric.</source>
          <target state="translated">En primer lugar,el código anterior devolvería verdadero si el argumento fuera una matriz de longitud 1,y ese único elemento fuera de un tipo considerado como numérico por la lógica anterior.En mi opinión,si es una matriz,entonces no es numérico.</target>
        </trans-unit>
        <trans-unit id="b3c49a616fc36313e1bb223da6613dd488f0e9fe" translate="yes" xml:space="preserve">
          <source>Here's a lil bit improved version (probably the fastest way out there) that I use instead of exact jQuery's variant, I really don't know why don't they use this one:</source>
          <target state="translated">Aquí hay una versión mejorada (probablemente la más rápida)que uso en lugar de la variante exacta de jQuery,realmente no sé por qué no usan esta:</target>
        </trans-unit>
        <trans-unit id="dcae16de665cdab304c88fb675786b95de0fc2e3" translate="yes" xml:space="preserve">
          <source>Here's how it works:</source>
          <target state="translated">Así es como funciona:</target>
        </trans-unit>
        <trans-unit id="0227bbfca24a6bdebe3c7dd5cbe21c171f6c2209" translate="yes" xml:space="preserve">
          <source>I borrowed that regex from &lt;a href=&quot;http://www.codetoad.com/javascript/isnumeric.asp&quot;&gt;http://www.codetoad.com/javascript/isnumeric.asp&lt;/a&gt;. Explanation:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tom&amp;eacute; prestada esa expresi&amp;oacute;n regular de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.codetoad.com/javascript/isnumeric.asp&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://www.codetoad.com/javascript/isnumeric.asp&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Explicaci&amp;oacute;n:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c72eee3422fa54f25e504dd285e3bc3ad920e010" translate="yes" xml:space="preserve">
          <source>I came up with this:</source>
          <target state="translated">Se me ocurrió esto:</target>
        </trans-unit>
        <trans-unit id="29dbe7c18345c60fb64ae9c19402f06683dd6a5c" translate="yes" xml:space="preserve">
          <source>I needed this for a tokenizer, where sending the number to JavaScript for evaluation wasn't an option... It's definitely not the shortest possible regular expression, but I believe it catches all the finer subtleties of JavaScript's number syntax.</source>
          <target state="translated">Necesitaba esto para un tokenizer,donde enviar el número a JavaScript para su evaluación no era una opción...Definitivamente no es la expresión regular más corta posible,pero creo que capta todas las sutilezas de la sintaxis numérica de JavaScript.</target>
        </trans-unit>
        <trans-unit id="f582520e4fb437022841d45fd4213af3259e2cc8" translate="yes" xml:space="preserve">
          <source>I realize the original question did not mention jQuery, but if you do use jQuery, you can do:</source>
          <target state="translated">Me doy cuenta de que la pregunta original no mencionaba jQuery,pero si usas jQuery,puedes hacerlo:</target>
        </trans-unit>
        <trans-unit id="fc9f614646399fbd2e4f792530c74e9e835e728e" translate="yes" xml:space="preserve">
          <source>I realize this has been answered many times, but the following is a decent candidate which can be useful in some scenarios.</source>
          <target state="translated">Me doy cuenta de que esto ha sido contestado muchas veces,pero lo siguiente es un candidato decente que puede ser útil en algunos escenarios.</target>
        </trans-unit>
        <trans-unit id="d939a66eaa57554209d0635d8d8ad8d197b44be1" translate="yes" xml:space="preserve">
          <source>I then modified the logic to take this into account.</source>
          <target state="translated">Entonces modifiqué la lógica para tener esto en cuenta.</target>
        </trans-unit>
        <trans-unit id="410079dc841a7c05a4df44a7c0cdf48980317710" translate="yes" xml:space="preserve">
          <source>I then took CMSs &lt;a href=&quot;http://dl.getdropbox.com/u/35146/js/tests/isNumber.html&quot;&gt;+30 test cases&lt;/a&gt; and cloned the &lt;a href=&quot;http://jsfiddle.net/Xotic750/2q8pp/&quot;&gt;testing on jsfiddle&lt;/a&gt; added my extra test cases and my above described solution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Luego tom&amp;eacute; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://dl.getdropbox.com/u/35146/js/tests/isNumber.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;casos de prueba&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; CMS &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;+30&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/Xotic750/2q8pp/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;clon&amp;eacute;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;prueba en jsfiddle,&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; agregu&amp;eacute; mis casos de prueba adicionales y mi soluci&amp;oacute;n descrita anteriormente.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a1c945ad2b0c052e243c0c75b4dfb47f4ba66f83" translate="yes" xml:space="preserve">
          <source>I think is worth sharing this set of &lt;a href=&quot;http://run.plnkr.co/plunks/93FPpacuIcXqqKMecLdk/&quot;&gt;&lt;strong&gt;+30 unit tests&lt;/strong&gt;&lt;/a&gt; made to numerous function implementations, and also share the one that passes all my tests:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Creo que vale la pena compartir este conjunto de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://run.plnkr.co/plunks/93FPpacuIcXqqKMecLdk/&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;+30 pruebas unitarias&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; realizadas en numerosas implementaciones de funciones, y tambi&amp;eacute;n compartir el que pasa todas mis pruebas:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="062a80202a7eb2d3e92700edbd7f88cbd47e9376" translate="yes" xml:space="preserve">
          <source>I think parseFloat function can do all the work here. The function below passes all the tests on this page including &lt;code&gt;isNumeric(Infinity) == true&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Creo que la funci&amp;oacute;n parseFloat puede hacer todo el trabajo aqu&amp;iacute;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La siguiente funci&amp;oacute;n pasa todas las pruebas en esta p&amp;aacute;gina, incluida &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isNumeric(Infinity) == true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="be664c3a339de1375e17536c9e89f0c29d02c4a5" translate="yes" xml:space="preserve">
          <source>I want my isNumeric function to consider only Numbers or Strings</source>
          <target state="translated">Quiero que mi función isnumérica considere sólo Números o Cuerdas</target>
        </trans-unit>
        <trans-unit id="55983112c6d8ac1c7ae7bd884002c7594d2b08d2" translate="yes" xml:space="preserve">
          <source>I went back and did some research for &lt;em&gt;why&lt;/em&gt; a whitespace string did not have the expected output, and I think I get it now: an empty string is coerced to &lt;code&gt;0&lt;/code&gt; rather than &lt;code&gt;NaN&lt;/code&gt;. Simply trimming the string before the length check will handle this case.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Regres&amp;eacute; e investigu&amp;eacute; por &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;qu&amp;eacute;&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; una cadena de espacios en blanco no ten&amp;iacute;a la salida esperada, y creo que lo entiendo ahora: una cadena vac&amp;iacute;a se convierte en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; en&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; lugar de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Simplemente recortando la cuerda antes de la verificaci&amp;oacute;n de longitud manejar&amp;aacute; este caso.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e9cb50c17a35b72c5f14c68aebfac0a719e337e1" translate="yes" xml:space="preserve">
          <source>I'd like to add the following:</source>
          <target state="translated">Me gustaría añadir lo siguiente:</target>
        </trans-unit>
        <trans-unit id="57d0751cdc99ec5c0a0ff699d39c0d9a6e126558" translate="yes" xml:space="preserve">
          <source>I'm using simpler solution:</source>
          <target state="translated">Estoy usando una solución más simple:</target>
        </trans-unit>
        <trans-unit id="cc16138d2263a410d0749d9c0ef379b390526d8d" translate="yes" xml:space="preserve">
          <source>If I'm not mistaken, this should match any valid JavaScript number value, excluding constants (&lt;code&gt;Infinity&lt;/code&gt;, &lt;code&gt;NaN&lt;/code&gt;) and the sign operators &lt;code&gt;+&lt;/code&gt;/&lt;code&gt;-&lt;/code&gt; (because they are not actually part of the number as far as I concerned, they are separate operators):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si no me equivoco, esto deber&amp;iacute;a coincidir con cualquier valor de n&amp;uacute;mero de JavaScript v&amp;aacute;lido, excluyendo las constantes ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) y los operadores de signo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;+&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt; &lt;code&gt;-&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (porque, en lo que a m&amp;iacute; respecta, en realidad no son parte del n&amp;uacute;mero, son operadores separados ):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bec40aad67ac6762c9ca09469bb49d099c126af1" translate="yes" xml:space="preserve">
          <source>If n is numeric &lt;code&gt;Number(n)&lt;/code&gt; will return the numeric value and &lt;code&gt;toString()&lt;/code&gt; will turn it back to a string. But if n isn't numeric &lt;code&gt;Number(n)&lt;/code&gt; will return &lt;code&gt;NaN&lt;/code&gt; so it won't match the original &lt;code&gt;n&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si n es num&amp;eacute;rico, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Number(n)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; devolver&amp;aacute; el valor num&amp;eacute;rico y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; volver&amp;aacute; a convertir en una cadena. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero si n no es num&amp;eacute;rico, el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Number(n)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; devolver&amp;aacute; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para que no coincida con el &lt;/font&gt; &lt;code&gt;n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; original&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f8469f370fe35cb7f9bbc50b39330c319f851357" translate="yes" xml:space="preserve">
          <source>If you are worried about the creation of the regex each time the function is called then you could rewrite it within a closure, something like this</source>
          <target state="translated">Si te preocupa la creación del regex cada vez que se llama la función,podrías reescribirla dentro de un cierre,algo como esto</target>
        </trans-unit>
        <trans-unit id="6ddabb58b7b0fed02411e602c2e0a071b3388b93" translate="yes" xml:space="preserve">
          <source>If you can't use &lt;code&gt;isNaN()&lt;/code&gt;, this should work much better:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si no puede usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isNaN()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , esto deber&amp;iacute;a funcionar mucho mejor:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64d36bfba9adc1dce5a0d1244b586d56f47b4f42" translate="yes" xml:space="preserve">
          <source>If you need to validate a special set of decimals y
you can use this simple javascript:</source>
          <target state="translated">Si necesitas validar un conjunto especial de decimales y puedes usar este simple javascript:</target>
        </trans-unit>
        <trans-unit id="2263e8abea192304ab7ab9f21e7cfa8369938fc2" translate="yes" xml:space="preserve">
          <source>In one line:</source>
          <target state="translated">En una línea:</target>
        </trans-unit>
        <trans-unit id="7200a99b32dc32521180d4daad4927595e0d6ef7" translate="yes" xml:space="preserve">
          <source>In summary, &lt;strong&gt;&lt;em&gt;if you want to know if a value can be converted to a number, actually try to convert it to a number.&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En resumen, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;si desea saber si un valor puede convertirse en un n&amp;uacute;mero, intente convertirlo en un n&amp;uacute;mero.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="333d553227cc4a2fa4ac5d7060a1702e8a9da494" translate="yes" xml:space="preserve">
          <source>It appears to work in every situation, but I might be wrong.</source>
          <target state="translated">Parece funcionar en todas las situaciones,pero podría estar equivocado.</target>
        </trans-unit>
        <trans-unit id="c564071ce559323e59028ed7debc45de1e004e7b" translate="yes" xml:space="preserve">
          <source>It can be done without RegExp as</source>
          <target state="translated">Se puede hacer sin RegExp como</target>
        </trans-unit>
        <trans-unit id="712c202f0d819dd18eff720d2f31bf6fcaf4d2e0" translate="yes" xml:space="preserve">
          <source>It may not replace the widely accepted/used answer but if this is more of what you are expecting as results from your isNumeric function then hopefully this will be of some help.</source>
          <target state="translated">Puede que no reemplace la respuesta ampliamente aceptada,pero si esto es más de lo que se espera como resultado de su función isNumérica,entonces es de esperar que esto sea de alguna ayuda.</target>
        </trans-unit>
        <trans-unit id="bfff245cdf71c8a9ca733b06934e0a4372effebc" translate="yes" xml:space="preserve">
          <source>It worked fine.</source>
          <target state="translated">Funcionó bien.</target>
        </trans-unit>
        <trans-unit id="2e31a3b6d318bb8a5928be4c3a4d35a2627f4572" translate="yes" xml:space="preserve">
          <source>It works with numeric strings as well as plain numbers. Does not work with hexadecimal numbers.</source>
          <target state="translated">Funciona tanto con cadenas numéricas como con números simples.No funciona con números hexadecimales.</target>
        </trans-unit>
        <trans-unit id="3991f196cdabe813270d47bbd78b3b2f0ccf14e7" translate="yes" xml:space="preserve">
          <source>Just note that unlike what you said, &lt;code&gt;0x89f&lt;/code&gt; is a valid number (hexa)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Solo tenga en cuenta que, a diferencia de lo que dijo, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0x89f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es un n&amp;uacute;mero v&amp;aacute;lido (hexa)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e57b90d6585290cec7cb1cf64b65282257f91c4" translate="yes" xml:space="preserve">
          <source>My isComparableNumber is pretty close to another elegant &lt;a href=&quot;https://stackoverflow.com/a/1561597/623735&quot;&gt;answer&lt;/a&gt;, but handles hex and other string representations of numbers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;My isComparableNumber est&amp;aacute; bastante cerca de otra &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/1561597/623735&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;respuesta&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; elegante &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, pero maneja hexadecimales y otras representaciones de cadenas de n&amp;uacute;meros.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c9a3678478ea6e08b728e2b94f73c6eac6a39cbc" translate="yes" xml:space="preserve">
          <source>My second issue was that Negative Hexadecimal integer literal strings (&quot;-0xA&quot; -&amp;gt; -10) were not being counted as numeric. However, Positive Hexadecimal integer literal strings (&quot;0xA&quot; -&amp;gt; 10) were treated as numeric.
I needed both to be valid numeric.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mi segundo problema fue que las cadenas literales enteras hexadecimales negativas (&quot;-0xA&quot; -&amp;gt; -10) no se contaban como num&amp;eacute;ricas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, las cadenas literales enteras hexadecimales positivas (&quot;0xA&quot; -&amp;gt; 10) se trataron como num&amp;eacute;ricas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Necesitaba que ambos fueran num&amp;eacute;ricos v&amp;aacute;lidos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ae682f58f4fcc01d02c3ef26537d5f53dfd8532a" translate="yes" xml:space="preserve">
          <source>My solution,</source>
          <target state="translated">Mi solución,</target>
        </trans-unit>
        <trans-unit id="da2ef974e08928b9a1a59856d2f205e81954db22" translate="yes" xml:space="preserve">
          <source>None of the answers return &lt;code&gt;false&lt;/code&gt; for empty strings, a fix for that...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ninguna de las respuestas devuelve &lt;/font&gt;&lt;/font&gt; &lt;code&gt;false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para cadenas vac&amp;iacute;as, una soluci&amp;oacute;n para eso ...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="850422ea4c8272cf389573c577a0f83e8d1eb914" translate="yes" xml:space="preserve">
          <source>Nothing very different but we can use Boolean constructor</source>
          <target state="translated">Nada muy diferente pero podemos usar un constructor booleano</target>
        </trans-unit>
        <trans-unit id="4d430e56292fd1b21ab721eea81696c543b5a4ff" translate="yes" xml:space="preserve">
          <source>Of course, you could also use &lt;code&gt;Array.isArray&lt;/code&gt;, jquery &lt;code&gt;$.isArray&lt;/code&gt; or prototype &lt;code&gt;Object.isArray&lt;/code&gt; instead of &lt;code&gt;Object.prototype.toString.call(n) !== '[object Array]'&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por supuesto, tambi&amp;eacute;n puede usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Array.isArray&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , jquery &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$.isArray&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o prototype &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.isArray&lt;/code&gt; en&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; lugar de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype.toString.call(n) !== '[object Array]'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff271b42728102e6eceaa592ec6d5f8602ea5843" translate="yes" xml:space="preserve">
          <source>Only problem I had with @CMS's &lt;a href=&quot;https://stackoverflow.com/a/1830844/623735&quot;&gt;answer&lt;/a&gt; is the exclusion of &lt;code&gt;NaN&lt;/code&gt; and Infinity, which are useful numbers for many situations. One way to check for &lt;code&gt;NaN&lt;/code&gt;'s is to check for numeric values that don't equal themselves, &lt;code&gt;NaN != NaN&lt;/code&gt;!  So there are really 3 tests you'd like to deal with ...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &amp;uacute;nico problema que tuve con la &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/1830844/623735&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;respuesta de&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; @ CMS &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;es la exclusi&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; e Infinity, que son n&amp;uacute;meros &amp;uacute;tiles para muchas situaciones. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una forma de verificar los &lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es verificar los valores num&amp;eacute;ricos que no son iguales, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN != NaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;As&amp;iacute; que realmente hay 3 pruebas con las que te gustar&amp;iacute;a lidiar ...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5752d6736e14ea97bacab8527ecf6ba007d54041" translate="yes" xml:space="preserve">
          <source>Positive hex numbers start with &lt;code&gt;0x&lt;/code&gt; and negative hex numbers start with &lt;code&gt;-0x&lt;/code&gt;.
Positive oct numbers start with &lt;code&gt;0&lt;/code&gt; and negative oct numbers start with &lt;code&gt;-0&lt;/code&gt;.
This one takes most of what has already been mentioned into consideration, but includes hex and octal numbers, negative scientific, Infinity and has removed decimal scientific (&lt;code&gt;4e3.2&lt;/code&gt; is not valid).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los n&amp;uacute;meros hexadecimales positivos comienzan con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y los n&amp;uacute;meros hexadecimales negativos comienzan con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;-0x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los n&amp;uacute;meros de oct positivos comienzan con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y los n&amp;uacute;meros de oct negativos comienzan con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;-0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Este toma en consideraci&amp;oacute;n la mayor parte de lo que ya se ha mencionado, pero incluye n&amp;uacute;meros hexadecimales y octales, cient&amp;iacute;fico negativo, Infinito y ha eliminado el decimal cient&amp;iacute;fico ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;4e3.2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no es v&amp;aacute;lido).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="02324d2fc43fdc638dc2c1164c01450c94b3ffd5" translate="yes" xml:space="preserve">
          <source>Running the unit tests against the new code and it only fails on the infinity and boolean literals, and the only time that should be a problem is if you're generating code (really, who would type in a literal and check if it's numeric? You should &lt;em&gt;know&lt;/em&gt;), and that would be some strange code to generate.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ejecutar las pruebas unitarias contra el nuevo c&amp;oacute;digo y solo falla en los literales infinito y booleano, y el &amp;uacute;nico momento que deber&amp;iacute;a ser un problema es si est&amp;aacute; generando c&amp;oacute;digo (realmente, &amp;iquest;qui&amp;eacute;n escribir&amp;iacute;a un literal y comprobar&amp;iacute;a si es num&amp;eacute;rico? Debes &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;saber&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), y eso ser&amp;iacute;a un c&amp;oacute;digo extra&amp;ntilde;o para generar.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99b27388b63c7c0aff4d69649ba133a7a5b31859" translate="yes" xml:space="preserve">
          <source>Simple.</source>
          <target state="translated">Simple.</target>
        </trans-unit>
        <trans-unit id="19f4c0ef7c752661e63c4444a634ffc617b09ec6" translate="yes" xml:space="preserve">
          <source>Since jQuery 1.7, you can use &lt;a href=&quot;http://api.jquery.com/jQuery.isNumeric/&quot;&gt;&lt;code&gt;jQuery.isNumeric()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Desde jQuery 1.7, puede usar &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://api.jquery.com/jQuery.isNumeric/&quot;&gt; &lt;code&gt;jQuery.isNumeric()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9fc8fe8485fba0d57b83521cea373769f4964394" translate="yes" xml:space="preserve">
          <source>Some time ago I had to implement an &lt;code&gt;IsNumeric&lt;/code&gt; function, to find out if a variable contained a numeric value, &lt;strong&gt;regardless of its type&lt;/strong&gt;, it could be a &lt;code&gt;String&lt;/code&gt; containing a numeric value (I had to consider also exponential notation, etc.), a &lt;code&gt;Number&lt;/code&gt; object, virtually anything could be passed to that function, I couldn't make any type assumptions,  taking care of type coercion (eg. &lt;code&gt;+true == 1;&lt;/code&gt; but &lt;code&gt;true&lt;/code&gt; shouldn't be considered as &lt;code&gt;&quot;numeric&quot;&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hace alg&amp;uacute;n tiempo tuve que implementar una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;IsNumeric&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , para averiguar si una variable conten&amp;iacute;a un valor num&amp;eacute;rico, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;independientemente de su tipo&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , podr&amp;iacute;a ser una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; contiene un valor num&amp;eacute;rico (tuve que considerar tambi&amp;eacute;n la notaci&amp;oacute;n exponencial, etc.), un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Objeto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Number&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , se podr&amp;iacute;a pasar pr&amp;aacute;cticamente cualquier cosa a esa funci&amp;oacute;n, no pude hacer ninguna suposici&amp;oacute;n de tipo, teniendo cuidado de la coerci&amp;oacute;n de tipo (por ejemplo, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;+true == 1;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; pero &lt;/font&gt;&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no debe considerarse como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;numeric&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="54f5fa3fb3c8c61b5e91ef26cf2087556fc2660d" translate="yes" xml:space="preserve">
          <source>Test cases:</source>
          <target state="translated">Casos de prueba:</target>
        </trans-unit>
        <trans-unit id="a70ce38389e318bd2be18a0111c6dc76bd2cd9ed" translate="yes" xml:space="preserve">
          <source>TestCase</source>
          <target state="translated">TestCase</target>
        </trans-unit>
        <trans-unit id="4033570531fe3eb2ad39b4792f1edaf65b9cfb3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;(input - 0)&lt;/code&gt; expression forces JavaScript to do type coercion on your input value; it must first be interpreted as a number for the subtraction operation.  If that conversion to a number fails, the expression will result in &lt;code&gt;NaN&lt;/code&gt;.  This &lt;em&gt;numeric&lt;/em&gt; result is then compared to the original value you passed in.  Since the left hand side is now numeric, type coercion is again used.  Now that the input from both sides was coerced to the same type from the same original value, you would think they should always be the same (always true). However, there's a special rule that says &lt;code&gt;NaN&lt;/code&gt; is never equal to &lt;code&gt;NaN&lt;/code&gt;, and so a value that can't be converted to a number (and only values that cannot be converted to numbers) will result in false.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;expresi&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(input - 0)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; obliga a JavaScript a realizar una coerci&amp;oacute;n de tipo en su valor de entrada; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;primero debe interpretarse como un n&amp;uacute;mero para la operaci&amp;oacute;n de resta. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si esa conversi&amp;oacute;n a un n&amp;uacute;mero falla, la expresi&amp;oacute;n dar&amp;aacute; como resultado &lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Este &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;resultado &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;num&amp;eacute;rico&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se compara con el valor original que ingres&amp;oacute;. Dado que el lado izquierdo ahora es num&amp;eacute;rico, se utiliza nuevamente la coerci&amp;oacute;n de tipo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora que la entrada de ambos lados fue coaccionada al mismo tipo desde el mismo valor original, pensar&amp;iacute;a que siempre deber&amp;iacute;an ser los mismos (siempre cierto). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, hay una regla especial que dice que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; nunca es igual a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, por lo que un valor que no se puede convertir a un n&amp;uacute;mero (y solo los valores que no se pueden convertir a n&amp;uacute;meros) dar&amp;aacute; como resultado falso.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e60f6f12c9f87a62739d82deda0a2c662b871d0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isDecimal&lt;/code&gt; passes the following test:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isDecimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; pasa la prueba siguiente:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9ec20b880ddee1182592996089aa87ebd81af6bc" translate="yes" xml:space="preserve">
          <source>The Javascript:</source>
          <target state="translated">El Javascript:</target>
        </trans-unit>
        <trans-unit id="d608c5907ccc1d0e078ea380e02b18d40ad5621a" translate="yes" xml:space="preserve">
          <source>The accepted answer failed your test #7 and I guess it's because you changed your mind. So this is a response to the accepted answer, with which I had issues.</source>
          <target state="translated">La respuesta aceptada falló en tu prueba número 7 y supongo que es porque cambiaste de opinión.Así que esta es una respuesta a la respuesta aceptada,con la que tuve problemas.</target>
        </trans-unit>
        <trans-unit id="402beb315116495be6a1cf101f8a1c1b59c38ccd" translate="yes" xml:space="preserve">
          <source>The check on the length is for a special case involving empty strings. Also note that it falls down on your 0x89f test, but that's because in many environments that's an okay way to define a number literal.  If you want to catch that specific scenario you could add an additional check.  Even better, if that's your reason for not using &lt;code&gt;isNaN()&lt;/code&gt; then just wrap your own function around &lt;code&gt;isNaN()&lt;/code&gt; that can also do the additional check.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La verificaci&amp;oacute;n de la longitud es para un caso especial que involucra cadenas vac&amp;iacute;as. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n tenga en cuenta que se cae en su prueba 0x89f, pero eso es porque en muchos entornos esa es una manera correcta de definir un n&amp;uacute;mero literal. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si desea captar ese escenario espec&amp;iacute;fico, puede agregar una verificaci&amp;oacute;n adicional. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A&amp;uacute;n mejor, si esa es su raz&amp;oacute;n para no usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isNaN()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , simplemente &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isNaN()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; su propia funci&amp;oacute;n alrededor de &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;isNaN ()&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que tambi&amp;eacute;n puede hacer la verificaci&amp;oacute;n adicional.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7aae1c091e2ae39dbd22df26e49467ee923a35ce" translate="yes" xml:space="preserve">
          <source>The downside of jQuery's version is that if you pass a string with leading numerics and trailing letters like &lt;code&gt;&quot;123abc&quot;&lt;/code&gt; the &lt;code&gt;parseFloat | parseInt&lt;/code&gt; will extract the numeric fraction out and return 123, BUT, the second guard &lt;code&gt;isFinite&lt;/code&gt; will fail it anyway.
With the unary &lt;code&gt;+&lt;/code&gt; operator it will die on the very first guard since + throws NaN for such hybrids :)
A little performance yet I think a solid semantic gain.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La desventaja de la versi&amp;oacute;n de jQuery es que si pasa una cadena con n&amp;uacute;meros iniciales y letras finales como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;123abc&quot;&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;parseFloat | parseInt&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; extraer&amp;aacute; la fracci&amp;oacute;n num&amp;eacute;rica y devolver&amp;aacute; 123, PERO, el segundo guardia &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isFinite&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; fallar&amp;aacute; de todos modos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Con el operador unario &lt;/font&gt;&lt;/font&gt; &lt;code&gt;+&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , morir&amp;aacute; en la primera guardia ya que + lanza NaN para tales h&amp;iacute;bridos :) Un poco de rendimiento, pero creo que es una ganancia sem&amp;aacute;ntica s&amp;oacute;lida.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="47ae4d295d5daa46cab0ae7212b476b50d7d8908" translate="yes" xml:space="preserve">
          <source>The idea here is that every number or integer has one &quot;canonical&quot; string representation, and every non-canonical representation should be rejected. So we cast to a number and back, and see if the result is the original string.</source>
          <target state="translated">La idea aquí es que cada número o entero tiene una representación de cuerda &quot;canónica&quot;,y toda representación no canónica debe ser rechazada.Así que vamos a un número y volvemos,y vemos si el resultado es la cadena original.</target>
        </trans-unit>
        <trans-unit id="de5ff378ffbd286b7b2e7705b6efc417ff2993b5" translate="yes" xml:space="preserve">
          <source>The solution covers:</source>
          <target state="translated">La solución cubre:</target>
        </trans-unit>
        <trans-unit id="67455d66e270c68c864be87e02187bd49b46b74c" translate="yes" xml:space="preserve">
          <source>This field accept value between 5 and 10 only</source>
          <target state="translated">Este campo acepta un valor entre 5 y 10 solamente</target>
        </trans-unit>
        <trans-unit id="44341b495717e14c392a965197aa3e722063e1a6" translate="yes" xml:space="preserve">
          <source>This is part of the language since
&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-number.isfinite&quot;&gt;ES2015&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto es parte del lenguaje desde &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-number.isfinite&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES2015&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b65f763f4d712f97c6dd6e93aee0243859234804" translate="yes" xml:space="preserve">
          <source>This is relevant e.g. for numbers as object property names.</source>
          <target state="translated">Esto es relevante,por ejemplo,para los números como nombres de propiedades de objetos.</target>
        </trans-unit>
        <trans-unit id="b5714f9a5c65746441d7d382c1eb02d3731cd2f7" translate="yes" xml:space="preserve">
          <source>This should work. Some of the functions provided here are flawed, also should be faster than any other function here.</source>
          <target state="translated">Esto debería funcionar.Algunas de las funciones proporcionadas aquí son defectuosas,también debería ser más rápido que cualquier otra función aquí.</target>
        </trans-unit>
        <trans-unit id="81ae9263acccfa98f249641778eeed8334d1024b" translate="yes" xml:space="preserve">
          <source>This way is easier and faster! All tests are checked!</source>
          <target state="translated">¡Este camino es más fácil y más rápido! ¡Todas las pruebas están comprobadas!</target>
        </trans-unit>
        <trans-unit id="7291adbcaf9c97e74a5e38077ccc6100a12cd8c7" translate="yes" xml:space="preserve">
          <source>This way seems to work well:</source>
          <target state="translated">Este camino parece funcionar bien:</target>
        </trans-unit>
        <trans-unit id="d8e707f5bebee6e958040f7d81d67cdf95bbac30" translate="yes" xml:space="preserve">
          <source>This works for 0x23 type numbers as well.</source>
          <target state="translated">Esto también funciona para los números de tipo 0x23.</target>
        </trans-unit>
        <trans-unit id="7da1d54df023dff2b0a3282521d27c02e0f46146" translate="yes" xml:space="preserve">
          <source>To alleviate this problem, I added a check to discount arrays from the logic</source>
          <target state="translated">Para aliviar este problema,añadí un cheque para descontar matrices de la lógica</target>
        </trans-unit>
        <trans-unit id="c60941249b49a05c0eee83bc0f102c021df402ab" translate="yes" xml:space="preserve">
          <source>To check if a variable contains a valid number and not
just a String which looks like a number,
&lt;code&gt;Number.isFinite(value)&lt;/code&gt; can be used.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para verificar si una variable contiene un n&amp;uacute;mero v&amp;aacute;lido y no solo una Cadena que se parece a un n&amp;uacute;mero, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se puede usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Number.isFinite(value)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b04619a3e04d3ab36ad35fce95a6b6e92e3ee5c" translate="yes" xml:space="preserve">
          <source>To me, this is the best way:</source>
          <target state="translated">Para mí,esta es la mejor manera:</target>
        </trans-unit>
        <trans-unit id="01da0ffb357bf62ebce0bf87043a8cc179a49e0e" translate="yes" xml:space="preserve">
          <source>Use the function &lt;code&gt;isNaN&lt;/code&gt;. I believe if you test for &lt;code&gt;!isNaN(yourstringhere)&lt;/code&gt; it works fine for any of these situations.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Use la funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isNaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Creo que si pruebas para &lt;/font&gt;&lt;/font&gt; &lt;code&gt;!isNaN(yourstringhere)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; funciona bien para cualquiera de estas situaciones.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="afe24c4d208f9119178e480f28d93e21931b32fe" translate="yes" xml:space="preserve">
          <source>Validate decimal numbers in JavaScript - IsNumeric()</source>
          <target state="translated">Validar los números decimales en JavaScript-IsNumeric()</target>
        </trans-unit>
        <trans-unit id="73d0175b3bfb997fffaa4bf891f7c07f87cda7f1" translate="yes" xml:space="preserve">
          <source>Warning: use at your own risk, no guarantees.</source>
          <target state="translated">Advertencia:uso bajo su propio riesgo,sin garantías.</target>
        </trans-unit>
        <trans-unit id="c08d257d4d258cf6aa1c44af97ac4301c6c3b3a5" translate="yes" xml:space="preserve">
          <source>What's the cleanest, most effective way to validate decimal numbers in JavaScript?</source>
          <target state="translated">¿Cuál es la forma más limpia y efectiva de validar los números decimales en JavaScript?</target>
        </trans-unit>
        <trans-unit id="03f26872aba4a6f83b3ecdfb46d543ae10ae3fe7" translate="yes" xml:space="preserve">
          <source>Whether these functions are useful for you depends on the use case. One feature is that &lt;em&gt;distinct strings represent distinct numbers&lt;/em&gt; (if both pass the &lt;code&gt;isNumber()&lt;/code&gt; test).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si estas funciones son &amp;uacute;tiles para usted depende del caso de uso. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una caracter&amp;iacute;stica es que las &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cadenas distintas representan n&amp;uacute;meros distintos&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (si ambas pasan la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;prueba &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isNumber()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a397a62f6c4bba0d307c9b0bd005d8b8d00f9ca5" translate="yes" xml:space="preserve">
          <source>With this in mind, it would be better to use</source>
          <target state="translated">Con esto en mente,sería mejor usar</target>
        </trans-unit>
        <trans-unit id="b9f79764de8c774b9884615009abb60cd722876d" translate="yes" xml:space="preserve">
          <source>Yeah, the built-in &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/isNaN&quot;&gt;&lt;code&gt;isNaN(object)&lt;/code&gt;&lt;/a&gt; will be much faster than any regex parsing, because it's built-in and compiled, instead of interpreted on the fly.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;S&amp;iacute;, el &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/isNaN&quot;&gt; &lt;code&gt;isNaN(object)&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ser&amp;aacute; mucho m&amp;aacute;s r&amp;aacute;pido que cualquier an&amp;aacute;lisis de &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;expresiones&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; regulares, porque est&amp;aacute; integrado y compilado, en lugar de ser interpretado sobre la marcha.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6330b5fa1e542e9e0d197dbcf5e7608c804c1271" translate="yes" xml:space="preserve">
          <source>didn't work for me. When I put in an alert and tested, &lt;code&gt;input.length&lt;/code&gt; was &lt;code&gt;undefined&lt;/code&gt;. I think there is no property to check integer length. So what I did was</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No funcion&amp;oacute; para m&amp;iacute;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando puse una alerta y prob&amp;eacute;, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;input.length&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; estaba &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;definido&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Creo que no hay propiedad para verificar la longitud del entero. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces lo que hice fue&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e784e7e624c7540a8490ec2a54507a52ec826fa6" translate="yes" xml:space="preserve">
          <source>it should be noted that it assumes that '.42' is NOT a number, and '4.' is NOT a number, so this should be taken into account.</source>
          <target state="translated">debe tenerse en cuenta que asume que &quot;.42&quot; NO es un número,y &quot;4&quot; NO es un número,por lo que esto debe tenerse en cuenta.</target>
        </trans-unit>
        <trans-unit id="e7b18c0494c690e1c6ececb399a23d918bea094a" translate="yes" xml:space="preserve">
          <source>jQuery, and some other javascript libraries already include such a function, usually called &lt;code&gt;isNumeric&lt;/code&gt;. There is also a &lt;a href=&quot;https://stackoverflow.com/a/1830844/592253&quot;&gt;post on stackoverflow&lt;/a&gt; that has been widely accepted as the answer, the same general routine that the afore mentioned libraries are using.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;jQuery y algunas otras bibliotecas javascript ya incluyen dicha funci&amp;oacute;n, generalmente llamada &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isNumeric&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n hay una &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/1830844/592253&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;publicaci&amp;oacute;n en stackoverflow&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que ha sido ampliamente aceptada como la respuesta, la misma rutina general que utilizan las bibliotecas mencionadas anteriormente.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
