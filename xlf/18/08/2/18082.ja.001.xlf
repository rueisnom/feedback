<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/18082">
    <body>
      <group id="18082">
        <trans-unit id="a534bc787c3f3ae5fa2067e98e6ea0a01ce04934" translate="yes" xml:space="preserve">
          <source>1) number</source>
          <target state="translated">1)数</target>
        </trans-unit>
        <trans-unit id="f42e9559bdd5484ddfe34c46aacc53d8669acbd8" translate="yes" xml:space="preserve">
          <source>2) digit</source>
          <target state="translated">2)数字</target>
        </trans-unit>
        <trans-unit id="09e873e9a0244ee5280c603ee3889c5236d48bcd" translate="yes" xml:space="preserve">
          <source>3) min and max</source>
          <target state="translated">3)最小および最大</target>
        </trans-unit>
        <trans-unit id="7c786d62c3dd0de26e1ab54a0345fa440b0bbdad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/Yahoo!_UI_Library&quot;&gt;Yahoo! UI&lt;/a&gt; uses this:</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Yahoo!_UI_Library&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Yahoo! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;UI&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はこれを使用します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4bc38746ad0ff1f3d2f760166538544eccdce9e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://api.jquery.com/jQuery.isNumeric/&quot;&gt;https://api.jquery.com/jQuery.isNumeric/&lt;/a&gt; (as of jQuery 1.7)</source>
          <target state="translated">&lt;a href=&quot;https://api.jquery.com/jQuery.isNumeric/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://api.jquery.com/jQuery.isNumeric/（jQuery&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 1.7以降）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5bf380bc124eaf602f577b1e285131652ede6fd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/questions/18082/validate-numbers-in-javascript-isnumeric/174921#174921&quot;&gt;@Joel's answer&lt;/a&gt; is pretty close, but it will fail in the following cases:</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/18082/validate-numbers-in-javascript-isnumeric/174921#174921&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@ジョエルの答え&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はかなり近いですが、次の場合には失敗します：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fb69bbcc3eec75aa8873d6d4d5ce3c2b6b352a79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self.number = ko.observable(numberValue)&lt;/code&gt;&lt;strong&gt;.extend({ digit: true})&lt;/strong&gt;;</source>
          <target state="translated">&lt;code&gt;self.number = ko.observable(numberValue)&lt;/code&gt; &lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.extend（{digit：true}）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a065243661b1c2759661ed5f35228c12b362248" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self.number = ko.observable(numberValue)&lt;/code&gt;&lt;strong&gt;.extend({ min: 5}).extend({ max: 10})&lt;/strong&gt;;</source>
          <target state="translated">&lt;code&gt;self.number = ko.observable(numberValue)&lt;/code&gt; &lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.extend（{min：5}）。extend（{max：10}）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f76fbbb7d7842e025a1178102e5332e89bbd0a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self.number = ko.observable(numberValue)&lt;/code&gt;&lt;strong&gt;.extend({ number: true})&lt;/strong&gt;;</source>
          <target state="translated">&lt;code&gt;self.number = ko.observable(numberValue)&lt;/code&gt; &lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.extend（{number：true}）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee9c92569767e3c96657a8d5407c5dc6339ed413" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT:&lt;/strong&gt; As pointed out by &lt;a href=&quot;https://stackoverflow.com/a/15230431/592253&quot;&gt;Bergi&lt;/a&gt;, there are other possible objects that could be considered numeric and it would be better to whitelist than blacklist. With this in mind I would add to the criteria.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;編集：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/15230431/592253&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bergi&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;によって指摘された&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ように、数値と見なされる可能性のある他のオブジェクトがあり、ブラックリストよりもホワイトリストの方が良いでしょう。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを念頭に置いて、基準を追加します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="61479b12043c26ae40fe0882c667ccfc4eae0d0c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Invalid numbers would be&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;無効な数値は&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="de72cc80af4464eb303fb55c3f0fc08fbb0174c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;P.S.&lt;/strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isNaN&quot;&gt;isNaN&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isFinite&quot;&gt;isFinite&lt;/a&gt; have a confusing behavior due to forced conversion to number. In ES6, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN&quot;&gt;Number.isNaN&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite&quot;&gt;Number.isFinite&lt;/a&gt; would fix these issues. Keep that in mind when using them.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PS &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isNaN&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;isNaN&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isFinite&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;isFinite&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、強制的に数値に変換するため、混乱を招きます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6では、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Number.isNaN&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Number.isFinite&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がこれらの問題を修正します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それらを使用する場合は、そのことを覚えておいてください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="45490ef14e4f21eb08b74a7e1f5b26da982b17ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Test the solutions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ソリューションをテストする&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bf7f2f00047743847f43350edd7b9bdf13a83e97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt; :
&lt;a href=&quot;https://github.com/angular/angular/blob/4.3.x/packages/common/src/pipes/number_pipe.ts#L172&quot;&gt;Angular 4.3&lt;/a&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アップデート&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;： &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/angular/angular/blob/4.3.x/packages/common/src/pipes/number_pipe.ts#L172&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Angular 4.3&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e8b5a77516c2f97d63e9c261dddc6bfcef5725f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt; : 
&lt;a href=&quot;https://github.com/jquery/jquery/blob/2.2-stable/src/core.js#L215&quot;&gt;Here's how jQuery does it now (2.2-stable)&lt;/a&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更新&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;： &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/jquery/jquery/blob/2.2-stable/src/core.js#L215&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;jQueryがこれを実行する方法を次に示します（2.2-stable）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a48482daa1418a6bc211d0490d1c324bcf97a6c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Valid numbers would include:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有効な数は次のとおりです。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="190abad07458eea64859de62eff9b06c0effd9b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;knockoutJs Inbuild library validation functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;knockoutJs Inbuildライブラリ検証関数&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d87457fab4b815e454ebab1c44ec69cea41d7e11" translate="yes" xml:space="preserve">
          <source>A couple of tests to add:</source>
          <target state="translated">いくつかのテストを追加します。</target>
        </trans-unit>
        <trans-unit id="ae7b5d093eeb68d66f91793a426319d47d3d475a" translate="yes" xml:space="preserve">
          <source>A period that is followed by 1 or more numbers</source>
          <target state="translated">1つ以上の数字が続くピリオド</target>
        </trans-unit>
        <trans-unit id="f9041248de975321f47798953351f5b2c2c27f42" translate="yes" xml:space="preserve">
          <source>A single zero, or one or more digits not starting with 0, or nothing so long as a period follows</source>
          <target state="translated">1つのゼロ、または0で始まらない1つ以上の数字、またはピリオドの後に続く限り何もありません。</target>
        </trans-unit>
        <trans-unit id="7003cd3614ff99516cf6c40ed95c501ad9bfa940" translate="yes" xml:space="preserve">
          <source>Although the results are somewhat different to what you're looking for (&lt;a href=&quot;http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_isnan&quot;&gt;try it&lt;/a&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;結果はあなたが探しているものと多少異なりますが（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_isnan&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;試してみてください&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67e797b9c9bfa1b03295cccb60b6d2b7aee7d390" translate="yes" xml:space="preserve">
          <source>An integer value can be verified by:</source>
          <target state="translated">整数値は次の方法で検証できます。</target>
        </trans-unit>
        <trans-unit id="74b62771466f49cf8ba9cab325bac4e800ff60af" translate="yes" xml:space="preserve">
          <source>An optional negative sign at the beginning</source>
          <target state="translated">先頭にオプションの負の符号を付けます。</target>
        </trans-unit>
        <trans-unit id="3cd0680928fb5803699577d4e9b8285509fcd324" translate="yes" xml:space="preserve">
          <source>And to test it:</source>
          <target state="translated">そして、それをテストするために。</target>
        </trans-unit>
        <trans-unit id="70cd32e576a430797f6718e8cb7bf8ad3d74f345" translate="yes" xml:space="preserve">
          <source>Arrrgh!  Don't listen to the regular expression answers.  RegEx is icky for this, and I'm not talking just performance.  It's so easy to make subtle, impossible to spot mistakes with your regular expression.</source>
          <target state="translated">うわぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁぁ 正規表現の答えを聞いてはいけません。RegEx はこの点では不愉快で、パフォーマンスだけの話ではありません。正規表現を使っていると、ミスを見破ることができないような微妙なミスが簡単にできてしまいます。</target>
        </trans-unit>
        <trans-unit id="cd6274a24f10d9eedd162c57f2108e902cbcd1c3" translate="yes" xml:space="preserve">
          <source>Bonus points for:</source>
          <target state="translated">ボーナスポイント</target>
        </trans-unit>
        <trans-unit id="4dd5806ec124e76bc035017f6343d16dbcababb3" translate="yes" xml:space="preserve">
          <source>But, again, &lt;strong&gt;the only reason ever to use this is if for some reason you have to avoid isNaN().&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、繰り返しますが、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを使用する唯一の理由は、何らかの理由でisNaN（）を避けなければならない場合です。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="08692c4d768ee9bcf4e0e72a244cc1961d1bbe37" translate="yes" xml:space="preserve">
          <source>By extending it the field get validated</source>
          <target state="translated">これを拡張することで、フィールドが検証されます。</target>
        </trans-unit>
        <trans-unit id="11635b65d08cb6ad2397ee766a17dd7299d12766" translate="yes" xml:space="preserve">
          <source>Clarity. Solution should be clean and simple.</source>
          <target state="translated">明快さ。解決策は、クリーンでシンプルであるべきです。</target>
        </trans-unit>
        <trans-unit id="7ae3e9f0d87df2494fbaad9e4ff4e218748bf577" translate="yes" xml:space="preserve">
          <source>Create a copy of itself, then converts the number into float, then compares itself with the original number, if it is still a number, (whether integer or float) , and matches the original number, that means, it is indeed a number.</source>
          <target state="translated">自分自身のコピーを作成し、その数字をfloatに変換し、元の数字と自分自身を比較して、(整数か浮動小数点数かに関わらず)まだ数字であれば、元の数字と一致します。</target>
        </trans-unit>
        <trans-unit id="520164c4c72c1289f7ce8328d581ac093dc29d31" translate="yes" xml:space="preserve">
          <source>Cross-platform.</source>
          <target state="translated">Cross-platform.</target>
        </trans-unit>
        <trans-unit id="f7c9067bf3f34ef376a5dd4334de35a084aadd7e" translate="yes" xml:space="preserve">
          <source>During some projects I have needed to validate some data and be as certain as possible that it is a javascript numerical value that can be used in mathematical operations.</source>
          <target state="translated">いくつかのプロジェクトの間、私はいくつかのデータを検証し、それが数学的な操作で使用できるjavascriptの数値であることを可能な限り確実にする必要がありました。</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">スニペットを展開</target>
        </trans-unit>
        <trans-unit id="a3608ef2d4fdb6f1ba5354a14fb5732f73bb1780" translate="yes" xml:space="preserve">
          <source>Explained:</source>
          <target state="translated">Explained:</target>
        </trans-unit>
        <trans-unit id="ef12ad55decf04d602c3e259e1aeb5f233c8f473" translate="yes" xml:space="preserve">
          <source>First, the code above would return true if the argument was an array of length 1, and that single element was of a type deemed as numeric by the above logic. In my opinion, if it's an array then its not numeric.</source>
          <target state="translated">まず、上記のコードは、引数が長さ1の配列で、その1つの要素が上記のロジックで数値とみなされる型であれば真を返します。私の考えでは、もしそれが配列であれば、数値ではありません。</target>
        </trans-unit>
        <trans-unit id="b3c49a616fc36313e1bb223da6613dd488f0e9fe" translate="yes" xml:space="preserve">
          <source>Here's a lil bit improved version (probably the fastest way out there) that I use instead of exact jQuery's variant, I really don't know why don't they use this one:</source>
          <target state="translated">ここでは、私が正確なjQueryのバリアントの代わりに使っている、少し改良されたバージョン(おそらくそこから出てくる最速の方法)を紹介します。</target>
        </trans-unit>
        <trans-unit id="dcae16de665cdab304c88fb675786b95de0fc2e3" translate="yes" xml:space="preserve">
          <source>Here's how it works:</source>
          <target state="translated">その仕組みをご紹介します。</target>
        </trans-unit>
        <trans-unit id="0227bbfca24a6bdebe3c7dd5cbe21c171f6c2209" translate="yes" xml:space="preserve">
          <source>I borrowed that regex from &lt;a href=&quot;http://www.codetoad.com/javascript/isnumeric.asp&quot;&gt;http://www.codetoad.com/javascript/isnumeric.asp&lt;/a&gt;. Explanation:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その正規表現を&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.codetoad.com/javascript/isnumeric.asp&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://www.codetoad.com/javascript/isnumeric.asp&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から借りました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;説明：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c72eee3422fa54f25e504dd285e3bc3ad920e010" translate="yes" xml:space="preserve">
          <source>I came up with this:</source>
          <target state="translated">と思いつきました。</target>
        </trans-unit>
        <trans-unit id="29dbe7c18345c60fb64ae9c19402f06683dd6a5c" translate="yes" xml:space="preserve">
          <source>I needed this for a tokenizer, where sending the number to JavaScript for evaluation wasn't an option... It's definitely not the shortest possible regular expression, but I believe it catches all the finer subtleties of JavaScript's number syntax.</source>
          <target state="translated">トークナイザーのためにこれが必要だったのですが、評価のためにJavaScriptに数値を送信するという選択肢はありませんでした...これは確かに可能な限り最短の正規表現ではありませんが、JavaScriptの数値構文のすべての細かい機微をキャッチしていると思います。</target>
        </trans-unit>
        <trans-unit id="f582520e4fb437022841d45fd4213af3259e2cc8" translate="yes" xml:space="preserve">
          <source>I realize the original question did not mention jQuery, but if you do use jQuery, you can do:</source>
          <target state="translated">元の質問ではjQueryについて触れられていなかったことに気づきましたが、jQueryを使うのであれば可能です。</target>
        </trans-unit>
        <trans-unit id="fc9f614646399fbd2e4f792530c74e9e835e728e" translate="yes" xml:space="preserve">
          <source>I realize this has been answered many times, but the following is a decent candidate which can be useful in some scenarios.</source>
          <target state="translated">これは何度も回答されていることだと思いますが、以下はシナリオによっては使えるまともな候補です。</target>
        </trans-unit>
        <trans-unit id="d939a66eaa57554209d0635d8d8ad8d197b44be1" translate="yes" xml:space="preserve">
          <source>I then modified the logic to take this into account.</source>
          <target state="translated">その後、この点を考慮してロジックを修正しました。</target>
        </trans-unit>
        <trans-unit id="410079dc841a7c05a4df44a7c0cdf48980317710" translate="yes" xml:space="preserve">
          <source>I then took CMSs &lt;a href=&quot;http://dl.getdropbox.com/u/35146/js/tests/isNumber.html&quot;&gt;+30 test cases&lt;/a&gt; and cloned the &lt;a href=&quot;http://jsfiddle.net/Xotic750/2q8pp/&quot;&gt;testing on jsfiddle&lt;/a&gt; added my extra test cases and my above described solution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、CMS &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://dl.getdropbox.com/u/35146/js/tests/isNumber.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;+30テストケース&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;取り&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/Xotic750/2q8pp/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、jsfiddleでテスト&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を複製して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、追加のテストケースと上記のソリューションを追加しました。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a1c945ad2b0c052e243c0c75b4dfb47f4ba66f83" translate="yes" xml:space="preserve">
          <source>I think is worth sharing this set of &lt;a href=&quot;http://run.plnkr.co/plunks/93FPpacuIcXqqKMecLdk/&quot;&gt;&lt;strong&gt;+30 unit tests&lt;/strong&gt;&lt;/a&gt; made to numerous function implementations, and also share the one that passes all my tests:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;多数の関数実装に対して&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://run.plnkr.co/plunks/93FPpacuIcXqqKMecLdk/&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;行わ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れた&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;+30ユニットテストの&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;セットを共有する価値があると思います。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、すべてのテストに合格したものも共有します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="062a80202a7eb2d3e92700edbd7f88cbd47e9376" translate="yes" xml:space="preserve">
          <source>I think parseFloat function can do all the work here. The function below passes all the tests on this page including &lt;code&gt;isNumeric(Infinity) == true&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここではparseFloat関数ですべての作業を実行できると思います。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下の関数は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isNumeric(Infinity) == true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を含む、このページのすべてのテストに合格し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="be664c3a339de1375e17536c9e89f0c29d02c4a5" translate="yes" xml:space="preserve">
          <source>I want my isNumeric function to consider only Numbers or Strings</source>
          <target state="translated">isNumeric関数は数字か文字列のみを考慮したい</target>
        </trans-unit>
        <trans-unit id="55983112c6d8ac1c7ae7bd884002c7594d2b08d2" translate="yes" xml:space="preserve">
          <source>I went back and did some research for &lt;em&gt;why&lt;/em&gt; a whitespace string did not have the expected output, and I think I get it now: an empty string is coerced to &lt;code&gt;0&lt;/code&gt; rather than &lt;code&gt;NaN&lt;/code&gt;. Simply trimming the string before the length check will handle this case.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私は戻って、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なぜ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;空白文字列に期待された出力がなかったの&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;かについて&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いくつかの調査を行いました&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、私はそれを今得たと思います：空の文字列は&lt;/font&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;ではなく&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;強制変換されます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;長さチェックの前に文字列をトリミングするだけでこのケースを処理できます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e9cb50c17a35b72c5f14c68aebfac0a719e337e1" translate="yes" xml:space="preserve">
          <source>I'd like to add the following:</source>
          <target state="translated">を追加したいと思います。</target>
        </trans-unit>
        <trans-unit id="57d0751cdc99ec5c0a0ff699d39c0d9a6e126558" translate="yes" xml:space="preserve">
          <source>I'm using simpler solution:</source>
          <target state="translated">私はもっとシンプルな解決策を使っています。</target>
        </trans-unit>
        <trans-unit id="cc16138d2263a410d0749d9c0ef379b390526d8d" translate="yes" xml:space="preserve">
          <source>If I'm not mistaken, this should match any valid JavaScript number value, excluding constants (&lt;code&gt;Infinity&lt;/code&gt;, &lt;code&gt;NaN&lt;/code&gt;) and the sign operators &lt;code&gt;+&lt;/code&gt;/&lt;code&gt;-&lt;/code&gt; (because they are not actually part of the number as far as I concerned, they are separate operators):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私が間違っていない場合、これは定数（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）と符号演算子&lt;/font&gt;&lt;/font&gt; &lt;code&gt;+&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt; &lt;code&gt;-&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を除いて、有効なJavaScript数値と一致するはずです（私が考える&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;限り、これらは実際には数値の一部ではないため、これらは別々の演算子です） ）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bec40aad67ac6762c9ca09469bb49d099c126af1" translate="yes" xml:space="preserve">
          <source>If n is numeric &lt;code&gt;Number(n)&lt;/code&gt; will return the numeric value and &lt;code&gt;toString()&lt;/code&gt; will turn it back to a string. But if n isn't numeric &lt;code&gt;Number(n)&lt;/code&gt; will return &lt;code&gt;NaN&lt;/code&gt; so it won't match the original &lt;code&gt;n&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nが数値の場合、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Number(n)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は数値&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を返し、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はそれを文字列に戻します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、nが数値でない場合、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Number(n)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を返す&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、元の&lt;/font&gt; &lt;code&gt;n&lt;/code&gt; と&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一致しません。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f8469f370fe35cb7f9bbc50b39330c319f851357" translate="yes" xml:space="preserve">
          <source>If you are worried about the creation of the regex each time the function is called then you could rewrite it within a closure, something like this</source>
          <target state="translated">関数が呼ばれるたびに正規表現が生成されるのが気になるのであれば、クロージャ内で以下のように書き換えることができます。</target>
        </trans-unit>
        <trans-unit id="6ddabb58b7b0fed02411e602c2e0a071b3388b93" translate="yes" xml:space="preserve">
          <source>If you can't use &lt;code&gt;isNaN()&lt;/code&gt;, this should work much better:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;isNaN()&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用できない場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、これははるかにうまく機能するはずです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64d36bfba9adc1dce5a0d1244b586d56f47b4f42" translate="yes" xml:space="preserve">
          <source>If you need to validate a special set of decimals y
you can use this simple javascript:</source>
          <target state="translated">特殊な小数 y のセットを検証する必要がある場合は、このシンプルな javascript を使うことができます。</target>
        </trans-unit>
        <trans-unit id="2263e8abea192304ab7ab9f21e7cfa8369938fc2" translate="yes" xml:space="preserve">
          <source>In one line:</source>
          <target state="translated">一行で。</target>
        </trans-unit>
        <trans-unit id="7200a99b32dc32521180d4daad4927595e0d6ef7" translate="yes" xml:space="preserve">
          <source>In summary, &lt;strong&gt;&lt;em&gt;if you want to know if a value can be converted to a number, actually try to convert it to a number.&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要約&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すると、値を数値に変換できるかどうかを知りたい場合は、実際に数値に変換してみてください。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="333d553227cc4a2fa4ac5d7060a1702e8a9da494" translate="yes" xml:space="preserve">
          <source>It appears to work in every situation, but I might be wrong.</source>
          <target state="translated">どのような状況でも機能するように見えるが、私が間違っているかもしれない。</target>
        </trans-unit>
        <trans-unit id="c564071ce559323e59028ed7debc45de1e004e7b" translate="yes" xml:space="preserve">
          <source>It can be done without RegExp as</source>
          <target state="translated">として、RegExpなしでも可能です。</target>
        </trans-unit>
        <trans-unit id="712c202f0d819dd18eff720d2f31bf6fcaf4d2e0" translate="yes" xml:space="preserve">
          <source>It may not replace the widely accepted/used answer but if this is more of what you are expecting as results from your isNumeric function then hopefully this will be of some help.</source>
          <target state="translated">これは、広く受け入れられている使用されている答えを置き換えるものではないかもしれませんが、もしこれが isNumeric 関数の結果として期待されているものに近いものであれば、これが何かの助けになることを願っています。</target>
        </trans-unit>
        <trans-unit id="bfff245cdf71c8a9ca733b06934e0a4372effebc" translate="yes" xml:space="preserve">
          <source>It worked fine.</source>
          <target state="translated">うまくいった。</target>
        </trans-unit>
        <trans-unit id="2e31a3b6d318bb8a5928be4c3a4d35a2627f4572" translate="yes" xml:space="preserve">
          <source>It works with numeric strings as well as plain numbers. Does not work with hexadecimal numbers.</source>
          <target state="translated">これは、数字の文字列だけでなく、普通の数字でも動作します。16進数では動作しません。</target>
        </trans-unit>
        <trans-unit id="3991f196cdabe813270d47bbd78b3b2f0ccf14e7" translate="yes" xml:space="preserve">
          <source>Just note that unlike what you said, &lt;code&gt;0x89f&lt;/code&gt; is a valid number (hexa)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたが言ったこととは異なり、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0x89f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は有効な数値（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;16進&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数）である&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことに注意してください&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e57b90d6585290cec7cb1cf64b65282257f91c4" translate="yes" xml:space="preserve">
          <source>My isComparableNumber is pretty close to another elegant &lt;a href=&quot;https://stackoverflow.com/a/1561597/623735&quot;&gt;answer&lt;/a&gt;, but handles hex and other string representations of numbers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私のisComparableNumberは別のエレガントな&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/1561597/623735&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;回答に&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;かなり近いです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、16進数やその他の数値の文字列表現を処理します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c9a3678478ea6e08b728e2b94f73c6eac6a39cbc" translate="yes" xml:space="preserve">
          <source>My second issue was that Negative Hexadecimal integer literal strings (&quot;-0xA&quot; -&amp;gt; -10) were not being counted as numeric. However, Positive Hexadecimal integer literal strings (&quot;0xA&quot; -&amp;gt; 10) were treated as numeric.
I needed both to be valid numeric.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2番目の問題は、負の16進整数リテラル文字列（ &quot;-0xA&quot;-&amp;gt; -10）が数値としてカウントされないことでした。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、正の16進整数リテラル文字列（ &quot;0xA&quot;-&amp;gt; 10）は数値として扱われました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;両方が有効な数値である必要がありました。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ae682f58f4fcc01d02c3ef26537d5f53dfd8532a" translate="yes" xml:space="preserve">
          <source>My solution,</source>
          <target state="translated">私の解決策。</target>
        </trans-unit>
        <trans-unit id="da2ef974e08928b9a1a59856d2f205e81954db22" translate="yes" xml:space="preserve">
          <source>None of the answers return &lt;code&gt;false&lt;/code&gt; for empty strings, a fix for that...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;空の文字列に対して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、どの回答も&lt;/font&gt;&lt;/font&gt; &lt;code&gt;false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;返しません。その&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ための修正...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="850422ea4c8272cf389573c577a0f83e8d1eb914" translate="yes" xml:space="preserve">
          <source>Nothing very different but we can use Boolean constructor</source>
          <target state="translated">何も変わったことはありませんが、ブール型のコンストラクタを使うことができます。</target>
        </trans-unit>
        <trans-unit id="4d430e56292fd1b21ab721eea81696c543b5a4ff" translate="yes" xml:space="preserve">
          <source>Of course, you could also use &lt;code&gt;Array.isArray&lt;/code&gt;, jquery &lt;code&gt;$.isArray&lt;/code&gt; or prototype &lt;code&gt;Object.isArray&lt;/code&gt; instead of &lt;code&gt;Object.prototype.toString.call(n) !== '[object Array]'&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もちろん、あなたも使用することができ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Array.isArray&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、jqueryの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$.isArray&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;やプロトタイプ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.isArray&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の代わりに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype.toString.call(n) !== '[object Array]'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff271b42728102e6eceaa592ec6d5f8602ea5843" translate="yes" xml:space="preserve">
          <source>Only problem I had with @CMS's &lt;a href=&quot;https://stackoverflow.com/a/1830844/623735&quot;&gt;answer&lt;/a&gt; is the exclusion of &lt;code&gt;NaN&lt;/code&gt; and Infinity, which are useful numbers for many situations. One way to check for &lt;code&gt;NaN&lt;/code&gt;'s is to check for numeric values that don't equal themselves, &lt;code&gt;NaN != NaN&lt;/code&gt;!  So there are really 3 tests you'd like to deal with ...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@CMSの&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/1830844/623735&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;答えで&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私が抱えていた唯一の問題&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;とInfinityの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;除外です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。これらは、多くの状況で役立つ数値です。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をチェックする1つの方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、それ自体と等しくない数値をチェックすることです&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN != NaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、処理したいテストは本当に3つあります...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5752d6736e14ea97bacab8527ecf6ba007d54041" translate="yes" xml:space="preserve">
          <source>Positive hex numbers start with &lt;code&gt;0x&lt;/code&gt; and negative hex numbers start with &lt;code&gt;-0x&lt;/code&gt;.
Positive oct numbers start with &lt;code&gt;0&lt;/code&gt; and negative oct numbers start with &lt;code&gt;-0&lt;/code&gt;.
This one takes most of what has already been mentioned into consideration, but includes hex and octal numbers, negative scientific, Infinity and has removed decimal scientific (&lt;code&gt;4e3.2&lt;/code&gt; is not valid).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正の16進数は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;始まり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、負の16進数は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;-0x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;始まり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正の8進数は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;始まり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、負の8進数は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;-0&lt;/code&gt; で&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;始まり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、すでに言及されていることのほとんどを考慮に入れていますが、16進数と8進数、負の科学、無限大を含み、10進数の科学を削除して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;います&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;4e3.2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は無効です）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="02324d2fc43fdc638dc2c1164c01450c94b3ffd5" translate="yes" xml:space="preserve">
          <source>Running the unit tests against the new code and it only fails on the infinity and boolean literals, and the only time that should be a problem is if you're generating code (really, who would type in a literal and check if it's numeric? You should &lt;em&gt;know&lt;/em&gt;), and that would be some strange code to generate.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ユニットテストを実行すると、新しいコードに対してテストが行​​われ、無限リテラルとブールリテラルでのみ失敗します。問題になるのは、コードを生成している場合のみです（実際、リテラルを入力して数値かどうかを確認するのは誰ですか？あなたは&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;知って&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;おくべきです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）、そしてそれは生成する奇妙なコードになるでしょう。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99b27388b63c7c0aff4d69649ba133a7a5b31859" translate="yes" xml:space="preserve">
          <source>Simple.</source>
          <target state="translated">Simple.</target>
        </trans-unit>
        <trans-unit id="19f4c0ef7c752661e63c4444a634ffc617b09ec6" translate="yes" xml:space="preserve">
          <source>Since jQuery 1.7, you can use &lt;a href=&quot;http://api.jquery.com/jQuery.isNumeric/&quot;&gt;&lt;code&gt;jQuery.isNumeric()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;jQuery 1.7以降、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://api.jquery.com/jQuery.isNumeric/&quot;&gt; &lt;code&gt;jQuery.isNumeric()&lt;/code&gt; を&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9fc8fe8485fba0d57b83521cea373769f4964394" translate="yes" xml:space="preserve">
          <source>Some time ago I had to implement an &lt;code&gt;IsNumeric&lt;/code&gt; function, to find out if a variable contained a numeric value, &lt;strong&gt;regardless of its type&lt;/strong&gt;, it could be a &lt;code&gt;String&lt;/code&gt; containing a numeric value (I had to consider also exponential notation, etc.), a &lt;code&gt;Number&lt;/code&gt; object, virtually anything could be passed to that function, I couldn't make any type assumptions,  taking care of type coercion (eg. &lt;code&gt;+true == 1;&lt;/code&gt; but &lt;code&gt;true&lt;/code&gt; shouldn't be considered as &lt;code&gt;&quot;numeric&quot;&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しばらく前に、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;IsNumeric&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を実装&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しなければなりません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;でし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;た。変数に数値が含まれているかどうかを確認するに&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、その型&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関係なく&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、数値を含む&lt;/font&gt;&lt;/font&gt; &lt;code&gt;String&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;である可能性があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます（指数表記なども考慮する必要がありました）。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Number&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト、事実上すべてがその関数に渡される可能性があり、型強制を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;考慮して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;型の仮定を行うことができませんでした（例：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;+true == 1;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;numeric&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;とは見なされません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="54f5fa3fb3c8c61b5e91ef26cf2087556fc2660d" translate="yes" xml:space="preserve">
          <source>Test cases:</source>
          <target state="translated">テストケース。</target>
        </trans-unit>
        <trans-unit id="a70ce38389e318bd2be18a0111c6dc76bd2cd9ed" translate="yes" xml:space="preserve">
          <source>TestCase</source>
          <target state="translated">TestCase</target>
        </trans-unit>
        <trans-unit id="4033570531fe3eb2ad39b4792f1edaf65b9cfb3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;(input - 0)&lt;/code&gt; expression forces JavaScript to do type coercion on your input value; it must first be interpreted as a number for the subtraction operation.  If that conversion to a number fails, the expression will result in &lt;code&gt;NaN&lt;/code&gt;.  This &lt;em&gt;numeric&lt;/em&gt; result is then compared to the original value you passed in.  Since the left hand side is now numeric, type coercion is again used.  Now that the input from both sides was coerced to the same type from the same original value, you would think they should always be the same (always true). However, there's a special rule that says &lt;code&gt;NaN&lt;/code&gt; is never equal to &lt;code&gt;NaN&lt;/code&gt;, and so a value that can't be converted to a number (and only values that cannot be converted to numbers) will result in false.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;(input - 0)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;式は、あなたの入力値に型強制を行うにはJavaScriptを強制します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初に、減算演算の数値として解釈する必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数値への変換が失敗した場合、式は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN&lt;/code&gt; になり&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数値&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;結果は、渡された元の値と比較されます。左側が数値になっているため、型強制が再び使用されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これで、両側からの入力が同じ元の値から同じ型に強制変換されたので、それらは常に同じである（常に真）はずです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt; &lt;code&gt;NaN&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;等しくなることはない&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;という特別なルールがあります。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、したがって、数値に変換できない値（および数値に変換できない値のみ）はfalseになります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e60f6f12c9f87a62739d82deda0a2c662b871d0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isDecimal&lt;/code&gt; passes the following test:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;isDecimal&lt;/code&gt; は、&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次のテストを渡します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9ec20b880ddee1182592996089aa87ebd81af6bc" translate="yes" xml:space="preserve">
          <source>The Javascript:</source>
          <target state="translated">ジャバスクリプト。</target>
        </trans-unit>
        <trans-unit id="d608c5907ccc1d0e078ea380e02b18d40ad5621a" translate="yes" xml:space="preserve">
          <source>The accepted answer failed your test #7 and I guess it's because you changed your mind. So this is a response to the accepted answer, with which I had issues.</source>
          <target state="translated">受かった解答は、あなたのテスト#7に不合格となり、気が変わったからでしょう。ということで、これは私が問題にした合格答案への回答です。</target>
        </trans-unit>
        <trans-unit id="402beb315116495be6a1cf101f8a1c1b59c38ccd" translate="yes" xml:space="preserve">
          <source>The check on the length is for a special case involving empty strings. Also note that it falls down on your 0x89f test, but that's because in many environments that's an okay way to define a number literal.  If you want to catch that specific scenario you could add an additional check.  Even better, if that's your reason for not using &lt;code&gt;isNaN()&lt;/code&gt; then just wrap your own function around &lt;code&gt;isNaN()&lt;/code&gt; that can also do the additional check.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;長さのチェックは、空の文字列が関係する特別な場合のためのものです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、0x89fテストで落ちるが、それは多くの環境で数値リテラルを定義するのに適切な方法であるためです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その特定のシナリオをキャッチしたい場合は、追加のチェックを追加できます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さらに良いことに、それが&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isNaN()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用しない理由である場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、追加のチェックも実行できる&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isNaN()&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;独自の関数をラップするだけ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7aae1c091e2ae39dbd22df26e49467ee923a35ce" translate="yes" xml:space="preserve">
          <source>The downside of jQuery's version is that if you pass a string with leading numerics and trailing letters like &lt;code&gt;&quot;123abc&quot;&lt;/code&gt; the &lt;code&gt;parseFloat | parseInt&lt;/code&gt; will extract the numeric fraction out and return 123, BUT, the second guard &lt;code&gt;isFinite&lt;/code&gt; will fail it anyway.
With the unary &lt;code&gt;+&lt;/code&gt; operator it will die on the very first guard since + throws NaN for such hybrids :)
A little performance yet I think a solid semantic gain.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;jQueryのバージョンの欠点は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;123abc&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ように先行数値と後続文字を含む文字列を渡すと&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;parseFloat | parseInt&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は数値部分を抽出して123を返し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、2番目のガード&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isFinite&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はとにかく失敗します。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;+&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;単項演算&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;子を使用すると、+はそのようなハイブリッドに対してNaNをスローするため、最初のガードで終了します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="47ae4d295d5daa46cab0ae7212b476b50d7d8908" translate="yes" xml:space="preserve">
          <source>The idea here is that every number or integer has one &quot;canonical&quot; string representation, and every non-canonical representation should be rejected. So we cast to a number and back, and see if the result is the original string.</source>
          <target state="translated">ここでの考え方は、すべての数値や整数には1つの「正統的な」文字列表現があり、正統的でない表現はすべて拒否されるべきだということです。そこで、数値にキャストして戻ってきて、その結果が元の文字列であるかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="de5ff378ffbd286b7b2e7705b6efc417ff2993b5" translate="yes" xml:space="preserve">
          <source>The solution covers:</source>
          <target state="translated">ソリューションがカバーしています。</target>
        </trans-unit>
        <trans-unit id="67455d66e270c68c864be87e02187bd49b46b74c" translate="yes" xml:space="preserve">
          <source>This field accept value between 5 and 10 only</source>
          <target state="translated">このフィールドは5から10の間の値のみを受け入れます。</target>
        </trans-unit>
        <trans-unit id="44341b495717e14c392a965197aa3e722063e1a6" translate="yes" xml:space="preserve">
          <source>This is part of the language since
&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-number.isfinite&quot;&gt;ES2015&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは&lt;/font&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-number.isfinite&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES2015&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以降の言語の一部です &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b65f763f4d712f97c6dd6e93aee0243859234804" translate="yes" xml:space="preserve">
          <source>This is relevant e.g. for numbers as object property names.</source>
          <target state="translated">これは、例えばオブジェクトのプロパティ名としての数値に関連しています。</target>
        </trans-unit>
        <trans-unit id="b5714f9a5c65746441d7d382c1eb02d3731cd2f7" translate="yes" xml:space="preserve">
          <source>This should work. Some of the functions provided here are flawed, also should be faster than any other function here.</source>
          <target state="translated">これは動作するはずです。ここで提供される関数のいくつかは欠陥があり、また、ここでは他のどの関数よりも高速でなければなりません。</target>
        </trans-unit>
        <trans-unit id="81ae9263acccfa98f249641778eeed8334d1024b" translate="yes" xml:space="preserve">
          <source>This way is easier and faster! All tests are checked!</source>
          <target state="translated">この方法が簡単で早い! すべてのテストをチェックします!</target>
        </trans-unit>
        <trans-unit id="7291adbcaf9c97e74a5e38077ccc6100a12cd8c7" translate="yes" xml:space="preserve">
          <source>This way seems to work well:</source>
          <target state="translated">この方法はうまくいきそうです。</target>
        </trans-unit>
        <trans-unit id="d8e707f5bebee6e958040f7d81d67cdf95bbac30" translate="yes" xml:space="preserve">
          <source>This works for 0x23 type numbers as well.</source>
          <target state="translated">これは、0x23型の番号に対しても同様に動作します。</target>
        </trans-unit>
        <trans-unit id="7da1d54df023dff2b0a3282521d27c02e0f46146" translate="yes" xml:space="preserve">
          <source>To alleviate this problem, I added a check to discount arrays from the logic</source>
          <target state="translated">この問題を軽減するために、ロジックから配列をディスカウントするチェックを追加しました。</target>
        </trans-unit>
        <trans-unit id="c60941249b49a05c0eee83bc0f102c021df402ab" translate="yes" xml:space="preserve">
          <source>To check if a variable contains a valid number and not
just a String which looks like a number,
&lt;code&gt;Number.isFinite(value)&lt;/code&gt; can be used.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数に数値のように見える文字列だけでなく有効な数値が含まれているかどうかを確認するには、 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Number.isFinite(value)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b04619a3e04d3ab36ad35fce95a6b6e92e3ee5c" translate="yes" xml:space="preserve">
          <source>To me, this is the best way:</source>
          <target state="translated">私にとっては、これが一番いい方法です。</target>
        </trans-unit>
        <trans-unit id="01da0ffb357bf62ebce0bf87043a8cc179a49e0e" translate="yes" xml:space="preserve">
          <source>Use the function &lt;code&gt;isNaN&lt;/code&gt;. I believe if you test for &lt;code&gt;!isNaN(yourstringhere)&lt;/code&gt; it works fine for any of these situations.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isNaN&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;!isNaN(yourstringhere)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をテスト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すると、これらの状況のいずれでも問題なく機能すると&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;思います&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="afe24c4d208f9119178e480f28d93e21931b32fe" translate="yes" xml:space="preserve">
          <source>Validate decimal numbers in JavaScript - IsNumeric()</source>
          <target state="translated">JavaScript で 10 進数を検証する-IsNumeric()</target>
        </trans-unit>
        <trans-unit id="73d0175b3bfb997fffaa4bf891f7c07f87cda7f1" translate="yes" xml:space="preserve">
          <source>Warning: use at your own risk, no guarantees.</source>
          <target state="translated">警告:自己責任で使用し、保証はありません。</target>
        </trans-unit>
        <trans-unit id="c08d257d4d258cf6aa1c44af97ac4301c6c3b3a5" translate="yes" xml:space="preserve">
          <source>What's the cleanest, most effective way to validate decimal numbers in JavaScript?</source>
          <target state="translated">JavaScriptで10進数を検証する最もクリーンで効果的な方法は?</target>
        </trans-unit>
        <trans-unit id="03f26872aba4a6f83b3ecdfb46d543ae10ae3fe7" translate="yes" xml:space="preserve">
          <source>Whether these functions are useful for you depends on the use case. One feature is that &lt;em&gt;distinct strings represent distinct numbers&lt;/em&gt; (if both pass the &lt;code&gt;isNumber()&lt;/code&gt; test).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらの機能が役立つかどうかは、ユースケースによって異なります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1つの特徴は、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;別個の文字列が別個の数値を表すことです&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（両方が&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isNumber()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テストに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;合格した場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a397a62f6c4bba0d307c9b0bd005d8b8d00f9ca5" translate="yes" xml:space="preserve">
          <source>With this in mind, it would be better to use</source>
          <target state="translated">このことを考えると</target>
        </trans-unit>
        <trans-unit id="b9f79764de8c774b9884615009abb60cd722876d" translate="yes" xml:space="preserve">
          <source>Yeah, the built-in &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/isNaN&quot;&gt;&lt;code&gt;isNaN(object)&lt;/code&gt;&lt;/a&gt; will be much faster than any regex parsing, because it's built-in and compiled, instead of interpreted on the fly.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そうです、組み込みの&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/isNaN&quot;&gt; &lt;code&gt;isNaN(object)&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、組み込みでコンパイルされるので、オンザフライで解釈されるのではなく、正規表現の解析よりもはるかに高速です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6330b5fa1e542e9e0d197dbcf5e7608c804c1271" translate="yes" xml:space="preserve">
          <source>didn't work for me. When I put in an alert and tested, &lt;code&gt;input.length&lt;/code&gt; was &lt;code&gt;undefined&lt;/code&gt;. I think there is no property to check integer length. So what I did was</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;うまくいきませんでした。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;警告を入れてテストしたところ、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;input.length&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;でした。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;整数の長さをチェックするプロパティはないと思います。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;だから私がしたことは&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e784e7e624c7540a8490ec2a54507a52ec826fa6" translate="yes" xml:space="preserve">
          <source>it should be noted that it assumes that '.42' is NOT a number, and '4.' is NOT a number, so this should be taken into account.</source>
          <target state="translated">これは '.42' が数字ではなく、'4.は数字ではないと仮定していることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e7b18c0494c690e1c6ececb399a23d918bea094a" translate="yes" xml:space="preserve">
          <source>jQuery, and some other javascript libraries already include such a function, usually called &lt;code&gt;isNumeric&lt;/code&gt;. There is also a &lt;a href=&quot;https://stackoverflow.com/a/1830844/592253&quot;&gt;post on stackoverflow&lt;/a&gt; that has been widely accepted as the answer, the same general routine that the afore mentioned libraries are using.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;jQueryおよび他の一部のJavaScriptライブラリには、通常&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isNumeric&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼ばれるこのような関数がすでに含まれてい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;前述のライブラリが使用しているのと同じ一般的なルーチンである、回答として広く受け入れられている&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/1830844/592253&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;stackoverflowに関する投稿&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もあり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
