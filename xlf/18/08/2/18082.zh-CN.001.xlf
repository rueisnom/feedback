<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/18082">
    <body>
      <group id="18082">
        <trans-unit id="a534bc787c3f3ae5fa2067e98e6ea0a01ce04934" translate="yes" xml:space="preserve">
          <source>1) number</source>
          <target state="translated">1)数量</target>
        </trans-unit>
        <trans-unit id="f42e9559bdd5484ddfe34c46aacc53d8669acbd8" translate="yes" xml:space="preserve">
          <source>2) digit</source>
          <target state="translated">2)位数</target>
        </trans-unit>
        <trans-unit id="09e873e9a0244ee5280c603ee3889c5236d48bcd" translate="yes" xml:space="preserve">
          <source>3) min and max</source>
          <target state="translated">3)最小和最大</target>
        </trans-unit>
        <trans-unit id="7c786d62c3dd0de26e1ab54a0345fa440b0bbdad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/Yahoo!_UI_Library&quot;&gt;Yahoo! UI&lt;/a&gt; uses this:</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Yahoo!_UI_Library&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;雅虎！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;UI&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用此：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4bc38746ad0ff1f3d2f760166538544eccdce9e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://api.jquery.com/jQuery.isNumeric/&quot;&gt;https://api.jquery.com/jQuery.isNumeric/&lt;/a&gt; (as of jQuery 1.7)</source>
          <target state="translated">&lt;a href=&quot;https://api.jquery.com/jQuery.isNumeric/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://api.jquery.com/jQuery.isNumeric/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（自jQuery 1.7起）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5bf380bc124eaf602f577b1e285131652ede6fd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/questions/18082/validate-numbers-in-javascript-isnumeric/174921#174921&quot;&gt;@Joel's answer&lt;/a&gt; is pretty close, but it will fail in the following cases:</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/18082/validate-numbers-in-javascript-isnumeric/174921#174921&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Joel的答案&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非常接近，但在以下情况下将失败：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fb69bbcc3eec75aa8873d6d4d5ce3c2b6b352a79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self.number = ko.observable(numberValue)&lt;/code&gt;&lt;strong&gt;.extend({ digit: true})&lt;/strong&gt;;</source>
          <target state="translated">&lt;code&gt;self.number = ko.observable(numberValue)&lt;/code&gt; &lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.extend（{digit：true}）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a065243661b1c2759661ed5f35228c12b362248" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self.number = ko.observable(numberValue)&lt;/code&gt;&lt;strong&gt;.extend({ min: 5}).extend({ max: 10})&lt;/strong&gt;;</source>
          <target state="translated">&lt;code&gt;self.number = ko.observable(numberValue)&lt;/code&gt; &lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.extend（{min：5}）。extend（{max：10}）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f76fbbb7d7842e025a1178102e5332e89bbd0a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self.number = ko.observable(numberValue)&lt;/code&gt;&lt;strong&gt;.extend({ number: true})&lt;/strong&gt;;</source>
          <target state="translated">&lt;code&gt;self.number = ko.observable(numberValue)&lt;/code&gt; &lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.extend（{number：true}）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee9c92569767e3c96657a8d5407c5dc6339ed413" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT:&lt;/strong&gt; As pointed out by &lt;a href=&quot;https://stackoverflow.com/a/15230431/592253&quot;&gt;Bergi&lt;/a&gt;, there are other possible objects that could be considered numeric and it would be better to whitelist than blacklist. With this in mind I would add to the criteria.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;编辑：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正如&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/15230431/592253&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bergi&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所指出的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，还有其他可能的对象可以被认为是数字对象，将其列入黑名单比将其列入黑名单会更好。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;考虑到这一点，我将增加标准。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="61479b12043c26ae40fe0882c667ccfc4eae0d0c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Invalid numbers would be&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;无效的数字将是&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="de72cc80af4464eb303fb55c3f0fc08fbb0174c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;P.S.&lt;/strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isNaN&quot;&gt;isNaN&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isFinite&quot;&gt;isFinite&lt;/a&gt; have a confusing behavior due to forced conversion to number. In ES6, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN&quot;&gt;Number.isNaN&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite&quot;&gt;Number.isFinite&lt;/a&gt; would fix these issues. Keep that in mind when using them.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于强制转换为数字，因此&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PS &lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isNaN&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;isNaN&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isFinite&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;isFinite&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的行为令人困惑。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在ES6中，&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Number.isNaN&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Number.isFinite&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将解决这些问题。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用它们时请记住这一点。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="45490ef14e4f21eb08b74a7e1f5b26da982b17ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Test the solutions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;测试解决方案&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bf7f2f00047743847f43350edd7b9bdf13a83e97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt; :
&lt;a href=&quot;https://github.com/angular/angular/blob/4.3.x/packages/common/src/pipes/number_pipe.ts#L172&quot;&gt;Angular 4.3&lt;/a&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更新&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;： &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/angular/angular/blob/4.3.x/packages/common/src/pipes/number_pipe.ts#L172&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Angular 4.3&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e8b5a77516c2f97d63e9c261dddc6bfcef5725f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt; : 
&lt;a href=&quot;https://github.com/jquery/jquery/blob/2.2-stable/src/core.js#L215&quot;&gt;Here's how jQuery does it now (2.2-stable)&lt;/a&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更新&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;： &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/jquery/jquery/blob/2.2-stable/src/core.js#L215&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是jQuery现在的方式（2.2稳定）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a48482daa1418a6bc211d0490d1c324bcf97a6c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Valid numbers would include:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有效数字包括：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="190abad07458eea64859de62eff9b06c0effd9b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;knockoutJs Inbuild library validation functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;KnockoutJs Inbuild库验证功能&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d87457fab4b815e454ebab1c44ec69cea41d7e11" translate="yes" xml:space="preserve">
          <source>A couple of tests to add:</source>
          <target state="translated">有几个测试要补充。</target>
        </trans-unit>
        <trans-unit id="ae7b5d093eeb68d66f91793a426319d47d3d475a" translate="yes" xml:space="preserve">
          <source>A period that is followed by 1 or more numbers</source>
          <target state="translated">以1个或多个数字为后缀的时期</target>
        </trans-unit>
        <trans-unit id="f9041248de975321f47798953351f5b2c2c27f42" translate="yes" xml:space="preserve">
          <source>A single zero, or one or more digits not starting with 0, or nothing so long as a period follows</source>
          <target state="translated">一个零,或一个或多个不是以0开头的数字,或只要后面有句号,就什么都没有。</target>
        </trans-unit>
        <trans-unit id="7003cd3614ff99516cf6c40ed95c501ad9bfa940" translate="yes" xml:space="preserve">
          <source>Although the results are somewhat different to what you're looking for (&lt;a href=&quot;http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_isnan&quot;&gt;try it&lt;/a&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;尽管结果与您要查找的内容有所不同（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_isnan&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;尝试&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67e797b9c9bfa1b03295cccb60b6d2b7aee7d390" translate="yes" xml:space="preserve">
          <source>An integer value can be verified by:</source>
          <target state="translated">一个整数值可以通过以下方式验证:</target>
        </trans-unit>
        <trans-unit id="74b62771466f49cf8ba9cab325bac4e800ff60af" translate="yes" xml:space="preserve">
          <source>An optional negative sign at the beginning</source>
          <target state="translated">开头的可选的负号</target>
        </trans-unit>
        <trans-unit id="3cd0680928fb5803699577d4e9b8285509fcd324" translate="yes" xml:space="preserve">
          <source>And to test it:</source>
          <target state="translated">而为了测试它。</target>
        </trans-unit>
        <trans-unit id="70cd32e576a430797f6718e8cb7bf8ad3d74f345" translate="yes" xml:space="preserve">
          <source>Arrrgh!  Don't listen to the regular expression answers.  RegEx is icky for this, and I'm not talking just performance.  It's so easy to make subtle, impossible to spot mistakes with your regular expression.</source>
          <target state="translated">啊啊啊!不要听信正则表达式的回答。RegEx很容易出错,我说的不仅仅是性能问题。它很容易让你的正则表达式出现微妙的、无法发现的错误。</target>
        </trans-unit>
        <trans-unit id="cd6274a24f10d9eedd162c57f2108e902cbcd1c3" translate="yes" xml:space="preserve">
          <source>Bonus points for:</source>
          <target state="translated">奖励积分为:</target>
        </trans-unit>
        <trans-unit id="4dd5806ec124e76bc035017f6343d16dbcababb3" translate="yes" xml:space="preserve">
          <source>But, again, &lt;strong&gt;the only reason ever to use this is if for some reason you have to avoid isNaN().&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，再次&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用此方法的唯一原因是，由于某种原因必须避免使用isNaN（）。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="08692c4d768ee9bcf4e0e72a244cc1961d1bbe37" translate="yes" xml:space="preserve">
          <source>By extending it the field get validated</source>
          <target state="translated">通过扩展它,字段得到验证</target>
        </trans-unit>
        <trans-unit id="11635b65d08cb6ad2397ee766a17dd7299d12766" translate="yes" xml:space="preserve">
          <source>Clarity. Solution should be clean and simple.</source>
          <target state="translated">1、明确性。方案要简洁明了。</target>
        </trans-unit>
        <trans-unit id="7ae3e9f0d87df2494fbaad9e4ff4e218748bf577" translate="yes" xml:space="preserve">
          <source>Create a copy of itself, then converts the number into float, then compares itself with the original number, if it is still a number, (whether integer or float) , and matches the original number, that means, it is indeed a number.</source>
          <target state="translated">创建一个自己的副本,然后将这个数转换成浮点数,然后将自己与原始数进行比较,如果还是一个数,(不管是整数还是浮点数),并且与原始数相匹配,那就说明,它确实是一个数。</target>
        </trans-unit>
        <trans-unit id="520164c4c72c1289f7ce8328d581ac093dc29d31" translate="yes" xml:space="preserve">
          <source>Cross-platform.</source>
          <target state="translated">Cross-platform.</target>
        </trans-unit>
        <trans-unit id="f7c9067bf3f34ef376a5dd4334de35a084aadd7e" translate="yes" xml:space="preserve">
          <source>During some projects I have needed to validate some data and be as certain as possible that it is a javascript numerical value that can be used in mathematical operations.</source>
          <target state="translated">在一些项目中,我需要验证一些数据,并尽可能确定它是一个可以用于数学运算的javascript数值。</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">扩展片段</target>
        </trans-unit>
        <trans-unit id="a3608ef2d4fdb6f1ba5354a14fb5732f73bb1780" translate="yes" xml:space="preserve">
          <source>Explained:</source>
          <target state="translated">Explained:</target>
        </trans-unit>
        <trans-unit id="ef12ad55decf04d602c3e259e1aeb5f233c8f473" translate="yes" xml:space="preserve">
          <source>First, the code above would return true if the argument was an array of length 1, and that single element was of a type deemed as numeric by the above logic. In my opinion, if it's an array then its not numeric.</source>
          <target state="translated">首先,如果参数是一个长度为1的数组,并且这个单元素的类型被上面的逻辑认为是数值型的,那么上面的代码会返回true。在我看来,如果它是一个数组,那么它就不是数值型的。</target>
        </trans-unit>
        <trans-unit id="b3c49a616fc36313e1bb223da6613dd488f0e9fe" translate="yes" xml:space="preserve">
          <source>Here's a lil bit improved version (probably the fastest way out there) that I use instead of exact jQuery's variant, I really don't know why don't they use this one:</source>
          <target state="translated">这里有一个略微改进的版本(可能是最快的方法),我用它代替了jQuery的变体,我真的不知道他们为什么不用这个。</target>
        </trans-unit>
        <trans-unit id="dcae16de665cdab304c88fb675786b95de0fc2e3" translate="yes" xml:space="preserve">
          <source>Here's how it works:</source>
          <target state="translated">以下是它的工作原理。</target>
        </trans-unit>
        <trans-unit id="0227bbfca24a6bdebe3c7dd5cbe21c171f6c2209" translate="yes" xml:space="preserve">
          <source>I borrowed that regex from &lt;a href=&quot;http://www.codetoad.com/javascript/isnumeric.asp&quot;&gt;http://www.codetoad.com/javascript/isnumeric.asp&lt;/a&gt;. Explanation:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我从&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.codetoad.com/javascript/isnumeric.asp&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://www.codetoad.com/javascript/isnumeric.asp&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;借用了该正则表达式&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;说明：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c72eee3422fa54f25e504dd285e3bc3ad920e010" translate="yes" xml:space="preserve">
          <source>I came up with this:</source>
          <target state="translated">我想出了这个办法。</target>
        </trans-unit>
        <trans-unit id="29dbe7c18345c60fb64ae9c19402f06683dd6a5c" translate="yes" xml:space="preserve">
          <source>I needed this for a tokenizer, where sending the number to JavaScript for evaluation wasn't an option... It's definitely not the shortest possible regular expression, but I believe it catches all the finer subtleties of JavaScript's number syntax.</source>
          <target state="translated">我需要它来做一个tokenizer,在这里,将数字发送到JavaScript中进行评估并不是一个选项......这绝对不是最短的正则表达式,但我相信它抓住了JavaScript的数字语法的所有细微之处。</target>
        </trans-unit>
        <trans-unit id="f582520e4fb437022841d45fd4213af3259e2cc8" translate="yes" xml:space="preserve">
          <source>I realize the original question did not mention jQuery, but if you do use jQuery, you can do:</source>
          <target state="translated">我知道原来的问题没有提到jQuery,但如果你确实使用了jQuery,也可以。</target>
        </trans-unit>
        <trans-unit id="fc9f614646399fbd2e4f792530c74e9e835e728e" translate="yes" xml:space="preserve">
          <source>I realize this has been answered many times, but the following is a decent candidate which can be useful in some scenarios.</source>
          <target state="translated">我知道这个问题已经回答过很多次了,但以下是一个不错的选择,在某些情况下可能会派上用场。</target>
        </trans-unit>
        <trans-unit id="d939a66eaa57554209d0635d8d8ad8d197b44be1" translate="yes" xml:space="preserve">
          <source>I then modified the logic to take this into account.</source>
          <target state="translated">然后我就把这一点考虑进去,修改了一下逻辑。</target>
        </trans-unit>
        <trans-unit id="410079dc841a7c05a4df44a7c0cdf48980317710" translate="yes" xml:space="preserve">
          <source>I then took CMSs &lt;a href=&quot;http://dl.getdropbox.com/u/35146/js/tests/isNumber.html&quot;&gt;+30 test cases&lt;/a&gt; and cloned the &lt;a href=&quot;http://jsfiddle.net/Xotic750/2q8pp/&quot;&gt;testing on jsfiddle&lt;/a&gt; added my extra test cases and my above described solution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;然后，我接受了CMS &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://dl.getdropbox.com/u/35146/js/tests/isNumber.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;+ 30个测试用例，&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/Xotic750/2q8pp/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在jsfiddle上&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;克隆了&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;测试，并&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;添加了额外的测试用例和上述解决方案。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a1c945ad2b0c052e243c0c75b4dfb47f4ba66f83" translate="yes" xml:space="preserve">
          <source>I think is worth sharing this set of &lt;a href=&quot;http://run.plnkr.co/plunks/93FPpacuIcXqqKMecLdk/&quot;&gt;&lt;strong&gt;+30 unit tests&lt;/strong&gt;&lt;/a&gt; made to numerous function implementations, and also share the one that passes all my tests:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我认为值得分享&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对众多功能实现进行的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这套&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://run.plnkr.co/plunks/93FPpacuIcXqqKMecLdk/&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;+30单元测试&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，还应该分享通过我所有测试的测试：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="062a80202a7eb2d3e92700edbd7f88cbd47e9376" translate="yes" xml:space="preserve">
          <source>I think parseFloat function can do all the work here. The function below passes all the tests on this page including &lt;code&gt;isNumeric(Infinity) == true&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我认为parseFloat函数可以在这里完成所有工作。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;下面的函数通过了此页面上的所有测试，包括&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isNumeric(Infinity) == true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="be664c3a339de1375e17536c9e89f0c29d02c4a5" translate="yes" xml:space="preserve">
          <source>I want my isNumeric function to consider only Numbers or Strings</source>
          <target state="translated">我想让我的 isNumeric 函数只考虑 Numbers 或 Strings。</target>
        </trans-unit>
        <trans-unit id="55983112c6d8ac1c7ae7bd884002c7594d2b08d2" translate="yes" xml:space="preserve">
          <source>I went back and did some research for &lt;em&gt;why&lt;/em&gt; a whitespace string did not have the expected output, and I think I get it now: an empty string is coerced to &lt;code&gt;0&lt;/code&gt; rather than &lt;code&gt;NaN&lt;/code&gt;. Simply trimming the string before the length check will handle this case.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我回过头&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;去做&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;了一些研究，研究&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为什么&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;空白字符串没有预期的输出，我现在就明白了：一个空字符串被强制为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而不是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;只需在长度检查之前修剪字符串即可解决这种情况。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e9cb50c17a35b72c5f14c68aebfac0a719e337e1" translate="yes" xml:space="preserve">
          <source>I'd like to add the following:</source>
          <target state="translated">我想补充以下几点:</target>
        </trans-unit>
        <trans-unit id="57d0751cdc99ec5c0a0ff699d39c0d9a6e126558" translate="yes" xml:space="preserve">
          <source>I'm using simpler solution:</source>
          <target state="translated">我用的是比较简单的方案。</target>
        </trans-unit>
        <trans-unit id="cc16138d2263a410d0749d9c0ef379b390526d8d" translate="yes" xml:space="preserve">
          <source>If I'm not mistaken, this should match any valid JavaScript number value, excluding constants (&lt;code&gt;Infinity&lt;/code&gt;, &lt;code&gt;NaN&lt;/code&gt;) and the sign operators &lt;code&gt;+&lt;/code&gt;/&lt;code&gt;-&lt;/code&gt; (because they are not actually part of the number as far as I concerned, they are separate operators):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果我没有记错，这应该匹配任何有效的JavaScript数值，但不包括常数（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）和符号运营商&lt;/font&gt;&lt;/font&gt; &lt;code&gt;+&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt; &lt;code&gt;-&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因为它们是就我而言数量没有实际的一部分，它们是独立的运营商）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bec40aad67ac6762c9ca09469bb49d099c126af1" translate="yes" xml:space="preserve">
          <source>If n is numeric &lt;code&gt;Number(n)&lt;/code&gt; will return the numeric value and &lt;code&gt;toString()&lt;/code&gt; will turn it back to a string. But if n isn't numeric &lt;code&gt;Number(n)&lt;/code&gt; will return &lt;code&gt;NaN&lt;/code&gt; so it won't match the original &lt;code&gt;n&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果n为数字，则&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Number(n)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将返回数字值，而&lt;/font&gt;&lt;/font&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将其返回为字符串。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，如果n不是数字，则&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Number(n)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将返回&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此它将与原始&lt;/font&gt; &lt;code&gt;n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;不匹配&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f8469f370fe35cb7f9bbc50b39330c319f851357" translate="yes" xml:space="preserve">
          <source>If you are worried about the creation of the regex each time the function is called then you could rewrite it within a closure, something like this</source>
          <target state="translated">如果你担心每次调用函数的时候都要创建regex,那么你可以在一个闭包中重写它,类似于这样的东西</target>
        </trans-unit>
        <trans-unit id="6ddabb58b7b0fed02411e602c2e0a071b3388b93" translate="yes" xml:space="preserve">
          <source>If you can't use &lt;code&gt;isNaN()&lt;/code&gt;, this should work much better:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您不能使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isNaN()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，这应该会更好：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64d36bfba9adc1dce5a0d1244b586d56f47b4f42" translate="yes" xml:space="preserve">
          <source>If you need to validate a special set of decimals y
you can use this simple javascript:</source>
          <target state="translated">如果你需要验证一组特殊的小数y,你可以使用这个简单的javascript进行验证。</target>
        </trans-unit>
        <trans-unit id="2263e8abea192304ab7ab9f21e7cfa8369938fc2" translate="yes" xml:space="preserve">
          <source>In one line:</source>
          <target state="translated">用一句话来说。</target>
        </trans-unit>
        <trans-unit id="7200a99b32dc32521180d4daad4927595e0d6ef7" translate="yes" xml:space="preserve">
          <source>In summary, &lt;strong&gt;&lt;em&gt;if you want to know if a value can be converted to a number, actually try to convert it to a number.&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;总之，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您想知道一个值是否可以转换为数字，请实际尝试将其转换为数字。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="333d553227cc4a2fa4ac5d7060a1702e8a9da494" translate="yes" xml:space="preserve">
          <source>It appears to work in every situation, but I might be wrong.</source>
          <target state="translated">它似乎在任何情况下都能发挥作用,但我可能错了。</target>
        </trans-unit>
        <trans-unit id="c564071ce559323e59028ed7debc45de1e004e7b" translate="yes" xml:space="preserve">
          <source>It can be done without RegExp as</source>
          <target state="translated">它可以在不使用正则的情况下进行,因为</target>
        </trans-unit>
        <trans-unit id="712c202f0d819dd18eff720d2f31bf6fcaf4d2e0" translate="yes" xml:space="preserve">
          <source>It may not replace the widely accepted/used answer but if this is more of what you are expecting as results from your isNumeric function then hopefully this will be of some help.</source>
          <target state="translated">它可能无法取代被广泛接受的答案,但如果这是你所期望的 isNumeric 函数的结果,那么希望这将会对你有所帮助。</target>
        </trans-unit>
        <trans-unit id="bfff245cdf71c8a9ca733b06934e0a4372effebc" translate="yes" xml:space="preserve">
          <source>It worked fine.</source>
          <target state="translated">它的效果很好。</target>
        </trans-unit>
        <trans-unit id="2e31a3b6d318bb8a5928be4c3a4d35a2627f4572" translate="yes" xml:space="preserve">
          <source>It works with numeric strings as well as plain numbers. Does not work with hexadecimal numbers.</source>
          <target state="translated">它可以使用数字字符串和纯数字。不适用于十六进制数字。</target>
        </trans-unit>
        <trans-unit id="3991f196cdabe813270d47bbd78b3b2f0ccf14e7" translate="yes" xml:space="preserve">
          <source>Just note that unlike what you said, &lt;code&gt;0x89f&lt;/code&gt; is a valid number (hexa)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请注意，与您所说的不同，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0x89f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是有效数字（六）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e57b90d6585290cec7cb1cf64b65282257f91c4" translate="yes" xml:space="preserve">
          <source>My isComparableNumber is pretty close to another elegant &lt;a href=&quot;https://stackoverflow.com/a/1561597/623735&quot;&gt;answer&lt;/a&gt;, but handles hex and other string representations of numbers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我的isComparableNumber非常接近另一个优雅的&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/1561597/623735&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;答案&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但是可以处理十六进制和其他数字的字符串表示形式。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c9a3678478ea6e08b728e2b94f73c6eac6a39cbc" translate="yes" xml:space="preserve">
          <source>My second issue was that Negative Hexadecimal integer literal strings (&quot;-0xA&quot; -&amp;gt; -10) were not being counted as numeric. However, Positive Hexadecimal integer literal strings (&quot;0xA&quot; -&amp;gt; 10) were treated as numeric.
I needed both to be valid numeric.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我的第二个问题是负十六进制整数文字字符串（&amp;ldquo; -0xA&amp;rdquo;-&amp;gt; -10）未被计为数字。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，正十六进制整数文字字符串（&amp;ldquo; 0xA&amp;rdquo;-&amp;gt; 10）被视为数字。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我都需要同时输入有效的数字。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ae682f58f4fcc01d02c3ef26537d5f53dfd8532a" translate="yes" xml:space="preserve">
          <source>My solution,</source>
          <target state="translated">我的解决办法是:</target>
        </trans-unit>
        <trans-unit id="da2ef974e08928b9a1a59856d2f205e81954db22" translate="yes" xml:space="preserve">
          <source>None of the answers return &lt;code&gt;false&lt;/code&gt; for empty strings, a fix for that...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于空字符串，所有&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;答案都不会返回&lt;/font&gt;&lt;/font&gt; &lt;code&gt;false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，对此的解决方法是...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="850422ea4c8272cf389573c577a0f83e8d1eb914" translate="yes" xml:space="preserve">
          <source>Nothing very different but we can use Boolean constructor</source>
          <target state="translated">没什么不同,但我们可以使用布尔构造函数</target>
        </trans-unit>
        <trans-unit id="4d430e56292fd1b21ab721eea81696c543b5a4ff" translate="yes" xml:space="preserve">
          <source>Of course, you could also use &lt;code&gt;Array.isArray&lt;/code&gt;, jquery &lt;code&gt;$.isArray&lt;/code&gt; or prototype &lt;code&gt;Object.isArray&lt;/code&gt; instead of &lt;code&gt;Object.prototype.toString.call(n) !== '[object Array]'&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当然，您也可以使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Array.isArray&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，jquery &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$.isArray&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或原型&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.isArray&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代替&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype.toString.call(n) !== '[object Array]'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff271b42728102e6eceaa592ec6d5f8602ea5843" translate="yes" xml:space="preserve">
          <source>Only problem I had with @CMS's &lt;a href=&quot;https://stackoverflow.com/a/1830844/623735&quot;&gt;answer&lt;/a&gt; is the exclusion of &lt;code&gt;NaN&lt;/code&gt; and Infinity, which are useful numbers for many situations. One way to check for &lt;code&gt;NaN&lt;/code&gt;'s is to check for numeric values that don't equal themselves, &lt;code&gt;NaN != NaN&lt;/code&gt;!  So there are really 3 tests you'd like to deal with ...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我对@CMS的&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/1830844/623735&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;回答&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;唯一的问题&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是排除了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和Infinity，这在许多情况下都是有用的数字。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;检查&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一种方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是检查与自己不相等的数值，即&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN != NaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，您实际上要处理3个测试...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5752d6736e14ea97bacab8527ecf6ba007d54041" translate="yes" xml:space="preserve">
          <source>Positive hex numbers start with &lt;code&gt;0x&lt;/code&gt; and negative hex numbers start with &lt;code&gt;-0x&lt;/code&gt;.
Positive oct numbers start with &lt;code&gt;0&lt;/code&gt; and negative oct numbers start with &lt;code&gt;-0&lt;/code&gt;.
This one takes most of what has already been mentioned into consideration, but includes hex and octal numbers, negative scientific, Infinity and has removed decimal scientific (&lt;code&gt;4e3.2&lt;/code&gt; is not valid).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正十六进制数字以&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0x&lt;/code&gt; 开头&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，负十六进制数字以&lt;/font&gt;&lt;/font&gt; &lt;code&gt;-0x&lt;/code&gt; 开头&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;八进制正数从&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;开始，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而八进制负数从&lt;/font&gt;&lt;/font&gt; &lt;code&gt;-0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;开始&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该代码考虑了大部分已提及的内容，但包括十六进制和八进制数字，负数科学数，无穷大数，并删除了十进制科学数（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;4e3.2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;无效）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="02324d2fc43fdc638dc2c1164c01450c94b3ffd5" translate="yes" xml:space="preserve">
          <source>Running the unit tests against the new code and it only fails on the infinity and boolean literals, and the only time that should be a problem is if you're generating code (really, who would type in a literal and check if it's numeric? You should &lt;em&gt;know&lt;/em&gt;), and that would be some strange code to generate.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;针对新代码运行单元测试，它仅在无穷和布尔文字上失败，并且唯一应该出现问题的时间是您是否正在生成代码（确实，谁会输入文字并检查其是否为数字？您应该&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;知道&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;），这将生成一些奇怪的代码。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99b27388b63c7c0aff4d69649ba133a7a5b31859" translate="yes" xml:space="preserve">
          <source>Simple.</source>
          <target state="translated">Simple.</target>
        </trans-unit>
        <trans-unit id="19f4c0ef7c752661e63c4444a634ffc617b09ec6" translate="yes" xml:space="preserve">
          <source>Since jQuery 1.7, you can use &lt;a href=&quot;http://api.jquery.com/jQuery.isNumeric/&quot;&gt;&lt;code&gt;jQuery.isNumeric()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从jQuery 1.7开始，您可以使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://api.jquery.com/jQuery.isNumeric/&quot;&gt; &lt;code&gt;jQuery.isNumeric()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9fc8fe8485fba0d57b83521cea373769f4964394" translate="yes" xml:space="preserve">
          <source>Some time ago I had to implement an &lt;code&gt;IsNumeric&lt;/code&gt; function, to find out if a variable contained a numeric value, &lt;strong&gt;regardless of its type&lt;/strong&gt;, it could be a &lt;code&gt;String&lt;/code&gt; containing a numeric value (I had to consider also exponential notation, etc.), a &lt;code&gt;Number&lt;/code&gt; object, virtually anything could be passed to that function, I couldn't make any type assumptions,  taking care of type coercion (eg. &lt;code&gt;+true == 1;&lt;/code&gt; but &lt;code&gt;true&lt;/code&gt; shouldn't be considered as &lt;code&gt;&quot;numeric&quot;&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;前一段时间，我必须实现一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;IsNumeric&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数，以查明变量是否包含数字值，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而不论其类型如何&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它都可以是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;包含数字值&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;String&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（我还必须考虑指数表示法，等等），&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Number&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象，几乎任何东西都可以传递给该函数，我不能做任何类型假设，要注意类型强制（例如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;+true == 1;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不应被视为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;numeric&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="54f5fa3fb3c8c61b5e91ef26cf2087556fc2660d" translate="yes" xml:space="preserve">
          <source>Test cases:</source>
          <target state="translated">测试案例:</target>
        </trans-unit>
        <trans-unit id="a70ce38389e318bd2be18a0111c6dc76bd2cd9ed" translate="yes" xml:space="preserve">
          <source>TestCase</source>
          <target state="translated">TestCase</target>
        </trans-unit>
        <trans-unit id="4033570531fe3eb2ad39b4792f1edaf65b9cfb3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;(input - 0)&lt;/code&gt; expression forces JavaScript to do type coercion on your input value; it must first be interpreted as a number for the subtraction operation.  If that conversion to a number fails, the expression will result in &lt;code&gt;NaN&lt;/code&gt;.  This &lt;em&gt;numeric&lt;/em&gt; result is then compared to the original value you passed in.  Since the left hand side is now numeric, type coercion is again used.  Now that the input from both sides was coerced to the same type from the same original value, you would think they should always be the same (always true). However, there's a special rule that says &lt;code&gt;NaN&lt;/code&gt; is never equal to &lt;code&gt;NaN&lt;/code&gt;, and so a value that can't be converted to a number (and only values that cannot be converted to numbers) will result in false.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(input - 0)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;表达力量的JavaScript做你输入的值类型强制; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;首先必须将其解释为减法运算的数字。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果该转换为数字失败，则表达式将得出&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;然后&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将此&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数字&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;结果与您传入的原始值进行比较。由于左侧现在是数字，因此再次使用强制类型。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，将双方的输入都从相同的原始值强制转换为相同的类型，您将认为它们应该始终相同（始终为true）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，有一条特殊的规则说&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;永远不等于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，因此无法转换为数字的值（只有无法转换为数字的值）将导致false。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e60f6f12c9f87a62739d82deda0a2c662b871d0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isDecimal&lt;/code&gt; passes the following test:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所述&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isDecimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过以下测试：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9ec20b880ddee1182592996089aa87ebd81af6bc" translate="yes" xml:space="preserve">
          <source>The Javascript:</source>
          <target state="translated">的Javascript。</target>
        </trans-unit>
        <trans-unit id="d608c5907ccc1d0e078ea380e02b18d40ad5621a" translate="yes" xml:space="preserve">
          <source>The accepted answer failed your test #7 and I guess it's because you changed your mind. So this is a response to the accepted answer, with which I had issues.</source>
          <target state="translated">接受的答案没有通过你的7号考试,我想这是因为你改变了主意。所以这是对接受的答案的回应,我有问题。</target>
        </trans-unit>
        <trans-unit id="402beb315116495be6a1cf101f8a1c1b59c38ccd" translate="yes" xml:space="preserve">
          <source>The check on the length is for a special case involving empty strings. Also note that it falls down on your 0x89f test, but that's because in many environments that's an okay way to define a number literal.  If you want to catch that specific scenario you could add an additional check.  Even better, if that's your reason for not using &lt;code&gt;isNaN()&lt;/code&gt; then just wrap your own function around &lt;code&gt;isNaN()&lt;/code&gt; that can also do the additional check.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;长度检查是针对涉及空字符串的特殊情况。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;还要注意，它取决于您的0x89f测试，但这是因为在许多环境中，这是定义数字文字的一种好方法。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果要赶上特定情况，可以添加其他检查。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更好的是，如果这是您不使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isNaN()&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;原因，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;那么只需将自己的函数包装在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isNaN()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;周围&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，该函数也可以执行其他检查。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7aae1c091e2ae39dbd22df26e49467ee923a35ce" translate="yes" xml:space="preserve">
          <source>The downside of jQuery's version is that if you pass a string with leading numerics and trailing letters like &lt;code&gt;&quot;123abc&quot;&lt;/code&gt; the &lt;code&gt;parseFloat | parseInt&lt;/code&gt; will extract the numeric fraction out and return 123, BUT, the second guard &lt;code&gt;isFinite&lt;/code&gt; will fail it anyway.
With the unary &lt;code&gt;+&lt;/code&gt; operator it will die on the very first guard since + throws NaN for such hybrids :)
A little performance yet I think a solid semantic gain.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;jQuery版本的缺点是，如果您传递带有前导数字和结尾字母（如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;123abc&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;字符串，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;则&lt;/font&gt;&lt;/font&gt; &lt;code&gt;parseFloat | parseInt&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将提取数字分数并返回123，但是，第二个保护&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isFinite&lt;/code&gt; 还是&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;会失败。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果使用一元&lt;/font&gt;&lt;/font&gt; &lt;code&gt;+&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运算符，它将在第一个警卫阵亡，因为+会给此类混合对象抛出NaN ：)一点点的性能，但我认为确实获得了语义上的好处。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="47ae4d295d5daa46cab0ae7212b476b50d7d8908" translate="yes" xml:space="preserve">
          <source>The idea here is that every number or integer has one &quot;canonical&quot; string representation, and every non-canonical representation should be rejected. So we cast to a number and back, and see if the result is the original string.</source>
          <target state="translated">这里的想法是,每个数字或整数都有一个 &quot;公理 &quot;的字符串表示,而每个非公理的表示都应该被拒绝。所以我们投向一个数字,然后再返回,看结果是否是原始字符串。</target>
        </trans-unit>
        <trans-unit id="de5ff378ffbd286b7b2e7705b6efc417ff2993b5" translate="yes" xml:space="preserve">
          <source>The solution covers:</source>
          <target state="translated">该解决方案包括:</target>
        </trans-unit>
        <trans-unit id="67455d66e270c68c864be87e02187bd49b46b74c" translate="yes" xml:space="preserve">
          <source>This field accept value between 5 and 10 only</source>
          <target state="translated">该字段只接受5到10之间的值</target>
        </trans-unit>
        <trans-unit id="44341b495717e14c392a965197aa3e722063e1a6" translate="yes" xml:space="preserve">
          <source>This is part of the language since
&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-number.isfinite&quot;&gt;ES2015&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是自&lt;/font&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-number.isfinite&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES2015&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以来该语言的 &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一部分&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b65f763f4d712f97c6dd6e93aee0243859234804" translate="yes" xml:space="preserve">
          <source>This is relevant e.g. for numbers as object property names.</source>
          <target state="translated">例如,这与作为对象属性名称的数字有关。</target>
        </trans-unit>
        <trans-unit id="b5714f9a5c65746441d7d382c1eb02d3731cd2f7" translate="yes" xml:space="preserve">
          <source>This should work. Some of the functions provided here are flawed, also should be faster than any other function here.</source>
          <target state="translated">这个应该是可以的。这里提供的一些功能是有缺陷的,也应该比这里的任何其他功能都要快。</target>
        </trans-unit>
        <trans-unit id="81ae9263acccfa98f249641778eeed8334d1024b" translate="yes" xml:space="preserve">
          <source>This way is easier and faster! All tests are checked!</source>
          <target state="translated">这种方式更方便、更快捷! 所有的测试都要检查!</target>
        </trans-unit>
        <trans-unit id="7291adbcaf9c97e74a5e38077ccc6100a12cd8c7" translate="yes" xml:space="preserve">
          <source>This way seems to work well:</source>
          <target state="translated">这种方式似乎效果不错。</target>
        </trans-unit>
        <trans-unit id="d8e707f5bebee6e958040f7d81d67cdf95bbac30" translate="yes" xml:space="preserve">
          <source>This works for 0x23 type numbers as well.</source>
          <target state="translated">这也适用于0x23类型的数字。</target>
        </trans-unit>
        <trans-unit id="7da1d54df023dff2b0a3282521d27c02e0f46146" translate="yes" xml:space="preserve">
          <source>To alleviate this problem, I added a check to discount arrays from the logic</source>
          <target state="translated">为了缓解这个问题,我在逻辑中加入了一个检查来折算数组的逻辑。</target>
        </trans-unit>
        <trans-unit id="c60941249b49a05c0eee83bc0f102c021df402ab" translate="yes" xml:space="preserve">
          <source>To check if a variable contains a valid number and not
just a String which looks like a number,
&lt;code&gt;Number.isFinite(value)&lt;/code&gt; can be used.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要检查变量是否包含有效数字，而不仅仅是一个看起来像数字的字符串， &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Number.isFinite(value)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b04619a3e04d3ab36ad35fce95a6b6e92e3ee5c" translate="yes" xml:space="preserve">
          <source>To me, this is the best way:</source>
          <target state="translated">对我来说,这是最好的办法。</target>
        </trans-unit>
        <trans-unit id="01da0ffb357bf62ebce0bf87043a8cc179a49e0e" translate="yes" xml:space="preserve">
          <source>Use the function &lt;code&gt;isNaN&lt;/code&gt;. I believe if you test for &lt;code&gt;!isNaN(yourstringhere)&lt;/code&gt; it works fine for any of these situations.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isNaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我相信，如果您测试&lt;/font&gt;&lt;/font&gt; &lt;code&gt;!isNaN(yourstringhere)&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;则在任何情况下&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;均能&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正常工作。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="afe24c4d208f9119178e480f28d93e21931b32fe" translate="yes" xml:space="preserve">
          <source>Validate decimal numbers in JavaScript - IsNumeric()</source>
          <target state="translated">在JavaScript中验证十进制数-IsNumeric()</target>
        </trans-unit>
        <trans-unit id="73d0175b3bfb997fffaa4bf891f7c07f87cda7f1" translate="yes" xml:space="preserve">
          <source>Warning: use at your own risk, no guarantees.</source>
          <target state="translated">警告:使用风险自担,不做任何保证。</target>
        </trans-unit>
        <trans-unit id="c08d257d4d258cf6aa1c44af97ac4301c6c3b3a5" translate="yes" xml:space="preserve">
          <source>What's the cleanest, most effective way to validate decimal numbers in JavaScript?</source>
          <target state="translated">在JavaScript中验证十进制数最干净、最有效的方法是什么?</target>
        </trans-unit>
        <trans-unit id="03f26872aba4a6f83b3ecdfb46d543ae10ae3fe7" translate="yes" xml:space="preserve">
          <source>Whether these functions are useful for you depends on the use case. One feature is that &lt;em&gt;distinct strings represent distinct numbers&lt;/em&gt; (if both pass the &lt;code&gt;isNumber()&lt;/code&gt; test).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这些功能对您是否有用取决于用例。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个功能是&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不同的字符串代表不同的数字&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（如果两个&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;字符串&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;都通过了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isNumber()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;测试）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a397a62f6c4bba0d307c9b0bd005d8b8d00f9ca5" translate="yes" xml:space="preserve">
          <source>With this in mind, it would be better to use</source>
          <target state="translated">考虑到这一点,最好是使用</target>
        </trans-unit>
        <trans-unit id="b9f79764de8c774b9884615009abb60cd722876d" translate="yes" xml:space="preserve">
          <source>Yeah, the built-in &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/isNaN&quot;&gt;&lt;code&gt;isNaN(object)&lt;/code&gt;&lt;/a&gt; will be much faster than any regex parsing, because it's built-in and compiled, instead of interpreted on the fly.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是的，内置的&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/isNaN&quot;&gt; &lt;code&gt;isNaN(object)&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将比任何正则表达式解析都要快得多，因为它是内置和编译的，而不是即时解释的。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6330b5fa1e542e9e0d197dbcf5e7608c804c1271" translate="yes" xml:space="preserve">
          <source>didn't work for me. When I put in an alert and tested, &lt;code&gt;input.length&lt;/code&gt; was &lt;code&gt;undefined&lt;/code&gt;. I think there is no property to check integer length. So what I did was</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;没有为我工作。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当我发出警报并进行测试时，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;input.length&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我认为没有属性可以检查整数长度。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所以我所做的是&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e784e7e624c7540a8490ec2a54507a52ec826fa6" translate="yes" xml:space="preserve">
          <source>it should be noted that it assumes that '.42' is NOT a number, and '4.' is NOT a number, so this should be taken into account.</source>
          <target state="translated">需要注意的是,它假定'.42'不是一个数字,'4.'不是一个数字,所以应该考虑到这一点。</target>
        </trans-unit>
        <trans-unit id="e7b18c0494c690e1c6ececb399a23d918bea094a" translate="yes" xml:space="preserve">
          <source>jQuery, and some other javascript libraries already include such a function, usually called &lt;code&gt;isNumeric&lt;/code&gt;. There is also a &lt;a href=&quot;https://stackoverflow.com/a/1830844/592253&quot;&gt;post on stackoverflow&lt;/a&gt; that has been widely accepted as the answer, the same general routine that the afore mentioned libraries are using.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;jQuery和其他一些JavaScript库已经包含了这样的函数，通常称为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isNumeric&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/1830844/592253&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关于stackoverflow&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文章&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;也已被广泛接受为答案，与上述库所使用的常规例程相同。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
