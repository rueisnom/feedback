<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/5515310">
    <body>
      <group id="5515310">
        <trans-unit id="0081abdb3fb3358608f195398577f839c6e38e05" translate="yes" xml:space="preserve">
          <source>&quot;&quot; (empty string)</source>
          <target state="translated">&quot;&quot; (cadena vac√≠a)</target>
        </trans-unit>
        <trans-unit id="f255894e93cadd82a77c1fa41d98a3c1f975e0e1" translate="yes" xml:space="preserve">
          <source>&quot;A number, equal or less than zero&quot;: &lt;code&gt;if (isType(val, Number) &amp;amp;&amp;amp; val &amp;lt;= 0) ...&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;Un n&amp;uacute;mero, igual o menor que cero&quot;: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;if (isType(val, Number) &amp;amp;&amp;amp; val &amp;lt;= 0) ...&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d0984a7f0ae011cf16733487c4d6c2edfda9c016" translate="yes" xml:space="preserve">
          <source>&quot;A string, with no chars&quot;:
&lt;code&gt;if (isType(val, String) &amp;amp;&amp;amp; val.length === 0) ...&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;Una cadena, sin caracteres&quot;: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;if (isType(val, String) &amp;amp;&amp;amp; val.length === 0) ...&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9a7966eb69dc184d7c97eab211b2f8dd81317af3" translate="yes" xml:space="preserve">
          <source>&quot;An Array, with no items&quot;: &lt;code&gt;if (isType(val, Array) &amp;amp;&amp;amp; val.length === 0) ...&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;Una matriz, sin elementos&quot;: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;if (isType(val, Array) &amp;amp;&amp;amp; val.length === 0) ...&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="29c7ec8ab6cec1369c605b5809e570a5f729754c" translate="yes" xml:space="preserve">
          <source>&quot;An Object, with 0 props&quot;: &lt;code&gt;if (isType(val, Object) &amp;amp;&amp;amp; Object.entries(val).length === 0) ...&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;Un objeto, con 0 accesorios&quot;: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;if (isType(val, Object) &amp;amp;&amp;amp; Object.entries(val).length === 0) ...&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f75992b08620aaff52fdcfd8728c1a006a58574" translate="yes" xml:space="preserve">
          <source>&quot;Note that the bind operator (::) is not part of ES2016 (ES7) nor any later edition of the ECMAScript standard at all. It's currently a stage 0 (strawman) proposal for being introduced to the language.&quot; &amp;ndash; Simon Kjellberg. the author wishes to add his support for this beautiful proposal to receive royal ascension.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;Tenga en cuenta que el operador de enlace (: :) no forma parte de ES2016 (ES7) ni de ninguna edici&amp;oacute;n posterior del est&amp;aacute;ndar ECMAScript. Actualmente es una propuesta de etapa 0 (strawman) para ser introducido en el lenguaje&quot;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;- Simon Kjellberg. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;el autor desea agregar su apoyo a esta hermosa propuesta para recibir la ascensi&amp;oacute;n real.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c623f5c9859f1e64144444827511393703d7c580" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;('' instanceof String) === false&lt;/code&gt;  (&quot;A String is not a String&quot;)</source>
          <target state="translated">&lt;code&gt;('' instanceof String) === false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (&quot;Una cadena no es una cadena&quot;)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c529e0b4f92e2e49a7e7772af2d344588e351fc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;([] instanceof Object) === true&lt;/code&gt;   (&quot;An Array is an Object&quot;)</source>
          <target state="translated">&lt;code&gt;([] instanceof Object) === true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (&quot;Una matriz es un objeto&quot;)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="535d3d3a2806c3878ef6e74f652360e4740643de" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;To check Default Value&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para verificar el valor predeterminado&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6c725d10c1406bca5afc9abdf1baa97f7124291c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;!&lt;/strong&gt; check for &lt;strong&gt;empty strings (&quot;&quot;), null, undefined, false and the number 0 and NaN.&lt;/strong&gt; Say, if a string is empty &lt;code&gt;var name = &quot;&quot;&lt;/code&gt; then &lt;code&gt;console.log(!name)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;! &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;compruebe si hay &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cadenas vac&amp;iacute;as (&quot;&quot;), nulas, indefinidas, falsas y el n&amp;uacute;mero 0 y NaN. &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Digamos, si una cadena est&amp;aacute; vac&amp;iacute;a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var name = &quot;&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; entonces &lt;/font&gt;&lt;/font&gt; &lt;code&gt;console.log(!name)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; devuelve &lt;/font&gt;&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="efe3e3269b612df157f8a45ff6ecb503c0c28f54" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Always use &quot;whitelists&quot; for validation.&lt;/strong&gt; If you require a value to be, e.g., a String, Number, or Array, check for those 3 &quot;white&quot; possibilities, and throw an Error if none of the 3 are satisfied. We should be able to see that checking for &quot;black&quot; possibilities isn't very useful: Say we write &lt;code&gt;if (v === null) throw new Error('Null value rejected');&lt;/code&gt; - this is great for ensuring that &lt;code&gt;null&lt;/code&gt; values don't make it through, but if a value &lt;em&gt;does&lt;/em&gt; make it through, we still know hardly anything about it. A value &lt;code&gt;v&lt;/code&gt; which passes this null-check is still VERY generic - it's &lt;em&gt;anything but &lt;code&gt;null&lt;/code&gt;&lt;/em&gt;! Blacklists hardly dispell generic-ness.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Utilice siempre &quot;listas blancas&quot; para la validaci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Si necesita que un valor sea, por ejemplo, una cadena, un n&amp;uacute;mero o una matriz, verifique esas 3 posibilidades &quot;blancas&quot; y arroje un error si ninguno de los 3 est&amp;aacute; satisfecho. Deber&amp;iacute;amos poder ver que verificar las posibilidades &quot;negras&quot; no es muy &amp;uacute;til: digamos que escribimos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;if (v === null) throw new Error('Null value rejected');&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - esto es excelente para garantizar que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; valores &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nulos&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no se logren, pero si un valor se &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;logra&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , todav&amp;iacute;a no sabemos casi nada al respecto. Un valor &lt;/font&gt;&lt;/font&gt; &lt;code&gt;v&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que pasa esta verificaci&amp;oacute;n nula sigue siendo MUY gen&amp;eacute;rico: &amp;iexcl;es &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;todo menos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ! Las listas negras apenas disipan lo gen&amp;eacute;rico.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e16e6616288eedb9480c960a48b2efa179620d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Minimize the amount of code processing values of unknown type.&lt;/strong&gt; E.g., for &lt;code&gt;let v = JSON.parse(someRawValue);&lt;/code&gt;, our &lt;code&gt;v&lt;/code&gt; variable is now of unknown type. As early as possible, we should limit our possibilities. The best way to do this can be by requiring a particular type: e.g. &lt;code&gt;if (!isType(v, Array)) throw new Error('Expected Array');&lt;/code&gt; - this is a really quick and expressive way to remove the generic nature of &lt;code&gt;v&lt;/code&gt;, and ensure it's always an &lt;code&gt;Array&lt;/code&gt;. Sometimes, though, we need to allow &lt;code&gt;v&lt;/code&gt; to be of multiple types. In those cases, we should create blocks of code where &lt;code&gt;v&lt;/code&gt; is no longer generic, as early as possible:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Minimice la cantidad de valores de procesamiento de c&amp;oacute;digo de tipo desconocido.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Por ejemplo, para &lt;/font&gt;&lt;/font&gt; &lt;code&gt;let v = JSON.parse(someRawValue);&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , nuestra &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;variable &lt;/font&gt;&lt;/font&gt; &lt;code&gt;v&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ahora es de tipo desconocido. Tan pronto como sea posible, debemos limitar nuestras posibilidades. La mejor manera de hacerlo puede ser requiriendo un tipo particular: por ejemplo, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;if (!isType(v, Array)) throw new Error('Expected Array');&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - esta es una forma realmente r&amp;aacute;pida y expresiva de eliminar la naturaleza gen&amp;eacute;rica de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;v&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y garantizar que siempre sea una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Sin embargo, a veces, debemos permitir que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;v&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; sea ‚Äã‚Äãde varios tipos. En esos casos, debemos crear bloques de c&amp;oacute;digo donde &lt;/font&gt;&lt;/font&gt; &lt;code&gt;v&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ya no sea gen&amp;eacute;rico, lo antes posible:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f8e01739d5b6815e58b82ad6033855dbc821cb51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OR&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;OR&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="98bc9288747fd36f71f6993a1c973b4700b00e97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Poor man's tests üòÅ&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pruebas del pobre hombre üòÅ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="983cedc0760c02eef69af87937ac701a932115b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Test results:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Resultados de la prueba:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8a186d8f2e2b474e08f038b6543736eef66eb390" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Try With Different Logic&lt;/strong&gt;. You can use bellow code for check all four(4) condition for validation like not null, not blank, not undefined and not zero only use this code (!(!(variable))) in javascript and jquery.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Probar con l&amp;oacute;gica diferente&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede usar el siguiente c&amp;oacute;digo para verificar las cuatro (4) condiciones para la validaci&amp;oacute;n, como no nulo, no en blanco, no indefinido y no cero, solo use este c&amp;oacute;digo (! (! (Variable))) en javascript y jquery.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9de0b7237e5d277fb8acd8811f1686d33411d5ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unless a value is &lt;code&gt;null&lt;/code&gt;, never consider &quot;a vacuous value&quot;. Instead, consider &quot;an X which is vacuous&quot;.&lt;/strong&gt; Essentially, never consider doing anything like &lt;code&gt;if (isEmpty(val)) { /* ... */ }&lt;/code&gt; - no matter how that &lt;code&gt;isEmpty&lt;/code&gt; function is implemented (I don't want to know...), it isn't meaningful! And it's way too generic! Vacuousness should only be calculated with knowledge of &lt;code&gt;val&lt;/code&gt;'s type. Vacuousness-checks should look like this:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A menos que un valor sea &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , nunca considere &quot;un valor vac&amp;iacute;o&quot;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En cambio, considere &quot;una X que est&amp;aacute; vac&amp;iacute;a&quot;. &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esencialmente, nunca considere hacer algo como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;if (isEmpty(val)) { /* ... */ }&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - no importa c&amp;oacute;mo &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se implemente &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;esa &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isEmpty&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (no quiero saber ...), no tiene sentido ! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iexcl;Y es demasiado gen&amp;eacute;rico! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La vacuidad solo debe calcularse con conocimiento del &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tipo &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;val&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los controles de vac&amp;iacute;o deber&amp;iacute;an verse as&amp;iacute;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="747816801197f3e1e6a537050f02b72991b41b27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;false:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;&quot;foo&quot;&lt;/code&gt;, &lt;code&gt;[1, 2, 3]&lt;/code&gt;, &lt;code&gt;{ foo: 1 }&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;falso: &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;-1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;foo&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[1, 2, 3]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{ foo: 1 }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4e5b99d9c3282d69725822d49194d9239aea2caa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;true:&lt;/strong&gt;&lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;&quot;&quot;&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt;, &lt;code&gt;{}&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;verdadero: &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="386f204a3bcee54c722bf28d479ab7a206bbe420" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;Edited: Changed to strict equality (!==) because it's the norm by now ;)&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Editado: cambiado a igualdad estricta (! ==) porque ya es la norma;)&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="ebb2e2e95e9736dbb688c7a93e098a61ff8745b1" translate="yes" xml:space="preserve">
          <source>A solution I like a lot:</source>
          <target state="translated">Una soluci√≥n que me gusta mucho:</target>
        </trans-unit>
        <trans-unit id="eda0734cbf42ed5c6723c16df733f6d8e33bcc99" translate="yes" xml:space="preserve">
          <source>According to your problem domain you can just use like &lt;code&gt;!val&lt;/code&gt; or &lt;code&gt;!!val&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De acuerdo con su dominio problem&amp;aacute;tico, puede usar como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;!val&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;!!val&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5eae1c48b28511e25caa33f05cb9d4dfab638b20" translate="yes" xml:space="preserve">
          <source>Again, the above code is equivalent to the following.</source>
          <target state="translated">De nuevo,el c√≥digo anterior es equivalente a lo siguiente.</target>
        </trans-unit>
        <trans-unit id="f03bcf89da15bd2d690a8716f74b5d97c2aa201d" translate="yes" xml:space="preserve">
          <source>All values in array represent what you want to be (null, undefined or another things) and you search what you want in it.</source>
          <target state="translated">Todos los valores en la matriz representan lo que quieres ser (nulo,indefinido u otras cosas)y buscas lo que quieres en ella.</target>
        </trans-unit>
        <trans-unit id="352511ed53f2bc87cea0d580eb1b6835c206e1af" translate="yes" xml:space="preserve">
          <source>Although an oldie, what forget is that they should wrap their code block and then catch the error and then test...</source>
          <target state="translated">Aunque es una vieja,lo que se olvida es que deben envolver su bloque de c√≥digo y luego atrapar el error y luego probar...</target>
        </trans-unit>
        <trans-unit id="7978437ceddb21e8ecadc87415c13a4d65668664" translate="yes" xml:space="preserve">
          <source>Array: [] (Using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray#Browser_compatibility&quot;&gt;ECMA 5+&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Matriz: [] (utilizando &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray#Browser_compatibility&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMA 5+&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9414e6394dba4bec82335056f2ca388d45bab146" translate="yes" xml:space="preserve">
          <source>Both will generate an error if foo has not been declared.</source>
          <target state="translated">Ambos generar√°n un error si no se ha declarado el foo.</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Ampliar fragmento</target>
        </trans-unit>
        <trans-unit id="599fe8a8d3199cdbdb97228f4c2f8bd67b2c89d7" translate="yes" xml:space="preserve">
          <source>First:   &lt;code&gt;import { isNullOrUndefined } from 'util';&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Primero: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;import { isNullOrUndefined } from 'util';&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d736114ae4da0bc8b70880e29fecc152e2a810a" translate="yes" xml:space="preserve">
          <source>For deciding how to determine the &quot;vacuousness&quot; of values, we need to accomodate javascript's inbuilt, inherent sense of whether values are &quot;truthy&quot; or &quot;falsy&quot;. Naturally, &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; are both &quot;falsy&quot;. Less naturally, the number &lt;code&gt;0&lt;/code&gt; (and no other number except &lt;code&gt;NaN&lt;/code&gt;) is also &quot;falsy&quot;. Least naturally: &lt;code&gt;''&lt;/code&gt; is falsy, but &lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;{}&lt;/code&gt; (and &lt;code&gt;new Set()&lt;/code&gt;, and &lt;code&gt;new Map()&lt;/code&gt;) are truthy - although they all seem equally vacuous!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para decidir c&amp;oacute;mo determinar la &quot;vacuidad&quot; de los valores, necesitamos acomodar el sentido inherente e inherente de JavaScript de si los valores son &quot;verdaderos&quot; o &quot;falsos&quot;. Naturalmente, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; e &lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; son &quot;falsos&quot;. Menos naturalmente, el n&amp;uacute;mero &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (y ning&amp;uacute;n otro n&amp;uacute;mero excepto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) tambi&amp;eacute;n es &quot;falso&quot;. Menos natural: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;''&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es falso, pero &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (y el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Set()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Map()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) son verdaderos, &amp;iexcl;aunque todos parecen igualmente vac&amp;iacute;os!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d8acb01f57ecec2fe3699928119270ef53e1fe16" translate="yes" xml:space="preserve">
          <source>For everyone coming here for having similar question, the following works great and I have it in my library the last years:</source>
          <target state="translated">Para todos los que vienen aqu√≠ por tener una pregunta similar,las siguientes obras son geniales y las tengo en mi biblioteca desde hace a√±os:</target>
        </trans-unit>
        <trans-unit id="565a0a7372d4f7a3dd01b3b5f4c1d582bca03b69" translate="yes" xml:space="preserve">
          <source>Further read: &lt;a href=&quot;http://typeofnan.blogspot.com/2011/01/typeof-is-fast.html&quot;&gt;http://typeofnan.blogspot.com/2011/01/typeof-is-fast.html&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;M&amp;aacute;s informaci&amp;oacute;n: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://typeofnan.blogspot.com/2011/01/typeof-is-fast.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://typeofnan.blogspot.com/2011/01/typeof-is-fast.html&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="29767d20c0c421e6a5db2c3622aa208a3a6c38a4" translate="yes" xml:space="preserve">
          <source>Furthermore, if you do not &lt;strong&gt;know&lt;/strong&gt; whether a variable exists (that means, if it was &lt;em&gt;declared&lt;/em&gt;) you should check with the &lt;code&gt;typeof&lt;/code&gt; operator. For instance</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s, si no &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;sabe&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; si existe una variable (es decir, si se &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;declar&amp;oacute;&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), debe consultar con el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador &lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="61b18320217d329f93dc624fdbeae4b18ae456c7" translate="yes" xml:space="preserve">
          <source>Here's mine - returns true if value is null, undefined, etc or blank (ie contains only blank spaces):</source>
          <target state="translated">Aqu√≠ est√° el m√≠o-devuelve verdadero si el valor es nulo,indefinido,etc.o en blanco (es decir,contiene s√≥lo espacios en blanco):</target>
        </trans-unit>
        <trans-unit id="5ca27188e0652338bcd0ae87e904492ea2cde58c" translate="yes" xml:space="preserve">
          <source>I believe that vacuousness should never be dealt with in a generic fashion. We should instead always have the rigour to get more information about our data before determining if it is vacuous - I mainly do this by checking what type of data I'm dealing with:</source>
          <target state="translated">Creo que la vacuidad nunca debe ser tratada de manera gen√©rica.En cambio,deber√≠amos tener siempre el rigor de obtener m√°s informaci√≥n sobre nuestros datos antes de determinar si son vac√≠os-yo lo hago principalmente comprobando con qu√© tipo de datos estoy tratando:</target>
        </trans-unit>
        <trans-unit id="86df069eca894b81dd85025bf75942da34ef7e0d" translate="yes" xml:space="preserve">
          <source>I don't recommend trying to define or use a function which computes whether any value in the whole world is empty. What does it really mean to be &quot;empty&quot;? If I have &lt;code&gt;let human = { name: 'bob', stomach: 'empty' }&lt;/code&gt;, should &lt;code&gt;isEmpty(human)&lt;/code&gt; return &lt;code&gt;true&lt;/code&gt;? If I have &lt;code&gt;let reg = new RegExp('');&lt;/code&gt;, should &lt;code&gt;isEmpty(reg)&lt;/code&gt; return &lt;code&gt;true&lt;/code&gt;? What about &lt;code&gt;isEmpty([ null, null, null, null ])&lt;/code&gt; - this list only contains emptiness, so is the list itself empty? I want to put forward here some notes on &quot;vacuousness&quot; (an intentionally obscure word, to avoid pre-existing associations) in javascript - and I want to argue that &quot;vacuousness&quot; in javascript values should never be dealt with generically.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No recomiendo tratar de definir o usar una funci&amp;oacute;n que calcule si alg&amp;uacute;n valor en todo el mundo est&amp;aacute; vac&amp;iacute;o. &amp;iquest;Qu&amp;eacute; significa realmente estar &quot;vac&amp;iacute;o&quot;? Si tengo que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;let human = { name: 'bob', stomach: 'empty' }&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , debe &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isEmpty(human)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; devolver &lt;/font&gt;&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ? Si he &lt;/font&gt;&lt;/font&gt; &lt;code&gt;let reg = new RegExp('');&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &amp;iquest;deber&amp;iacute;a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isEmpty(reg)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; volver &lt;/font&gt;&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ? &amp;iquest;Qu&amp;eacute; pasa con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isEmpty([ null, null, null, null ])&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;- esta lista solo contiene el vac&amp;iacute;o, entonces, &amp;iquest;est&amp;aacute; vac&amp;iacute;a la lista? Quiero presentar aqu&amp;iacute; algunas notas sobre &quot;vacuidad&quot; (una palabra intencionalmente oscura, para evitar asociaciones preexistentes) en javascript, y quiero argumentar que la &quot;vacuidad&quot; en los valores de javascript nunca debe tratarse gen&amp;eacute;ricamente.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="94116de2697cad5f8bf4e502a2aff7c010115676" translate="yes" xml:space="preserve">
          <source>I think using the ? operator is slightly cleaner.</source>
          <target state="translated">Creo que usar el operador ? es un poco m√°s limpio.</target>
        </trans-unit>
        <trans-unit id="ed4d9216364543a91c710e86866f4181d059db65" translate="yes" xml:space="preserve">
          <source>I used @Vix function() to check the object of which type.</source>
          <target state="translated">Utilic√© la funci√≥n @Vix()para comprobar el objeto de qu√© tipo.</target>
        </trans-unit>
        <trans-unit id="3af09fe301e1e3e3b173bf337a89db258362e9bd" translate="yes" xml:space="preserve">
          <source>If the variable hasn't been declared, you wont be able to test for undefined using a function because you will get an error.</source>
          <target state="translated">Si la variable no ha sido declarada,no podr√° comprobar si est√° indefinida usando una funci√≥n porque obtendr√° un error.</target>
        </trans-unit>
        <trans-unit id="d0ca857bb44292e7fa235c668e81523b26829409" translate="yes" xml:space="preserve">
          <source>If you are using &lt;strong&gt;&lt;code&gt;TypeScript&lt;/code&gt;&lt;/strong&gt; and don't want to account for &lt;strong&gt;&quot;values those are &lt;code&gt;false&lt;/code&gt;&quot;&lt;/strong&gt; then this is the solution for you:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si est&amp;aacute; utilizando &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;TypeScript&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y no desea tener en cuenta los &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;valores que son &lt;/font&gt;&lt;/font&gt; &lt;code&gt;false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;,&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; entonces esta es la soluci&amp;oacute;n para usted:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc531753642f804bb00b7e65713d231cbd3bb85f" translate="yes" xml:space="preserve">
          <source>If you can be sure that a &lt;em&gt;variable&lt;/em&gt; is declared at least, you should directly check if it has a &lt;code&gt;truthy&lt;/code&gt; value like shown above.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si puede estar seguro de que una &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;variable&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se declara al menos, debe verificar directamente si tiene un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;valor &lt;/font&gt;&lt;/font&gt; &lt;code&gt;truthy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; como se muestra arriba.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fb0f4accff00d0a4f13f3af92223ed2e012a1c58" translate="yes" xml:space="preserve">
          <source>If you prefer plain javascript try this:</source>
          <target state="translated">Si prefieres un javascript simple,prueba esto:</target>
        </trans-unit>
        <trans-unit id="01c84e47091a2ad40d4d30c09f27c90623d68717" translate="yes" xml:space="preserve">
          <source>If you want to avoid getting true if the value is any of the following, according to &lt;a href=&quot;https://stackoverflow.com/a/5515349/1934402&quot;&gt;jAndy's answer&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si desea evitar ser verdadero si el valor es cualquiera de los siguientes, seg&amp;uacute;n &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/5515349/1934402&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la respuesta de jAndy&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d4f28152dcb829966dd6051b332ad99597026eee" translate="yes" xml:space="preserve">
          <source>If you want to test if a variable has been declared you can use</source>
          <target state="translated">Si quieres comprobar si una variable ha sido declarada puedes usar</target>
        </trans-unit>
        <trans-unit id="b6e7999ef46a016e6959005a7cb62c0982a41998" translate="yes" xml:space="preserve">
          <source>If you wish to check for all whitespace strings (&quot; &quot;), you may do the following:</source>
          <target state="translated">Si desea comprobar todas las cadenas de espacios en blanco (&quot; &quot;),puede hacer lo siguiente:</target>
        </trans-unit>
        <trans-unit id="bb4c487d84a8d0d883a929ea0100b0d4dcc6556b" translate="yes" xml:space="preserve">
          <source>In ES6 with trim to handle whitespace strings:</source>
          <target state="translated">En el ES6 con el recorte para manejar las cuerdas de los espacios en blanco:</target>
        </trans-unit>
        <trans-unit id="4bc412644ce12bcaf2f09ca9130aa6367e4dd3d8" translate="yes" xml:space="preserve">
          <source>In addition to those scenarios, you may want to return false if the &lt;strong&gt;object&lt;/strong&gt; or &lt;strong&gt;array&lt;/strong&gt; is empty:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s de esos escenarios, es posible que desee devolver falso si el &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o la &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;matriz&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; est&amp;aacute; vac&amp;iacute;a:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1aff30cf7d8209a64db3c59dda4708ffd3ab8f8b" translate="yes" xml:space="preserve">
          <source>Is there a standard function to check for null, undefined, or blank variables in JavaScript</source>
          <target state="translated">¬øHay una funci√≥n est√°ndar para comprobar si hay variables nulas,indefinidas o en blanco en JavaScript</target>
        </trans-unit>
        <trans-unit id="811047afae993de34f895a89155b8f856dd2e97a" translate="yes" xml:space="preserve">
          <source>Is there a universal JavaScript function that checks that a variable has a value and ensures that it's not &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;? I've got this code, but I'm not sure if it covers all cases:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Existe una funci&amp;oacute;n JavaScript universal que verifique que una variable tenga un valor y garantice que no sea &lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tengo este c&amp;oacute;digo, pero no estoy seguro si cubre todos los casos:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="234bdcf3c2b682c934ad2c4b620a25c18e928b03" translate="yes" xml:space="preserve">
          <source>It may be usefull.</source>
          <target state="translated">Puede ser √∫til.</target>
        </trans-unit>
        <trans-unit id="d929e25badd3593adf17131ef07d2575832dc6ef" translate="yes" xml:space="preserve">
          <source>It will cover cases where &lt;strong&gt;value&lt;/strong&gt; was never defined, and also any of these:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cubrir&amp;aacute; casos en los que el &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;valor&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; nunca se defini&amp;oacute;, y tambi&amp;eacute;n alguno de estos:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0c95b2e030ca5780978523be266f3dd6ca32c2c9" translate="yes" xml:space="preserve">
          <source>It would be used as follows:</source>
          <target state="translated">Se utilizar√≠a de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="708abb8bd65f094e7a45e8ee61db75af7572706c" translate="yes" xml:space="preserve">
          <source>Let's define that a blank variable is &lt;code&gt;null&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt;, or if it has length, it is zero, or if it is an object, it has no keys:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Definamos que una variable en blanco es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , o si tiene longitud, es cero, o si es un objeto, no tiene claves:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f7fd9c68f804acda665d2ab082217bb1583318f2" translate="yes" xml:space="preserve">
          <source>NaN</source>
          <target state="translated">NaN</target>
        </trans-unit>
        <trans-unit id="457e837ab6afa0e9136b311f8a2fa94421a1bea8" translate="yes" xml:space="preserve">
          <source>Non-generic Vacuousness</source>
          <target state="translated">Vacuidad no gen√©rica</target>
        </trans-unit>
        <trans-unit id="0b3f072d724c5ff33448bdd7e7322d48a793fc13" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Object.getPrototypeOf&lt;/code&gt; is used to avoid a case like &lt;code&gt;let v = { constructor: String };&lt;/code&gt; The &lt;code&gt;isType&lt;/code&gt; function still returns correctly for &lt;code&gt;isType(v, String)&lt;/code&gt; (false), and &lt;code&gt;isType(v, Object)&lt;/code&gt; (true).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se usa para evitar un caso como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;let v = { constructor: String };&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isType&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; todav&amp;iacute;a regresa correctamente para &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isType(v, String)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (false) e &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isType(v, Object)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (true).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="985e2c5edb64a19a48e89b2a81a1b2656ed65d96" translate="yes" xml:space="preserve">
          <source>Note that this function ignores polymorphism - it expects &lt;code&gt;value&lt;/code&gt; to be a direct instance of &lt;code&gt;Cls&lt;/code&gt;, and not an instance of a subclass of &lt;code&gt;Cls&lt;/code&gt;. I avoid &lt;code&gt;instanceof&lt;/code&gt; for two main reasons:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que esta funci&amp;oacute;n ignora el polimorfismo: espera que el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; sea ‚Äã‚Äãuna instancia directa de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Cls&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y no una instancia de una subclase de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Cls&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Evito la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;instanceof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; por dos razones principales:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d27738e5187fff30292fc6f1a9524edb1e88ec8a" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;hasOwnProperty&lt;/code&gt; returns true for empty strings, 0, false, NaN, null, and undefined, if the variable was declared as any of them, so it might not be the best to use. The function may be modified to use it to show that it was declared, but is not usable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nota: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;hasOwnProperty&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; devuelve verdadero para cadenas vac&amp;iacute;as, 0, falso, NaN, nulo e indefinido, si la variable se declar&amp;oacute; como cualquiera de ellos, por lo que podr&amp;iacute;a no ser la mejor opci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La funci&amp;oacute;n puede modificarse para usarla para mostrar que se declar&amp;oacute;, pero no es utilizable.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0297e0673c32649fd6ca721994ba1276dcf392dd" translate="yes" xml:space="preserve">
          <source>Null vs Undefined</source>
          <target state="translated">Nulo vs.indefinido</target>
        </trans-unit>
        <trans-unit id="df234408f7103e1530084becc2872de135b6e14b" translate="yes" xml:space="preserve">
          <source>Object: {} (Using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries#Browser_compatibility&quot;&gt;ECMA 7+&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Objeto: {} (usando &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries#Browser_compatibility&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMA 7+&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="da8bfc4e5d52956a4f4313ea3a9af6f1219916bb" translate="yes" xml:space="preserve">
          <source>Omitting a parameter when calling a function results in that parameter receiving &lt;code&gt;undefined&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Omitir un par&amp;aacute;metro cuando se llama a una funci&amp;oacute;n da como resultado que ese par&amp;aacute;metro reciba &lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5ef41d350c921c8d62bba1b641e2551c9d1c30a1" translate="yes" xml:space="preserve">
          <source>One possible solution that might avoid getting truthy values is the following:</source>
          <target state="translated">Una posible soluci√≥n que podr√≠a evitar obtener valores de verdad es la siguiente:</target>
        </trans-unit>
        <trans-unit id="019cef4eb4fa12a96d3314ac64ede0bbf76eec3c" translate="yes" xml:space="preserve">
          <source>Or in ES7 (comment if further improvements)</source>
          <target state="translated">O en el ES7 (comentar si hay m√°s mejoras)</target>
        </trans-unit>
        <trans-unit id="68d937f7be7a183769b76d4b79c0d77860df0b20" translate="yes" xml:space="preserve">
          <source>Otherwise, if you are already using underscore or lodash, try:</source>
          <target state="translated">De lo contrario,si ya est√°s usando el subrayado o el lodash,int√©ntalo:</target>
        </trans-unit>
        <trans-unit id="37405ca9431bd556a154e1e8be7c9b069ec8fe48" translate="yes" xml:space="preserve">
          <source>Overall, I recommend using this &lt;code&gt;isType&lt;/code&gt; function along with these tips:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En general, recomiendo usar esta &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isType&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; junto con estos consejos:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7e1fc5e5c5a7662aa2cac9a852b96af63d77b905" translate="yes" xml:space="preserve">
          <source>Parameters with default values receive the default only when given &lt;code&gt;undefined&lt;/code&gt;, not &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los par&amp;aacute;metros con valores predeterminados reciben el valor predeterminado solo cuando se proporcionan &lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , no &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31352a60354454cc66e5f2859c5dd819f2e6c0a4" translate="yes" xml:space="preserve">
          <source>Please Note: As mentioned &lt;a href=&quot;https://stackoverflow.com/questions/5515310/is-there-a-standard-function-to-check-for-null-undefined-or-blank-variables-in/51086731?noredirect=1#comment92168451_51086731&quot;&gt;below&lt;/a&gt; this is now deprecated, use &lt;code&gt;value === undefined || value === null&lt;/code&gt; instead. &lt;a href=&quot;https://nodejs.org/api/util.html#util_util_isnullorundefined_object&quot;&gt;ref&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta: como se menciona a &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/5515310/is-there-a-standard-function-to-check-for-null-undefined-or-blank-variables-in/51086731?noredirect=1#comment92168451_51086731&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;continuaci&amp;oacute;n,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; esto ahora est&amp;aacute; en desuso, use el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;value === undefined || value === null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; lugar. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://nodejs.org/api/util.html#util_util_isnullorundefined_object&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ref&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd19e6d6cb4b26b0ef86cb95d8b5872a311f4828" translate="yes" xml:space="preserve">
          <source>Results:</source>
          <target state="translated">Results:</target>
        </trans-unit>
        <trans-unit id="7749fcf802c472b6c2f5bd0556805e456ffd5674" translate="yes" xml:space="preserve">
          <source>Returns:</source>
          <target state="translated">Returns:</target>
        </trans-unit>
        <trans-unit id="86612f6e03a3891848839379cc8c4dfe1e7fb3ea" translate="yes" xml:space="preserve">
          <source>So you really don't have to check for a potential problem before hand, you simply catch it and then deal with it how you want.</source>
          <target state="translated">As√≠ que realmente no tienes que comprobar un problema potencial antes,simplemente lo coges y luego lo tratas como quieras.</target>
        </trans-unit>
        <trans-unit id="3e1cf9886c47e1e013e2d292958f0c4fc9c660f8" translate="yes" xml:space="preserve">
          <source>Take a look at the new ECMAScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator&quot;&gt;Nullish coalescing operator&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Eche un vistazo al nuevo &lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador de fusi&amp;oacute;n nula&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ECMAScript&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="da4c6b16ed4767c5308a4aedae818deba724944a" translate="yes" xml:space="preserve">
          <source>The above checks if the Google translate function TranslateElement exists.  This is equivalent to:</source>
          <target state="translated">Lo anterior comprueba si la funci√≥n de traducci√≥n de Google TranslateElement existe.Esto es equivalente a:</target>
        </trans-unit>
        <trans-unit id="e5ff2cbe197fef2284b6e8808c8c6303d1793c46" translate="yes" xml:space="preserve">
          <source>The above list represents all possible &lt;code&gt;falsy&lt;/code&gt; values in ECMA-/Javascript. Find it in the &lt;a href=&quot;https://www.ecma-international.org/ecma-262/5.1/#sec-9.2&quot;&gt;specification&lt;/a&gt; at the &lt;code&gt;ToBoolean&lt;/code&gt; section.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La lista anterior representa todos los &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;valores &lt;/font&gt;&lt;/font&gt; &lt;code&gt;falsy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; posibles &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en ECMA- / Javascript. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Encu&amp;eacute;ntrelo en la &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/5.1/#sec-9.2&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;especificaci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;secci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ToBoolean&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="70f6f3cb90f34519554c5079417100207740f7bd" translate="yes" xml:space="preserve">
          <source>The first answer with best rating is wrong. If value is undefined it will throw an exception in modern browsers. You have to use:</source>
          <target state="translated">La primera respuesta con mejor calificaci√≥n es err√≥nea.Si el valor no est√° definido,har√° una excepci√≥n en los navegadores modernos.Tienes que usar:</target>
        </trans-unit>
        <trans-unit id="28a421c1d4f7f35561073780021f9eced74e68c5" translate="yes" xml:space="preserve">
          <source>The only exception is when &lt;code&gt;null&lt;/code&gt; is used to signify certain functionality. In this case it's meaningful to say: &quot;A vacuous value&quot;: &lt;code&gt;if (val === null) ...&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La &amp;uacute;nica excepci&amp;oacute;n es cuando &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se usa &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para indicar cierta funcionalidad. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En este caso es significativo decir: &quot;Un valor vac&amp;iacute;o&quot;: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;if (val === null) ...&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e8080254223cebebfb53bc215b3aefb40a547d84" translate="yes" xml:space="preserve">
          <source>The verbose method to check if value is undefined or null is:</source>
          <target state="translated">El m√©todo verboso para comprobar si el valor es indefinido o nulo lo es:</target>
        </trans-unit>
        <trans-unit id="508929b86b7d569363753acdc3e93b335473f03b" translate="yes" xml:space="preserve">
          <source>Then:    &lt;code&gt;isNullOrUndefined(this.yourVariableName)&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isNullOrUndefined(this.yourVariableName)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af9560ddd7c9fdab49a8993bfee9369670429f0a" translate="yes" xml:space="preserve">
          <source>There is also some discussion concerning &lt;code&gt;null&lt;/code&gt; vs &lt;code&gt;undefined&lt;/code&gt; - do we really need both in order to express vacuousness in our programs? I personally avoid ever having the letters u, n, d, e, f, i, n, e, d appear in my code in that order. I always use &lt;code&gt;null&lt;/code&gt; to signify &quot;vacuousness&quot;. Again, though, we need to accomodate javascript's inherent sense of how &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; differ:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n hay una discusi&amp;oacute;n sobre &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; vs &lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &amp;iquest;realmente necesitamos ambos para expresar vacuidad en nuestros programas? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Personalmente, evito que las letras u, n, d, e, f, i, n, e, d aparezcan en mi c&amp;oacute;digo en ese orden. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Siempre uso &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para significar &quot;vacuidad&quot;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una vez m&amp;aacute;s, sin embargo, necesitamos acomodar el sentido inherente de JavaScript de c&amp;oacute;mo &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;difieren &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; e &lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99d3da0b2664ca56c97b6b4db1bd7c59e22987a2" translate="yes" xml:space="preserve">
          <source>This condition check</source>
          <target state="translated">Esta comprobaci√≥n de la condici√≥n</target>
        </trans-unit>
        <trans-unit id="1925f53b3f1b2d08cae2bbbdfe86f7e97303262f" translate="yes" xml:space="preserve">
          <source>This is assuming &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;&quot;&quot;&lt;/code&gt;, and objects(even empty object and array) are valid &quot;values&quot;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto supone que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y los objetos (incluso el objeto y la matriz vac&amp;iacute;os) son &quot;valores&quot; v&amp;aacute;lidos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc4407a18af9e3cc5048baf2caffea1c83ff0dff" translate="yes" xml:space="preserve">
          <source>This is the safest check and I haven't seen it posted here exactly like that:</source>
          <target state="translated">Este es el cheque m√°s seguro y no he visto que se publique aqu√≠ exactamente as√≠:</target>
        </trans-unit>
        <trans-unit id="ef6b79d0aa583dfb431937c817c2e26e3e8e72de" translate="yes" xml:space="preserve">
          <source>This will check if variable of indeterminate nesting is undefined</source>
          <target state="translated">Esto comprobar√° si la variable de anidaci√≥n indeterminada no est√° definida</target>
        </trans-unit>
        <trans-unit id="329f2845591d134e5533e7ef6eda7fcb66ccbaa1" translate="yes" xml:space="preserve">
          <source>This will never throw an error. If &lt;em&gt;myObject&lt;/em&gt;, &lt;em&gt;child&lt;/em&gt;, or &lt;em&gt;myValue&lt;/em&gt; is null then &lt;em&gt;myNewValue&lt;/em&gt; will be null. No errors will be thrown</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto nunca arrojar&amp;aacute; un error. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;myObject&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;child&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;myValue&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es nulo, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;myNewValue&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ser&amp;aacute; nulo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No se arrojar&amp;aacute;n errores&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dfe29ec11ff872c5fe145cd656ee797e3a521889" translate="yes" xml:space="preserve">
          <source>This will return true for</source>
          <target state="translated">Esto volver√° a ser cierto para</target>
        </trans-unit>
        <trans-unit id="d754fe2cfbb89ff9ee963519c7f35d3e7b7a6fff" translate="yes" xml:space="preserve">
          <source>To disallow the latter category, you might want to just check for blank strings</source>
          <target state="translated">Para no permitir esta √∫ltima categor√≠a,puede que quieras comprobar si hay cuerdas en blanco...</target>
        </trans-unit>
        <trans-unit id="8159eba89e9088a0a271bf8b3caa23e0c119eece" translate="yes" xml:space="preserve">
          <source>Truthiness/Falsiness</source>
          <target state="translated">Truthiness/Falsiness</target>
        </trans-unit>
        <trans-unit id="11564f7ce553dd9ec48bf6c7fe8467df48096dd2" translate="yes" xml:space="preserve">
          <source>Trying to access a non-existent property gives &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Intentar acceder a una propiedad inexistente da &lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f345cb814fda685c842e036b2864f13af47eb17" translate="yes" xml:space="preserve">
          <source>Vacuousness</source>
          <target state="translated">Vacuousness</target>
        </trans-unit>
        <trans-unit id="da52d19bc4aaad5d5511b208250615d47fcbf3fe" translate="yes" xml:space="preserve">
          <source>You are a bit overdoing it. To check if a variable is not given a value, you would only need to check against undefined and null.</source>
          <target state="translated">Te est√°s pasando un poco.Para comprobar si a una variable no se le da un valor,s√≥lo habr√≠a que comprobar si est√° indefinida y es nula.</target>
        </trans-unit>
        <trans-unit id="a39cb36155bb42419f767e3ceceb9929bb73c002" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;==&lt;/code&gt; operator but this expects one to &lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3&quot;&gt;know all the rules&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n puede usar el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador &lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; pero esto espera que uno &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;conozca todas las reglas&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6cc113b627080019d2dfcdef53e3fa8ce2d95f96" translate="yes" xml:space="preserve">
          <source>You can directly use the equality operator</source>
          <target state="translated">Puedes usar directamente el operador de igualdad</target>
        </trans-unit>
        <trans-unit id="6a58fa965782c6d35a3060ee72b61a95ddc748cd" translate="yes" xml:space="preserve">
          <source>You can just check if the &lt;em&gt;variable&lt;/em&gt; has a &lt;code&gt;truthy&lt;/code&gt; value or not. That means</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede verificar si la &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;variable&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tiene un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;valor &lt;/font&gt;&lt;/font&gt; &lt;code&gt;truthy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o no. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Eso significa&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4b7e2c410c789ed44562d19f03bb7206e6a3873b" translate="yes" xml:space="preserve">
          <source>You can think of this feature - the &lt;code&gt;??&lt;/code&gt; operator - as a way to &amp;ldquo;fall back&amp;rdquo; to a default value when dealing with &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puedes pensar en esta caracter&amp;iacute;stica: el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;??&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador: como una forma de &quot;retroceder&quot; a un valor predeterminado cuando se trata de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="26bc10fae107c6ba2d5ea95e3d7d061bf8ed65bf" translate="yes" xml:space="preserve">
          <source>You may find the following function useful:</source>
          <target state="translated">La siguiente funci√≥n puede serle √∫til:</target>
        </trans-unit>
        <trans-unit id="f7be9dbfaae12cd4265484687ee28239733c7511" translate="yes" xml:space="preserve">
          <source>You would go about it this way:</source>
          <target state="translated">Lo har√≠as de esta manera:</target>
        </trans-unit>
        <trans-unit id="9ed718b5f527b6b9401da5fc542aa9838fd9c6e0" translate="yes" xml:space="preserve">
          <source>and zero argument functions since a function's &lt;code&gt;length&lt;/code&gt; is the number of declared parameters it takes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;y funciones de argumento cero ya que la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;length&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; una funci&amp;oacute;n &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;es el n&amp;uacute;mero de par&amp;aacute;metros declarados que toma.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bc3b55348929803039245aac12fa5c8f91c60425" translate="yes" xml:space="preserve">
          <source>but this solution is over-engineered, if you dont'want to modify the function later for busines-model needings, then is cleaner to use it directly in code:</source>
          <target state="translated">pero esta soluci√≥n est√° sobre-dise√±ada,si no quieres modificar la funci√≥n m√°s tarde por necesidades de modelos de negocios,entonces es m√°s limpio usarla directamente en c√≥digo:</target>
        </trans-unit>
        <trans-unit id="dc04ca07669cf1405287c1a2ef866441eac3bd2e" translate="yes" xml:space="preserve">
          <source>check Result:</source>
          <target state="translated">comprobar el resultado:</target>
        </trans-unit>
        <trans-unit id="26e64404abdf6fe5895179c50a3224b4ac22e668" translate="yes" xml:space="preserve">
          <source>demo @ &lt;a href=&quot;http://www.jquerypot.com/how-to-determine-if-variable-is-undefined-or-null-using-javascript/&quot;&gt;How to determine if variable is undefined or null using JavaScript&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;demo @ &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.jquerypot.com/how-to-determine-if-variable-is-undefined-or-null-using-javascript/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C&amp;oacute;mo determinar si la variable es indefinida o nula usando JavaScript&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b36564f662b53fb5827d36dee56422a88cdde9ca" translate="yes" xml:space="preserve">
          <source>empty string (&quot;&quot;)</source>
          <target state="translated">cadena vac√≠a (&quot;&quot;)</target>
        </trans-unit>
        <trans-unit id="7cb6efb98ba5972a9b5090dc2e517fe14d12cb04" translate="yes" xml:space="preserve">
          <source>false</source>
          <target state="translated">false</target>
        </trans-unit>
        <trans-unit id="7e9f95bb15dac3fec02e276208c6b0c687abd968" translate="yes" xml:space="preserve">
          <source>if you want to test if foo has been declared and it has a value you can use</source>
          <target state="translated">si quieres comprobar si el foo ha sido declarado y tiene un valor que puedes usar</target>
        </trans-unit>
        <trans-unit id="c1ee7046d37580a4ed8695e10a4ac58000f69004" translate="yes" xml:space="preserve">
          <source>is a really nice and clean way to handle it in a lot of places, can also be used to assign variables</source>
          <target state="translated">es una forma muy agradable y limpia de manejarlo en muchos lugares,tambi√©n puede ser usado para asignar variables</target>
        </trans-unit>
        <trans-unit id="08925168d3067858aa2c1ad04f858b2c521afb42" translate="yes" xml:space="preserve">
          <source>is all you need.</source>
          <target state="translated">es todo lo que necesitas.</target>
        </trans-unit>
        <trans-unit id="2be88ca4242c76e8253ac62474851065032d6833" translate="yes" xml:space="preserve">
          <source>null</source>
          <target state="translated">null</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="39e5bd50efa836688badb3225202a7ae9ce4661f" translate="yes" xml:space="preserve">
          <source>this function will return true if &lt;strong&gt;val&lt;/strong&gt; is &lt;strong&gt;empty, null, undefined, false, the number 0 or NaN&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;esta funci&amp;oacute;n devolver&amp;aacute; verdadero si &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;val&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; est&amp;aacute; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;vac&amp;iacute;o, nulo, indefinido, falso, el n&amp;uacute;mero 0 o NaN&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d5d4cd07616a542891b7ec2d0257b3a24b69856e" translate="yes" xml:space="preserve">
          <source>undefined</source>
          <target state="translated">undefined</target>
        </trans-unit>
        <trans-unit id="050b112cf2168a56a75779093ee7510f5ab248c1" translate="yes" xml:space="preserve">
          <source>undefined (value of undefined is not the same as a parameter that was never defined)</source>
          <target state="translated">indefinido (el valor de indefinido no es el mismo que el de un par√°metro que nunca fue definido)</target>
        </trans-unit>
        <trans-unit id="6bb06e3230e88243d801d0262029cd6ee9eecb6a" translate="yes" xml:space="preserve">
          <source>using instansof &amp;laquo;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;usando instansof &amp;laquo;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d99b4d3e47d5b019694e82c228dad1cef2658b56" translate="yes" xml:space="preserve">
          <source>will evaluate to &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;value&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se evaluar&amp;aacute; como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; si el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
