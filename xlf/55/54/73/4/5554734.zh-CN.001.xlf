<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/5554734">
    <body>
      <group id="5554734">
        <trans-unit id="16594450c3726674bd011602716db80f8cdbd94e" translate="yes" xml:space="preserve">
          <source>(That's assuming you &lt;em&gt;need&lt;/em&gt; the index, of course. If you can use the enhanced for loop instead, do so.)</source>
          <target state="translated">（当然，这是假设您&lt;em&gt;需要&lt;/em&gt;索引的。如果可以使用增强的for循环，请这样做。）</target>
        </trans-unit>
        <trans-unit id="6516a73bbe4ca55dd14d53fab720365de10f1a6f" translate="yes" xml:space="preserve">
          <source>...is equivalent to this:</source>
          <target state="translated">...就相当于这个。</target>
        </trans-unit>
        <trans-unit id="545450d9339ddec2c304ff6d24c4a04a3daea1d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; happens when you are trying to access 
the name.length indexed element which does not exist (array index ends at  length -1). just replacing &amp;lt;= with &amp;lt; would solve this problem.</source>
          <target state="translated">当您尝试访问不存在的name.length索引元素（数组索引以长度-1结尾）时，发生 &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; 。 只需将&amp;lt;=替换为&amp;lt;即可解决此问题。</target>
        </trans-unit>
        <trans-unit id="b0b8123e1eed02a96f007d0528bf878a0f5d9402" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; means that you are trying to access an index of the array that does not exist or out of the bound of this array. Array indexes start from &lt;strong&gt;0&lt;/strong&gt; and end at &lt;strong&gt;length - 1&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; 表示您正在尝试访问不存在或超出此数组范围的数组索引。 数组索引从&lt;strong&gt;0&lt;/strong&gt;开始，以&lt;strong&gt;长度-1&lt;/strong&gt;结束。</target>
        </trans-unit>
        <trans-unit id="731150e732491db3c4df70729a7a5f18a9b55573" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; name itself explains that If you trying to access the value at the index which is out of the scope of Array size then such kind of exception occur.</source>
          <target state="translated">&lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; 名称本身说明，如果您尝试访问超出数组大小范围的索引处的值，则会发生此类异常。</target>
        </trans-unit>
        <trans-unit id="b6ee2e15e862034ced88745bf49e41e848a54a25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt; will equal &lt;code&gt;name.length&lt;/code&gt; which is an illegal index, since array indices are zero-based.</source>
          <target state="translated">&lt;code&gt;i&lt;/code&gt; 将等于 &lt;code&gt;name.length&lt;/code&gt; 这是一个非法索引，因为数组索引是从零开始的。</target>
        </trans-unit>
        <trans-unit id="432f3d4ef18867a1ee3c381d881c8576c7b849c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Answer&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Answer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a29842915cfca437631b773d017d5683be87733a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For any array of length n, elements of the array will have an index from 0 to n-1.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;对于任何长度为n的数组，该数组的元素将具有从0到n-1的索引。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fdc05330aee07b7f41f89160b83214641748bf1d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How to avoid &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;如何避免 &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ddc274fb7573a41af358385d0d087e2a09464225" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Looping&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Looping&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2bfb54ba65a32d2ea2bc218a0ccd1567275e71d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Retrieval/update&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Retrieval/update&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4ca86611198d114a82f693be084e2b546c17702a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt;: as per your code snippet,</source>
          <target state="translated">&lt;strong&gt;更新&lt;/strong&gt; ：根据您的代码段，</target>
        </trans-unit>
        <trans-unit id="93e19cd6bb228ea2c695b8788bc26ff502add395" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What causes &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt;?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;是什么导致 &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; ？&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="713db13db93a08bc0b1605a9050b08a2d578335f" translate="yes" xml:space="preserve">
          <source>A better way go with a for each loop, in this method a programmer has no need to bother about the number of elements in the array.</source>
          <target state="translated">一个更好的方法是用一个for每一个循环,在这个方法中,程序员不需要在意数组中的元素数量。</target>
        </trans-unit>
        <trans-unit id="30635023570369a783cb507b93fbabdf13edf47c" translate="yes" xml:space="preserve">
          <source>According to your Code :</source>
          <target state="translated">根据你的代码。</target>
        </trans-unit>
        <trans-unit id="71d87418d789a2d412998c248263f18a4fa4759f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; is caused by trying to retrive a &quot;box&quot; that does not exist, by passing an index that is higher than the index of last &quot;box&quot;, or negative.</source>
          <target state="translated">&lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; 是通过尝试检索不存在的&amp;ldquo;框&amp;rdquo;，通过传递比上一个&amp;ldquo;框&amp;rdquo;的索引高或为负的索引引起的。</target>
        </trans-unit>
        <trans-unit id="3efe569caa47b66aeea4bf938aaada4115336370" translate="yes" xml:space="preserve">
          <source>Any array X, can be accessed from [0 to (X.length - 1)]</source>
          <target state="translated">任何数组X,可以从[0到(X.length-1)]中访问。</target>
        </trans-unit>
        <trans-unit id="3a6c16364c90e124900fbd48f8e756be74cf25e7" translate="yes" xml:space="preserve">
          <source>Any integer equal to the length of the array, or bigger than it: is out of bounds.</source>
          <target state="translated">任何等于数组长度的整数,或者大于该数组长度的整数:都是不受限制的。</target>
        </trans-unit>
        <trans-unit id="bc43cad5e204b3730814fadd07365e1fcfa0cf9c" translate="yes" xml:space="preserve">
          <source>Any integer less than 0: is out of bounds;</source>
          <target state="translated">小于0的任何整数:都是不受限制的。</target>
        </trans-unit>
        <trans-unit id="198d363ac64c8105d609efc6c1f685748c30e957" translate="yes" xml:space="preserve">
          <source>ArrayIndexOutOfBounds means you are trying to index a position within an array that is not allocated.</source>
          <target state="translated">ArrayIndexOutOfBounds表示您正在尝试在数组中的一个未分配的位置进行索引。</target>
        </trans-unit>
        <trans-unit id="a20631717304183b79ddf7a99f3341be04973146" translate="yes" xml:space="preserve">
          <source>ArrayIndexOutOfBoundsException whenever this exception is coming it mean you are trying to use an index of array which is out of its bounds or in lay man terms you are requesting more than than you have initialised.</source>
          <target state="translated">ArrayIndexOutOfBoundsException,当这个异常出现时,意味着你试图使用一个数组的索引超出了它的范围,或者用通俗的说法,你请求的数组的索引超过了你初始化的范围。</target>
        </trans-unit>
        <trans-unit id="8d5c7efe24f948ceed100b000d15f78be9d0df28" translate="yes" xml:space="preserve">
          <source>As for how to avoid it... um, don't do that. Be careful with your array indexes.</source>
          <target state="translated">至于如何避免...........嗯,不要这样做。小心你的数组索引。</target>
        </trans-unit>
        <trans-unit id="4ecb0d232c31560b99f33cc2f9b21da2193025be" translate="yes" xml:space="preserve">
          <source>At first, I have initialized an array as 'numberArray'. then , some array elements are printed using for loop. When loop is running 'i' time , print the (numberArray[i+1] element..(when i value is 1, numberArray[i+1] element is printed.)..Suppose that, when i=(numberArray.length-2), last element of array is printed..When 'i' value goes to (numberArray.length-1) , no value for printing..In that point , 'ArrayIndexOutOfBoundsException' is occur.I hope to you could get idea.thank you !</source>
          <target state="translated">起初,我将一个数组初始化为'numberArray',然后,使用for循环打印一些数组元素。当循环运行'i'时,打印出(numberArray[i+1]元素....(当i值为1时,打印出numberArray[i+1]元素....)....假设当i=(numberArray.length-2)时,打印出数组的最后一个元素...当i值到(numberArray.length-1)时,没有值打印...这时,会出现'ArrayIndexOutofBoundsException',希望大家能理解,谢谢!</target>
        </trans-unit>
        <trans-unit id="7a23c130dca814008f0011623011b3397b672e20" translate="yes" xml:space="preserve">
          <source>Convert array to stream - this is a good option if you want to perform additional 'operations' to your array e.g. filter, transform the text, convert to a map etc (requires Java8)</source>
          <target state="translated">将数组转换为流-如果你想对数组进行额外的 &quot;操作&quot;,如过滤、转换文本、转换为地图等,这是一个很好的选择(需要Java8)。</target>
        </trans-unit>
        <trans-unit id="03197ab619246c2a04f5d7d20eb40c98306c3fcb" translate="yes" xml:space="preserve">
          <source>Creating an array like this:</source>
          <target state="translated">创建一个像这样的数组。</target>
        </trans-unit>
        <trans-unit id="e6d03af92f73ffc028d75940c7ceeec3b8645755" translate="yes" xml:space="preserve">
          <source>Each dimension has a different length, so the subtle bug is that the middle and inner loops use the &lt;code&gt;length&lt;/code&gt; property of the same dimension (because &lt;code&gt;a[i].length&lt;/code&gt; is the same as &lt;code&gt;a[j].length&lt;/code&gt;).</source>
          <target state="translated">每个维度都有不同的长度，因此一个细微的错误是，中间和内部循环使用相同维度的 &lt;code&gt;length&lt;/code&gt; 属性（因为 &lt;code&gt;a[i].length&lt;/code&gt; 与 &lt;code&gt;a[j].length&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a3ff3ebaff133add77dd19074c17420bafbe4af4" translate="yes" xml:space="preserve">
          <source>Each item in an array is called an element, and each element is accessed by its numerical index. As shown in the preceding illustration, &lt;strong&gt;numbering begins with 0&lt;/strong&gt;. The 9th element, for example, would therefore be accessed at index 8.</source>
          <target state="translated">数组中的每个项目都称为一个元素，每个元素都可以通过其数字索引进行访问。 如上图所示， &lt;strong&gt;编号从0开始&lt;/strong&gt; 。 例如，第9个元素因此将在索引8处访问。</target>
        </trans-unit>
        <trans-unit id="0b322e1d0d89c964163237c8679058109771d3df" translate="yes" xml:space="preserve">
          <source>Even while using a &lt;code&gt;for&lt;/code&gt; loop you have started with index zero and you should end with &lt;code&gt;name.length - 1&lt;/code&gt;. In an array a[n] you can access form a[0] to a[n-1].</source>
          <target state="translated">即使在使用 &lt;code&gt;for&lt;/code&gt; 循环时，您也从索引0开始，并且应该以 &lt;code&gt;name.length - 1&lt;/code&gt; 结尾。 在数组a [n]中，您可以访问形式a [0]到a [n-1]。</target>
        </trans-unit>
        <trans-unit id="e9f3c55b138e02127e460df4476fef81199a9fa0" translate="yes" xml:space="preserve">
          <source>For example this would initialize a primitive integer array with the upper bound 4.</source>
          <target state="translated">例如这将初始化一个上界为4的原始整数组。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="cff8bdc9658d474e26987de3b23379c579ccf94c" translate="yes" xml:space="preserve">
          <source>For multidimensional arrays, it can be tricky to make sure you access the &lt;code&gt;length&lt;/code&gt; property of the right dimension. Take the following code for example:</source>
          <target state="translated">对于多维数组，确保访问正确维的 &lt;code&gt;length&lt;/code&gt; 属性可能很棘手。 以以下代码为例：</target>
        </trans-unit>
        <trans-unit id="5f685b62af5c06c94e1d8f3ee7cb8850a4a519bf" translate="yes" xml:space="preserve">
          <source>For your given array the length of the array is 3(i.e. name.length = 3). But as it stores element starting from index 0, it has max index 2.</source>
          <target state="translated">对于你给定的数组,数组的长度是3(即name.length=3)。但由于它存储的元素从索引0开始,所以最大索引为2。</target>
        </trans-unit>
        <trans-unit id="06b67ed96c3a79e858c3523303813ec26cece44d" translate="yes" xml:space="preserve">
          <source>From this excellent article: &lt;a href=&quot;https://programming.guide/java/arrayindexoutofboundsexception-in-for-loop.html&quot;&gt;ArrayIndexOutOfBoundsException in for loop&lt;/a&gt;</source>
          <target state="translated">摘自这篇出色的文章： &lt;a href=&quot;https://programming.guide/java/arrayindexoutofboundsexception-in-for-loop.html&quot;&gt;for循环中的ArrayIndexOutOfBoundsException&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1dc311ad922efe2a4999e58497522f8934a6ed17" translate="yes" xml:space="preserve">
          <source>Here is a code sample that triggers the exception:</source>
          <target state="translated">下面是一个触发异常的代码示例。</target>
        </trans-unit>
        <trans-unit id="5e8a4ea1a2e15d1a576f7ba4e06e76c18d333a38" translate="yes" xml:space="preserve">
          <source>I see all the answers here explaining how to work with arrays and how to avoid the index out of bounds exceptions.  I personally avoid arrays at all costs.  I use the Collections classes, which avoids all the silliness of having to deal with array indices entirely.  The looping constructs work beautifully with collections supporting code that is both easier to write, understand and maintain.</source>
          <target state="translated">我看到这里所有的答案都是解释如何处理数组,以及如何避免索引越界异常。我个人是不惜一切代价避免使用数组。我使用的是Collections类,这就避免了完全处理数组索引的所有傻事。循环构造与Collection类配合使用,效果非常好,支持的代码更容易写,更容易理解和维护。</target>
        </trans-unit>
        <trans-unit id="5b9a600098aa25c886463a10080dca1a70ae37df" translate="yes" xml:space="preserve">
          <source>If You check
System.out.print(name.length);</source>
          <target state="translated">如果你检查System.out.print(name.length)。</target>
        </trans-unit>
        <trans-unit id="ec76e7dd22a0744a8ea2b5cb0e1991648d732a53" translate="yes" xml:space="preserve">
          <source>If an array has a length of 1,</source>
          <target state="translated">如果一个数组的长度为1。</target>
        </trans-unit>
        <trans-unit id="1355ab2ef7ede216e9860be7a1e76c2d2634e5ed" translate="yes" xml:space="preserve">
          <source>If two threads enter the SimplateDateFormat.parse() method together you will likely see an ArrayIndexOutOfBoundsException. Note the synchronization section of the &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html&quot;&gt;class javadoc for SimpleDateFormat&lt;/a&gt;.</source>
          <target state="translated">如果两个线程一起输入SimplateDateFormat.parse（）方法，则可能会看到ArrayIndexOutOfBoundsException。 注意&lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html&quot;&gt;SimpleDateFormat的javadoc类&lt;/a&gt;的同步部分。</target>
        </trans-unit>
        <trans-unit id="a65e545062bdbc57b6ee2dd22cd4d60ac011e9d3" translate="yes" xml:space="preserve">
          <source>If you think of a variable as a &quot;box&quot; where you can place a value, then an array is a series of boxes placed next to eachother, where the number of boxes is a finite and explicit integer.</source>
          <target state="translated">如果你把一个变量看成是一个 &quot;盒子&quot;,可以在其中放置一个值,那么数组就是一系列相邻放置的盒子,其中盒子的数量是一个有限的显式整数。</target>
        </trans-unit>
        <trans-unit id="9ca75b5c8022318262352987b6a6876f13f10a8d" translate="yes" xml:space="preserve">
          <source>If you use an array's length to control iteration of a &lt;strong&gt;for&lt;/strong&gt; loop, always remember that the index of the first item in an array is &lt;strong&gt;0&lt;/strong&gt;. So the index of the last element in an array is one less than the array's length.</source>
          <target state="translated">如果使用数组的长度来控制&lt;strong&gt;for&lt;/strong&gt;循环的迭代，请始终记住数组中第一项的索引为&lt;strong&gt;0&lt;/strong&gt; 。 因此，数组中最后一个元素的索引比数组的长度小一个。</target>
        </trans-unit>
        <trans-unit id="62cecc743239393a0f6a2284e02b3a2531bae2bb" translate="yes" xml:space="preserve">
          <source>If your program is trying to access any element (or memory) having array index greater than n-1, then Java will throw &lt;strong&gt;ArrayIndexOutOfBoundsException&lt;/strong&gt;</source>
          <target state="translated">如果您的程序试图访问数组索引大于n-1的任何元素（或内存），则Java将抛出&lt;strong&gt;ArrayIndexOutOfBoundsException&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="47936e5bdf1c92242d0ac95c6abc8cf87d2b159c" translate="yes" xml:space="preserve">
          <source>In order to prevent &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt;, there are some key points to consider:</source>
          <target state="translated">为了防止 &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; ，需要考虑一些关键点：</target>
        </trans-unit>
        <trans-unit id="2c027a1a6feeaa2dceb81573369730200a57c8cd" translate="yes" xml:space="preserve">
          <source>In the last iteration of</source>
          <target state="translated">在上一次迭代的</target>
        </trans-unit>
        <trans-unit id="76df916b62840bf387c4d5f679f0bb56b6c112cd" translate="yes" xml:space="preserve">
          <source>In this case:</source>
          <target state="translated">在这种情况下。</target>
        </trans-unit>
        <trans-unit id="e8166ca7be8d189caed257b3d67713c1e52b9fb6" translate="yes" xml:space="preserve">
          <source>In your case</source>
          <target state="translated">在你的情况下</target>
        </trans-unit>
        <trans-unit id="bace5a1fd6d0cb37fe4432690edce7d3270c59d1" translate="yes" xml:space="preserve">
          <source>In your case, You can just remove equal sign from your for loop.</source>
          <target state="translated">在你的情况下,你可以直接把等号从你的for循环中删除。</target>
        </trans-unit>
        <trans-unit id="1d47196eb5bef5acc41ee14bd59c0bcf6ce1ec2f" translate="yes" xml:space="preserve">
          <source>In your case:</source>
          <target state="translated">在你的情况下。</target>
        </trans-unit>
        <trans-unit id="a5a5252322ab332863617744dbdfb6dbda144e6e" translate="yes" xml:space="preserve">
          <source>In your code you have accessed the elements from index 0 to the length of the string array. &lt;code&gt;name.length&lt;/code&gt; gives the number of string objects in your array of string objects i.e. 3, but you can access only up to index 2 &lt;code&gt;name[2]&lt;/code&gt;,
because the array can be accessed from index 0 to &lt;code&gt;name.length - 1&lt;/code&gt; where you get &lt;code&gt;name.length&lt;/code&gt; number of objects.</source>
          <target state="translated">在您的代码中，您已经访问了从索引0到字符串数组长度的元素。 &lt;code&gt;name.length&lt;/code&gt; 给出了字符串对象数组中字符串对象的数量，即3，但是您最多只能访问索引2 &lt;code&gt;name[2]&lt;/code&gt; ，因为可以从索引0到 &lt;code&gt;name.length - 1&lt;/code&gt; 访问数组。 &lt;code&gt;name.length&lt;/code&gt; 个对象。</target>
        </trans-unit>
        <trans-unit id="8e098b941bd75b2af22ea4a65712789bfbcbd392" translate="yes" xml:space="preserve">
          <source>In your for loop, you can do i &amp;lt; name.length. This would prevent looping to name[3] and would instead stop at name[2]</source>
          <target state="translated">在您的for循环中，您可以i &amp;lt;name.length。 这将防止循环到名称[3]，而是停在名称[2]</target>
        </trans-unit>
        <trans-unit id="93565e594ec50b9f54dbd3a5a28c81a9b9b30af0" translate="yes" xml:space="preserve">
          <source>IndexOutOfBoundsException is thrown to indicate that an index of some sort (such as to an array, to a string, or to a vector) is out of range.</source>
          <target state="translated">IndexOutOfBoundsException被抛出,用于表示某种类型的索引(例如数组、字符串或向量)超出了范围。</target>
        </trans-unit>
        <trans-unit id="3d4b9d4a233899624d9b4d080cbe4ff35b2db759" translate="yes" xml:space="preserve">
          <source>Instead, the inner loop should use &lt;code&gt;a[i][j].length&lt;/code&gt; (or &lt;code&gt;a[0][0].length&lt;/code&gt;, for simplicity).</source>
          <target state="translated">相反，内部循环应使用 &lt;code&gt;a[i][j].length&lt;/code&gt; （或为简单起见，使用 &lt;code&gt;a[0][0].length&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="aa866da724c0b805352d5bc22bdcbf23001a1f3a" translate="yes" xml:space="preserve">
          <source>It means that you are trying to access an index of an array which is not valid as it is not in between the bounds.</source>
          <target state="translated">这意味着你正在尝试访问一个数组的索引,而这个索引是无效的,因为它不在边界之间。</target>
        </trans-unit>
        <trans-unit id="4e5939db25e078784604ea0adf0a01396afb0868" translate="yes" xml:space="preserve">
          <source>It's defined in the &lt;a href=&quot;http://docs.oracle.com/javase/specs/jls/se7/html/jls-10.html#jls-10.7&quot;&gt;Java language specification&lt;/a&gt;:</source>
          <target state="translated">它在&lt;a href=&quot;http://docs.oracle.com/javase/specs/jls/se7/html/jls-10.html#jls-10.7&quot;&gt;Java语言规范中&lt;/a&gt;定义：</target>
        </trans-unit>
        <trans-unit id="341c828fdb39a0fd7b4589aeec511cd085b1f4e8" translate="yes" xml:space="preserve">
          <source>Just don't. Stick to the one above (if you need to use the index) and it will save you a lot of pain.</source>
          <target state="translated">就是不要用。坚持上面的那个(如果你需要用指数的话),会让你省去很多痛苦。</target>
        </trans-unit>
        <trans-unit id="29fe7a64d9dd63464322b1d11eac639ff11cf5c3" translate="yes" xml:space="preserve">
          <source>Maintaining count:</source>
          <target state="translated">维持计数。</target>
        </trans-unit>
        <trans-unit id="8bd3565c2f0f54ba38218096ad4fb12f600e3c50" translate="yes" xml:space="preserve">
          <source>Make sure there is no place in your code that are accessing thread unsafe classes like SimpleDateFormat in a concurrent manner like in a servlet or controller. Check all instance variables of your servlets and controllers for likely suspects.</source>
          <target state="translated">确保你的代码中没有像servlet或控制器那样以并发的方式访问线程不安全类(如SimpleDateFormat)的地方。检查你的servlet和控制器的所有实例变量是否有可能的嫌疑。</target>
        </trans-unit>
        <trans-unit id="9cf0d412274e9e46811d2f84ac45eb6b1855e1cd" translate="yes" xml:space="preserve">
          <source>Notice the &lt;code&gt;&amp;lt;&lt;/code&gt;, never mix a &lt;code&gt;=&lt;/code&gt; in there..</source>
          <target state="translated">请注意 &lt;code&gt;&amp;lt;&lt;/code&gt; ，切勿在其中混入 &lt;code&gt;=&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b082cab151ecf134fb9b471ea328fc251f75866b" translate="yes" xml:space="preserve">
          <source>One problem people sometimes run into is thinking that arrays are 1-indexed, e.g.</source>
          <target state="translated">人们有时会遇到一个问题,那就是认为数组是单索引的,比如说</target>
        </trans-unit>
        <trans-unit id="1170a5f96f19ba178c90251f3fff85abf9d27869" translate="yes" xml:space="preserve">
          <source>Or some other looping statement like</source>
          <target state="translated">或者其他一些循环语句,如</target>
        </trans-unit>
        <trans-unit id="2a55f1def49ba2cf28edd04aebe0ae914d6adc01" translate="yes" xml:space="preserve">
          <source>Or this:</source>
          <target state="translated">或者是这样的。</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="74d424b8016ed205af0865c29c968d17098b8f8d" translate="yes" xml:space="preserve">
          <source>P.S.: If you look to have a better understanding of arrays and do some practical exercises, there's a video here: &lt;a href=&quot;https://www.youtube.com/watch?v=k1i42DMrcMk&quot;&gt;tutorial on arrays in Java&lt;/a&gt;</source>
          <target state="translated">PS：如果您希望对数组有更好的了解并进行一些实际练习，请在此处观看视频： &lt;a href=&quot;https://www.youtube.com/watch?v=k1i42DMrcMk&quot;&gt;Java数组教程&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da0083fa6318625deda9a300827d509bb4c74ab3" translate="yes" xml:space="preserve">
          <source>Programmers count from zero. So this for example would throw an &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; as the upper bound is 4 and not 5.</source>
          <target state="translated">程序员从零开始计数。 因此，例如，由于上限为4而不是5，因此将抛出 &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e601093530ccbc180c35f809030a5f181c80fca6" translate="yes" xml:space="preserve">
          <source>Resolved code:</source>
          <target state="translated">已解决的代码:</target>
        </trans-unit>
        <trans-unit id="371a87eafb4de078ff674d69a5a89c186532eb49" translate="yes" xml:space="preserve">
          <source>See also:</source>
          <target state="translated">也见。</target>
        </trans-unit>
        <trans-unit id="514e733a57a3a645ff247b1f4ca5b2518a55570b" translate="yes" xml:space="preserve">
          <source>So for example:</source>
          <target state="translated">所以举例来说。</target>
        </trans-unit>
        <trans-unit id="2671ad4099c67f3fb6bf6039351783be03a56a38" translate="yes" xml:space="preserve">
          <source>So here are two solutions that we can use in a program</source>
          <target state="translated">所以这里有两种解决方案,我们可以在程序中使用</target>
        </trans-unit>
        <trans-unit id="eb77b8cfb17010be505ad83effe7f5f234b9802c" translate="yes" xml:space="preserve">
          <source>So much for this simple question, but I just wanted to highlight a new feature in Java which will avoid all confusions around indexing in arrays even for beginners. Java-8 has abstracted the task of iterating for you.</source>
          <target state="translated">这个简单的问题说了这么多,但我只是想强调一下Java中的一个新功能,它将避免所有围绕着数组中的索引的困惑,即使对于初学者来说也是如此。Java-8已经为你抽象化了迭代的任务。</target>
        </trans-unit>
        <trans-unit id="de534f475445cbb66be5bf98ef2979a8450af9ba" translate="yes" xml:space="preserve">
          <source>So, instead of  'i**&amp;lt;=&lt;strong&gt;name.length' you should write 'i&lt;/strong&gt;&amp;lt;**name.length' to avoid 'ArrayIndexOutOfBoundsException'.</source>
          <target state="translated">因此， &lt;strong&gt;应该写'i&lt;/strong&gt; &amp;lt;** name.length'而不是'i ** &amp;lt;= &lt;strong&gt;name.length'，&lt;/strong&gt;以避免'ArrayIndexOutOfBoundsException'。</target>
        </trans-unit>
        <trans-unit id="dba3cae94d302fc1902f69f418e5e3ead09b4a2a" translate="yes" xml:space="preserve">
          <source>That will miss out the first element (index 0) and throw an exception when index is 5. The valid indexes here are 0-4 inclusive. The correct, idiomatic &lt;code&gt;for&lt;/code&gt; statement here would be:</source>
          <target state="translated">这将错过第一个元素（索引0）并在index为5时引发异常。此处的有效索引为0-4（含0和4）。 正确的，惯用 &lt;code&gt;for&lt;/code&gt; 说法是：</target>
        </trans-unit>
        <trans-unit id="61161f7c102891bab75d2ee987cf4edd7e8ca602" translate="yes" xml:space="preserve">
          <source>That's how this type of exception looks when thrown in Eclipse. The number in red signifies the index you tried to access. So the code would look like this:</source>
          <target state="translated">这就是Eclipse中抛出这种类型的异常时的样子。红色的数字表示你试图访问的索引。所以代码看起来是这样的。</target>
        </trans-unit>
        <trans-unit id="90fee4238e0b2767081496845488c8830d9ac8ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;public final&lt;/code&gt; field &lt;code&gt;length&lt;/code&gt;, which contains the number of components
  of the array. &lt;code&gt;length&lt;/code&gt; may be positive or zero.</source>
          <target state="translated">&lt;code&gt;public final&lt;/code&gt; 字段 &lt;code&gt;length&lt;/code&gt; ，其中包含数组的组件数。 &lt;code&gt;length&lt;/code&gt; 可以是正数或零。</target>
        </trans-unit>
        <trans-unit id="a0dcc5f252034590b4d611d5fd41235e75f48cc4" translate="yes" xml:space="preserve">
          <source>The Java Tutorials - Language Basics - Arrays</source>
          <target state="translated">Java教程-语言基础知识-数组</target>
        </trans-unit>
        <trans-unit id="0a1f91989d1958ef347778d95981df2ded2686c6" translate="yes" xml:space="preserve">
          <source>The better option is to iterate an array:</source>
          <target state="translated">最好的选择是迭代一个数组。</target>
        </trans-unit>
        <trans-unit id="5923c9124eeb896929580854886ecfff7220679f" translate="yes" xml:space="preserve">
          <source>The code below:</source>
          <target state="translated">下面的代码。</target>
        </trans-unit>
        <trans-unit id="8e291ebe6122fbb69695ab0aecb4fa8b043402e3" translate="yes" xml:space="preserve">
          <source>The error is thrown when you try to access an index which doesn't exist in that array. If an array has a length of 3,</source>
          <target state="translated">当你试图访问一个数组中不存在的索引时,会抛出这个错误。如果一个数组的长度为3。</target>
        </trans-unit>
        <trans-unit id="79bd00a63f3fe886beabfa3ec2d290a31a4a24f5" translate="yes" xml:space="preserve">
          <source>The index is inclusive the array's length. This is out of bounds. You need to replace &lt;code&gt;&amp;lt;=&lt;/code&gt; by &lt;code&gt;&amp;lt;&lt;/code&gt;.</source>
          <target state="translated">索引包括数组的长度。 这是超出范围的。 您需要将 &lt;code&gt;&amp;lt;=&lt;/code&gt; 替换为 &lt;code&gt;&amp;lt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3b86c42f7b65cda21c39234fdc50273fe8a72add" translate="yes" xml:space="preserve">
          <source>The most common case I've seen for seemingly mysterious ArrayIndexOutOfBoundsExceptions, i.e. apparently not caused by your own array handling code, is the concurrent use of SimpleDateFormat. Particularly in a servlet or controller:</source>
          <target state="translated">我见过最常见的看似神秘的ArrayIndexOutOfBoundsExceptions的情况,也就是说,显然不是由你自己的数组处理代码引起的,是并发使用SimpleDateFormat。特别是在servlet或控制器中。</target>
        </trans-unit>
        <trans-unit id="216d5ae8ef7812ad765cb3f778364e7dcc029df5" translate="yes" xml:space="preserve">
          <source>The primary motivation (and use case) is when you are iterating and you do not require any complicated iteration steps.  You would &lt;em&gt;not&lt;/em&gt; be able to use an enhanced-&lt;code&gt;for&lt;/code&gt; to move backwards in an array or only iterate on every other element.</source>
          <target state="translated">主要动机（和用例）是当您进行迭代且不需要任何复杂的迭代步骤时。 您将&lt;em&gt;无法&lt;/em&gt;使用增强型 &lt;code&gt;for&lt;/code&gt; 在数组中向后移动或仅对每个其他元素进行迭代。</target>
        </trans-unit>
        <trans-unit id="be7b6b1d85813b94f871b784d296d789b425a07e" translate="yes" xml:space="preserve">
          <source>This error is occurs at runs loop  overlimit times.Let's consider simple example like this,</source>
          <target state="translated">这个错误是在运行循环超限时发生的。</target>
        </trans-unit>
        <trans-unit id="f414d0a29d407c114a4769c9a0f853da2159916b" translate="yes" xml:space="preserve">
          <source>This way you won't have to think about indexes at all.</source>
          <target state="translated">这样一来,你就完全不用考虑索引问题了。</target>
        </trans-unit>
        <trans-unit id="e638105227ffc56d46887520a9df3fe725ecf6bf" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an array has been accessed with an illegal index. The index is either negative or greater than or equal to the size of the array.</source>
          <target state="translated">抛出,表示一个数组被非法索引访问。该索引为负数或大于或等于数组的大小。</target>
        </trans-unit>
        <trans-unit id="e635d1635c6747a227108901a5ea556793a43148" translate="yes" xml:space="preserve">
          <source>To avoid an array index out-of-bounds exception, one should use the &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/nutsandbolts/for.html&quot;&gt;enhanced-&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; statement where and when they can.</source>
          <target state="translated">为避免数组索引越界异常，应在可能的地方和时间使用&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/nutsandbolts/for.html&quot;&gt;增强的 &lt;code&gt;for&lt;/code&gt; &lt;/a&gt;语句。</target>
        </trans-unit>
        <trans-unit id="ad3c4d3298913b13dc48c102cd0d8b0a7ee432bc" translate="yes" xml:space="preserve">
          <source>To get around this...</source>
          <target state="translated">要绕过这个问题.....</target>
        </trans-unit>
        <trans-unit id="2d6ae9265ded2c1d6054388f7945e80bacf12cf5" translate="yes" xml:space="preserve">
          <source>To prevent this always make sure that you are not requesting a index which is not present in array i.e. if array length is 10 then your index must range between 0 to 9</source>
          <target state="translated">为了防止这种情况,请确保你请求的索引不是在数组中不存在的,例如,如果数组长度是10,那么你的索引必须在0到9之间。</target>
        </trans-unit>
        <trans-unit id="d87f37c259dd5602c611f75e734724a2d8d4bd26" translate="yes" xml:space="preserve">
          <source>To put it briefly:</source>
          <target state="translated">简而言之。</target>
        </trans-unit>
        <trans-unit id="d4d05040f846c50d59f3b2820e1d902f4418578c" translate="yes" xml:space="preserve">
          <source>To retrieve one of the values from this series of boxes, you can refer to it through its index, like this:</source>
          <target state="translated">要从这一系列框中找回一个值,可以通过它的索引来引用它,就像这样。</target>
        </trans-unit>
        <trans-unit id="78c3255bc2eca1ef5dc6352c53e0ee3cc21b60ae" translate="yes" xml:space="preserve">
          <source>Use a for each loop</source>
          <target state="translated">每个环路使用一个</target>
        </trans-unit>
        <trans-unit id="53a260d5c2745e2a79547da92aedd6602716fb22" translate="yes" xml:space="preserve">
          <source>Use list.forEach(Consumer action) (requires Java8)</source>
          <target state="translated">使用list.forEach(Consumer action)(需要Java8)</target>
        </trans-unit>
        <trans-unit id="be52c28d5a1fe6ced3d0520d690c7470bd96c23e" translate="yes" xml:space="preserve">
          <source>What causes a java.lang.ArrayIndexOutOfBoundsException and how do I prevent it</source>
          <target state="translated">导致java.lang.ArrayIndexOutofBounds异常的原因是什么,如何预防?</target>
        </trans-unit>
        <trans-unit id="bb55d44dd992e42419d8c15fd1bd7aac35396dd6" translate="yes" xml:space="preserve">
          <source>What does &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; mean and how do I get rid of it?</source>
          <target state="translated">&lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; 是什么意思，我如何摆脱它？</target>
        </trans-unit>
        <trans-unit id="e9c87e529845ba4eb148e1691d9c403b1ca860f1" translate="yes" xml:space="preserve">
          <source>What's the benefit? Well, one thing is the readability like English. Second, you need not worry about the &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt;</source>
          <target state="translated">有什么好处？ 好吧，一件事就是像英语一样的可读性。 其次，您不必担心 &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b83ffae61c077a74faa175eb0d7a19c51085be91" translate="yes" xml:space="preserve">
          <source>When accessing the contents of an array, position starts from 0. Since there are 3 items, it would mean name[0]=&quot;tom&quot;, name[1]=&quot;dick&quot; and name[2]=&quot;harry</source>
          <target state="translated">当访问数组的内容时,位置从0开始,因为有3个项目,所以name[0]=&quot;tom&quot;,name[1]=&quot;dick&quot;,name[2]=&quot;harry</target>
        </trans-unit>
        <trans-unit id="21c4f9e34818b940b94aad4347681ebd729452b7" translate="yes" xml:space="preserve">
          <source>When looping through an array, always make sure that the index you are retrieving is strictly smaller than the length of the array (the number of boxes). For instance:</source>
          <target state="translated">当在数组中循环时,一定要确保你要检索的索引严格地小于数组的长度(框数)。比如说</target>
        </trans-unit>
        <trans-unit id="a8e7bc32a808394e272ae6689457e5545c96742c" translate="yes" xml:space="preserve">
          <source>When looping, whatever you do, NEVER change the value of the loop iterator (here: &lt;code&gt;i&lt;/code&gt;). The only place this should change value is to keep the loop going. Changing it otherwise is just risking an exception, and is in most cases not neccessary.</source>
          <target state="translated">循环时，无论您做什么，都不要更改循环迭代器的值（此处为 &lt;code&gt;i&lt;/code&gt; ）。 应该更改值的唯一地方是保持循环继续进行。 否则更改它只是冒着例外的风险，在大多数情况下不是必需的。</target>
        </trans-unit>
        <trans-unit id="ebb326ae6390e70dc1b177e2b0208b0bb64caf54" translate="yes" xml:space="preserve">
          <source>When retrieving an arbitrary element of the array, always check that it is a valid index against the length of the array:</source>
          <target state="translated">当检索数组中的任意元素时,一定要对照数组的长度检查它是一个有效的索引。</target>
        </trans-unit>
        <trans-unit id="56760542648cd08962b4e3756e8e84dae8f4b009" translate="yes" xml:space="preserve">
          <source>When you loop, since &lt;em&gt;i&lt;/em&gt; can be less than or equal to name.length, you are trying to access name[3] which is not available.</source>
          <target state="translated">循环时，由于&lt;em&gt;我&lt;/em&gt;可以小于或等于name.length，因此您正在尝试访问不可用的name [3]。</target>
        </trans-unit>
        <trans-unit id="6ed9583a8e6c12f193e1c58e4447e41bb36bb53c" translate="yes" xml:space="preserve">
          <source>Where possible, use foreach:</source>
          <target state="translated">在可能的情况下,使用foreach。</target>
        </trans-unit>
        <trans-unit id="b8fe845ef566e997b383f88a04110374463a4503" translate="yes" xml:space="preserve">
          <source>Which will give you the value of the 4th box in the series (since the first box has index 0).</source>
          <target state="translated">这将给你一个系列中的第4个框的值(因为第一个框的指数为0)。</target>
        </trans-unit>
        <trans-unit id="624ef4a3740953cc9a213eb14b93b0b2e5f9c429" translate="yes" xml:space="preserve">
          <source>With my running example, these code snippets would produce such an exception:</source>
          <target state="translated">在我运行的例子中,这些代码片段会产生这样的异常。</target>
        </trans-unit>
        <trans-unit id="7c3ab5099b68e1210458a8824f2f69cff0875f01" translate="yes" xml:space="preserve">
          <source>You are getting &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; due to &lt;code&gt;i&amp;lt;=name.length&lt;/code&gt; part. &lt;code&gt;name.length&lt;/code&gt; return the length of the string &lt;code&gt;name&lt;/code&gt;, which is 3. Hence when you try to access &lt;code&gt;name[3]&lt;/code&gt;, it's illegal and throws an exception.</source>
          <target state="translated">由于 &lt;code&gt;i&amp;lt;=name.length&lt;/code&gt; 部分，您将获得 &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; 。 &lt;code&gt;name.length&lt;/code&gt; 返回字符串 &lt;code&gt;name&lt;/code&gt; 的长度，为3。因此，当您尝试访问 &lt;code&gt;name[3]&lt;/code&gt; ，它是非法的并引发异常。</target>
        </trans-unit>
        <trans-unit id="88fda9819061df73cf0cd57a4ed585da9d6594bf" translate="yes" xml:space="preserve">
          <source>You can use Optional in functional style to avoid &lt;code&gt;NullPointerException&lt;/code&gt; and &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; :</source>
          <target state="translated">您可以在函数样式中使用Optional，以避免 &lt;code&gt;NullPointerException&lt;/code&gt; 和 &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5775515a4442e7383537b839e5de1edf467e55a1" translate="yes" xml:space="preserve">
          <source>You could not iterate or store more data than the length of your array. In this case you could do like this:</source>
          <target state="translated">你不能迭代或存储超过数组长度的数据。在这种情况下,你可以这样做。</target>
        </trans-unit>
        <trans-unit id="fd6473485a88cd5ea08337b10331276b1a95159d" translate="yes" xml:space="preserve">
          <source>You might want to be tempted to do something like this:</source>
          <target state="translated">你可能会想做这样的事情,你可能会受到诱惑。</target>
        </trans-unit>
        <trans-unit id="7263f70eb4c26fbc94d614d07ca24d5be5b6c988" translate="yes" xml:space="preserve">
          <source>You're guaranteed not to run out of elements to iterate over when doing this, and your [corrected] example is easily converted over.</source>
          <target state="translated">这样做的时候,你可以保证不会用完要迭代的元素,而且你的[修正的]例子很容易转换过来。</target>
        </trans-unit>
        <trans-unit id="7f463109edd18da522e4affdfaeeb2a70a4e9339" translate="yes" xml:space="preserve">
          <source>Your code should read</source>
          <target state="translated">你的代码应该是</target>
        </trans-unit>
        <trans-unit id="c45c4b9e41379120d4b8c23bbeb51afcc23ddbe6" translate="yes" xml:space="preserve">
          <source>Your first port of call should be the &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/lang/ArrayIndexOutOfBoundsException.html&quot;&gt;documentation&lt;/a&gt; which explains it reasonably clearly:</source>
          <target state="translated">您的第一个停靠港应该是能够对其进行合理清晰解释的&lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/lang/ArrayIndexOutOfBoundsException.html&quot;&gt;文档&lt;/a&gt; ：</target>
        </trans-unit>
        <trans-unit id="e25dd41118ce4a277b2cdba556c408f5270f5dae" translate="yes" xml:space="preserve">
          <source>creates a row of 5 boxes, each holding an &lt;code&gt;int&lt;/code&gt;. Each of the boxes have an index, a position in the series of boxes. This index starts at 0, and ends at N-1, where N is the size of the array (the number of boxes).</source>
          <target state="translated">创建一行5个框，每个框包含一个 &lt;code&gt;int&lt;/code&gt; 。 每个盒子都有一个索引，在一系列盒子中的位置。 该索引从0开始，到N-1结束，其中N是数组的大小（框数）。</target>
        </trans-unit>
        <trans-unit id="4cb668af4930d81353a3310609b33c2493fd2759" translate="yes" xml:space="preserve">
          <source>name.length is 3 since the array has been defined with 3 String objects.</source>
          <target state="translated">name.length是3,因为数组已经定义了3个String对象。</target>
        </trans-unit>
        <trans-unit id="8c31283a87d0e1add19eff44eaba6568c7142dd6" translate="yes" xml:space="preserve">
          <source>that mean your name length is 3</source>
          <target state="translated">这意味着你的名字长度是3</target>
        </trans-unit>
        <trans-unit id="aa7cbb05848ca116876681b0b98f3b383f512694" translate="yes" xml:space="preserve">
          <source>then the only valid index is:</source>
          <target state="translated">那么唯一有效的索引是:</target>
        </trans-unit>
        <trans-unit id="63d3347f5f0195a97465deba3cbc8d3861caa65e" translate="yes" xml:space="preserve">
          <source>then the only valid indexes are:</source>
          <target state="translated">那么唯一有效的索引是:</target>
        </trans-unit>
        <trans-unit id="a9c10e0dab48e0a132627230e9d964bb7f24844d" translate="yes" xml:space="preserve">
          <source>you will get 3;</source>
          <target state="translated">你会得到3个。</target>
        </trans-unit>
        <trans-unit id="cc56332e0ea3ac0013c9d3c6772740bb91c14068" translate="yes" xml:space="preserve">
          <source>your loop is running from 0 to 3 
which should be running either &quot;0 to 2&quot; or &quot;1 to 3&quot;</source>
          <target state="translated">你的循环从0到3,应该是 &quot;0到2 &quot;或 &quot;1到3&quot;。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
