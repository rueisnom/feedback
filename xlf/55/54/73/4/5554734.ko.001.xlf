<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/5554734">
    <body>
      <group id="5554734">
        <trans-unit id="16594450c3726674bd011602716db80f8cdbd94e" translate="yes" xml:space="preserve">
          <source>(That's assuming you &lt;em&gt;need&lt;/em&gt; the index, of course. If you can use the enhanced for loop instead, do so.)</source>
          <target state="translated">(물론 인덱스 &lt;em&gt;가 필요&lt;/em&gt; 하다고 가정합니다. 대신 고급 for 루프를 사용할 수 있다면 그렇게하십시오.)</target>
        </trans-unit>
        <trans-unit id="6516a73bbe4ca55dd14d53fab720365de10f1a6f" translate="yes" xml:space="preserve">
          <source>...is equivalent to this:</source>
          <target state="translated">... 이와 같습니다 :</target>
        </trans-unit>
        <trans-unit id="545450d9339ddec2c304ff6d24c4a04a3daea1d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; happens when you are trying to access 
the name.length indexed element which does not exist (array index ends at  length -1). just replacing &amp;lt;= with &amp;lt; would solve this problem.</source>
          <target state="translated">존재하지 않는 name.length 인덱싱 된 요소에 액세스하려고하면 &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; 이 발생합니다 (배열 인덱스는 길이 -1로 끝남). &amp;lt;=를 &amp;lt;로 바꾸면이 문제가 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="b0b8123e1eed02a96f007d0528bf878a0f5d9402" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; means that you are trying to access an index of the array that does not exist or out of the bound of this array. Array indexes start from &lt;strong&gt;0&lt;/strong&gt; and end at &lt;strong&gt;length - 1&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; 은 존재하지 않거나이 배열의 범위를 벗어난 배열의 인덱스에 액세스하려고 함을 의미합니다. 배열 인덱스는 &lt;strong&gt;0&lt;/strong&gt; 에서 시작하여 &lt;strong&gt;길이-1&lt;/strong&gt; 에서 끝납니다.</target>
        </trans-unit>
        <trans-unit id="731150e732491db3c4df70729a7a5f18a9b55573" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; name itself explains that If you trying to access the value at the index which is out of the scope of Array size then such kind of exception occur.</source>
          <target state="translated">&lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; 이름 자체는 배열 크기 범위를 벗어난 인덱스 값에 액세스하려고하면 이러한 종류의 예외가 발생한다고 설명합니다.</target>
        </trans-unit>
        <trans-unit id="b6ee2e15e862034ced88745bf49e41e848a54a25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt; will equal &lt;code&gt;name.length&lt;/code&gt; which is an illegal index, since array indices are zero-based.</source>
          <target state="translated">배열 인덱스가 0부터 시작하므로 잘못된 인덱스 인 &lt;code&gt;name.length&lt;/code&gt; 와 같습니다.</target>
        </trans-unit>
        <trans-unit id="432f3d4ef18867a1ee3c381d881c8576c7b849c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Answer&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Answer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a29842915cfca437631b773d017d5683be87733a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For any array of length n, elements of the array will have an index from 0 to n-1.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;길이가 n 인 배열의 경우 배열의 요소는 0에서 n-1 사이의 인덱스를 갖습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fdc05330aee07b7f41f89160b83214641748bf1d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How to avoid &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; 을 피하는 방법&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ddc274fb7573a41af358385d0d087e2a09464225" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Looping&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Looping&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2bfb54ba65a32d2ea2bc218a0ccd1567275e71d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Retrieval/update&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Retrieval/update&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4ca86611198d114a82f693be084e2b546c17702a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt;: as per your code snippet,</source>
          <target state="translated">&lt;strong&gt;업데이트&lt;/strong&gt; : 코드 스 니펫에 따라</target>
        </trans-unit>
        <trans-unit id="93e19cd6bb228ea2c695b8788bc26ff502add395" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What causes &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt;?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; 의 원인은 무엇입니까?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="713db13db93a08bc0b1605a9050b08a2d578335f" translate="yes" xml:space="preserve">
          <source>A better way go with a for each loop, in this method a programmer has no need to bother about the number of elements in the array.</source>
          <target state="translated">더 좋은 방법은 각 루프마다 for를 사용하는 것입니다.이 방법에서는 프로그래머가 배열의 요소 수를 신경 쓸 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="30635023570369a783cb507b93fbabdf13edf47c" translate="yes" xml:space="preserve">
          <source>According to your Code :</source>
          <target state="translated">귀하의 코드에 따르면 :</target>
        </trans-unit>
        <trans-unit id="71d87418d789a2d412998c248263f18a4fa4759f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; is caused by trying to retrive a &quot;box&quot; that does not exist, by passing an index that is higher than the index of last &quot;box&quot;, or negative.</source>
          <target state="translated">&lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; 은 존재하지 않는 &quot;box&quot;를 검색하거나 마지막 &quot;box&quot;의 인덱스보다 높은 인덱스를 전달하거나 음수로 인해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3efe569caa47b66aeea4bf938aaada4115336370" translate="yes" xml:space="preserve">
          <source>Any array X, can be accessed from [0 to (X.length - 1)]</source>
          <target state="translated">모든 배열 X는 [0에서 (X.length-1)]까지 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a6c16364c90e124900fbd48f8e756be74cf25e7" translate="yes" xml:space="preserve">
          <source>Any integer equal to the length of the array, or bigger than it: is out of bounds.</source>
          <target state="translated">배열의 길이와 같거나 그보다 큰 정수는 범위를 벗어납니다.</target>
        </trans-unit>
        <trans-unit id="bc43cad5e204b3730814fadd07365e1fcfa0cf9c" translate="yes" xml:space="preserve">
          <source>Any integer less than 0: is out of bounds;</source>
          <target state="translated">0보다 작은 정수는 범위를 벗어납니다.</target>
        </trans-unit>
        <trans-unit id="198d363ac64c8105d609efc6c1f685748c30e957" translate="yes" xml:space="preserve">
          <source>ArrayIndexOutOfBounds means you are trying to index a position within an array that is not allocated.</source>
          <target state="translated">ArrayIndexOutOfBounds는 할당되지 않은 배열 내 위치를 인덱싱하려고 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="a20631717304183b79ddf7a99f3341be04973146" translate="yes" xml:space="preserve">
          <source>ArrayIndexOutOfBoundsException whenever this exception is coming it mean you are trying to use an index of array which is out of its bounds or in lay man terms you are requesting more than than you have initialised.</source>
          <target state="translated">이 예외가 발생할 때마다 ArrayIndexOutOfBoundsException은 배열의 범위를 벗어나거나 초기화 한 것보다 더 많이 요청하는 일반 용어로 배열의 색인을 사용하려고 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="8d5c7efe24f948ceed100b000d15f78be9d0df28" translate="yes" xml:space="preserve">
          <source>As for how to avoid it... um, don't do that. Be careful with your array indexes.</source>
          <target state="translated">그것을 피하는 방법에 관해서는 ... 음, 그렇게하지 마십시오. 배열 인덱스에주의하십시오.</target>
        </trans-unit>
        <trans-unit id="4ecb0d232c31560b99f33cc2f9b21da2193025be" translate="yes" xml:space="preserve">
          <source>At first, I have initialized an array as 'numberArray'. then , some array elements are printed using for loop. When loop is running 'i' time , print the (numberArray[i+1] element..(when i value is 1, numberArray[i+1] element is printed.)..Suppose that, when i=(numberArray.length-2), last element of array is printed..When 'i' value goes to (numberArray.length-1) , no value for printing..In that point , 'ArrayIndexOutOfBoundsException' is occur.I hope to you could get idea.thank you !</source>
          <target state="translated">처음에는 배열을 'numberArray'로 초기화했습니다. 그런 다음 for 배열을 사용하여 일부 배열 요소가 인쇄됩니다. 루프가 'i'time을 실행 중이면 (numberArray [i + 1] 요소를 인쇄하십시오. (i 값이 1이면 numberArray [i + 1] 요소가 인쇄됩니다.). i = (numberArray 인 경우 제공하십시오. 길이-2), 배열의 마지막 요소가 인쇄됩니다 .'i '값이 (numberArray.length-1)로 이동하면 인쇄 값이 없습니다. 그 시점에서'ArrayIndexOutOfBoundsException '이 발생합니다. idea.thank 감사합니다!</target>
        </trans-unit>
        <trans-unit id="7a23c130dca814008f0011623011b3397b672e20" translate="yes" xml:space="preserve">
          <source>Convert array to stream - this is a good option if you want to perform additional 'operations' to your array e.g. filter, transform the text, convert to a map etc (requires Java8)</source>
          <target state="translated">배열을 스트림으로 변환-배열에 대한 추가 '작업'을 수행하려는 경우 좋은 옵션입니다 (예 : 필터, 텍스트 변환, 맵으로 변환 등) (Java8 필요)</target>
        </trans-unit>
        <trans-unit id="03197ab619246c2a04f5d7d20eb40c98306c3fcb" translate="yes" xml:space="preserve">
          <source>Creating an array like this:</source>
          <target state="translated">다음과 같은 배열 만들기 :</target>
        </trans-unit>
        <trans-unit id="e6d03af92f73ffc028d75940c7ceeec3b8645755" translate="yes" xml:space="preserve">
          <source>Each dimension has a different length, so the subtle bug is that the middle and inner loops use the &lt;code&gt;length&lt;/code&gt; property of the same dimension (because &lt;code&gt;a[i].length&lt;/code&gt; is the same as &lt;code&gt;a[j].length&lt;/code&gt;).</source>
          <target state="translated">각 차원은 길이가 다르기 때문에 미묘한 버그는 중간 및 내부 루프가 동일한 차원의 &lt;code&gt;length&lt;/code&gt; 속성을 사용한다는 것입니다 ( &lt;code&gt;a[i].length&lt;/code&gt; 는 &lt;code&gt;a[j].length&lt;/code&gt; 와 동일 하므로 ).</target>
        </trans-unit>
        <trans-unit id="a3ff3ebaff133add77dd19074c17420bafbe4af4" translate="yes" xml:space="preserve">
          <source>Each item in an array is called an element, and each element is accessed by its numerical index. As shown in the preceding illustration, &lt;strong&gt;numbering begins with 0&lt;/strong&gt;. The 9th element, for example, would therefore be accessed at index 8.</source>
          <target state="translated">배열의 각 항목을 요소라고하며 각 요소는 숫자 인덱스로 액세스합니다. 앞의 그림과 같이 &lt;strong&gt;번호 매기기는 0으로 시작합니다&lt;/strong&gt; . 예를 들어 9 번째 요소는 인덱스 8에서 액세스됩니다.</target>
        </trans-unit>
        <trans-unit id="0b322e1d0d89c964163237c8679058109771d3df" translate="yes" xml:space="preserve">
          <source>Even while using a &lt;code&gt;for&lt;/code&gt; loop you have started with index zero and you should end with &lt;code&gt;name.length - 1&lt;/code&gt;. In an array a[n] you can access form a[0] to a[n-1].</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; 루프를 사용하는 동안에도 인덱스 0으로 시작했으며 &lt;code&gt;name.length - 1&lt;/code&gt; 로 끝나야 합니다. 배열 a [n]에서는 형식 a [0]에서 a [n-1]에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9f3c55b138e02127e460df4476fef81199a9fa0" translate="yes" xml:space="preserve">
          <source>For example this would initialize a primitive integer array with the upper bound 4.</source>
          <target state="translated">예를 들어 상한 4로 기본 정수 배열을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cff8bdc9658d474e26987de3b23379c579ccf94c" translate="yes" xml:space="preserve">
          <source>For multidimensional arrays, it can be tricky to make sure you access the &lt;code&gt;length&lt;/code&gt; property of the right dimension. Take the following code for example:</source>
          <target state="translated">다차원 배열의 경우 올바른 차원의 &lt;code&gt;length&lt;/code&gt; 속성에 액세스하는 것이 까다로울 수 있습니다. 예를 들어 다음 코드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="5f685b62af5c06c94e1d8f3ee7cb8850a4a519bf" translate="yes" xml:space="preserve">
          <source>For your given array the length of the array is 3(i.e. name.length = 3). But as it stores element starting from index 0, it has max index 2.</source>
          <target state="translated">주어진 배열의 경우 배열의 길이는 3입니다 (예 : name.length = 3). 그러나 인덱스 0에서 시작하는 요소를 저장하므로 최대 인덱스 2가 있습니다.</target>
        </trans-unit>
        <trans-unit id="06b67ed96c3a79e858c3523303813ec26cece44d" translate="yes" xml:space="preserve">
          <source>From this excellent article: &lt;a href=&quot;https://programming.guide/java/arrayindexoutofboundsexception-in-for-loop.html&quot;&gt;ArrayIndexOutOfBoundsException in for loop&lt;/a&gt;</source>
          <target state="translated">이 훌륭한 기사에서 : &lt;a href=&quot;https://programming.guide/java/arrayindexoutofboundsexception-in-for-loop.html&quot;&gt;for 루프의 ArrayIndexOutOfBoundsException&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1dc311ad922efe2a4999e58497522f8934a6ed17" translate="yes" xml:space="preserve">
          <source>Here is a code sample that triggers the exception:</source>
          <target state="translated">다음은 예외를 트리거하는 코드 샘플입니다.</target>
        </trans-unit>
        <trans-unit id="5e8a4ea1a2e15d1a576f7ba4e06e76c18d333a38" translate="yes" xml:space="preserve">
          <source>I see all the answers here explaining how to work with arrays and how to avoid the index out of bounds exceptions.  I personally avoid arrays at all costs.  I use the Collections classes, which avoids all the silliness of having to deal with array indices entirely.  The looping constructs work beautifully with collections supporting code that is both easier to write, understand and maintain.</source>
          <target state="translated">배열로 작업하는 방법과 범위를 벗어난 색인을 피하는 방법을 설명하는 모든 대답이 있습니다. 나는 개인적으로 모든 비용으로 배열을 피합니다. 나는 Collections 클래스를 사용하는데, 이는 배열 인덱스를 완전히 다루어야하는 모든 어리 석음을 피한다. 루핑 구문은 작성, 이해 및 유지 관리가 더 쉬운 코드를 지원하는 컬렉션에서 아름답게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="5b9a600098aa25c886463a10080dca1a70ae37df" translate="yes" xml:space="preserve">
          <source>If You check
System.out.print(name.length);</source>
          <target state="translated">System.out.print (name.length);를 확인하면</target>
        </trans-unit>
        <trans-unit id="ec76e7dd22a0744a8ea2b5cb0e1991648d732a53" translate="yes" xml:space="preserve">
          <source>If an array has a length of 1,</source>
          <target state="translated">배열의 길이가 1이면</target>
        </trans-unit>
        <trans-unit id="1355ab2ef7ede216e9860be7a1e76c2d2634e5ed" translate="yes" xml:space="preserve">
          <source>If two threads enter the SimplateDateFormat.parse() method together you will likely see an ArrayIndexOutOfBoundsException. Note the synchronization section of the &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html&quot;&gt;class javadoc for SimpleDateFormat&lt;/a&gt;.</source>
          <target state="translated">두 개의 스레드가 SimplateDateFormat.parse () 메서드를 함께 입력하면 ArrayIndexOutOfBoundsException이 발생할 수 있습니다. &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html&quot;&gt;SimpleDateFormat에 대한 javadoc 클래스&lt;/a&gt; 의 동기화 섹션을 참고하십시오.</target>
        </trans-unit>
        <trans-unit id="a65e545062bdbc57b6ee2dd22cd4d60ac011e9d3" translate="yes" xml:space="preserve">
          <source>If you think of a variable as a &quot;box&quot; where you can place a value, then an array is a series of boxes placed next to eachother, where the number of boxes is a finite and explicit integer.</source>
          <target state="translated">변수를 값을 배치 할 수있는 &quot;상자&quot;로 생각하면 배열은 서로 옆에 배치 된 일련의 상자이며 상자의 수는 유한하고 명시적인 정수입니다.</target>
        </trans-unit>
        <trans-unit id="9ca75b5c8022318262352987b6a6876f13f10a8d" translate="yes" xml:space="preserve">
          <source>If you use an array's length to control iteration of a &lt;strong&gt;for&lt;/strong&gt; loop, always remember that the index of the first item in an array is &lt;strong&gt;0&lt;/strong&gt;. So the index of the last element in an array is one less than the array's length.</source>
          <target state="translated">배열의 길이를 사용하여 &lt;strong&gt;for&lt;/strong&gt; 루프의 반복을 제어하는 ​​경우 배열의 첫 번째 항목의 색인이 항상 &lt;strong&gt;0&lt;/strong&gt; 임을 기억하십시오. 따라서 배열에서 마지막 요소의 인덱스는 배열의 길이보다 1이 적습니다.</target>
        </trans-unit>
        <trans-unit id="62cecc743239393a0f6a2284e02b3a2531bae2bb" translate="yes" xml:space="preserve">
          <source>If your program is trying to access any element (or memory) having array index greater than n-1, then Java will throw &lt;strong&gt;ArrayIndexOutOfBoundsException&lt;/strong&gt;</source>
          <target state="translated">프로그램이 n-1보다 큰 배열 인덱스를 가진 요소 (또는 메모리)에 액세스하려고하면 Java는 &lt;strong&gt;ArrayIndexOutOfBoundsException&lt;/strong&gt; 을 throw합니다.</target>
        </trans-unit>
        <trans-unit id="47936e5bdf1c92242d0ac95c6abc8cf87d2b159c" translate="yes" xml:space="preserve">
          <source>In order to prevent &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt;, there are some key points to consider:</source>
          <target state="translated">&lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; 을 방지하기 위해 고려해야 할 몇 가지 핵심 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c027a1a6feeaa2dceb81573369730200a57c8cd" translate="yes" xml:space="preserve">
          <source>In the last iteration of</source>
          <target state="translated">마지막 반복에서</target>
        </trans-unit>
        <trans-unit id="76df916b62840bf387c4d5f679f0bb56b6c112cd" translate="yes" xml:space="preserve">
          <source>In this case:</source>
          <target state="translated">이 경우 :</target>
        </trans-unit>
        <trans-unit id="e8166ca7be8d189caed257b3d67713c1e52b9fb6" translate="yes" xml:space="preserve">
          <source>In your case</source>
          <target state="translated">당신의 경우</target>
        </trans-unit>
        <trans-unit id="bace5a1fd6d0cb37fe4432690edce7d3270c59d1" translate="yes" xml:space="preserve">
          <source>In your case, You can just remove equal sign from your for loop.</source>
          <target state="translated">귀하의 경우 for 루프에서 등호를 제거하면됩니다.</target>
        </trans-unit>
        <trans-unit id="1d47196eb5bef5acc41ee14bd59c0bcf6ce1ec2f" translate="yes" xml:space="preserve">
          <source>In your case:</source>
          <target state="translated">귀하의 경우 :</target>
        </trans-unit>
        <trans-unit id="a5a5252322ab332863617744dbdfb6dbda144e6e" translate="yes" xml:space="preserve">
          <source>In your code you have accessed the elements from index 0 to the length of the string array. &lt;code&gt;name.length&lt;/code&gt; gives the number of string objects in your array of string objects i.e. 3, but you can access only up to index 2 &lt;code&gt;name[2]&lt;/code&gt;,
because the array can be accessed from index 0 to &lt;code&gt;name.length - 1&lt;/code&gt; where you get &lt;code&gt;name.length&lt;/code&gt; number of objects.</source>
          <target state="translated">코드에서 인덱스 0부터 문자열 배열 길이까지의 요소에 액세스했습니다. &lt;code&gt;name.length&lt;/code&gt; 는 문자열 객체의 배열, 즉 3에있는 문자열 객체의 수를 제공하지만 인덱스 0에서 &lt;code&gt;name.length - 1&lt;/code&gt; 까지 배열에 액세스 할 수 있기 때문에 최대 인덱스 2 &lt;code&gt;name[2]&lt;/code&gt; 까지만 액세스 할 수 있습니다. &lt;code&gt;name.length&lt;/code&gt; 객체 수입니다.</target>
        </trans-unit>
        <trans-unit id="8e098b941bd75b2af22ea4a65712789bfbcbd392" translate="yes" xml:space="preserve">
          <source>In your for loop, you can do i &amp;lt; name.length. This would prevent looping to name[3] and would instead stop at name[2]</source>
          <target state="translated">for 루프에서 i &amp;lt;name.length를 수행 할 수 있습니다. 이것은 이름 [3]으로의 루핑을 막고 대신 이름 [2]에서 멈 춥니 다.</target>
        </trans-unit>
        <trans-unit id="93565e594ec50b9f54dbd3a5a28c81a9b9b30af0" translate="yes" xml:space="preserve">
          <source>IndexOutOfBoundsException is thrown to indicate that an index of some sort (such as to an array, to a string, or to a vector) is out of range.</source>
          <target state="translated">IndexOutOfBoundsException은 배열, 문자열 또는 벡터와 같은 일종의 인덱스가 범위를 벗어 났음을 나타 내기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3d4b9d4a233899624d9b4d080cbe4ff35b2db759" translate="yes" xml:space="preserve">
          <source>Instead, the inner loop should use &lt;code&gt;a[i][j].length&lt;/code&gt; (or &lt;code&gt;a[0][0].length&lt;/code&gt;, for simplicity).</source>
          <target state="translated">대신 내부 루프는 단순성을 위해 &lt;code&gt;a[i][j].length&lt;/code&gt; (또는 &lt;code&gt;a[0][0].length&lt;/code&gt; )를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="aa866da724c0b805352d5bc22bdcbf23001a1f3a" translate="yes" xml:space="preserve">
          <source>It means that you are trying to access an index of an array which is not valid as it is not in between the bounds.</source>
          <target state="translated">그것은 경계 사이에 있지 않으므로 유효하지 않은 배열의 인덱스에 액세스하려고한다는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="4e5939db25e078784604ea0adf0a01396afb0868" translate="yes" xml:space="preserve">
          <source>It's defined in the &lt;a href=&quot;http://docs.oracle.com/javase/specs/jls/se7/html/jls-10.html#jls-10.7&quot;&gt;Java language specification&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/specs/jls/se7/html/jls-10.html#jls-10.7&quot;&gt;Java 언어 사양에&lt;/a&gt; 정의되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="341c828fdb39a0fd7b4589aeec511cd085b1f4e8" translate="yes" xml:space="preserve">
          <source>Just don't. Stick to the one above (if you need to use the index) and it will save you a lot of pain.</source>
          <target state="translated">하지마 위의 것을 고수하고 (인덱스를 사용해야하는 경우) 많은 고통을 덜어줍니다.</target>
        </trans-unit>
        <trans-unit id="29fe7a64d9dd63464322b1d11eac639ff11cf5c3" translate="yes" xml:space="preserve">
          <source>Maintaining count:</source>
          <target state="translated">카운트 유지 :</target>
        </trans-unit>
        <trans-unit id="8bd3565c2f0f54ba38218096ad4fb12f600e3c50" translate="yes" xml:space="preserve">
          <source>Make sure there is no place in your code that are accessing thread unsafe classes like SimpleDateFormat in a concurrent manner like in a servlet or controller. Check all instance variables of your servlets and controllers for likely suspects.</source>
          <target state="translated">코드에 서블릿이나 컨트롤러와 같이 동시 방식으로 SimpleDateFormat과 같은 스레드 안전하지 않은 클래스에 액세스하는 장소가 없는지 확인하십시오. 서블릿 및 컨트롤러의 모든 인스턴스 변수에서 의심이 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="9cf0d412274e9e46811d2f84ac45eb6b1855e1cd" translate="yes" xml:space="preserve">
          <source>Notice the &lt;code&gt;&amp;lt;&lt;/code&gt;, never mix a &lt;code&gt;=&lt;/code&gt; in there..</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; , 거기에 a &lt;code&gt;=&lt;/code&gt; 를 섞지 마십시오.</target>
        </trans-unit>
        <trans-unit id="b082cab151ecf134fb9b471ea328fc251f75866b" translate="yes" xml:space="preserve">
          <source>One problem people sometimes run into is thinking that arrays are 1-indexed, e.g.</source>
          <target state="translated">사람들이 때때로 겪는 한 가지 문제는 배열이 1- 인덱싱된다는 생각입니다.</target>
        </trans-unit>
        <trans-unit id="1170a5f96f19ba178c90251f3fff85abf9d27869" translate="yes" xml:space="preserve">
          <source>Or some other looping statement like</source>
          <target state="translated">또는 같은 다른 반복문</target>
        </trans-unit>
        <trans-unit id="2a55f1def49ba2cf28edd04aebe0ae914d6adc01" translate="yes" xml:space="preserve">
          <source>Or this:</source>
          <target state="translated">아니면 이거:</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="74d424b8016ed205af0865c29c968d17098b8f8d" translate="yes" xml:space="preserve">
          <source>P.S.: If you look to have a better understanding of arrays and do some practical exercises, there's a video here: &lt;a href=&quot;https://www.youtube.com/watch?v=k1i42DMrcMk&quot;&gt;tutorial on arrays in Java&lt;/a&gt;</source>
          <target state="translated">추신 : 배열에 대해 더 잘 이해하고 실용적인 연습을 수행하려면 여기 비디오가 있습니다 : &lt;a href=&quot;https://www.youtube.com/watch?v=k1i42DMrcMk&quot;&gt;Java 배열에 대한 자습서&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da0083fa6318625deda9a300827d509bb4c74ab3" translate="yes" xml:space="preserve">
          <source>Programmers count from zero. So this for example would throw an &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; as the upper bound is 4 and not 5.</source>
          <target state="translated">프로그래머는 0부터 계산합니다. 따라서 예를 들어 상한이 4이고 5가 아니기 &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e601093530ccbc180c35f809030a5f181c80fca6" translate="yes" xml:space="preserve">
          <source>Resolved code:</source>
          <target state="translated">해결 된 코드 :</target>
        </trans-unit>
        <trans-unit id="371a87eafb4de078ff674d69a5a89c186532eb49" translate="yes" xml:space="preserve">
          <source>See also:</source>
          <target state="translated">또한보십시오:</target>
        </trans-unit>
        <trans-unit id="514e733a57a3a645ff247b1f4ca5b2518a55570b" translate="yes" xml:space="preserve">
          <source>So for example:</source>
          <target state="translated">예를 들어 :</target>
        </trans-unit>
        <trans-unit id="2671ad4099c67f3fb6bf6039351783be03a56a38" translate="yes" xml:space="preserve">
          <source>So here are two solutions that we can use in a program</source>
          <target state="translated">다음은 프로그램에서 사용할 수있는 두 가지 솔루션입니다.</target>
        </trans-unit>
        <trans-unit id="eb77b8cfb17010be505ad83effe7f5f234b9802c" translate="yes" xml:space="preserve">
          <source>So much for this simple question, but I just wanted to highlight a new feature in Java which will avoid all confusions around indexing in arrays even for beginners. Java-8 has abstracted the task of iterating for you.</source>
          <target state="translated">이 간단한 질문에 대해서는 너무 많았지 만 초보자조차도 배열의 색인 작성과 관련된 모든 혼란을 피할 수있는 Java의 새로운 기능을 강조하고 싶었습니다. Java-8은 반복 작업을 추상화했습니다.</target>
        </trans-unit>
        <trans-unit id="de534f475445cbb66be5bf98ef2979a8450af9ba" translate="yes" xml:space="preserve">
          <source>So, instead of  'i**&amp;lt;=&lt;strong&gt;name.length' you should write 'i&lt;/strong&gt;&amp;lt;**name.length' to avoid 'ArrayIndexOutOfBoundsException'.</source>
          <target state="translated">따라서 'i ** &amp;lt;= &lt;strong&gt;name.length'&lt;/strong&gt; 대신 'ArrayIndexOutOfBoundsException'을 피하기 위해 ' &lt;strong&gt;i&lt;/strong&gt; &amp;lt;** name.length'를 &lt;strong&gt;작성해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="dba3cae94d302fc1902f69f418e5e3ead09b4a2a" translate="yes" xml:space="preserve">
          <source>That will miss out the first element (index 0) and throw an exception when index is 5. The valid indexes here are 0-4 inclusive. The correct, idiomatic &lt;code&gt;for&lt;/code&gt; statement here would be:</source>
          <target state="translated">첫 번째 요소 (인덱스 0)가 누락되고 인덱스가 5 일 때 예외가 발생합니다. 유효한 인덱스는 0-4입니다. 여기에 &lt;code&gt;for&lt;/code&gt; 정확한 관용구는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="61161f7c102891bab75d2ee987cf4edd7e8ca602" translate="yes" xml:space="preserve">
          <source>That's how this type of exception looks when thrown in Eclipse. The number in red signifies the index you tried to access. So the code would look like this:</source>
          <target state="translated">이것이 Eclipse에서 발생했을 때 이러한 유형의 예외가 나타나는 방식입니다. 빨간색 숫자는 액세스하려는 색인을 나타냅니다. 따라서 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="90fee4238e0b2767081496845488c8830d9ac8ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;public final&lt;/code&gt; field &lt;code&gt;length&lt;/code&gt;, which contains the number of components
  of the array. &lt;code&gt;length&lt;/code&gt; may be positive or zero.</source>
          <target state="translated">배열의 구성 요소 수를 포함하는 &lt;code&gt;public final&lt;/code&gt; 필드 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;length&lt;/code&gt; 는 양수이거나 0 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0dcc5f252034590b4d611d5fd41235e75f48cc4" translate="yes" xml:space="preserve">
          <source>The Java Tutorials - Language Basics - Arrays</source>
          <target state="translated">Java 자습서-언어 기본 사항-배열</target>
        </trans-unit>
        <trans-unit id="0a1f91989d1958ef347778d95981df2ded2686c6" translate="yes" xml:space="preserve">
          <source>The better option is to iterate an array:</source>
          <target state="translated">더 나은 옵션은 배열을 반복하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="5923c9124eeb896929580854886ecfff7220679f" translate="yes" xml:space="preserve">
          <source>The code below:</source>
          <target state="translated">아래 코드 :</target>
        </trans-unit>
        <trans-unit id="8e291ebe6122fbb69695ab0aecb4fa8b043402e3" translate="yes" xml:space="preserve">
          <source>The error is thrown when you try to access an index which doesn't exist in that array. If an array has a length of 3,</source>
          <target state="translated">해당 배열에 존재하지 않는 인덱스에 액세스하려고하면 오류가 발생합니다. 배열의 길이가 3이면</target>
        </trans-unit>
        <trans-unit id="79bd00a63f3fe886beabfa3ec2d290a31a4a24f5" translate="yes" xml:space="preserve">
          <source>The index is inclusive the array's length. This is out of bounds. You need to replace &lt;code&gt;&amp;lt;=&lt;/code&gt; by &lt;code&gt;&amp;lt;&lt;/code&gt;.</source>
          <target state="translated">인덱스는 배열의 길이를 포함합니다. 이 범위를 벗어났습니다. &lt;code&gt;&amp;lt;=&lt;/code&gt; 를 &lt;code&gt;&amp;lt;&lt;/code&gt; 로 바꿔야합니다.</target>
        </trans-unit>
        <trans-unit id="3b86c42f7b65cda21c39234fdc50273fe8a72add" translate="yes" xml:space="preserve">
          <source>The most common case I've seen for seemingly mysterious ArrayIndexOutOfBoundsExceptions, i.e. apparently not caused by your own array handling code, is the concurrent use of SimpleDateFormat. Particularly in a servlet or controller:</source>
          <target state="translated">내가보기에 신비한 ArrayIndexOutOfBoundsExceptions에서 보았던 가장 일반적인 경우는, 즉 자신의 배열 처리 코드로 인한 것이 아니라 SimpleDateFormat을 동시에 사용하는 것입니다. 특히 서블릿 또는 컨트롤러에서 :</target>
        </trans-unit>
        <trans-unit id="216d5ae8ef7812ad765cb3f778364e7dcc029df5" translate="yes" xml:space="preserve">
          <source>The primary motivation (and use case) is when you are iterating and you do not require any complicated iteration steps.  You would &lt;em&gt;not&lt;/em&gt; be able to use an enhanced-&lt;code&gt;for&lt;/code&gt; to move backwards in an array or only iterate on every other element.</source>
          <target state="translated">주요 동기 부여 (및 사용 사례)는 반복 할 때 복잡한 반복 단계가 필요하지 않은 경우입니다. 확장을 사용하여 배열에서 뒤로 이동하거나 다른 모든 요소에서만 반복 할 수는 &lt;em&gt;없습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="be7b6b1d85813b94f871b784d296d789b425a07e" translate="yes" xml:space="preserve">
          <source>This error is occurs at runs loop  overlimit times.Let's consider simple example like this,</source>
          <target state="translated">이 오류는 루프 초과 제한 시간이 실행될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f414d0a29d407c114a4769c9a0f853da2159916b" translate="yes" xml:space="preserve">
          <source>This way you won't have to think about indexes at all.</source>
          <target state="translated">이런 식으로 인덱스에 대해 전혀 생각할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="e638105227ffc56d46887520a9df3fe725ecf6bf" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an array has been accessed with an illegal index. The index is either negative or greater than or equal to the size of the array.</source>
          <target state="translated">잘못된 인덱스로 배열에 액세스했음을 나타냅니다. 인덱스가 음수이거나 배열 크기보다 크거나 같습니다.</target>
        </trans-unit>
        <trans-unit id="e635d1635c6747a227108901a5ea556793a43148" translate="yes" xml:space="preserve">
          <source>To avoid an array index out-of-bounds exception, one should use the &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/nutsandbolts/for.html&quot;&gt;enhanced-&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; statement where and when they can.</source>
          <target state="translated">배열 인덱스 범위를 벗어난 예외를 방지하려면 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/nutsandbolts/for.html&quot;&gt;Enhanced &lt;code&gt;for&lt;/code&gt; &lt;/a&gt; 문을 언제 어디서나 사용할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="ad3c4d3298913b13dc48c102cd0d8b0a7ee432bc" translate="yes" xml:space="preserve">
          <source>To get around this...</source>
          <target state="translated">이 문제를 해결하려면 ...</target>
        </trans-unit>
        <trans-unit id="2d6ae9265ded2c1d6054388f7945e80bacf12cf5" translate="yes" xml:space="preserve">
          <source>To prevent this always make sure that you are not requesting a index which is not present in array i.e. if array length is 10 then your index must range between 0 to 9</source>
          <target state="translated">이를 방지하려면 항상 배열에없는 색인을 요청하지 않아야합니다. 즉 배열 길이가 10 인 경우 색인의 범위는 0에서 9 사이 여야합니다.</target>
        </trans-unit>
        <trans-unit id="d87f37c259dd5602c611f75e734724a2d8d4bd26" translate="yes" xml:space="preserve">
          <source>To put it briefly:</source>
          <target state="translated">간단히 말해 :</target>
        </trans-unit>
        <trans-unit id="d4d05040f846c50d59f3b2820e1d902f4418578c" translate="yes" xml:space="preserve">
          <source>To retrieve one of the values from this series of boxes, you can refer to it through its index, like this:</source>
          <target state="translated">이 일련의 상자에서 값 중 하나를 검색하려면 다음과 같이 색인을 통해 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="78c3255bc2eca1ef5dc6352c53e0ee3cc21b60ae" translate="yes" xml:space="preserve">
          <source>Use a for each loop</source>
          <target state="translated">각 루프에 대해</target>
        </trans-unit>
        <trans-unit id="53a260d5c2745e2a79547da92aedd6602716fb22" translate="yes" xml:space="preserve">
          <source>Use list.forEach(Consumer action) (requires Java8)</source>
          <target state="translated">list.forEach (소비자 조치) 사용 (Java8 필요)</target>
        </trans-unit>
        <trans-unit id="be52c28d5a1fe6ced3d0520d690c7470bd96c23e" translate="yes" xml:space="preserve">
          <source>What causes a java.lang.ArrayIndexOutOfBoundsException and how do I prevent it</source>
          <target state="translated">java.lang.ArrayIndexOutOfBoundsException을 발생시키는 원인 및 방지 방법</target>
        </trans-unit>
        <trans-unit id="bb55d44dd992e42419d8c15fd1bd7aac35396dd6" translate="yes" xml:space="preserve">
          <source>What does &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; mean and how do I get rid of it?</source>
          <target state="translated">&lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; 은 무엇을 의미하며 어떻게 제거합니까?</target>
        </trans-unit>
        <trans-unit id="e9c87e529845ba4eb148e1691d9c403b1ca860f1" translate="yes" xml:space="preserve">
          <source>What's the benefit? Well, one thing is the readability like English. Second, you need not worry about the &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt;</source>
          <target state="translated">장점은 무엇입니까? 글쎄, 한 가지는 영어와 같은 가독성입니다. 둘째, &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; 에 대해 걱정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="b83ffae61c077a74faa175eb0d7a19c51085be91" translate="yes" xml:space="preserve">
          <source>When accessing the contents of an array, position starts from 0. Since there are 3 items, it would mean name[0]=&quot;tom&quot;, name[1]=&quot;dick&quot; and name[2]=&quot;harry</source>
          <target state="translated">배열의 내용에 액세스 할 때 위치는 0부터 시작합니다. 3 개의 항목이 있으므로 name [0] = &quot;tom&quot;, name [1] = &quot;dick&quot;및 name [2] = &quot;harry</target>
        </trans-unit>
        <trans-unit id="21c4f9e34818b940b94aad4347681ebd729452b7" translate="yes" xml:space="preserve">
          <source>When looping through an array, always make sure that the index you are retrieving is strictly smaller than the length of the array (the number of boxes). For instance:</source>
          <target state="translated">배열을 반복 할 때 항상 검색하는 색인이 배열의 길이 (상자 수)보다 엄격하게 작아야합니다. 예를 들어 :</target>
        </trans-unit>
        <trans-unit id="a8e7bc32a808394e272ae6689457e5545c96742c" translate="yes" xml:space="preserve">
          <source>When looping, whatever you do, NEVER change the value of the loop iterator (here: &lt;code&gt;i&lt;/code&gt;). The only place this should change value is to keep the loop going. Changing it otherwise is just risking an exception, and is in most cases not neccessary.</source>
          <target state="translated">루핑 할 때, 무엇을 하든지 루프 반복기의 값을 변경하지 마십시오 (여기서는 &lt;code&gt;i&lt;/code&gt; ). 이 값을 변경해야하는 유일한 위치는 루프를 계속 진행하는 것입니다. 달리 변경하면 예외가 발생할 수 있으며 대부분의 경우 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ebb326ae6390e70dc1b177e2b0208b0bb64caf54" translate="yes" xml:space="preserve">
          <source>When retrieving an arbitrary element of the array, always check that it is a valid index against the length of the array:</source>
          <target state="translated">배열의 임의 요소를 검색 할 때는 항상 배열의 길이에 대해 유효한 색인인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="56760542648cd08962b4e3756e8e84dae8f4b009" translate="yes" xml:space="preserve">
          <source>When you loop, since &lt;em&gt;i&lt;/em&gt; can be less than or equal to name.length, you are trying to access name[3] which is not available.</source>
          <target state="translated">루프 할 때 &lt;em&gt;i&lt;/em&gt; 가 name.length보다 작거나 같을 수 있으므로 사용할 수없는 name [3]에 액세스하려고합니다.</target>
        </trans-unit>
        <trans-unit id="6ed9583a8e6c12f193e1c58e4447e41bb36bb53c" translate="yes" xml:space="preserve">
          <source>Where possible, use foreach:</source>
          <target state="translated">가능하면 foreach를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b8fe845ef566e997b383f88a04110374463a4503" translate="yes" xml:space="preserve">
          <source>Which will give you the value of the 4th box in the series (since the first box has index 0).</source>
          <target state="translated">이것은 첫 번째 상자에 색인 0이 있기 때문에 시리즈의 네 번째 상자 값을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="624ef4a3740953cc9a213eb14b93b0b2e5f9c429" translate="yes" xml:space="preserve">
          <source>With my running example, these code snippets would produce such an exception:</source>
          <target state="translated">실행중인 예제에서 이러한 코드 스 니펫은 이러한 예외를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="7c3ab5099b68e1210458a8824f2f69cff0875f01" translate="yes" xml:space="preserve">
          <source>You are getting &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; due to &lt;code&gt;i&amp;lt;=name.length&lt;/code&gt; part. &lt;code&gt;name.length&lt;/code&gt; return the length of the string &lt;code&gt;name&lt;/code&gt;, which is 3. Hence when you try to access &lt;code&gt;name[3]&lt;/code&gt;, it's illegal and throws an exception.</source>
          <target state="translated">&lt;code&gt;i&amp;lt;=name.length&lt;/code&gt; 부분으로 인해 &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; 이 발생합니다. &lt;code&gt;name.length&lt;/code&gt; 는 문자열 &lt;code&gt;name&lt;/code&gt; 의 길이 인 3을 반환합니다. 따라서 &lt;code&gt;name[3]&lt;/code&gt; 에 액세스하려고하면 불법이며 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="88fda9819061df73cf0cd57a4ed585da9d6594bf" translate="yes" xml:space="preserve">
          <source>You can use Optional in functional style to avoid &lt;code&gt;NullPointerException&lt;/code&gt; and &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; :</source>
          <target state="translated">기능 스타일에서 Optional을 사용하여 &lt;code&gt;NullPointerException&lt;/code&gt; 및 &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; 을 피할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5775515a4442e7383537b839e5de1edf467e55a1" translate="yes" xml:space="preserve">
          <source>You could not iterate or store more data than the length of your array. In this case you could do like this:</source>
          <target state="translated">배열 길이보다 더 많은 데이터를 반복하거나 저장할 수 없습니다. 이 경우 다음과 같이 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd6473485a88cd5ea08337b10331276b1a95159d" translate="yes" xml:space="preserve">
          <source>You might want to be tempted to do something like this:</source>
          <target state="translated">다음과 같은 일을하고 싶을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="7263f70eb4c26fbc94d614d07ca24d5be5b6c988" translate="yes" xml:space="preserve">
          <source>You're guaranteed not to run out of elements to iterate over when doing this, and your [corrected] example is easily converted over.</source>
          <target state="translated">이 작업을 수행 할 때 반복 할 요소가 부족하지 않도록 보장되며 [수정 된] 예제는 쉽게 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="7f463109edd18da522e4affdfaeeb2a70a4e9339" translate="yes" xml:space="preserve">
          <source>Your code should read</source>
          <target state="translated">코드를 읽어야합니다</target>
        </trans-unit>
        <trans-unit id="c45c4b9e41379120d4b8c23bbeb51afcc23ddbe6" translate="yes" xml:space="preserve">
          <source>Your first port of call should be the &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/lang/ArrayIndexOutOfBoundsException.html&quot;&gt;documentation&lt;/a&gt; which explains it reasonably clearly:</source>
          <target state="translated">첫 번째 포트는 합리적으로 명확하게 설명하는 &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/lang/ArrayIndexOutOfBoundsException.html&quot;&gt;문서&lt;/a&gt; 여야합니다.</target>
        </trans-unit>
        <trans-unit id="e25dd41118ce4a277b2cdba556c408f5270f5dae" translate="yes" xml:space="preserve">
          <source>creates a row of 5 boxes, each holding an &lt;code&gt;int&lt;/code&gt;. Each of the boxes have an index, a position in the series of boxes. This index starts at 0, and ends at N-1, where N is the size of the array (the number of boxes).</source>
          <target state="translated">각각 &lt;code&gt;int&lt;/code&gt; 를 보유하는 5 개의 상자 행을 만듭니다. 각 상자에는 일련의 상자에 위치하는 색인이 있습니다. 이 인덱스는 0에서 시작하여 N-1에서 끝납니다. 여기서 N은 배열의 크기 (상자 수)입니다.</target>
        </trans-unit>
        <trans-unit id="4cb668af4930d81353a3310609b33c2493fd2759" translate="yes" xml:space="preserve">
          <source>name.length is 3 since the array has been defined with 3 String objects.</source>
          <target state="translated">배열이 3 개의 String 객체로 정의되었으므로 name.length는 3입니다.</target>
        </trans-unit>
        <trans-unit id="8c31283a87d0e1add19eff44eaba6568c7142dd6" translate="yes" xml:space="preserve">
          <source>that mean your name length is 3</source>
          <target state="translated">그것은 당신의 이름 길이가 3이라는 것을 의미합니다</target>
        </trans-unit>
        <trans-unit id="aa7cbb05848ca116876681b0b98f3b383f512694" translate="yes" xml:space="preserve">
          <source>then the only valid index is:</source>
          <target state="translated">유효한 인덱스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="63d3347f5f0195a97465deba3cbc8d3861caa65e" translate="yes" xml:space="preserve">
          <source>then the only valid indexes are:</source>
          <target state="translated">유효한 인덱스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a9c10e0dab48e0a132627230e9d964bb7f24844d" translate="yes" xml:space="preserve">
          <source>you will get 3;</source>
          <target state="translated">당신은 3을 얻을 것이다;</target>
        </trans-unit>
        <trans-unit id="cc56332e0ea3ac0013c9d3c6772740bb91c14068" translate="yes" xml:space="preserve">
          <source>your loop is running from 0 to 3 
which should be running either &quot;0 to 2&quot; or &quot;1 to 3&quot;</source>
          <target state="translated">루프가 0에서 3으로 실행되고 &quot;0에서 2&quot;또는 &quot;1에서 3&quot;으로 실행되어야합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
