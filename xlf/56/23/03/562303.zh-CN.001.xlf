<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/562303">
    <body>
      <group id="562303">
        <trans-unit id="812e35032924fa2f7a92fb56aa8e5f4ab10f834e" translate="yes" xml:space="preserve">
          <source>&quot;Learn C The Hard Way&quot; is not a book that I could recommend to someone who is both learning to program and learning C.  If you're already a competent programmer in some other related language, then it represents an interesting and unusual exposition on C, though I have reservations about parts of the book.  &lt;sub&gt;&lt;em&gt;Jonathan Leffler&lt;/em&gt;&lt;/sub&gt;</source>
          <target state="translated">&amp;ldquo;我很难向那些学习编程和学习C的人推荐这本书&amp;rdquo;。如果您已经是其他一些相关语言的熟练程序员，那么它代表了关于C，尽管我对本书的某些部分有所保留。 &lt;sub&gt;&lt;em&gt;乔纳森&amp;middot;莱夫勒&lt;/em&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="1dc844b16539caa90e300003d5f18342f5323fdb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://c-faq.com/&quot;&gt;The comp.lang.c FAQ&lt;/a&gt; - Steve Summit. Web site with answers to many questions about C.</source>
          <target state="translated">&lt;a href=&quot;http://c-faq.com/&quot;&gt;comp.lang.c常见问题-Steve&lt;/a&gt; Summit。 该网站提供有关C的许多问题的答案。</target>
        </trans-unit>
        <trans-unit id="a270caabcc8ca84012ecb3f78e9a9fdbfd8d9484" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://cslibrary.stanford.edu/101/EssentialC.pdf&quot;&gt;Essential C&lt;/a&gt; (Free PDF) - Nick Parlante (2003). Note that this describes the C90 language at several points (&lt;em&gt;e.g.&lt;/em&gt;, in discussing &lt;code&gt;//&lt;/code&gt; comments and placement of variable declarations at arbitrary points in the code), so it should be treated with some caution.</source>
          <target state="translated">&lt;a href=&quot;http://cslibrary.stanford.edu/101/EssentialC.pdf&quot;&gt;Essential C&lt;/a&gt; （免费PDF）-Nick Parlante（2003）。 请注意，这在多个方面描述了C90语言（ &lt;em&gt;例如&lt;/em&gt; ，在讨论 &lt;code&gt;//&lt;/code&gt; 注释和将变量声明放置在代码中的任意点时），因此应谨慎对待。</target>
        </trans-unit>
        <trans-unit id="d7efa91fda3c4c760854bcab70e2cbb399dd3046" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://knking.com/books/c2/index.html&quot;&gt;C Programming: A Modern Approach (2nd Edition)&lt;/a&gt; - K. N. King (2008).  A good book for learning C.</source>
          <target state="translated">&lt;a href=&quot;http://knking.com/books/c2/index.html&quot;&gt;C编程：一种现代方法（第二版）&lt;/a&gt; -KN King（2008）。 一本学习C的好书。</target>
        </trans-unit>
        <trans-unit id="329c3e4fb8517d81e3c277117f6330e1c4776704" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://publications.gbdirect.co.uk/c_book/&quot;&gt;The C Book&lt;/a&gt; (Free Online) - Mike Banahan, Declan Brady, and Mark Doran (1991).</source>
          <target state="translated">&lt;a href=&quot;http://publications.gbdirect.co.uk/c_book/&quot;&gt;C书&lt;/a&gt; （免费在线）-Mike Banahan，Declan Brady和Mark Doran（1991）。</target>
        </trans-unit>
        <trans-unit id="3c361dcd90e8d210218b52907a85352f89557dc5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.apress.com/9781430259114&quot;&gt;Pointers in C&lt;/a&gt; - Naveen Toppo and Hrishikesh Dewan (2013).</source>
          <target state="translated">&lt;a href=&quot;http://www.apress.com/9781430259114&quot;&gt;C语言中的指针&lt;/a&gt; -Naveen Toppo和Hrishikesh Dewan（2013）。</target>
        </trans-unit>
        <trans-unit id="8b7ab0cc43383e68679f6fe8a068695ecfc794ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.buildyourownlisp.com/&quot;&gt;Build Your Own Lisp&lt;/a&gt; &amp;mdash; Daniel Holden (2014). An enjoyable way to learn C.</source>
          <target state="translated">&lt;a href=&quot;http://www.buildyourownlisp.com/&quot;&gt;建立自己的Lisp&lt;/a&gt; -Daniel Holden（2014）。 一种学习C语言的有趣方式。</target>
        </trans-unit>
        <trans-unit id="05b91d821154962b60267c4cdc244861e8729df2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.cs.princeton.edu/software/cii/&quot;&gt;C Interfaces and Implementations&lt;/a&gt; - David R. Hanson (1997). Provides information on how to define a boundary between an interface and implementation in C in a generic and reusable fashion. It also demonstrates this principle by applying it to the implementation of common mechanisms and data structures in C, such as lists, sets, exceptions, string manipulation, memory allocators, and more. Basically, Hanson took all the code he'd written as part of building &lt;a href=&quot;http://www.cs.arizona.edu/icon&quot;&gt;Icon&lt;/a&gt; and &lt;a href=&quot;http://www.cs.princeton.edu/software/lcc/&quot;&gt;lcc&lt;/a&gt; and pulled out the best bits in a form that other people could reuse for their own projects. It's a model of good C programming using modern design techniques (including Liskov's data abstraction), showing how to organize a big C project as a bunch of useful libraries.</source>
          <target state="translated">&lt;a href=&quot;http://www.cs.princeton.edu/software/cii/&quot;&gt;C接口和实现&lt;/a&gt; -David R. Hanson（1997）。 提供有关如何以通用且可重用的方式在C中定义接口和实现之间的边界的信息。 它还通过将其应用于C中的常见机制和数据结构（例如列表，集合，异常，字符串操作，内存分配器等）的实现来证明该原理。 基本上，Hanson接受了他在构建&lt;a href=&quot;http://www.cs.arizona.edu/icon&quot;&gt;Icon&lt;/a&gt;和&lt;a href=&quot;http://www.cs.princeton.edu/software/lcc/&quot;&gt;lcc中&lt;/a&gt;编写的所有代码，并以其他人可以重用于自己的项目的形式提取了最好的代码。 它是使用现代设计技术（包括Liskov的数据抽象）进行良好C编程的模型，展示了如何将大型C项目组织为一堆有用的库。</target>
        </trans-unit>
        <trans-unit id="5c20162becc09d573abe1d210e294c493293e63a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.knosof.co.uk/cbook/cbook.html&quot;&gt;The new C standard - an annotated reference&lt;/a&gt; (Free PDF) - Derek M. Jones (2009).  The &quot;new standard&quot; referred to is the old C99 standard rather than C11.</source>
          <target state="translated">&lt;a href=&quot;http://www.knosof.co.uk/cbook/cbook.html&quot;&gt;新的C标准-带有注释的参考&lt;/a&gt; （Free PDF）-Derek M. Jones（2009）。 所指的&amp;ldquo;新标准&amp;rdquo;是旧的C99标准，而不是C11。</target>
        </trans-unit>
        <trans-unit id="6d2906b65f4ba53678e02df9852550818fbace1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.misra-c.com/Activities/MISRAC/tabid/160/Default.aspx&quot;&gt;MISRA-C&lt;/a&gt; - industry standard published and maintained by the Motor Industry Software Reliability Association. Covers C89 and C99.</source>
          <target state="translated">&lt;a href=&quot;http://www.misra-c.com/Activities/MISRAC/tabid/160/Default.aspx&quot;&gt;MISRA-C-&lt;/a&gt;由汽车工业软件可靠性协会发布和维护的工业标准。 涵盖了C89和C99。</target>
        </trans-unit>
        <trans-unit id="8c58f7b85cce0b61dadbd50f946241ab6449107e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.open-std.org/JTC1/SC22/WG14/www/C99RationaleV5.10.pdf&quot;&gt;Rationale for C99 Standard&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/JTC1/SC22/WG14/www/C99RationaleV5.10.pdf&quot;&gt;C99标准的依据&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6a4c99c2dc3e1d63e7260301df6178848632b23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.planetpdf.com/codecuts/pdfs/ooc.pdf&quot;&gt;Object-oriented Programming with ANSI-C&lt;/a&gt; (Free PDF) - Axel-Tobias Schreiner (1993).
The code gets a bit convoluted.  If you want C++, use C++.  It only uses C90, of course.</source>
          <target state="translated">&lt;a href=&quot;http://www.planetpdf.com/codecuts/pdfs/ooc.pdf&quot;&gt;使用ANSI-C进行面向对象的编程&lt;/a&gt; （免费PDF）-Axel-Tobias Schreiner（1993）。 代码有点混乱。 如果要使用C ++，请使用C ++。 当然，它仅使用C90。</target>
        </trans-unit>
        <trans-unit id="753c2aae33d6f3ba0ba3b912327a774761b7a740" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://learncodethehardway.org/c/&quot;&gt;Learn C The Hard Way&lt;/a&gt; (2015) by Zed Shaw. A book with mixed reviews.
  &lt;a href=&quot;http://hentenaar.com/dont-learn-c-the-wrong-way&quot;&gt;A critique of this book&lt;/a&gt; by Tim Hentenaar:</source>
          <target state="translated">Zed Shaw的《 &lt;a href=&quot;https://learncodethehardway.org/c/&quot;&gt;Learn C The Hard Way》&lt;/a&gt; （2015年）。 一本评论不一的书。 蒂姆&amp;middot;亨特纳尔（Tim Hentenaar） &lt;a href=&quot;http://hentenaar.com/dont-learn-c-the-wrong-way&quot;&gt;对这本书&lt;/a&gt;的评论：</target>
        </trans-unit>
        <trans-unit id="6d6a60c975f0c14eae3edb779a56103f5c2551fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://modernc.gforge.inria.fr/&quot;&gt;Modern C&lt;/a&gt; &amp;mdash; Jens Gustedt (2017 1st Edn; 2020 2nd Edn).  Covers C in 5 levels (encounter, acquaintance, cognition, experience, ambition) from beginning C to advanced C.  It covers C11 and C17, including threads and atomic access, which few other books do. Not all compilers recognize these features in all environments.</source>
          <target state="translated">&lt;a href=&quot;https://modernc.gforge.inria.fr/&quot;&gt;《现代C》&lt;/a&gt; -延斯&amp;middot;古斯特（Jens Gustedt）（2017年第一届爱丁堡; 2020年第二届爱丁堡）。 从入门C到高级C，它涵盖5个级别的C（相遇，相识，认知，经验，野心）。涵盖C11和C17，包括线程和原子访问，这是其他书籍所没有的。 并非所有的编译器都能在所有环境中识别这些功能。</target>
        </trans-unit>
        <trans-unit id="2c4537134043847bba6648ca83a4ab66feee9d0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0023611413&quot;&gt;Applications Programming in ANSI C&lt;/a&gt; - Richard Johnsonbaugh and Martin Kalin (1996).</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0023611413&quot;&gt;ANSI C中的应用程序编程&lt;/a&gt; -Richard Johnsonbaugh和Martin Kalin（1996）。</target>
        </trans-unit>
        <trans-unit id="dcb796a06b8fd32dc028a40345896eecc9ce0978" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/013089592X&quot;&gt;C: A Reference Manual (5th Edition)&lt;/a&gt; - Samuel P. Harbison and Guy R. Steele (2002).  An excellent reference book on C, up to and including C99. It is not a tutorial, and probably unfit for beginners. It's great if you need to write a compiler for C, as the authors had to do when they started.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/013089592X&quot;&gt;C：参考手册（第5版）&lt;/a&gt; -Samuel P. Harbison和Guy R. Steele（2002）。 优秀的C语言参考书，直至C99。 它不是教程，可能不适合初学者。 如果您需要为C编写一个编译器，那是很棒的，就像作者开始时要做的那样。</target>
        </trans-unit>
        <trans-unit id="aa7d07dac195630aa9d46760e9ede5ae68f44df2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0131103628&quot;&gt;The C Programming Language (2nd Edition)&lt;/a&gt; - Brian W. Kernighan and Dennis M. Ritchie (1988). Still a good, short but complete introduction to C (C90, not C99 or later versions), written by the inventor of C.  However, the language has changed and good C style has developed in the last 25 years, and there are parts of the book that show its age.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0131103628&quot;&gt;C编程语言（第二版）&lt;/a&gt; -Brian W. Kernighan和Dennis M. Ritchie（1988）。 由C的发明者编写的C（C90，而不是C99或更高版本）仍然是一个简短，完整的入门指南。但是，在过去25年中，语言发生了变化，良好的C风格得到了发展，并且显示其年代的书。</target>
        </trans-unit>
        <trans-unit id="b8616640671f1a82a4da30da8d6837b63f2610ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0131315099&quot;&gt;The Standard C Library&lt;/a&gt; - P.J. Plauger (1992). It contains the complete source code to an implementation of the C89 standard library, along with extensive discussion about the design and why the code is designed as shown.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0131315099&quot;&gt;标准C库&lt;/a&gt; -PJ Plauger（1992）。 它包含C89标准库实现的完整源代码，以及有关设计以及为什么设计所示代码的广泛讨论。</target>
        </trans-unit>
        <trans-unit id="e0858e06524a43020a2bb5647a8cf40c12aa1d38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0131774298&quot;&gt;Expert C Programming: Deep C Secrets&lt;/a&gt; - Peter van der Linden (1994). Lots of interesting information and war stories from the Sun compiler team, but a little dated in places.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0131774298&quot;&gt;专家C编程：深刻的C秘密&lt;/a&gt; -Peter van der Linden（1994）。 Sun编译器团队提供了许多有趣的信息和战争故事，但有些地方过时了。</target>
        </trans-unit>
        <trans-unit id="3c79057416d88c6a6e8e552104d2f06a00005597" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201179288&quot;&gt;C Traps and Pitfalls&lt;/a&gt; by A. Koenig (1989). Very good, but the C style pre-dates standard C, which makes it less recommendable these days.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201179288&quot;&gt;C陷阱与陷阱&lt;/a&gt; A. Koenig（1989）。 很好，但是C风格早于标准C，这使得它在当今不那么受欢迎。</target>
        </trans-unit>
        <trans-unit id="8676c3cc0ec77e942e6985db574ebbdf41bc9a58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201183994&quot;&gt;A Book on C&lt;/a&gt; - Al Kelley/Ira Pohl (1998).</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201183994&quot;&gt;关于C的书&lt;/a&gt; -Al Kelley / Ira Pohl（1998）。</target>
        </trans-unit>
        <trans-unit id="521487c8a50d49cc8d8ab641d5c56027b619c23f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201314525&quot;&gt;Algorithms in C&lt;/a&gt; - Robert Sedgewick (1997). Gives you a real grasp of implementing algorithms in C. Very lucid and clear; will probably make you want to throw away all of your other algorithms books and keep this one.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201314525&quot;&gt;C中的算法&lt;/a&gt; -Robert Sedgewick（1997）。 使您真正掌握了用C语言实现算法的过程。 可能会让您想抛弃所有其他算法书籍，并保留其中一本。</target>
        </trans-unit>
        <trans-unit id="b9141eda35b1b86f48ee6f882325689f3a9b3c2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201419505&quot;&gt;Functional C&lt;/a&gt; - Pieter Hartel and Henk Muller (1997). Teaches modern practices that are invaluable for low-level programming, with concurrency and modularity in mind.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201419505&quot;&gt;功能性C&lt;/a&gt; -Pieter Hartel和Henk Muller（1997）。 在考虑并发性和模块化的情况下，讲授对低级编程无价的现代实践。</target>
        </trans-unit>
        <trans-unit id="30bdf96c10834842f275e43e5e19ac9e41913e72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201604612&quot;&gt;The C Puzzle Book&lt;/a&gt; - Alan R. Feuer (1998)</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201604612&quot;&gt;The C Puzzle Book&lt;/a&gt; -Alan R.Feuer（1998）</target>
        </trans-unit>
        <trans-unit id="ead309c1536ac3b1eb8d040b68c07e25cae03412" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/020161586X&quot;&gt;The Practice of Programming&lt;/a&gt; - Brian W. Kernighan and Rob Pike (1999). A very good book to accompany K&amp;amp;R. It uses C++ and Java too.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/020161586X&quot;&gt;编程实践&lt;/a&gt; -Brian W. Kernighan和Rob Pike（1999）。 与K＆R一起读的好书。 它也使用C ++和Java。</target>
        </trans-unit>
        <trans-unit id="6e52a64a3bf8453ca6389335430f0eb330921dee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201845199&quot;&gt;C Programming FAQs: Frequently Asked Questions&lt;/a&gt; - Steve Summit (1995).  This is the book of the web site listed earlier.  It doesn't cover C99 or the later standards.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201845199&quot;&gt;C编程常见问题解答：常见问题&lt;/a&gt; -Steve Summit（1995）。 这是前面列出的网站的书。 它不涵盖C99或更高版本的标准。</target>
        </trans-unit>
        <trans-unit id="b0371cd7d3c31dc553a62f06f2096da73a056bd2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321535421&quot;&gt;Problem Solving and Program Design in C (6th Edition)&lt;/a&gt; - Jeri R. Hanly and Elliot B. Koffman (2009).</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321535421&quot;&gt;C中的问题解决和程序设计（第6版）&lt;/a&gt; -Jeri R. Hanly和Elliot B. Koffman（2009）。</target>
        </trans-unit>
        <trans-unit id="8509b95f3b2a773d5be8644185f374819a37984d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321637739&quot;&gt;Advanced Programming in the UNIX Environment&lt;/a&gt; - Richard W. Stevens and Stephen A. Rago (2013).  Comprehensive description of how to use the Unix APIs from C code, but not so much about the mechanics of C coding.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321637739&quot;&gt;UNIX环境中的高级编程&lt;/a&gt; -Richard W. Stevens和Stephen A. Rago（2013）。 关于如何使用C代码中的Unix API的全面描述，但是关于C编码的原理并没有那么多。</target>
        </trans-unit>
        <trans-unit id="e3008bb6fa563100ff78cbad5d4e23d2478cd2d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321776410&quot;&gt;Programming in C (4th Edition)&lt;/a&gt; - Stephen Kochan (2014). A good general introduction and tutorial.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0321776410&quot;&gt;《用C编程》（第4版）&lt;/a&gt; -Stephen Kochan（2014）。 一个很好的一般介绍和教程。</target>
        </trans-unit>
        <trans-unit id="8cf0733b206674cd29542e9e845c120121ce7dc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0534951406&quot;&gt;Advanced C Programming by Example&lt;/a&gt; - John W. Perry (1998).</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0534951406&quot;&gt;实例高级C编程&lt;/a&gt; -John W. Perry（1998）。</target>
        </trans-unit>
        <trans-unit id="71224f60dd6c774c2ffe26dea92590dafa9cb587" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0596004362&quot;&gt;C Pocket Reference (O'Reilly)&lt;/a&gt; - Peter Prinz and Ulla Kirch-Prinz (2002).</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0596004362&quot;&gt;C袖珍参考书（O'Reilly）&lt;/a&gt; -Peter Prinz和Ulla Kirch-Prinz（2002）。</target>
        </trans-unit>
        <trans-unit id="5fb3f7f7b3c884682796edd5d710eb46b28bf5cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0596006977&quot;&gt;C in a Nutshell&lt;/a&gt; - Peter Prinz and Tony Crawford (2005). Excellent book if you need a reference for C99.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0596006977&quot;&gt;C简而言之&lt;/a&gt; -彼得&amp;middot;普林兹和托尼&amp;middot;克劳福德（2005）。 如果您需要C99的参考书，那是一本很棒的书。</target>
        </trans-unit>
        <trans-unit id="ee9d648eb0ebdc47d89c07ef488d25f0a882c74b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0672318962&quot;&gt;C Unleashed&lt;/a&gt; - Richard Heathfield, Lawrence Kirby, et al. (2000). Not ideal, but it is worth intermediate programmers practicing problems written in this book. This is a good cookbook-like approach suggested by comp.lang.c contributors.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0672318962&quot;&gt;C释放&lt;/a&gt; -理查德&amp;middot;希思菲尔德，劳伦斯&amp;middot;柯比等。 （2000）。 这并不理想，但是值得中级程序员练习本书中编写的问题。 这是comp.lang.c贡献者建议的一种类似于菜谱的好方法。</target>
        </trans-unit>
        <trans-unit id="c0a59ea2ea54b04f8f9c0a89fee23864d5b97430" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0672324482&quot;&gt;Sams Teach Yourself C in 21 Days&lt;/a&gt; - Bradley L. Jones and Peter Aitken (2002). Very good introductory stuff.</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0672324482&quot;&gt;萨姆斯21天自学C-&lt;/a&gt;布拉德利&amp;middot;琼斯和彼得&amp;middot;艾特肯（2002）。 很好的入门资料。</target>
        </trans-unit>
        <trans-unit id="ccae7f98cd8cb3af188ecdefd451cf9bd11ce8d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0672326965&quot;&gt;C Primer Plus (5th Edition)&lt;/a&gt; - Stephen Prata (2004)</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0672326965&quot;&gt;C Primer Plus（第5版）&lt;/a&gt; -Stephen Prata（2004）</target>
        </trans-unit>
        <trans-unit id="955b7e6cb9513b5cd697a5daf315cfc8d275e0ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0673999866&quot;&gt;Pointers on C&lt;/a&gt; - Kenneth Reek (1997).</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0673999866&quot;&gt;C上的指针&lt;/a&gt; -Kenneth Reek（1997）。</target>
        </trans-unit>
        <trans-unit id="499dd6565c7f89a980a06c4f6f95ddf82ce9082f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1449327141&quot;&gt;21st Century C: C Tips from the New School&lt;/a&gt; - Ben Klemens (2012). In addition to the C language, the book explains gdb, valgrind, autotools, and git. The comments on style are found in the last part (Chapter 6 and beyond).</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1449327141&quot;&gt;《 21世纪的C：新学校的C小贴士&lt;/a&gt; -Ben Klemens（2012）》。 除了C语言外，这本书还介绍了gdb，valgrind，autotools和git。 有关样式的注释可在最后一部分（第6章及以后）中找到。</target>
        </trans-unit>
        <trans-unit id="275b680b29c1772203ed68d229edb3f35c3912c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1449399916&quot;&gt;Head First C&lt;/a&gt; - David Griffiths and Dawn Griffiths (2012).</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1449399916&quot;&gt;Head First C&lt;/a&gt; -David Griffiths和Dawn Griffiths（2012）。</target>
        </trans-unit>
        <trans-unit id="76bbe5c86e118ef8194e093962893f3da1e76836" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1565923065&quot;&gt;Practical C Programming (3rd Edition)&lt;/a&gt; - Steve Oualline (1997)(Beginner)</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/1565923065&quot;&gt;实用C编程（第3版）&lt;/a&gt; -Steve Oualline（1997）（入门）</target>
        </trans-unit>
        <trans-unit id="f63fb55bab892133166a478b96be12d52dcb8cb3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/B00101Y58Q&quot;&gt;Data Structures - An Advanced Approach Using C&lt;/a&gt; - Jeffrey Esakov and Tom Weiss (1989).</source>
          <target state="translated">&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/B00101Y58Q&quot;&gt;数据结构-使用C的高级方法&lt;/a&gt; -Jeffrey Esakov和Tom Weiss（1989）。</target>
        </trans-unit>
        <trans-unit id="f63bd1711d409c47bf1272663ebfce39e4fb01bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.amazon.com//dp/0133976890&quot;&gt;C: How to Program (8th Edition)&lt;/a&gt; - Paul Deitel and Harvey M. Deitel (2015). Lots of good tips and best practices for beginners. The index is very good and serves as a decent reference (just not fully comprehensive, and very shallow).</source>
          <target state="translated">&lt;a href=&quot;https://www.amazon.com//dp/0133976890&quot;&gt;C：《如何编程》（第8版）&lt;/a&gt; -Paul Deitel和Harvey M. Deitel（2015）。 为初学者提供了许多好的技巧和最佳实践。 该指数非常好，可以作为一个不错的参考（只是不够全面，而且很浅）。</target>
        </trans-unit>
        <trans-unit id="c5096d174e4a3ff36ad91daa7b0454ee7b34b583" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.apress.com/book/9781430248811&quot;&gt;Beginning C (5th Edition)&lt;/a&gt; - Ivor Horton (2013). Very good explanation of pointers, using lots of small but complete programs.</source>
          <target state="translated">&lt;a href=&quot;https://www.apress.com/book/9781430248811&quot;&gt;Beginning C（第5版）&lt;/a&gt; -Ivor Horton（2013年）。 指针的很好的解释，使用了许多小而完整的程序。</target>
        </trans-unit>
        <trans-unit id="e3c9555e26996e4e04a4977ded02e7f64692e546" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;&lt;strong&gt;Other contributors&lt;/strong&gt;, not necessarily credited in the revision history, include:&lt;br/&gt;
&lt;a href=&quot;https://stackoverflow.com/users/844882/alex-lockwood&quot;&gt;Alex Lockwood&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/479989/ben-jackson&quot;&gt;Ben Jackson&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/631423/bubbles&quot;&gt;Bubbles&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/193653/claws&quot;&gt;claws&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/14463/coledot&quot;&gt;coledot&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/3161/dana-robinson&quot;&gt;Dana Robinson&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/1322636/daniel-holden&quot;&gt;Daniel Holden&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/50305/dervin-thunk&quot;&gt;Dervin Thunk&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/57301/dwc&quot;&gt;dwc&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/2226524/eric-hou&quot;&gt;Erci Hou&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/102600/garen&quot;&gt;Garen&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/714232/haziz&quot;&gt;haziz&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/1029106/johan-bezem&quot;&gt;Johan Bezem&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/15168/jonathan-leffler&quot;&gt;Jonathan Leffler&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/141186/joshua-partogi&quot;&gt;Joshua Partogi&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/74660/lucas&quot;&gt;Lucas&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/584518/lundin&quot;&gt;Lundin&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/52734/mattk&quot;&gt;Matt K.&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/487623/mossplix&quot;&gt;mossplix&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/147192/matthieu-m&quot;&gt;Matthieu M.&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/3991400/midor&quot;&gt;midor&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/39892/nietzche-jou&quot;&gt;Nietzche-jou&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/41661/norman-ramsey&quot;&gt;Norman Ramsey&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/416623/r3st0r3&quot;&gt;r3st0r3&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/2395058/ridthyself&quot;&gt;ridthyself&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/71074/robert-s-barnes&quot;&gt;Robert S. Barnes&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/3923896/steve-summit&quot;&gt;Steve Summit&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/3685/tim-ring&quot;&gt;Tim Ring&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/207003/tony-bai&quot;&gt;Tony Bai&lt;/a&gt;,
&lt;a href=&quot;https://stackoverflow.com/users/213550/vmatm&quot;&gt;VMAtm&lt;/a&gt;
&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;strong&gt;其他贡献者&lt;/strong&gt; （不一定要记入修订历史）包括：&lt;/sub&gt; &lt;sub&gt;&lt;br/&gt;&lt;/sub&gt; &lt;sub&gt;&lt;a href=&quot;https://stackoverflow.com/users/844882/alex-lockwood&quot;&gt;亚历克斯&amp;middot;洛克伍德&lt;/a&gt; （ Alex Lockwood） ， &lt;a href=&quot;https://stackoverflow.com/users/479989/ben-jackson&quot;&gt;本&amp;middot;杰克逊&lt;/a&gt; （ Ben Jackson） ， &lt;a href=&quot;https://stackoverflow.com/users/631423/bubbles&quot;&gt;泡泡&lt;/a&gt; ， &lt;a href=&quot;https://stackoverflow.com/users/193653/claws&quot;&gt;爪子&lt;/a&gt; ， &lt;a href=&quot;https://stackoverflow.com/users/14463/coledot&quot;&gt;凉拌卷心菜&lt;/a&gt; ， &lt;a href=&quot;https://stackoverflow.com/users/3161/dana-robinson&quot;&gt;达娜&amp;middot;罗宾逊&lt;/a&gt; ， &lt;a href=&quot;https://stackoverflow.com/users/1322636/daniel-holden&quot;&gt;丹尼尔&amp;middot;霍尔顿&lt;/a&gt; ， &lt;a href=&quot;https://stackoverflow.com/users/57301/dwc&quot;&gt;德文&amp;middot;唐克&lt;/a&gt; ， &lt;a href=&quot;https://stackoverflow.com/users/714232/haziz&quot;&gt;dwc&lt;/a&gt; ， &lt;a href=&quot;https://stackoverflow.com/users/1029106/johan-bezem&quot;&gt;埃尔西&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/users/15168/jonathan-leffler&quot;&gt;&amp;middot;&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/users/2226524/eric-hou&quot;&gt;侯&lt;/a&gt; ， &lt;a href=&quot;https://stackoverflow.com/users/102600/garen&quot;&gt;加伦&lt;/a&gt; ， 哈兹兹 ， 约翰&amp;middot;贝泽姆 ， 乔纳森&amp;middot;莱夫勒 ， &lt;a href=&quot;https://stackoverflow.com/users/141186/joshua-partogi&quot;&gt;约书亚&amp;middot;帕托吉&lt;/a&gt; ， &lt;a href=&quot;https://stackoverflow.com/users/74660/lucas&quot;&gt;卢卡斯&lt;/a&gt; ， &lt;a href=&quot;https://stackoverflow.com/users/584518/lundin&quot;&gt;伦丁&lt;/a&gt; ， &lt;a href=&quot;https://stackoverflow.com/users/52734/mattk&quot;&gt;马特&amp;middot;K&amp;middot;&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/users/487623/mossplix&quot;&gt;莫斯皮克斯&lt;/a&gt; ， &lt;a href=&quot;https://stackoverflow.com/users/147192/matthieu-m&quot;&gt;马蒂厄M.&lt;/a&gt; ， &lt;a href=&quot;https://stackoverflow.com/users/3991400/midor&quot;&gt;midor&lt;/a&gt; ， &lt;a href=&quot;https://stackoverflow.com/users/39892/nietzche-jou&quot;&gt;Nietzche-jou&lt;/a&gt; ， &lt;a href=&quot;https://stackoverflow.com/users/41661/norman-ramsey&quot;&gt;Norman Ramsey&lt;/a&gt; ， &lt;a href=&quot;https://stackoverflow.com/users/416623/r3st0r3&quot;&gt;r3st0r3&lt;/a&gt; ， &lt;a href=&quot;https://stackoverflow.com/users/2395058/ridthyself&quot;&gt;ridthyself&lt;/a&gt; ， &lt;a href=&quot;https://stackoverflow.com/users/71074/robert-s-barnes&quot;&gt;Robert&lt;/a&gt; S.Barnes ， &lt;a href=&quot;https://stackoverflow.com/users/3923896/steve-summit&quot;&gt;Steve Summit&lt;/a&gt; ， &lt;a href=&quot;https://stackoverflow.com/users/3685/tim-ring&quot;&gt;Tim Ring&lt;/a&gt; ， &lt;a href=&quot;https://stackoverflow.com/users/207003/tony-bai&quot;&gt;Tony Bai&lt;/a&gt; ， &lt;a href=&quot;https://stackoverflow.com/users/213550/vmatm&quot;&gt;VMAtm&lt;/a&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="7b931589a08edb7bd8aee994ca8f1fad8d45bf25" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;This question was discussed on &lt;a href=&quot;https://meta.stackoverflow.com/a/378475&quot;&gt;Meta&lt;/a&gt; as part of the &lt;a href=&quot;https://meta.stackoverflow.com/questions/378437/deleted-question-audit-2018&quot;&gt;Deleted Questions Audit 2018&lt;/a&gt;.&lt;br/&gt;The consensus was to keep it undeleted and actively maintained.&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;该问题已在&lt;a href=&quot;https://meta.stackoverflow.com/a/378475&quot;&gt;Meta&lt;/a&gt;上进行了讨论，作为&lt;a href=&quot;https://meta.stackoverflow.com/questions/378437/deleted-question-audit-2018&quot;&gt;2018年已删除问题审核的&lt;/a&gt;一部分。&lt;/sub&gt; &lt;sub&gt;&lt;br/&gt;&lt;/sub&gt; &lt;sub&gt;共识是不删除它并积极维护它。&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="d7d173a1596f2d4eb1f78c43b9b4ad285aa66e2a" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;
This is a list of random books of diverse quality. In the view of some people (with some justification), it is no longer a list of recommended books. Some of the listed books contain blatantly incorrect statements or teach wrong/harmful practices.  People who are aware of such books can edit this answer to help improve it.
See &lt;a href=&quot;https://meta.stackoverflow.com/questions/355588/the-c-book-list-has-gone-haywire-what-to-do-with-it&quot;&gt;The C book list has gone haywire. What to do with it?&lt;/a&gt;, and also &lt;a href=&quot;https://meta.stackoverflow.com/questions/378437/deleted-question-audit-2018&quot;&gt;Deleted question audit 2018&lt;/a&gt;.
&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;这是质量各异的随机书籍的清单。&lt;/sup&gt; &lt;sup&gt;在某些人看来（有理由），它不再是推荐书籍的列表。&lt;/sup&gt; &lt;sup&gt;其中一些列出的书包含明显不正确的陈述或教导错误/有害的做法。&lt;/sup&gt; &lt;sup&gt;了解此类书籍的人可以编辑此答案以帮助改进它。&lt;/sup&gt; &lt;sup&gt;请参阅&lt;a href=&quot;https://meta.stackoverflow.com/questions/355588/the-c-book-list-has-gone-haywire-what-to-do-with-it&quot;&gt;C书籍清单。&lt;/a&gt;&lt;/sup&gt; &lt;sup&gt;怎么办呢？&lt;/sup&gt; &lt;sup&gt;，还&lt;a href=&quot;https://meta.stackoverflow.com/questions/378437/deleted-question-audit-2018&quot;&gt;删除了问题审核2018&lt;/a&gt; 。&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="513cf75cda49c91261b646328e60a3a4728e5dfd" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;strong&gt;&lt;em&gt;Warning&lt;/em&gt;&lt;/strong&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;strong&gt;&lt;em&gt;Warning&lt;/em&gt;&lt;/strong&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="ea724d100e64c1e5fe10c21fc6944b2481c63cd4" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;Although this isn't a book as such, many programmers recommend reading and implementing as much of it as possible. MISRA-C was originally intended as guidelines for safety-critical applications in particular, but it applies to any area of application where stable, bug-free C code is desired (who doesn't want fewer bugs?). MISRA-C is becoming the de facto standard in the whole embedded industry and is getting increasingly popular even in other programming branches. There are (at least) three publications of the standard (1998, 2004, and the current version from 2012). There is also a MISRA Compliance Guidelines document from 2016, and MISRA C:2012 Amendment 1 &amp;mdash; Additional Security Guidelines for MISRA C:2012 (published in April 2016).&lt;br/&gt;
Note that some of the strictures in the MISRA rules are not appropriate to every context. For example, directive 4.12 states &quot;Dynamic memory allocation shall not be used&quot;. This is appropriate in the embedded systems for which the MISRA rules are designed; it is not appropriate everywhere. (Compilers, for instance, generally use dynamic memory allocation for things like symbol tables, and to do without dynamic memory allocation would be difficult, if not preposterous.)&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;尽管这不是本书，但许多程序员还是建议阅读并尽可能多地实施。&lt;/sup&gt; &lt;sup&gt;MISRA-C最初旨在作为对安全性至关重要的应用程序的指导原则，但它适用于需要稳定，无错误的C代码（谁不想减少错误的人？）的任何应用程序领域。&lt;/sup&gt; &lt;sup&gt;MISRA-C正在成为整个嵌入式行业的事实上的标准，并且甚至在其他编程分支中也越来越受欢迎。&lt;/sup&gt; &lt;sup&gt;该标准至少有三本出版物（1998年，2004年和2012年的最新版本）。&lt;/sup&gt; &lt;sup&gt;还有2016年以来的《 MISRA遵从性指南》文件和MISRA C：2012修正案1 &amp;ndash; MISRA C：2012的附加安全性指南（于2016年4月发布）。&lt;/sup&gt; &lt;sup&gt;&lt;br/&gt;&lt;/sup&gt; &lt;sup&gt;请注意，MISRA规则中的某些限制并非适用于每种情况。&lt;/sup&gt; &lt;sup&gt;例如，指令4.12指出&amp;ldquo;不得使用动态内存分配&amp;rdquo;。&lt;/sup&gt; &lt;sup&gt;这对于设计了MISRA规则的嵌入式系统是合适的。&lt;/sup&gt; &lt;sup&gt;这并不适合在任何地方。&lt;/sup&gt; &lt;sup&gt;（例如，编译器通常对符号表之类的东西使用动态内存分配，并且如果没有荒谬的话，不进行动态内存分配将很困难。）&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9b5ad8bdaf307a05ed7bf8acb9eba2ec9c26da89" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;Some have argued for the removal of 'Traps and Pitfalls' from this list because it has trapped some people into making mistakes; others continue to argue for its inclusion.  Perhaps it should be regarded as an 'expert' book because it requires a moderately extensive knowledge of C to understand what's changed since it was published.&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;一些人主张从该清单中删除&amp;ldquo;陷阱和陷阱&amp;rdquo;，因为它使某些人陷于犯错。&lt;/sup&gt; &lt;sup&gt;其他人继续争论将其纳入。&lt;/sup&gt; &lt;sup&gt;也许应该将其视为&amp;ldquo;专家&amp;rdquo;书，因为它需要一定程度的C语言方面的知识才能了解自发布以来所发生的变化。&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="60eee7aa8c280a47909a606cc13f44c8fa5b9b95" translate="yes" xml:space="preserve">
          <source>A similar list for &lt;a href=&quot;/questions/tagged/c%2b%2b&quot;&gt;c++&lt;/a&gt;: &lt;a href=&quot;https://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list&quot;&gt;The Definitive C++ Book Guide and List&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;/questions/tagged/c%2b%2b&quot;&gt;c ++的&lt;/a&gt;类似清单： &lt;a href=&quot;https://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list&quot;&gt;权威的C ++书籍指南和清单&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7256a60d5f79dd414f79ed2c828371d4d0a07ae8" translate="yes" xml:space="preserve">
          <source>Also do not use the book &lt;a href=&quot;https://smile.amazon.com/dp/9387284492/&quot;&gt;Let Us C&lt;/a&gt; (16&lt;sup&gt;th&lt;/sup&gt; Edition, 2017) by Yashwant Kanetkar. Many people view it as an outdated book that teaches Turbo C and has lots of obsolete, misleading and incorrect material. For example, page 137 discusses the expected output from &lt;code&gt;printf(&quot;%d %d %d\n&quot;, a, ++a, a++)&lt;/code&gt; and does not categorize it as &lt;a href=&quot;https://stackoverflow.com/questions/949433/why-are-these-constructs-using-pre-and-post-increment-undefined-behavior&quot;&gt;undefined behaviour&lt;/a&gt; as it should.</source>
          <target state="translated">也不要使用Yashwant Kanetkar的《 &lt;a href=&quot;https://smile.amazon.com/dp/9387284492/&quot;&gt;让我们吧》&lt;/a&gt; （2017年&lt;sup&gt;第&lt;/sup&gt; 16版）。 许多人将其视为一本过时的书，该书教授Turbo C，并且包含许多过时，误导和不正确的资料。 例如，第137页讨论了 &lt;code&gt;printf(&quot;%d %d %d\n&quot;, a, ++a, a++)&lt;/code&gt; 的预期输出，并且并未将其分类为&lt;a href=&quot;https://stackoverflow.com/questions/949433/why-are-these-constructs-using-pre-and-post-increment-undefined-behavior&quot;&gt;未定义的行为&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8dbb35263a00459b58a105123d58e844c2bce8f" translate="yes" xml:space="preserve">
          <source>Archived lists of ACCU-reviewed books on &lt;a href=&quot;https://web.archive.org/web/20071105015557/http://www.accu.informika.ru/bookreviews/public/reviews/0sb/beginner_s_c.htm&quot;&gt;Beginner's C&lt;/a&gt; (116 titles) from 2007 and &lt;a href=&quot;https://web.archive.org/web/20081020081215/http://www.accu.informika.ru/bookreviews/public/reviews/0sb/advanced_c.htm&quot;&gt;Advanced C&lt;/a&gt; (76 titles) from 2008. Most of these don't look to be on the main site anymore, and you can't browse that by subject anyway.</source>
          <target state="translated">ACCU审阅过的书籍的存档列表，这些书籍分别来自2007年的&lt;a href=&quot;https://web.archive.org/web/20071105015557/http://www.accu.informika.ru/bookreviews/public/reviews/0sb/beginner_s_c.htm&quot;&gt;Beginner's C&lt;/a&gt; （116个标题）和2008年的&lt;a href=&quot;https://web.archive.org/web/20081020081215/http://www.accu.informika.ru/bookreviews/public/reviews/0sb/advanced_c.htm&quot;&gt;Advanced C&lt;/a&gt; （76个标题）。大多数看起来不再是主要网站，您无法按主题浏览无论如何。</target>
        </trans-unit>
        <trans-unit id="55d312172ebfed276de721db819a19c58fc883fc" translate="yes" xml:space="preserve">
          <source>Be wary of books written by &lt;a href=&quot;http://catb.org/~esr/jargon/html/B/bullschildt.html&quot;&gt;Herbert Schildt&lt;/a&gt;. In particular, you should stay away from &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0072121246&quot;&gt;C: The Complete Reference&lt;/a&gt; (4th Edition, 2000), known in some circles as C: The Complete Nonsense.</source>
          <target state="translated">警惕&lt;a href=&quot;http://catb.org/~esr/jargon/html/B/bullschildt.html&quot;&gt;希尔伯特&amp;bull;希尔德&lt;/a&gt; （ Herbert Schildt）写的书。 特别是，您应该远离&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0072121246&quot;&gt;C：《完全参考》&lt;/a&gt; （2000年第4版），在某些圈子中被称为C：《完全废话》。</target>
        </trans-unit>
        <trans-unit id="60575a6ebba9f780b4312324662169830d12bea1" translate="yes" xml:space="preserve">
          <source>Beginner</source>
          <target state="translated">Beginner</target>
        </trans-unit>
        <trans-unit id="28c8a2e0c5de73844a772229fb81293d382a9ab3" translate="yes" xml:space="preserve">
          <source>C is a complex programming language that is difficult to pick up on-the-go by reading online tutorials. A comprehensive book is often the best way to learn the language, and finding a good book is the first step. It is important to avoid badly-written books, and even more importantly, books that contain serious technical errors.</source>
          <target state="translated">C语言是一门复杂的编程语言,靠看网上的教程是很难入门的。全面的书籍往往是学习这门语言的最好方法,找到一本好书是第一步。重要的是要避免写得不好的书,更重要的是要避免写得不好的书,更重要的是要避免出现严重的技术错误的书。</target>
        </trans-unit>
        <trans-unit id="d7a501f83242fd940b8190529432e0703dd7606f" translate="yes" xml:space="preserve">
          <source>Expert</source>
          <target state="translated">Expert</target>
        </trans-unit>
        <trans-unit id="c82c21c336ab58ba1e80c139e84d5ac638ab181a" translate="yes" xml:space="preserve">
          <source>Feel free to debate book choices, quality, headings, summaries, skill levels, and anything else you see that is wrong. Books that are deemed satisfactory by the C community here will stick around on the list; the rest will be regularly removed.</source>
          <target state="translated">欢迎大家对书的选择、质量、标题、摘要、技巧水平以及其他任何你认为不对的地方进行辩论。在这里,C社认为满意的书会留在榜单上,其他的书会定期删除。</target>
        </trans-unit>
        <trans-unit id="c1608c336a623c4b5245f1cb98dc31e28ad6fa5e" translate="yes" xml:space="preserve">
          <source>For books that have reviews by the Association of C and C++ Users (ACCU), a link to those reviews should be added along with the book.</source>
          <target state="translated">对于有C和C++用户协会(ACCU)评论的书籍,应在书中附上这些评论的链接。</target>
        </trans-unit>
        <trans-unit id="b1cfe72fd27178870354f9f4e07bb82072caea55" translate="yes" xml:space="preserve">
          <source>Intermediate</source>
          <target state="translated">Intermediate</target>
        </trans-unit>
        <trans-unit id="d2a0220094904f2691b37d0c999d55bd7112059e" translate="yes" xml:space="preserve">
          <source>Other C-related resources in the &lt;a href=&quot;/questions/tagged/c&quot;&gt;c&lt;/a&gt;&lt;a href=&quot;https://stackoverflow.com/tags/c/info&quot;&gt;tag wiki&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;/questions/tagged/c&quot;&gt;c&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/tags/c/info&quot;&gt;标签Wiki&lt;/a&gt;中的其他与C相关的资源</target>
        </trans-unit>
        <trans-unit id="23b567b459f547f8b04735423221357fd68d7f6c" translate="yes" xml:space="preserve">
          <source>Outdated</source>
          <target state="translated">Outdated</target>
        </trans-unit>
        <trans-unit id="772c44f1db657bd9838fb0b752fe035bb666ca08" translate="yes" xml:space="preserve">
          <source>Please suggest edits to the accepted answer to add quality books, with an approximate skill level and a short blurb/description about each book. (&lt;em&gt;Note that the question is locked, so no new answers will be accepted. A single answer is being maintained with the list&lt;/em&gt;)</source>
          <target state="translated">请提出对已接受答案的修改建议，以添加高质量的书，并附上大致的技能水平，并简要介绍每本书。 （ &lt;em&gt;请注意，该问题已锁定，因此不会接受新的答案。列表中仅保留一个答案&lt;/em&gt; ）</target>
        </trans-unit>
        <trans-unit id="db2c7805b97a0e81efef9b5e9a74b382ef8c172d" translate="yes" xml:space="preserve">
          <source>Reference (All Levels)</source>
          <target state="translated">参考资料(所有级别)</target>
        </trans-unit>
        <trans-unit id="371a87eafb4de078ff674d69a5a89c186532eb49" translate="yes" xml:space="preserve">
          <source>See also:</source>
          <target state="translated">也见。</target>
        </trans-unit>
        <trans-unit id="ec6b346e24ba0ba3f73eaa3bb7033af065508943" translate="yes" xml:space="preserve">
          <source>The Definitive C Book Guide and List</source>
          <target state="translated">绝对的C语言书籍指南和列表</target>
        </trans-unit>
        <trans-unit id="144f6f6f732dd6da7d69377be0b2683c0f089cae" translate="yes" xml:space="preserve">
          <source>This question attempts to collect a community-maintained list of &lt;strong&gt;&lt;em&gt;quality&lt;/em&gt;&lt;/strong&gt; books on the &lt;a href=&quot;/questions/tagged/c&quot;&gt;c&lt;/a&gt; programming language, targeted at various skill levels.</source>
          <target state="translated">这个问题试图收集针对各种技能水平的社区维护的&lt;a href=&quot;/questions/tagged/c&quot;&gt;c&lt;/a&gt;编程语言&lt;strong&gt;&lt;em&gt;优质&lt;/em&gt;&lt;/strong&gt;图书清单。</target>
        </trans-unit>
        <trans-unit id="f75a8b2fde02f6fd50c3bd0b90413734b6a530f6" translate="yes" xml:space="preserve">
          <source>To summarize my views, which are laid out below, the author presents the material in a greatly oversimplified and misleading way, the whole corpus is a bundled mess, and some of the opinions and analyses he offers are just plain wrong. I've tried to view this book through the eyes of a novice, but unfortunately I am biased by years of experience writing code in C. It's obvious to me that either the author has a flawed understanding of C, or he's deliberately oversimplifying to the point where he's actually misleading the reader (intentionally or otherwise.)</source>
          <target state="translated">总结一下我的观点,以下是我的看法,作者以一种极大的过度简化和误导性的方式介绍了这些材料,整个语料库是一个捆绑式的混乱,而且他提供的一些观点和分析完全是错误的。我试着用一个新手的眼光来看待这本书,但很遗憾,由于多年的C语言代码编写经验,我对这本书有一定的偏见。</target>
        </trans-unit>
        <trans-unit id="4ef7d73c1a83464f50c8d1b29b43e85facfdf3ee" translate="yes" xml:space="preserve">
          <source>Uncategorized</source>
          <target state="translated">Uncategorized</target>
        </trans-unit>
        <trans-unit id="188d6905b9ab9f32ac73c8e9137d183077dcf118" translate="yes" xml:space="preserve">
          <source>Various versions of the C language standards can be found &lt;a href=&quot;http://www.iso-9899.info/wiki/The_Standard&quot;&gt;here&lt;/a&gt;.  There is an online version of the &lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html&quot;&gt;draft C11 standard&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;http://www.iso-9899.info/wiki/The_Standard&quot;&gt;这里&lt;/a&gt;可以找到C语言标准的各种版本。 有&lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html&quot;&gt;C11标准草案&lt;/a&gt;的在线版本。</target>
        </trans-unit>
        <trans-unit id="1430f976c596795274458abcfbc4f280cbfcebac" translate="yes" xml:space="preserve">
          <source>Warnings</source>
          <target state="translated">Warnings</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
