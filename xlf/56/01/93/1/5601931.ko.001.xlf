<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/5601931">
    <body>
      <group id="5601931">
        <trans-unit id="824f3152b1b7fd2538779e5abdbdeed15f9e7e20" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;A:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d02322b66307b49fd24fc821c92b67b3446d021f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;B:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;B:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3e289ee3d2aa4c979378cd22f036ddfdc4230055" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Get Master and Branch up-to-date:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;마스터 및 지점을 최신 상태로 유지하십시오.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a9645d6dee411cf6d1c377809495c736a7dd8205" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Merge Branch on top of Master:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;마스터 위에 지점 병합 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e2a5982e31e1dec129c1f783016921e6a365e146" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Never do operations&lt;/strong&gt; like the following:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같은 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;작업을 수행하지 마십시오&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc144f13ca19df625fe8c18492af6365d79f4f19" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Now you've got two options:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 두 가지 옵션이 있습니다.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6abdf68908a6e7b39381bba97de06f6cbb9c8b0b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Optional: If you run into Conflicts during the Rebase:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;선택 사항 : 리베이스 중에 충돌이 발생하는 경우 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="664a280c16420c5b073b0aaee5e26ac515b44a85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Push your rebased Branch:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신의 리베이스 지점을 밀어 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39b861b1d09beff469de93a9743f68a4e18671de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Question 1:&lt;/strong&gt; Is this the right approach?  Other developers could have easily worked on same files as I have worked btw.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;질문 1 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이것이 올바른 접근입니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 개발자는 내가 btw와 같은 파일을 쉽게 작업 할 수있었습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bb6b9417b48c4124d9d206c66c642d8cb1595540" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Question 2:&lt;/strong&gt; Which one of these two methods is right?  What is the difference there?</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;질문 2 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 두 가지 방법 중 어느 것이 옳습니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;차이점은 무엇입니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="464b148552724ff207b0112abb9cf42c13cb8eb4" translate="yes" xml:space="preserve">
          <source>@KingCrunch's answer should work in many cases. One issue that can arise is you may be on a different machine that needs to pull the latest from test. So, I recommend pulling test first. The revision looks like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@KingCrunch의 답변은 많은 경우에 효과가 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;발생할 수있는 한 가지 문제는 테스트에서 최신을 가져와야하는 다른 컴퓨터에있을 수 있다는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;먼저 테스트를하는 것이 좋습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;개정판은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="96a73b51ea21ad0c94af7b76af7f885bae5d6138" translate="yes" xml:space="preserve">
          <source>A new branch from &lt;code&gt;master&lt;/code&gt; is created, we call it &lt;code&gt;test&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;master&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 새 브랜치 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가 생성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;됩니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 라고합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65b42eeb4415fb1321e9af2bc8712f4b519ed2b9" translate="yes" xml:space="preserve">
          <source>A) Create a PR (e.g. on GitHub) and merge it there via the UI</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A) PR을 생성하고 (예 : GitHub에서) UI를 통해 병합합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="85d0eb1c58201ad564c5578ef05bd30b374b750f" translate="yes" xml:space="preserve">
          <source>After merging, if the file is changed, then when you merge it will through error of &quot;Resolve Conflict&quot;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;병합 후 파일이 변경되면 병합 할 때 &quot;충돌 해결&quot;오류가 발생합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c34c23f71c3f745e3f2c55c2acdcb423614bac8" translate="yes" xml:space="preserve">
          <source>After the merge of the pull request, you can delete it locally:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;풀 요청을 병합 한 후 로컬로 삭제할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="97176f85996fe35b34b32dbb0fa9ab51aead062c" translate="yes" xml:space="preserve">
          <source>As the title says &quot;Best way&quot;, I think it's a good idea to  consider the
&lt;em&gt;patience&lt;/em&gt; merge strategy.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;제목에 &quot;Best way&quot;라고 표시되어 있으므로 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인내&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 병합 전략 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을 고려하는 것이 좋습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="44c9f1f6ef01f336932f93dfbda33a3c9c734200" translate="yes" xml:space="preserve">
          <source>B) Go back on the command line and merge the branch into master</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;B) 커맨드 라인으로 돌아가서 브랜치를 마스터로 병합하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4e704ba3beeb3628e03cc503f731e1c7f231e93f" translate="yes" xml:space="preserve">
          <source>Besides &lt;a href=&quot;https://stackoverflow.com/a/5602109/562769&quot;&gt;KingCrunches answer&lt;/a&gt;, I suggest to use</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/5602109/562769&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;KingCrunches 답변&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 외에도 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하는 것이 좋습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="085a49692b5c1be9fc89fff92a6961c5ff632950" translate="yes" xml:space="preserve">
          <source>But this way will lose the changes history logged in test branch, and it would make master branch to be hard for other developers to understand the history of the project.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나이 방법으로 테스트 브랜치에 기록 된 변경 히스토리를 잃게되므로 다른 개발자가 프로젝트 히스토리를 이해하기 어려운 마스터 브랜치를 만들게됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="54866e9a01a6273034aefe86133ec5d8e3231b5a" translate="yes" xml:space="preserve">
          <source>Details for &lt;a href=&quot;https://www.atlassian.com/git/tutorials/merging-vs-rebasing/the-golden-rule-of-rebasing&quot;&gt;https://www.atlassian.com/git/tutorials/merging-vs-rebasing/the-golden-rule-of-rebasing&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;https://www.atlassian.com/git/tutorials/merging-vs-rebasing/the-golden-rule-of-rebasing&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://www.atlassian.com/git/tutorials/merging-vs-rebasing/the-golden-rule-of-rebasing에&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대한 세부 사항&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e2bcda84facb3954e32539ae66300758b6d834b2" translate="yes" xml:space="preserve">
          <source>Done.</source>
          <target state="translated">Done.</target>
        </trans-unit>
        <trans-unit id="e87856bc7a77476184cba84be4fe57647772dbad" translate="yes" xml:space="preserve">
          <source>Find the merge base hash:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;병합 기본 해시를 찾으십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64adfbddfce9cc2a09d88a777db0b92acecb9884" translate="yes" xml:space="preserve">
          <source>First, resolve conflict in file. Then:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;먼저 파일 충돌을 해결하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그때:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="61784ceaf4a35de9c61d7c7d4b276afb9e4d396e" translate="yes" xml:space="preserve">
          <source>Following is one simple sample, for advanced operations, please refer to &lt;a href=&quot;http://git-scm.com/book/en/v2/Git-Branching-Rebasing&quot;&gt;http://git-scm.com/book/en/v2/Git-Branching-Rebasing&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 고급 작업을위한 간단한 샘플입니다. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://git-scm.com/book/en/v2/Git-Branching-Rebasing&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://git-scm.com/book/en/v2/Git-Branching-Rebasing&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e6a37bd055e65a7ff9be62dc890a049ec4bb3487" translate="yes" xml:space="preserve">
          <source>From: &lt;a href=&quot;https://git-scm.com/docs/merge-strategies&quot;&gt;https://git-scm.com/docs/merge-strategies&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;보낸 사람 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://git-scm.com/docs/merge-strategies&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://git-scm.com/docs/merge-strategies&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5113e362fc570812dbedae76620592d4e5118bba" translate="yes" xml:space="preserve">
          <source>Get the latest from origin</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;원산지에서 최신을 얻으십시오&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4025b4f7ccf48c2604a68e973b66bb12ba857c0d" translate="yes" xml:space="preserve">
          <source>Git Alias</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;힘내 별칭&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5811dac0561499ac53b9783986b54e1ff2ca9a6a" translate="yes" xml:space="preserve">
          <source>How I would do this</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내가 어떻게 할까&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3154520eb56be9916b9c9676436aa12c32202236" translate="yes" xml:space="preserve">
          <source>How to Rebase a Pull Request</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;풀 요청을 리베이스하는 방법&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="69783f49bda32663cfcf667a3c7b8ac87115c9f0" translate="yes" xml:space="preserve">
          <source>I am not using &lt;code&gt;--rebase&lt;/code&gt; because from my understanding, rebase will get the changes from &lt;code&gt;master&lt;/code&gt; and stack mine on top of that hence it could overwrite changes other people made.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내가 사용하고 있지 않다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;--rebase&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 때문에 나의 이해에서, REBASE은의 변경 얻을 것이다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;master&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하고 다른 사람이 변경 한 내용을 덮어 쓸 수 따라서 그 위에 내 스택.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="beaf4cea5576e6a848cb02210128712c454203f2" translate="yes" xml:space="preserve">
          <source>I use always an alias for this, e.g. run once:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 항상 이것에 대한 별칭을 사용합니다 (예 : 한 번 실행).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95921142b852079c11489d90316906c971a994bf" translate="yes" xml:space="preserve">
          <source>I would do &lt;code&gt;git pull origin master&lt;/code&gt; from &lt;code&gt;test&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 할 것이다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;git pull origin master&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="23725442396f87a3e9bcf350817c0ac235e61b0a" translate="yes" xml:space="preserve">
          <source>I would first make the to-be-merged branch as clean as possible. Run your tests, make sure the state is as you want it. Clean up the new commits by &lt;a href=&quot;https://stackoverflow.com/a/51049029/562769&quot;&gt;git squash&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;먼저 병합 할 브랜치를 가능한 깨끗하게 만듭니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트를 실행하고 원하는 상태인지 확인하십시오. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/51049029/562769&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;git squash로&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 새로운 커밋을 정리하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7676a73018571e45bfb95efaff2a3c85722f6e1f" translate="yes" xml:space="preserve">
          <source>I would use the rebase method. Mostly because it perfectly reflects your case semantically, ie. what you want to do is to refresh the state of your current branch and &quot;pretend&quot; as if it was based on the latest.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;rebase 방법을 사용합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대부분 사건을 의미 적으로 완벽하게 반영하기 때문입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신이하고 싶은 것은 현재 브랜치의 상태를 새로 고침하고 마치 최신을 기반으로하는 것처럼 &quot;보장&quot;하는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="face38b7168be759312169533e827108a310c70b" translate="yes" xml:space="preserve">
          <source>If I have a local branch from a remote one, I don't feel comfortable with merging other branches than this one with the remote. Also I would not push my changes, until I'm happy with what I want to push and also I wouldn't push things at all, that are only for me and my local repository. In your description it seems, that &lt;code&gt;test&lt;/code&gt; is only for you? So no reason to publish it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;원격 지점의 로컬 지점이 있으면 다른 지점을 원격 지점과 병합하는 것이 불편합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 푸시하려는 내용이 마음에들 때까지 변경 사항을 푸시하지 않으며 또한 나와 내 로컬 저장소에만 해당하는 사항을 전혀 푸시하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;귀하의 설명에 따르면, 그 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 당신만을위한 것입니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 게시 할 이유가 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a963d4973e78e830340e0daf99263892790c7b42" translate="yes" xml:space="preserve">
          <source>If conflict is encountered, we can run &lt;code&gt;git status&lt;/code&gt; to check details about the conflicts and try to solve</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;충돌이 발생하면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;git status&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실행 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 충돌에 대한 세부 정보를 확인하고 해결하려고 할 수 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d19f6caed3ed03aab684549e4d66abaa59bd2520" translate="yes" xml:space="preserve">
          <source>If you're worried about breaking something on the merge, &lt;code&gt;git merge --abort&lt;/code&gt; is there for you.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;병합에서 무언가를 깨뜨리는 것이 걱정된다면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;git merge --abort&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c173be29cceefc2091d06b8a7b0a28bfbccc860b" translate="yes" xml:space="preserve">
          <source>In git, what is the difference between merge --squash and rebase?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;git에서 merge --squash와 rebase의 차이점은 무엇입니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f2fb671d5d98b5ecf8093c5bf3fe083454eba0f0" translate="yes" xml:space="preserve">
          <source>It would &quot;squeeze&quot; all test commits into one merge commit on master; that is to say on master branch, we can't see the all change logs of test branch.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;마스터에서 모든 테스트 커밋을 하나의 병합 커밋으로 &quot;압착&quot;합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉, 마스터 브랜치에서 테스트 브랜치의 모든 변경 로그를 볼 수는 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="40b0c55c8eb46edc89840afc417c106d6fbe79bd" translate="yes" xml:space="preserve">
          <source>It's unsafe, because we don't know if there are any conflicts between test branch and master branch.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트 브랜치와 마스터 브랜치간에 충돌이 있는지 알 수 없기 때문에 안전하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac776baec17e4ddb6f5cdb956754c41ab80f905f" translate="yes" xml:space="preserve">
          <source>Let's say work on &lt;code&gt;test&lt;/code&gt; is taking several days and you want to continuously keep &lt;code&gt;test&lt;/code&gt; updated with commits inside &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 작업에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;며칠이 걸리고 &lt;/font&gt; &lt;code&gt;master&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 내부의 커밋으로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 지속적으로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;업데이트 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하려고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한다고 가정 해 봅시다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c7e02c95fe85052fcadf9745a5f1d0358088d936" translate="yes" xml:space="preserve">
          <source>Like</source>
          <target state="translated">Like</target>
        </trans-unit>
        <trans-unit id="aba00e463c30385ac65aed880f1c7f9938f53a58" translate="yes" xml:space="preserve">
          <source>Merging vs. Rebasing</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;병합 대 리베이스&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9429d5e4b3b482f0f6c276fccd53470c5615e1b" translate="yes" xml:space="preserve">
          <source>My work on &lt;code&gt;test&lt;/code&gt; is done and I am ready to merge it back to &lt;code&gt;master&lt;/code&gt;. Here are the two ways I can think of:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 작업 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 완료되었으며 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;master&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 다시 병합 할 준비가되었습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내가 생각할 수있는 두 가지 방법은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9881233e223fea124802bfbfc7bc561d8982189c" translate="yes" xml:space="preserve">
          <source>Neither a rebase nor a merge should overwrite anyone's changes (unless you choose to do so when resolving a conflict).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;리베이스 나 합병으로 인해 충돌을 해결할 때 다른 사람의 변경 내용을 덮어 쓰면 안됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e059fb0744ca7abd0282c69804cb52e4708562c8" translate="yes" xml:space="preserve">
          <source>Next choose a very good commit message and push to GitHub. Make the pull request then.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음으로 매우 좋은 커밋 메시지를 선택하고 GitHub로 푸시하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 풀 요청을하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e8a7d20326f65c0583c78a5315b6510e531ed07e" translate="yes" xml:space="preserve">
          <source>No need to check out first; rebase does the right thing with two arguments</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;먼저 확인할 필요가 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;rebase는 두 가지 주장으로 올바른 일을한다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f10997bf03a736ecd3c1f278ec593f4a66416b9" translate="yes" xml:space="preserve">
          <source>Now make sure only the first is &lt;code&gt;pick&lt;/code&gt;, the rest is &lt;code&gt;s&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 첫 번째 만 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;pick&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하고 나머지는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;s&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 인지 확인하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b07b08f20a7ab7ffee5b1697333c0583f92f9467" translate="yes" xml:space="preserve">
          <source>Now you could do:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 할 수있는 일 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="80c3c46090f55c0b33c7c91af3c53e5622766461" translate="yes" xml:space="preserve">
          <source>Of course, just fetching from origin does not refresh the local state of your &lt;code&gt;master&lt;/code&gt; (as it does not perform a merge), but it is perfectly ok for our purpose - we want to avoid switching around, for the sake of saving time.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;물론 원점에서 가져 오기만해도 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;master&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 로컬 상태가 새로 고쳐지지는 않지만 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(병합을 수행하지 않기 때문에) 우리의 목적에 완벽하게 맞습니다. 시간을 절약하기 위해 전환을 피하고 싶습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="16f166c01edb38bee3b3302e0b8c21ffc47852d6" translate="yes" xml:space="preserve">
          <source>Old thread, but I haven't found &lt;a href=&quot;https://www.robinwieruch.de/git-team-workflow&quot;&gt;&lt;strong&gt;my way&lt;/strong&gt;&lt;/a&gt; of doing it. It might be valuable for someone who works with rebase and wants to merge all the commits from a (feature) branch on top of master. If there is a conflict on the way, you can resolve them for every commit. You keep full control during the process and can abort any time.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;오래된 실이지만 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.robinwieruch.de/git-team-workflow&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 방식&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;찾지 못했습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;rebase로 작업하고 마스터의 (기능) 브랜치에서 모든 커밋을 병합하려는 사람에게 유용 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;도중에 충돌이있는 경우 모든 커밋마다 충돌을 해결할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로세스 중에 모든 권한을 유지하며 언제든지 중단 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eff877fa1589a9eecab1a06103426f2b4038d7ad" translate="yes" xml:space="preserve">
          <source>Once we solve the conflicts, or if there is no conflict, we &lt;code&gt;commit&lt;/code&gt; and &lt;code&gt;push&lt;/code&gt; them</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리는 갈등을 해결하거나, 충돌이없는 경우, 우리는 일단 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;commit&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;push&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="be9cd61d64dff7dac10812105ad2a8954bc99fc7" translate="yes" xml:space="preserve">
          <source>So on GitHub, I end up doing the following for a feature branch &lt;code&gt;mybranch&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그래서 GitHub에서 기능 브랜치 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;mybranch&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대해 다음을 수행합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e44172425ebe5bc2e540232703986d31896df8dc" translate="yes" xml:space="preserve">
          <source>So the best method is we have to use &lt;code&gt;rebase&lt;/code&gt; instead of &lt;code&gt;merge&lt;/code&gt; (suppose, when in this time, we have solved the branch conflicts).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 가장 좋은 방법은 &lt;/font&gt; &lt;code&gt;merge&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대신 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;rebase&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 사용해야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(이 시점에서 지점 충돌을 해결했다고 가정).&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="96b2ee6696aa60481c6711ab82827f4fe4500a3c" translate="yes" xml:space="preserve">
          <source>So then you need to first resolve all your conflicts then, you have to again commit all your changes and then push</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 먼저 모든 충돌을 해결 한 다음 모든 변경 사항을 다시 커밋 한 다음&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f0caa48c38786373f48ff840b40971aef9ff2da" translate="yes" xml:space="preserve">
          <source>So, when we suspect there would some conflicts, we can have following git operations:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 충돌이 있다고 의심되면 다음과 같은 git 작업을 수행 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a7f31f6fefae911b56e6e9f888cfd2d3fccc3eb7" translate="yes" xml:space="preserve">
          <source>So, without even checking out &lt;code&gt;master&lt;/code&gt;, I would:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;master&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 확인하지 않고도 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같이합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d50d95f4c020d77d41a05a479081644c7d912e11" translate="yes" xml:space="preserve">
          <source>Test &lt;code&gt;merge&lt;/code&gt; before &lt;code&gt;commit&lt;/code&gt;, avoid a fast-forward commit by &lt;code&gt;--no-ff&lt;/code&gt;,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;commit&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 전에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;merge&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하고 &lt;/font&gt; &lt;code&gt;--no-ff&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 빨리 감기 커밋을 피하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b17f6cdde653674acafebb4dddb01498683d1dde" translate="yes" xml:space="preserve">
          <source>The goal in all of this is to keep my &lt;code&gt;test&lt;/code&gt; branch updated with the things happening in &lt;code&gt;master&lt;/code&gt; and later I could merge them back into &lt;code&gt;master&lt;/code&gt; hoping to keep the timeline as linear as possible.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 모든 목표는 &lt;/font&gt; &lt;code&gt;master&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 일어나는 일로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 브랜치를 업데이트 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하고 나중에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;타임 라인을 최대한 선형으로 유지하기 위해 &lt;/font&gt; &lt;code&gt;master&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 브랜치 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로 다시 병합 할 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="409c1ae3c5cc29be04f599da3eb4e2b8c9fd4b47" translate="yes" xml:space="preserve">
          <source>The only thing you need to avoid is: never use &lt;code&gt;rebase&lt;/code&gt; on public branch, like master branch.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;피해야 할 유일한 것은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;마스터 브랜치와 같은 퍼블릭 브랜치에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;rebase&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하지 않는 것 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="74e8ba721ccd8d048dc57b6010f31ed1bc6e06ba" translate="yes" xml:space="preserve">
          <source>The usual approach while developing is</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;개발하는 동안 일반적인 접근 방식은&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3fc6209aaf6e0ffe88882adcc344ed4ebd99b5be" translate="yes" xml:space="preserve">
          <source>There are several developers who either commit to &lt;code&gt;master&lt;/code&gt; or create other branches and later merge into &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 브랜치 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;master&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하거나 다른 브랜치를 생성하고 나중에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;master&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 병합 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 여러 개발자가 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="18587a93ebab1f8c9be6ac6cf1eddcee1a003721" translate="yes" xml:space="preserve">
          <source>This approach has &lt;strong&gt;two issues&lt;/strong&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 방법에는 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 가지 문제&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67226dedf85f8b6ed7c2681bf080b22a5f95c756" translate="yes" xml:space="preserve">
          <source>This is a very practical question, but all the answers above are not practical.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 매우 실용적인 질문이지만 위의 모든 답변이 실용적이지는 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="04a223ea41643a66c0f840c3f2e13b3295f1d9a1" translate="yes" xml:space="preserve">
          <source>This is better do who has done changes in test branch, because he knew what changes he has done.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트 브랜치에서 누가 변경을했는지 알고 있기 때문에 테스트 브랜치에서 누가 변경을 수행했는지가 더 좋습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2ab9709e698a333c1d401c0250bf537962df779" translate="yes" xml:space="preserve">
          <source>This is from GitLab:
Just follow the instructions:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 GitLab에서 온 것입니다. 지침을 따르십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8c9c0de8185b794738f935283c8ff3fc94b38b01" translate="yes" xml:space="preserve">
          <source>This is the workflow that I use at my job with the team. The scenario is as you described. First, when I'm done working on &lt;code&gt;test&lt;/code&gt; I rebase with master to pull in whatever has been added to master during the time I've been working on the &lt;code&gt;test&lt;/code&gt; branch.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 팀과 함께 일할 때 사용하는 워크 플로입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;시나리오는 설명한대로입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;먼저 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 작업을 마쳤을 때 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 브랜치 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 작업하는 동안 마스터에 추가 된 모든 항목을 가져 오기 위해 master로 리베이스 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="623eac7bacfe412109f5dfd2fe2bbb73aab0359f" translate="yes" xml:space="preserve">
          <source>This will pull the changes to master since you forked the &lt;code&gt;test&lt;/code&gt; branch and apply them, and then apply the changes you've made to test &quot;on top of&quot; the current state of master. There may be conflicts here, if the other people have made changes to the same files that you've edited in test. If there are, you will have to fix them manually, and commit. Once you've done that, you'll be good to switch to the master branch and merge &lt;code&gt;test&lt;/code&gt; in with no problems.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 분기 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 분기 한 후 변경 사항을 마스터로 가져 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;와서 적용한 다음 현재 마스터 상태의 &quot;위에&quot;테스트하기 위해 변경 한 내용을 적용합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 사람들이 테스트에서 편집 한 것과 동일한 파일을 변경 한 경우 여기에 충돌이있을 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있으면 수동으로 수정하고 커밋해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇게 한 후에는 마스터 브랜치로 전환하고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문제없이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;병합하는 것이 좋습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="9d5ed5e20df08fe51ba9f9ea995eaab3cccc809c" translate="yes" xml:space="preserve">
          <source>Using push and then pull as a means of merging is silly. I'm also not sure why you're pushing test to origin.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;병합 수단으로 푸시 앤 풀을 사용하는 것은 어리석은 일입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 왜 테스트를 원점으로 진행하는지 잘 모르겠습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="61ab124eb9857e779f9bdc63aac2f1a33fe33917" translate="yes" xml:space="preserve">
          <source>What is the best (and safest) way to merge a Git branch into master</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Git 브랜치를 마스터로 병합하는 가장 좋은 방법은 무엇입니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="16411dd40657d4fb3adb07467695b1f319702194" translate="yes" xml:space="preserve">
          <source>When you're ready to merge back into master,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;마스터로 다시 병합 할 준비가되면&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="290703990faac27634cf67abe3b691ce2ddfa486" translate="yes" xml:space="preserve">
          <source>With this option, 'merge-recursive' spends a little extra time to avoid mismerges that sometimes occur due to unimportant matching lines (e.g., braces from distinct functions). Use this when the branches to be merged have diverged wildly. See also git-diff[1] --patience.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 옵션을 사용하면 '병합 재귀'는 중요하지 않은 일치하는 줄 (예 : 개별 함수의 중괄호)로 인해 때때로 발생하는 혼동을 피하기 위해 약간의 추가 시간을 소비합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;병합 할 브랜치가 심하게 분기 된 경우이 옵션을 사용하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;git-diff [1] --patience도 참조하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9f3aed978dcbb27efb7cb173a0bc60d3d32b63d4" translate="yes" xml:space="preserve">
          <source>Yep, when you have uppers done, all the Test branch's commits will be moved onto the head of Master branch. The major benefit of rebasing is that you get a linear and much cleaner project history.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나, 당신이 상위를 완료하면 모든 테스트 브랜치의 커밋이 마스터 브랜치의 헤드로 이동됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;리베이스 작업의 주요 이점은 선형적이고 훨씬 깨끗한 프로젝트 기록을 얻는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6566394e38ca55288dda6626b789492f64abd019" translate="yes" xml:space="preserve">
          <source>You have to have the branch checked out to pull, since pulling means merging into master, and you need a work tree to merge in.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;잡아 당기는 것은 마스터로 병합하는 것을 의미하고 병합하려면 작업 트리가 필요하기 때문에 분기를 당겨서 가져와야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d2e3d74406f77ca9aaf6290012a618375de27dde" translate="yes" xml:space="preserve">
          <source>You might have made many commits in the other branch, which should only be one commit in the master branch. To keep the commit history as clean as possible, you might want to squash all your commits from the test branch into one commit in the master branch (see also: &lt;a href=&quot;http://jamescooke.info/git-to-squash-or-not-to-squash.html&quot;&gt;Git: To squash or not to squash?&lt;/a&gt;). Then you can also rewrite the commit message to something very expressive. Something that is easy to read and understand, without digging into the code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 브랜치에서 많은 커밋을 만들었을 수 있습니다. 마스터 브랜치에서는 한 번의 커밋이어야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;커밋 히스토리를 가능한 한 깨끗하게 유지하기 위해 테스트 브랜치의 모든 커밋을 마스터 브랜치에서 하나의 커밋으로 스쿼시하고 싶을 수도 있습니다 ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jamescooke.info/git-to-squash-or-not-to-squash.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Git : 스쿼시 또는 스쿼시? 참조&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 커밋 메시지를 매우 표현적인 것으로 다시 작성할 수도 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드를 파지 않고 읽고 이해하기 쉬운 것.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ce79c1e4352fe286c02044effbff9538071bbe3f" translate="yes" xml:space="preserve">
          <source>and on GitHub</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 GitHub에서&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="acda2ff6580e0a41002362fdc1b084f7cde4edb9" translate="yes" xml:space="preserve">
          <source>appendix:</source>
          <target state="translated">appendix:</target>
        </trans-unit>
        <trans-unit id="6cf6614d29b796fe681888694f507e6ffd65f158" translate="yes" xml:space="preserve">
          <source>edit: You might be interested in</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;편집 : 당신은에 관심이있을 수 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b9f209b7473d9860015ba4759c6d31cb7d52c2fc" translate="yes" xml:space="preserve">
          <source>git always tries to respect yours and others changes, and so will &lt;code&gt;--rebase&lt;/code&gt;. I don't think I can explain it appropriately, so have a look at &lt;a href=&quot;http://git-scm.com/book/en/Git-Branching-Rebasing&quot;&gt;the Git book - Rebasing&lt;/a&gt; or &lt;a href=&quot;http://gitready.com/intermediate/2009/01/31/intro-to-rebase.html&quot;&gt;git-ready: Intro into rebasing&lt;/a&gt; for a little description. It's a quite cool feature</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;git은 항상 당신과 다른 사람들의 변화를 존중하려고 노력하며 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;--rebase&lt;/code&gt; 도 마찬가지&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 그것을 적절하게 설명 할 수 없다고 생각 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://git-scm.com/book/en/Git-Branching-Rebasing&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하므로 Git 책-Rebasing&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://gitready.com/intermediate/2009/01/31/intro-to-rebase.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;git-ready :&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 약간의 설명을 위해 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;rebasing&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;소개하십시오&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아주 멋진 기능입니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="17af06d293f122c03a617d9c3855cd8491939cd3" translate="yes" xml:space="preserve">
          <source>git push by default pushes all branches that exist here and on the remote</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본적으로 git push는 여기와 원격에 존재하는 모든 분기를 푸시합니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ebff2c9e13a1b97803cfcf04504742de0b7ea4b9" translate="yes" xml:space="preserve">
          <source>if you are not sure about rebasing operations, please refer to: &lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Branching-Rebasing&quot;&gt;https://git-scm.com/book/en/v2/Git-Branching-Rebasing&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;리베이스 작업에 대해 잘 모르는 경우 &lt;/font&gt;&lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Branching-Rebasing&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://git-scm.com/book/en/v2/Git-Branching-Rebasing을&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 참조하십시오.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
