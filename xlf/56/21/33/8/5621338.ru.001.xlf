<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/5621338">
    <body>
      <group id="5621338">
        <trans-unit id="186ac159591784d588a50b2847718b6511545f93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTable&lt;/code&gt; should be added into the &lt;code&gt;JScrollPane&lt;/code&gt; which actually should be added into the &lt;code&gt;JPanel&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; должен быть добавлен в &lt;code&gt;JScrollPane&lt;/code&gt; , который фактически должен быть добавлен в &lt;code&gt;JPanel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ae9c8831cf88e1b19fd5162142d9125984b84731" translate="yes" xml:space="preserve">
          <source>Also when designing your dialog, remember that you can and should &lt;strong&gt;nest your layouts&lt;/strong&gt;: one JPanel inside another JPanel (e.g. a GridLayout inside a BorderLayout). Please note: a 'good' dialog should &lt;strong&gt;resize properly&lt;/strong&gt;, so that if the user resizes your Frame, you want to automatically extend your information objects such as your table, and not show large areas of JPanel background. That's something you cannot achieve with a NullLayout.</source>
          <target state="translated">Также при разработке вашего диалога помните, что вы можете и должны &lt;strong&gt;вкладывать свои макеты&lt;/strong&gt; : один JPanel в другой JPanel (например, GridLayout внутри BorderLayout). Обратите внимание: &amp;laquo;хороший&amp;raquo; диалог должен &lt;strong&gt;правильно изменять размер&lt;/strong&gt; , так что если пользователь изменяет &lt;strong&gt;размер&lt;/strong&gt; вашего фрейма, вы хотите автоматически расширять ваши информационные объекты, такие как таблица, и не показывать большие области фона JPanel. Это то, чего вы не можете достичь с помощью NullLayout.</target>
        </trans-unit>
        <trans-unit id="a92c9956142c6600c1bcc3b4f219073b71d0f4cf" translate="yes" xml:space="preserve">
          <source>As I can remember, the &lt;strong&gt;null&lt;/strong&gt; layout means an absolute position so it will be pretty hard you to count the X point for your JTable left upper corner location. But if you just want to have all panel components one by one you can use FlowLayout() manager as</source>
          <target state="translated">Как я помню, &lt;strong&gt;нулевой&lt;/strong&gt; макет означает абсолютную позицию, поэтому вам будет довольно сложно подсчитать точку X для вашего левого верхнего угла JTable. Но если вы хотите, чтобы все компоненты панели были по одному, вы можете использовать FlowLayout () как</target>
        </trans-unit>
        <trans-unit id="b9239a43eb7f54cb5c66973ef22c669aff7ebc1b" translate="yes" xml:space="preserve">
          <source>But there are probably cases - somewhere in this big world - where a NullLayout is just the thing. So here's an example:</source>
          <target state="translated">Но,возможно,есть случаи-где-то в этом большом мире-где NullLayout-это просто вещь.Так что вот пример:</target>
        </trans-unit>
        <trans-unit id="8e7d5edae0c2384f70bf06c5a50dbf230df9fb6d" translate="yes" xml:space="preserve">
          <source>Don't use a null layout.  Learn to use LayoutManagers:</source>
          <target state="translated">Не используйте нулевой макет.Научитесь использовать LayoutManagers:</target>
        </trans-unit>
        <trans-unit id="5e7e0d57bcc0e19bb930769580534809f04b6a68" translate="yes" xml:space="preserve">
          <source>Enjoy, Boro.</source>
          <target state="translated">Наслаждайся,Боро.</target>
        </trans-unit>
        <trans-unit id="4181e04abb33d597c4c7a4cd8429f2155fc22133" translate="yes" xml:space="preserve">
          <source>First, you should seriously consider other Layout managers, for example the BorderLayoutManager (new JPanel(new BorderLayout())) is a good start.</source>
          <target state="translated">Во-первых,вам следует серьезно подумать о других менеджерах макета,например,BorderLayoutManager (новый JPanel(new BorderLayout()))-хорошее начало.</target>
        </trans-unit>
        <trans-unit id="481bebe8a5d31e64b2f74a3439be89cd0506fe93" translate="yes" xml:space="preserve">
          <source>Good luck</source>
          <target state="translated">Удачи</target>
        </trans-unit>
        <trans-unit id="70376458c7e1d59978b45b6a33d1a41e52fb91db" translate="yes" xml:space="preserve">
          <source>Good luck.</source>
          <target state="translated">Удачи.</target>
        </trans-unit>
        <trans-unit id="a6a0ce9031e0776d5fc6120b3023d51bccf114f1" translate="yes" xml:space="preserve">
          <source>Hope this helps.</source>
          <target state="translated">Надеюсь,это поможет.</target>
        </trans-unit>
        <trans-unit id="d939797b5b318b3e280706024a5a6398dc1c8eb0" translate="yes" xml:space="preserve">
          <source>How to add JTable in JPanel with null layout</source>
          <target state="translated">Как добавить JTable в JPanel с нулевой версткой</target>
        </trans-unit>
        <trans-unit id="a0be2819a4f92c435b2d4387a3acddc286308366" translate="yes" xml:space="preserve">
          <source>I want to add &lt;code&gt;JTable&lt;/code&gt; into &lt;code&gt;JPanel&lt;/code&gt; whose layout is &lt;code&gt;null&lt;/code&gt;.  &lt;code&gt;JPanel&lt;/code&gt; contains other components. I have to add &lt;code&gt;JTable&lt;/code&gt; at proper position.</source>
          <target state="translated">Я хочу добавить &lt;code&gt;JTable&lt;/code&gt; в &lt;code&gt;JPanel&lt;/code&gt; , макет которого равен &lt;code&gt;null&lt;/code&gt; . &lt;code&gt;JPanel&lt;/code&gt; содержит другие компоненты. Я должен добавить &lt;code&gt;JTable&lt;/code&gt; в правильном положении.</target>
        </trans-unit>
        <trans-unit id="bc0f700004a07bf32b01639ddd937026f3b9a09c" translate="yes" xml:space="preserve">
          <source>If you are using null layout manager you always need to set the bounds of a component.
That is the problem in your case.</source>
          <target state="translated">При использовании нулевого менеджера компоновки всегда необходимо задавать границы компонента.В этом и заключается проблема в вашем случае.</target>
        </trans-unit>
        <trans-unit id="9f1a1b1aea32f704fe7621b2e4d81111a1183339" translate="yes" xml:space="preserve">
          <source>If you don't care about the precision of components size you can use pure &lt;code&gt;BorderLayout&lt;/code&gt; and combine it with &lt;code&gt;FlowLayout&lt;/code&gt; and &lt;code&gt;GridLayout&lt;/code&gt;. if you need precision - use jgoodies &lt;code&gt;FormLayout&lt;/code&gt;.</source>
          <target state="translated">Если вам не важна точность размеров компонентов, вы можете использовать чистый &lt;code&gt;BorderLayout&lt;/code&gt; и комбинировать его с &lt;code&gt;FlowLayout&lt;/code&gt; и &lt;code&gt;GridLayout&lt;/code&gt; . если вам нужна точность - используйте jgoodies &lt;code&gt;FormLayout&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b28f9b80322abfaac3b91d01c97635d4a9e417d" translate="yes" xml:space="preserve">
          <source>If you really want that fine-grained control, maybe try GridBagLayout first before going mudding with the UI arrangement.</source>
          <target state="translated">Если вы действительно хотите,чтобы этот тонкий контроль,может быть,сначала попробовать GridBagLayout,прежде чем идти грязи с пользовательским интерфейсом договоренности.</target>
        </trans-unit>
        <trans-unit id="758b3dced983942719348a0df3eca9bb283e5a5e" translate="yes" xml:space="preserve">
          <source>LayoutManagers allow you to properly handle things window resizing or dynamic component counts.  They might seem intimidating at first, but they are worth the effort to learn.</source>
          <target state="translated">LayoutManagers позволяет вам корректно обрабатывать изменение размера окна или подсчет динамических компонентов.Поначалу они могут показаться пугающими,но они стоят того,чтобы научиться.</target>
        </trans-unit>
        <trans-unit id="72e96856e48a92e52c2ca3be37508fa4bc1d77bd" translate="yes" xml:space="preserve">
          <source>Mac OS X Aqua PLAF</source>
          <target state="translated">Mac OS X Aqua PLAF</target>
        </trans-unit>
        <trans-unit id="feec1ce0b3cb81919adc3e10ee50e10583ca00be" translate="yes" xml:space="preserve">
          <source>Nested/Combination Layout Example</source>
          <target state="translated">Пример компоновки вложенности</target>
        </trans-unit>
        <trans-unit id="b5c4cc6ea8999cfde14ad7bce3ea25b154c4c3fa" translate="yes" xml:space="preserve">
          <source>NestedLayoutExample.java</source>
          <target state="translated">NestedLayoutExample.java</target>
        </trans-unit>
        <trans-unit id="add98ea6ccfd8daaf0d2caf73eac2515f5144a43" translate="yes" xml:space="preserve">
          <source>Nimbus PLAF</source>
          <target state="translated">Нимбус PLAF</target>
        </trans-unit>
        <trans-unit id="fc7ae457a2457685fa6d3a8839bad178bfd3a329" translate="yes" xml:space="preserve">
          <source>Notable aspects of the code are:</source>
          <target state="translated">Заметные аспекты кода:</target>
        </trans-unit>
        <trans-unit id="57c0810bd4d1924ad3737eb78ecc93ebb64bcc61" translate="yes" xml:space="preserve">
          <source>One aspect of layouts that is &lt;em&gt;not&lt;/em&gt; covered well by the tutorial is that of nested layouts, putting one layout inside another to get complex effects.</source>
          <target state="translated">Один из аспектов макетов, который &lt;em&gt;не очень&lt;/em&gt; хорошо описан в учебнике, - это вложенные макеты, помещающие один макет в другой для получения сложных эффектов.</target>
        </trans-unit>
        <trans-unit id="14a2ac8deddc6b8a76d9f09213854697887e08ed" translate="yes" xml:space="preserve">
          <source>Other Screen Shots</source>
          <target state="translated">Другие снимки экрана</target>
        </trans-unit>
        <trans-unit id="86be0d816121adc9166299775d1f267ede0d6872" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FormLayout&lt;/code&gt; is really tricky one, but you can play a little with &lt;code&gt;WindowBuilder&lt;/code&gt; (which is embedded into Eclipse) and a look at the code it generates. It may look complicated but it is just an ignorance.</source>
          <target state="translated">&lt;code&gt;FormLayout&lt;/code&gt; действительно сложен , но вы можете немного поиграть с &lt;code&gt;WindowBuilder&lt;/code&gt; (который встроен в Eclipse) и посмотреть на код, который он генерирует. Это может выглядеть сложно, но это просто невежество.</target>
        </trans-unit>
        <trans-unit id="158e7fb747f4d4094fde9a27c514a80b6cd9a919" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JPanel&lt;/code&gt; should have some layout manager.</source>
          <target state="translated">У &lt;code&gt;JPanel&lt;/code&gt; должен быть какой-то менеджер раскладки.</target>
        </trans-unit>
        <trans-unit id="d789e2b4e332f79db6bbdd54ac18f260b0338a53" translate="yes" xml:space="preserve">
          <source>The GUI is expandable to the user's need.</source>
          <target state="translated">Графический интерфейс расширяется в соответствии с потребностями пользователя.</target>
        </trans-unit>
        <trans-unit id="ddd6768ded446a3ca0c9b0f82e7c4487ed5ae596" translate="yes" xml:space="preserve">
          <source>The Java Tutorial has comprehensive information on using layout managers. See the &lt;a href=&quot;http://download.oracle.com/javase/tutorial/uiswing/layout/index.html&quot;&gt;Laying Out Components Within a Container&lt;/a&gt; lesson for further details.</source>
          <target state="translated">Учебное руководство по Java содержит исчерпывающую информацию об использовании менеджеров компоновки См. Раздел &amp;laquo; &lt;a href=&quot;http://download.oracle.com/javase/tutorial/uiswing/layout/index.html&quot;&gt;Компоновка компонентов в контейнере&amp;raquo;&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="d8bbe9bd89921a2428636336ab61007d6c706648" translate="yes" xml:space="preserve">
          <source>The following code puts a variety of components into a frame to demonstrate how to use nested layouts.  All the layouts that are explicitly set are shown as a titled-border for the panel on which they are used.</source>
          <target state="translated">Следующий код помещает разнообразные компоненты во фрейм,чтобы продемонстрировать,как использовать вложенные компоновки.Все компоновки,которые явно заданы,показаны в виде заглавной границы для панели,на которой они используются.</target>
        </trans-unit>
        <trans-unit id="c75a6c74a1702e5554553e1a18906f35677b872b" translate="yes" xml:space="preserve">
          <source>The image in the bottom of the split-pane is centered in the scroll-pane.</source>
          <target state="translated">Изображение в нижней части разделенной панели центрируется на панели прокрутки.</target>
        </trans-unit>
        <trans-unit id="bb302983c1f5ab6c93eeaf15ff6df20660f3b0b2" translate="yes" xml:space="preserve">
          <source>The label instances on the left are dynamically added using the button.</source>
          <target state="translated">Образы этикеток слева динамически добавляются с помощью кнопки.</target>
        </trans-unit>
        <trans-unit id="53fe379088c8929dbbd54aeb2500a5fcece94d1a" translate="yes" xml:space="preserve">
          <source>There is a combo-box to change PLAF (Pluggable Look and Feel) at run-time.</source>
          <target state="translated">Существует комбо-бокс для изменения PLAF (Pluggable Look and Feel-Подключаемый внешний вид и ощущения)во время выполнения.</target>
        </trans-unit>
        <trans-unit id="93b98c29df31d41c91abf5b07dc797ca6bf1541f" translate="yes" xml:space="preserve">
          <source>Try this.</source>
          <target state="translated">Попробуй это.</target>
        </trans-unit>
        <trans-unit id="3e06b4083db08edfb0879ca18b569b3ad95fa007" translate="yes" xml:space="preserve">
          <source>Ubuntu GTK+ PLAF</source>
          <target state="translated">Ubuntu GTK+PLAF</target>
        </trans-unit>
        <trans-unit id="0a2dc889c093c1bf1c0ce5694b272d8b5e788120" translate="yes" xml:space="preserve">
          <source>When a component have a &quot;null&quot; layout, you have to manage the layout by yourself, that means you have to calculate the dimensions and locations for the children of the component to decide where they are drawn. Quite tedious unless it is absolutely necessary.</source>
          <target state="translated">Когда компонент имеет &quot;нулевую&quot; компоновку,необходимо самостоятельно управлять компоновкой,т.е.вычислять размеры и расположение дочерних элементов компонента,чтобы решить,где они отрисованы.Довольно утомительно,если только это не является абсолютно необходимым.</target>
        </trans-unit>
        <trans-unit id="8ccd5e726ed3c6c905bd1571c731170a95f7f606" translate="yes" xml:space="preserve">
          <source>Windows PLAF</source>
          <target state="translated">Windows PLAF</target>
        </trans-unit>
        <trans-unit id="b29d282824c64b25e86a2054f9bf4608961ffdc8" translate="yes" xml:space="preserve">
          <source>You can make use of the following code. To add JTable to JPanel.</source>
          <target state="translated">Вы можете использовать следующий код.Чтобы добавить JTable в JPanel.</target>
        </trans-unit>
        <trans-unit id="2f8bcfeeda4b0cd37a4304bbcb1bddf8f23af95b" translate="yes" xml:space="preserve">
          <source>You should do what everyone suggest here and go and use some layout manager believe they save time.
Go and check out the tutorial in @jzd's post.</source>
          <target state="translated">Вы должны сделать то,что все предлагают здесь,и пойти и использовать некоторые менеджер макета считают,что они экономят время.Идите и посмотрите учебник в @jzd's post.</target>
        </trans-unit>
        <trans-unit id="4a2a3b37056943abc0d43359518e7507f0f541b3" translate="yes" xml:space="preserve">
          <source>or if you need to fill the panel you should use GridLayout() as...</source>
          <target state="translated">или если вам нужно заполнить панель,вы должны использовать GridLayout()как...</target>
        </trans-unit>
        <trans-unit id="8fc4182cf0edf28554c39b7982f104e068391c5b" translate="yes" xml:space="preserve">
          <source>table model depends on your requirement</source>
          <target state="translated">модель таблицы зависит от ваших требований</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
