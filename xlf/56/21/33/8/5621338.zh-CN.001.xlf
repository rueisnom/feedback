<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/5621338">
    <body>
      <group id="5621338">
        <trans-unit id="186ac159591784d588a50b2847718b6511545f93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTable&lt;/code&gt; should be added into the &lt;code&gt;JScrollPane&lt;/code&gt; which actually should be added into the &lt;code&gt;JPanel&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; 应该添加到 &lt;code&gt;JScrollPane&lt;/code&gt; 中 ，而JScrollPane实际上应该添加到 &lt;code&gt;JPanel&lt;/code&gt; 中 。</target>
        </trans-unit>
        <trans-unit id="ae9c8831cf88e1b19fd5162142d9125984b84731" translate="yes" xml:space="preserve">
          <source>Also when designing your dialog, remember that you can and should &lt;strong&gt;nest your layouts&lt;/strong&gt;: one JPanel inside another JPanel (e.g. a GridLayout inside a BorderLayout). Please note: a 'good' dialog should &lt;strong&gt;resize properly&lt;/strong&gt;, so that if the user resizes your Frame, you want to automatically extend your information objects such as your table, and not show large areas of JPanel background. That's something you cannot achieve with a NullLayout.</source>
          <target state="translated">同样，在设计对话框时，请记住，您可以并且应该&lt;strong&gt;将布局嵌套&lt;/strong&gt; ：一个JPanel嵌套在另一个JPanel内（例如BorderLayout内的GridLayout）。 请注意：&amp;ldquo;好&amp;rdquo;对话框应该&lt;strong&gt;正确调整大小&lt;/strong&gt; ，以便用户调整框架的大小时，您想要自动扩展信息对象（例如表格），并且不显示JPanel背景的大区域。 那是NullLayout无法实现的。</target>
        </trans-unit>
        <trans-unit id="a92c9956142c6600c1bcc3b4f219073b71d0f4cf" translate="yes" xml:space="preserve">
          <source>As I can remember, the &lt;strong&gt;null&lt;/strong&gt; layout means an absolute position so it will be pretty hard you to count the X point for your JTable left upper corner location. But if you just want to have all panel components one by one you can use FlowLayout() manager as</source>
          <target state="translated">我记得， &lt;strong&gt;空&lt;/strong&gt;布局意味着绝对位置，因此很难计算JTable左上角位置的X点。 但是，如果您只想一一拥有所有面板组件，则可以使用FlowLayout（）管理器作为</target>
        </trans-unit>
        <trans-unit id="b9239a43eb7f54cb5c66973ef22c669aff7ebc1b" translate="yes" xml:space="preserve">
          <source>But there are probably cases - somewhere in this big world - where a NullLayout is just the thing. So here's an example:</source>
          <target state="translated">但是,在这个大世界的某个地方,可能有一些情况下,NullLayout就是最好的选择。所以这里有一个例子。</target>
        </trans-unit>
        <trans-unit id="8e7d5edae0c2384f70bf06c5a50dbf230df9fb6d" translate="yes" xml:space="preserve">
          <source>Don't use a null layout.  Learn to use LayoutManagers:</source>
          <target state="translated">不要使用空布局。学会使用LayoutManagers。</target>
        </trans-unit>
        <trans-unit id="5e7e0d57bcc0e19bb930769580534809f04b6a68" translate="yes" xml:space="preserve">
          <source>Enjoy, Boro.</source>
          <target state="translated">好好享受吧,博洛。</target>
        </trans-unit>
        <trans-unit id="4181e04abb33d597c4c7a4cd8429f2155fc22133" translate="yes" xml:space="preserve">
          <source>First, you should seriously consider other Layout managers, for example the BorderLayoutManager (new JPanel(new BorderLayout())) is a good start.</source>
          <target state="translated">首先,你应该认真考虑其他的Layout管理器,比如说BorderLayoutManager(new JPanel(new BorderLayout()))就是一个很好的开始。</target>
        </trans-unit>
        <trans-unit id="481bebe8a5d31e64b2f74a3439be89cd0506fe93" translate="yes" xml:space="preserve">
          <source>Good luck</source>
          <target state="translated">祝你们好运</target>
        </trans-unit>
        <trans-unit id="70376458c7e1d59978b45b6a33d1a41e52fb91db" translate="yes" xml:space="preserve">
          <source>Good luck.</source>
          <target state="translated">祝你们好运。</target>
        </trans-unit>
        <trans-unit id="a6a0ce9031e0776d5fc6120b3023d51bccf114f1" translate="yes" xml:space="preserve">
          <source>Hope this helps.</source>
          <target state="translated">希望这对你有帮助。</target>
        </trans-unit>
        <trans-unit id="d939797b5b318b3e280706024a5a6398dc1c8eb0" translate="yes" xml:space="preserve">
          <source>How to add JTable in JPanel with null layout</source>
          <target state="translated">如何在JPanel中添加空布局的JTable</target>
        </trans-unit>
        <trans-unit id="a0be2819a4f92c435b2d4387a3acddc286308366" translate="yes" xml:space="preserve">
          <source>I want to add &lt;code&gt;JTable&lt;/code&gt; into &lt;code&gt;JPanel&lt;/code&gt; whose layout is &lt;code&gt;null&lt;/code&gt;.  &lt;code&gt;JPanel&lt;/code&gt; contains other components. I have to add &lt;code&gt;JTable&lt;/code&gt; at proper position.</source>
          <target state="translated">我想将 &lt;code&gt;JTable&lt;/code&gt; 添加到布局为 &lt;code&gt;null&lt;/code&gt; 的 &lt;code&gt;JPanel&lt;/code&gt; 中 。 &lt;code&gt;JPanel&lt;/code&gt; 包含其他组件。 我必须在适当的位置添加 &lt;code&gt;JTable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bc0f700004a07bf32b01639ddd937026f3b9a09c" translate="yes" xml:space="preserve">
          <source>If you are using null layout manager you always need to set the bounds of a component.
That is the problem in your case.</source>
          <target state="translated">如果你使用的是空布局管理器,你总是需要设置一个组件的边界。这就是你的问题所在。</target>
        </trans-unit>
        <trans-unit id="9f1a1b1aea32f704fe7621b2e4d81111a1183339" translate="yes" xml:space="preserve">
          <source>If you don't care about the precision of components size you can use pure &lt;code&gt;BorderLayout&lt;/code&gt; and combine it with &lt;code&gt;FlowLayout&lt;/code&gt; and &lt;code&gt;GridLayout&lt;/code&gt;. if you need precision - use jgoodies &lt;code&gt;FormLayout&lt;/code&gt;.</source>
          <target state="translated">如果您不关心组件大小的精度，则可以使用纯 &lt;code&gt;BorderLayout&lt;/code&gt; 并将其与 &lt;code&gt;FlowLayout&lt;/code&gt; 和 &lt;code&gt;GridLayout&lt;/code&gt; 结合使用。 如果需要精度，请使用jgoodies &lt;code&gt;FormLayout&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b28f9b80322abfaac3b91d01c97635d4a9e417d" translate="yes" xml:space="preserve">
          <source>If you really want that fine-grained control, maybe try GridBagLayout first before going mudding with the UI arrangement.</source>
          <target state="translated">如果你真的想要那种精细的控制,也许可以先试试GridBagLayout,然后再去泥沙俱下的UI安排。</target>
        </trans-unit>
        <trans-unit id="758b3dced983942719348a0df3eca9bb283e5a5e" translate="yes" xml:space="preserve">
          <source>LayoutManagers allow you to properly handle things window resizing or dynamic component counts.  They might seem intimidating at first, but they are worth the effort to learn.</source>
          <target state="translated">LayoutManagers允许你正确处理窗口大小调整或动态组件数量。它们一开始可能会让人望而生畏,但它们是值得学习的。</target>
        </trans-unit>
        <trans-unit id="72e96856e48a92e52c2ca3be37508fa4bc1d77bd" translate="yes" xml:space="preserve">
          <source>Mac OS X Aqua PLAF</source>
          <target state="translated">Mac OS X Aqua PLAF</target>
        </trans-unit>
        <trans-unit id="feec1ce0b3cb81919adc3e10ee50e10583ca00be" translate="yes" xml:space="preserve">
          <source>Nested/Combination Layout Example</source>
          <target state="translated">嵌套组合布局示例</target>
        </trans-unit>
        <trans-unit id="b5c4cc6ea8999cfde14ad7bce3ea25b154c4c3fa" translate="yes" xml:space="preserve">
          <source>NestedLayoutExample.java</source>
          <target state="translated">NestedLayoutExample.java</target>
        </trans-unit>
        <trans-unit id="add98ea6ccfd8daaf0d2caf73eac2515f5144a43" translate="yes" xml:space="preserve">
          <source>Nimbus PLAF</source>
          <target state="translated">Nimbus PLAF</target>
        </trans-unit>
        <trans-unit id="fc7ae457a2457685fa6d3a8839bad178bfd3a329" translate="yes" xml:space="preserve">
          <source>Notable aspects of the code are:</source>
          <target state="translated">该守则的显著方面是:</target>
        </trans-unit>
        <trans-unit id="57c0810bd4d1924ad3737eb78ecc93ebb64bcc61" translate="yes" xml:space="preserve">
          <source>One aspect of layouts that is &lt;em&gt;not&lt;/em&gt; covered well by the tutorial is that of nested layouts, putting one layout inside another to get complex effects.</source>
          <target state="translated">本教程&lt;em&gt;未全面&lt;/em&gt;介绍的布局的一个方面是嵌套布局，将一个布局放到另一个布局中以获得复杂的效果。</target>
        </trans-unit>
        <trans-unit id="14a2ac8deddc6b8a76d9f09213854697887e08ed" translate="yes" xml:space="preserve">
          <source>Other Screen Shots</source>
          <target state="translated">其他屏幕截图</target>
        </trans-unit>
        <trans-unit id="86be0d816121adc9166299775d1f267ede0d6872" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FormLayout&lt;/code&gt; is really tricky one, but you can play a little with &lt;code&gt;WindowBuilder&lt;/code&gt; (which is embedded into Eclipse) and a look at the code it generates. It may look complicated but it is just an ignorance.</source>
          <target state="translated">&lt;code&gt;FormLayout&lt;/code&gt; 确实很棘手，但是您可以使用 &lt;code&gt;WindowBuilder&lt;/code&gt; （已嵌入Eclipse）进行一些操作，并查看它生成的代码。 它可能看起来很复杂，但这只是一个无知。</target>
        </trans-unit>
        <trans-unit id="158e7fb747f4d4094fde9a27c514a80b6cd9a919" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JPanel&lt;/code&gt; should have some layout manager.</source>
          <target state="translated">&lt;code&gt;JPanel&lt;/code&gt; 应该具有一些布局管理器。</target>
        </trans-unit>
        <trans-unit id="d789e2b4e332f79db6bbdd54ac18f260b0338a53" translate="yes" xml:space="preserve">
          <source>The GUI is expandable to the user's need.</source>
          <target state="translated">GUI可以根据用户的需求进行扩展。</target>
        </trans-unit>
        <trans-unit id="ddd6768ded446a3ca0c9b0f82e7c4487ed5ae596" translate="yes" xml:space="preserve">
          <source>The Java Tutorial has comprehensive information on using layout managers. See the &lt;a href=&quot;http://download.oracle.com/javase/tutorial/uiswing/layout/index.html&quot;&gt;Laying Out Components Within a Container&lt;/a&gt; lesson for further details.</source>
          <target state="translated">Java教程提供了有关使用布局管理器的全面信息。 有关更多详细信息，请参见&amp;ldquo; &lt;a href=&quot;http://download.oracle.com/javase/tutorial/uiswing/layout/index.html&quot;&gt;容器中&lt;/a&gt;的布置组件&amp;rdquo;课程。</target>
        </trans-unit>
        <trans-unit id="d8bbe9bd89921a2428636336ab61007d6c706648" translate="yes" xml:space="preserve">
          <source>The following code puts a variety of components into a frame to demonstrate how to use nested layouts.  All the layouts that are explicitly set are shown as a titled-border for the panel on which they are used.</source>
          <target state="translated">下面的代码将各种组件放入一个框架中,演示如何使用嵌套布局。所有被明确设置的布局都以标题-border的形式显示在面板上。</target>
        </trans-unit>
        <trans-unit id="c75a6c74a1702e5554553e1a18906f35677b872b" translate="yes" xml:space="preserve">
          <source>The image in the bottom of the split-pane is centered in the scroll-pane.</source>
          <target state="translated">分割窗格底部的图像在滚动窗格中居中。</target>
        </trans-unit>
        <trans-unit id="bb302983c1f5ab6c93eeaf15ff6df20660f3b0b2" translate="yes" xml:space="preserve">
          <source>The label instances on the left are dynamically added using the button.</source>
          <target state="translated">左边的标签实例是使用按钮动态添加的。</target>
        </trans-unit>
        <trans-unit id="53fe379088c8929dbbd54aeb2500a5fcece94d1a" translate="yes" xml:space="preserve">
          <source>There is a combo-box to change PLAF (Pluggable Look and Feel) at run-time.</source>
          <target state="translated">有一个组合框可以在运行时改变PLAF(Pluggable Look and Feel)。</target>
        </trans-unit>
        <trans-unit id="93b98c29df31d41c91abf5b07dc797ca6bf1541f" translate="yes" xml:space="preserve">
          <source>Try this.</source>
          <target state="translated">试试这个。</target>
        </trans-unit>
        <trans-unit id="3e06b4083db08edfb0879ca18b569b3ad95fa007" translate="yes" xml:space="preserve">
          <source>Ubuntu GTK+ PLAF</source>
          <target state="translated">Ubuntu GTK+PLAF</target>
        </trans-unit>
        <trans-unit id="0a2dc889c093c1bf1c0ce5694b272d8b5e788120" translate="yes" xml:space="preserve">
          <source>When a component have a &quot;null&quot; layout, you have to manage the layout by yourself, that means you have to calculate the dimensions and locations for the children of the component to decide where they are drawn. Quite tedious unless it is absolutely necessary.</source>
          <target state="translated">当一个组件有一个 &quot;null &quot;布局时,你必须自己管理布局,这意味着你必须计算出组件的尺寸和位置,以决定组件的子组件的绘制位置。相当繁琐,除非万不得已。</target>
        </trans-unit>
        <trans-unit id="8ccd5e726ed3c6c905bd1571c731170a95f7f606" translate="yes" xml:space="preserve">
          <source>Windows PLAF</source>
          <target state="translated">Windows PLAF</target>
        </trans-unit>
        <trans-unit id="b29d282824c64b25e86a2054f9bf4608961ffdc8" translate="yes" xml:space="preserve">
          <source>You can make use of the following code. To add JTable to JPanel.</source>
          <target state="translated">你可以使用下面的代码。将JTable添加到JPanel中。</target>
        </trans-unit>
        <trans-unit id="2f8bcfeeda4b0cd37a4304bbcb1bddf8f23af95b" translate="yes" xml:space="preserve">
          <source>You should do what everyone suggest here and go and use some layout manager believe they save time.
Go and check out the tutorial in @jzd's post.</source>
          <target state="translated">你应该按照大家的建议去做,并使用一些布局管理器,相信他们可以节省时间。去看看@jzd的帖子里的教程。</target>
        </trans-unit>
        <trans-unit id="4a2a3b37056943abc0d43359518e7507f0f541b3" translate="yes" xml:space="preserve">
          <source>or if you need to fill the panel you should use GridLayout() as...</source>
          <target state="translated">或者如果你需要填充面板,你应该使用GridLayout()作为.....</target>
        </trans-unit>
        <trans-unit id="8fc4182cf0edf28554c39b7982f104e068391c5b" translate="yes" xml:space="preserve">
          <source>table model depends on your requirement</source>
          <target state="translated">表格模式取决于你的要求</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
