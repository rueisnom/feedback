<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/379906">
    <body>
      <group id="379906">
        <trans-unit id="ac1f3972fa720284515fb856050b268500f1d0dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval()&lt;/code&gt; is a very good solution to this question. It doesn't need to check if the number is int or float, it just gives the corresponding equivalent.
If other methods are required, try</source>
          <target state="translated">&lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、この質問に対する非常に優れたソリューションです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数値がintまたはfloatかどうかを確認する必要はありません。対応する同等のものを提供するだけです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他の方法が必要な場合は、&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd7c81bfe30f5cc330862f645af9aa96ea1a6b65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;float(&quot;545.2222&quot;)&lt;/code&gt; and &lt;code&gt;int(float(&quot;545.2222&quot;))&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;float(&quot;545.2222&quot;)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int(float(&quot;545.2222&quot;))&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9c5393b1f32509dbbf5a6ddaeb30e2b29a4bc677" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;&quot;31&quot;&lt;/code&gt; to an integer:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;&quot;31&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から整数へ：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bfac89e13d7320d4a50f8daba75ea437a3081b24" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;&quot;545.2222&quot;&lt;/code&gt; to float:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;&quot;545.2222&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をフロートするには：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed79b57b057ba55c26f5ff1f1c3d1789db5c6fde" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 1 -- United States number conventions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例1-米国の番号規則&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f09ffc14cdf4ca63987468205d8070b41d078fd7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 2 -- European number conventions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例2-ヨーロッパの番号規則&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3159ed817f56cb7d0cf9dc1f4f2b26c07cb6c230" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Handles hex, octal, binary, decimal, and float&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;16進数、8進数、2進数、10進数、および浮動小数点数を処理します&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14d6b7f66735e8f443d248d0531fb892958278b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In Python, how can I parse a numeric string like &quot;545.2222&quot; to its corresponding float value, 542.2222? Or parse the string &quot;31&quot; to an integer, 31?&lt;/strong&gt;
  I just want to know how to parse a float string to a float, and (separately) an int string to an int.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonでは、「545.2222」のような数値文字列を、対応する浮動小数点値542.2222に解析するにはどうすればよいですか？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または、文字列「31」を整数31に解析しますか？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; float文字列をfloatに、そして（個別に）int文字列をintに解析する方法を知りたいだけです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0d1fdc863e0c1a712adb6af8e30b28214197294" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is a corrected version&lt;/strong&gt; of 
&lt;a href=&quot;https://stackoverflow.com/a/33017514/5973334&quot;&gt;https://stackoverflow.com/a/33017514/5973334&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;https://stackoverflow.com/a/33017514/5973334&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://stackoverflow.com/a/33017514/5973334の&lt;/font&gt;&lt;/a&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;修正バージョン&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a708e31d4a091e66669938a90bed8a5408695112" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;string that is a float&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フロートである文字列&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3047f53ff91e56b43ca40c12e98998f32bff7393" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;string that is a string&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列である文字列&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b45110c06ffc521e9e96b21c174b65e5db68d2a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;string that is an int&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;intである文字列&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5357ff0f08439a62b5a90cd08a83a368d2731475" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;string that looks like a float&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フロートのように見える文字列&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f98f17c0a88c5dc482e5ceef9b4d4ae342978f23" translate="yes" xml:space="preserve">
          <source>A longer and more accurate name for this function could be: &lt;code&gt;is_convertible_to_float(value)&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この関数のより長く正確な名前は次のようになります：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is_convertible_to_float(value)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fdcd6149eb93e2e35f206e511dad5edf7a008fb2" translate="yes" xml:space="preserve">
          <source>Behind the scenes, python is calling the objects &lt;code&gt;__float__&lt;/code&gt; method, which should return a float representation of the parameter. This is especially powerful, as you can define your own types (using classes) with a &lt;code&gt;__float__&lt;/code&gt; method so that it can be casted into a float using float(myobject).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;舞台裏では、Pythonがオブジェクトの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__float__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出しています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドは、パラメーターの浮動小数点表現を返します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;float（myobject）を使用してfloatにキャストできるように&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__float__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッド&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して独自の型を（クラスを使用して）定義できるため、これは特に強力です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4dd992a284c20dac5bc4f8f904093de094d2d51e" translate="yes" xml:space="preserve">
          <source>Binary, prefix &lt;code&gt;0b&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バイナリ、プレフィックス&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b27550dcea37cd21db9fed4e1cdbdef270ceb70" translate="yes" xml:space="preserve">
          <source>Catching broad exceptions this way, killing canaries and gobbling the exception creates a tiny chance that a valid float as string will return false.  The &lt;code&gt;float(...)&lt;/code&gt; line of code can failed for any of a thousand reasons that have nothing to do with the contents of the string.  But if you're writing life-critical software in a duck-typing prototype language like Python, then you've got much larger problems.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このように広範な例外をキャッチし、カナリアを強制終了して例外を取得すると、有効な浮動小数点数が文字列としてfalseを返す可能性がわずかにあります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コード&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;float(...)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;行は、文字列の内容とは何の関係もない1000の理由で失敗する可能性があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、Pythonなどのダックタイピングプロトタイプ言語で生命に関わるソフトウェアを作成している場合は、はるかに大きな問題が発生します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0130ac64c97dc735bd6284133e9594c7404c9c6a" translate="yes" xml:space="preserve">
          <source>Conversions from various bases, and you should know the base in advance (10 is the default). Note you can prefix them with what Python expects for its literals (see below) or remove the prefix:</source>
          <target state="translated">様々なベースからの変換が可能で、あらかじめベースを知っておく必要があります (デフォルトは 10 です)。Pythonがリテラルに期待しているものをプレフィックスとして使用することもできますし、プレフィックスを削除することもできます。</target>
        </trans-unit>
        <trans-unit id="e10b39ca00b5dc46b1d74719f0f50248069b3119" translate="yes" xml:space="preserve">
          <source>Convert your Python 2 octals to octals that work in both 2 and 3 with the &lt;code&gt;0o&lt;/code&gt; prefix:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 2の8進数を2と3の両方で動作する8進&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0o&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;接頭辞&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を付けて変換します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8bbc3cbc17943bda79871e6952193782e6b6be88" translate="yes" xml:space="preserve">
          <source>Don't use this code on life-critical software!</source>
          <target state="translated">生命に関わるソフトウェアにこのコードを使うな!</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="838b65efe46428a170ba508dde618adfbcc23a6f" translate="yes" xml:space="preserve">
          <source>Here is the test:</source>
          <target state="translated">ここにテストがあります。</target>
        </trans-unit>
        <trans-unit id="021c5c6878dffa28468b3c4f1f2f55560dd9a90f" translate="yes" xml:space="preserve">
          <source>Here's another interpretation of your question (hint: it's vague). It's possible you're looking for something like this:</source>
          <target state="translated">ここにあなたの質問の別の解釈があります(ヒント:それは漠然としています)。あなたが探しているのはこんなことかもしれません。</target>
        </trans-unit>
        <trans-unit id="3434f000c92fb0468a41b25e03661ba5f5e4cd2a" translate="yes" xml:space="preserve">
          <source>Hexadecimal, prefix &lt;code&gt;0x&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;16進数、プレフィックス&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="504c7382aceb1ff50dc3a6954f966345f15b14b0" translate="yes" xml:space="preserve">
          <source>How do I parse a string to a float or int</source>
          <target state="translated">文字列を float や int にパースするには</target>
        </trans-unit>
        <trans-unit id="56c88887f485ff86dbf829cd5d874bad11cb2c63" translate="yes" xml:space="preserve">
          <source>I am surprised nobody mentioned regex because sometimes string must be prepared and normalized before casting to number</source>
          <target state="translated">誰も正規表現に言及していないことに驚いています。</target>
        </trans-unit>
        <trans-unit id="638243c2b3035565ea154acf4fe0235575baafc2" translate="yes" xml:space="preserve">
          <source>I just want to know how to parse a &lt;em&gt;float&lt;/em&gt;&lt;code&gt;str&lt;/code&gt; to a &lt;code&gt;float&lt;/code&gt;, and (separately) an &lt;em&gt;int&lt;/em&gt;&lt;code&gt;str&lt;/code&gt; to an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私はちょうど解析する方法を知りたい&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フロート&lt;/font&gt;&lt;/font&gt;&lt;/em&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、および（別途）&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;int型の&lt;/font&gt;&lt;/font&gt;&lt;/em&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; 型&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5e69a4c68f86a4431a987109c9384fdf8ba4fb11" translate="yes" xml:space="preserve">
          <source>I use this function for that</source>
          <target state="translated">私はそのためにこの機能を使っています。</target>
        </trans-unit>
        <trans-unit id="4025d346bde75708eae48205c6cfb7312594fe66" translate="yes" xml:space="preserve">
          <source>I.e. int(5.1) =&amp;gt; 5
     int(5.6) =&amp;gt; 5  -- wrong, should be 6 so we do int(5.6 + 0.5) =&amp;gt; 6</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、int（5.1）=&amp;gt; 5 int（5.6）=&amp;gt; 5-間違っています。6にする必要があるため、int（5.6 + 0.5）=&amp;gt; 6を実行します&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f201be4f85caa58ba08d08eaa03cb387c5b511d" translate="yes" xml:space="preserve">
          <source>If you aren't averse to third-party modules, you could check out the &lt;a href=&quot;https://pypi.org/project/fastnumbers&quot;&gt;fastnumbers&lt;/a&gt; module. It provides a function called &lt;a href=&quot;http://fastnumbers.readthedocs.io/en/master/api.html#fastnumbers.fast_real&quot;&gt;fast_real&lt;/a&gt; that does exactly what this question is asking for and does it faster than a pure-Python implementation:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;サードパーティのモジュールを嫌っていない場合は、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://pypi.org/project/fastnumbers&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;fastnumbers&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;モジュールを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;チェックアウトでき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://fastnumbers.readthedocs.io/en/master/api.html#fastnumbers.fast_real&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;fast_real&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼ばれる関数を提供し、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この質問が要求することを正確に実行し、pure-Python実装よりも高速に実行します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d03e362c1cf8226f726f99e57ce664305faf3ad4" translate="yes" xml:space="preserve">
          <source>If you don't know the base in advance, but you do know they will have the correct prefix, Python can infer this for you if you pass &lt;code&gt;0&lt;/code&gt; as the base:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ベースが事前にわからないが、正しいプレフィックスが付いていることがわかっている場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、ベースとして&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を渡すと、Pythonはこれを推測できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d90b04fe729f132e89b5eee37d95f94f6359a7eb" translate="yes" xml:space="preserve">
          <source>If you see an integer that starts with a 0, in Python 2, this is (deprecated) octal syntax.</source>
          <target state="translated">Python 2では、0から始まる整数が表示された場合、これは(非推奨の)8進数の構文です。</target>
        </trans-unit>
        <trans-unit id="9b22ab08d461acd5af78ce7bb4e2e0b0372f8288" translate="yes" xml:space="preserve">
          <source>If your motivation is to have your own code clearly represent hard-coded specific values, however, you may not need to convert from the bases - you can let Python do it for you automatically with the correct syntax.</source>
          <target state="translated">しかし、もしあなたが自分のコードをハードコードされた特定の値を明確に表現したいと思っているのであれば、ベースから変換する必要はないかもしれません-正しい構文で自動的にPythonに変換させることができます。</target>
        </trans-unit>
        <trans-unit id="b6ea0703a6b9ea8e60fc58e4ea60ca7a276b628b" translate="yes" xml:space="preserve">
          <source>If your strings are in a list, you could use the map function as well.</source>
          <target state="translated">文字列がリストになっている場合は、map関数を使うこともできます。</target>
        </trans-unit>
        <trans-unit id="7262ea181d121b8219f9a6e740888fa75e3b0eab" translate="yes" xml:space="preserve">
          <source>In Python, how can I parse a numeric string like &lt;code&gt;&quot;545.2222&quot;&lt;/code&gt; to its corresponding float value, &lt;code&gt;545.2222&lt;/code&gt;? Or parse the string &lt;code&gt;&quot;31&quot;&lt;/code&gt; to an integer, &lt;code&gt;31&lt;/code&gt;?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonでは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;545.2222&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ような数値文字列&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を、対応する浮動小数点値&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;545.2222&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に解析するにはどうすれば&lt;/font&gt;&lt;/font&gt; &lt;code&gt;545.2222&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ですか？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または文字列解析&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;31&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;整数に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;31&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="071bfb1cc029b70746851fb0136a67bf5b207ce6" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://en.wikipedia.org/wiki/Decimal_mark&quot;&gt;majority of countries of the world&lt;/a&gt;,  commas are used for decimal marks instead of periods.  In this example with French locale, the comma is correctly handled as a decimal mark:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Decimal_mark&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;世界&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;大多数の国では&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、ピリオドの代わりにカンマが小数点に使用されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フランス語ロケールのこの例では、コンマは小数点として正しく処理されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="38750d6d2151efa5c708f44296e65cbce001eade" translate="yes" xml:space="preserve">
          <source>In the United States and the UK, commas can be used as a thousands separator.  In this example with American locale, the comma is handled properly as a separator:</source>
          <target state="translated">米国と英国では、カンマは千単位の区切り文字として使用することができます。アメリカロケールのこの例では、カンマは区切り文字として適切に扱われます。</target>
        </trans-unit>
        <trans-unit id="a37c191781a9e1949d03b99cd2e9bceab5605a88" translate="yes" xml:space="preserve">
          <source>It is bad because it looks like the value should be &lt;code&gt;37&lt;/code&gt;. So in Python 3, it now raises a &lt;code&gt;SyntaxError&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値が&lt;/font&gt;&lt;/font&gt; &lt;code&gt;37&lt;/code&gt; である&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必要があるように見えるため、これは不良&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、Python 3では&lt;/font&gt;&lt;/font&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が発生し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="94f910fc29bee92432df0b7fc9b0619f6b878b25" translate="yes" xml:space="preserve">
          <source>It is only good if they're all the same type.</source>
          <target state="translated">全員が同じタイプであれば良いのです。</target>
        </trans-unit>
        <trans-unit id="79066e88b34141eecf160b9921d6f71aba525bc8" translate="yes" xml:space="preserve">
          <source>It will convert the string to its type</source>
          <target state="translated">文字列をその型に変換します。</target>
        </trans-unit>
        <trans-unit id="391db622bea60e95ce7906aabddd882aa32f9c0f" translate="yes" xml:space="preserve">
          <source>It will return int, float or string depending on what was passed.</source>
          <target state="translated">何が渡されたかに応じて、int、float、または文字列を返します。</target>
        </trans-unit>
        <trans-unit id="286cee8f96aaecbc419dfcccefe506c3d6baff2b" translate="yes" xml:space="preserve">
          <source>It works like this...</source>
          <target state="translated">このように動作します...</target>
        </trans-unit>
        <trans-unit id="a5cca597d4f8adc01747f5ef6ad4441bd4017080" translate="yes" xml:space="preserve">
          <source>It's good that you ask to do these separately. If you're mixing them, you may be setting yourself up for problems later. The simple answer is:</source>
          <target state="translated">これらを別々にやってもらうのが良いと思います。混ぜていると、後々のトラブルに備えることになるかもしれません。簡単な答えは</target>
        </trans-unit>
        <trans-unit id="380d91fca53355cbc72b815004cce3fa2b6105f0" translate="yes" xml:space="preserve">
          <source>Localization and commas</source>
          <target state="translated">ローカライゼーションとカンマ</target>
        </trans-unit>
        <trans-unit id="a883d60b68178720c208a085c0df60896bdf4657" translate="yes" xml:space="preserve">
          <source>Making ambiguous Python 2 octals compatible with Python 3</source>
          <target state="translated">曖昧なPython 2の8進数をPython 3と互換性を持たせる</target>
        </trans-unit>
        <trans-unit id="397f63f3b6d975f4a2f43dfa0efd718ed43a01b4" translate="yes" xml:space="preserve">
          <source>Non-Decimal (i.e. Integer) Literals from other Bases</source>
          <target state="translated">他のベースからの非十進数(すなわち整数)リテラル</target>
        </trans-unit>
        <trans-unit id="32ca6045a63a5b8f28be0308482c61a47ec9b82b" translate="yes" xml:space="preserve">
          <source>Octal, prefix &lt;code&gt;0o&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;8進数、プレフィックス&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0o&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b1b380679737c57117f2dd27b708882f1b56f91" translate="yes" xml:space="preserve">
          <source>Other conversions, ints to and from strings and literals:</source>
          <target state="translated">その他の変換、文字列やリテラルとの間のインツ、インツ。</target>
        </trans-unit>
        <trans-unit id="841df41d6a77485d03f6993cc433e16f382fd764" translate="yes" xml:space="preserve">
          <source>Pass your string to this function:</source>
          <target state="translated">この関数に文字列を渡します。</target>
        </trans-unit>
        <trans-unit id="d1e72a3f07a039485d9791792358489fbde2f382" translate="yes" xml:space="preserve">
          <source>Python method to check if a string is a float:</source>
          <target state="translated">文字列がfloatであるかどうかを調べるPythonメソッド。</target>
        </trans-unit>
        <trans-unit id="6ac42bbcc589b4a3dc01b06f75cba2a0c24bee15" translate="yes" xml:space="preserve">
          <source>That is, a safe 'eval'</source>
          <target state="translated">つまり、安全な 'eval'</target>
        </trans-unit>
        <trans-unit id="82ed17f0ff3f393be286e18e51e1225c470042b2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://en.wikipedia.org/wiki/YAML&quot;&gt;YAML&lt;/a&gt; parser can help you figure out what datatype your string is. Use &lt;code&gt;yaml.load()&lt;/code&gt;, and then you can use &lt;code&gt;type(result)&lt;/code&gt; to test for type:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/YAML&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;YAMLの&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;パーサを使用すると、データ型、あなたの文字列があるかを把握することができます。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;yaml.load()&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;type(result)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タイプ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をテスト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="54f24865b2e33ed5d4a285e6ef021e308501957f" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;locale.atoi&lt;/code&gt; is also available, but the argument should be an integer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;locale.atoi&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッド&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も使用できますが、引数は整数でなければなりません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3419811fcb469eced255ab2fd89c6d434f441d08" translate="yes" xml:space="preserve">
          <source>The question seems a little bit old. But let me suggest a function, parseStr, which makes something similar, that is, returns integer or float and if a given ASCII string cannot be converted to none of them it returns it untouched. The code of course might be adjusted to do only what you want:</source>
          <target state="translated">この質問は少し古いようです。つまり、整数か浮動小数点数を返し、与えられたASCII文字列がそれらのいずれにも変換できない場合には、それをそのまま返します。もちろん、コードはあなたが望むことだけをするように調整されているかもしれません。</target>
        </trans-unit>
        <trans-unit id="ff6058fcd80fe6b4273d6f904396ed0a214d972f" translate="yes" xml:space="preserve">
          <source>Theoretically, there's an injection vulnerability. The string could, for example be &lt;code&gt;&quot;import os; os.abort()&quot;&lt;/code&gt;. Without any background on where the string comes from, however, the possibility is theoretical speculation.  Since the question is vague, it's not at all clear if this vulnerability actually exists or not.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;理論的には、インジェクションの脆弱性があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列は、たとえば&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;import os; os.abort()&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列がどこから来たのかについての背景がなければ、可能性は理論的な推測です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;質問は曖昧なので、この脆弱性が実際に存在するかどうかはまったく明確ではありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b4a5a627bcdc24ca09c333ae1d50d58b4835078" translate="yes" xml:space="preserve">
          <source>This can be used for safely evaluating strings containing Python expressions from untrusted sources without the need to parse the values oneself.</source>
          <target state="translated">これは、信頼されていないソースからのPython式を含む文字列を、自分で値を解析することなく安全に評価するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="90cb7daf4dbec805091fcce5c23de49606540c71" translate="yes" xml:space="preserve">
          <source>This can be useful when describing binary flags, file permissions in code, or hex values for colors - for example, note no quotes:</source>
          <target state="translated">これは、バイナリフラグやコード内のファイルパーミッション、色の16進数などを記述する際に便利です-例えば、引用符を使わないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="b4b904989f0bec846066a9dd10a5b1f286b87a7c" translate="yes" xml:space="preserve">
          <source>This is a function which will convert any &lt;code&gt;object&lt;/code&gt; (not just &lt;code&gt;str&lt;/code&gt;) to &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;float&lt;/code&gt;, based on if the actual string supplied &lt;em&gt;looks like&lt;/em&gt;&lt;code&gt;int&lt;/code&gt; or &lt;code&gt;float&lt;/code&gt;. Further if it's an object which has both &lt;code&gt;__float&lt;/code&gt; and &lt;code&gt;__int__&lt;/code&gt; methods, it defaults to using &lt;code&gt;__float__&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;提供された実際の文字列&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;/em&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; の&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ように見える&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;かどうかに基づいて、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;任意の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;だけでなく&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）を&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変換する関数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それは両方持っているオブジェクトの場合はさらに&lt;/font&gt; &lt;code&gt;__float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt; &lt;code&gt;__int__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用してデフォルトでは、メソッドを&lt;/font&gt; &lt;code&gt;__float__&lt;/code&gt; を&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3299a391543a93302dd2a54549c3d99601ed019b" translate="yes" xml:space="preserve">
          <source>This is another method which deserves to be mentioned here, &lt;a href=&quot;http://docs.python.org/library/ast.html#ast.literal_eval&quot;&gt;ast.literal_eval&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、ここで言及するに値するもう1つのメソッドである&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/library/ast.html#ast.literal_eval&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ast.literal_eval&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e3916d4eded96536fa9677900ff56204ba129286" translate="yes" xml:space="preserve">
          <source>This is the most Pythonic way I could come up with.</source>
          <target state="translated">これが私が思いついた最もピソ的な方法です。</target>
        </trans-unit>
        <trans-unit id="0944c8672dac277a9794de0667a0d8b4b9944e4a" translate="yes" xml:space="preserve">
          <source>This solution will handle all of the string conventions for numbers (all that I know about).</source>
          <target state="translated">このソリューションでは、数字の文字列規約(私が知っていることはすべて)を処理します。</target>
        </trans-unit>
        <trans-unit id="a6ab26337afa6d43c3bed6cd080ff84f74d8fb61" translate="yes" xml:space="preserve">
          <source>This test case output illustrates what I'm talking about.</source>
          <target state="translated">このテストケースの出力は、私が言っていることを説明しています。</target>
        </trans-unit>
        <trans-unit id="60aca5d7d4e88ea9566672aebfd64f28947abbfc" translate="yes" xml:space="preserve">
          <source>This will try to parse a string and return either &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;float&lt;/code&gt; depending on what the string represents.
It might rise parsing exceptions or &lt;a href=&quot;https://stackoverflow.com/a/1778381/5973334&quot;&gt;have some unexpected behaviour&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは文字列を解析し、文字列&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が何を表すかに応じて&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を返します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;解析例外が発生するか&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/1778381/5973334&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、予期しない動作が&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;発生する可能性があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f62f9af8fbb1765aa28c730c71967a3c6635918" translate="yes" xml:space="preserve">
          <source>To typecast in python use the constructor funtions of the type, passing the string (or whatever value you are trying to cast) as a parameter.</source>
          <target state="translated">pythonで型キャストを行うには、型のコンストラクタ関数を使用します。</target>
        </trans-unit>
        <trans-unit id="bc0e34154d952ed72b15f5d9618112640d548177" translate="yes" xml:space="preserve">
          <source>Use:</source>
          <target state="translated">Use:</target>
        </trans-unit>
        <trans-unit id="f5afde64a8efdfd8c2803f97f3231b09b7212b33" translate="yes" xml:space="preserve">
          <source>Users &lt;em&gt;codelogic&lt;/em&gt; and &lt;em&gt;harley&lt;/em&gt; are correct, but keep in mind if you know the string is an integer (for example, 545) you can call int(&quot;545&quot;) without first casting to float.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ユーザーは&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;codelogic&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ハーレーは&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正しいですが、あなたは、文字列が整数であることがわかっている場合に注意してください（例えば、545）あなたはフロートへの最初の鋳造なしのint（「545」）を呼び出すことができます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c6fb0daa8a4507f5b1fddd9cc41fb6b5777d8b3a" translate="yes" xml:space="preserve">
          <source>What is, and is not a float in &lt;a href=&quot;http://en.wikipedia.org/wiki/Python_%28programming_language%29&quot;&gt;Python&lt;/a&gt; may surprise you:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;何が、とフロートではありません&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Python_%28programming_language%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonは&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたを驚かせることがあります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f72c5857d8b8388db1dc5bac20df861905ecfa4e" translate="yes" xml:space="preserve">
          <source>You can use the apropos prefixes to get automatic conversion to integers with &lt;a href=&quot;https://docs.python.org/3/reference/lexical_analysis.html#integer-literals&quot;&gt;the following literals&lt;/a&gt;. These are valid for Python 2 and 3:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;apropos接頭辞を使用すると&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/reference/lexical_analysis.html#integer-literals&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、次のリテラル&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して整数に自動変換できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらはPython 2および3で有効です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8cea298df221059bc16e10547822d5760912807a" translate="yes" xml:space="preserve">
          <source>You need to take into account rounding to do this properly.</source>
          <target state="translated">きちんと丸めを考慮しないとできません。</target>
        </trans-unit>
        <trans-unit id="17f19d71a297031639327591e146c0a2703a96fc" translate="yes" xml:space="preserve">
          <source>You should consider the possibility of commas in the string representation of a number, for cases like  &lt;code&gt;float(&quot;545,545.2222&quot;)&lt;/code&gt; which throws an exception. Instead, use methods in &lt;code&gt;locale&lt;/code&gt; to convert the strings to numbers and interpret commas correctly. The &lt;code&gt;locale.atof&lt;/code&gt; method converts to a float in one step once the locale has been set for the desired number convention.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;float(&quot;545,545.2222&quot;)&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ように&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例外をスローする&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合は、数値の文字列表現にコンマが含まれる可能性を考慮する必要 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代わりに、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;locale&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッド&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して文字列を数値に変換し、カンマを正しく解釈します。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;locale.atof&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ロケール一度一の工程でフロートの方法の変換は、所望の数の規則に設定されています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a610d378aaaa5bb2fd28c3bedbb51336baa67033" translate="yes" xml:space="preserve">
          <source>You think you know what numbers are? You are not so good as you think! Not big surprise.</source>
          <target state="translated">数字の意味を知っていると思っていますか?あなたは思っているほど優秀ではありません!驚くことではない</target>
        </trans-unit>
        <trans-unit id="e67de45fe45caa1f9fa46ef9c437a50ada7997ea" translate="yes" xml:space="preserve">
          <source>and by the way, something to verify you have a number:</source>
          <target state="translated">と、ところで、あなたが番号を持っていることを確認するための何か。</target>
        </trans-unit>
        <trans-unit id="323f7b8a519d2ab0f4c92bd7b3cc3c5064ceff71" translate="yes" xml:space="preserve">
          <source>try-except can also be used as an alternative. Try converting string to int inside the try block. If the string would be a float value, it will throw an error which will be catched in the except block, like this</source>
          <target state="translated">try-exceptも代替として使用できます。try ブロックの中で文字列を int に変換してみてください。文字列が浮動小数点値であった場合、次のようにexceptブロック内でキャッチされるエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="d99f66b852fef055214f1f6c4e0864afe932b13e" translate="yes" xml:space="preserve">
          <source>usage:</source>
          <target state="translated">usage:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
