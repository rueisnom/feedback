<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/379906">
    <body>
      <group id="379906">
        <trans-unit id="ac1f3972fa720284515fb856050b268500f1d0dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval()&lt;/code&gt; is a very good solution to this question. It doesn't need to check if the number is int or float, it just gives the corresponding equivalent.
If other methods are required, try</source>
          <target state="translated">&lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是一个很好的解决方案。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它不需要检查数字是int还是float，它只给出相应的等价物。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果需要其他方法，请尝试&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd7c81bfe30f5cc330862f645af9aa96ea1a6b65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;float(&quot;545.2222&quot;)&lt;/code&gt; and &lt;code&gt;int(float(&quot;545.2222&quot;))&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;float(&quot;545.2222&quot;)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int(float(&quot;545.2222&quot;))&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9c5393b1f32509dbbf5a6ddaeb30e2b29a4bc677" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;&quot;31&quot;&lt;/code&gt; to an integer:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;&quot;31&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为整数：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bfac89e13d7320d4a50f8daba75ea437a3081b24" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;&quot;545.2222&quot;&lt;/code&gt; to float:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;&quot;545.2222&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;浮动：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed79b57b057ba55c26f5ff1f1c3d1789db5c6fde" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 1 -- United States number conventions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;示例1-美国数字约定&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f09ffc14cdf4ca63987468205d8070b41d078fd7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 2 -- European number conventions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;示例2-欧洲数字约定&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3159ed817f56cb7d0cf9dc1f4f2b26c07cb6c230" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Handles hex, octal, binary, decimal, and float&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;处理十六进制，八进制，二进制，十进制和浮点数&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14d6b7f66735e8f443d248d0531fb892958278b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In Python, how can I parse a numeric string like &quot;545.2222&quot; to its corresponding float value, 542.2222? Or parse the string &quot;31&quot; to an integer, 31?&lt;/strong&gt;
  I just want to know how to parse a float string to a float, and (separately) an int string to an int.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在Python中，如何将&amp;ldquo; 545.2222&amp;rdquo;之类的数字字符串解析为其对应的浮点值542.2222？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;还是将字符串&amp;ldquo; 31&amp;rdquo;解析为整数31？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 我只想知道如何将float字符串解析为float，以及将int字符串解析为int。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0d1fdc863e0c1a712adb6af8e30b28214197294" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is a corrected version&lt;/strong&gt; of 
&lt;a href=&quot;https://stackoverflow.com/a/33017514/5973334&quot;&gt;https://stackoverflow.com/a/33017514/5973334&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是一个正确版本&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/33017514/5973334&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://stackoverflow.com/a/33017514/5973334&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a708e31d4a091e66669938a90bed8a5408695112" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;string that is a float&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;浮点数的字符串&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3047f53ff91e56b43ca40c12e98998f32bff7393" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;string that is a string&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;字符串即字符串&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b45110c06ffc521e9e96b21c174b65e5db68d2a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;string that is an int&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个int字符串&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5357ff0f08439a62b5a90cd08a83a368d2731475" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;string that looks like a float&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;看起来像个浮点数的字符串&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f98f17c0a88c5dc482e5ceef9b4d4ae342978f23" translate="yes" xml:space="preserve">
          <source>A longer and more accurate name for this function could be: &lt;code&gt;is_convertible_to_float(value)&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此函数的更长更准确的名称可能是：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is_convertible_to_float(value)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fdcd6149eb93e2e35f206e511dad5edf7a008fb2" translate="yes" xml:space="preserve">
          <source>Behind the scenes, python is calling the objects &lt;code&gt;__float__&lt;/code&gt; method, which should return a float representation of the parameter. This is especially powerful, as you can define your own types (using classes) with a &lt;code&gt;__float__&lt;/code&gt; method so that it can be casted into a float using float(myobject).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在后台，python调用对象&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__float__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法，该方法应返回参数的float表示形式。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是特别强大的功能，因为您可以使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__float__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义自己的类型（使用类），&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以便可以使用float（myobject）将其转换为float。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4dd992a284c20dac5bc4f8f904093de094d2d51e" translate="yes" xml:space="preserve">
          <source>Binary, prefix &lt;code&gt;0b&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;二进制，前缀&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b27550dcea37cd21db9fed4e1cdbdef270ceb70" translate="yes" xml:space="preserve">
          <source>Catching broad exceptions this way, killing canaries and gobbling the exception creates a tiny chance that a valid float as string will return false.  The &lt;code&gt;float(...)&lt;/code&gt; line of code can failed for any of a thousand reasons that have nothing to do with the contents of the string.  But if you're writing life-critical software in a duck-typing prototype language like Python, then you've got much larger problems.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用这种方式捕获广泛的异常，杀死金丝雀和吞噬异常会产生很小的机会，即有效的float字符串将返回false。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代码&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;float(...)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;行可能由于数千种与字符串内容无关的原因而失败。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，如果您使用像Python这样的鸭子式原型语言来编写至关重要的软件，那么您将遇到更大的问题。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0130ac64c97dc735bd6284133e9594c7404c9c6a" translate="yes" xml:space="preserve">
          <source>Conversions from various bases, and you should know the base in advance (10 is the default). Note you can prefix them with what Python expects for its literals (see below) or remove the prefix:</source>
          <target state="translated">从各种基数转换,你应该提前知道基数(10是默认的)。请注意,你可以用 Python 所期望的字形前缀 (见下面),或者去掉前缀。</target>
        </trans-unit>
        <trans-unit id="e10b39ca00b5dc46b1d74719f0f50248069b3119" translate="yes" xml:space="preserve">
          <source>Convert your Python 2 octals to octals that work in both 2 and 3 with the &lt;code&gt;0o&lt;/code&gt; prefix:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0o&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;前缀&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将Python 2八进制转换为在2和3中均可使用的八进制&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8bbc3cbc17943bda79871e6952193782e6b6be88" translate="yes" xml:space="preserve">
          <source>Don't use this code on life-critical software!</source>
          <target state="translated">不要在关键性的软件上使用此代码!</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="838b65efe46428a170ba508dde618adfbcc23a6f" translate="yes" xml:space="preserve">
          <source>Here is the test:</source>
          <target state="translated">以下是测试内容。</target>
        </trans-unit>
        <trans-unit id="021c5c6878dffa28468b3c4f1f2f55560dd9a90f" translate="yes" xml:space="preserve">
          <source>Here's another interpretation of your question (hint: it's vague). It's possible you're looking for something like this:</source>
          <target state="translated">这里是对你的问题的另一种解释(提示:很模糊)。有可能你要找的东西是这样的。</target>
        </trans-unit>
        <trans-unit id="3434f000c92fb0468a41b25e03661ba5f5e4cd2a" translate="yes" xml:space="preserve">
          <source>Hexadecimal, prefix &lt;code&gt;0x&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;十六进制，前缀&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="504c7382aceb1ff50dc3a6954f966345f15b14b0" translate="yes" xml:space="preserve">
          <source>How do I parse a string to a float or int</source>
          <target state="translated">如何将字符串解析为浮点数或英特值?</target>
        </trans-unit>
        <trans-unit id="56c88887f485ff86dbf829cd5d874bad11cb2c63" translate="yes" xml:space="preserve">
          <source>I am surprised nobody mentioned regex because sometimes string must be prepared and normalized before casting to number</source>
          <target state="translated">我很惊讶没有人提到regex,因为有时字符串必须先准备好并归一化,然后才可以投射到数字。</target>
        </trans-unit>
        <trans-unit id="638243c2b3035565ea154acf4fe0235575baafc2" translate="yes" xml:space="preserve">
          <source>I just want to know how to parse a &lt;em&gt;float&lt;/em&gt;&lt;code&gt;str&lt;/code&gt; to a &lt;code&gt;float&lt;/code&gt;, and (separately) an &lt;em&gt;int&lt;/em&gt;&lt;code&gt;str&lt;/code&gt; to an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我只是想知道如何解析&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;浮&lt;/font&gt;&lt;/font&gt;&lt;/em&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，和（单独）的&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;INT &lt;/font&gt;&lt;/font&gt;&lt;/em&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;到&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5e69a4c68f86a4431a987109c9384fdf8ba4fb11" translate="yes" xml:space="preserve">
          <source>I use this function for that</source>
          <target state="translated">我用的是这个功能</target>
        </trans-unit>
        <trans-unit id="4025d346bde75708eae48205c6cfb7312594fe66" translate="yes" xml:space="preserve">
          <source>I.e. int(5.1) =&amp;gt; 5
     int(5.6) =&amp;gt; 5  -- wrong, should be 6 so we do int(5.6 + 0.5) =&amp;gt; 6</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;即int（5.1）=&amp;gt; 5 int（5.6）=&amp;gt; 5-错误，应该为6所以我们做int（5.6 + 0.5）=&amp;gt; 6&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f201be4f85caa58ba08d08eaa03cb387c5b511d" translate="yes" xml:space="preserve">
          <source>If you aren't averse to third-party modules, you could check out the &lt;a href=&quot;https://pypi.org/project/fastnumbers&quot;&gt;fastnumbers&lt;/a&gt; module. It provides a function called &lt;a href=&quot;http://fastnumbers.readthedocs.io/en/master/api.html#fastnumbers.fast_real&quot;&gt;fast_real&lt;/a&gt; that does exactly what this question is asking for and does it faster than a pure-Python implementation:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您不喜欢第三方模块，则可以签出&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://pypi.org/project/fastnumbers&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;fastnumbers&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;模块。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它提供了一个名为&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://fastnumbers.readthedocs.io/en/master/api.html#fastnumbers.fast_real&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;fast_real&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的函数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该函数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以完全满足此问题的要求，并且比纯Python实现要快：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d03e362c1cf8226f726f99e57ce664305faf3ad4" translate="yes" xml:space="preserve">
          <source>If you don't know the base in advance, but you do know they will have the correct prefix, Python can infer this for you if you pass &lt;code&gt;0&lt;/code&gt; as the base:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您事先不知道基数，但是您知道它们将具有正确的前缀，那么如果您将&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用作基数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，Python可以为您推断出来&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d90b04fe729f132e89b5eee37d95f94f6359a7eb" translate="yes" xml:space="preserve">
          <source>If you see an integer that starts with a 0, in Python 2, this is (deprecated) octal syntax.</source>
          <target state="translated">如果你看到一个以0开头的整数,在Python 2中,这是(已被废弃的)八进制语法。</target>
        </trans-unit>
        <trans-unit id="9b22ab08d461acd5af78ce7bb4e2e0b0372f8288" translate="yes" xml:space="preserve">
          <source>If your motivation is to have your own code clearly represent hard-coded specific values, however, you may not need to convert from the bases - you can let Python do it for you automatically with the correct syntax.</source>
          <target state="translated">但是,如果你的动机是让你自己的代码清楚地表示硬编码的特定值,你可能不需要从基础上进行转换--你可以让Python用正确的语法自动为你做。</target>
        </trans-unit>
        <trans-unit id="b6ea0703a6b9ea8e60fc58e4ea60ca7a276b628b" translate="yes" xml:space="preserve">
          <source>If your strings are in a list, you could use the map function as well.</source>
          <target state="translated">如果你的字符串是在一个列表中,你也可以使用映射函数。</target>
        </trans-unit>
        <trans-unit id="7262ea181d121b8219f9a6e740888fa75e3b0eab" translate="yes" xml:space="preserve">
          <source>In Python, how can I parse a numeric string like &lt;code&gt;&quot;545.2222&quot;&lt;/code&gt; to its corresponding float value, &lt;code&gt;545.2222&lt;/code&gt;? Or parse the string &lt;code&gt;&quot;31&quot;&lt;/code&gt; to an integer, &lt;code&gt;31&lt;/code&gt;?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在Python中，如何将&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;545.2222&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类的数字字符串解析&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为其对应的浮点值&lt;/font&gt;&lt;/font&gt; &lt;code&gt;545.2222&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或将字符串&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;31&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;解析为&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;整数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;31&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="071bfb1cc029b70746851fb0136a67bf5b207ce6" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://en.wikipedia.org/wiki/Decimal_mark&quot;&gt;majority of countries of the world&lt;/a&gt;,  commas are used for decimal marks instead of periods.  In this example with French locale, the comma is correctly handled as a decimal mark:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在世界上&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Decimal_mark&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;大多数国家/地区&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，逗号用于小数点而不是句点。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在此使用法语语言环境的示例中，逗号被正确处理为小数点：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="38750d6d2151efa5c708f44296e65cbce001eade" translate="yes" xml:space="preserve">
          <source>In the United States and the UK, commas can be used as a thousands separator.  In this example with American locale, the comma is handled properly as a separator:</source>
          <target state="translated">在美国和英国,逗号可以作为千位分隔符使用。在本例中,在美国的locale中,逗号作为分隔符处理得很好。</target>
        </trans-unit>
        <trans-unit id="a37c191781a9e1949d03b99cd2e9bceab5605a88" translate="yes" xml:space="preserve">
          <source>It is bad because it looks like the value should be &lt;code&gt;37&lt;/code&gt;. So in Python 3, it now raises a &lt;code&gt;SyntaxError&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这很糟糕，因为看起来值应该为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;37&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，在Python 3中，它现在引发&lt;/font&gt;&lt;/font&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="94f910fc29bee92432df0b7fc9b0619f6b878b25" translate="yes" xml:space="preserve">
          <source>It is only good if they're all the same type.</source>
          <target state="translated">只有当它们都是同一类型的时候,才是好的。</target>
        </trans-unit>
        <trans-unit id="79066e88b34141eecf160b9921d6f71aba525bc8" translate="yes" xml:space="preserve">
          <source>It will convert the string to its type</source>
          <target state="translated">它会将字符串转换为其类型</target>
        </trans-unit>
        <trans-unit id="391db622bea60e95ce7906aabddd882aa32f9c0f" translate="yes" xml:space="preserve">
          <source>It will return int, float or string depending on what was passed.</source>
          <target state="translated">它将根据传递的内容返回int、float或string。</target>
        </trans-unit>
        <trans-unit id="286cee8f96aaecbc419dfcccefe506c3d6baff2b" translate="yes" xml:space="preserve">
          <source>It works like this...</source>
          <target state="translated">它的工作原理是这样的.....</target>
        </trans-unit>
        <trans-unit id="a5cca597d4f8adc01747f5ef6ad4441bd4017080" translate="yes" xml:space="preserve">
          <source>It's good that you ask to do these separately. If you're mixing them, you may be setting yourself up for problems later. The simple answer is:</source>
          <target state="translated">你要求把这些分开做就好了。如果你把它们混在一起,可能会给自己以后的工作埋下隐患。简单的答案是。</target>
        </trans-unit>
        <trans-unit id="380d91fca53355cbc72b815004cce3fa2b6105f0" translate="yes" xml:space="preserve">
          <source>Localization and commas</source>
          <target state="translated">本地化和逗号</target>
        </trans-unit>
        <trans-unit id="a883d60b68178720c208a085c0df60896bdf4657" translate="yes" xml:space="preserve">
          <source>Making ambiguous Python 2 octals compatible with Python 3</source>
          <target state="translated">使模糊的Python 2八进制与Python 3兼容</target>
        </trans-unit>
        <trans-unit id="397f63f3b6d975f4a2f43dfa0efd718ed43a01b4" translate="yes" xml:space="preserve">
          <source>Non-Decimal (i.e. Integer) Literals from other Bases</source>
          <target state="translated">来自其他基础的非十进制(即整数)字型</target>
        </trans-unit>
        <trans-unit id="32ca6045a63a5b8f28be0308482c61a47ec9b82b" translate="yes" xml:space="preserve">
          <source>Octal, prefix &lt;code&gt;0o&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;八进制，前缀&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0o&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b1b380679737c57117f2dd27b708882f1b56f91" translate="yes" xml:space="preserve">
          <source>Other conversions, ints to and from strings and literals:</source>
          <target state="translated">其他的转换,ints与字符串和字元之间的转换。</target>
        </trans-unit>
        <trans-unit id="841df41d6a77485d03f6993cc433e16f382fd764" translate="yes" xml:space="preserve">
          <source>Pass your string to this function:</source>
          <target state="translated">将你的字符串传给这个函数。</target>
        </trans-unit>
        <trans-unit id="d1e72a3f07a039485d9791792358489fbde2f382" translate="yes" xml:space="preserve">
          <source>Python method to check if a string is a float:</source>
          <target state="translated">用于检查字符串是否为浮点数的Python方法。</target>
        </trans-unit>
        <trans-unit id="6ac42bbcc589b4a3dc01b06f75cba2a0c24bee15" translate="yes" xml:space="preserve">
          <source>That is, a safe 'eval'</source>
          <target state="translated">就是说,安全的 &quot;评估</target>
        </trans-unit>
        <trans-unit id="82ed17f0ff3f393be286e18e51e1225c470042b2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://en.wikipedia.org/wiki/YAML&quot;&gt;YAML&lt;/a&gt; parser can help you figure out what datatype your string is. Use &lt;code&gt;yaml.load()&lt;/code&gt;, and then you can use &lt;code&gt;type(result)&lt;/code&gt; to test for type:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/YAML&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;YAML&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;解析器可以帮助你找出你的数据类型的字符串是什么。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;yaml.load()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，然后可以使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;type(result)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;测试类型：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="54f24865b2e33ed5d4a285e6ef021e308501957f" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;locale.atoi&lt;/code&gt; is also available, but the argument should be an integer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;也可以使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;locale.atoi&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但参数应为整数。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3419811fcb469eced255ab2fd89c6d434f441d08" translate="yes" xml:space="preserve">
          <source>The question seems a little bit old. But let me suggest a function, parseStr, which makes something similar, that is, returns integer or float and if a given ASCII string cannot be converted to none of them it returns it untouched. The code of course might be adjusted to do only what you want:</source>
          <target state="translated">这个问题似乎有点老了。但让我给你推荐一个函数parseStr,它可以做一些类似的事情,即返回整数或浮点数,如果给定的ASCII字符串不能转换为任何一个,它就会返回它,不做任何改动。当然,代码可能会被调整为只做你想要的事情。</target>
        </trans-unit>
        <trans-unit id="ff6058fcd80fe6b4273d6f904396ed0a214d972f" translate="yes" xml:space="preserve">
          <source>Theoretically, there's an injection vulnerability. The string could, for example be &lt;code&gt;&quot;import os; os.abort()&quot;&lt;/code&gt;. Without any background on where the string comes from, however, the possibility is theoretical speculation.  Since the question is vague, it's not at all clear if this vulnerability actually exists or not.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从理论上讲，存在注入漏洞。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该字符串例如可以是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;import os; os.abort()&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，关于字符串的来源没有任何背景，可能是理论上的推测。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于问题很模糊，因此尚不清楚此漏洞是否确实存在。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b4a5a627bcdc24ca09c333ae1d50d58b4835078" translate="yes" xml:space="preserve">
          <source>This can be used for safely evaluating strings containing Python expressions from untrusted sources without the need to parse the values oneself.</source>
          <target state="translated">这可以用来安全地评估包含来自非信任源的 Python 表达式的字符串,而不需要自己去解析值。</target>
        </trans-unit>
        <trans-unit id="90cb7daf4dbec805091fcce5c23de49606540c71" translate="yes" xml:space="preserve">
          <source>This can be useful when describing binary flags, file permissions in code, or hex values for colors - for example, note no quotes:</source>
          <target state="translated">这在描述二进制标志、代码中的文件权限或颜色的十六进制值时很有用----例如,注意不要加引号。</target>
        </trans-unit>
        <trans-unit id="b4b904989f0bec846066a9dd10a5b1f286b87a7c" translate="yes" xml:space="preserve">
          <source>This is a function which will convert any &lt;code&gt;object&lt;/code&gt; (not just &lt;code&gt;str&lt;/code&gt;) to &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;float&lt;/code&gt;, based on if the actual string supplied &lt;em&gt;looks like&lt;/em&gt;&lt;code&gt;int&lt;/code&gt; or &lt;code&gt;float&lt;/code&gt;. Further if it's an object which has both &lt;code&gt;__float&lt;/code&gt; and &lt;code&gt;__int__&lt;/code&gt; methods, it defaults to using &lt;code&gt;__float__&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是将任何转换函数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（不只是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）到&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的基础上，如果实际字符串提供的&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;模样&lt;/font&gt;&lt;/font&gt;&lt;/em&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此外，如果它是同时具有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__int__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则默认使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__float__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3299a391543a93302dd2a54549c3d99601ed019b" translate="yes" xml:space="preserve">
          <source>This is another method which deserves to be mentioned here, &lt;a href=&quot;http://docs.python.org/library/ast.html#ast.literal_eval&quot;&gt;ast.literal_eval&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是另一个值得在这里提及的方法&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/library/ast.html#ast.literal_eval&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ast.literal_eval&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e3916d4eded96536fa9677900ff56204ba129286" translate="yes" xml:space="preserve">
          <source>This is the most Pythonic way I could come up with.</source>
          <target state="translated">这是我能想出的最能说明问题的方法。</target>
        </trans-unit>
        <trans-unit id="0944c8672dac277a9794de0667a0d8b4b9944e4a" translate="yes" xml:space="preserve">
          <source>This solution will handle all of the string conventions for numbers (all that I know about).</source>
          <target state="translated">这个解决方案将处理所有的数字字符串约定(我所知道的所有)。</target>
        </trans-unit>
        <trans-unit id="a6ab26337afa6d43c3bed6cd080ff84f74d8fb61" translate="yes" xml:space="preserve">
          <source>This test case output illustrates what I'm talking about.</source>
          <target state="translated">这个测试案例输出说明了我说的是什么。</target>
        </trans-unit>
        <trans-unit id="60aca5d7d4e88ea9566672aebfd64f28947abbfc" translate="yes" xml:space="preserve">
          <source>This will try to parse a string and return either &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;float&lt;/code&gt; depending on what the string represents.
It might rise parsing exceptions or &lt;a href=&quot;https://stackoverflow.com/a/1778381/5973334&quot;&gt;have some unexpected behaviour&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这将尝试解析字符串，并&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;根据字符串表示的内容&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;返回&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它可能会引发解析异常或&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/1778381/5973334&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;具有某些意外行为&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f62f9af8fbb1765aa28c730c71967a3c6635918" translate="yes" xml:space="preserve">
          <source>To typecast in python use the constructor funtions of the type, passing the string (or whatever value you are trying to cast) as a parameter.</source>
          <target state="translated">在python中使用类型的构造函数函数,传递字符串(或任何你要投的值)作为参数。</target>
        </trans-unit>
        <trans-unit id="bc0e34154d952ed72b15f5d9618112640d548177" translate="yes" xml:space="preserve">
          <source>Use:</source>
          <target state="translated">Use:</target>
        </trans-unit>
        <trans-unit id="f5afde64a8efdfd8c2803f97f3231b09b7212b33" translate="yes" xml:space="preserve">
          <source>Users &lt;em&gt;codelogic&lt;/em&gt; and &lt;em&gt;harley&lt;/em&gt; are correct, but keep in mind if you know the string is an integer (for example, 545) you can call int(&quot;545&quot;) without first casting to float.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用户&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;codelogic&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;harley&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是正确的，但是请记住，如果您知道字符串是整数（例如545），则可以调用int（&amp;ldquo; 545&amp;rdquo;）而不先进行浮点运算。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c6fb0daa8a4507f5b1fddd9cc41fb6b5777d8b3a" translate="yes" xml:space="preserve">
          <source>What is, and is not a float in &lt;a href=&quot;http://en.wikipedia.org/wiki/Python_%28programming_language%29&quot;&gt;Python&lt;/a&gt; may surprise you:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;什么是&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Python_%28programming_language%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python中&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的浮点数，而不是浮点数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可能会让您感到惊讶：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f72c5857d8b8388db1dc5bac20df861905ecfa4e" translate="yes" xml:space="preserve">
          <source>You can use the apropos prefixes to get automatic conversion to integers with &lt;a href=&quot;https://docs.python.org/3/reference/lexical_analysis.html#integer-literals&quot;&gt;the following literals&lt;/a&gt;. These are valid for Python 2 and 3:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以使用apropos前缀自动转换为具有&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/reference/lexical_analysis.html#integer-literals&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下文字的&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;整数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这些对于Python 2和3有效：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8cea298df221059bc16e10547822d5760912807a" translate="yes" xml:space="preserve">
          <source>You need to take into account rounding to do this properly.</source>
          <target state="translated">你需要考虑到四舍五入,才能做好这一点。</target>
        </trans-unit>
        <trans-unit id="17f19d71a297031639327591e146c0a2703a96fc" translate="yes" xml:space="preserve">
          <source>You should consider the possibility of commas in the string representation of a number, for cases like  &lt;code&gt;float(&quot;545,545.2222&quot;)&lt;/code&gt; which throws an exception. Instead, use methods in &lt;code&gt;locale&lt;/code&gt; to convert the strings to numbers and interpret commas correctly. The &lt;code&gt;locale.atof&lt;/code&gt; method converts to a float in one step once the locale has been set for the desired number convention.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于诸如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;float(&quot;545,545.2222&quot;)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引发异常的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;情况，您应该考虑数字的字符串表示形式中可能出现逗号的可能性 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而是使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;locale&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将字符串转换为数字并正确解释逗号。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一旦为所需的数字约定设置了语言环境&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;locale.atof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法将一步转换为浮点数。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a610d378aaaa5bb2fd28c3bedbb51336baa67033" translate="yes" xml:space="preserve">
          <source>You think you know what numbers are? You are not so good as you think! Not big surprise.</source>
          <target state="translated">你以为你知道什么是数字?你没你想的那么好!没什么好惊讶的。</target>
        </trans-unit>
        <trans-unit id="e67de45fe45caa1f9fa46ef9c437a50ada7997ea" translate="yes" xml:space="preserve">
          <source>and by the way, something to verify you have a number:</source>
          <target state="translated">还有,顺便说一下,有什么东西可以证明你有一个号码。</target>
        </trans-unit>
        <trans-unit id="323f7b8a519d2ab0f4c92bd7b3cc3c5064ceff71" translate="yes" xml:space="preserve">
          <source>try-except can also be used as an alternative. Try converting string to int inside the try block. If the string would be a float value, it will throw an error which will be catched in the except block, like this</source>
          <target state="translated">try-except也可以作为一种选择。试着在try块中把字符串转换为int。如果字符串是一个浮点值,它将会抛出一个错误,并在except块中被捕获,就像这样</target>
        </trans-unit>
        <trans-unit id="d99f66b852fef055214f1f6c4e0864afe932b13e" translate="yes" xml:space="preserve">
          <source>usage:</source>
          <target state="translated">usage:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
