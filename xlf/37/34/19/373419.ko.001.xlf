<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/373419">
    <body>
      <group id="373419">
        <trans-unit id="e9f6896f6f619208772a572ca98f25701e9473c9" translate="yes" xml:space="preserve">
          <source>(As an aside: depending on hardware and operating system, there are various &lt;em&gt;calling conventions&lt;/em&gt; about how you call one function from another. The calling convention is like us deciding whether I write the value on a piece of my paper and then hand it to you, or if you have a piece of paper that I write it on, or if I write it on the wall in front of both of us. This is an interesting subject as well, but far beyond the scope of this already long answer.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(제외 : 하드웨어와 운영 체제에 따라, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한 함수에서 다른 함수를 호출하는 방법에 대한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다양한 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;호출 규칙이&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있습니다. 호출 규칙은 우리가 종이에 값을 써서 당신에게 건네 주는지를 결정하는 것과 같습니다. , 또는 당신이 내가 쓴 종이가 있거나 우리 두 사람 앞에서 벽에 쓴다면, 이것은 흥미로운 주제이기도하지만이 긴 대답의 범위를 훨씬 넘어선 것입니다.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cbac2cd038acc214288f0e583f52ec70e47f7d7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arg&lt;/code&gt; is a &lt;em&gt;variable&lt;/em&gt;, specifically a &lt;em&gt;local variable&lt;/em&gt; of the function &lt;code&gt;bar&lt;/code&gt;, declared and initialized on line 2</source>
          <target state="translated">&lt;code&gt;arg&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 특히 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2 행에서 선언되고 초기화 된 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수 &lt;/font&gt; &lt;code&gt;bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로컬 변수&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5bc453d53640191a42b118363d3132a50b5539d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arg&lt;/code&gt; is also an &lt;em&gt;argument&lt;/em&gt; to a specific &lt;em&gt;invocation&lt;/em&gt; of &lt;code&gt;foo&lt;/code&gt; on line 3</source>
          <target state="translated">&lt;code&gt;arg&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 또한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3 행 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 &lt;/font&gt; &lt;code&gt;foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 특정 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;호출&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대한 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인수입니다.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0608e72f6e5e0abbef70953fddd75322bde2de2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const &amp;amp;&lt;/code&gt; is generally best. You don't incur the construction and destruction penalty. If the reference isn't const your interface is suggesting that it will change the passed in data.</source>
          <target state="translated">&lt;code&gt;const &amp;amp;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 일반적으로 최고입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;건설 및 파괴 페널티가 발생하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조가 구성되지 않은 경우 인터페이스는 전달 된 데이터를 변경하도록 제안합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5778d91fd84f65084092af7733f7deb1cc95e2b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foo&lt;/code&gt; is a &lt;em&gt;function&lt;/em&gt; declared on line 1 (Java insists on making all functions methods, but the concept is the same without loss of generality; C and C++ make a distinction between declaration and definition which I won't go into here)</source>
          <target state="translated">&lt;code&gt;foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1 행에 선언 된 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수입니다&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (자바는 모든 함수 메소드를 작성하도록 요구하지만 개념은 일반성을 잃지 않고 동일합니다 .C와 C ++는 선언과 정의를 구별하지 않습니다)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4342767f686e6c884e61cc037c3c3fc5cc659e9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;param&lt;/code&gt; is a &lt;em&gt;formal parameter&lt;/em&gt; to &lt;code&gt;foo&lt;/code&gt;, also declared on line 1</source>
          <target state="translated">&lt;code&gt;param&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; A는 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;형식 매개 변수&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foo&lt;/code&gt; 는&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ,도 1 행에 선언&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a8d4c381565096e1150f6f23cbfd17f895abdfb3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PS: You can also check Dylan Beattie answer in the current thread that explains it in plain words.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추신 : 현재 스레드에서 Dylan Beattie 답변을 확인하여 일반 단어로 설명 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b531648ef026c5f39d3a5d0415561b077a9607f8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;call by reference&lt;/em&gt; means that you pass &lt;strong&gt;variables&lt;/strong&gt; as function arguments</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조로 호출은 &lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 함수 인수로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전달 함을 의미합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cb11d3cb91b2bf61e1481c659f0757366f9bdd10" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;call by value&lt;/em&gt; means that you pass &lt;strong&gt;values&lt;/strong&gt; as function arguments</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값으로 호출은 &lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 함수 인수로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전달 함을 의미합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c462e7be0d47cb45eb80b5d83418b9eb9be4c338" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&quot;Variable&quot; here means the caller's (local or global) variable itself&lt;/strong&gt; -- i.e. if I pass a local variable by reference and assign to it, I'll change the caller's variable itself, not e.g. whatever it is pointing to if it's a pointer.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 &quot;가변&quot;은 호출자 (로컬 또는 글로벌) 변수 자체를&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의미합니다. 즉, 로컬 변수를 참조로 전달하고 할당하면 호출자 변수 자체를 변경합니다. .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9943118257c67073146bfe93bd45fef73950fe6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Call by reference&lt;/em&gt;&lt;/strong&gt; is when &lt;strong&gt;I give you my notebook which has something written down in it&lt;/strong&gt;. You may scribble in my notebook (maybe I want you to, maybe I don't), and afterwards I keep my notebook, with whatever scribbles you've put there. Also, if what either you or I wrote there is information about how to find something somewhere else, either you or I can go there and fiddle with that information.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참고&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 전화&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하면&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 내가 적어 놓은 노트를 줄&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 때&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 내 노트에 낙서를 할 수도 있고 (아마도 당신이 원하지 않을 수도 있습니다), 그 후에 나는 거기에 놓은 어떤 낙서로도 노트를 보관합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한, 당신이나 내가 쓴 것에 다른 곳을 찾는 방법에 대한 정보가 있다면, 당신이나 나는 그곳에 가서 그 정보를 가지고 바이올린을 칠 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cbec7d9a2bfc4bfd91921e65076e74c44616fe34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Call by value&lt;/em&gt;&lt;/strong&gt; is where &lt;strong&gt;I write down something on a piece of paper and hand it to you&lt;/strong&gt;. Maybe it's a URL, maybe it's a complete copy of War and Peace. No matter what it is, it's on a piece of paper which I've given to you, and so now it is effectively &lt;strong&gt;your piece of paper&lt;/strong&gt;. You are now free to scribble on that piece of paper, or use that piece of paper to find something somewhere else and fiddle with it, whatever.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값에 의한 호출은&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 어디에&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 내가 당신에게 종이와 손 그것의 조각에 뭔가를 적어&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . URL 일 수도 있고 전쟁과 평화의 완전한 사본 일 수도 있습니다. 그것이 무엇이든간에, 그것은 내가 당신에게 준&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 종이에&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있습니다.&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그래서 이제는 사실상&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 당신의 종이&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. 이제 종이에 낙서를하거나 종이를 사용하여 다른 곳을 찾은 후 무엇이든 피킹 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f764f71ad507d4f6ffa334772288b3c44caf6d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: For a long time, this answer used to say:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참고&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : 오랫동안이 답변은 다음과 같이 말했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="23bb1a4a60181353a368cf6d31df5de9e55c1682" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Newer languages&lt;sup&gt;2&lt;/sup&gt; tend to use a different (but similar) pair of techniques to achieve the same effects&lt;/strong&gt; (see below) which is the primary source of confusion.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;새로운 언어 &lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 다른 (그러나 유사한) 기술 쌍을 사용하여&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 혼동의 주요 원인 인 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동일한 효과&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (아래 참조) &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 달성하는 경향이 있습니다&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4f33c78571c4b9ebb3b2d119820fcb7e5ff0e742" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Now, in modern languages, variables tend to be of &quot;reference types&quot;&lt;/strong&gt; (another concept invented later than &quot;pass by reference&quot; and inspired by it), i.e. the actual object data is stored separately somewhere (usually, on the heap), and only &quot;references&quot; to it are ever held in variables and passed as parameters.&lt;sup&gt;3&lt;/sup&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 현대 언어에서 변수는 &quot;참조 유형&quot;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ( &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;참조로&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 전달&quot;이후에 발명되고 그에서 영감을 얻은 또 다른 개념) 인 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경향이 있습니다&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . 즉, 실제 객체 데이터는 어딘가에 (보통 힙에) 별도로 저장됩니다. 오직 &quot;참조&quot;만이 변수로 유지되고 매개 변수로 전달됩니다. &lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;삼&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="25e135788be8d1778bcd707f508c191d13da2085" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Passing such a reference falls under pass-by-value&lt;/strong&gt; because a variable's value is technically the reference itself, not the referred object. However, &lt;strong&gt;the net effect on the program can be the same as either pass-by-value or pass-by-reference:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수의 값은 기술적으로 참조 된 개체가 아니라 참조 자체이기 때문에 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이러한 참조를 전달하는 것은 값별 전달에 속합니다&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로그램에 대한 순 효과는 값별 또는 참조 별과 동일 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="476ab2dd4463b39040262c013f7136f0edd5d0ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The meaning of &quot;reference&quot; in &quot;pass by reference&quot;&lt;/strong&gt;. The difference with the general &quot;reference&quot; term is is that &lt;strong&gt;this &quot;reference&quot; is temporary and implicit.&lt;/strong&gt; What the callee basically gets is &lt;strong&gt;a &quot;variable&quot; that is somehow &quot;the same&quot; as the original one.&lt;/strong&gt; How specifically this effect is achieved is irrelevant (e.g. the language may also expose some implementation details -- addresses, pointers, dereferencing -- this is all irrelevant; if the net effect is this, it's pass-by-reference).</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;참조로 통과&quot;에서 &quot;참조&quot;의 의미&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . 일반적인 &quot;참조&quot;용어와의 차이점은 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 &quot;참조&quot;가 일시적이고 암시 적이라는 것입니다.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 수신자가 기본적으로 얻는 것은 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;가변&quot;인데, 이는 원래와 같은 &quot;변형&quot;입니다.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 효과가 달성되는 방식은 관련이 없습니다 (예 : 언어는 일부 구현 세부 사항 (주소, 포인터, 역 참조)을 모두 노출 할 수 있음). 이것은 모두 관련이 없습니다. 순 효과가 이것이라면 참조에 의한 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a360b48a9b0e443655fd1f50a1f59496f3e6cfa6" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;1&lt;/sup&gt;&lt;sub&gt;Unless you are programming in Fortran or Visual Basic, it's not the default behavior, and in most languages in modern use, true call-by-reference is not even possible.&lt;/sub&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1 &lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Fortran 또는 Visual Basic으로 프로그래밍하지 않는 한 기본 동작이 아니며 대부분의 현대 언어에서는 참조 기준 호출이 불가능합니다.&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="89af967c9f1678cfe1fa5b095fa773ba45b7ab71" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;2&lt;/sup&gt;&lt;sub&gt;A fair amount of older ones support it, too&lt;/sub&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2 &lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;상당한 양의 노인도 그것을지지합니다&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="4e328db02277d9e0bf80968dad513e6575d2655f" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;3&lt;/sup&gt;&lt;sub&gt;In several modern languages, all types are reference types. This approach was pioneered by the language CLU in 1975 and has since been adopted by many other languages, including Python and Ruby. And many more languages use a hybrid approach, where some types are &quot;value types&quot; and others are &quot;reference types&quot; -- among them are C#, Java, and JavaScript.&lt;/sub&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3 &lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여러 현대 언어에서 모든 유형은 참조 유형입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 접근 방식은 1975 년 CLU 언어에 의해 개척되었으며 이후 Python 및 Ruby를 포함한 다른 많은 언어에서 채택되었습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 더 많은 언어가 하이브리드 접근 방식을 사용하는데, 일부 유형은 &quot;값 유형&quot;이고 다른 유형은 &quot;참조 유형&quot;입니다. 그 중 C #, Java 및 JavaScript가 있습니다.&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="36bedde2f57763554ef2a1b03c1603401bab77e8" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;4&lt;/sup&gt;&lt;sub&gt;There's nothing bad with recycling a fitting old term &lt;em&gt;per se,&lt;/em&gt; but one has to somehow make it clear which meaning is used each time. Not doing that is exactly what keeps causing confusion.&lt;/sub&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;4 &lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;오래된 용어 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자체&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 재활용하는 것은 나쁘지 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;않지만 매번 어떤 의미가 사용되는지 분명하게 밝혀야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇게하지 않으면 정확히 혼란을 일으키는 원인이됩니다.&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="0c4436e45f8957f1cd334823decd0388dde14837" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;&lt;em&gt;parameter&lt;/em&gt;&lt;/strong&gt; (also called a &lt;em&gt;formal parameter&lt;/em&gt;) is a &lt;em&gt;variable&lt;/em&gt; which must be supplied by the caller when calling a function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파라미터&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (도 불리는 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;형식 파라미터&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) A는 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 함수 호출시에 호출자에 의해 공급되어야한다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6be845d8543d385fe06b210b124c8a494e883d8" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;&lt;em&gt;value&lt;/em&gt;&lt;/strong&gt; is the &lt;strong&gt;result of evaluating an expression&lt;/strong&gt; in the language. For example, in the &lt;code&gt;bar&lt;/code&gt; function above, after the line &lt;code&gt;int arg = 1;&lt;/code&gt;, the expression &lt;code&gt;arg&lt;/code&gt; has the &lt;em&gt;value&lt;/em&gt;&lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 IS &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;표현식 평가 결과&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 언어를. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int arg = 1;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 행 뒤에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;arg&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 표현식 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값은 &lt;/font&gt;&lt;/font&gt;&lt;/em&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e079dc36e6c16cfe3c84390e6df02765e02f9536" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;&lt;em&gt;variable&lt;/em&gt;&lt;/strong&gt; is a &lt;strong&gt;container for values&lt;/strong&gt;. A variable can be mutable (this is the default in most C-like languages), read-only (e.g. declared using Java's &lt;code&gt;final&lt;/code&gt; or C#'s &lt;code&gt;readonly&lt;/code&gt;) or deeply immutable (e.g. using C++'s &lt;code&gt;const&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; A는 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값 용기&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수는 변경 가능 (이것은 대부분의 C와 유사한 언어에서 기본값 임), 읽기 전용 (예 : Java의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;final&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 C #의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;readonly&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하여 선언 된 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;) 또는 매우 불변 인 (예 : C ++의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;const&lt;/code&gt; 사용&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) 일 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a677b0c64bdfeda25591da2903e6635e04d8bb09" translate="yes" xml:space="preserve">
          <source>A major difference between them is that value-type variables store values, so specifying a value-type variable in a method call passes a copy of that variable's value to the method. Reference-type variables store references to objects, so specifying a reference-type variable as an argument passes the method a copy of the actual reference that refers to the object. Even though the reference itself is passed by value, the method can still use the reference it receives to interact with&amp;mdash;and possibly modify&amp;mdash;the original object. Similarly, when returning information from a method via a return statement, the method returns a copy of the value stored in a value-type variable or a copy of the reference stored in a reference-type variable. When a reference is returned, the calling method can use that reference to interact with the referenced object. So, in effect, objects are always passed by reference.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이들 사이의 주요 차이점은 값 유형 변수가 값을 저장한다는 점입니다. 따라서 메소드 호출에서 값 유형 변수를 지정하면 해당 변수 값의 사본이 메소드에 전달됩니다. 참조 유형 변수는 객체에 대한 참조를 저장하므로 참조 유형 변수를 인수로 지정하면 객체를 참조하는 실제 참조의 사본이 메소드에 전달됩니다. 참조 자체가 값으로 전달 되더라도 메소드는 수신 한 참조를 사용하여 원래 객체와 상호 작용하고 가능하면 수정할 수 있습니다. 유사하게, return 문을 통해 메소드로부터 정보를 리턴 할 때, 메소드는 값 유형 변수에 저장된 값의 사본 또는 참조 유형 변수에 저장된 참조의 사본을 리턴합니다. 참조가 리턴되면 호출 메소드는 해당 참조를 사용하여 참조 된 오브젝트와 상호 작용할 수 있습니다. 그래서,사실상 객체는 항상 참조로 전달됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="abd7a4c1cc58474c81f17ebaa3380517415b77ff" translate="yes" xml:space="preserve">
          <source>A secondary source of confusion is the fact that &lt;strong&gt;in &quot;pass by reference&quot;, &quot;reference&quot; has a narrower meaning than the general term &quot;reference&quot;&lt;/strong&gt; (because the phrase predates it).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이차적 인 혼란의 원천은 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;참조에 의한 통과&quot;에서 &quot;참조&quot;가 일반적인 용어 &quot;참조&quot;보다 더 좁은 의미를 갖는다&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 사실이다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(구가 선행하기 때문에).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8395df276068a15c1788c1244f7f1967b1ffd62b" translate="yes" xml:space="preserve">
          <source>Addendum: call by object sharing</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;부록 : 객체 공유에 의한 호출&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e1b35360cd12c3fd13d94fe6f21d7c2fcc5d8691" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;&lt;em&gt;argument&lt;/em&gt;&lt;/strong&gt; is a &lt;em&gt;value&lt;/em&gt; that is supplied by the caller of a function to satisfy a specific formal parameter of that function</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인수&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; A는 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가치&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수의 호출에 의해 제공되는 기능의 특정 형식 인자를 만족&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3669673a915b7806f383325212faf75fa8a11a20" translate="yes" xml:space="preserve">
          <source>An actual parameter referring to &amp;ldquo;passed by value&amp;rdquo; formal parameter may be &lt;strong&gt;an expression&lt;/strong&gt; in general, so it is allowed to use not only a variable but also a literal or even a function invocation's result.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;값으로 전달됨&quot;형식 매개 변수를 참조하는 실제 매개 변수는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적으로 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;표현식&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 일 수 있으므로 변수뿐만 아니라 리터럴 또는 함수 호출 결과도 사용할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="df6b153b01adb26322ecd5d9e904e438de306d18" translate="yes" xml:space="preserve">
          <source>And an example in Java won't hurt:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 Java의 예는 아프지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="41bfbeff0e712201c1f6a812c3156a5716a824be" translate="yes" xml:space="preserve">
          <source>And here's an example of calling this function:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 함수를 호출하는 예는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d429697a4106347176728eb0835dcffc66d7932a" translate="yes" xml:space="preserve">
          <source>As you may see, &lt;strong&gt;this pair of techniques is almost the same as those in the definition, only with a level of indirection: just replace &quot;variable&quot; with &quot;referenced object&quot;.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;보시다시피, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 기술 쌍은 정의 수준의 기술과 거의 동일합니다. 단지 &quot;변수&quot;를 &quot;참조 된 개체&quot;로 바꾸십시오.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fca7e365e04633808c1e9f9aa4c42c53cb72f7e2" translate="yes" xml:space="preserve">
          <source>Barbara Liskov, when she invented the CLU programming language (which had these semantics), realized that the existing terms &quot;call by value&quot; and &quot;call by reference&quot; weren't particularly useful for describing the semantics of this new language. So she invented a new term: &lt;a href=&quot;https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_sharing&quot;&gt;&lt;strong&gt;call by object sharing&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Barbara Liskov는 CLU 프로그래밍 언어 (이 의미론을 가짐)를 발명 할 때 기존의 용어 &quot;값별 호출&quot;및 &quot;참조 별 호출&quot;이이 새로운 언어의 의미론을 설명하는 데 특히 유용하지 않다는 것을 깨달았습니다. 그래서 그녀는 새로운 용어 인 발명자에 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_sharing&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의한 호출을&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 발명했습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8923be1f7bad7119c6557d2337dcb813f8938152" translate="yes" xml:space="preserve">
          <source>Before understanding the 2 terms, you &lt;strong&gt;MUST&lt;/strong&gt; understand the following. Every object, has 2 things that can make it be distinguished.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2 개 용어를 이해하기 전에 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;반드시&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 다음 사항을 이해합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 물체에는 구별 할 수있는 두 가지가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e34bfb419c41f2d2b66b3b6899800cefb3c2d265" translate="yes" xml:space="preserve">
          <source>But if you want to give the function the &lt;em&gt;ability to change the value of the variable&lt;/em&gt; as seen from the outside, you need to use &lt;strong&gt;pass by reference&lt;/strong&gt;.  As both the value and the address (reference) are passed in and available inside the function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 함수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가 외부에서 볼 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;때 변수 값을 변경&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하는 기능을 제공 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하려면 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;pass by reference&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 사용해야 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값과 주소 (참조)가 모두 전달되어 함수 내에서 사용 가능합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6e61eaf9f7eacd12ce53adbf1a701c715785f2f3" translate="yes" xml:space="preserve">
          <source>C# supports pass by value and pass by reference (keyword &lt;code&gt;ref&lt;/code&gt; used at caller and called function). Jon Skeet also has a nice explanation of this &lt;a href=&quot;https://jonskeet.uk/csharp/parameters.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C #은 값으로 전달 및 참조로 전달 ( &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;호출자 및 호출 된 함수에서 사용되는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;키워드 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ref&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )을 지원합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Jon Skeet도 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://jonskeet.uk/csharp/parameters.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대한 좋은 설명이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dcb298d2090971d85ae8a79abeefe2fbfe4a1132" translate="yes" xml:space="preserve">
          <source>C++ supports pass by value and pass by reference (reference parameter type used at called function). You will find an explanation of this below.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C ++는 값으로 전달 및 참조로 전달 (호출 함수에서 사용되는 참조 매개 변수 유형)을 지원합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이에 대한 설명은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6a32afde8ee467a4cfa26db111fcf46cc30a2d73" translate="yes" xml:space="preserve">
          <source>Call by reference</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조로 전화&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c590467a0f3956ff0e042df50b68f779090db976" translate="yes" xml:space="preserve">
          <source>Call by value</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가치에 의한 전화&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="199993be9fef4c509cd7f630e2bb318e8ab6c85a" translate="yes" xml:space="preserve">
          <source>Codes</source>
          <target state="translated">Codes</target>
        </trans-unit>
        <trans-unit id="9cbd72fd910e48c58a4f702f7132ff44457c59a9" translate="yes" xml:space="preserve">
          <source>Could you give me some examples, please?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;몇 가지 예를 들어 주시겠습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="81542fafe9576235202df625d15049ec1be0114e" translate="yes" xml:space="preserve">
          <source>Depending on the language's architecture or the &lt;em&gt;type&lt;/em&gt; (class, struct, etc.) of your object, you would be either transferring &lt;code&gt;&quot;John&quot;&lt;/code&gt; or &lt;code&gt;0x7fd5d258dd00&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;언어의 아키텍처 또는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;유형&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (클래스, 구조체 등)에 따라 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;John&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt; &lt;code&gt;0x7fd5d258dd00&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 전송합니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0b5c518f721f8b3c6af740f2739256af35b61c4d" translate="yes" xml:space="preserve">
          <source>Either by &lt;strong&gt;passing their values to cell A2&lt;/strong&gt; by typing &lt;em&gt;= 5 + 2&lt;/em&gt; into this cell. In this case, if the values of the cells A1 or B1 change, the sum in A2 remains the same.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 셀에 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;= 5 + 2&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입력하여 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값을 셀 A2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전달합니다&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 경우 셀 A1 또는 B1의 값이 변경 되더라도 A2의 합은 동일하게 유지됩니다.&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10e9dcf2f01de94fcc4afa9703bc0c33a2cff1c7" translate="yes" xml:space="preserve">
          <source>Example(copy and use/try this yourself and see) :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예 (복사 및 사용 / 직접 시도하고 참조하십시오) :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="f584f0c48a1b0d4e3338f2ed2a5fdd472b7b090c" translate="yes" xml:space="preserve">
          <source>First and foremost, &lt;strong&gt;the &quot;pass by value vs. pass by reference&quot; distinction as defined in the CS theory is now obsolete&lt;/strong&gt; because &lt;strong&gt;the technique originally defined as &quot;pass by reference&quot; has since fallen out of favor&lt;/strong&gt; and is seldom used now.&lt;sup&gt;1&lt;/sup&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;무엇보다도 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CS 이론에 정의 된 &quot;값별 통과 대 기준 별 통과&quot;구별은 이제 더 이상 사용되지 않습니다. &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;원래 &quot;참조 별 통과&quot;로 정의 된 기술은 선호도가 떨어지고&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 거의 사용 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되지&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 않기 때문 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다. &lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="eb89ac1e7f9dc9f4e4b7cf6d7e6096cb7149a6cd" translate="yes" xml:space="preserve">
          <source>For more on this, I recommend you to read about &lt;a href=&quot;https://stackoverflow.com/a/4955259/5175709&quot;&gt;dereferencing a pointer&lt;/a&gt; and also &lt;a href=&quot;https://stackoverflow.com/a/38024319/5175709&quot;&gt;why choose struct (value type) over class (reference type)&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이에 대한 자세한 내용은, 내가 대해 읽어보실 것을 추천 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/4955259/5175709&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;포인터를 역 참조&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 도 및 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/38024319/5175709&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스를 통해 구조체 (값 형식)을 선택하는 이유 (참조 형)&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="78f758b88546141cf025fbcc3e6f5c64139c6ee9" translate="yes" xml:space="preserve">
          <source>Going back to my metaphor above, if I'm &lt;code&gt;bar&lt;/code&gt; and you're &lt;code&gt;foo&lt;/code&gt;, when I call you, I hand you a piece of paper with a &lt;em&gt;value&lt;/em&gt; written on it. You call that piece of paper &lt;code&gt;param&lt;/code&gt;. That value is a &lt;strong&gt;copy&lt;/strong&gt; of the value I have written in my notebook (my local variables), in a variable I call &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;난 경우, 위의 내 은유에 다시가는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하고있는 거 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foo&lt;/code&gt; 는&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 내가 당신을 호출 할 때, 나는 당신에게 종이 한 장 손 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 작성합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 종이의 조각 전화 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;param&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그 값은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내가 작성한 노트 (내 로컬 변수), 내가 &lt;/font&gt; &lt;code&gt;arg&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 라는 변수에 쓴 값 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사본&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a22af7a4730db40ef83a84bd3138eb1203ab1e4d" translate="yes" xml:space="preserve">
          <source>Going back to our example above, it's equivalent to:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 예로 돌아가서 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d7eb63da0145f25b5d55241918a08d5b230c4b12" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;arg&lt;/code&gt; and &lt;code&gt;another_variable&lt;/code&gt; are completely independent variables -- their values can change independently of each other. However, at the point where &lt;code&gt;another_variable&lt;/code&gt; is declared, it is initialized to hold the same value that &lt;code&gt;arg&lt;/code&gt; holds -- which is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;arg&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;another_variable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 완전히 독립적 인 변수입니다. 값은 서로 독립적으로 변경 될 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;another_variable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 선언 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되는 시점에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;arg&lt;/code&gt; 가&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 보유한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것과 동일한 값 ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; )&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 보유하도록 초기화됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d5a3fe120383d61d87e4540a6a6708c041f6360c" translate="yes" xml:space="preserve">
          <source>Here is an example that demonstrates the differences between &lt;strong&gt;pass by value - pointer value - reference&lt;/strong&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전달 값-포인터 값-참조&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 차이점을 보여주는 예입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0ea64acdc8005d5b15eb4032e4c83cca10d2689f" translate="yes" xml:space="preserve">
          <source>However, if a variable holding this reference is &lt;em&gt;reassiged,&lt;/em&gt; it will stop pointing to that object, so any further operations on this variable will instead affect whatever it is pointing to now.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나이 참조를 보유하고있는 변수가 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다시 확인되면&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 해당 개체에 대한 포인팅이 중지 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되므로이&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 변수에 대한 추가 작업은 현재 가리키는 대상에 영향을줍니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="630391e5a5f8a770ac2b2e52c79504fdb2316219" translate="yes" xml:space="preserve">
          <source>If I print out the page and give you the printout, I'm passing by
  value. Your page is a disconnected copy of the original. You won't see
  any subsequent changes, and any changes that you make (e.g. scribbling
  on your printout) will not show up on the original page. If you
  destroy the printout, you have actually destroyed your copy of the
  object - but the original web page remains intact.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;페이지를 인쇄하고 출력물을 제공하면 가치가 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;귀하의 페이지는 원본의 연결이 끊어졌습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이후의 변경 사항은 표시되지 않으며 변경 내용 (예 : 인쇄물에 낙서)이 원본 페이지에 표시되지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;출력물을 폐기하면 실제로 객체 사본을 폐기 한 것이지만 원래 웹 페이지는 그대로 유지됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fa1eae8f868f8ccec251540cf83a6d999d96bd33" translate="yes" xml:space="preserve">
          <source>If a reference is just taken from a caller's variable and passed as an argument, this has the same effect as pass-by-reference: if the referred object is &lt;em&gt;mutated&lt;/em&gt; in the callee, the caller will see the change.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;호출자의 변수에서 참조를 가져와 인수로 전달한 경우 이는 참조 별 전달과 동일한 효과를 갖습니다. 참조 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;된&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 오브젝트가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수신자에서 변경되면 호출자에게 변경 사항이 표시됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b6671658fcd898e40c481710de5eb11d030070e4" translate="yes" xml:space="preserve">
          <source>If what that reference type (that is, pointer) points to is &lt;strong&gt;mutable&lt;/strong&gt; then an interesting effect is possible: you can modify the pointed-to value, and the caller can observe changes to the pointed-to value, even though the caller cannot observe changes to the pointer itself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해당 참조 유형 (즉, 포인터)이 가리키는 것이 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변경 가능한&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 경우 흥미로운 효과가 있습니다. 포인팅 된 값을 수정할 수 있으며 호출자는 관찰자가 볼 수없는 경우에도 포인팅 된 값의 변경을 관찰 할 수 있습니다 포인터 자체로 변경됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c7d58c687c27bf3e8c08e37865c6064bb8181f24" translate="yes" xml:space="preserve">
          <source>If what you have is &lt;em&gt;call by value&lt;/em&gt;, but the actual value is a &lt;em&gt;reference type&lt;/em&gt; or &lt;em&gt;pointer type&lt;/em&gt;, then the &quot;value&quot; itself isn't very interesting (e.g. in C it's just an integer of a platform-specific size) -- what's interesting is what that value &lt;strong&gt;points to&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 으로 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;호출&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하지만 실제 값이 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조 유형&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;포인터 유형&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 인 경우 &quot;값&quot;자체는 그다지 흥미롭지 않습니다 (예 : C에서는 플랫폼 별 크기의 정수입니다). 그 가치가 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가리키는&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 것은 흥미 롭습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="19bdf40bf0d0910a0274641de9caa509c06e2fd2" translate="yes" xml:space="preserve">
          <source>If you don't want to change the value of the original variable after passing it into a function, the function should be constructed with a &quot;&lt;strong&gt;pass by value&lt;/strong&gt;&quot; parameter.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;원래 변수의 값을 함수에 전달한 후 변경하지 않으려면 &quot; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;pass by value&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;매개 변수를 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 함수를 구성해야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec3a32a259d75495fafcc2de084612d021f12bfe" translate="yes" xml:space="preserve">
          <source>If your value is VAR1 = &quot;Happy Guy!&quot;, you will only see &quot;Happy Guy!&quot;. If VAR1 changes to &quot;Happy Gal!&quot;, you won't know that. If it's passed by reference, and VAR1 changes, you will.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값이 VAR1 = &quot;Happy Guy!&quot;이면 &quot;Happy Guy!&quot;만 표시됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;VAR1이 &quot;Happy Gal!&quot;로 바뀌면 알 수 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조로 전달되고 VAR1이 변경되면 변경됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9df5b20fed798fcf664fc2cac5f32abdc432a314" translate="yes" xml:space="preserve">
          <source>In &lt;em&gt;call by reference&lt;/em&gt;, the function's formal parameters are simply &lt;em&gt;new names&lt;/em&gt; for the same variables that the caller supplies as arguments.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조로 호출&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 함수의 형식 매개 변수는 단순히 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;새 이름&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 같은 변수 인수로 해당 발신자 공급 장치는.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9fcb8fa70e178c7bf61dd1f973de055411e8bcb0" translate="yes" xml:space="preserve">
          <source>In &lt;em&gt;call by value&lt;/em&gt;, the function's formal parameters are variables that are newly created for the function invocation, and which are initialized with the &lt;em&gt;values&lt;/em&gt; of their arguments.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값에 의한 호출&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 함수의 형식 매개 변수는 새로 함수 호출에 대해 생성되며, 이는이 초기화됩니다 변수 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 들이 인수는.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f9765a7cb94195661a7f370a640e70f9e99a5beb" translate="yes" xml:space="preserve">
          <source>In c#, to pass a variable by reference so the called method can modify the variable's, C# provides keywords ref and out. Applying the ref keyword to a parameter declaration allows you to pass a variable to a method by reference&amp;mdash;the called method will be able to modify the original variable in the caller. The ref keyword is used for variables that already have been initialized in the calling method. Normally, when a method call contains an uninitialized variable as an argument, the compiler generates an error. Preceding a parameter with keyword out creates an output parameter. This indicates to the compiler that the argument will be passed into the called method by reference and that the called method will assign a value to the original variable in the caller. If the method does not assign a value to the output parameter in every possible path of execution, the compiler generates an error. This also prevents the compiler from generating an error message for an uninitialized variable that is passed as an argument to a method. A method can return only one value to its caller via a return statement, but can return many values by specifying multiple output (ref and/or out) parameters.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C #에서는 호출 된 메서드가 변수를 수정할 수 있도록 참조로 변수를 전달하기 위해 C #은 키워드 ref 및 out을 제공합니다. ref 키워드를 매개 변수 선언에 적용하면 참조로 변수를 메서드에 전달할 수 있습니다. 호출 된 메서드는 호출자의 원래 변수를 수정할 수 있습니다. ref 키워드는 호출 메소드에서 이미 초기화 된 변수에 사용됩니다. 일반적으로 메소드 호출에 초기화되지 않은 변수가 인수로 포함되면 컴파일러에서 오류가 발생합니다. 키워드가없는 매개 변수 앞에는 출력 매개 변수가 작성됩니다. 이것은 인수가 참조로 호출 된 메소드에 전달되고 호출 된 메소드가 호출자의 원래 변수에 값을 지정 함을 컴파일러에 표시합니다.메소드가 가능한 모든 실행 경로에서 출력 매개 변수에 값을 지정하지 않으면 컴파일러가 오류를 생성합니다. 또한 컴파일러가 메소드에 인수로 전달 된 초기화되지 않은 변수에 대한 오류 메시지를 생성하지 못하게합니다. 메소드는 return 문을 통해 호출자에게 하나의 값만 리턴 할 수 있지만 여러 출력 (ref 및 / 또는 out) 매개 변수를 지정하여 많은 값을 리턴 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d5d1084df8b586952d88c19794aba535a677bb9e" translate="yes" xml:space="preserve">
          <source>In functional languages, &lt;em&gt;all&lt;/em&gt; objects are immutable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기능적 언어에서 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체는 변경할 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f09a33520d9524be4917a785dc2f550ba4444582" translate="yes" xml:space="preserve">
          <source>In metaphoric terms:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은유 적 용어로 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75b8b82f07e813f25f8aa777b9ad069324f2f151" translate="yes" xml:space="preserve">
          <source>In short, Passed by value is WHAT it is and passed by reference is WHERE it is.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;요컨대, 지나가는 값은 WHAT이며 참조는 지나는 곳입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cfc7e8a70761c2025ad727e8d569d9aa259077f5" translate="yes" xml:space="preserve">
          <source>In simplest terms:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가장 간단한 용어로 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b2b2cee7ff2dff249b369b6c32127d56013526f" translate="yes" xml:space="preserve">
          <source>In some languages, some object types are &quot;immutable&quot;: any operation on them that seems to alter the value actually creates a completely new object without affecting the original one. So, passing an object of such a type as an argument always has the effect of pass-by-value: a copy for the callee will be made automatically if and when it needs a change, and the caller's object will never be affected.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일부 언어에서 일부 객체 유형은 &quot;불변&quot;입니다. 값을 변경하는 것처럼 보이는 조작은 실제로 원래 객체에 영향을주지 않고 완전히 새로운 객체를 만듭니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 이러한 유형의 객체를 인수로 전달하면 항상 값을 전달하는 효과가 있습니다. 수신자의 변경 사항이있을 경우 언제든 변경이 필요한 경우 호출자의 사본이 자동으로 만들어지고 호출자의 오브젝트에는 영향을 미치지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f5a4682c4e96457401f2d267cf5d3759e71ca397" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;param&lt;/code&gt; doesn't just have the same &lt;em&gt;value&lt;/em&gt; as &lt;code&gt;arg&lt;/code&gt;, it actually &lt;strong&gt;is&lt;/strong&gt;&lt;code&gt;arg&lt;/code&gt; (just by a different name) and so &lt;code&gt;bar&lt;/code&gt; can observe that &lt;code&gt;arg&lt;/code&gt; has been incremented.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 경우, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;param&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 똑같이없는 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 으로서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;arg&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 실제로 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이다 &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt; &lt;code&gt;arg&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (단지 다른 이름)와되도록 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 관찰 할 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;arg&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 증가하고있다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1e8b5f3c56ea99edf6fe3538b9c9f5dbd50e45e9" translate="yes" xml:space="preserve">
          <source>It is exactly as if we had written the code this way:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리가 이런 식으로 코드를 작성한 것과 똑같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba2017f01d4b5e3837a6cc39aa2641361c7e5fc4" translate="yes" xml:space="preserve">
          <source>It's a way how to pass arguments to functions. Passing by reference means the called functions' parameter will be the same as the callers' passed argument (not the value, but the identity - the variable itself). Pass by value means the called functions' parameter will be a copy of the callers' passed argument. The value will be the same, but the identity - the variable - is different. Thus changes to a parameter done by the called function in one case changes the argument passed and in the other case just changes the value of the parameter in the called function (which is only a copy). In a quick hurry:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수에 인수를 전달하는 방법입니다. 참조에 의한 전달은 호출 된 함수의 매개 변수가 호출자의 전달 된 인수 (값이 아니라 ID-변수 자체)와 동일 함을 의미합니다. 값으로 전달은 호출 된 함수의 매개 변수가 호출자의 전달 된 인수의 사본이됨을 의미합니다. 값은 같지만 변수 (ID)는 다릅니다. 따라서 어떤 경우에는 호출 된 함수가 수행 한 매개 변수를 변경하면 전달 된 인수가 변경되고 다른 경우에는 호출 된 함수 (복사본)의 매개 변수 값만 변경됩니다. 빨리 서둘러 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="94f1506dff6edaaf3a991ae077be7ac2ad3c295c" translate="yes" xml:space="preserve">
          <source>Its address.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주소입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cb05b65db2ada43f4ca193e8ea8a1ed4e1835444" translate="yes" xml:space="preserve">
          <source>Its value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그 가치.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e5664650fb653cb60de46dc4ef48efc29582cb58" translate="yes" xml:space="preserve">
          <source>Java only supports pass by value. Always copies arguments, even though when copying a reference to an object, the parameter in the called function will point to the same object and changes to that object will be see in the caller. Since this can be confusing, &lt;a href=&quot;https://jonskeet.uk/java/passing.html&quot;&gt;here&lt;/a&gt; is what Jon Skeet has to say about this.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java는 값별 전달 만 지원합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체에 대한 참조를 복사 할 때 호출 된 함수의 매개 변수가 동일한 객체를 가리키고 해당 객체의 변경 사항이 호출자에게 표시 되더라도 항상 인수를 복사합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 혼란 스러울 수 있으므로 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://jonskeet.uk/java/passing.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 Jon Skeet이 말한 내용이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c1d8c26323a44450c9027c438c65ae1f40230b0" translate="yes" xml:space="preserve">
          <source>Keep it simple, peeps. Walls of text can be a bad habit.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;단순하게 유지하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;텍스트의 벽은 나쁜 습관이 될 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5b3839d4cab4b2e3b7cbd1e829e6fe9b7ce91854" translate="yes" xml:space="preserve">
          <source>Many answers here (and in particular the most highly upvoted answer) are factually incorrect, since they misunderstand what &quot;call by reference&quot; really means. Here's my attempt to set matters straight.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에있는 많은 답변들 (특히 가장 많이 찬성 된 답변)은 &quot;참조에 의한 호출&quot;이 실제로 의미하는 바를 오해하기 때문에 사실 틀린 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에 문제를 바로 잡으려는 시도가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9710ae38811b064e0b66a99f285a0b262bd760b6" translate="yes" xml:space="preserve">
          <source>Note that C++ has a notion of &quot;references&quot; (e.g. &lt;code&gt;int&amp;amp;&lt;/code&gt;) that is &lt;strong&gt;not&lt;/strong&gt; like Java and C#'s &quot;reference types&quot;, but &lt;strong&gt;is&lt;/strong&gt; like &quot;call by reference&quot;. Java and C#'s &quot;reference types&quot;, and &lt;em&gt;all&lt;/em&gt; types in Python, are like what C and C++ call &quot;pointer types&quot; (e.g. &lt;code&gt;int*&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참고 C ++은 &quot;참조&quot;의 개념을 가지고 (예 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&amp;amp;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )입니다 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 자바와 C #의 &quot;참조 형식&quot;와 같은, 그러나 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이다&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;참조에 의한 호출&quot;처럼. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java 및 C #의 &quot;참조 유형&quot;및 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python의 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 유형은 C 및 C ++에서 &quot;포인터 유형&quot;(예 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int*&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;호출하는 것과 같습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e21567e8b73fa84c73ad77ce9ab401836a697b6a" translate="yes" xml:space="preserve">
          <source>Note that both of these concepts are completely independent and orthogonal from the concept of &lt;strong&gt;&lt;em&gt;reference types&lt;/em&gt;&lt;/strong&gt; (which in Java is all types that are subtypes of &lt;code&gt;Object&lt;/code&gt;, and in C# all &lt;code&gt;class&lt;/code&gt; types), or the concept of &lt;strong&gt;&lt;em&gt;pointer types&lt;/em&gt;&lt;/strong&gt; like in C (which are semantically equivalent to Java's &quot;reference types&quot;, simply with different syntax).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 두 개념은 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조 유형&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 개념 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(자바에서는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; 의&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하위 유형 인 모든 유형 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이고 C #에서는 모든 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 유형) 또는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C ( &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;포커스 유형)&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 같은 &lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;포인터 유형&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 개념 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;과 완전히 독립적이며 직교한다는 점에 유의하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의미 상 문법이 다른 Java의 &quot;참조 유형&quot;과 동일합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="25a6d90028e0300096155b3ce6dd2dc1ade7a134" translate="yes" xml:space="preserve">
          <source>Note that this is &lt;strong&gt;not&lt;/strong&gt; how any of Java, JavaScript, C, Objective-C, Python, or nearly any other popular language today works. This means that those languages are &lt;strong&gt;not&lt;/strong&gt; call by reference, they are call by value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;오늘날 Java, JavaScript, C, Objective-C, Python 또는 거의 모든 다른 인기있는 언어가 작동하는 방식 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아닙니다&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉, 해당 언어는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조로 호출 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되지 않으며&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 값으로 호출됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="11faf91e92f213fd28d8e40291fa909c4638b55f" translate="yes" xml:space="preserve">
          <source>Now, the authentic definition is:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 진정한 정의는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a7b7352a1f0297c61dfa9212c688746676823a8" translate="yes" xml:space="preserve">
          <source>OK, here's the longer and more formal explanation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자, 여기 더 길고 공식적인 설명이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0c5eb5d154c5c29f403e372daae7202076e989a5" translate="yes" xml:space="preserve">
          <source>Or by &lt;strong&gt;passing the &amp;ldquo;references&amp;rdquo; of the cells A1 and B1 to cell A2&lt;/strong&gt; by typing &lt;em&gt;= A1 + B1&lt;/em&gt;. In this case, if the values of the cells A1 or B1 change, the sum in A2 changes too.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;= A1 + B1&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 입력 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 셀 A1 및 B1의 &quot;참조&quot;를 셀 A2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전달합니다&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 경우 셀 A1 또는 B1의 값이 변경되면 A2의 합계도 변경됩니다.&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3c8941d187c94e6a53e6ff3cad0dfdb27bb7fe5b" translate="yes" xml:space="preserve">
          <source>Pass by reference - The function uses the original variable, if you change the variable in the other function, it changes in the original variable too.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조로 전달-함수는 원래 변수를 사용합니다. 다른 함수에서 변수를 변경하면 원래 변수도 변경됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f16241a59b751eb6cbff39b6de4f8cbc02de729" translate="yes" xml:space="preserve">
          <source>Pass by value - The function copies the variable and works with a copy(so it doesn't change anything in the original variable)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값으로 전달-이 함수는 변수를 복사하고 사본과 함께 작동하므로 원래 변수의 내용은 변경되지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2cef6b37dfa17bb4e917392a148503b1c3db7641" translate="yes" xml:space="preserve">
          <source>Pass by value sends a COPY of the data stored in the variable you specify, pass by reference sends a direct link to the variable itself. So if you pass a variable by reference and then change the variable inside the block you passed it into, the original variable will be changed. If you simply pass by value, the original variable will not be able to be changed by the block you passed it into but you will get a copy of whatever it contained at the time of the call.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값으로 전달은 지정한 변수에 저장된 데이터의 COPY를 전송하고 참조로 전달은 변수 자체에 대한 직접 링크를 전송합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 참조로 변수를 전달한 다음 전달한 블록 내에서 변수를 변경하면 원래 변수가 변경됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;단순히 값으로 전달하는 경우 원래 변수는 전달한 블록으로 변경할 수 없지만 호출시 포함 된 모든 사본을 얻을 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7365595bf985eac947edb497d85b84b024d6e69c" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;&quot;John&quot;&lt;/code&gt; is known as passing by value.
Passing &lt;code&gt;0x7fd5d258dd00&lt;/code&gt; is known as passing by reference. Anyone who is pointing to this memory location will have access to the value of &lt;code&gt;&quot;John&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전달 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;John&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 값에 의해 전달로 알려져 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전달 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0x7fd5d258dd00&lt;/code&gt; 은&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 참조로 전달로 알려져있다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 메모리 위치를 가리키는 사람은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;John&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 값에 액세스 할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d38f5cddd05d2c12e8c98ba1859c152cdc3283d4" translate="yes" xml:space="preserve">
          <source>Say I want to share a web page with you. If I tell you the URL, I'm
  passing by reference. You can use that URL to see the same web page I
  can see. If that page is changed, we both see the changes. If you
  delete the URL, all you're doing is destroying your reference to that
  page - you're not deleting the actual page itself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신과 웹 페이지를 공유하고 싶다고 가정 해보십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;URL을 말하면 참조로 전달됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해당 URL을 사용하여 볼 수있는 것과 동일한 웹 페이지를 볼 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해당 페이지가 변경되면 둘 다 변경 사항을 볼 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;URL을 삭제하면 해당 페이지에 대한 참조가 삭제되므로 실제 페이지 자체는 삭제되지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="769fab7e33db0e3c0fa3cee12bf821f3bc133b91" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;param&lt;/code&gt; is just another name for &lt;code&gt;arg&lt;/code&gt; -- that is, they are &lt;strong&gt;the same variable&lt;/strong&gt;, changes to &lt;code&gt;param&lt;/code&gt; are reflected in &lt;code&gt;arg&lt;/code&gt;. This is the fundamental way in which call by reference differs from call by value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이후 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;param&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 위한 또 다른 이름입니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;arg&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -, 그들은는 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;같은 변수&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 대한 변경, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;param&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 반영됩니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;arg&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이는 참조 별 호출이 값별 호출과 다른 기본적인 방법입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa853ceca90648f762403773e3de5553e252a245" translate="yes" xml:space="preserve">
          <source>Since my language is C++, i will use that here</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 언어는 C ++이므로 여기서 사용하겠습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4d14885da8ef3abbd0aac02bbdd40f4cb5cb0c92" translate="yes" xml:space="preserve">
          <source>Since they are independent variables, changes to &lt;code&gt;another_variable&lt;/code&gt; do not affect &lt;code&gt;arg&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이들은 독립 변수이므로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;another_variable&lt;/code&gt; 에 대한&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 변경 사항 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;arg&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 영향을 미치지 않습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f74a09526b6f4507d6e6e460766a660e64c1c9a2" translate="yes" xml:space="preserve">
          <source>So if you say &lt;code&gt;employee.name = &quot;John&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;employee.name = &quot;John&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5ff57f4185e884322f43c9c59da60f12f41285ea" translate="yes" xml:space="preserve">
          <source>TL;DR</source>
          <target state="translated">TL;DR</target>
        </trans-unit>
        <trans-unit id="21d278837034557e7a9b46210d42d6e7b8075142" translate="yes" xml:space="preserve">
          <source>Terminology</source>
          <target state="translated">Terminology</target>
        </trans-unit>
        <trans-unit id="d31fc6d67ad1df7e3be5c88469148d24d3fb8731" translate="yes" xml:space="preserve">
          <source>That is, the defining characteristic of what &lt;em&gt;call by value&lt;/em&gt; means is that the callee (&lt;code&gt;foo&lt;/code&gt; in this case) receives &lt;em&gt;values&lt;/em&gt; as arguments, but has its own separate &lt;em&gt;variables&lt;/em&gt; for those values from the variables of the caller (&lt;code&gt;bar&lt;/code&gt; in this case).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉, 어떤 정의하는 특성이다 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값으로 호출&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 수단은 피 호출자 (즉 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foo&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 본 경우)에 수신 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;된 값을&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 인수로되지만 자체 별도 갖는 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 호출자 (의 변수와 그 값을 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 경우에는).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f94b8d74275151f850f2fd1a3b7a581bfe0b7b47" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;passing by reference&amp;rdquo; method has &lt;strong&gt;an important limitation&lt;/strong&gt;. If a parameter is declared as &lt;strong&gt;passed by reference&lt;/strong&gt; (so it is preceded by the &amp;amp; sign) its corresponding &lt;strong&gt;actual parameter must be a variable&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;참조로 전달&quot;방법에는 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;중요한 제한이&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;매개 변수가 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전달 된&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 것으로 선언되면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(&amp;amp; 기호가 앞에 옴) 해당 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제 매개 변수는 변수 여야합니다&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c3de59e30bc1afb18206d5c04209b97a3a36b22" translate="yes" xml:space="preserve">
          <source>The caller can just make a private copy before the call and give the callee a reference to that instead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;발신자는 통화 전에 개인 사본을 만들고 대신 수신자에게 참조를 제공 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="45b626a8f90c2c072269296274cf38f84db12637" translate="yes" xml:space="preserve">
          <source>The function is not able to place a value in something other than a variable. It cannot assign a new value to a literal or force an expression to change its result.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 함수는 변수가 아닌 다른 곳에 값을 넣을 수 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;리터럴에 새로운 값을 할당하거나 표현식이 결과를 변경하도록 강요 할 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="190ddc465ed862913bd6475d00cd62643198af5b" translate="yes" xml:space="preserve">
          <source>The notion of &lt;em&gt;reference type&lt;/em&gt; corresponds to a URL: it is both itself a piece of information, and it is a &lt;em&gt;reference&lt;/em&gt; (a &lt;em&gt;pointer&lt;/em&gt;, if you will) to other information. You can have many copies of a URL in different places, and they don't change what website they all link to; if the website is updated then every URL copy will still lead to the updated information. Conversely, changing the URL in any one place won't affect any other written copy of the URL.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조 유형&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 개념은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;URL에 해당합니다. 둘 다 정보 자체이며 다른 정보에 대한 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ( &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;포인터&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 인 경우)입니다. 여러 곳에 URL 사본을 여러 개 보유 할 수 있으며 링크 된 웹 사이트는 변경하지 않습니다. 웹 사이트가 업데이트되는 경우 모든 URL 사본은 여전히 ​​업데이트 된 정보로 이어집니다. 반대로, 한 곳에서 URL을 변경해도 다른 URL 사본에는 영향을 미치지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c93eff5a81a6148f1801b93e4301a07244413b0a" translate="yes" xml:space="preserve">
          <source>The other important pair of concepts to distinguish is &lt;em&gt;parameter&lt;/em&gt; versus &lt;em&gt;argument&lt;/em&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;구별해야 할 다른 중요한 개념 쌍은 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;매개 변수&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인수입니다&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="94c281cf3a774b1a26c406b830c7abb77ff1de96" translate="yes" xml:space="preserve">
          <source>The simplest way to get this is on an Excel file. Let&amp;rsquo;s say for example that you have two numbers, 5 and 2 in cells A1 and B1 accordingly, and you want to find their sum in a third cell, let's say A2. 
You can do this in two ways.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것을 얻는 가장 간단한 방법은 Excel 파일입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 A1과 B1 셀에 5와 2라는 두 개의 숫자가 있고 세 번째 셀에서 합계를 찾고 싶다고 가정 해 봅시다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 가지 방법으로이 작업을 수행 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77b08d764936332f1c4a209a262d287059da0b8c" translate="yes" xml:space="preserve">
          <source>Then the function will have ONLY the value but not the address of the passed in variable.  Without the variable's address, the code inside the function cannot change the variable value as seen from the outside of the function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러면 함수는 값만 가지지 만 전달 된 변수의 주소는 갖지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수의 주소가 없으면 함수 내부의 코드는 함수 외부에서 볼 때 변수 값을 변경할 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5c1ac7683dd2ba07c2d671bc98b47e867ed3e464" translate="yes" xml:space="preserve">
          <source>There are two very important sets of concepts to distinguish here. The first is &lt;em&gt;value&lt;/em&gt; versus &lt;em&gt;variable&lt;/em&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 구별 할 두 가지 중요한 개념 세트가 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째는 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수입니다&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67c8b2743fe3552af6854154bf070d6a35748339" translate="yes" xml:space="preserve">
          <source>There's no agreed-upon name for them, which leads to contorted explanations like &quot;call by value where the value is a reference&quot;. In 1975, Barbara Liskov suggested the term &quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_sharing&quot;&gt;call-by-object-sharing&lt;/a&gt;&quot; (or sometimes just &quot;call-by-sharing&quot;) though it never quite caught on. Moreover, neither of these phrases draws a parallel with the original pair. No wonder the old terms ended up being reused in the absense of anything better, leading to confusion.&lt;sup&gt;4&lt;/sup&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동의 된 이름이 없으므로 &quot;값이 참조 인 경우 값별 호출&quot;과 같은 왜곡 된 설명으로 이어집니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1975 년, Barbara Liskov는 &quot; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_sharing&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체 별 통화&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;(또는 때때로 &quot; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;공유 별 통화&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;)라는 용어를 제안했지만 결코 별다른 영향을받지는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;않았습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한,이 문구들 중 어느 것도 원래 쌍과 평행을 이루지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;과거의 용어가 더 나은 것이 없으면 다시 재사용되어 혼란을 초래 한 것도 당연합니다. &lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;4&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1a3c5494a5a75f6fb10faba056b9c5de60d735aa" translate="yes" xml:space="preserve">
          <source>Things to note in this definition are:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 정의에서 참고할 사항은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a017f7a7d98147440fdc82f0593882be018c5ee" translate="yes" xml:space="preserve">
          <source>This guy pretty much nails it:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 남자는 거의 그것을 못 박아 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67d81ca73043d11fe3f8c75a12d2f9ca29721b63" translate="yes" xml:space="preserve">
          <source>This is &lt;em&gt;mostly&lt;/em&gt; correct &lt;em&gt;except&lt;/em&gt; the narrower meaning of &quot;reference&quot; -- it being both temporary and implicit (it doesn't have to, but being explicit and/or persistent are additional features, not a part of the pass-by-reference semantic, as explained above). A closer analogy would be giving you a copy of a document vs inviting you to work on the original.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;참조&quot;의 더 좁은 의미를 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;제외하고&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대부분&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 정확 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. 일시적이고 암시 적입니다 (필요하지는 않지만 명시 적 및 / 또는 지속적)는 추가 기능이며, 참조 별 통과 의미의 일부가 아닙니다. 위에서 설명한대로). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 가까운 비유는 문서의 사본을 제공하고 원본 작업을 권유하는 것입니다.&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="42e154984413d3a0e1f3424a4c64ba4b1d7f0c9a" translate="yes" xml:space="preserve">
          <source>This is exactly the same as the relationship between &lt;code&gt;arg&lt;/code&gt; and &lt;code&gt;param&lt;/code&gt; in our example above, which I'll repeat here for symmetry:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 예제에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;arg&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;param&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 관계와 정확히 동일합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서는 대칭을 위해 반복하겠습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="44c8affdf0e689b408ca95ed21c4a0efd6e07546" translate="yes" xml:space="preserve">
          <source>This is now considered bad practice (as an implicit dependency). As such, &lt;strong&gt;virtually all newer languages are exclusively, or almost exclusively pass-by-value.&lt;/strong&gt; Pass-by-reference is now chiefly used in the form of &quot;output/inout arguments&quot; in languages where a function cannot return more than one value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 현재 나쁜 관행으로 간주됩니다 (내재적 종속성). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;거의 모든 최신 언어는 독점적으로 또는 거의 독점적으로 가치에 따라 전달됩니다. &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수 별 참조는 이제 함수가 둘 이상의 값을 리턴 할 수없는 언어에서 주로 &quot;출력 / 인수 인수&quot;형식으로 사용됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c858b2ee157703a151db735a41b42594c23c01dd" translate="yes" xml:space="preserve">
          <source>This works exactly the same way that any other kinds of variables are initialized with values. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 다른 종류의 변수가 값으로 초기화되는 것과 동일한 방식으로 작동합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들면 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="930d70a4cc644b0157557de3bcd43f5beca8c742" translate="yes" xml:space="preserve">
          <source>To borrow the analogy of the URL again, the fact that I gave you a &lt;strong&gt;copy&lt;/strong&gt; of the URL to a website is not particularly interesting if the thing we both care about is the website, not the URL. The fact that you scribbling over your copy of the URL doesn't affect my copy of the URL isn't a thing we care about (and in fact, in languages like Java and Python the &quot;URL&quot;, or reference type value, can't be modified at all, only the thing pointed to by it can).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;URL의 비유를 다시 빌리기 위해, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리가 웹 사이트에 URL &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사본&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;제공했다는 사실은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리가 관심있는 것이 URL이 아니라 웹 사이트 인 경우 특히 흥미롭지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;URL 사본을 스크라이브해도 URL 사본에 영향을 미치지 않는다는 사실은 우리가 신경 쓰는 것이 아니며 실제로 Java 및 Python과 같은 언어에서는 &quot;URL&quot;또는 참조 유형 값이 전혀 수정되지 않으며, 지적한 것만 가능합니다).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a4a7f5fbf58a7664de63656b8f081d1bd98c4ef3" translate="yes" xml:space="preserve">
          <source>To have the same effect as pass-by-value, a copy of the object is made at some point. Options include:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값별 전달과 동일한 효과를 얻기 위해 개체의 복사본이 어느 시점에 만들어집니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;옵션은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fecc83247ac04fdaaf06ee439eda04776c92bdfc" translate="yes" xml:space="preserve">
          <source>To start with, I want to highlight some important bits of terminology, to help clarify my answer and to ensure we're all referring to the same ideas when we are using words. (In practice, I believe the vast majority of confusion about topics such as these stems from using words in ways that to not fully communicate the meaning that was intended.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우선, 몇 가지 중요한 용어를 강조하여 답변을 명확하게하고 단어를 사용할 때 모두 동일한 아이디어를 참조하도록하고 싶습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(실제로, 나는 이러한 주제에 대한 혼동의 대부분은 의도 된 의미를 완전히 전달하지 못하는 방식으로 단어를 사용하는 데 기인한다고 생각합니다.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e346a97905f1958718e4986c56283c42b87749e1" translate="yes" xml:space="preserve">
          <source>To start, here's an example in some C-like language of a function declaration:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;먼저 함수 선언의 C와 같은 언어로 된 예제가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e1bcbcecd757c896953f6667ed593f450f425768" translate="yes" xml:space="preserve">
          <source>Using this example, I want to define some important bits of terminology:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 예제를 사용하여 몇 가지 중요한 용어를 정의하려고합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="173ba9fdd42d28dfe6578af600f9727c2b05acf1" translate="yes" xml:space="preserve">
          <source>Very few languages support call by reference, but C++ can do it like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조에 의한 호출을 지원하는 언어는 거의 없지만 C ++은 다음과 같이 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bca2025696923c2b4a1ac5b779ea5df55f719431" translate="yes" xml:space="preserve">
          <source>What &quot;call by value&quot; and &quot;call by reference&quot; &lt;em&gt;don't&lt;/em&gt; mean</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;값별 호출&quot;및 &quot;참조 별 호출&quot; &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의미 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지 않는&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 것은&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cea908217bcefc8f05da33bdad1d2e2df1b58721" translate="yes" xml:space="preserve">
          <source>What is the difference between</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;차이점은 무엇입니까&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9027be4085fe45396497e506864b7a472bf4d036" translate="yes" xml:space="preserve">
          <source>What's the difference between passing by reference vs. passing by value</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조로 전달과 값으로 전달의 차이점은 무엇입니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2a815ccdb4f1793ac71c8eae2cd6344e45939b5" translate="yes" xml:space="preserve">
          <source>When a parameter is &lt;strong&gt;passed by reference&lt;/strong&gt;, the caller and the callee &lt;strong&gt;use the same variable&lt;/strong&gt; for the parameter. If the callee modifies the parameter variable, the effect is visible to the caller's variable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;매개 변수가 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;reference&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전달&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 되면 호출자와 수신자 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 매개 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동일한 변수&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용합니다&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수신자가 매개 변수를 수정하면 효과가 발신자의 변수에 표시됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b1f6ae5ad14bfc23213aae72cadf5a028c75380d" translate="yes" xml:space="preserve">
          <source>When a parameter is &lt;strong&gt;passed by value&lt;/strong&gt;, the caller and callee have &lt;strong&gt;two independent variables&lt;/strong&gt; with the same value. If the callee modifies the parameter variable, the effect is not visible to the caller.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;value&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 매개 변수를 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전달&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하면 호출자와 수신자는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동일한 값을 가진 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 개의 독립 변수&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 갖습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수신자가 매개 변수를 수정하면 효과가 발신자에게 보이지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3d76ca737f825ebe7eeaad751b4f4da27e65af7a" translate="yes" xml:space="preserve">
          <source>When discussing languages that are technically call by value, but where common types in use are reference or pointer types (that is: nearly every modern imperative, object-oriented, or multi-paradigm programming language), I find it's a lot less confusing to simply avoid talking about &lt;em&gt;call by value&lt;/em&gt; or &lt;em&gt;call by reference&lt;/em&gt;. Stick to &lt;strong&gt;call by object sharing&lt;/strong&gt; (or simply &lt;strong&gt;call by object&lt;/strong&gt;) and nobody will be confused. :-)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기술적으로 가치에 의해 호출되는 언어를 논의 할 때 일반적으로 사용되는 유형이 참조 또는 포인터 유형 (즉, 거의 모든 현대식 명령형, 객체 지향 또는 다중 패러다임 프로그래밍 언어) 인 언어에 대해 논의 할 때 혼동이 훨씬 덜합니다. 단순히 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값으로 &lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전화&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하거나 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조로 전화하는&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 것에 대해 이야기하지 마십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스틱하는 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체 공유로 전화&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (또는 단순히 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체에 의해 호출&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) 아무도 혼동되지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:-)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ecd292a63e3d5222c9a25893600961a65a608b1" translate="yes" xml:space="preserve">
          <source>When passing by ref you are basically passing a pointer to the variable. Pass by value you are passing a copy of the variable.  In basic usage this normally means pass by ref changes to the variable will seen be the calling method and pass by value they wont.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ref로 전달하면 기본적으로 변수에 대한 포인터를 전달합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수의 사본을 전달하는 값으로 전달하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본 사용법에서 이것은 일반적으로 ref에 의한 전달 변수 변경에 대한 호출 방법이며 호출되지 않는 값에 의한 전달을 의미합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="664add438097fbd4307f814de8e62a10f8905588" translate="yes" xml:space="preserve">
          <source>Wikipedia</source>
          <target state="translated">Wikipedia</target>
        </trans-unit>
        <trans-unit id="3dcb9e4a709cd9732c54c1458c1e7ecb4869b88a" translate="yes" xml:space="preserve">
          <source>a parameter passed by reference</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조로 전달 된 매개 변수&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d942c9b2660856d3052135b0ecb1bde891a4e02f" translate="yes" xml:space="preserve">
          <source>a parameter passed by value?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값으로 전달되는 매개 변수?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c8d883099ccb83527ab26efc085bbc497c87c206" translate="yes" xml:space="preserve">
          <source>know that there are 2 things about &lt;code&gt;name&lt;/code&gt;. Its value which is &lt;code&gt;&quot;John&quot;&lt;/code&gt; and also its location in the memory which is some hexadecimal number maybe like  this: &lt;code&gt;0x7fd5d258dd00&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;name&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 대해 두 가지가 있음을 알고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;John&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 값 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;과 16 진 숫자 인 메모리에서의 위치는 다음과 같습니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0x7fd5d258dd00&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92d18d86d3482790e7c13a933b9573aa4d43bece" translate="yes" xml:space="preserve">
          <source>pass by value means how to pass value to a function by making use of arguments. in pass by value we copy the data stored in the variable we specify and it is slower than pass by reference bcse t
he data is copied . of we make changes in the copied data the original data is not affected. nd in pass by refernce or pass by address we send direct link to the variable itself . or passing pointer to a variable. it is faster bcse less time is consumed</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값으로 전달은 인수를 사용하여 값을 함수에 전달하는 방법을 의미합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값으로 전달할 때 우리는 지정한 변수에 저장된 데이터를 복사하고 데이터를 복사 할 때 참조로 전달하는 것보다 느립니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리는 복사 된 데이터를 변경하여 원본 데이터는 영향을받지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조로 전달하거나 주소로 전달하면 변수 자체에 직접 링크를 보냅니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는 변수에 포인터를 전달합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 더 적은 시간이 소비되는 bcse가 빠릅니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e1fe0646916dec7e41ba04370658cec4d2b909cf" translate="yes" xml:space="preserve">
          <source>see c# discussion and examples here &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/0f66670z(VS.71).aspx&quot;&gt;link text&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # 토론 및 예제를 참조하십시오 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/0f66670z(VS.71).aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;링크 텍스트&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
