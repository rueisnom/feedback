<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/373419">
    <body>
      <group id="373419">
        <trans-unit id="e9f6896f6f619208772a572ca98f25701e9473c9" translate="yes" xml:space="preserve">
          <source>(As an aside: depending on hardware and operating system, there are various &lt;em&gt;calling conventions&lt;/em&gt; about how you call one function from another. The calling convention is like us deciding whether I write the value on a piece of my paper and then hand it to you, or if you have a piece of paper that I write it on, or if I write it on the wall in front of both of us. This is an interesting subject as well, but far beyond the scope of this already long answer.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（顺便说一句：取决于硬件和操作系统，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关于如何从另一个函数调用一个函数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有多种&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;调用约定&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。调用约定就像我们决定是否将值写在纸上然后交给您，或者如果您有一张纸写在上面，或者如果我把它写在我们俩面前的墙上。这也是一个有趣的话题，但远远超出了已经很长的答案的范围。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cbac2cd038acc214288f0e583f52ec70e47f7d7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arg&lt;/code&gt; is a &lt;em&gt;variable&lt;/em&gt;, specifically a &lt;em&gt;local variable&lt;/em&gt; of the function &lt;code&gt;bar&lt;/code&gt;, declared and initialized on line 2</source>
          <target state="translated">&lt;code&gt;arg&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是一个&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;变量&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，特别是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;功能&lt;/font&gt; &lt;code&gt;bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;局部变量&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在第2行进行了声明和初始化&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5bc453d53640191a42b118363d3132a50b5539d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arg&lt;/code&gt; is also an &lt;em&gt;argument&lt;/em&gt; to a specific &lt;em&gt;invocation&lt;/em&gt; of &lt;code&gt;foo&lt;/code&gt; on line 3</source>
          <target state="translated">&lt;code&gt;arg&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;也是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;第3行&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上&lt;/font&gt; &lt;code&gt;foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;的特定&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;调用&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参数&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0608e72f6e5e0abbef70953fddd75322bde2de2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const &amp;amp;&lt;/code&gt; is generally best. You don't incur the construction and destruction penalty. If the reference isn't const your interface is suggesting that it will change the passed in data.</source>
          <target state="translated">&lt;code&gt;const &amp;amp;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常是最好的。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您不会招致建筑和破坏罚款。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果引用不是const，则您的界面建议它将更改传入的数据。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5778d91fd84f65084092af7733f7deb1cc95e2b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foo&lt;/code&gt; is a &lt;em&gt;function&lt;/em&gt; declared on line 1 (Java insists on making all functions methods, but the concept is the same without loss of generality; C and C++ make a distinction between declaration and definition which I won't go into here)</source>
          <target state="translated">&lt;code&gt;foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在第1行上声明&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（Java坚持要使用所有函数方法，但是概念是相同的，并且不会失去通用性； C和C ++在声明和定义之间进行区分，我将不在这里介绍）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4342767f686e6c884e61cc037c3c3fc5cc659e9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;param&lt;/code&gt; is a &lt;em&gt;formal parameter&lt;/em&gt; to &lt;code&gt;foo&lt;/code&gt;, also declared on line 1</source>
          <target state="translated">&lt;code&gt;param&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是一个&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正式的参数&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，还宣布1号线&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a8d4c381565096e1150f6f23cbfd17f895abdfb3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PS: You can also check Dylan Beattie answer in the current thread that explains it in plain words.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PS：您也可以在当前主题中用简单的单词解释Dylan Beattie的答案。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b531648ef026c5f39d3a5d0415561b077a9607f8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;call by reference&lt;/em&gt; means that you pass &lt;strong&gt;variables&lt;/strong&gt; as function arguments</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过引用调用&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;意味着您将&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;变量&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作为函数参数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;传递&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cb11d3cb91b2bf61e1481c659f0757366f9bdd10" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;call by value&lt;/em&gt; means that you pass &lt;strong&gt;values&lt;/strong&gt; as function arguments</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;按值调用&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;意味着您将&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;值&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作为函数参数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;传递&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c462e7be0d47cb45eb80b5d83418b9eb9be4c338" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&quot;Variable&quot; here means the caller's (local or global) variable itself&lt;/strong&gt; -- i.e. if I pass a local variable by reference and assign to it, I'll change the caller's variable itself, not e.g. whatever it is pointing to if it's a pointer.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这里的&amp;ldquo;变量&amp;rdquo;是指调用方的（本地或全局）变量本身&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -即，如果我通过引用传递局部变量并将其分配给它，那么我将更改调用方的变量本身，而不是例如它是指针时指向的变量。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9943118257c67073146bfe93bd45fef73950fe6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Call by reference&lt;/em&gt;&lt;/strong&gt; is when &lt;strong&gt;I give you my notebook which has something written down in it&lt;/strong&gt;. You may scribble in my notebook (maybe I want you to, maybe I don't), and afterwards I keep my notebook, with whatever scribbles you've put there. Also, if what either you or I wrote there is information about how to find something somewhere else, either you or I can go there and fiddle with that information.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我给你我的笔记本上有书面记录&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;时&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，称为参考致电&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可能在我的笔记本上涂鸦（也许我想要您，也许我不想），然后我随您放置的所有涂鸦一起保存我的笔记本。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同样，如果您或我所写的内容中包含有关如何在其他地方找到东西的信息，则您或我都可以去那里弄弄这些信息。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cbec7d9a2bfc4bfd91921e65076e74c44616fe34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Call by value&lt;/em&gt;&lt;/strong&gt; is where &lt;strong&gt;I write down something on a piece of paper and hand it to you&lt;/strong&gt;. Maybe it's a URL, maybe it's a complete copy of War and Peace. No matter what it is, it's on a piece of paper which I've given to you, and so now it is effectively &lt;strong&gt;your piece of paper&lt;/strong&gt;. You are now free to scribble on that piece of paper, or use that piece of paper to find something somewhere else and fiddle with it, whatever.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;价值召唤&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我在纸上写下一些东西交给你的地方&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。也许是URL，也许是《战争与和平》的完整副本。不管是什么，它都在我给&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您的一张纸上&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，所以现在它实际上就是&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您的纸了&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。您现在可以在那张纸上随意涂鸦，或者使用那张纸在其他地方找到东西并随便摆弄。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f764f71ad507d4f6ffa334772288b3c44caf6d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: For a long time, this answer used to say:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：很长一段时间，这个答案曾经说过：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="23bb1a4a60181353a368cf6d31df5de9e55c1682" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Newer languages&lt;sup&gt;2&lt;/sup&gt; tend to use a different (but similar) pair of techniques to achieve the same effects&lt;/strong&gt; (see below) which is the primary source of confusion.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;较新的语言&lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;倾向于使用不同（但相似）的技术对来达到相同的效果&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（请参阅下文），这是造成混淆的主要原因。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4f33c78571c4b9ebb3b2d119820fcb7e5ff0e742" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Now, in modern languages, variables tend to be of &quot;reference types&quot;&lt;/strong&gt; (another concept invented later than &quot;pass by reference&quot; and inspired by it), i.e. the actual object data is stored separately somewhere (usually, on the heap), and only &quot;references&quot; to it are ever held in variables and passed as parameters.&lt;sup&gt;3&lt;/sup&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，在现代语言中，变量倾向于是&amp;ldquo;引用类型&amp;rdquo;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（另一种概念是在&amp;ldquo;按引用传递&amp;rdquo;之后发明并受其启发），即，实际的对象数据分别存储在某个地方（通常在堆上），并且仅对其的&amp;ldquo;引用&amp;rdquo;曾经保存在变量中并作为参数传递。&lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="25e135788be8d1778bcd707f508c191d13da2085" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Passing such a reference falls under pass-by-value&lt;/strong&gt; because a variable's value is technically the reference itself, not the referred object. However, &lt;strong&gt;the net effect on the program can be the same as either pass-by-value or pass-by-reference:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;传递这样的引用属于传递值，&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因为从技术上说变量的值是引用本身，而不是引用的对象。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对程序的净影响可以与按值传递或按引用传递相同：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="476ab2dd4463b39040262c013f7136f0edd5d0ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The meaning of &quot;reference&quot; in &quot;pass by reference&quot;&lt;/strong&gt;. The difference with the general &quot;reference&quot; term is is that &lt;strong&gt;this &quot;reference&quot; is temporary and implicit.&lt;/strong&gt; What the callee basically gets is &lt;strong&gt;a &quot;variable&quot; that is somehow &quot;the same&quot; as the original one.&lt;/strong&gt; How specifically this effect is achieved is irrelevant (e.g. the language may also expose some implementation details -- addresses, pointers, dereferencing -- this is all irrelevant; if the net effect is this, it's pass-by-reference).</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo;通过引用传递&amp;rdquo;中&amp;ldquo;引用&amp;rdquo;的含义&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。与&amp;ldquo;参考&amp;rdquo;一词的不同之处在于，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&amp;ldquo;参考&amp;rdquo;是临时的和隐含的。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;被呼叫者基本上得到的是&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个&amp;ldquo;变量&amp;rdquo;，它在某种程度上与原始变量&amp;ldquo;相同&amp;rdquo;。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这种效果的具体实现方式是无关紧要的（例如，语言也可能公开一些实现细节-地址，指针，取消引用-都是不相关的；如果最终效果是，则是按引用传递）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a360b48a9b0e443655fd1f50a1f59496f3e6cfa6" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;1&lt;/sup&gt;&lt;sub&gt;Unless you are programming in Fortran or Visual Basic, it's not the default behavior, and in most languages in modern use, true call-by-reference is not even possible.&lt;/sub&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1 &lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;除非您使用Fortran或Visual Basic进行编程，否则它不是默认行为，并且在现代使用的大多数语言中，甚至不可能进行真正的按引用调用。&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="89af967c9f1678cfe1fa5b095fa773ba45b7ab71" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;2&lt;/sup&gt;&lt;sub&gt;A fair amount of older ones support it, too&lt;/sub&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2 &lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相当多的老年人也支持它&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="4e328db02277d9e0bf80968dad513e6575d2655f" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;3&lt;/sup&gt;&lt;sub&gt;In several modern languages, all types are reference types. This approach was pioneered by the language CLU in 1975 and has since been adopted by many other languages, including Python and Ruby. And many more languages use a hybrid approach, where some types are &quot;value types&quot; and others are &quot;reference types&quot; -- among them are C#, Java, and JavaScript.&lt;/sub&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3 &lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在几种现代语言中，所有类型都是引用类型。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这种方法由1975年的CLU语言首创，此后被包括Python和Ruby在内的许多其他语言采用。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;还有更多的语言使用混合方法，其中一些类型是&amp;ldquo;值类型&amp;rdquo;，而其他类型是&amp;ldquo;引用类型&amp;rdquo;-其中包括C＃，Java和JavaScript。&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="36bedde2f57763554ef2a1b03c1603401bab77e8" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;4&lt;/sup&gt;&lt;sub&gt;There's nothing bad with recycling a fitting old term &lt;em&gt;per se,&lt;/em&gt; but one has to somehow make it clear which meaning is used each time. Not doing that is exactly what keeps causing confusion.&lt;/sub&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;4 &lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;回收一个合适的旧术语&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;本身&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并没有什么坏处&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是必须以某种方式弄清楚每次使用的含义。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不这样做正是造成混乱的原因。&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="0c4436e45f8957f1cd334823decd0388dde14837" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;&lt;em&gt;parameter&lt;/em&gt;&lt;/strong&gt; (also called a &lt;em&gt;formal parameter&lt;/em&gt;) is a &lt;em&gt;variable&lt;/em&gt; which must be supplied by the caller when calling a function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;甲&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参数&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（也称为&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;形式参数&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）是&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可变的&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，其必须由呼叫者调用函数时被供应。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6be845d8543d385fe06b210b124c8a494e883d8" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;&lt;em&gt;value&lt;/em&gt;&lt;/strong&gt; is the &lt;strong&gt;result of evaluating an expression&lt;/strong&gt; in the language. For example, in the &lt;code&gt;bar&lt;/code&gt; function above, after the line &lt;code&gt;int arg = 1;&lt;/code&gt;, the expression &lt;code&gt;arg&lt;/code&gt; has the &lt;em&gt;value&lt;/em&gt;&lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;甲&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;值&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;计算表达式的结果&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的语言。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如，在&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上面&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数中，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int arg = 1;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;行之后&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;；&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，表达式&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arg&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;值为&lt;/font&gt;&lt;/font&gt;&lt;/em&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e079dc36e6c16cfe3c84390e6df02765e02f9536" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;&lt;em&gt;variable&lt;/em&gt;&lt;/strong&gt; is a &lt;strong&gt;container for values&lt;/strong&gt;. A variable can be mutable (this is the default in most C-like languages), read-only (e.g. declared using Java's &lt;code&gt;final&lt;/code&gt; or C#'s &lt;code&gt;readonly&lt;/code&gt;) or deeply immutable (e.g. using C++'s &lt;code&gt;const&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;甲&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;变量&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是一个&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对值的容器&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;变量可以是可变的（这是大多数类似C的语言中的默认设置），只读（例如，使用Java的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;final&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或C＃的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;readonly&lt;/code&gt; 声明&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）或深度不可变（例如，使用C ++的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;const&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a677b0c64bdfeda25591da2903e6635e04d8bb09" translate="yes" xml:space="preserve">
          <source>A major difference between them is that value-type variables store values, so specifying a value-type variable in a method call passes a copy of that variable's value to the method. Reference-type variables store references to objects, so specifying a reference-type variable as an argument passes the method a copy of the actual reference that refers to the object. Even though the reference itself is passed by value, the method can still use the reference it receives to interact with&amp;mdash;and possibly modify&amp;mdash;the original object. Similarly, when returning information from a method via a return statement, the method returns a copy of the value stored in a value-type variable or a copy of the reference stored in a reference-type variable. When a reference is returned, the calling method can use that reference to interact with the referenced object. So, in effect, objects are always passed by reference.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它们之间的主要区别在于，值类型变量存储值，因此在方法调用中指定值类型变量会将该变量值的副本传递给方法。引用类型变量存储对对象的引用，因此将引用类型变量指定为参数将使该方法将引用对象的实际引用的副本传递给该方法。即使引用本身是按值传递的，该方法仍可以使用它收到的引用与原始对象进行交互（并可能进行修改）。类似地，当通过return语句从方法返回信息时，该方法返回存储在value-type变量中的值的副本或存储在reference-type变量中的引用的副本。当返回引用时，调用方法可以使用该引用与引用的对象进行交互。所以，实际上，对象总是通过引用传递。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="abd7a4c1cc58474c81f17ebaa3380517415b77ff" translate="yes" xml:space="preserve">
          <source>A secondary source of confusion is the fact that &lt;strong&gt;in &quot;pass by reference&quot;, &quot;reference&quot; has a narrower meaning than the general term &quot;reference&quot;&lt;/strong&gt; (because the phrase predates it).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;造成混淆的第二个原因是，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&amp;ldquo;通过引用传递&amp;rdquo;中，&amp;ldquo;引用&amp;rdquo;的含义比一般术语&amp;ldquo;引用&amp;rdquo;的含义要窄&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（因为该短语早于它）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8395df276068a15c1788c1244f7f1967b1ffd62b" translate="yes" xml:space="preserve">
          <source>Addendum: call by object sharing</source>
          <target state="translated">补遗:通过对象共享调用</target>
        </trans-unit>
        <trans-unit id="e1b35360cd12c3fd13d94fe6f21d7c2fcc5d8691" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;&lt;em&gt;argument&lt;/em&gt;&lt;/strong&gt; is a &lt;em&gt;value&lt;/em&gt; that is supplied by the caller of a function to satisfy a specific formal parameter of that function</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参数&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是一个&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;值&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，其由函数的调用者提供满足该功能的具体形式参数&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3669673a915b7806f383325212faf75fa8a11a20" translate="yes" xml:space="preserve">
          <source>An actual parameter referring to &amp;ldquo;passed by value&amp;rdquo; formal parameter may be &lt;strong&gt;an expression&lt;/strong&gt; in general, so it is allowed to use not only a variable but also a literal or even a function invocation's result.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指代&amp;ldquo;通过值传递&amp;rdquo;形式参数的实际参数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以是&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;表达式&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，因此，它不仅可以使用变量，还可以使用文字或函数调用的结果。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="df6b153b01adb26322ecd5d9e904e438de306d18" translate="yes" xml:space="preserve">
          <source>And an example in Java won't hurt:</source>
          <target state="translated">用Java的例子也无妨。</target>
        </trans-unit>
        <trans-unit id="41bfbeff0e712201c1f6a812c3156a5716a824be" translate="yes" xml:space="preserve">
          <source>And here's an example of calling this function:</source>
          <target state="translated">这里有一个调用这个函数的例子。</target>
        </trans-unit>
        <trans-unit id="d429697a4106347176728eb0835dcffc66d7932a" translate="yes" xml:space="preserve">
          <source>As you may see, &lt;strong&gt;this pair of techniques is almost the same as those in the definition, only with a level of indirection: just replace &quot;variable&quot; with &quot;referenced object&quot;.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如您所见，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这对技术与定义中的技术几乎相同，只是具有某种程度的间接性：只需将&amp;ldquo;变量&amp;rdquo;替换为&amp;ldquo;引用对象&amp;rdquo;即可。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fca7e365e04633808c1e9f9aa4c42c53cb72f7e2" translate="yes" xml:space="preserve">
          <source>Barbara Liskov, when she invented the CLU programming language (which had these semantics), realized that the existing terms &quot;call by value&quot; and &quot;call by reference&quot; weren't particularly useful for describing the semantics of this new language. So she invented a new term: &lt;a href=&quot;https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_sharing&quot;&gt;&lt;strong&gt;call by object sharing&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当Barbara Liskov发明CLU编程语言（具有这些语义）时，她意识到现有的术语&amp;ldquo;按值调用&amp;rdquo;和&amp;ldquo;按引用调用&amp;rdquo;对于描述这种新语言的语义并不是特别有用。因此，她发明了一个新术语：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_sharing&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过对象共享进行调用&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8923be1f7bad7119c6557d2337dcb813f8938152" translate="yes" xml:space="preserve">
          <source>Before understanding the 2 terms, you &lt;strong&gt;MUST&lt;/strong&gt; understand the following. Every object, has 2 things that can make it be distinguished.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在理解这两个术语之前，您&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必须&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;了解以下内容。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每个对象都有两个可以区分的事物。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e34bfb419c41f2d2b66b3b6899800cefb3c2d265" translate="yes" xml:space="preserve">
          <source>But if you want to give the function the &lt;em&gt;ability to change the value of the variable&lt;/em&gt; as seen from the outside, you need to use &lt;strong&gt;pass by reference&lt;/strong&gt;.  As both the value and the address (reference) are passed in and available inside the function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，如果要使该函数&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;具有更改变量值（&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从外部观察）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;能力&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则需要使用&amp;ldquo; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;按引用传递&amp;rdquo;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因为值和地址（引用）都被传入并在函数内部可用。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6e61eaf9f7eacd12ce53adbf1a701c715785f2f3" translate="yes" xml:space="preserve">
          <source>C# supports pass by value and pass by reference (keyword &lt;code&gt;ref&lt;/code&gt; used at caller and called function). Jon Skeet also has a nice explanation of this &lt;a href=&quot;https://jonskeet.uk/csharp/parameters.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C＃支持按值传递和按引用传递（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;调用方和被调用函数使用的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关键字&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ref&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;乔恩&amp;middot;斯基特（Jon Skeet）&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://jonskeet.uk/csharp/parameters.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在这里&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对此也有很好的解释&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dcb298d2090971d85ae8a79abeefe2fbfe4a1132" translate="yes" xml:space="preserve">
          <source>C++ supports pass by value and pass by reference (reference parameter type used at called function). You will find an explanation of this below.</source>
          <target state="translated">C++支持通过值传递和引用传递(在调用函数时使用的引用参数类型)。你会在下面找到相关的解释。</target>
        </trans-unit>
        <trans-unit id="6a32afde8ee467a4cfa26db111fcf46cc30a2d73" translate="yes" xml:space="preserve">
          <source>Call by reference</source>
          <target state="translated">参照调用</target>
        </trans-unit>
        <trans-unit id="c590467a0f3956ff0e042df50b68f779090db976" translate="yes" xml:space="preserve">
          <source>Call by value</source>
          <target state="translated">按值调用</target>
        </trans-unit>
        <trans-unit id="199993be9fef4c509cd7f630e2bb318e8ab6c85a" translate="yes" xml:space="preserve">
          <source>Codes</source>
          <target state="translated">Codes</target>
        </trans-unit>
        <trans-unit id="9cbd72fd910e48c58a4f702f7132ff44457c59a9" translate="yes" xml:space="preserve">
          <source>Could you give me some examples, please?</source>
          <target state="translated">你能给我举个例子吗?</target>
        </trans-unit>
        <trans-unit id="81542fafe9576235202df625d15049ec1be0114e" translate="yes" xml:space="preserve">
          <source>Depending on the language's architecture or the &lt;em&gt;type&lt;/em&gt; (class, struct, etc.) of your object, you would be either transferring &lt;code&gt;&quot;John&quot;&lt;/code&gt; or &lt;code&gt;0x7fd5d258dd00&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;根据语言的体系结构或对象的&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类型&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（类，结构等），您将转移&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;John&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0x7fd5d258dd00&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0b5c518f721f8b3c6af740f2739256af35b61c4d" translate="yes" xml:space="preserve">
          <source>Either by &lt;strong&gt;passing their values to cell A2&lt;/strong&gt; by typing &lt;em&gt;= 5 + 2&lt;/em&gt; into this cell. In this case, if the values of the cells A1 or B1 change, the sum in A2 remains the same.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在此单元格中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;键入&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;= 5 + 2 &lt;/font&gt;&lt;/em&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将其值传递到单元格A2中&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在这种情况下，如果单元格A1或B1的值发生变化，则A2中的总和保持不变。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10e9dcf2f01de94fcc4afa9703bc0c33a2cff1c7" translate="yes" xml:space="preserve">
          <source>Example(copy and use/try this yourself and see) :</source>
          <target state="translated">例子(复制和使用这个自己看)。</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="f584f0c48a1b0d4e3338f2ed2a5fdd472b7b090c" translate="yes" xml:space="preserve">
          <source>First and foremost, &lt;strong&gt;the &quot;pass by value vs. pass by reference&quot; distinction as defined in the CS theory is now obsolete&lt;/strong&gt; because &lt;strong&gt;the technique originally defined as &quot;pass by reference&quot; has since fallen out of favor&lt;/strong&gt; and is seldom used now.&lt;sup&gt;1&lt;/sup&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;首先，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在CS理论中定义的&amp;ldquo;按值传递vs.按引用传递&amp;rdquo;的区别现在已经过时了，&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因为&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初定义为&amp;ldquo;按引用传递&amp;rdquo;的技术已经失宠&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并且现在很少使用。&lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1个&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="eb89ac1e7f9dc9f4e4b7cf6d7e6096cb7149a6cd" translate="yes" xml:space="preserve">
          <source>For more on this, I recommend you to read about &lt;a href=&quot;https://stackoverflow.com/a/4955259/5175709&quot;&gt;dereferencing a pointer&lt;/a&gt; and also &lt;a href=&quot;https://stackoverflow.com/a/38024319/5175709&quot;&gt;why choose struct (value type) over class (reference type)&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有关此的更多信息，我建议您阅读有关&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/4955259/5175709&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;取消引用指针的知识，&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以及&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/38024319/5175709&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为什么选择结构（值类型）而不是类（引用类型）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="78f758b88546141cf025fbcc3e6f5c64139c6ee9" translate="yes" xml:space="preserve">
          <source>Going back to my metaphor above, if I'm &lt;code&gt;bar&lt;/code&gt; and you're &lt;code&gt;foo&lt;/code&gt;, when I call you, I hand you a piece of paper with a &lt;em&gt;value&lt;/em&gt; written on it. You call that piece of paper &lt;code&gt;param&lt;/code&gt;. That value is a &lt;strong&gt;copy&lt;/strong&gt; of the value I have written in my notebook (my local variables), in a variable I call &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;回到上面的隐喻，如果我是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而你是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，当我打电话给你时，我会给你一张纸，上面&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;写着&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;值&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。您称那张纸为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;param&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。该值是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我在笔记本中写的值（我的局部变量）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;副本&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，该变量称为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arg&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a22af7a4730db40ef83a84bd3138eb1203ab1e4d" translate="yes" xml:space="preserve">
          <source>Going back to our example above, it's equivalent to:</source>
          <target state="translated">回到我们上面的例子,相当于。</target>
        </trans-unit>
        <trans-unit id="d7eb63da0145f25b5d55241918a08d5b230c4b12" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;arg&lt;/code&gt; and &lt;code&gt;another_variable&lt;/code&gt; are completely independent variables -- their values can change independently of each other. However, at the point where &lt;code&gt;another_variable&lt;/code&gt; is declared, it is initialized to hold the same value that &lt;code&gt;arg&lt;/code&gt; holds -- which is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此处&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arg&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;another_variable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是完全独立的变量-它们的值可以彼此独立地更改。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，在&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明&lt;/font&gt;&lt;/font&gt; &lt;code&gt;another_variable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的点上&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，将其初始化为保留与&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arg&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相同的值，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;即&lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d5a3fe120383d61d87e4540a6a6708c041f6360c" translate="yes" xml:space="preserve">
          <source>Here is an example that demonstrates the differences between &lt;strong&gt;pass by value - pointer value - reference&lt;/strong&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是一个示例，演示&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;按值传递-指针值-引用&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之间的区别&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">这里有一个例子。</target>
        </trans-unit>
        <trans-unit id="0ea64acdc8005d5b15eb4032e4c83cca10d2689f" translate="yes" xml:space="preserve">
          <source>However, if a variable holding this reference is &lt;em&gt;reassiged,&lt;/em&gt; it will stop pointing to that object, so any further operations on this variable will instead affect whatever it is pointing to now.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，如果重新保存了具有此引用的变量&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它将停止指向该对象，因此对该变量进行的任何进一步操作都会影响它现在指向的内容。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="630391e5a5f8a770ac2b2e52c79504fdb2316219" translate="yes" xml:space="preserve">
          <source>If I print out the page and give you the printout, I'm passing by
  value. Your page is a disconnected copy of the original. You won't see
  any subsequent changes, and any changes that you make (e.g. scribbling
  on your printout) will not show up on the original page. If you
  destroy the printout, you have actually destroyed your copy of the
  object - but the original web page remains intact.</source>
          <target state="translated">如果我把页面打印出来给你,我是按值传递的。你的页面是原版的一个断开的副本。您不会看到任何后续的更改,而且您所做的任何更改(例如在打印输出上涂鸦)都不会显示在原始页面上。如果您销毁了打印出来的内容,您实际上已经销毁了对象的副本,但原始的网页仍然完好无损。</target>
        </trans-unit>
        <trans-unit id="fa1eae8f868f8ccec251540cf83a6d999d96bd33" translate="yes" xml:space="preserve">
          <source>If a reference is just taken from a caller's variable and passed as an argument, this has the same effect as pass-by-reference: if the referred object is &lt;em&gt;mutated&lt;/em&gt; in the callee, the caller will see the change.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果参考仅仅是从呼叫者的可变取出并作为参数传递，这具有作为通过按引用相同的效果：如果引用的对象被&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;突变&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在被叫方，主叫方会看到的变化。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b6671658fcd898e40c481710de5eb11d030070e4" translate="yes" xml:space="preserve">
          <source>If what that reference type (that is, pointer) points to is &lt;strong&gt;mutable&lt;/strong&gt; then an interesting effect is possible: you can modify the pointed-to value, and the caller can observe changes to the pointed-to value, even though the caller cannot observe changes to the pointer itself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果引用类型（即指针）指向的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;变量&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可变的，&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;则可能会产生有趣的效果：您可以修改指向的值，并且调用者可以观察到指向值的更改，即使调用者无法观察到更改为指针本身。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c7d58c687c27bf3e8c08e37865c6064bb8181f24" translate="yes" xml:space="preserve">
          <source>If what you have is &lt;em&gt;call by value&lt;/em&gt;, but the actual value is a &lt;em&gt;reference type&lt;/em&gt; or &lt;em&gt;pointer type&lt;/em&gt;, then the &quot;value&quot; itself isn't very interesting (e.g. in C it's just an integer of a platform-specific size) -- what's interesting is what that value &lt;strong&gt;points to&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您拥有的是&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;按值调用&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但实际值是&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引用类型&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指针类型&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则&amp;ldquo;值&amp;rdquo;本身不是很有趣（例如，在C中，它只是平台特定大小的整数）-什么价值&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指向了&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有趣的地方&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="19bdf40bf0d0910a0274641de9caa509c06e2fd2" translate="yes" xml:space="preserve">
          <source>If you don't want to change the value of the original variable after passing it into a function, the function should be constructed with a &quot;&lt;strong&gt;pass by value&lt;/strong&gt;&quot; parameter.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果不想在将原始变量的值传递给函数后更改其值，则应使用&amp;ldquo; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;按值传递&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rdquo;参数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来构造该函数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec3a32a259d75495fafcc2de084612d021f12bfe" translate="yes" xml:space="preserve">
          <source>If your value is VAR1 = &quot;Happy Guy!&quot;, you will only see &quot;Happy Guy!&quot;. If VAR1 changes to &quot;Happy Gal!&quot;, you won't know that. If it's passed by reference, and VAR1 changes, you will.</source>
          <target state="translated">如果你的值是VAR1=&quot;Happy Guy!&quot;,你只会看到 &quot;Happy Guy!&quot;。如果VAR1改变为 &quot;Happy Gal!&quot;,你就不会知道。如果是通过引用传递,而VAR1改变了,你就会知道。</target>
        </trans-unit>
        <trans-unit id="9df5b20fed798fcf664fc2cac5f32abdc432a314" translate="yes" xml:space="preserve">
          <source>In &lt;em&gt;call by reference&lt;/em&gt;, the function's formal parameters are simply &lt;em&gt;new names&lt;/em&gt; for the same variables that the caller supplies as arguments.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;按引用调用中&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，函数的形式参数只是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;调用者作为参数提供的相同变量的&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;新名称&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9fcb8fa70e178c7bf61dd1f973de055411e8bcb0" translate="yes" xml:space="preserve">
          <source>In &lt;em&gt;call by value&lt;/em&gt;, the function's formal parameters are variables that are newly created for the function invocation, and which are initialized with the &lt;em&gt;values&lt;/em&gt; of their arguments.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;按值调用中&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，函数的形式参数是为函数调用新创建的变量，并使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;其参数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;值&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;进行初始化&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f9765a7cb94195661a7f370a640e70f9e99a5beb" translate="yes" xml:space="preserve">
          <source>In c#, to pass a variable by reference so the called method can modify the variable's, C# provides keywords ref and out. Applying the ref keyword to a parameter declaration allows you to pass a variable to a method by reference&amp;mdash;the called method will be able to modify the original variable in the caller. The ref keyword is used for variables that already have been initialized in the calling method. Normally, when a method call contains an uninitialized variable as an argument, the compiler generates an error. Preceding a parameter with keyword out creates an output parameter. This indicates to the compiler that the argument will be passed into the called method by reference and that the called method will assign a value to the original variable in the caller. If the method does not assign a value to the output parameter in every possible path of execution, the compiler generates an error. This also prevents the compiler from generating an error message for an uninitialized variable that is passed as an argument to a method. A method can return only one value to its caller via a return statement, but can return many values by specifying multiple output (ref and/or out) parameters.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在c＃中，要通过引用传递变量，以便被调用的方法可以修改变量的值，C＃提供了关键字ref和out。将ref关键字应用于参数声明使您可以通过引用将变量传递给方法-被调用的方法将能够在调用方中修改原始变量。 ref关键字用于在调用方法中已经初始化的变量。通常，当方法调用包含未初始化的变量作为参数时，编译器会生成错误。在带有关键字out的参数之前创建一个输出参数。这向编译器指示该参数将通过引用传递到被调用的方法中，并且被调用的方法将为调用方中的原始变量分配一个值。如果该方法未在每个可能的执行路径中为输出参数分配值，则编译器将生成错误。这也可以防止编译器为未初始化的变量生成错误消息，该错误消息作为参数传递给方法。一个方法只能通过return语句将一个值返回给其调用方，但是可以通过指定多个输出（ref和/或out）参数来返回许多值。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d5d1084df8b586952d88c19794aba535a677bb9e" translate="yes" xml:space="preserve">
          <source>In functional languages, &lt;em&gt;all&lt;/em&gt; objects are immutable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在功能语言中，&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所有&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象都是不可变的。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f09a33520d9524be4917a785dc2f550ba4444582" translate="yes" xml:space="preserve">
          <source>In metaphoric terms:</source>
          <target state="translated">用比喻的方式来说。</target>
        </trans-unit>
        <trans-unit id="75b8b82f07e813f25f8aa777b9ad069324f2f151" translate="yes" xml:space="preserve">
          <source>In short, Passed by value is WHAT it is and passed by reference is WHERE it is.</source>
          <target state="translated">简而言之,Passed by value是what it is,Passed by reference是where it is。</target>
        </trans-unit>
        <trans-unit id="cfc7e8a70761c2025ad727e8d569d9aa259077f5" translate="yes" xml:space="preserve">
          <source>In simplest terms:</source>
          <target state="translated">用最简单的话说:</target>
        </trans-unit>
        <trans-unit id="7b2b2cee7ff2dff249b369b6c32127d56013526f" translate="yes" xml:space="preserve">
          <source>In some languages, some object types are &quot;immutable&quot;: any operation on them that seems to alter the value actually creates a completely new object without affecting the original one. So, passing an object of such a type as an argument always has the effect of pass-by-value: a copy for the callee will be made automatically if and when it needs a change, and the caller's object will never be affected.</source>
          <target state="translated">在某些语言中,有些对象类型是 &quot;不可变的&quot;:对它们进行任何看似改变值的操作,实际上都会创建一个全新的对象,而不影响原来的对象。因此,传递一个这样的类型的对象作为参数,总是具有逐值传递的效果:如果需要更改时,会自动为被调用者复制一个副本,而调用者的对象永远不会受到影响。</target>
        </trans-unit>
        <trans-unit id="f5a4682c4e96457401f2d267cf5d3759e71ca397" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;param&lt;/code&gt; doesn't just have the same &lt;em&gt;value&lt;/em&gt; as &lt;code&gt;arg&lt;/code&gt;, it actually &lt;strong&gt;is&lt;/strong&gt;&lt;code&gt;arg&lt;/code&gt; (just by a different name) and so &lt;code&gt;bar&lt;/code&gt; can observe that &lt;code&gt;arg&lt;/code&gt; has been incremented.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在这种情况下，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;param&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不仅仅具有相同的&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;价值&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arg&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它实际上&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt; &lt;code&gt;arg&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（只是一个不同的名称）等&lt;/font&gt;&lt;/font&gt; &lt;code&gt;bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以观察到，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arg&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;已递增。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1e8b5f3c56ea99edf6fe3538b9c9f5dbd50e45e9" translate="yes" xml:space="preserve">
          <source>It is exactly as if we had written the code this way:</source>
          <target state="translated">恰恰是这样写出的代码,就像我们这样写出的代码一样。</target>
        </trans-unit>
        <trans-unit id="ba2017f01d4b5e3837a6cc39aa2641361c7e5fc4" translate="yes" xml:space="preserve">
          <source>It's a way how to pass arguments to functions. Passing by reference means the called functions' parameter will be the same as the callers' passed argument (not the value, but the identity - the variable itself). Pass by value means the called functions' parameter will be a copy of the callers' passed argument. The value will be the same, but the identity - the variable - is different. Thus changes to a parameter done by the called function in one case changes the argument passed and in the other case just changes the value of the parameter in the called function (which is only a copy). In a quick hurry:</source>
          <target state="translated">这是一种如何将参数传递给函数的方式。通过引用传递是指被调用函数的参数将与调用者传递的参数相同(不是值,而是身份--变量本身)。通过值传递意味着被调用函数的参数将是调用者传递的参数的副本。值是一样的,但身份--变量本身是不同的。因此,在一种情况下,被调用函数对参数进行的修改会改变传递的参数,而在另一种情况下,只是改变了被调用函数中的参数的值(这只是一个副本)。匆匆忙忙中。</target>
        </trans-unit>
        <trans-unit id="94f1506dff6edaaf3a991ae077be7ac2ad3c295c" translate="yes" xml:space="preserve">
          <source>Its address.</source>
          <target state="translated">其地址:</target>
        </trans-unit>
        <trans-unit id="cb05b65db2ada43f4ca193e8ea8a1ed4e1835444" translate="yes" xml:space="preserve">
          <source>Its value.</source>
          <target state="translated">其价值。</target>
        </trans-unit>
        <trans-unit id="e5664650fb653cb60de46dc4ef48efc29582cb58" translate="yes" xml:space="preserve">
          <source>Java only supports pass by value. Always copies arguments, even though when copying a reference to an object, the parameter in the called function will point to the same object and changes to that object will be see in the caller. Since this can be confusing, &lt;a href=&quot;https://jonskeet.uk/java/passing.html&quot;&gt;here&lt;/a&gt; is what Jon Skeet has to say about this.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java仅支持按值传递。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;始终复制参数，即使将引用复制到对象时，被调用函数中的参数将指向同一对象，并且在调用者中将看到对该对象的更改。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因为这会引起混乱，&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://jonskeet.uk/java/passing.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这里&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是什么乔恩斯基特不得不说这件事。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c1d8c26323a44450c9027c438c65ae1f40230b0" translate="yes" xml:space="preserve">
          <source>Keep it simple, peeps. Walls of text can be a bad habit.</source>
          <target state="translated">保持简单,小伙伴们。文字墙可能是一个坏习惯。</target>
        </trans-unit>
        <trans-unit id="5b3839d4cab4b2e3b7cbd1e829e6fe9b7ce91854" translate="yes" xml:space="preserve">
          <source>Many answers here (and in particular the most highly upvoted answer) are factually incorrect, since they misunderstand what &quot;call by reference&quot; really means. Here's my attempt to set matters straight.</source>
          <target state="translated">这里的许多回答(尤其是最高票数的回答)都是不符合事实的,因为他们误解了 &quot;参照系 &quot;的真正含义。下面是我试图把事情说清楚。</target>
        </trans-unit>
        <trans-unit id="9710ae38811b064e0b66a99f285a0b262bd760b6" translate="yes" xml:space="preserve">
          <source>Note that C++ has a notion of &quot;references&quot; (e.g. &lt;code&gt;int&amp;amp;&lt;/code&gt;) that is &lt;strong&gt;not&lt;/strong&gt; like Java and C#'s &quot;reference types&quot;, but &lt;strong&gt;is&lt;/strong&gt; like &quot;call by reference&quot;. Java and C#'s &quot;reference types&quot;, and &lt;em&gt;all&lt;/em&gt; types in Python, are like what C and C++ call &quot;pointer types&quot; (e.g. &lt;code&gt;int*&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;需要注意的是C ++有&amp;ldquo;引用&amp;rdquo;的概念（如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&amp;amp;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不是&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;像Java和C＃的&amp;lsquo;引用类型&amp;rsquo;，但&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;就是&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;像&amp;lsquo;通过引用调用&amp;rsquo;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java和C＃的&amp;ldquo;引用类型&amp;rdquo;以及&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python中的&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所有&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类型都类似于C和C ++所谓的&amp;ldquo;指针类型&amp;rdquo;（例如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int*&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e21567e8b73fa84c73ad77ce9ab401836a697b6a" translate="yes" xml:space="preserve">
          <source>Note that both of these concepts are completely independent and orthogonal from the concept of &lt;strong&gt;&lt;em&gt;reference types&lt;/em&gt;&lt;/strong&gt; (which in Java is all types that are subtypes of &lt;code&gt;Object&lt;/code&gt;, and in C# all &lt;code&gt;class&lt;/code&gt; types), or the concept of &lt;strong&gt;&lt;em&gt;pointer types&lt;/em&gt;&lt;/strong&gt; like in C (which are semantically equivalent to Java's &quot;reference types&quot;, simply with different syntax).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请注意，这两个概念与&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引用类型&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（在Java中是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所有子类型&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，在C＃中是所有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类型）或&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指针类型&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（在C中，在语义上等同于Java的&amp;ldquo;引用类型&amp;rdquo;，只是使用不同的语法）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="25a6d90028e0300096155b3ce6dd2dc1ade7a134" translate="yes" xml:space="preserve">
          <source>Note that this is &lt;strong&gt;not&lt;/strong&gt; how any of Java, JavaScript, C, Objective-C, Python, or nearly any other popular language today works. This means that those languages are &lt;strong&gt;not&lt;/strong&gt; call by reference, they are call by value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意，这&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不是&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Java，JavaScript，C，Objective-C，Python或当今几乎所有其他流行语言的工作方式。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这意味着这些语言&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不是&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;按引用调用的，而是按值调用的。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="11faf91e92f213fd28d8e40291fa909c4638b55f" translate="yes" xml:space="preserve">
          <source>Now, the authentic definition is:</source>
          <target state="translated">现在,正宗的定义是:</target>
        </trans-unit>
        <trans-unit id="1a7b7352a1f0297c61dfa9212c688746676823a8" translate="yes" xml:space="preserve">
          <source>OK, here's the longer and more formal explanation.</source>
          <target state="translated">好了,下面是比较长的、比较正式的解释。</target>
        </trans-unit>
        <trans-unit id="0c5eb5d154c5c29f403e372daae7202076e989a5" translate="yes" xml:space="preserve">
          <source>Or by &lt;strong&gt;passing the &amp;ldquo;references&amp;rdquo; of the cells A1 and B1 to cell A2&lt;/strong&gt; by typing &lt;em&gt;= A1 + B1&lt;/em&gt;. In this case, if the values of the cells A1 or B1 change, the sum in A2 changes too.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或者通过&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;键入&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;= A1 + B1 &lt;/font&gt;&lt;/em&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将单元格A1和B1的&amp;ldquo;引用&amp;rdquo;传递到单元格A2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。在这种情况下，如果单元格A1或B1的值更改，则A2中的总和也更改。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3c8941d187c94e6a53e6ff3cad0dfdb27bb7fe5b" translate="yes" xml:space="preserve">
          <source>Pass by reference - The function uses the original variable, if you change the variable in the other function, it changes in the original variable too.</source>
          <target state="translated">通过引用传递--该函数使用原始变量,如果你改变了其他函数中的变量,它也会在原始变量中改变。</target>
        </trans-unit>
        <trans-unit id="8f16241a59b751eb6cbff39b6de4f8cbc02de729" translate="yes" xml:space="preserve">
          <source>Pass by value - The function copies the variable and works with a copy(so it doesn't change anything in the original variable)</source>
          <target state="translated">通过值传递-该函数复制变量并与副本一起工作(所以它不会改变原来的变量中的任何东西)</target>
        </trans-unit>
        <trans-unit id="2cef6b37dfa17bb4e917392a148503b1c3db7641" translate="yes" xml:space="preserve">
          <source>Pass by value sends a COPY of the data stored in the variable you specify, pass by reference sends a direct link to the variable itself. So if you pass a variable by reference and then change the variable inside the block you passed it into, the original variable will be changed. If you simply pass by value, the original variable will not be able to be changed by the block you passed it into but you will get a copy of whatever it contained at the time of the call.</source>
          <target state="translated">通过值传递会发送一个存储在你指定的变量中的数据的COPY,通过引用传递会直接链接到变量本身。因此,如果你通过引用传递一个变量,然后在你传递到的块中改变这个变量,原来的变量将被改变。如果你只是通过值传递,原始变量将不能被你传递到的块改变,但你将得到一个在调用时包含的变量的副本。</target>
        </trans-unit>
        <trans-unit id="7365595bf985eac947edb497d85b84b024d6e69c" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;&quot;John&quot;&lt;/code&gt; is known as passing by value.
Passing &lt;code&gt;0x7fd5d258dd00&lt;/code&gt; is known as passing by reference. Anyone who is pointing to this memory location will have access to the value of &lt;code&gt;&quot;John&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;传递&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;John&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;被称为按价值传递。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;传递&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0x7fd5d258dd00&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;称为通过引用传递。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指向该存储位置的任何人都可以访问&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;John&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的值&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d38f5cddd05d2c12e8c98ba1859c152cdc3283d4" translate="yes" xml:space="preserve">
          <source>Say I want to share a web page with you. If I tell you the URL, I'm
  passing by reference. You can use that URL to see the same web page I
  can see. If that page is changed, we both see the changes. If you
  delete the URL, all you're doing is destroying your reference to that
  page - you're not deleting the actual page itself.</source>
          <target state="translated">说我想和你分享一个网页。如果我把URL告诉你,我是通过引用的方式传递给你。你可以用那个URL,我可以看到同一个网页,你可以用那个URL看到我可以看到的网页。如果那个页面被更改了,我们都能看到更改。如果你删除了这个URL,你所做的只是破坏了你对那个页面的引用--你并没有删除实际的页面本身。</target>
        </trans-unit>
        <trans-unit id="769fab7e33db0e3c0fa3cee12bf821f3bc133b91" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;param&lt;/code&gt; is just another name for &lt;code&gt;arg&lt;/code&gt; -- that is, they are &lt;strong&gt;the same variable&lt;/strong&gt;, changes to &lt;code&gt;param&lt;/code&gt; are reflected in &lt;code&gt;arg&lt;/code&gt;. This is the fundamental way in which call by reference differs from call by value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;param&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;只是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arg&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;别称&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;-也就是说，它们是&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相同的变量&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，因此对&lt;/font&gt;&lt;/font&gt; &lt;code&gt;param&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更改&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;反映在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arg&lt;/code&gt; 中&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是按引用调用与按值调用不同的基本方式。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa853ceca90648f762403773e3de5553e252a245" translate="yes" xml:space="preserve">
          <source>Since my language is C++, i will use that here</source>
          <target state="translated">因为我的语言是C++,所以我在这里就用C++。</target>
        </trans-unit>
        <trans-unit id="4d14885da8ef3abbd0aac02bbdd40f4cb5cb0c92" translate="yes" xml:space="preserve">
          <source>Since they are independent variables, changes to &lt;code&gt;another_variable&lt;/code&gt; do not affect &lt;code&gt;arg&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于它们是自变量，因此对&lt;/font&gt;&lt;/font&gt; &lt;code&gt;another_variable&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更改&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不会影响&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arg&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f74a09526b6f4507d6e6e460766a660e64c1c9a2" translate="yes" xml:space="preserve">
          <source>So if you say &lt;code&gt;employee.name = &quot;John&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，如果您说&lt;/font&gt;&lt;/font&gt; &lt;code&gt;employee.name = &quot;John&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5ff57f4185e884322f43c9c59da60f12f41285ea" translate="yes" xml:space="preserve">
          <source>TL;DR</source>
          <target state="translated">TL;DR</target>
        </trans-unit>
        <trans-unit id="21d278837034557e7a9b46210d42d6e7b8075142" translate="yes" xml:space="preserve">
          <source>Terminology</source>
          <target state="translated">Terminology</target>
        </trans-unit>
        <trans-unit id="d31fc6d67ad1df7e3be5c88469148d24d3fb8731" translate="yes" xml:space="preserve">
          <source>That is, the defining characteristic of what &lt;em&gt;call by value&lt;/em&gt; means is that the callee (&lt;code&gt;foo&lt;/code&gt; in this case) receives &lt;em&gt;values&lt;/em&gt; as arguments, but has its own separate &lt;em&gt;variables&lt;/em&gt; for those values from the variables of the caller (&lt;code&gt;bar&lt;/code&gt; in this case).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;也就是说，&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;按值调用&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;意味着&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;什么的定义特征&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是被调用方（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在这种情况下&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）接收&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;值&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作为参数，但是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从调用方的变量（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在这种情况下为&lt;/font&gt; &lt;code&gt;bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为这些值&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;拥有自己的单独&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;变量&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f94b8d74275151f850f2fd1a3b7a581bfe0b7b47" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;passing by reference&amp;rdquo; method has &lt;strong&gt;an important limitation&lt;/strong&gt;. If a parameter is declared as &lt;strong&gt;passed by reference&lt;/strong&gt; (so it is preceded by the &amp;amp; sign) its corresponding &lt;strong&gt;actual parameter must be a variable&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo;通过引用&amp;rdquo;方法具有&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;重要的局限性&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果一个参数被声明为&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过引用传递&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（因此它前面&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;带有&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;＆符号），则其对应的&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实际参数必须是variable&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c3de59e30bc1afb18206d5c04209b97a3a36b22" translate="yes" xml:space="preserve">
          <source>The caller can just make a private copy before the call and give the callee a reference to that instead.</source>
          <target state="translated">呼叫者可以在呼叫前私自拷贝一份,然后给被呼叫者一个参考。</target>
        </trans-unit>
        <trans-unit id="45b626a8f90c2c072269296274cf38f84db12637" translate="yes" xml:space="preserve">
          <source>The function is not able to place a value in something other than a variable. It cannot assign a new value to a literal or force an expression to change its result.</source>
          <target state="translated">该函数不能将一个值放在变量以外的东西中。它不能给一个新的值分配一个新的值,也不能强迫一个表达式改变其结果。</target>
        </trans-unit>
        <trans-unit id="190ddc465ed862913bd6475d00cd62643198af5b" translate="yes" xml:space="preserve">
          <source>The notion of &lt;em&gt;reference type&lt;/em&gt; corresponds to a URL: it is both itself a piece of information, and it is a &lt;em&gt;reference&lt;/em&gt; (a &lt;em&gt;pointer&lt;/em&gt;, if you will) to other information. You can have many copies of a URL in different places, and they don't change what website they all link to; if the website is updated then every URL copy will still lead to the updated information. Conversely, changing the URL in any one place won't affect any other written copy of the URL.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引用类型&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的概念&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对应于一个URL：它本身既是一条信息，又是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对其他信息&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引用&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果有的话&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指针&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。您可以在不同的地方拥有许多URL副本，并且它们不会更改它们都链接到的网站；如果网站已更新，则每个URL副本仍将导致更新的信息。相反，在任何地方更改URL都不会影响URL的任何其他书面副本。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c93eff5a81a6148f1801b93e4301a07244413b0a" translate="yes" xml:space="preserve">
          <source>The other important pair of concepts to distinguish is &lt;em&gt;parameter&lt;/em&gt; versus &lt;em&gt;argument&lt;/em&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;另一个重要的概念对是&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参数&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;与&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参数&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="94c281cf3a774b1a26c406b830c7abb77ff1de96" translate="yes" xml:space="preserve">
          <source>The simplest way to get this is on an Excel file. Let&amp;rsquo;s say for example that you have two numbers, 5 and 2 in cells A1 and B1 accordingly, and you want to find their sum in a third cell, let's say A2. 
You can do this in two ways.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最简单的方法是在Excel文件中。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;举例来说，假设您在单元格A1和B1中有两个数字5和2，而您想在第三个单元格中找到它们的总和，比如说A2。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以通过两种方式执行此操作。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77b08d764936332f1c4a209a262d287059da0b8c" translate="yes" xml:space="preserve">
          <source>Then the function will have ONLY the value but not the address of the passed in variable.  Without the variable's address, the code inside the function cannot change the variable value as seen from the outside of the function.</source>
          <target state="translated">那么函数将只得到传递的变量的值,而没有传递的变量的地址。如果没有变量的地址,函数内部的代码就不能改变从函数外部看到的变量值。</target>
        </trans-unit>
        <trans-unit id="5c1ac7683dd2ba07c2d671bc98b47e867ed3e464" translate="yes" xml:space="preserve">
          <source>There are two very important sets of concepts to distinguish here. The first is &lt;em&gt;value&lt;/em&gt; versus &lt;em&gt;variable&lt;/em&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这里要区分两个非常重要的概念集。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;首先是&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;值&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;与&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;变量&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67c8b2743fe3552af6854154bf070d6a35748339" translate="yes" xml:space="preserve">
          <source>There's no agreed-upon name for them, which leads to contorted explanations like &quot;call by value where the value is a reference&quot;. In 1975, Barbara Liskov suggested the term &quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_sharing&quot;&gt;call-by-object-sharing&lt;/a&gt;&quot; (or sometimes just &quot;call-by-sharing&quot;) though it never quite caught on. Moreover, neither of these phrases draws a parallel with the original pair. No wonder the old terms ended up being reused in the absense of anything better, leading to confusion.&lt;sup&gt;4&lt;/sup&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它们没有统一的名称，这导致了诸如&amp;ldquo;按值调用，其中值是引用&amp;rdquo;的错误解释。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1975年，芭芭拉&amp;middot;里斯科夫（Barbara Liskov）提出了&amp;ldquo; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_sharing&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;按对象共享调用&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rdquo;（有时也称为&amp;ldquo;按共享调用&amp;rdquo;）一词，尽管&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该术语&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从未流行开来。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此外，这些短语都没有与原始短语相似。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;难怪旧的术语最终会在没有更好的东西的情况下被重用，从而导致混乱。&lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;4&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1a3c5494a5a75f6fb10faba056b9c5de60d735aa" translate="yes" xml:space="preserve">
          <source>Things to note in this definition are:</source>
          <target state="translated">这个定义中需要注意的事项是:</target>
        </trans-unit>
        <trans-unit id="2a017f7a7d98147440fdc82f0593882be018c5ee" translate="yes" xml:space="preserve">
          <source>This guy pretty much nails it:</source>
          <target state="translated">这家伙几乎是钉钉子。</target>
        </trans-unit>
        <trans-unit id="67d81ca73043d11fe3f8c75a12d2f9ca29721b63" translate="yes" xml:space="preserve">
          <source>This is &lt;em&gt;mostly&lt;/em&gt; correct &lt;em&gt;except&lt;/em&gt; the narrower meaning of &quot;reference&quot; -- it being both temporary and implicit (it doesn't have to, but being explicit and/or persistent are additional features, not a part of the pass-by-reference semantic, as explained above). A closer analogy would be giving you a copy of a document vs inviting you to work on the original.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;除了&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;ldquo;引用&amp;rdquo;的狭义含义&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;外&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;基本上是&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正确&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的-它既是临时的又是隐式的（不是必须的，但显式和/或持久的是附加功能，而不是&amp;ldquo;按引用传递&amp;rdquo;语义的一部分） ，如上所述）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更为贴近的类比是给您一份文档副本，而不是邀请您处理原始文档。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="42e154984413d3a0e1f3424a4c64ba4b1d7f0c9a" translate="yes" xml:space="preserve">
          <source>This is exactly the same as the relationship between &lt;code&gt;arg&lt;/code&gt; and &lt;code&gt;param&lt;/code&gt; in our example above, which I'll repeat here for symmetry:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;与&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上面的示例中&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arg&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;param&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之间的关系完全相同，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为对称起见，我将在此重复：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="44c8affdf0e689b408ca95ed21c4a0efd6e07546" translate="yes" xml:space="preserve">
          <source>This is now considered bad practice (as an implicit dependency). As such, &lt;strong&gt;virtually all newer languages are exclusively, or almost exclusively pass-by-value.&lt;/strong&gt; Pass-by-reference is now chiefly used in the form of &quot;output/inout arguments&quot; in languages where a function cannot return more than one value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，这被认为是不好的做法（作为隐式依赖）。因此，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;几乎所有较新的语言都是按值传递或几乎按值传递。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，在函数不能返回多个值的语言中，按引用传递主要以&amp;ldquo;输出/输入参数&amp;rdquo;的形式使用。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c858b2ee157703a151db735a41b42594c23c01dd" translate="yes" xml:space="preserve">
          <source>This works exactly the same way that any other kinds of variables are initialized with values. For example:</source>
          <target state="translated">这与任何其他类型的变量初始化值的方式完全相同。比如说:</target>
        </trans-unit>
        <trans-unit id="930d70a4cc644b0157557de3bcd43f5beca8c742" translate="yes" xml:space="preserve">
          <source>To borrow the analogy of the URL again, the fact that I gave you a &lt;strong&gt;copy&lt;/strong&gt; of the URL to a website is not particularly interesting if the thing we both care about is the website, not the URL. The fact that you scribbling over your copy of the URL doesn't affect my copy of the URL isn't a thing we care about (and in fact, in languages like Java and Python the &quot;URL&quot;, or reference type value, can't be modified at all, only the thing pointed to by it can).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;再次借用URL的类比，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果我们俩都关心的是网站而不是URL，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;那么我给您提供&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;URL &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;副本&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;到网站&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这一事实&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并不是特别有趣。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您对URL副本进行涂鸦不会影响我的URL副本，这并不是我们关心的事情（事实上，在Java和Python等语言中，&amp;ldquo; URL&amp;rdquo;或引用类型值可以根本无法修改，只有它所指出的东西才能被修改）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a4a7f5fbf58a7664de63656b8f081d1bd98c4ef3" translate="yes" xml:space="preserve">
          <source>To have the same effect as pass-by-value, a copy of the object is made at some point. Options include:</source>
          <target state="translated">为了达到与逐值传递一样的效果,在某一点上对对象进行复制。选项包括:</target>
        </trans-unit>
        <trans-unit id="fecc83247ac04fdaaf06ee439eda04776c92bdfc" translate="yes" xml:space="preserve">
          <source>To start with, I want to highlight some important bits of terminology, to help clarify my answer and to ensure we're all referring to the same ideas when we are using words. (In practice, I believe the vast majority of confusion about topics such as these stems from using words in ways that to not fully communicate the meaning that was intended.)</source>
          <target state="translated">首先,我想强调一些重要的术语,以帮助澄清我的答案,并确保我们在使用词语时,我们都指的是相同的想法。(在实践中,我相信绝大多数关于这些话题的混乱都是由于用词的方式没有完全传达出想要表达的意思而引起的)。</target>
        </trans-unit>
        <trans-unit id="e346a97905f1958718e4986c56283c42b87749e1" translate="yes" xml:space="preserve">
          <source>To start, here's an example in some C-like language of a function declaration:</source>
          <target state="translated">首先,这里有一个类似C语言的函数声明的例子。</target>
        </trans-unit>
        <trans-unit id="e1bcbcecd757c896953f6667ed593f450f425768" translate="yes" xml:space="preserve">
          <source>Using this example, I want to define some important bits of terminology:</source>
          <target state="translated">用这个例子,我想定义一些重要的术语位。</target>
        </trans-unit>
        <trans-unit id="173ba9fdd42d28dfe6578af600f9727c2b05acf1" translate="yes" xml:space="preserve">
          <source>Very few languages support call by reference, but C++ can do it like this:</source>
          <target state="translated">很少有语言支持引用调用,但C++可以这样做。</target>
        </trans-unit>
        <trans-unit id="bca2025696923c2b4a1ac5b779ea5df55f719431" translate="yes" xml:space="preserve">
          <source>What &quot;call by value&quot; and &quot;call by reference&quot; &lt;em&gt;don't&lt;/em&gt; mean</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo;按价值调用&amp;rdquo;和&amp;ldquo;按引用调用&amp;rdquo; &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不是什么&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;意思&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cea908217bcefc8f05da33bdad1d2e2df1b58721" translate="yes" xml:space="preserve">
          <source>What is the difference between</source>
          <target state="translated">有什么区别呢?</target>
        </trans-unit>
        <trans-unit id="9027be4085fe45396497e506864b7a472bf4d036" translate="yes" xml:space="preserve">
          <source>What's the difference between passing by reference vs. passing by value</source>
          <target state="translated">通过引用传递与通过值传递之间有什么区别?</target>
        </trans-unit>
        <trans-unit id="b2a815ccdb4f1793ac71c8eae2cd6344e45939b5" translate="yes" xml:space="preserve">
          <source>When a parameter is &lt;strong&gt;passed by reference&lt;/strong&gt;, the caller and the callee &lt;strong&gt;use the same variable&lt;/strong&gt; for the parameter. If the callee modifies the parameter variable, the effect is visible to the caller's variable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过引用传递&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参数时&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，调用者和被调用者&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对该参数&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用相同的变量&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果被调用方修改了参数变量，则效果对调用方的变量可见。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b1f6ae5ad14bfc23213aae72cadf5a028c75380d" translate="yes" xml:space="preserve">
          <source>When a parameter is &lt;strong&gt;passed by value&lt;/strong&gt;, the caller and callee have &lt;strong&gt;two independent variables&lt;/strong&gt; with the same value. If the callee modifies the parameter variable, the effect is not visible to the caller.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过value传递&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参数时&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，调用方和被调用方将具有&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;两个&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;具有相同值的&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;独立变量&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果被调用方修改了参数变量，则该效果对调用方不可见。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3d76ca737f825ebe7eeaad751b4f4da27e65af7a" translate="yes" xml:space="preserve">
          <source>When discussing languages that are technically call by value, but where common types in use are reference or pointer types (that is: nearly every modern imperative, object-oriented, or multi-paradigm programming language), I find it's a lot less confusing to simply avoid talking about &lt;em&gt;call by value&lt;/em&gt; or &lt;em&gt;call by reference&lt;/em&gt;. Stick to &lt;strong&gt;call by object sharing&lt;/strong&gt; (or simply &lt;strong&gt;call by object&lt;/strong&gt;) and nobody will be confused. :-)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在讨论从技术上讲是按值调用的语言，但在使用的通用类型是引用或指针类型的语言（即：几乎每种现代命令式，面向对象或多范式编程语言）时，我发现它的混淆要少得多只需避免谈论&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;按值&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;调用&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;按引用调用&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;坚持&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过对象共享&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;进行&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;调用&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（或简单地&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过object进行调用&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;），没有人会感到困惑。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:-)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ecd292a63e3d5222c9a25893600961a65a608b1" translate="yes" xml:space="preserve">
          <source>When passing by ref you are basically passing a pointer to the variable. Pass by value you are passing a copy of the variable.  In basic usage this normally means pass by ref changes to the variable will seen be the calling method and pass by value they wont.</source>
          <target state="translated">当通过ref传递时,你基本上是传递一个指向变量的指针。通过值传递时,你传递的是变量的副本。在基本的用法中,这通常意味着通过 ref 传递变量的变化将被看作是调用方法,而通过值传递变量的变化是不会发生的。</target>
        </trans-unit>
        <trans-unit id="664add438097fbd4307f814de8e62a10f8905588" translate="yes" xml:space="preserve">
          <source>Wikipedia</source>
          <target state="translated">Wikipedia</target>
        </trans-unit>
        <trans-unit id="3dcb9e4a709cd9732c54c1458c1e7ecb4869b88a" translate="yes" xml:space="preserve">
          <source>a parameter passed by reference</source>
          <target state="translated">参量</target>
        </trans-unit>
        <trans-unit id="d942c9b2660856d3052135b0ecb1bde891a4e02f" translate="yes" xml:space="preserve">
          <source>a parameter passed by value?</source>
          <target state="translated">值传递的参数?</target>
        </trans-unit>
        <trans-unit id="c8d883099ccb83527ab26efc085bbc497c87c206" translate="yes" xml:space="preserve">
          <source>know that there are 2 things about &lt;code&gt;name&lt;/code&gt;. Its value which is &lt;code&gt;&quot;John&quot;&lt;/code&gt; and also its location in the memory which is some hexadecimal number maybe like  this: &lt;code&gt;0x7fd5d258dd00&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我知道&lt;/font&gt;&lt;/font&gt; &lt;code&gt;name&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;两点&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它的值为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;John&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，并且它在内存中的位置也是一个十六进制数，可能是这样的：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0x7fd5d258dd00&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92d18d86d3482790e7c13a933b9573aa4d43bece" translate="yes" xml:space="preserve">
          <source>pass by value means how to pass value to a function by making use of arguments. in pass by value we copy the data stored in the variable we specify and it is slower than pass by reference bcse t
he data is copied . of we make changes in the copied data the original data is not affected. nd in pass by refernce or pass by address we send direct link to the variable itself . or passing pointer to a variable. it is faster bcse less time is consumed</source>
          <target state="translated">通过值传递是指通过参数传递值给函数的方式,在通过值传递中,我们复制存储在我们指定的变量中的数据,它比通过引用传递数据要慢,因为数据被复制了。</target>
        </trans-unit>
        <trans-unit id="e1fe0646916dec7e41ba04370658cec4d2b909cf" translate="yes" xml:space="preserve">
          <source>see c# discussion and examples here &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/0f66670z(VS.71).aspx&quot;&gt;link text&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请参阅C＃讨论和示例，在此处&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/0f66670z(VS.71).aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;链接文本&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
