<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/3737139">
    <body>
      <group id="3737139">
        <trans-unit id="7993d4e4339a9951f823a1ec4011472c5a6291cd" translate="yes" xml:space="preserve">
          <source>$function() and $$variable</source>
          <target state="translated">$function()和 $$variable</target>
        </trans-unit>
        <trans-unit id="3e3a0ca736574d1f91ae688e33999dfe63386188" translate="yes" xml:space="preserve">
          <source>'AND' vs '&amp;amp;&amp;amp;' as operator</source>
          <target state="translated">'AND'vs'&amp;amp;&amp;amp;'作为运算符</target>
        </trans-unit>
        <trans-unit id="5a6295090c31e4b3925c06be0971be6d677fd43d" translate="yes" xml:space="preserve">
          <source>'At' symbol before variable name in PHP: @$_POST</source>
          <target state="translated">在PHP中变量名前的'At'符号。@$_POST</target>
        </trans-unit>
        <trans-unit id="e9c5d448b3d5e5e010db7a8adb804ac6db228733" translate="yes" xml:space="preserve">
          <source>+ operator for array in PHP?</source>
          <target state="translated">PHP中的数组+运算符?</target>
        </trans-unit>
        <trans-unit id="c227ebdd5f3beeea9d5c5a6a076da10e0140472a" translate="yes" xml:space="preserve">
          <source>1 + 2 + 4 + 8 + 16 + 32 + 64 + 128 = 255 (1 Byte)</source>
          <target state="translated">1+2+4+8+8+16+32+64+128=255 (1 Byte)</target>
        </trans-unit>
        <trans-unit id="5488c7696397ce77e2af4fe180553a7b24993b01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/questions/21058439&quot;&gt;Is there ever a need to use ampersand in front of an object?&lt;/a&gt; (&amp;amp;$)</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/21058439&quot;&gt;是否需要在对象前面使用&amp;ldquo;＆&amp;rdquo;号？&lt;/a&gt; （＆$）</target>
        </trans-unit>
        <trans-unit id="eada7f96817bd7a2b90e809861fa24564c0019d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;!!&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.logical.php&quot;&gt;Logical Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;!!&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.logical.php&quot;&gt;逻辑运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7bb3d29ee2b002240c6a4f93e8232104e746e66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;!=&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.comparison.php&quot;&gt;Comparison Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;!=&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.comparison.php&quot;&gt;比较运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3d23dad164484d8066d6cc641c9c1c4e85dd2ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;!==&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.comparison.php&quot;&gt;Comparison Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;!==&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.comparison.php&quot;&gt;比较运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="917ce6a8a2352493cd4acee6ac8367890a56aafb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#&lt;/code&gt;&lt;a href=&quot;http://php.net/manual/en/language.basic-syntax.comments.php&quot;&gt;One-line shell-style comment&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#&lt;/code&gt; &lt;a href=&quot;http://php.net/manual/en/language.basic-syntax.comments.php&quot;&gt;单行shell样式的注释&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="68a813b34ff27e8317e1c39bbf29e4dddefe96e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$$&lt;/code&gt;&lt;a href=&quot;http://php.net/manual/en/language.variables.variable.php&quot;&gt;Variable Variables&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;$$&lt;/code&gt; &lt;a href=&quot;http://php.net/manual/en/language.variables.variable.php&quot;&gt;变量变量&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d64d551301b11598a8f0405b95a833ee1fdf9e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.arithmetic.php&quot;&gt;Arithmetic Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;%&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.arithmetic.php&quot;&gt;算术运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa4aa4dfee38529dfa27157680ed5c877b637f7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.logical.php&quot;&gt;Logical Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.logical.php&quot;&gt;逻辑运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d635bfa55921f43e10e29d3ba117376bfc607ada" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;Bitwise Operators&lt;/a&gt; or &lt;a href=&quot;http://secure.php.net/manual/en/language.references.php&quot;&gt;References&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;按位运算符&lt;/a&gt;或&lt;a href=&quot;http://secure.php.net/manual/en/language.references.php&quot;&gt;引用&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eff0b7ebf8743deed2341c52fc674b9cd100b545" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;=&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;Bitwise Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;=&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;按位运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a434fceb9e7181bcb231c63132c81eb9e31033a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;Bitwise Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;按位运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c2ecb06d07264c40892f44ec85aa6b65da5b56b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.comparison.php&quot;&gt;Comparison Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.comparison.php&quot;&gt;比较运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="27f428322cf01954968843c3862d4576ec530017" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;http://php.net/manual/en/language.types.string.php#language.types.string.syntax.heredoc&quot;&gt;Heredoc or Nowdoc&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;http://php.net/manual/en/language.types.string.php#language.types.string.syntax.heredoc&quot;&gt;Heredoc或Nowdoc&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2bf28e1034a39b5a6477608224ffa52592c46733" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;Bitwise Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;按位运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="92824043c3e52dc871603f5d8be5333ec2e19ad1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; Spaceship Operator</source>
          <target state="translated">&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; 太空飞船运营商</target>
        </trans-unit>
        <trans-unit id="ac662ede3feb24d931799dae45e1ada118a606af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.comparison.php&quot;&gt;Comparison Operators&lt;/a&gt; (since PHP 7.0)</source>
          <target state="translated">&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; 比较运算符 （自PHP 7.0起）</target>
        </trans-unit>
        <trans-unit id="f75497470f169c8682ee4625ba62049463241b63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;?&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.basic-syntax.php&quot;&gt;Opening and Closing tags&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;?&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.basic-syntax.php&quot;&gt;开启和关闭标签&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7590546cdf1f9568b9b5e9fe0850a79de2b752f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;?=&lt;/code&gt;&lt;a href=&quot;http://php.net/manual/en/ini.core.php#ini.short-open-tag&quot;&gt;Short Open Tags&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;?=&lt;/code&gt; &lt;a href=&quot;http://php.net/manual/en/ini.core.php#ini.short-open-tag&quot;&gt;短标签&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9754655ba4ba8aa2a61c0fddf5a06a56f4ba9d93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;**&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/migration56.new-features.php#migration56.new-features.exponentiation&quot;&gt;Exponentiation&lt;/a&gt; (since PHP 5.6)</source>
          <target state="translated">&lt;code&gt;**&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/migration56.new-features.php#migration56.new-features.exponentiation&quot;&gt;幂&lt;/a&gt; （自PHP 5.6起）</target>
        </trans-unit>
        <trans-unit id="70055dd0e4b6aff1607e546970a4a332359f3189" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;++&lt;/code&gt; and &lt;code&gt;--&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.increment.php&quot;&gt;Incrementing/Decrementing Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;++&lt;/code&gt; 和 &lt;code&gt;--&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.increment.php&quot;&gt;递增/递减运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e86bc0ed39959214b9130ce141d8b7d2706eca58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;++&lt;/code&gt; increment operator</source>
          <target state="translated">&lt;code&gt;++&lt;/code&gt; 增量运算符</target>
        </trans-unit>
        <trans-unit id="1d8c63df4e63075ce8d3c35c7715b0c6fb9ff132" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.arithmetic.php&quot;&gt;Arithmetic Operators&lt;/a&gt;, &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.array.php&quot;&gt;Array Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.arithmetic.php&quot;&gt;算术运算符&lt;/a&gt; ， &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.array.php&quot;&gt;数组运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="52cbfd3189a5439ab3d3dc7349f825dedc8998bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+=&lt;/code&gt; and &lt;code&gt;-=&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.assignment.php&quot;&gt;Assignment Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;+=&lt;/code&gt; 和 &lt;code&gt;-=&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.assignment.php&quot;&gt;赋值运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7fd693810716a88a96c4cd6de6ee454e214ca64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;,&lt;/code&gt;&lt;a href=&quot;http://php.net/manual/en/functions.arguments.php&quot;&gt;Function Arguments&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;,&lt;/code&gt; &lt;a href=&quot;http://php.net/manual/en/functions.arguments.php&quot;&gt;功能参数&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="93080e1c3c92ed3829562482b98a5e1b2d0496a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;,&lt;/code&gt;&lt;a href=&quot;http://php.net/manual/en/language.variables.scope.php&quot;&gt;Variable Declarations&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;,&lt;/code&gt; &lt;a href=&quot;http://php.net/manual/en/language.variables.scope.php&quot;&gt;变量声明&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16c9dda8e5b0ab94ff7799f44611b67358aa67f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.oop5.php&quot;&gt;Classes And Objects&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;-&amp;gt;&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.oop5.php&quot;&gt;类和对象&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c524f4d24725ad79746c77610af7544281625da9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--&lt;/code&gt; decrement operator</source>
          <target state="translated">&lt;code&gt;--&lt;/code&gt; 递减运算符</target>
        </trans-unit>
        <trans-unit id="fad5d149059e2409af5f3e10b101929fb19120ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;...&lt;/code&gt;&lt;a href=&quot;http://php.net/manual/en/functions.arguments.php#functions.variable-arg-list&quot;&gt;Argument unpacking&lt;/a&gt; (since PHP 5.6)</source>
          <target state="translated">&lt;code&gt;...&lt;/code&gt; &lt;a href=&quot;http://php.net/manual/en/functions.arguments.php#functions.variable-arg-list&quot;&gt;参数解压缩&lt;/a&gt; （自PHP 5.6起）</target>
        </trans-unit>
        <trans-unit id="0985404380f922be1c64d731eb598874a1721a91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.string.php&quot;&gt;String Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;.&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.string.php&quot;&gt;字符串运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ee9ada49962b880c4cb8e409eb1dcb49a751404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.=&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.assignment.php&quot;&gt;Assignment Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;.=&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.assignment.php&quot;&gt;赋值运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7334ce807e9c998eeac998ea99567f77e8055538" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; when both operands are equal</source>
          <target state="translated">两个操作数相等时为 &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee20c800ee537a4b6d02f9770d41e98ce3515ece" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;::&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.oop5.paamayim-nekudotayim.php&quot;&gt;Scope Resolution Operator&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;::&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.oop5.paamayim-nekudotayim.php&quot;&gt;范围解析运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a65809703b264942bb177502ab3bd6aa36678d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/control-structures.alternative-syntax.php&quot;&gt;Alternative syntax for control structures&lt;/a&gt;, &lt;a href=&quot;http://php.net/manual/en/language.operators.comparison.php#language.operators.comparison.ternary&quot;&gt;Ternary Operator&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;:&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/control-structures.alternative-syntax.php&quot;&gt;控制结构的替代语法&lt;/a&gt; ， &lt;a href=&quot;http://php.net/manual/en/language.operators.comparison.php#language.operators.comparison.ternary&quot;&gt;三元运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="319e6c22129765e58d861b70e64cd5b6f16b7359" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:?&lt;/code&gt;&lt;a href=&quot;http://php.net/manual/en/migration71.new-features.php#migration71.new-features.nullable-types&quot;&gt;Nullable return types&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;:?&lt;/code&gt; &lt;a href=&quot;http://php.net/manual/en/migration71.new-features.php#migration71.new-features.nullable-types&quot;&gt;可空的返回类型&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="92b692ae82c8a43deaa238ef37646804b90429b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&amp;amp;&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.references.php&quot;&gt;References&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;=&amp;amp;&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.references.php&quot;&gt;References&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4b8548995f3b1da2cb7b2b1254c16429dcf712a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&amp;gt;&lt;/code&gt; Is the symbol we humans decided to use to separate &lt;code&gt;&quot;Key&quot; =&amp;gt; &quot;Value&quot;&lt;/code&gt; pairs in Associative Arrays.</source>
          <target state="translated">&lt;code&gt;=&amp;gt;&lt;/code&gt; 是人类决定在关联数组中用于分隔 &lt;code&gt;&quot;Key&quot; =&amp;gt; &quot;Value&quot;&lt;/code&gt; 对的符号。</target>
        </trans-unit>
        <trans-unit id="8f72c969285c97f5d37bc3b9220891f376d2deb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&amp;gt;&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.types.array.php&quot;&gt;Arrays&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;=&amp;gt;&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.types.array.php&quot;&gt;Arrays&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9eb18258f08f750cf72f44ba62785b077f44dd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.assignment.php&quot;&gt;Assignment Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.assignment.php&quot;&gt;赋值运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="17932882fdcfdefc35f9f76bd35b48454dd46bbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;==&lt;/code&gt;  is used for check equality &lt;strong&gt;without&lt;/strong&gt; considering variable &lt;strong&gt;data-type&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;==&lt;/code&gt; 用于检查相等性&lt;strong&gt;而不&lt;/strong&gt;考虑变量&lt;strong&gt;数据类型&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="44e5f36606b216ccfe0b681bb506ffbfd857a2c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;==&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.comparison.php&quot;&gt;Comparison Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;==&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.comparison.php&quot;&gt;比较运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ade911a427b66c73a45cf6e1e8011b56e355b23f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;===&lt;/code&gt; is used for check equality for &lt;strong&gt;both&lt;/strong&gt; the variable &lt;strong&gt;value&lt;/strong&gt; and &lt;strong&gt;data-type&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;===&lt;/code&gt; 用于检查变量&lt;strong&gt;值&lt;/strong&gt;和&lt;strong&gt;数据类型的&lt;/strong&gt;相等性</target>
        </trans-unit>
        <trans-unit id="41999a8dcc530f9cf20dc80df13e2f5e4eace09c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;===&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.comparison.php&quot;&gt;Comparison Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;===&lt;/code&gt; 比较运算符</target>
        </trans-unit>
        <trans-unit id="1db2f80220cd4f768948d9d05bb0438a2dc3d725" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?:&lt;/code&gt;&lt;a href=&quot;http://php.net/manual/en/language.operators.comparison.php#language.operators.comparison.ternary&quot;&gt;Ternary Operator&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;?:&lt;/code&gt; &lt;a href=&quot;http://php.net/manual/en/language.operators.comparison.php#language.operators.comparison.ternary&quot;&gt;三元运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="13d4ef41a26bd43ec016dd4b1daf167aecf22b33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;??&lt;/code&gt;&lt;a href=&quot;http://php.net/manual/en/migration71.new-features.php#migration71.new-features.nullable-types&quot;&gt;Null Coalesce Operator&lt;/a&gt; (since PHP 7)</source>
          <target state="translated">&lt;code&gt;??&lt;/code&gt; &lt;a href=&quot;http://php.net/manual/en/migration71.new-features.php#migration71.new-features.nullable-types&quot;&gt;空合并运算符&lt;/a&gt; （自PHP 7起）</target>
        </trans-unit>
        <trans-unit id="3069a7e1bbf9eb79a5289a078a9d1d3c6d239992" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?string&lt;/code&gt;&lt;code&gt;?int&lt;/code&gt;&lt;code&gt;?array&lt;/code&gt;&lt;code&gt;?bool&lt;/code&gt;&lt;code&gt;?float&lt;/code&gt;&lt;a href=&quot;http://php.net/manual/en/migration71.new-features.php#migration71.new-features.nullable-types&quot;&gt;Nullable return type declaration&lt;/a&gt; (since PHP 7.1)</source>
          <target state="translated">&lt;code&gt;?string&lt;/code&gt; &lt;code&gt;?int&lt;/code&gt; &lt;code&gt;?array&lt;/code&gt; &lt;code&gt;?bool&lt;/code&gt; &lt;code&gt;?float&lt;/code&gt; &lt;a href=&quot;http://php.net/manual/en/migration71.new-features.php#migration71.new-features.nullable-types&quot;&gt;可空的返回类型声明&lt;/a&gt; （自PHP 7.1起）</target>
        </trans-unit>
        <trans-unit id="fe520b3af71ef64348218bde9e00a9a1a16e1756" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.errorcontrol.php&quot;&gt;Error Control Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;@&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.errorcontrol.php&quot;&gt;错误控制运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00562ea1c4bc043abda35fcfdfbb06bf2b30bfe0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[]&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.types.array.php&quot;&gt;Arrays&lt;/a&gt; (short syntax since PHP 5.4)</source>
          <target state="translated">&lt;code&gt;[]&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.types.array.php&quot;&gt;数组&lt;/a&gt; （自PHP 5.4起的简短语法）</target>
        </trans-unit>
        <trans-unit id="6620e7ea4c55157d97634a765822e553018aa109" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\&lt;/code&gt;&lt;a href=&quot;http://php.net/namespaces&quot;&gt;Namespaces&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;\&lt;/code&gt;&lt;a href=&quot;http://php.net/namespaces&quot;&gt;Namespaces&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="551f8384dc36ab07ecb51b4a9bd557bcc936ce52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;Bitwise Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;^&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;按位运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0326fc3502d304e03367a2a93da29c6b129c3261" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_&lt;/code&gt;&lt;strong&gt;&lt;a href=&quot;http://php.net/function.gettext#refsect1-function.gettext-notes&quot;&gt;Alias for gettext()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;_&lt;/code&gt; &lt;strong&gt;&lt;a href=&quot;http://php.net/function.gettext#refsect1-function.gettext-notes&quot;&gt;gettext（）的别名&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="76f9a89a486642f57768f1d1b0f187e9c4da9434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__CLASS__&lt;/code&gt;: The class name. (Added in PHP 4.3.0) As of PHP 5 this constant returns the class name as it was declared (case-sensitive). In PHP 4 its value is always lowercased. The class name includes the namespace it was declared in (e.g. &lt;code&gt;Foo\Bar&lt;/code&gt;). Note that as of PHP 5.4 &lt;code&gt;__CLASS__&lt;/code&gt; works also in traits. When used in a trait method, &lt;code&gt;__CLASS__&lt;/code&gt; is the name of the class the trait is used in.</source>
          <target state="translated">&lt;code&gt;__CLASS__&lt;/code&gt; ：类名称。 （在PHP 4.3.0中添加）从PHP 5开始，此常量返回声明的类名（区分大小写）。 在PHP 4中，其值始终为小写。 类名包括在其中声明的名称空间（例如 &lt;code&gt;Foo\Bar&lt;/code&gt; ）。 请注意，自PHP 5.4起， &lt;code&gt;__CLASS__&lt;/code&gt; 在特征中也起作用。 在特征方法中使用时， &lt;code&gt;__CLASS__&lt;/code&gt; 是使用特征的类的名称。</target>
        </trans-unit>
        <trans-unit id="5235affaba088b9ac0a0b938768f1a7f5a212353" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__DIR__&lt;/code&gt;: The directory of the file. If used inside an include, the directory of the included file is returned. This is equivalent to &lt;code&gt;dirname(__FILE__)&lt;/code&gt;. This directory name does not have a trailing slash unless it is the root directory. (Added in PHP 5.3.0.)</source>
          <target state="translated">&lt;code&gt;__DIR__&lt;/code&gt; ：文件目录。 如果在include中使用，则返回包含文件的目录。 这等效于 &lt;code&gt;dirname(__FILE__)&lt;/code&gt; 。 除非它是根目录，否则此目录名称不带斜杠。 （在PHP 5.3.0中添加。）</target>
        </trans-unit>
        <trans-unit id="cbfdd0cb63dffd2e39acb44d11bea29d8b9d698b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__FILE__&lt;/code&gt;: The full path and filename of the file. If used inside an include, the name of the included file is returned. Since PHP 4.0.2, &lt;code&gt;__FILE__&lt;/code&gt; always contains an absolute path with symlinks resolved whereas in older versions it contained relative path under some circumstances.</source>
          <target state="translated">&lt;code&gt;__FILE__&lt;/code&gt; ：文件的完整路径和文件名。 如果在include中使用，则返回包含文件的名称。 从PHP 4.0.2开始， &lt;code&gt;__FILE__&lt;/code&gt; 始终包含已解析符号链接的绝对路径，而在旧版本中，在某些情况下，它包含相对路径。</target>
        </trans-unit>
        <trans-unit id="db1be3e8bdf28ac16e34525ad387e001af30023c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__FUNCTION__&lt;/code&gt;: The function name. (Added in PHP 4.3.0) As of PHP 5 this constant returns the function name as it was declared (case-sensitive). In PHP 4 its value is always lowercased.</source>
          <target state="translated">&lt;code&gt;__FUNCTION__&lt;/code&gt; ：函数名称。 （在PHP 4.3.0中添加）从PHP 5开始，此常量返回声明的函数名称（区分大小写）。 在PHP 4中，其值始终为小写。</target>
        </trans-unit>
        <trans-unit id="ac27ed863d0e1a0ac07c85bc88cf3be9b6159ad5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__LINE__&lt;/code&gt;: The current line number of the file.</source>
          <target state="translated">&lt;code&gt;__LINE__&lt;/code&gt; ：文件的当前行号。</target>
        </trans-unit>
        <trans-unit id="9f9505b76aa8d628d76e21c991c2566078707bc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__METHOD__&lt;/code&gt;: The class method name. (Added in PHP 5.0.0) The method name is returned as it was declared (case-sensitive).</source>
          <target state="translated">&lt;code&gt;__METHOD__&lt;/code&gt; ：类方法名称。 （在PHP 5.0.0中添加）方法名称被声明时返回（区分大小写）。</target>
        </trans-unit>
        <trans-unit id="cb4f361b9ae9dfa747f67bf70b7fac4205bf6c5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__NAMESPACE__&lt;/code&gt;: The name of the current namespace (case-sensitive). This constant is defined in compile-time (Added in PHP 5.3.0).</source>
          <target state="translated">&lt;code&gt;__NAMESPACE__&lt;/code&gt; ：当前名称空间的名称（区分大小写）。 该常量在编译时定义（在PHP 5.3.0中添加）。</target>
        </trans-unit>
        <trans-unit id="5bd3e46393183fd7697700ccb2dd6f819474fde5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__TRAIT__&lt;/code&gt;: The trait name. (Added in PHP 5.4.0) As of PHP 5.4 this constant returns the trait as it was declared (case-sensitive). The trait name includes the namespace it was declared in (e.g. &lt;code&gt;Foo\Bar&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;__TRAIT__&lt;/code&gt; ：性状名称。 （在PHP 5.4.0中添加）从PHP 5.4开始，此常量返回声明的特征（区分大小写）。 特征名称包括在其中声明的名称空间（例如 &lt;code&gt;Foo\Bar&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3e2471a0826d0d3e3c9dd0aedc4fc84c8e26ae95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;`&lt;/code&gt;&lt;a href=&quot;http://php.net/manual/en/language.operators.execution.php&quot;&gt;Execution Operator&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;`&lt;/code&gt; &lt;a href=&quot;http://php.net/manual/en/language.operators.execution.php&quot;&gt;执行运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f815d4c4bdc093509e2ee6e9cbf571a279b56e36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;and&lt;/code&gt; operator and &lt;code&gt;or&lt;/code&gt; operator have lower precedence than assignment operator &lt;code&gt;=&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;and&lt;/code&gt; 运算符和 &lt;code&gt;or&lt;/code&gt; 运算符的优先级低于赋值运算符 &lt;code&gt;=&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="95334f1bef7a29b6fb70626da90260a3f9eac917" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if ($a == '5')&lt;/code&gt; - will evaluate to true, because while comparing this both value PHP internally convert that string value into integer and then compare both values</source>
          <target state="translated">&lt;code&gt;if ($a == '5')&lt;/code&gt; -将计算为true，因为在比较这两个值时，PHP在内部将字符串值转换为整数，然后比较这两个值</target>
        </trans-unit>
        <trans-unit id="2b119dcf3dd4551b6eb196b4427c968415b683a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if ($a == 5)&lt;/code&gt;  - will evaluate to true</source>
          <target state="translated">&lt;code&gt;if ($a == 5)&lt;/code&gt; -将评估为true</target>
        </trans-unit>
        <trans-unit id="b3ee2108853b7a22564b868a842ea33e463cc821" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if ($a === '5')&lt;/code&gt; - will evaluate to false, because value is 5, but this value 5 is not an integer.</source>
          <target state="translated">&lt;code&gt;if ($a === '5')&lt;/code&gt; -由于值是5，因此将计算为false，但该值5不是整数。</target>
        </trans-unit>
        <trans-unit id="46b683978d8ab2b721c073093668e2c93220e823" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if ($a === 5)&lt;/code&gt; - will evaluate to true</source>
          <target state="translated">&lt;code&gt;if ($a === 5)&lt;/code&gt; -将评估为true</target>
        </trans-unit>
        <trans-unit id="92123cccd9603eee85fb8c0b6e7d9a9c9f9b32d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;instanceof&lt;/code&gt; is used to determine whether a PHP variable is an instantiated object of a certain class.</source>
          <target state="translated">&lt;code&gt;instanceof&lt;/code&gt; 用于确定PHP变量是否是某个类的实例化对象。</target>
        </trans-unit>
        <trans-unit id="42ecbd825fb8b79c9c411f10de1dba42154c177d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{}&lt;/code&gt; Curly braces</source>
          <target state="translated">&lt;code&gt;{}&lt;/code&gt; 花括号</target>
        </trans-unit>
        <trans-unit id="31b521c0ef652c463ae010a0ab138d218ca9f945" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;|&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;Bitwise Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;|&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;按位运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f97a08980429242aa82cfa2147f734518c56d6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;||&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.logical.php&quot;&gt;Logical Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;||&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.logical.php&quot;&gt;逻辑运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fe581da8138184215f8801769f237cabec2ca755" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;Bitwise Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;~&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;按位运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="599a9c36a10a02df9bded37de71dce467e55ed67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;! $a :&lt;/strong&gt; TRUE if $a is not TRUE.</source>
          <target state="translated">&lt;strong&gt;！&lt;/strong&gt; &lt;strong&gt;$ a：&lt;/strong&gt;如果$ a不为TRUE，则为TRUE。</target>
        </trans-unit>
        <trans-unit id="955edb8191e903a98238119ae88f4c8bd2892e0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a != $b :&lt;/strong&gt; TRUE if $a is not equal to $b after type juggling.</source>
          <target state="translated">&lt;strong&gt;$ a！= $ b：&lt;/strong&gt;如果类型变戏法后$ a不等于$ b，则为TRUE。</target>
        </trans-unit>
        <trans-unit id="583ea82ff382ffcbff639da82eb6f95055ba0016" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a != $b&lt;/strong&gt; : TRUE if $a is not equal to $b.</source>
          <target state="translated">&lt;strong&gt;$ a！= $ b&lt;/strong&gt; ：如果$ a不等于$ b，则为TRUE。</target>
        </trans-unit>
        <trans-unit id="00e2ef064bcc62ced58c4dd02d605895a860b276" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a !== $b   :&lt;/strong&gt; TRUE if $a is not equal to $b, or they are not of the same type.</source>
          <target state="translated">&lt;strong&gt;$ a！== $ b：&lt;/strong&gt;如果$ a不等于$ b或它们不是同一类型，则为TRUE。</target>
        </trans-unit>
        <trans-unit id="a1fc7882b775ecaa949d6cfa1d05fc1f29a93c5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a !== $b&lt;/strong&gt; : TRUE if $a is not identical to $b.</source>
          <target state="translated">&lt;strong&gt;$ a！== $ b&lt;/strong&gt; ：如果$ a与$ b不同，则为TRUE。</target>
        </trans-unit>
        <trans-unit id="60b72826865eac38ba84de8475f99d22f5a5cce0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a % $b&lt;/strong&gt; : Remainder of $a divided by $b.</source>
          <target state="translated">&lt;strong&gt;$ a％$ b&lt;/strong&gt; ： &lt;strong&gt;$ a的&lt;/strong&gt;余数除以$ b。</target>
        </trans-unit>
        <trans-unit id="720c31b44e79f276bf20b658d8c91bf64df00f72" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a %= $b&lt;/strong&gt; : Same as $a = $a % $b</source>
          <target state="translated">&lt;strong&gt;$ a％= $ b&lt;/strong&gt; ：与$ a = $ a％$ b相同</target>
        </trans-unit>
        <trans-unit id="4ea41c2a80f0ce99d4307bf6065a31ed94b45b87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;amp; $b&lt;/strong&gt; : Bits that are set in both $a and $b are set.</source>
          <target state="translated">&lt;strong&gt;$ a＆$ b&lt;/strong&gt; ：设置在$ a和$ b中设置的位。</target>
        </trans-unit>
        <trans-unit id="a31b4b879ff64082ee5c09aa5ce08a9bd9fc3b3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;amp;&amp;amp; $b :&lt;/strong&gt; TRUE if both $a and $b are TRUE.</source>
          <target state="translated">&lt;strong&gt;$ a &amp;amp;&amp;amp; $ b：&lt;/strong&gt;如果$ a和$ b都为TRUE，则为TRUE。</target>
        </trans-unit>
        <trans-unit id="f70947a5436125e25614db51b46d7b3df94bcbfa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;amp;= $b&lt;/strong&gt; : Same as $a = $a &amp;amp; $b</source>
          <target state="translated">&lt;strong&gt;$ a＆= $ b&lt;/strong&gt; ：与$ a = $ a＆$ b相同</target>
        </trans-unit>
        <trans-unit id="cb1bbee58a0027b7bde3478a4a38ea18584e9e31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;gt; $b&lt;/strong&gt; : TRUE if $a is strictly greater than $b.</source>
          <target state="translated">&lt;strong&gt;$ a&amp;gt; $ b&lt;/strong&gt; ：如果$ a严格大于$ b，则为TRUE。</target>
        </trans-unit>
        <trans-unit id="29f69a9317d2e322bda7e7eb5ff211d9b02a1957" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;gt;&amp;gt; $b&lt;/strong&gt; : Shift the bits of $a $b steps to the right (each step means &quot;divide by two&quot;)</source>
          <target state="translated">&lt;strong&gt;$ a &amp;gt;&amp;gt; $ b&lt;/strong&gt; ：将$ a $ b步骤的位向右移动（每个步骤表示&amp;ldquo;除以二&amp;rdquo;）</target>
        </trans-unit>
        <trans-unit id="f55ce30f980963036fa97d2ba83abfa12a0b93c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;gt;&amp;gt;= $b&lt;/strong&gt; : Same as $a = $a &amp;gt;&amp;gt; $b</source>
          <target state="translated">&lt;strong&gt;$ a &amp;gt;&amp;gt; = $ b&lt;/strong&gt; ：与$ a = $ a &amp;gt;&amp;gt; $ b相同</target>
        </trans-unit>
        <trans-unit id="4d00637fe2be2fd360274eeb9eb5398d92ffee81" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;gt;= $b&lt;/strong&gt; : TRUE if $a is greater than or equal to $b.</source>
          <target state="translated">&lt;strong&gt;$ a&amp;gt; = $ b&lt;/strong&gt; ：如果$ a大于或等于$ b，则为TRUE。</target>
        </trans-unit>
        <trans-unit id="cf231033d1c7917efedf546ed20a8744c8bbb253" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;lt; $b&lt;/strong&gt; : TRUE if $a is strictly less than $b.</source>
          <target state="translated">&lt;strong&gt;$ a &amp;lt;$ b&lt;/strong&gt; ：如果$ a严格小于$ b，则为TRUE。</target>
        </trans-unit>
        <trans-unit id="cf2f5379cb4caa075c608a3c4486ce5fc28c86cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;lt;&amp;gt; $b :&lt;/strong&gt; TRUE if $a is not equal to $b after type juggling.</source>
          <target state="translated">&lt;strong&gt;$ a &amp;lt;&amp;gt; $ b：&lt;/strong&gt;如果类型变戏法后$ a不等于$ b，则为TRUE。</target>
        </trans-unit>
        <trans-unit id="d0e24f6d525b09750163a634e74a9d0c1b040d5c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;lt;&amp;gt; $b&lt;/strong&gt; : TRUE if $a is not equal to $b.</source>
          <target state="translated">&lt;strong&gt;$ a &amp;lt;&amp;gt; $ b&lt;/strong&gt; ：如果$ a不等于$ b，则为TRUE。</target>
        </trans-unit>
        <trans-unit id="65506418d88c3e2d37fb6b91606f5ea5facd276d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;lt;&amp;lt; $b&lt;/strong&gt; : Shift the bits of $a $b steps to the left (each step means &quot;multiply by two&quot;)</source>
          <target state="translated">&lt;strong&gt;$ a &amp;lt;&amp;lt; $ b&lt;/strong&gt; ：将$ a $ b步骤的位向左移动（每个步骤表示&amp;ldquo;乘以2&amp;rdquo;）</target>
        </trans-unit>
        <trans-unit id="3f43a1cd275c9fa2d99f8039a8f4d8f6bf449357" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;lt;&amp;lt;= $b&lt;/strong&gt; : Same as $a = $a &amp;lt;&amp;lt; $b</source>
          <target state="translated">&lt;strong&gt;$ a &amp;lt;&amp;lt; = $ b&lt;/strong&gt; ：与$ a = $ a &amp;lt;&amp;lt; $ b相同</target>
        </trans-unit>
        <trans-unit id="9561be35b589e9713f2754fa8c2d422b19ede11a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;lt;= $b&lt;/strong&gt; : TRUE if $a is less than or equal to $b.</source>
          <target state="translated">&lt;strong&gt;$ a &amp;lt;= $ b&lt;/strong&gt; ：如果$ a小于或等于$ b，则为TRUE。</target>
        </trans-unit>
        <trans-unit id="9aa73731ccf9c7a81cdb22010aec69767417e285" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;lt;=&amp;gt; $b&lt;/strong&gt; : An integer less than, equal to, or greater than zero when $a is respectively less than, equal to, or greater than $b. Available as of PHP 7.</source>
          <target state="translated">&lt;strong&gt;$ a &amp;lt;=&amp;gt; $ b&lt;/strong&gt; ：当$ a分别小于，等于或大于$ b时，小于，等于或大于零的整数。 自PHP 7起可用。</target>
        </trans-unit>
        <trans-unit id="c3f1e4182ffb1d0d9b2d2129deea575da63c068f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a * $b&lt;/strong&gt; : Product of $a and $b.</source>
          <target state="translated">&lt;strong&gt;$ a * $ b&lt;/strong&gt; ：$ a和$ b的乘积。</target>
        </trans-unit>
        <trans-unit id="d33e4598b8bef6c3b45717e4b99c4e30d48bc495" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a ** $b&lt;/strong&gt; : Result of raising $a to the $b'th power (introduced in PHP 5.6)</source>
          <target state="translated">&lt;strong&gt;$ a ** $ b&lt;/strong&gt; ：将$ a提高到第b次幂的结果（在PHP 5.6中引入）</target>
        </trans-unit>
        <trans-unit id="3ec8302278fed692595a4b4f194311f6c00ea9ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a **= $b&lt;/strong&gt; : Same as $a = $a ** $b</source>
          <target state="translated">&lt;strong&gt;$ a ** = $ b&lt;/strong&gt; ：与$ a = $ a ** $ b相同</target>
        </trans-unit>
        <trans-unit id="2e589312eb3646f517ada1606a31418e7e19b40d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a *= $b&lt;/strong&gt; : Same as $a = $a * $b</source>
          <target state="translated">&lt;strong&gt;$ a * = $ b&lt;/strong&gt; ：与$ a = $ a * $ b相同</target>
        </trans-unit>
        <trans-unit id="3fa5dd25b0a6853d1f8ce2a305648a3b73ca667a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a + $b&lt;/strong&gt; : Sum of $a and $b.</source>
          <target state="translated">&lt;strong&gt;$ a + $ b&lt;/strong&gt; ：$ a和$ b之和。</target>
        </trans-unit>
        <trans-unit id="179d0831f29c67b208972815098c0e33feb59041" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a + $b&lt;/strong&gt; : Union of $a and $b.</source>
          <target state="translated">&lt;strong&gt;$ a + $ b&lt;/strong&gt; ：$ a和$ b的并集。</target>
        </trans-unit>
        <trans-unit id="73e820866297c468d7c1403a31a7e19e6a571114" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a += $b&lt;/strong&gt; : Same as $a = $a + $b</source>
          <target state="translated">&lt;strong&gt;$ a + = $ b&lt;/strong&gt; ：与$ a = $ a + $ b相同</target>
        </trans-unit>
        <trans-unit id="4675f045290fa7a0478fe10d4085fbd9249eb1ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a - $b&lt;/strong&gt; : Difference of $a and $b.</source>
          <target state="translated">&lt;strong&gt;$ a-$ b&lt;/strong&gt; ：$ a和$ b之差。</target>
        </trans-unit>
        <trans-unit id="a8bbc74dfb95cca038219e62e75c6b03f73b8861" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a -= $b&lt;/strong&gt; : Same as $a = $a - $b</source>
          <target state="translated">&lt;strong&gt;$&lt;/strong&gt; a- &lt;strong&gt;= $ b&lt;/strong&gt; ：与$ a = $ a- &lt;strong&gt;$ b&lt;/strong&gt;相同</target>
        </trans-unit>
        <trans-unit id="9f2442658f0e5c56372460e6bf8509d09b3e9a2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a . $b&lt;/strong&gt; : Concatenation of $a and $b.</source>
          <target state="translated">&lt;strong&gt;$ a。&lt;/strong&gt; &lt;strong&gt;$ b&lt;/strong&gt; ：$ a和$ b的串联。</target>
        </trans-unit>
        <trans-unit id="7946b0c477eb5e95b34d0725218786c3c5533101" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a .= $b&lt;/strong&gt; : Same as $a = $a . $b</source>
          <target state="translated">&lt;strong&gt;$ a。= $ b&lt;/strong&gt; ：与$ a = $ a相同。 $ b</target>
        </trans-unit>
        <trans-unit id="ce56deb8a68ef52d875888b48e23047e7b7849f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a / $b&lt;/strong&gt; : Quotient of $a and $b.</source>
          <target state="translated">&lt;strong&gt;$ a / $ b&lt;/strong&gt; ：$ a和$ b的商。</target>
        </trans-unit>
        <trans-unit id="24305b39d6e7107b6387c6616d396714a686c78f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a /= $b&lt;/strong&gt; : Same as $a = $a / $b</source>
          <target state="translated">&lt;strong&gt;$ a / = $ b&lt;/strong&gt; ：与$ a = $ a / $ b相同</target>
        </trans-unit>
        <trans-unit id="0d5e35c27d1ffc2ea1cb416120d21cae3272590f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a = $b&lt;/strong&gt; : The value of $b is assigned to $a</source>
          <target state="translated">&lt;strong&gt;$ a = $ b&lt;/strong&gt; ： &lt;strong&gt;$ b&lt;/strong&gt;的值分配给$ a</target>
        </trans-unit>
        <trans-unit id="cf32777ea5dfd28ff12cc6f8f9e63a8a92bddf1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a == $b :&lt;/strong&gt; TRUE if $a is equal to $b after type juggling.</source>
          <target state="translated">&lt;strong&gt;$ a == $ b：&lt;/strong&gt;如果类型变戏法后$ a等于$ b，则为TRUE。</target>
        </trans-unit>
        <trans-unit id="1d159487b8b14de4d2cfe28e785be1e955ac5c5d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a == $b&lt;/strong&gt; : TRUE if $a and $b have the same key/value pairs.</source>
          <target state="translated">&lt;strong&gt;$ a == $ b&lt;/strong&gt; ：如果$ a和$ b具有相同的键/值对，则为TRUE。</target>
        </trans-unit>
        <trans-unit id="b4651c65250010a35b1d7dd86db7938701de7212" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a === $b   :&lt;/strong&gt; TRUE if $a is equal to $b, and they are of the same type.</source>
          <target state="translated">&lt;strong&gt;$ a === $ b：&lt;/strong&gt;如果$ a等于$ b并且它们是同一类型，则为TRUE。</target>
        </trans-unit>
        <trans-unit id="dae00ef0f9b997c18ab208c8470bb36c781e4ece" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a === $b&lt;/strong&gt; : TRUE if $a and $b have the same key/value pairs in the same order and of the same types.</source>
          <target state="translated">&lt;strong&gt;$ a === $ b&lt;/strong&gt; ：如果$ a和$ b具有相同顺序和相同类型的相同键/值对，则为TRUE。</target>
        </trans-unit>
        <trans-unit id="159517afe9bf0c8f686d7ac9957ec81f5acb1104" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a ? $b : $c&lt;/strong&gt; : if $a return $b else return $c (&lt;a href=&quot;http://php.net/manual/en/language.operators.comparison.php#language.operators.comparison.ternary&quot;&gt;&lt;strong&gt;ternary operator&lt;/strong&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;strong&gt;$ a？&lt;/strong&gt; &lt;strong&gt;$ b：$ c&lt;/strong&gt; ：如果$ a返回$ b否则返回$ c（ &lt;a href=&quot;http://php.net/manual/en/language.operators.comparison.php#language.operators.comparison.ternary&quot;&gt;&lt;strong&gt;三元运算符&lt;/strong&gt;&lt;/a&gt; ）</target>
        </trans-unit>
        <trans-unit id="4192da2fc36e47c3207bbe2c00b7e23a154ba124" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a ?? $c&lt;/strong&gt; : Same as $a ? $a : $c (&lt;a href=&quot;http://php.net/manual/en/language.operators.comparison.php#language.operators.comparison.coalesce&quot;&gt;&lt;strong&gt;null coalescing operator&lt;/strong&gt;&lt;/a&gt; - requires PHP&amp;gt;=7)</source>
          <target state="translated">&lt;strong&gt;$ a ??&lt;/strong&gt; &lt;strong&gt;$ c&lt;/strong&gt; ：与$ a相同？ $ a：$ c（ &lt;a href=&quot;http://php.net/manual/en/language.operators.comparison.php#language.operators.comparison.coalesce&quot;&gt;&lt;strong&gt;空合并运算符&lt;/strong&gt;&lt;/a&gt; -需要PHP&amp;gt; = 7）</target>
        </trans-unit>
        <trans-unit id="338264d1b648ea92d10106e40aba11c441dc4f46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a ^ $b&lt;/strong&gt; : Bits that are set in $a or $b but not both are set.</source>
          <target state="translated">&lt;strong&gt;$ a ^ $ b&lt;/strong&gt; ：$ a或$ b中设置的位，但未同时设置。</target>
        </trans-unit>
        <trans-unit id="8db0561cc74aac14b0b5476212fbf890cc94c52b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a ^= $b&lt;/strong&gt; : Same as $a = $a ^ $b</source>
          <target state="translated">&lt;strong&gt;$ a ^ = $ b&lt;/strong&gt; ：与$ a = $ a ^ $ b相同</target>
        </trans-unit>
        <trans-unit id="d37c6785c394972b1b338d085fadb5295b81ca65" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a and $b :&lt;/strong&gt; TRUE if both $a and $b are TRUE.</source>
          <target state="translated">&lt;strong&gt;$ a和$ b：&lt;/strong&gt;如果$ a和$ b都为TRUE，则为TRUE。</target>
        </trans-unit>
        <trans-unit id="1e9c1463803066607f39c7713f3e6ba3f8d11cdf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a or $b :&lt;/strong&gt; TRUE if either $a or $b is TRUE.</source>
          <target state="translated">&lt;strong&gt;$ a或$ b：&lt;/strong&gt;如果$ a或$ b为TRUE，则为TRUE。</target>
        </trans-unit>
        <trans-unit id="ebbebca5ce3039692ff7928d76684516b8be2f11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a xor $b :&lt;/strong&gt; TRUE if either $a or $b is TRUE, but not both.</source>
          <target state="translated">&lt;strong&gt;$ a xor $ b：&lt;/strong&gt;如果$ a或$ b中的一个为TRUE，则为TRUE，但不能同时为两个。</target>
        </trans-unit>
        <trans-unit id="9fe78deb98faa59797de25c73a75b0d286f3abcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a | $b&lt;/strong&gt; : Bits that are set in either $a or $b are set.</source>
          <target state="translated">&lt;strong&gt;$ a |&lt;/strong&gt; &lt;strong&gt;$ b&lt;/strong&gt; ：设置在$ a或$ b中设置的位。</target>
        </trans-unit>
        <trans-unit id="49b07e8c9cdf279ad33a768c5a0c6d7b7a7cb4e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a |= $b&lt;/strong&gt; : Same as $a = $a | $b</source>
          <target state="translated">&lt;strong&gt;$ a | = $ b&lt;/strong&gt; ：与$ a = $ a |相同 $ b</target>
        </trans-unit>
        <trans-unit id="fb8d5a04d7b9410cea85a9414323e938ae54653f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a || $b :&lt;/strong&gt; TRUE if either $a or $b is TRUE.</source>
          <target state="translated">&lt;strong&gt;$ a ||&lt;/strong&gt; &lt;strong&gt;$ b：&lt;/strong&gt;如果$ a或$ b为TRUE，则为TRUE。</target>
        </trans-unit>
        <trans-unit id="f931e64629b2cac7fbe8e408c3f78f41767b482a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a++&lt;/strong&gt; : Returns $a, then increments $a by one.</source>
          <target state="translated">&lt;strong&gt;$ a ++&lt;/strong&gt; ：返回$ a，然后将$ a加1。</target>
        </trans-unit>
        <trans-unit id="f6712687ffaa07c5c9abba51f24292c5e02f7a15" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a--&lt;/strong&gt; : Returns $a, then decrements $a by one.</source>
          <target state="translated">&lt;strong&gt;$ a--&lt;/strong&gt; ：返回$ a，然后将$ a减1。</target>
        </trans-unit>
        <trans-unit id="84aed8e0269f024183775b6af8b6e50e79f24ce1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&amp;amp;&lt;/strong&gt; usually checks bits that are set in both $a and $b are set.</source>
          <target state="translated">&lt;strong&gt;＆&lt;/strong&gt;通常检查同时设置了$ a和$ b中设置的位。</target>
        </trans-unit>
        <trans-unit id="7be472541313fec9a3ec24e057f2eeb719679e25" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;++$a&lt;/strong&gt; : Increments $a by one, then returns $a.</source>
          <target state="translated">&lt;strong&gt;++ $ a&lt;/strong&gt; ：将$ a加1，然后返回$ a。</target>
        </trans-unit>
        <trans-unit id="b02c4c5a1c00bb0982d2ab84f1f59d5d7f29bcd1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;-$a&lt;/strong&gt; : Opposite of $a.</source>
          <target state="translated">&lt;strong&gt;-$ a&lt;/strong&gt; ：与$ a相反。</target>
        </trans-unit>
        <trans-unit id="435041dc79ada8540924cdd20361a54f6499045c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;--$a&lt;/strong&gt; : Decrements $a by one, then returns $a.</source>
          <target state="translated">&lt;strong&gt;-$ a&lt;/strong&gt; ：将$ a减一，然后返回$ a。</target>
        </trans-unit>
        <trans-unit id="03e2999d7d1fe8e36e0849f73ec52f41b8bb90f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1) Single Quote Strings:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;1）单引号字符串：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5419894189be920cdcf99b23b8eb8b792f568faa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2) Double Quote Strings:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;2）双引号字符串：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="71ca065dec1e26480e93fe1d5bc2bdce48488230" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;3) Heredoc:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;3）Heredoc：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="792f6e4a27ed68cd5e728786f234e13ebb2b41b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;4) Nowdoc (since PHP 5.3.0):&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;4）Nowdoc（自PHP 5.3.0起）：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2de5f90f70cd0b2b62b100939dda7470fc2b5d2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://codepad.org/5ZD3j0xb&quot;&gt;Live example&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://codepad.org/5ZD3j0xb&quot;&gt;现场例子&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b96395a1dce0bb268fefc5bde3ec05d07a898a26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://php.net/manual/en/language.operators.increment.php&quot;&gt;Incrementing / Decrementing Operators&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://php.net/manual/en/language.operators.increment.php&quot;&gt;递增/递减运算符&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d59bfcc13dd67afa7fc8f9028079b6a5222ad6ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1968371/understanding-incrementing&quot;&gt;Understanding Incrementing&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1968371/understanding-incrementing&quot;&gt;了解增量&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="78a203742b521feffadaf22089b55c7234ec551a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ANSWER:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ANSWER:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c1c82130acb6e7b96ccfaa38ae68645889c3944b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;As of PHP 7.1.0, return values can be marked as nullable by prefixing the type name with a question mark (?). This signifies that the function returns either the specified type or NULL.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;从PHP 7.1.0开始，可以通过在类型名称前添加问号（？）来将返回值标记为可为空。&lt;/strong&gt; &lt;strong&gt;这表示该函数返回指定的类型或NULL。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8979f473a595992fccb54902b65d519a8190f8bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ELABORATING:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ELABORATING:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4905e064b51c87a9e64466f301de9f5691beee56" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;FINAL POINT:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;最后一点：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="16047fbce0838b416ac5edaa052dd7b67668db78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Magic constants&lt;/strong&gt;: Although these are not just symbols but important part of this token family. There are eight magical constants that change depending on where they are used.</source>
          <target state="translated">&lt;strong&gt;魔术常数&lt;/strong&gt; ：尽管这些&lt;strong&gt;常数&lt;/strong&gt;不仅是符号，而且还是此令牌系列的重要组成部分。 有八个神奇常数会根据使用的位置而变化。</target>
        </trans-unit>
        <trans-unit id="407f91bf1c7f571966ceb1bb634986062bb24d30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Null coalescing operator (??)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;空合并运算符（??）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="90ff99b5075f777f003a89611a809f44be84c3d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PHP &quot;&amp;amp;&quot; operator&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PHP&amp;ldquo;＆&amp;rdquo;运算符&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="30c2e4208aeb48cbb1652f224512112856dcc41b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PHP Strings:&lt;/strong&gt;
PHP Strings can be specified in four ways not just two ways:</source>
          <target state="translated">&lt;strong&gt;PHP字符串：&lt;/strong&gt; PHP字符串可以通过四种方式指定，而不仅仅是两种方式：</target>
        </trans-unit>
        <trans-unit id="c8f50df1ddb5574b8312113464b6da8041aea481" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;QUESTION:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;QUESTION:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c587a1bb9ca563541cf77bb86482fc8e3fa10e85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Question&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Question&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="dc1f96ff4b5c4c345c12336126290b5d20bc0b16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Above Example &lt;code&gt;$a&lt;/code&gt; is a object of the &lt;code&gt;mclass&lt;/code&gt; so use only a &lt;code&gt;mclass&lt;/code&gt; data not instance of with the &lt;code&gt;sclass&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;原因：&lt;/strong&gt;上面的示例 &lt;code&gt;$a&lt;/code&gt; 是 &lt;code&gt;mclass&lt;/code&gt; 的对象，因此仅使用 &lt;code&gt;mclass&lt;/code&gt; 数据，而不使用 &lt;code&gt;sclass&lt;/code&gt; 的实例</target>
        </trans-unit>
        <trans-unit id="cf8308e79a74758f6a22cb274de402dde7ef640b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Second example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;第二个例子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a222243be16d5da1c7aac6a732d8f0b59c3212d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Spaceship Operator &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;&lt;/strong&gt; (Added in PHP 7)</source>
          <target state="translated">&lt;strong&gt;太空飞船运营商 &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; &lt;/strong&gt; （PHP 7中添加）</target>
        </trans-unit>
        <trans-unit id="0d551dd14491b761d0ec603676b95fe32e0764a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Stack Overflow Posts:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;堆栈溢出帖子：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2c3828e3ba8c1fc6ffa0dfae59fef398b94b9a73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Three DOTS as Splat Operator (...)&lt;/strong&gt; (since PHP 5.6)</source>
          <target state="translated">&lt;strong&gt;三个DOTS作为Splat运算符（...）&lt;/strong&gt; （自PHP 5.6起）</target>
        </trans-unit>
        <trans-unit id="65900c0d319a909ecf9dc53c1ce2c380ccdf8373" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What should I do here?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;我该怎么办？&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="beb731526b45cd7e2d146706f2dd952e1005b579" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;~ $a&lt;/strong&gt; : Bits that are set in $a are not set, and vice versa.</source>
          <target state="translated">&lt;strong&gt;〜$ a&lt;/strong&gt; ：未设置在$ a中设置的位，反之亦然。</target>
        </trans-unit>
        <trans-unit id="0a7f9b30a0c3f33f4709641fdb7d576e4ddd6e36" translate="yes" xml:space="preserve">
          <source>?: operator (the 'Elvis operator') in PHP</source>
          <target state="translated">?:操作员(&quot;Elvis 操作员&quot;)</target>
        </trans-unit>
        <trans-unit id="9229bf6d29f973f8ef73ec942f1e00db3c67c756" translate="yes" xml:space="preserve">
          <source>A few examples for better understanding</source>
          <target state="translated">为了更好地理解,举几个例子</target>
        </trans-unit>
        <trans-unit id="cefd585636eb92717a12ee7f2a084a6941fc498b" translate="yes" xml:space="preserve">
          <source>A good practical application of using this operator would be in comparison type callbacks that are expected to return a zero, negative, or positive integer based on a three-way comparison between two values. The comparison function passed to &lt;a href=&quot;http://php.net/manual/en/function.usort.php&quot;&gt;&lt;code&gt;usort&lt;/code&gt;&lt;/a&gt; is one such example.</source>
          <target state="translated">使用此运算符的一个很好的实际应用是比较类型的回调，该回调基于两个值之间的三向比较，期望返回零，负或正整数。 传递给&lt;a href=&quot;http://php.net/manual/en/function.usort.php&quot;&gt; &lt;code&gt;usort&lt;/code&gt; &lt;/a&gt;的比较函数就是这样一个例子。</target>
        </trans-unit>
        <trans-unit id="fecdf9247b9c389a0182c00bf306fc6bea99ab96" translate="yes" xml:space="preserve">
          <source>Added in PHP 7</source>
          <target state="translated">添加于PHP 7</target>
        </trans-unit>
        <trans-unit id="749ba84ffe7c934d20c7a7d822755ef40b735566" translate="yes" xml:space="preserve">
          <source>An overview of &lt;a href=&quot;http://php.net/manual/en/language.operators.php&quot;&gt;&lt;strong&gt;operators in PHP&lt;/strong&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/language.operators.php&quot;&gt;&lt;strong&gt;PHP运算符&lt;/strong&gt;&lt;/a&gt;概述：</target>
        </trans-unit>
        <trans-unit id="230a38b5de85cd8ebba22867e657f4addbf870f0" translate="yes" xml:space="preserve">
          <source>And now, to receive the same output as before, the &lt;code&gt;key&lt;/code&gt; value would be used in the arrays index:</source>
          <target state="translated">现在，要接收与以前相同的输出，将在数组索引中使用 &lt;code&gt;key&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="78f725d64e9b255480b6afc099046bc3ee05c66b" translate="yes" xml:space="preserve">
          <source>And some words about last post</source>
          <target state="translated">还有关于上一个职位的一些话</target>
        </trans-unit>
        <trans-unit id="c87ffc4d0d7d1d1555436641c20d35c9dc0a0a42" translate="yes" xml:space="preserve">
          <source>Answer below</source>
          <target state="translated">答案如下</target>
        </trans-unit>
        <trans-unit id="5c0e2e21cef0d3e07a258f7e57c7abc7926b0392" translate="yes" xml:space="preserve">
          <source>Are PHP short tags acceptable to use?</source>
          <target state="translated">PHP的短标签是否可以使用?</target>
        </trans-unit>
        <trans-unit id="dc948bf7702ca0dd5d989b2d93cf1ba3a496cfa8" translate="yes" xml:space="preserve">
          <source>Arithmetic Operators:</source>
          <target state="translated">算术运算器。</target>
        </trans-unit>
        <trans-unit id="68eeb3cf38d1a23ed2dd8de89e52367df4c2503c" translate="yes" xml:space="preserve">
          <source>Array Operators:</source>
          <target state="translated">阵列运算符。</target>
        </trans-unit>
        <trans-unit id="403d27b0b277b9dad913cf4b22fe84c1c21de2a2" translate="yes" xml:space="preserve">
          <source>Assignment Operators:</source>
          <target state="translated">派遣操作人员。</target>
        </trans-unit>
        <trans-unit id="fe63e68c651be08601ddca318c553d7f4c118c48" translate="yes" xml:space="preserve">
          <source>Backslash in PHP -- what does it mean?</source>
          <target state="translated">PHP中的反斜线是什么意思?</target>
        </trans-unit>
        <trans-unit id="26965663ce24bc204bbadf51b89da9ba50516555" translate="yes" xml:space="preserve">
          <source>Before PHP 7 you would write...</source>
          <target state="translated">在PHP 7之前,你会写.....</target>
        </trans-unit>
        <trans-unit id="16ef355e7f915391810467951c40173360ffd897" translate="yes" xml:space="preserve">
          <source>Bitwise Operator</source>
          <target state="translated">分位运算器</target>
        </trans-unit>
        <trans-unit id="946e2771b4c4f1d0f3de41419222166c3e1aea44" translate="yes" xml:space="preserve">
          <source>Bitwise Operators:</source>
          <target state="translated">位运算器。</target>
        </trans-unit>
        <trans-unit id="cf41b6c97f086b566a13adc5d1cb1bf945ab6778" translate="yes" xml:space="preserve">
          <source>Blocks - curly braces/no curly braces?</source>
          <target state="translated">块状物--卷曲牙套没有卷曲牙套?</target>
        </trans-unit>
        <trans-unit id="0bed019990a84d5cdc2263ee30ffdc0e5a02aecc" translate="yes" xml:space="preserve">
          <source>C#'s null coalescing operator (??) in PHP</source>
          <target state="translated">C#在PHP中的空凝聚算子(?</target>
        </trans-unit>
        <trans-unit id="4708ed4fa9ee4d8753848045c418e31d8d4a22ac" translate="yes" xml:space="preserve">
          <source>Can I use hashes for comments in PHP?</source>
          <target state="translated">我可以在PHP中使用哈希值进行注释吗?</target>
        </trans-unit>
        <trans-unit id="a7de33d110c915ab8e665813e77fafb72e84afb2" translate="yes" xml:space="preserve">
          <source>Comparison operators:</source>
          <target state="translated">对比运营商。</target>
        </trans-unit>
        <trans-unit id="1cae8019ca197b28ea8e711159eae84be53cfddc" translate="yes" xml:space="preserve">
          <source>Curly braces in string in PHP</source>
          <target state="translated">PHP中字符串中的大括号</target>
        </trans-unit>
        <trans-unit id="e51f5fb2fbb16d09f2610657434b0c3e4c80f81a" translate="yes" xml:space="preserve">
          <source>Difference between &amp;amp; and &amp;amp;&amp;amp; in PHP</source>
          <target state="translated">PHP中＆和&amp;amp;&amp;amp;之间的区别</target>
        </trans-unit>
        <trans-unit id="7be324d3d97c57ff0cb7bc27d328781edb7045b7" translate="yes" xml:space="preserve">
          <source>Difference between period and comma when concatenating with echo versus return?</source>
          <target state="translated">句号和逗号与回声与回声连接时的区别?</target>
        </trans-unit>
        <trans-unit id="a91be50c9169601a129ef164efa658b66c66d915" translate="yes" xml:space="preserve">
          <source>Differences (&lt;em&gt;between a sequential and associative array&lt;/em&gt;):</source>
          <target state="translated">差异（ &lt;em&gt;顺序数组和关联数组之间&lt;/em&gt; ）：</target>
        </trans-unit>
        <trans-unit id="ce78c66dd47caeb4ee4327bd55357860f9bee17a" translate="yes" xml:space="preserve">
          <source>Double not (!!) operator in PHP</source>
          <target state="translated">PHP中的双不(!!!)操作符</target>
        </trans-unit>
        <trans-unit id="18386429ed75254ed5b9684ad4d250388b8473b8" translate="yes" xml:space="preserve">
          <source>Durring the declaration of an Associative Array, you don't only include the &lt;code&gt;value&lt;/code&gt; of what you want to put in the array, but you also put the index value (called the &lt;code&gt;key&lt;/code&gt;) which you want to use when calling the array in later parts of the code. The following syntax is used during it's declaration: &lt;code&gt;&quot;key&quot; =&amp;gt; &quot;value&quot;&lt;/code&gt;.</source>
          <target state="translated">在声明关联数组时，不仅要包含要放入数组中的值，还需要在以后的部分中调用数组时要使用的索引值（称为 &lt;code&gt;key&lt;/code&gt; ）代码。 在声明期间使用以下语法： &lt;code&gt;&quot;key&quot; =&amp;gt; &quot;value&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eed24c3eea4e43e07ca6cf93bab2d47d077cfa27" translate="yes" xml:space="preserve">
          <source>Each arguments of calculateNumbers() function pass through $params as an array when use &quot;&amp;hellip; &quot;.</source>
          <target state="translated">当使用&amp;ldquo;&amp;hellip;&amp;rdquo;时，calculateNumbers（）函数的每个参数都将$ params作为数组传递。</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="8ef2e1210c47909b18d1b60b9c30a0116c39a246" translate="yes" xml:space="preserve">
          <source>Example 1:</source>
          <target state="translated">例1:</target>
        </trans-unit>
        <trans-unit id="e11895e8b0e4fd9700bfd1eef21691b78b345f1b" translate="yes" xml:space="preserve">
          <source>Example 2:</source>
          <target state="translated">例2:</target>
        </trans-unit>
        <trans-unit id="1d4166bf97179d81c42dccef3ab9d1594a5dec5d" translate="yes" xml:space="preserve">
          <source>Example 3:</source>
          <target state="translated">例3:</target>
        </trans-unit>
        <trans-unit id="03ec6da7759c5970d9f2e19e70d29ff9d6d694d2" translate="yes" xml:space="preserve">
          <source>Example 4:</source>
          <target state="translated">例4:</target>
        </trans-unit>
        <trans-unit id="0822a849422ef51702e4e4fb13c1092061af60a4" translate="yes" xml:space="preserve">
          <source>Example That you 'll love</source>
          <target state="translated">例子 你会爱上的</target>
        </trans-unit>
        <trans-unit id="77fe6b598a036b9845bfadbbc943b71dfc519cb1" translate="yes" xml:space="preserve">
          <source>Example with Clone</source>
          <target state="translated">克隆的例子</target>
        </trans-unit>
        <trans-unit id="d5dabf0c74597cbd7f8286974b1016373bba62b9" translate="yes" xml:space="preserve">
          <source>Example with inheritance</source>
          <target state="translated">有继承权的例子</target>
        </trans-unit>
        <trans-unit id="52174e0cfa4e2cbbd0f28172026d13e09e286c8c" translate="yes" xml:space="preserve">
          <source>Examples for &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; Spaceship operator (PHP 7, Source: PHP Manual):</source>
          <target state="translated">&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; Spaceship运算符的示例（PHP 7，来源：PHP手册）：</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="abc897209b2f98b7966665fa36a5eddbbc44f66d" translate="yes" xml:space="preserve">
          <source>For instance:</source>
          <target state="translated">比如说:</target>
        </trans-unit>
        <trans-unit id="65859c28f90d01686d1011cfb9e708225e958f2b" translate="yes" xml:space="preserve">
          <source>Greater than &lt;code&gt;0&lt;/code&gt; when the left-hand operand is greater than the right-hand operand</source>
          <target state="translated">当左侧操作数大于右侧操作数时，大于 &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a20d22ea233c95cab0a2cca61b39598d845badbe" translate="yes" xml:space="preserve">
          <source>How do the PHP equality (== double equals) and identity (=== triple equals) comparison operators differ?</source>
          <target state="translated">PHP的平等(====双等号)和身份(====三等号)比较运算符有什么不同?</target>
        </trans-unit>
        <trans-unit id="e38233aefd871fc7a03a4438bc7cf67e19c274af" translate="yes" xml:space="preserve">
          <source>How does the &quot;&amp;amp;&quot; operator work in a PHP function?</source>
          <target state="translated">&amp;ldquo;＆&amp;rdquo;运算符如何在PHP函数中工作？</target>
        </trans-unit>
        <trans-unit id="0e2a359c62d2893ac20cdd4e6a3632760ec240fb" translate="yes" xml:space="preserve">
          <source>How does the bitwise operator XOR ('^') work?</source>
          <target state="translated">位运算符XOR('^')是如何工作的?</target>
        </trans-unit>
        <trans-unit id="2394528dc0bea39221d0030eb1b7cff1e2e00619" translate="yes" xml:space="preserve">
          <source>However, you must use &lt;code&gt;$apples--&lt;/code&gt;, since first, you want to display the current number of apples, and &lt;strong&gt;then&lt;/strong&gt; you want to subtract one from it.</source>
          <target state="translated">但是，必须使用 &lt;code&gt;$apples--&lt;/code&gt; ，因为首先要显示当前的苹果数， &lt;strong&gt;然后再&lt;/strong&gt;从中减去一个。</target>
        </trans-unit>
        <trans-unit id="9b53c820697201bb9f919a486c502c674d64561c" translate="yes" xml:space="preserve">
          <source>If put before the variable, the increment/decrement operation is done to the variable &lt;strong&gt;first&lt;/strong&gt; then the result is returned. If put after the variable, the variable is &lt;strong&gt;first&lt;/strong&gt; returned, then the increment/decrement operation is done.</source>
          <target state="translated">如果放在变量之前，则先对变量执行递增/递减操作，然后返回结果。 如果将变量放在变量之后，则&lt;strong&gt;首先&lt;/strong&gt;返回变量，然后执行增量/减量操作。</target>
        </trans-unit>
        <trans-unit id="dae00f2b7f34dbcc7d4b25e7ea65b7b55bdf1d6e" translate="yes" xml:space="preserve">
          <source>If you have been pointed here by someone because you have asked such a question, please find the particular syntax below. The linked pages to the &lt;a href=&quot;http://php.net/manual/en/index.php&quot;&gt;PHP manual&lt;/a&gt; along with the linked questions will likely answer your question then. If so, you are encouraged to upvote the answer. This list is not meant as a substitute to the help others provided.</source>
          <target state="translated">如果有人因提出这样的问题而将您指向此处，请在下面找到特定的语法。 &lt;a href=&quot;http://php.net/manual/en/index.php&quot;&gt;PHP手册&lt;/a&gt;的链接页面以及链接的问题可能会回答您的问题。 如果是这样，建议您增加答案。 此列表不能代替其他人提供的帮助。</target>
        </trans-unit>
        <trans-unit id="451eaaf2eecc228a89e97505d6e6d5275451db51" translate="yes" xml:space="preserve">
          <source>If your particular token is not listed below, you might find it in the &lt;a href=&quot;http://secure.php.net/manual/en/tokens.php&quot;&gt;List of Parser Tokens&lt;/a&gt;.</source>
          <target state="translated">如果您的特定令牌未在下面列出，则可以在&lt;a href=&quot;http://secure.php.net/manual/en/tokens.php&quot;&gt;解析器令牌列表中&lt;/a&gt;找到它。</target>
        </trans-unit>
        <trans-unit id="937ef98cf4c77016adb983ad436b4c378fc8df0b" translate="yes" xml:space="preserve">
          <source>In PHP 5, we already have a ternary operator, which tests a value, and then returns the second element if that returns true and the third if it doesn't:</source>
          <target state="translated">在PHP 5中,我们已经有了一个三元运算符,它可以测试一个值,如果返回第二个元素为真,则返回第二个元素,如果不返回,则返回第三个元素。</target>
        </trans-unit>
        <trans-unit id="3c30755892650b2704a3e9257be901820f3bb4b2" translate="yes" xml:space="preserve">
          <source>In PHP 7 we additionally get the ?? operator which rather than indicating extreme confusion which is how I would usually use two question marks together instead allows us to chain together a string of values. Reading from left to right, the first value which exists and is not null is the value that will be returned.</source>
          <target state="translated">在 PHP 7 中,我们还得到了 ? ? 操作符,它不是表示极度的混乱,我通常会把两个问号用在一起,而是允许我们把一串值链起来。从左到右读,第一个存在且不是空的值就是会被返回的值。</target>
        </trans-unit>
        <trans-unit id="aaebbe1e86697d58c964216ae8655612c659f88d" translate="yes" xml:space="preserve">
          <source>In PHP, what does &quot;&amp;lt;&amp;lt;&amp;lt;&quot; represent?</source>
          <target state="translated">在PHP中，&amp;ldquo; &amp;lt;&amp;lt;&amp;lt;&amp;rdquo;代表什么？</target>
        </trans-unit>
        <trans-unit id="e55e103b7b30ea66386bf20d5b53787376304144" translate="yes" xml:space="preserve">
          <source>In most cases you will probably want to use &lt;strong&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;||&lt;/code&gt;&lt;/strong&gt;, which behave in a way known from languages like C, Java or JavaScript.</source>
          <target state="translated">在大多数情况下，您可能需要使用&lt;strong&gt; &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; &lt;/strong&gt;和&lt;strong&gt; &lt;code&gt;||&lt;/code&gt; 。&lt;/strong&gt; ，其行为方式可从C，Java或JavaScript等语言得知。</target>
        </trans-unit>
        <trans-unit id="af67ffc1b32387677e81f4b105c257760a1cf779" translate="yes" xml:space="preserve">
          <source>In the case above &lt;code&gt;++$i&lt;/code&gt; is used, since it is faster. &lt;code&gt;$i++&lt;/code&gt; would have the same results.</source>
          <target state="translated">在上面的情况下使用 &lt;code&gt;++$i&lt;/code&gt; ，因为它速度更快。 &lt;code&gt;$i++&lt;/code&gt; 将具有相同的结果。</target>
        </trans-unit>
        <trans-unit id="bcf155e82f03790704c842dd338991bb07d58894" translate="yes" xml:space="preserve">
          <source>Incrementing/Decrementing Operators:</source>
          <target state="translated">增量减量运算器。</target>
        </trans-unit>
        <trans-unit id="edc1eac10f65cdff88e6ab117f0998ac23964856" translate="yes" xml:space="preserve">
          <source>Integers, Floats, Strings, Arrays &amp;amp; objects for Three-way comparison of variables.</source>
          <target state="translated">整数，浮点数，字符串，数组和对象，用于变量的三向比较。</target>
        </trans-unit>
        <trans-unit id="df65827376278eb9127b9d2661d7460718bc0e9d" translate="yes" xml:space="preserve">
          <source>Is there a difference between !== and != in PHP?</source>
          <target state="translated">PHP中的 !==和 !=之间有什么区别吗?</target>
        </trans-unit>
        <trans-unit id="2ec0f11f5d0769ec34787bec9f2ddf23b726e6f7" translate="yes" xml:space="preserve">
          <source>Is there any difference between &quot;and&quot; and &quot;&amp;amp;&amp;amp;&quot; operators in PHP?</source>
          <target state="translated">PHP中的&amp;ldquo;和&amp;rdquo;和&amp;ldquo; &amp;amp;&amp;amp;&amp;rdquo;运算符之间有什么区别吗？</target>
        </trans-unit>
        <trans-unit id="b9205a6b4262f7d151ac16cd1d527857972ad5ea" translate="yes" xml:space="preserve">
          <source>It used to be hard to find questions about operators and other syntax tokens.&amp;sup1;</source>
          <target state="translated">过去很难找到有关运算符和其他语法标记的问题。&amp;sup1;</target>
        </trans-unit>
        <trans-unit id="e6bb96c8a33facc1487ccdb5f0b146f81554180d" translate="yes" xml:space="preserve">
          <source>Less than &lt;code&gt;0&lt;/code&gt; when the left-hand operand is less than the right-hand operand</source>
          <target state="translated">当左操作数小于右操作数时小于 &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7516945e79aa523eccb878372b39a21c6a846398" translate="yes" xml:space="preserve">
          <source>Logical Operators:</source>
          <target state="translated">逻辑运算符。</target>
        </trans-unit>
        <trans-unit id="c200734be54f0d8d24609d679341d30abb998d89" translate="yes" xml:space="preserve">
          <source>Makes life more easier once we get used to it..(check example below carefully)</source>
          <target state="translated">一旦我们养成习惯,生活就会变得更加轻松...........(仔细查看下面的例子)</target>
        </trans-unit>
        <trans-unit id="99996ae3fe87eb2b9707f341877f1d7df4716763" translate="yes" xml:space="preserve">
          <source>Most people have already read the docs but didn't reliase the real world use case of these bitwise operators.</source>
          <target state="translated">大多数人已经读过doc,但没有重温这些位面运算器的真实用例。</target>
        </trans-unit>
        <trans-unit id="f4043d5ec852812f47115ba6796712c0228fcfe8" translate="yes" xml:space="preserve">
          <source>Not the catchiest name for an operator, but PHP 7 brings in the rather handy null coalesce so I thought I'd share an example.</source>
          <target state="translated">对于一个操作符来说,这个名字并不是最吸引人的,但是PHP 7带来了相当方便的null coalesce,所以我想分享一个例子。</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="f28b8bd9a051c1b22d384ae410c22c82df6bc704" translate="yes" xml:space="preserve">
          <source>Note that character variables can be incremented but not decremented and even so only plain ASCII characters (a-z and A-Z) are supported.</source>
          <target state="translated">注意,字符变量可以递增,但不能递减,即使如此,也只支持纯ASCII字符(a-z和A-Z)。</target>
        </trans-unit>
        <trans-unit id="443ba4fcbac94fc6cfac1e6a4f4b13672ae602a6" translate="yes" xml:space="preserve">
          <source>Note: Since January 2013, Stack Overflow &lt;a href=&quot;https://meta.stackexchange.com/questions/160100/a-new-search-engine-for-stack-exchange&quot;&gt;does support special characters&lt;/a&gt;. Just surround the search terms by quotes, e.g. &lt;a href=&quot;https://stackoverflow.com/search?q=%5Bphp%5D%20%22===%22%20vs%20%22==%22&quot;&gt;&lt;code&gt;[php] &quot;==&quot; vs &quot;===&quot;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">注意：自2013年1月起，Stack Overflow不再&lt;a href=&quot;https://meta.stackexchange.com/questions/160100/a-new-search-engine-for-stack-exchange&quot;&gt;支持特殊字符&lt;/a&gt; 。 只需将搜索词用引号引起来，例如&lt;a href=&quot;https://stackoverflow.com/search?q=%5Bphp%5D%20%22===%22%20vs%20%22==%22&quot;&gt; &lt;code&gt;[php] &quot;==&quot; vs &quot;===&quot;&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d06dc73b02f6ce803c3875d9aacee4b8e021a8e8" translate="yes" xml:space="preserve">
          <source>Null Coalesce operator &quot;??&quot; (Added in PHP 7)</source>
          <target state="translated">空凝聚运算符 &quot;?&quot;?(新增于PHP 7)</target>
        </trans-unit>
        <trans-unit id="afe173f15f5772c4119ccf257996c90e710bd6ae" translate="yes" xml:space="preserve">
          <source>Nullable return type declaration</source>
          <target state="translated">可清空返回类型声明</target>
        </trans-unit>
        <trans-unit id="2fd953dbf48f21b4675ed43e6fb4e7539de446e9" translate="yes" xml:space="preserve">
          <source>Once &lt;code&gt;z&lt;/code&gt; is reached &lt;code&gt;aa&lt;/code&gt; is next, and so on.</source>
          <target state="translated">一旦到达 &lt;code&gt;z&lt;/code&gt; ,则下一个是 &lt;code&gt;aa&lt;/code&gt; ，依此类推。</target>
        </trans-unit>
        <trans-unit id="99b8bbb1c7d5441c29c6d0ffb205bb87d0514576" translate="yes" xml:space="preserve">
          <source>One usefull case of these is easy configurations like give below, so a single integer field can store thousands of combos for you.</source>
          <target state="translated">其中一个很有用的例子就是像下面这样简单的配置,所以一个整数字段可以为你存储成千上万的组合。</target>
        </trans-unit>
        <trans-unit id="78b65f50039c4541d3a0c51a12258dbb1b353c62" translate="yes" xml:space="preserve">
          <source>PHP != and == operators</source>
          <target state="translated">PHP !=和 ==操作符</target>
        </trans-unit>
        <trans-unit id="db4a97f407945295300bb592129ec35ff93d048f" translate="yes" xml:space="preserve">
          <source>PHP &quot;&amp;amp;&quot; operator</source>
          <target state="translated">PHP&amp;ldquo;＆&amp;rdquo;运算符</target>
        </trans-unit>
        <trans-unit id="d5056ccc4c828b8a1829d025570838c2e67c0249" translate="yes" xml:space="preserve">
          <source>PHP - and / or keywords</source>
          <target state="translated">PHP-和或关键字</target>
        </trans-unit>
        <trans-unit id="c70b1fab4fbb591bd3ab50e08d270dc150be6d1f" translate="yes" xml:space="preserve">
          <source>PHP 7 adds support for return type declarations. Similarly to argument type declarations, return type declarations specify the type of value that will be returned from a function. The same types are available for return type declarations as are available for argument type declarations.</source>
          <target state="translated">PHP 7 增加了对返回类型声明的支持。与参数类型声明类似,返回类型声明指定了从函数中返回的值的类型。返回类型声明的类型与参数类型声明的类型相同。</target>
        </trans-unit>
        <trans-unit id="c2fe2e6e48b4d5e03e9e8058805f6f53bf1ac681" translate="yes" xml:space="preserve">
          <source>PHP arrays... What is/are the meaning(s) of an empty bracket?</source>
          <target state="translated">PHP数组.....空括号的含义是什么?</target>
        </trans-unit>
        <trans-unit id="8ace6ed77a4488977ddf85093c0307074848d98c" translate="yes" xml:space="preserve">
          <source>PHP curly braces in array notation</source>
          <target state="translated">PHP的数组符号中的大括号</target>
        </trans-unit>
        <trans-unit id="1c4115cd9193d37edb1d2119060b9a4ce586c923" translate="yes" xml:space="preserve">
          <source>PHP expression &amp;lt;&amp;lt;&amp;lt;EOB</source>
          <target state="translated">PHP表达式&amp;lt;&amp;lt;&amp;lt; EOB</target>
        </trans-unit>
        <trans-unit id="ee1eb788005713e51dc285dc4ff0ac06953cfa2f" translate="yes" xml:space="preserve">
          <source>PHP functions and @functions</source>
          <target state="translated">PHP函数和@functions</target>
        </trans-unit>
        <trans-unit id="0d7f48d98c3579ff0942801c080fa4ddd6efcac1" translate="yes" xml:space="preserve">
          <source>PHP has an operator &quot;...&quot; (Three dots) which is referred as Splat Operator. It is used to pass arbitrary number of parameters in a function and this type of function is called Variadic Functions. Let&amp;rsquo;s take examples to use of &quot;...&quot; (Three dots).</source>
          <target state="translated">PHP有一个运算符&amp;ldquo; ...&amp;rdquo;（三个点），称为Splat运算符。 它用于在函数中传递任意数量的参数，这种类型的函数称为可变参数函数。 让我们以使用&amp;ldquo; ...&amp;rdquo;（三个点）为例。</target>
        </trans-unit>
        <trans-unit id="c14776cf9af4894479aefe34a4e66e1b29e04a24" translate="yes" xml:space="preserve">
          <source>PHP operator &amp;lt;&amp;gt;</source>
          <target state="translated">PHP运算符&amp;lt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8ca5bc31f5ee5ded5b9fe2bd570c13954cf43be4" translate="yes" xml:space="preserve">
          <source>PHP's &amp;lt;&amp;gt; operator</source>
          <target state="translated">PHP的&amp;lt;&amp;gt;运算符</target>
        </trans-unit>
        <trans-unit id="00f80d3b85e8bf8b64393fdeee25dad1a4566c5c" translate="yes" xml:space="preserve">
          <source>Php array_push() vs myArray[]</source>
          <target state="translated">Php array_push()vs myArray[]</target>
        </trans-unit>
        <trans-unit id="1a4c7e2f68916c7a0d1e9b4a720a4bdce8861129" translate="yes" xml:space="preserve">
          <source>Pre-increment is a little bit faster because it really increments the variable and after that 'returns' the result. Post-increment creates a special variable, copies there the value of the first variable and only after the first variable is used, replaces its value with second's.</source>
          <target state="translated">Pre-increment的速度要快一点,因为它真正的增量变量,然后 &quot;返回 &quot;结果。后递增会创建一个特殊的变量,将第一个变量的值复制到那里,然后在使用第一个变量之后,用第二个变量的值替换它的值。</target>
        </trans-unit>
        <trans-unit id="d506691543844e227dd07a003a1906030b537b90" translate="yes" xml:space="preserve">
          <source>Reference assignment operator in PHP, =&amp;amp;</source>
          <target state="translated">PHP中的引用赋值运算符，=＆</target>
        </trans-unit>
        <trans-unit id="c0091bdc65a3bf05a513d61184df9c6814aa1000" translate="yes" xml:space="preserve">
          <source>Reference — What does this symbol mean in PHP</source>
          <target state="translated">Reference-这个符号在PHP中是什么意思</target>
        </trans-unit>
        <trans-unit id="b7f3271352bc9999571d7b53daec3de5367a4f25" translate="yes" xml:space="preserve">
          <source>Shorthand for arrays: literal &lt;code&gt;$var = []&lt;/code&gt; empty array</source>
          <target state="translated">数组的简写：文字 &lt;code&gt;$var = []&lt;/code&gt; 空数组</target>
        </trans-unit>
        <trans-unit id="c8670119466ef25e9bb16b2a4613f28d2a6c47b8" translate="yes" xml:space="preserve">
          <source>Should I use @ in my PHP code?</source>
          <target state="translated">我应该在我的PHP代码中使用@吗?</target>
        </trans-unit>
        <trans-unit id="90ced0572717334e6aa98203bcbd54c5e047aab3" translate="yes" xml:space="preserve">
          <source>Since PHP 7 you can write...</source>
          <target state="translated">自从PHP 7开始,你可以写.....</target>
        </trans-unit>
        <trans-unit id="417ab1132decf23985a3e7ac8ff150401460c832" translate="yes" xml:space="preserve">
          <source>So behind all above is game of bitwise operator and bits.</source>
          <target state="translated">所以,上述一切的背后,是位面操作者和位面的博弈。</target>
        </trans-unit>
        <trans-unit id="ec861622cd65f610b5638218634906a58754ac13" translate="yes" xml:space="preserve">
          <source>So far so good. However, as humans, we might find it hard to remember that index &lt;code&gt;[0]&lt;/code&gt; of the array is the value of the &lt;strong&gt;year&lt;/strong&gt; 2016, index &lt;code&gt;[1]&lt;/code&gt; of the array is a &lt;strong&gt;greetings&lt;/strong&gt;, and index &lt;code&gt;[2]&lt;/code&gt; of the array is a simple &lt;strong&gt;integer value&lt;/strong&gt;. The alternative we would then have is to use what is called an &lt;strong&gt;Associative Array&lt;/strong&gt;. An Associative array has a few differences from a &lt;strong&gt;Sequential Array&lt;/strong&gt;
(&lt;em&gt;which is what the previous cases were since they increment the index used in a predetermined sequence, by incrementing by 1 for each following value&lt;/em&gt;).</source>
          <target state="translated">到现在为止还挺好。 但是，作为人类，我们可能很难记住数组的索引 &lt;code&gt;[0]&lt;/code&gt; 是2016年的值，数组的索引 &lt;code&gt;[1]&lt;/code&gt; 是&lt;strong&gt;问候&lt;/strong&gt; ，而数组的索引 &lt;code&gt;[2]&lt;/code&gt; 是简单的&lt;strong&gt;整数值&lt;/strong&gt; 。 然后，我们将拥有的替代方法是使用所谓的&lt;strong&gt;关联数组&lt;/strong&gt; 。 关联数组与&lt;strong&gt;顺序&lt;/strong&gt;数组有一些区别（ &lt;em&gt;这是前面的情况，因为它们通过为每个后续值增加1来增加预定序列中使用的索引&lt;/em&gt; ）。</target>
        </trans-unit>
        <trans-unit id="15d74399e3b848e2289fa525d66a3e8d7b018938" translate="yes" xml:space="preserve">
          <source>So from the above example, it is pretty easy to see that the &lt;code&gt;=&amp;gt;&lt;/code&gt; symbol is used to express the relationship of an Associative Array between each of the &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; pairs in an array &lt;strong&gt;DURING&lt;/strong&gt; the initiation of the values within the array.</source>
          <target state="translated">因此，从上面的示例可以很容易地看出， &lt;code&gt;=&amp;gt;&lt;/code&gt; 符号用于表示数组中 &lt;code&gt;value&lt;/code&gt; 初始化&lt;strong&gt;期间&lt;/strong&gt;数组中每个 &lt;code&gt;key&lt;/code&gt; 和值对之间的关​​联数组的关系。</target>
        </trans-unit>
        <trans-unit id="1d664510a00b37cf9471c21bcd07179b395ed4c9" translate="yes" xml:space="preserve">
          <source>So you can see from the table the only bit they share together is the 8 bit.</source>
          <target state="translated">所以从表格中可以看到,他们唯一共享的位是8位。</target>
        </trans-unit>
        <trans-unit id="6da13addb000b67d42a6d66391713819e634149f" translate="yes" xml:space="preserve">
          <source>Source</source>
          <target state="translated">Source</target>
        </trans-unit>
        <trans-unit id="82014a2d56ce2da7cf61bead569c6c65d974d4e5" translate="yes" xml:space="preserve">
          <source>Spaceship (three way comparison) operator</source>
          <target state="translated">飞船(三向比较)运算器</target>
        </trans-unit>
        <trans-unit id="b585244fe9c1f5f349660280e57b19a123323ee7" translate="yes" xml:space="preserve">
          <source>Strange print behaviour in PHP?</source>
          <target state="translated">PHP中奇怪的打印行为?</target>
        </trans-unit>
        <trans-unit id="a8f1c2bbe054a873ed19a72e9a6b090e97cadf88" translate="yes" xml:space="preserve">
          <source>Strict typing also has an effect on return type declarations. In the default weak mode, returned values will be coerced to the correct type if they are not already of that type. In strong mode, the returned value must be of the correct type, otherwise, a TypeError will be thrown.</source>
          <target state="translated">严格的类型化也会对返回类型声明产生影响。在默认的弱类型模式下,如果返回的值还没有类型,则会被强制转换为正确的类型。在强模式下,返回的值必须是正确的类型,否则会抛出一个TypeError。</target>
        </trans-unit>
        <trans-unit id="c07d68578d6f3eabbcb0fbb5f49f77ce31b78f1e" translate="yes" xml:space="preserve">
          <source>String Operators:</source>
          <target state="translated">字符串操作者。</target>
        </trans-unit>
        <trans-unit id="8bcb8a067482da7537a0c553d5112a31f6393122" translate="yes" xml:space="preserve">
          <source>The &quot;AND&quot; operator: &lt;code&gt;&amp;amp;&lt;/code&gt;</source>
          <target state="translated">&amp;ldquo; AND&amp;rdquo;运算符： &lt;code&gt;&amp;amp;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d91c7bd454258ff1f962cdb94f8cca2a513b835" translate="yes" xml:space="preserve">
          <source>The &quot;Or&quot; operator: &lt;code&gt;|&lt;/code&gt;</source>
          <target state="translated">&amp;ldquo;或&amp;rdquo;运算符：</target>
        </trans-unit>
        <trans-unit id="380ec1237cab6d1ade13b72b28e24379847c10ed" translate="yes" xml:space="preserve">
          <source>The 3 different equals</source>
          <target state="translated">3个不同的等价物</target>
        </trans-unit>
        <trans-unit id="b9e1926264be6a4d4e1e124c420af995e530194b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://php.net/language.operators.comparison&quot;&gt;spaceship operator&lt;/a&gt;&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; is the latest comparison operator added in PHP 7. It is a &lt;em&gt;non-associative&lt;/em&gt; binary operator with the same precedence as equality operators (&lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;===&lt;/code&gt;, &lt;code&gt;!==&lt;/code&gt;). This operator allows for simpler three-way comparison between left-hand and right-hand operands.</source>
          <target state="translated">&lt;a href=&quot;http://php.net/language.operators.comparison&quot;&gt;太空飞船运算符&lt;/a&gt; &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; 是PHP 7中添加的最新比较运算符。它&lt;em&gt;是非关联&lt;/em&gt;二进制运算符，其优先级与等于运算符（ &lt;code&gt;==&lt;/code&gt; ， &lt;code&gt;!=&lt;/code&gt; ， &lt;code&gt;===&lt;/code&gt; ， &lt;code&gt;!==&lt;/code&gt; ）相同。 此运算符允许在左侧和右侧操作数之间进行更简单的三向比较。</target>
        </trans-unit>
        <trans-unit id="af098634b8f9d4af928dcdcc0efe77baa4ab419d" translate="yes" xml:space="preserve">
          <source>The List</source>
          <target state="translated">列表</target>
        </trans-unit>
        <trans-unit id="f8de94159b1436873c4b4e839ba7c48668266a81" translate="yes" xml:space="preserve">
          <source>The above example will output:</source>
          <target state="translated">上面的例子将输出。</target>
        </trans-unit>
        <trans-unit id="c83554429778b3dfa5de1c673c42d4f75cde521b" translate="yes" xml:space="preserve">
          <source>The behaviour of the or operator in PHP</source>
          <target state="translated">PHP中的or操作符的行为</target>
        </trans-unit>
        <trans-unit id="b307715f7121eb42b0ba5c92057dd5e6f3450ef2" translate="yes" xml:space="preserve">
          <source>The main idea is to have links to existing questions on Stack Overflow, so it's easier for us to reference them, not to copy over content from the PHP Manual.</source>
          <target state="translated">主要的想法是让我们在Stack Overflow上有链接到现有的问题,这样我们可以更方便地参考,而不是抄袭PHP手册中的内容。</target>
        </trans-unit>
        <trans-unit id="b103a039fff6a3f3f62801d4623182353cd864b7" translate="yes" xml:space="preserve">
          <source>The operator results in an integer expression of:</source>
          <target state="translated">运算子的结果是,整数表达式为()。</target>
        </trans-unit>
        <trans-unit id="71a433feae8c96536313021fba856194a233b381" translate="yes" xml:space="preserve">
          <source>The two shared bits are 32 and 4, which when added together return 36.</source>
          <target state="translated">两个共享位是32和4,这两个共享位相加后返回36。</target>
        </trans-unit>
        <trans-unit id="c1dc73629ac0bce26454b31f13ecb425dc0155cf" translate="yes" xml:space="preserve">
          <source>The underscore character '_' as in &lt;code&gt;_()&lt;/code&gt; is an alias to the &lt;a href=&quot;http://php.net/function.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;code&gt;_()&lt;/code&gt; 中的下划线字符'_'是&lt;a href=&quot;http://php.net/function.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt;函数的别名。</target>
        </trans-unit>
        <trans-unit id="6c71dbcd4ca50d2494076bb55b1ad62982a03722" translate="yes" xml:space="preserve">
          <source>There are many different ways to use &quot;&amp;hellip; &quot;  operator. Below some examples:</source>
          <target state="translated">使用&amp;ldquo;&amp;hellip;&amp;rdquo;运算符的方式有很多。 下面是一些例子：</target>
        </trans-unit>
        <trans-unit id="de1bd1b628926937a41adc5617acc0a9958ca0eb" translate="yes" xml:space="preserve">
          <source>There is also a shorthand for that which allows you to skip the second element if it's the same as the first one: echo $count ?: 10; // also outputs 10</source>
          <target state="translated">还有一个速记法,如果第二个元素与第一个元素相同,可以跳过第二个元素:echo $count ?:10;/也可以输出10</target>
        </trans-unit>
        <trans-unit id="a8866485f3cdec4b3c5f23eb85a882371875c982" translate="yes" xml:space="preserve">
          <source>These can go before or after the variable.</source>
          <target state="translated">这些可以放在变量之前或之后。</target>
        </trans-unit>
        <trans-unit id="0e8932b925419f4da15914241b903761904e6a3a" translate="yes" xml:space="preserve">
          <source>This construct is useful for giving priority to one or more values coming perhaps from user input or existing configuration, and safely falling back on a given default if that configuration is missing. It's kind of a small feature but it's one that I know I'll be using as soon as my applications upgrade to PHP 7.</source>
          <target state="translated">这个构造很有用,它可以给一个或多个来自用户输入或现有配置的值提供优先级,如果缺失了这个配置,可以安全地回落到给定的默认值上。这是个小功能,但我知道一旦我的应用程序升级到 PHP 7,我就会使用它。</target>
        </trans-unit>
        <trans-unit id="1076188e123d2d706fac7e86497c67f9ca552b3c" translate="yes" xml:space="preserve">
          <source>This is a collection of questions that come up every now and then about syntax in PHP. This is also a Community Wiki, so everyone is invited to participate in maintaining this list.</source>
          <target state="translated">这是一个关于 PHP 中的语法问题的集合。这也是一个社区维基,所以我们邀请大家参与维护这个列表。</target>
        </trans-unit>
        <trans-unit id="69cddca8fbe4383fb63c6f713236ca8294afdee0" translate="yes" xml:space="preserve">
          <source>This means that &lt;code&gt;$a = true and false;&lt;/code&gt; is equivalent to &lt;code&gt;($a = true) and false&lt;/code&gt;.</source>
          <target state="translated">这意味着 &lt;code&gt;$a = true and false;&lt;/code&gt; 等效于 &lt;code&gt;($a = true) and false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48100611c8db877fd50a037c179e93fa3784bc32" translate="yes" xml:space="preserve">
          <source>This operator has been added in PHP 7.0 for the common case of needing to use a ternary operator in conjunction with &lt;code&gt;isset()&lt;/code&gt;. It returns its first operand if it exists and is not &lt;code&gt;NULL&lt;/code&gt;; otherwise it returns its second operand.</source>
          <target state="translated">在PHP 7.0中已添加此运算符，用于通常需要将三元运算符与 &lt;code&gt;isset()&lt;/code&gt; 结合使用的情况。 如果它存在且不为 &lt;code&gt;NULL&lt;/code&gt; ，则返回其第一个操作数； 否则返回第二个操作数。</target>
        </trans-unit>
        <trans-unit id="146a2cfe0939a134c6ca1a7979b3dcf543aa2b35" translate="yes" xml:space="preserve">
          <source>This representation of 1 Byte</source>
          <target state="translated">1 Byte的这个表示方式</target>
        </trans-unit>
        <trans-unit id="de37e970fbdf0aa86ed78c1b770aaebe803e18be" translate="yes" xml:space="preserve">
          <source>This would output the number 11. Why?</source>
          <target state="translated">这将输出数字11。为什么?</target>
        </trans-unit>
        <trans-unit id="aff8b277ec8fc893be84ba8353de1cdc890dc0f7" translate="yes" xml:space="preserve">
          <source>This would output the number 8. Why? Well let's see using our table example.</source>
          <target state="translated">这将输出数字8。为什么?那我们就用我们的表格做个例子吧</target>
        </trans-unit>
        <trans-unit id="6a0baf7cce063108636c88bbbfdb3730504a2d50" translate="yes" xml:space="preserve">
          <source>To understand a line of PHP</source>
          <target state="translated">要理解一行PHP</target>
        </trans-unit>
        <trans-unit id="44ba738d34260d3833b259b9b7f241404408dcd6" translate="yes" xml:space="preserve">
          <source>To understand this, we have to know what Associative Arrays are. The first thing that comes up when a conventional programmer thinks of an array (&lt;strong&gt;in PHP&lt;/strong&gt;) would be something similar to:</source>
          <target state="translated">要了解这一点，我们必须知道什么是关联数组。 当常规程序员想到数组（ &lt;strong&gt;用PHP编写&lt;/strong&gt; ）时，第一件事类似于：</target>
        </trans-unit>
        <trans-unit id="a13ae1279809745a712d847542e2456d682b93e1" translate="yes" xml:space="preserve">
          <source>Type Operators</source>
          <target state="translated">类型操作人员</target>
        </trans-unit>
        <trans-unit id="3625a86089316a4f69729518e7595e3ce5cd7cd4" translate="yes" xml:space="preserve">
          <source>Type-juggling and (strict) greater/lesser-than comparisons in PHP</source>
          <target state="translated">PHP中的类型杂耍和(严格的)大于等于的比较。</target>
        </trans-unit>
        <trans-unit id="fdac5312900fb75ed3785729c8918337b2b9d77f" translate="yes" xml:space="preserve">
          <source>Understanding Incrementing</source>
          <target state="translated">了解增量</target>
        </trans-unit>
        <trans-unit id="d5e5b4c886882efe8e2bea8d1eddd1c3741c01db" translate="yes" xml:space="preserve">
          <source>Understanding PHP &amp;amp; (ampersand, bitwise and) operator</source>
          <target state="translated">了解PHP和（与号，按位和）运算符</target>
        </trans-unit>
        <trans-unit id="0f58f5a00fd8e93c65de1c9d14b6954ed145519c" translate="yes" xml:space="preserve">
          <source>Unexpected T_PAAMAYIM_NEKUDOTAYIM, expecting T_NS_Separator</source>
          <target state="translated">未料到的T_PAAMAYIM_NEKUDOTAYIM,期望T_NS_Separator</target>
        </trans-unit>
        <trans-unit id="45f97f8044f8b8d7ed21973b5e4ec900001ea2c5" translate="yes" xml:space="preserve">
          <source>Use of =&amp;gt; in PHP</source>
          <target state="translated">在PHP中使用=&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d8887427c5d422260f4d988c5f549142246428fd" translate="yes" xml:space="preserve">
          <source>Using &amp;lt;&amp;lt;&amp;lt;CON in PHP</source>
          <target state="translated">在PHP中使用&amp;lt;&amp;lt;&amp;lt; CON</target>
        </trans-unit>
        <trans-unit id="d2dd9e2c3a0c5bd8b44512ae995b70400c715627" translate="yes" xml:space="preserve">
          <source>Using PHP 5.3 ?: operator</source>
          <target state="translated">使用 PHP 5.3 ?</target>
        </trans-unit>
        <trans-unit id="eea194a7ccea38af53e6e98838c11e73bd9bce7b" translate="yes" xml:space="preserve">
          <source>What Does Using A Single Pipe '|' In A Function Argument Do?</source>
          <target state="translated">' In A Function Argument Do?</target>
        </trans-unit>
        <trans-unit id="49b00c012ec06c30de374d799af0fd4136a6dbb0" translate="yes" xml:space="preserve">
          <source>What are the PHP operators &quot;?&quot; and &quot;:&quot; called and what do they do?</source>
          <target state="translated">PHP的操作符&quot;? &quot;和&quot;:&quot;叫什么,它们的作用是什么?</target>
        </trans-unit>
        <trans-unit id="a30a8227618cf79b4d2eb8a4a100b1984e430f7d" translate="yes" xml:space="preserve">
          <source>What are the backticks `` called?</source>
          <target state="translated">什么叫 &quot;背杆&quot;?</target>
        </trans-unit>
        <trans-unit id="17d85750b181e352e3e10255feed1998657df068" translate="yes" xml:space="preserve">
          <source>What do commas mean in a variable declaration?</source>
          <target state="translated">变量声明中的逗号是什么意思?</target>
        </trans-unit>
        <trans-unit id="7b2463eb67f1bdd3ceecfd83176ad75be36da74c" translate="yes" xml:space="preserve">
          <source>What do the &quot;=&amp;amp;&quot; and &quot;&amp;amp;=&quot; operators in PHP mean?</source>
          <target state="translated">PHP中的&amp;ldquo; =＆&amp;rdquo;和&amp;ldquo;＆=&amp;rdquo;运算符是什么意思？</target>
        </trans-unit>
        <trans-unit id="f688ad456aee149fe2f8229a29c0a111fd0f1229" translate="yes" xml:space="preserve">
          <source>What do the '&amp;amp;=' and '=&amp;amp;' operators do?</source>
          <target state="translated">'＆='和'=＆'运算符做什么？</target>
        </trans-unit>
        <trans-unit id="f9538e15ebc2b3e060ebcbdd9c8567705fe0eee3" translate="yes" xml:space="preserve">
          <source>What do two colons mean in PHP?</source>
          <target state="translated">PHP中的两个冒号是什么意思?</target>
        </trans-unit>
        <trans-unit id="309bac072093a4237bd60bfcdfb879a1d96d34f9" translate="yes" xml:space="preserve">
          <source>What does !== comparison operator in PHP mean?</source>
          <target state="translated">PHP中的 !===比较运算符是什么意思?</target>
        </trans-unit>
        <trans-unit id="d832e34cefc6646a7f9ffd51c4b49ccd576f20c5" translate="yes" xml:space="preserve">
          <source>What does &quot;&amp;amp;&quot; mean here in PHP?</source>
          <target state="translated">在PHP中，&amp;ldquo;＆&amp;rdquo;是什么意思？</target>
        </trans-unit>
        <trans-unit id="e6bd19b39268ea0b0607729b237c2dbfef294346" translate="yes" xml:space="preserve">
          <source>What does &quot;&amp;amp;&quot; mean in this case?</source>
          <target state="translated">在这种情况下，&amp;ldquo;＆&amp;rdquo;是什么意思？</target>
        </trans-unit>
        <trans-unit id="0834c24eb11615f12f3ad6f5551765371f7190a7" translate="yes" xml:space="preserve">
          <source>What does &quot;-&amp;gt;&quot; mean/refer to in PHP?</source>
          <target state="translated">在PHP中&amp;ldquo;-&amp;gt;&amp;rdquo;是什么意思？</target>
        </trans-unit>
        <trans-unit id="3a95f8fcb217a96d55f4f087089cf1bc9aaaa896" translate="yes" xml:space="preserve">
          <source>What does &quot;:&quot; mean in PHP?</source>
          <target state="translated">PHP中的&quot;:&quot;是什么意思?</target>
        </trans-unit>
        <trans-unit id="a8f9f5c9c59544c403e5b2b80da23647f40cb6c3" translate="yes" xml:space="preserve">
          <source>What does &quot;=&amp;gt;&quot; mean in PHP?</source>
          <target state="translated">在PHP中&amp;ldquo; =&amp;gt;&amp;rdquo;是什么意思？</target>
        </trans-unit>
        <trans-unit id="cf6b8f693e48fd9df782b22d88df15b8ee7c069e" translate="yes" xml:space="preserve">
          <source>What does &quot;===&quot; mean?</source>
          <target state="translated">&quot;======&quot;是什么意思?</target>
        </trans-unit>
        <trans-unit id="208e6fe6daf41669d071b5c602d9c150ec6859b7" translate="yes" xml:space="preserve">
          <source>What does $$ (dollar dollar or double dollar) mean in PHP?</source>
          <target state="translated">在PHP中$$$$(美元美元或双美元)是什么意思?</target>
        </trans-unit>
        <trans-unit id="49cf48c1c9df1240571e1e8981bd0e564b92db38" translate="yes" xml:space="preserve">
          <source>What does $k =&amp;gt; $v in foreach($ex as $k=&amp;gt;$v) mean?</source>
          <target state="translated">foreach中的$ k =&amp;gt; $ v（$ ex as $ k =&amp;gt; $ v）是什么意思？</target>
        </trans-unit>
        <trans-unit id="6d57f438db9ace82107b248eed8b29ae701fa108" translate="yes" xml:space="preserve">
          <source>What does &amp;amp; in &amp;amp;2 mean in PHP?</source>
          <target state="translated">PHP中的＆in＆2是什么意思？</target>
        </trans-unit>
        <trans-unit id="2fca3b5767eb29a8700f9e70aa4618375d6ba386" translate="yes" xml:space="preserve">
          <source>What does &amp;gt;&amp;gt; mean in PHP?</source>
          <target state="translated">&amp;gt;&amp;gt;在PHP中是什么意思？</target>
        </trans-unit>
        <trans-unit id="d4cbff3188ad396cf01184872a5ea335bdc3cf82" translate="yes" xml:space="preserve">
          <source>What does &amp;lt;&amp;lt;&amp;lt;END mean in PHP?</source>
          <target state="translated">&amp;lt;&amp;lt;&amp;lt; END在PHP中是什么意思？</target>
        </trans-unit>
        <trans-unit id="7f28896b623ea179cad168e58cdd182cd4246588" translate="yes" xml:space="preserve">
          <source>What does &amp;lt;?= mean?</source>
          <target state="translated">&amp;lt;？=是什么意思？</target>
        </trans-unit>
        <trans-unit id="6e16d82dd7f6eff2949d0c07d7094b04617bab86" translate="yes" xml:space="preserve">
          <source>What does '&amp;lt;?=' mean in PHP?</source>
          <target state="translated">在PHP中'&amp;lt;？='是什么意思？</target>
        </trans-unit>
        <trans-unit id="d2e33899340ff19770b25e781e5bd020b00a63d5" translate="yes" xml:space="preserve">
          <source>What does &lt;code&gt;=&amp;gt;&lt;/code&gt; mean?</source>
          <target state="translated">&lt;code&gt;=&amp;gt;&lt;/code&gt; 是什么意思？</target>
        </trans-unit>
        <trans-unit id="fbbd533f1b24521be9ce8ac134840da61ae25a2e" translate="yes" xml:space="preserve">
          <source>What does =&amp;amp; mean in PHP?</source>
          <target state="translated">=＆在PHP中是什么意思？</target>
        </trans-unit>
        <trans-unit id="0848ac8dd2ad970d9bca5277b1d5959b62743362" translate="yes" xml:space="preserve">
          <source>What does @ mean in PHP?</source>
          <target state="translated">PHP中的@是什么意思?</target>
        </trans-unit>
        <trans-unit id="5fdf3ec79f30a4604c7bbcac3dd5494048adf76a" translate="yes" xml:space="preserve">
          <source>What does [] mean when reading from a PHP array?</source>
          <target state="translated">从PHP数组中读取[]是什么意思?</target>
        </trans-unit>
        <trans-unit id="b7b9c42562c414d3327ba78c62b565320a6ff07d" translate="yes" xml:space="preserve">
          <source>What does ^ mean in PHP?</source>
          <target state="translated">^在PHP中是什么意思?</target>
        </trans-unit>
        <trans-unit id="35458f745449c1c66905be73d63eaeee023340a7" translate="yes" xml:space="preserve">
          <source>What does `$page -= 1` in my PHP document mean?</source>
          <target state="translated">我的PHP文档中的`$page -=1`是什么意思?</target>
        </trans-unit>
        <trans-unit id="c29c541283687cd3fcc85eab541aed4c8bcb3e6d" translate="yes" xml:space="preserve">
          <source>What does a . (dot) do in PHP?</source>
          <target state="translated">.(点)在PHP中是做什么的?</target>
        </trans-unit>
        <trans-unit id="27f42aed1b704277acce72143fea346b85f55c7a" translate="yes" xml:space="preserve">
          <source>What does a \ (backslash) do in PHP (5.3+)?</source>
          <target state="translated">PHP (5.3+)中的反斜杠是做什么的?</target>
        </trans-unit>
        <trans-unit id="b8e2e8986f8b4de65768b3c335b34bf171fc0628" translate="yes" xml:space="preserve">
          <source>What does it mean to start a PHP function with an ampersand?</source>
          <target state="translated">用安培号启动一个PHP函数是什么意思?</target>
        </trans-unit>
        <trans-unit id="44c4680d63b5d21a8401b59a9ad3143fd690ded6" translate="yes" xml:space="preserve">
          <source>What does the &quot;&amp;amp;&quot; sign mean in PHP?</source>
          <target state="translated">PHP中的&amp;ldquo;＆&amp;rdquo;符号是什么意思？</target>
        </trans-unit>
        <trans-unit id="66c44e4f821f75f222f37db41112a0f3d04664ed" translate="yes" xml:space="preserve">
          <source>What does the PHP syntax $var1-&amp;gt;$var2 mean?</source>
          <target state="translated">PHP语法$ var1-&amp;gt; $ var2是什么意思？</target>
        </trans-unit>
        <trans-unit id="382b8e5b7c686d3ca9c24584f41b074f8143652b" translate="yes" xml:space="preserve">
          <source>What does the percent sign mean in PHP?</source>
          <target state="translated">PHP中的百分号是什么意思?</target>
        </trans-unit>
        <trans-unit id="77ed27ec4f32ba25f5c36229184c70cf5c24c969" translate="yes" xml:space="preserve">
          <source>What does this signature mean (&amp;amp;) in PHP?</source>
          <target state="translated">此签名在PHP中是什么意思（＆）？</target>
        </trans-unit>
        <trans-unit id="ee59d86be146a2e2c11df09932c60c1b39f520bf" translate="yes" xml:space="preserve">
          <source>What does this symbol mean in PHP &amp;lt;?=</source>
          <target state="translated">这个符号在PHP中是什么意思&amp;lt;？=</target>
        </trans-unit>
        <trans-unit id="57c42f05710da4d21c628c2132f3f7c02a845f4e" translate="yes" xml:space="preserve">
          <source>What does this ~ operator mean here?</source>
          <target state="translated">这个~算子在这里是什么意思?</target>
        </trans-unit>
        <trans-unit id="c2c0b3f338bfa3252accf1ee6e59a3356eb73bfb" translate="yes" xml:space="preserve">
          <source>What exactly are late static bindings in PHP?</source>
          <target state="translated">到底什么是PHP中的后期静态绑定?</target>
        </trans-unit>
        <trans-unit id="411019d813ba3c0ffa0ffcfbd0223cc1414991ba" translate="yes" xml:space="preserve">
          <source>What exactly does || mean?</source>
          <target state="translated">| mean?</target>
        </trans-unit>
        <trans-unit id="ab89f89137d9856a1b366932c41d11693423abb1" translate="yes" xml:space="preserve">
          <source>What is &quot;:&quot; in PHP?</source>
          <target state="translated">PHP中的&quot;:&quot;是什么?</target>
        </trans-unit>
        <trans-unit id="c6d9f86bfb4468d1192b49e65f1741d0170d2de6" translate="yes" xml:space="preserve">
          <source>What is += used for?</source>
          <target state="translated">+=是用来做什么的?</target>
        </trans-unit>
        <trans-unit id="d4eadeb59ec12e9c69d4a80a1d1d6e62d198765b" translate="yes" xml:space="preserve">
          <source>What is a bit? A bit is a representation of 1 or 0. Basically OFF(0) and ON(1)</source>
          <target state="translated">什么是位?位是1或0的代表,基本上是OFF(0)和ON(1)。</target>
        </trans-unit>
        <trans-unit id="d7f9c9571f750026dd019284659f08f51e0bb8de" translate="yes" xml:space="preserve">
          <source>What is a byte? A byte is made up of 8 bits and the highest value of a byte is 255, which would mean every bit is set. We will look at why a byte's maximum value is 255.</source>
          <target state="translated">什么是字节?一个字节是由8位组成的,一个字节的最高值是255,也就是每个位都被设置。我们来看看为什么一个字节的最高值是255。</target>
        </trans-unit>
        <trans-unit id="3630a66989b0cc3109490b691ba21c18ac5f6595" translate="yes" xml:space="preserve">
          <source>What is the &quot;-&amp;gt;&quot; PHP operator called and how do you say it when reading code out loud?</source>
          <target state="translated">什么是&amp;ldquo;-&amp;gt;&amp;rdquo; PHP运算符，当大声读出代码时怎么说？</target>
        </trans-unit>
        <trans-unit id="b0213d48601f4bc633b5ea41dc326e87183b3af8" translate="yes" xml:space="preserve">
          <source>What is the PHP operator % and how do I use it in real-world examples?</source>
          <target state="translated">什么是PHP操作符%,如何在现实世界的例子中使用?</target>
        </trans-unit>
        <trans-unit id="f07a90c8e1a10fe48d228c48f866af7caf06357d" translate="yes" xml:space="preserve">
          <source>What is the difference between &amp;lt;&amp;gt; and !=</source>
          <target state="translated">&amp;lt;&amp;gt;和！=有什么区别</target>
        </trans-unit>
        <trans-unit id="2d10bab6fadd2632db3f77f78ab2df1256ff7c14" translate="yes" xml:space="preserve">
          <source>What is the difference between .= and += in PHP?</source>
          <target state="translated">PHP中的.=和+=有什么区别?</target>
        </trans-unit>
        <trans-unit id="fc8226b1c997844f1eabb6c3def69e4da76074c3" translate="yes" xml:space="preserve">
          <source>What is the difference between the | and || operators?</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="b7f2116a82c0eb02d2a3246a4ab3210c95e64b67" translate="yes" xml:space="preserve">
          <source>What is the meaning of []</source>
          <target state="translated">什么是[]的意思?</target>
        </trans-unit>
        <trans-unit id="8f71a3d1b1df6c7482b30e69b7840d780c3c3903" translate="yes" xml:space="preserve">
          <source>What is the use of the @ symbol in PHP?</source>
          <target state="translated">PHP中的@符号有什么用?</target>
        </trans-unit>
        <trans-unit id="dd8082be77e9211f033a55131c1a6360f12b0e1d" translate="yes" xml:space="preserve">
          <source>What is this?</source>
          <target state="translated">这是什么?</target>
        </trans-unit>
        <trans-unit id="e65d11641f74fc614e80347710cc195a1873cc9d" translate="yes" xml:space="preserve">
          <source>What's the difference between :: (double colon) and -&amp;gt; (arrow) in PHP?</source>
          <target state="translated">PHP中的::（双冒号）和-&amp;gt;（箭头）有什么区别？</target>
        </trans-unit>
        <trans-unit id="c5e4ee8209fbcae2b59e508eb841e346c4e6a447" translate="yes" xml:space="preserve">
          <source>What's the meaning of the PHP token name T_PAAMAYIM_NEKUDOTAYIM?</source>
          <target state="translated">PHP令牌名称T_PAAMAYIM_NEKUDOTAYIM是什么意思?</target>
        </trans-unit>
        <trans-unit id="ed2f2360e32ddadd95e375cb7d32cba7f4eded49" translate="yes" xml:space="preserve">
          <source>What's this kind of syntax in PHP?</source>
          <target state="translated">PHP中的这种语法是什么?</target>
        </trans-unit>
        <trans-unit id="b7b020a7924be57fc3cebba9bb44410d75fdb644" translate="yes" xml:space="preserve">
          <source>When should I use a bitwise operator?</source>
          <target state="translated">什么时候应该使用位运算器?</target>
        </trans-unit>
        <trans-unit id="977e69a4c6c9753fa29b01440336be40e7f67f37" translate="yes" xml:space="preserve">
          <source>When using the Associative Array, the &lt;code&gt;key&lt;/code&gt; value would then be placed inside the index of the array to retrieve the desired &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">使用关联数组时， &lt;code&gt;key&lt;/code&gt; 将放置在数组的索引内以检索所需的 &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c0a861f490d43b812932814cfde2436f94144afb" translate="yes" xml:space="preserve">
          <source>Where as, if we wanted to call the array in some later part of the code, we could do:</source>
          <target state="translated">而如果我们想在后面的代码中调用数组,我们可以这样做。</target>
        </trans-unit>
        <trans-unit id="8a992ca5cbe22cf34c30a0fd933659f7f1a4f18a" translate="yes" xml:space="preserve">
          <source>Where can I read about conditionals done with &quot;?&quot; and &quot;:&quot; (colon)?</source>
          <target state="translated">我在哪里可以读到用&quot;? &quot;和&quot;:&quot;(冒号)做的条件式?</target>
        </trans-unit>
        <trans-unit id="df1c7422e392b51b24028da3551b7a58611cdc83" translate="yes" xml:space="preserve">
          <source>Where do we use the object operator &quot;-&amp;gt;&quot; in PHP?</source>
          <target state="translated">我们在PHP的哪里使用对象运算符&amp;ldquo;-&amp;gt;&amp;rdquo;？</target>
        </trans-unit>
        <trans-unit id="9d863fbd4a4b35d1abc87eb5fac9e58af686e66b" translate="yes" xml:space="preserve">
          <source>Why is this?</source>
          <target state="translated">为什么会这样?</target>
        </trans-unit>
        <trans-unit id="091eab9223f7cc9777c4aea9679c481780dce533" translate="yes" xml:space="preserve">
          <source>You can also increment letters in PHP:</source>
          <target state="translated">你也可以在PHP中增量字母。</target>
        </trans-unit>
        <trans-unit id="40052fed22d269470d8be0b9c9b766ec16085a27" translate="yes" xml:space="preserve">
          <source>You will notice that we have 3 bits set, in the 8, 2, and 1 columns. Add those up: 8+2+1=11.</source>
          <target state="translated">你会注意到我们有3个位,在8、2、1列中设置了3个位。把这些加起来。8+2+1=11.</target>
        </trans-unit>
        <trans-unit id="d0bfc452d079979e657de7f447231b82561194e7" translate="yes" xml:space="preserve">
          <source>comparing, !== versus !=</source>
          <target state="translated">比较,!</target>
        </trans-unit>
        <trans-unit id="7f53a68d324346fc8457a1665141697dcc97ee86" translate="yes" xml:space="preserve">
          <source>e.g.</source>
          <target state="translated">e.g.</target>
        </trans-unit>
        <trans-unit id="beda1183a248c33e9d286c84bb826143eb339d4a" translate="yes" xml:space="preserve">
          <source>have you even noticed how these calls works?</source>
          <target state="translated">你有没有注意到这些电话是如何工作的?</target>
        </trans-unit>
        <trans-unit id="c14aa39d5e24bb8bf753b622cd1c88aba5f20a07" translate="yes" xml:space="preserve">
          <source>php method argument type hinting with question mark (?type)</source>
          <target state="translated">php方法参数类型提示带问号(?type)</target>
        </trans-unit>
        <trans-unit id="471e8804517679ed9cd68d8beb1af40c3cbdea47" translate="yes" xml:space="preserve">
          <source>static::staticFunctionName()</source>
          <target state="translated">static::staticFunctionName()</target>
        </trans-unit>
        <trans-unit id="1a2c7b99d18d3c66f48ac2eb89adcbbe8e873533" translate="yes" xml:space="preserve">
          <source>what is &quot;$$&quot; in PHP</source>
          <target state="translated">什么是&quot;$$&quot;?</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
