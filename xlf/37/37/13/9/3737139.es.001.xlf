<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/3737139">
    <body>
      <group id="3737139">
        <trans-unit id="7993d4e4339a9951f823a1ec4011472c5a6291cd" translate="yes" xml:space="preserve">
          <source>$function() and $$variable</source>
          <target state="translated">$función()y $variable</target>
        </trans-unit>
        <trans-unit id="3e3a0ca736574d1f91ae688e33999dfe63386188" translate="yes" xml:space="preserve">
          <source>'AND' vs '&amp;amp;&amp;amp;' as operator</source>
          <target state="translated">'AND' vs '&amp;amp;&amp;amp;' como operador</target>
        </trans-unit>
        <trans-unit id="5a6295090c31e4b3925c06be0971be6d677fd43d" translate="yes" xml:space="preserve">
          <source>'At' symbol before variable name in PHP: @$_POST</source>
          <target state="translated">El símbolo 'At' antes del nombre de la variable en PHP:@$_POST</target>
        </trans-unit>
        <trans-unit id="e9c5d448b3d5e5e010db7a8adb804ac6db228733" translate="yes" xml:space="preserve">
          <source>+ operator for array in PHP?</source>
          <target state="translated">+operador para la matriz en PHP?</target>
        </trans-unit>
        <trans-unit id="c227ebdd5f3beeea9d5c5a6a076da10e0140472a" translate="yes" xml:space="preserve">
          <source>1 + 2 + 4 + 8 + 16 + 32 + 64 + 128 = 255 (1 Byte)</source>
          <target state="translated">1+2+4+8+16+32+64+128=255 (1 Byte)</target>
        </trans-unit>
        <trans-unit id="5488c7696397ce77e2af4fe180553a7b24993b01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/questions/21058439&quot;&gt;Is there ever a need to use ampersand in front of an object?&lt;/a&gt; (&amp;amp;$)</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/21058439&quot;&gt;&amp;iquest;Alguna vez hay necesidad de usar ampersand delante de un objeto?&lt;/a&gt; PS</target>
        </trans-unit>
        <trans-unit id="eada7f96817bd7a2b90e809861fa24564c0019d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;!!&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.logical.php&quot;&gt;Logical Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;!!&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.logical.php&quot;&gt;Operadores logicos&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7bb3d29ee2b002240c6a4f93e8232104e746e66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;!=&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.comparison.php&quot;&gt;Comparison Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;!=&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.comparison.php&quot;&gt;Operadores de comparaci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3d23dad164484d8066d6cc641c9c1c4e85dd2ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;!==&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.comparison.php&quot;&gt;Comparison Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;!==&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.comparison.php&quot;&gt;Operadores de comparaci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="917ce6a8a2352493cd4acee6ac8367890a56aafb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#&lt;/code&gt;&lt;a href=&quot;http://php.net/manual/en/language.basic-syntax.comments.php&quot;&gt;One-line shell-style comment&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#&lt;/code&gt; &lt;a href=&quot;http://php.net/manual/en/language.basic-syntax.comments.php&quot;&gt;Comentario de estilo de shell de una l&amp;iacute;nea&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="68a813b34ff27e8317e1c39bbf29e4dddefe96e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$$&lt;/code&gt;&lt;a href=&quot;http://php.net/manual/en/language.variables.variable.php&quot;&gt;Variable Variables&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;$$&lt;/code&gt; &lt;a href=&quot;http://php.net/manual/en/language.variables.variable.php&quot;&gt;Variable Variables&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d64d551301b11598a8f0405b95a833ee1fdf9e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.arithmetic.php&quot;&gt;Arithmetic Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;%&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.arithmetic.php&quot;&gt;Operadores aritm&amp;eacute;ticos&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa4aa4dfee38529dfa27157680ed5c877b637f7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.logical.php&quot;&gt;Logical Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.logical.php&quot;&gt;Operadores l&amp;oacute;gicos&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d635bfa55921f43e10e29d3ba117376bfc607ada" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;Bitwise Operators&lt;/a&gt; or &lt;a href=&quot;http://secure.php.net/manual/en/language.references.php&quot;&gt;References&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;Operadores&lt;/a&gt; o &lt;a href=&quot;http://secure.php.net/manual/en/language.references.php&quot;&gt;referencias&lt;/a&gt; bit a bit</target>
        </trans-unit>
        <trans-unit id="eff0b7ebf8743deed2341c52fc674b9cd100b545" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;=&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;Bitwise Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;=&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;Operadores bit a bit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a434fceb9e7181bcb231c63132c81eb9e31033a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;Bitwise Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;Operadores bit a bit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c2ecb06d07264c40892f44ec85aa6b65da5b56b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.comparison.php&quot;&gt;Comparison Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.comparison.php&quot;&gt;Operadores de comparaci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="27f428322cf01954968843c3862d4576ec530017" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;http://php.net/manual/en/language.types.string.php#language.types.string.syntax.heredoc&quot;&gt;Heredoc or Nowdoc&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;http://php.net/manual/en/language.types.string.php#language.types.string.syntax.heredoc&quot;&gt;Heredoc o Nowdoc&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2bf28e1034a39b5a6477608224ffa52592c46733" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;Bitwise Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;Operadores bit a bit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="92824043c3e52dc871603f5d8be5333ec2e19ad1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; Spaceship Operator</source>
          <target state="translated">&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; Operador de nave espacial</target>
        </trans-unit>
        <trans-unit id="ac662ede3feb24d931799dae45e1ada118a606af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.comparison.php&quot;&gt;Comparison Operators&lt;/a&gt; (since PHP 7.0)</source>
          <target state="translated">&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.comparison.php&quot;&gt;Operadores de comparaci&amp;oacute;n&lt;/a&gt; (desde PHP 7.0)</target>
        </trans-unit>
        <trans-unit id="f75497470f169c8682ee4625ba62049463241b63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;?&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.basic-syntax.php&quot;&gt;Opening and Closing tags&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;?&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.basic-syntax.php&quot;&gt;Etiquetas de apertura y cierre&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7590546cdf1f9568b9b5e9fe0850a79de2b752f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;?=&lt;/code&gt;&lt;a href=&quot;http://php.net/manual/en/ini.core.php#ini.short-open-tag&quot;&gt;Short Open Tags&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;?=&lt;/code&gt; &lt;a href=&quot;http://php.net/manual/en/ini.core.php#ini.short-open-tag&quot;&gt;Etiquetas abiertas cortas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9754655ba4ba8aa2a61c0fddf5a06a56f4ba9d93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;**&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/migration56.new-features.php#migration56.new-features.exponentiation&quot;&gt;Exponentiation&lt;/a&gt; (since PHP 5.6)</source>
          <target state="translated">&lt;code&gt;**&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/migration56.new-features.php#migration56.new-features.exponentiation&quot;&gt;Exponenciaci&amp;oacute;n&lt;/a&gt; (desde PHP 5.6)</target>
        </trans-unit>
        <trans-unit id="70055dd0e4b6aff1607e546970a4a332359f3189" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;++&lt;/code&gt; and &lt;code&gt;--&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.increment.php&quot;&gt;Incrementing/Decrementing Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;++&lt;/code&gt; y &lt;code&gt;--&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.increment.php&quot;&gt;Operadores de aumento / disminuci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e86bc0ed39959214b9130ce141d8b7d2706eca58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;++&lt;/code&gt; increment operator</source>
          <target state="translated">&lt;code&gt;++&lt;/code&gt; operador de incremento</target>
        </trans-unit>
        <trans-unit id="1d8c63df4e63075ce8d3c35c7715b0c6fb9ff132" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.arithmetic.php&quot;&gt;Arithmetic Operators&lt;/a&gt;, &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.array.php&quot;&gt;Array Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.arithmetic.php&quot;&gt;Operadores aritm&amp;eacute;ticos&lt;/a&gt; , &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.array.php&quot;&gt;operadores de matriz&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="52cbfd3189a5439ab3d3dc7349f825dedc8998bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+=&lt;/code&gt; and &lt;code&gt;-=&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.assignment.php&quot;&gt;Assignment Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;+=&lt;/code&gt; y &lt;code&gt;-=&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.assignment.php&quot;&gt;Operadores de asignaci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7fd693810716a88a96c4cd6de6ee454e214ca64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;,&lt;/code&gt;&lt;a href=&quot;http://php.net/manual/en/functions.arguments.php&quot;&gt;Function Arguments&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;,&lt;/code&gt; &lt;a href=&quot;http://php.net/manual/en/functions.arguments.php&quot;&gt;Argumentos de funci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="93080e1c3c92ed3829562482b98a5e1b2d0496a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;,&lt;/code&gt;&lt;a href=&quot;http://php.net/manual/en/language.variables.scope.php&quot;&gt;Variable Declarations&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;,&lt;/code&gt; &lt;a href=&quot;http://php.net/manual/en/language.variables.scope.php&quot;&gt;Declaraciones variables&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16c9dda8e5b0ab94ff7799f44611b67358aa67f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.oop5.php&quot;&gt;Classes And Objects&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;-&amp;gt;&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.oop5.php&quot;&gt;Clases y objetos&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c524f4d24725ad79746c77610af7544281625da9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--&lt;/code&gt; decrement operator</source>
          <target state="translated">&lt;code&gt;--&lt;/code&gt; operador de decremento</target>
        </trans-unit>
        <trans-unit id="fad5d149059e2409af5f3e10b101929fb19120ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;...&lt;/code&gt;&lt;a href=&quot;http://php.net/manual/en/functions.arguments.php#functions.variable-arg-list&quot;&gt;Argument unpacking&lt;/a&gt; (since PHP 5.6)</source>
          <target state="translated">&lt;code&gt;...&lt;/code&gt; &lt;a href=&quot;http://php.net/manual/en/functions.arguments.php#functions.variable-arg-list&quot;&gt;desempaquetado de argumentos&lt;/a&gt; (desde PHP 5.6)</target>
        </trans-unit>
        <trans-unit id="0985404380f922be1c64d731eb598874a1721a91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.string.php&quot;&gt;String Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;.&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.string.php&quot;&gt;Operadores de cadenas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ee9ada49962b880c4cb8e409eb1dcb49a751404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.=&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.assignment.php&quot;&gt;Assignment Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;.=&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.assignment.php&quot;&gt;Operadores de asignaci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7334ce807e9c998eeac998ea99567f77e8055538" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; when both operands are equal</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; cuando ambos operandos son iguales</target>
        </trans-unit>
        <trans-unit id="ee20c800ee537a4b6d02f9770d41e98ce3515ece" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;::&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.oop5.paamayim-nekudotayim.php&quot;&gt;Scope Resolution Operator&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;::&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.oop5.paamayim-nekudotayim.php&quot;&gt;Operador de resoluci&amp;oacute;n de alcance&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a65809703b264942bb177502ab3bd6aa36678d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/control-structures.alternative-syntax.php&quot;&gt;Alternative syntax for control structures&lt;/a&gt;, &lt;a href=&quot;http://php.net/manual/en/language.operators.comparison.php#language.operators.comparison.ternary&quot;&gt;Ternary Operator&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;:&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/control-structures.alternative-syntax.php&quot;&gt;Sintaxis alternativa para estructuras de control&lt;/a&gt; , &lt;a href=&quot;http://php.net/manual/en/language.operators.comparison.php#language.operators.comparison.ternary&quot;&gt;operador ternario&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="319e6c22129765e58d861b70e64cd5b6f16b7359" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:?&lt;/code&gt;&lt;a href=&quot;http://php.net/manual/en/migration71.new-features.php#migration71.new-features.nullable-types&quot;&gt;Nullable return types&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;:?&lt;/code&gt; &lt;a href=&quot;http://php.net/manual/en/migration71.new-features.php#migration71.new-features.nullable-types&quot;&gt;Tipos de retorno anulables&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="92b692ae82c8a43deaa238ef37646804b90429b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&amp;amp;&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.references.php&quot;&gt;References&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;=&amp;amp;&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.references.php&quot;&gt;References&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4b8548995f3b1da2cb7b2b1254c16429dcf712a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&amp;gt;&lt;/code&gt; Is the symbol we humans decided to use to separate &lt;code&gt;&quot;Key&quot; =&amp;gt; &quot;Value&quot;&lt;/code&gt; pairs in Associative Arrays.</source>
          <target state="translated">&lt;code&gt;=&amp;gt;&lt;/code&gt; Es el s&amp;iacute;mbolo que los humanos decidimos usar para separar los pares &lt;code&gt;&quot;Key&quot; =&amp;gt; &quot;Value&quot;&lt;/code&gt; en matrices asociativas.</target>
        </trans-unit>
        <trans-unit id="8f72c969285c97f5d37bc3b9220891f376d2deb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&amp;gt;&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.types.array.php&quot;&gt;Arrays&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;=&amp;gt;&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.types.array.php&quot;&gt;Arrays&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9eb18258f08f750cf72f44ba62785b077f44dd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.assignment.php&quot;&gt;Assignment Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.assignment.php&quot;&gt;Operadores de asignaci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="17932882fdcfdefc35f9f76bd35b48454dd46bbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;==&lt;/code&gt;  is used for check equality &lt;strong&gt;without&lt;/strong&gt; considering variable &lt;strong&gt;data-type&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;==&lt;/code&gt; se usa para verificar la igualdad &lt;strong&gt;sin&lt;/strong&gt; considerar &lt;strong&gt;el tipo de datos&lt;/strong&gt; variable</target>
        </trans-unit>
        <trans-unit id="44e5f36606b216ccfe0b681bb506ffbfd857a2c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;==&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.comparison.php&quot;&gt;Comparison Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;==&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.comparison.php&quot;&gt;Operadores de comparaci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ade911a427b66c73a45cf6e1e8011b56e355b23f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;===&lt;/code&gt; is used for check equality for &lt;strong&gt;both&lt;/strong&gt; the variable &lt;strong&gt;value&lt;/strong&gt; and &lt;strong&gt;data-type&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;===&lt;/code&gt; se utiliza para verificar la igualdad &lt;strong&gt;tanto&lt;/strong&gt; para el &lt;strong&gt;valor&lt;/strong&gt; variable como &lt;strong&gt;para el tipo de datos&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="41999a8dcc530f9cf20dc80df13e2f5e4eace09c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;===&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.comparison.php&quot;&gt;Comparison Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;===&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.comparison.php&quot;&gt;Operadores de comparaci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1db2f80220cd4f768948d9d05bb0438a2dc3d725" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?:&lt;/code&gt;&lt;a href=&quot;http://php.net/manual/en/language.operators.comparison.php#language.operators.comparison.ternary&quot;&gt;Ternary Operator&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;?:&lt;/code&gt; &lt;a href=&quot;http://php.net/manual/en/language.operators.comparison.php#language.operators.comparison.ternary&quot;&gt;Operador ternario&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="13d4ef41a26bd43ec016dd4b1daf167aecf22b33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;??&lt;/code&gt;&lt;a href=&quot;http://php.net/manual/en/migration71.new-features.php#migration71.new-features.nullable-types&quot;&gt;Null Coalesce Operator&lt;/a&gt; (since PHP 7)</source>
          <target state="translated">&lt;code&gt;??&lt;/code&gt; &lt;a href=&quot;http://php.net/manual/en/migration71.new-features.php#migration71.new-features.nullable-types&quot;&gt;Operador de fusi&amp;oacute;n nula&lt;/a&gt; (desde PHP 7)</target>
        </trans-unit>
        <trans-unit id="3069a7e1bbf9eb79a5289a078a9d1d3c6d239992" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?string&lt;/code&gt;&lt;code&gt;?int&lt;/code&gt;&lt;code&gt;?array&lt;/code&gt;&lt;code&gt;?bool&lt;/code&gt;&lt;code&gt;?float&lt;/code&gt;&lt;a href=&quot;http://php.net/manual/en/migration71.new-features.php#migration71.new-features.nullable-types&quot;&gt;Nullable return type declaration&lt;/a&gt; (since PHP 7.1)</source>
          <target state="translated">&lt;code&gt;?string&lt;/code&gt; &lt;code&gt;?int&lt;/code&gt; &lt;code&gt;?array&lt;/code&gt; &lt;code&gt;?bool&lt;/code&gt; &lt;code&gt;?float&lt;/code&gt; &lt;a href=&quot;http://php.net/manual/en/migration71.new-features.php#migration71.new-features.nullable-types&quot;&gt;Declaraci&amp;oacute;n de tipo de retorno anulable&lt;/a&gt; (desde PHP 7.1)</target>
        </trans-unit>
        <trans-unit id="fe520b3af71ef64348218bde9e00a9a1a16e1756" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.errorcontrol.php&quot;&gt;Error Control Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;@&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.errorcontrol.php&quot;&gt;Operadores de control de errores&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00562ea1c4bc043abda35fcfdfbb06bf2b30bfe0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[]&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.types.array.php&quot;&gt;Arrays&lt;/a&gt; (short syntax since PHP 5.4)</source>
          <target state="translated">&lt;code&gt;[]&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.types.array.php&quot;&gt;Matrices&lt;/a&gt; (sintaxis corta desde PHP 5.4)</target>
        </trans-unit>
        <trans-unit id="6620e7ea4c55157d97634a765822e553018aa109" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\&lt;/code&gt;&lt;a href=&quot;http://php.net/namespaces&quot;&gt;Namespaces&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;\&lt;/code&gt;&lt;a href=&quot;http://php.net/namespaces&quot;&gt;Namespaces&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="551f8384dc36ab07ecb51b4a9bd557bcc936ce52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;Bitwise Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;^&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;Operadores bit a bit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0326fc3502d304e03367a2a93da29c6b129c3261" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_&lt;/code&gt;&lt;strong&gt;&lt;a href=&quot;http://php.net/function.gettext#refsect1-function.gettext-notes&quot;&gt;Alias for gettext()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;_&lt;/code&gt; &lt;strong&gt;&lt;a href=&quot;http://php.net/function.gettext#refsect1-function.gettext-notes&quot;&gt;Alias ​​para gettext ()&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="76f9a89a486642f57768f1d1b0f187e9c4da9434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__CLASS__&lt;/code&gt;: The class name. (Added in PHP 4.3.0) As of PHP 5 this constant returns the class name as it was declared (case-sensitive). In PHP 4 its value is always lowercased. The class name includes the namespace it was declared in (e.g. &lt;code&gt;Foo\Bar&lt;/code&gt;). Note that as of PHP 5.4 &lt;code&gt;__CLASS__&lt;/code&gt; works also in traits. When used in a trait method, &lt;code&gt;__CLASS__&lt;/code&gt; is the name of the class the trait is used in.</source>
          <target state="translated">&lt;code&gt;__CLASS__&lt;/code&gt; : el nombre de la clase. (Agregado en PHP 4.3.0) A partir de PHP 5, esta constante devuelve el nombre de la clase tal como se declar&amp;oacute; (distingue entre may&amp;uacute;sculas y min&amp;uacute;sculas). En PHP 4 su valor siempre est&amp;aacute; en min&amp;uacute;scula. El nombre de la clase incluye el espacio de nombres en el que se declar&amp;oacute; (por ejemplo, &lt;code&gt;Foo\Bar&lt;/code&gt; ). Tenga en cuenta que a partir de PHP 5.4 &lt;code&gt;__CLASS__&lt;/code&gt; tambi&amp;eacute;n funciona en rasgos. Cuando se usa en un m&amp;eacute;todo de rasgo, &lt;code&gt;__CLASS__&lt;/code&gt; es el nombre de la clase en la que se usa el rasgo.</target>
        </trans-unit>
        <trans-unit id="5235affaba088b9ac0a0b938768f1a7f5a212353" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__DIR__&lt;/code&gt;: The directory of the file. If used inside an include, the directory of the included file is returned. This is equivalent to &lt;code&gt;dirname(__FILE__)&lt;/code&gt;. This directory name does not have a trailing slash unless it is the root directory. (Added in PHP 5.3.0.)</source>
          <target state="translated">&lt;code&gt;__DIR__&lt;/code&gt; : el directorio del archivo. Si se usa dentro de un include, se devuelve el directorio del archivo incluido. Esto es equivalente a &lt;code&gt;dirname(__FILE__)&lt;/code&gt; . Este nombre de directorio no tiene una barra inclinada final a menos que sea el directorio ra&amp;iacute;z. (Agregado en PHP 5.3.0.)</target>
        </trans-unit>
        <trans-unit id="cbfdd0cb63dffd2e39acb44d11bea29d8b9d698b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__FILE__&lt;/code&gt;: The full path and filename of the file. If used inside an include, the name of the included file is returned. Since PHP 4.0.2, &lt;code&gt;__FILE__&lt;/code&gt; always contains an absolute path with symlinks resolved whereas in older versions it contained relative path under some circumstances.</source>
          <target state="translated">&lt;code&gt;__FILE__&lt;/code&gt; : la ruta completa y el nombre de archivo del archivo. Si se usa dentro de un include, se devuelve el nombre del archivo incluido. Desde PHP &lt;code&gt;__FILE__&lt;/code&gt; , __FILE__ siempre contiene una ruta absoluta con enlaces simb&amp;oacute;licos resueltos, mientras que en versiones anteriores conten&amp;iacute;a una ruta relativa en algunas circunstancias.</target>
        </trans-unit>
        <trans-unit id="db1be3e8bdf28ac16e34525ad387e001af30023c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__FUNCTION__&lt;/code&gt;: The function name. (Added in PHP 4.3.0) As of PHP 5 this constant returns the function name as it was declared (case-sensitive). In PHP 4 its value is always lowercased.</source>
          <target state="translated">&lt;code&gt;__FUNCTION__&lt;/code&gt; : El nombre de la funci&amp;oacute;n. (Agregado en PHP 4.3.0) A partir de PHP 5, esta constante devuelve el nombre de la funci&amp;oacute;n tal como se declar&amp;oacute; (distingue entre may&amp;uacute;sculas y min&amp;uacute;sculas). En PHP 4 su valor siempre est&amp;aacute; en min&amp;uacute;scula.</target>
        </trans-unit>
        <trans-unit id="ac27ed863d0e1a0ac07c85bc88cf3be9b6159ad5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__LINE__&lt;/code&gt;: The current line number of the file.</source>
          <target state="translated">&lt;code&gt;__LINE__&lt;/code&gt; : El n&amp;uacute;mero de l&amp;iacute;nea actual del archivo.</target>
        </trans-unit>
        <trans-unit id="9f9505b76aa8d628d76e21c991c2566078707bc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__METHOD__&lt;/code&gt;: The class method name. (Added in PHP 5.0.0) The method name is returned as it was declared (case-sensitive).</source>
          <target state="translated">&lt;code&gt;__METHOD__&lt;/code&gt; : el nombre del m&amp;eacute;todo de clase. (Agregado en PHP 5.0.0) El nombre del m&amp;eacute;todo se devuelve como se declar&amp;oacute; (distingue entre may&amp;uacute;sculas y min&amp;uacute;sculas).</target>
        </trans-unit>
        <trans-unit id="cb4f361b9ae9dfa747f67bf70b7fac4205bf6c5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__NAMESPACE__&lt;/code&gt;: The name of the current namespace (case-sensitive). This constant is defined in compile-time (Added in PHP 5.3.0).</source>
          <target state="translated">&lt;code&gt;__NAMESPACE__&lt;/code&gt; : el nombre del espacio de nombres actual ( distingue entre may&amp;uacute;sculas y min&amp;uacute;sculas). Esta constante se define en tiempo de compilaci&amp;oacute;n (Agregado en PHP 5.3.0).</target>
        </trans-unit>
        <trans-unit id="5bd3e46393183fd7697700ccb2dd6f819474fde5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__TRAIT__&lt;/code&gt;: The trait name. (Added in PHP 5.4.0) As of PHP 5.4 this constant returns the trait as it was declared (case-sensitive). The trait name includes the namespace it was declared in (e.g. &lt;code&gt;Foo\Bar&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;__TRAIT__&lt;/code&gt; : el nombre del rasgo. (Agregado en PHP 5.4.0) A partir de PHP 5.4, esta constante devuelve el rasgo tal como fue declarado (distingue entre may&amp;uacute;sculas y min&amp;uacute;sculas). El nombre del rasgo incluye el espacio de nombres en el que se declar&amp;oacute; (por ejemplo, &lt;code&gt;Foo\Bar&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3e2471a0826d0d3e3c9dd0aedc4fc84c8e26ae95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;`&lt;/code&gt;&lt;a href=&quot;http://php.net/manual/en/language.operators.execution.php&quot;&gt;Execution Operator&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;`&lt;/code&gt; &lt;a href=&quot;http://php.net/manual/en/language.operators.execution.php&quot;&gt;Operador de ejecuci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f815d4c4bdc093509e2ee6e9cbf571a279b56e36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;and&lt;/code&gt; operator and &lt;code&gt;or&lt;/code&gt; operator have lower precedence than assignment operator &lt;code&gt;=&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;and&lt;/code&gt; operator y &lt;code&gt;or&lt;/code&gt; operator tienen menor prioridad que el operador de asignaci&amp;oacute;n &lt;code&gt;=&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="95334f1bef7a29b6fb70626da90260a3f9eac917" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if ($a == '5')&lt;/code&gt; - will evaluate to true, because while comparing this both value PHP internally convert that string value into integer and then compare both values</source>
          <target state="translated">&lt;code&gt;if ($a == '5')&lt;/code&gt; : se evaluar&amp;aacute; como verdadero, porque al comparar ambos valores, PHP convierte internamente ese valor de cadena en entero y luego compara ambos valores</target>
        </trans-unit>
        <trans-unit id="2b119dcf3dd4551b6eb196b4427c968415b683a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if ($a == 5)&lt;/code&gt;  - will evaluate to true</source>
          <target state="translated">&lt;code&gt;if ($a == 5)&lt;/code&gt; - se evaluar&amp;aacute; como verdadero</target>
        </trans-unit>
        <trans-unit id="b3ee2108853b7a22564b868a842ea33e463cc821" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if ($a === '5')&lt;/code&gt; - will evaluate to false, because value is 5, but this value 5 is not an integer.</source>
          <target state="translated">&lt;code&gt;if ($a === '5')&lt;/code&gt; : se evaluar&amp;aacute; como falso, porque el valor es 5, pero este valor 5 no es un entero.</target>
        </trans-unit>
        <trans-unit id="46b683978d8ab2b721c073093668e2c93220e823" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if ($a === 5)&lt;/code&gt; - will evaluate to true</source>
          <target state="translated">&lt;code&gt;if ($a === 5)&lt;/code&gt; - se evaluar&amp;aacute; como verdadero</target>
        </trans-unit>
        <trans-unit id="92123cccd9603eee85fb8c0b6e7d9a9c9f9b32d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;instanceof&lt;/code&gt; is used to determine whether a PHP variable is an instantiated object of a certain class.</source>
          <target state="translated">&lt;code&gt;instanceof&lt;/code&gt; se usa para determinar si una variable PHP es un objeto instanciado de cierta clase.</target>
        </trans-unit>
        <trans-unit id="42ecbd825fb8b79c9c411f10de1dba42154c177d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{}&lt;/code&gt; Curly braces</source>
          <target state="translated">&lt;code&gt;{}&lt;/code&gt; Llaves</target>
        </trans-unit>
        <trans-unit id="31b521c0ef652c463ae010a0ab138d218ca9f945" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;|&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;Bitwise Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;|&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;Operadores bit a bit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f97a08980429242aa82cfa2147f734518c56d6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;||&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.logical.php&quot;&gt;Logical Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;||&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.logical.php&quot;&gt;Operadores logicos&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fe581da8138184215f8801769f237cabec2ca755" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~&lt;/code&gt;&lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;Bitwise Operators&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;~&lt;/code&gt; &lt;a href=&quot;http://secure.php.net/manual/en/language.operators.bitwise.php&quot;&gt;Operadores bit a bit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="599a9c36a10a02df9bded37de71dce467e55ed67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;! $a :&lt;/strong&gt; TRUE if $a is not TRUE.</source>
          <target state="translated">&lt;strong&gt;!&lt;/strong&gt; &lt;strong&gt;$ a:&lt;/strong&gt; VERDADERO si $ a no es VERDADERO.</target>
        </trans-unit>
        <trans-unit id="955edb8191e903a98238119ae88f4c8bd2892e0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a != $b :&lt;/strong&gt; TRUE if $a is not equal to $b after type juggling.</source>
          <target state="translated">&lt;strong&gt;$ a! = $ b:&lt;/strong&gt; VERDADERO si $ a no es igual a $ b despu&amp;eacute;s del malabarismo de tipos.</target>
        </trans-unit>
        <trans-unit id="583ea82ff382ffcbff639da82eb6f95055ba0016" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a != $b&lt;/strong&gt; : TRUE if $a is not equal to $b.</source>
          <target state="translated">&lt;strong&gt;$ a! = $ b&lt;/strong&gt; : VERDADERO si $ a no es igual a $ b.</target>
        </trans-unit>
        <trans-unit id="00e2ef064bcc62ced58c4dd02d605895a860b276" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a !== $b   :&lt;/strong&gt; TRUE if $a is not equal to $b, or they are not of the same type.</source>
          <target state="translated">&lt;strong&gt;$ a! == $ b:&lt;/strong&gt; VERDADERO si $ a no es igual a $ b, o si no son del mismo tipo.</target>
        </trans-unit>
        <trans-unit id="a1fc7882b775ecaa949d6cfa1d05fc1f29a93c5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a !== $b&lt;/strong&gt; : TRUE if $a is not identical to $b.</source>
          <target state="translated">&lt;strong&gt;$ a! == $ b&lt;/strong&gt; : VERDADERO si $ a no es id&amp;eacute;ntico a $ b.</target>
        </trans-unit>
        <trans-unit id="60b72826865eac38ba84de8475f99d22f5a5cce0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a % $b&lt;/strong&gt; : Remainder of $a divided by $b.</source>
          <target state="translated">&lt;strong&gt;$ a% $ b&lt;/strong&gt; : resto de $ a dividido por $ b.</target>
        </trans-unit>
        <trans-unit id="720c31b44e79f276bf20b658d8c91bf64df00f72" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a %= $b&lt;/strong&gt; : Same as $a = $a % $b</source>
          <target state="translated">&lt;strong&gt;$ a% = $ b&lt;/strong&gt; : igual que $ a = $ a% $ b</target>
        </trans-unit>
        <trans-unit id="4ea41c2a80f0ce99d4307bf6065a31ed94b45b87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;amp; $b&lt;/strong&gt; : Bits that are set in both $a and $b are set.</source>
          <target state="translated">&lt;strong&gt;$ a y $ b&lt;/strong&gt; : se establecen los bits que se establecen en $ a y $ b.</target>
        </trans-unit>
        <trans-unit id="a31b4b879ff64082ee5c09aa5ce08a9bd9fc3b3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;amp;&amp;amp; $b :&lt;/strong&gt; TRUE if both $a and $b are TRUE.</source>
          <target state="translated">&lt;strong&gt;$ a &amp;amp;&amp;amp; $ b:&lt;/strong&gt; VERDADERO si $ a y $ b son VERDADEROS.</target>
        </trans-unit>
        <trans-unit id="f70947a5436125e25614db51b46d7b3df94bcbfa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;amp;= $b&lt;/strong&gt; : Same as $a = $a &amp;amp; $b</source>
          <target state="translated">&lt;strong&gt;$ a &amp;amp; = $ b&lt;/strong&gt; : igual que $ a = $ a &amp;amp; $ b</target>
        </trans-unit>
        <trans-unit id="cb1bbee58a0027b7bde3478a4a38ea18584e9e31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;gt; $b&lt;/strong&gt; : TRUE if $a is strictly greater than $b.</source>
          <target state="translated">&lt;strong&gt;$ a&amp;gt; $ b&lt;/strong&gt; : VERDADERO si $ a es estrictamente mayor que $ b.</target>
        </trans-unit>
        <trans-unit id="29f69a9317d2e322bda7e7eb5ff211d9b02a1957" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;gt;&amp;gt; $b&lt;/strong&gt; : Shift the bits of $a $b steps to the right (each step means &quot;divide by two&quot;)</source>
          <target state="translated">&lt;strong&gt;$ a &amp;gt;&amp;gt; $ b&lt;/strong&gt; : desplaza los bits de $ a $ b pasos hacia la derecha (cada paso significa &quot;dividir por dos&quot;)</target>
        </trans-unit>
        <trans-unit id="f55ce30f980963036fa97d2ba83abfa12a0b93c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;gt;&amp;gt;= $b&lt;/strong&gt; : Same as $a = $a &amp;gt;&amp;gt; $b</source>
          <target state="translated">&lt;strong&gt;$ a &amp;gt;&amp;gt; = $ b&lt;/strong&gt; : igual que $ a = $ a &amp;gt;&amp;gt; $ b</target>
        </trans-unit>
        <trans-unit id="4d00637fe2be2fd360274eeb9eb5398d92ffee81" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;gt;= $b&lt;/strong&gt; : TRUE if $a is greater than or equal to $b.</source>
          <target state="translated">&lt;strong&gt;$ a&amp;gt; = $ b&lt;/strong&gt; : VERDADERO si $ a es mayor o igual que $ b.</target>
        </trans-unit>
        <trans-unit id="cf231033d1c7917efedf546ed20a8744c8bbb253" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;lt; $b&lt;/strong&gt; : TRUE if $a is strictly less than $b.</source>
          <target state="translated">&lt;strong&gt;$ a &amp;lt;$ b&lt;/strong&gt; : VERDADERO si $ a es estrictamente menor que $ b.</target>
        </trans-unit>
        <trans-unit id="cf2f5379cb4caa075c608a3c4486ce5fc28c86cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;lt;&amp;gt; $b :&lt;/strong&gt; TRUE if $a is not equal to $b after type juggling.</source>
          <target state="translated">&lt;strong&gt;$ a &amp;lt;&amp;gt; $ b:&lt;/strong&gt; VERDADERO si $ a no es igual a $ b despu&amp;eacute;s del malabarismo de tipos.</target>
        </trans-unit>
        <trans-unit id="d0e24f6d525b09750163a634e74a9d0c1b040d5c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;lt;&amp;gt; $b&lt;/strong&gt; : TRUE if $a is not equal to $b.</source>
          <target state="translated">&lt;strong&gt;$ a &amp;lt;&amp;gt; $ b&lt;/strong&gt; : VERDADERO si $ a no es igual a $ b.</target>
        </trans-unit>
        <trans-unit id="65506418d88c3e2d37fb6b91606f5ea5facd276d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;lt;&amp;lt; $b&lt;/strong&gt; : Shift the bits of $a $b steps to the left (each step means &quot;multiply by two&quot;)</source>
          <target state="translated">&lt;strong&gt;$ a &amp;lt;&amp;lt; $ b&lt;/strong&gt; : desplaza los bits de $ a $ b pasos hacia la izquierda (cada paso significa &quot;multiplicar por dos&quot;)</target>
        </trans-unit>
        <trans-unit id="3f43a1cd275c9fa2d99f8039a8f4d8f6bf449357" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;lt;&amp;lt;= $b&lt;/strong&gt; : Same as $a = $a &amp;lt;&amp;lt; $b</source>
          <target state="translated">&lt;strong&gt;$ a &amp;lt;&amp;lt; = $ b&lt;/strong&gt; : igual que $ a = $ a &amp;lt;&amp;lt; $ b</target>
        </trans-unit>
        <trans-unit id="9561be35b589e9713f2754fa8c2d422b19ede11a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;lt;= $b&lt;/strong&gt; : TRUE if $a is less than or equal to $b.</source>
          <target state="translated">&lt;strong&gt;$ a &amp;lt;= $ b&lt;/strong&gt; : VERDADERO si $ a es menor o igual que $ b.</target>
        </trans-unit>
        <trans-unit id="9aa73731ccf9c7a81cdb22010aec69767417e285" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a &amp;lt;=&amp;gt; $b&lt;/strong&gt; : An integer less than, equal to, or greater than zero when $a is respectively less than, equal to, or greater than $b. Available as of PHP 7.</source>
          <target state="translated">&lt;strong&gt;$ a &amp;lt;=&amp;gt; $ b&lt;/strong&gt; : Un n&amp;uacute;mero entero menor que, igual o mayor que cero cuando $ a es respectivamente menor, igual o mayor que $ b. Disponible a partir de PHP 7.</target>
        </trans-unit>
        <trans-unit id="c3f1e4182ffb1d0d9b2d2129deea575da63c068f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a * $b&lt;/strong&gt; : Product of $a and $b.</source>
          <target state="translated">&lt;strong&gt;$ a * $ b&lt;/strong&gt; : Producto de $ a y $ b.</target>
        </trans-unit>
        <trans-unit id="d33e4598b8bef6c3b45717e4b99c4e30d48bc495" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a ** $b&lt;/strong&gt; : Result of raising $a to the $b'th power (introduced in PHP 5.6)</source>
          <target state="translated">&lt;strong&gt;$ a ** $ b&lt;/strong&gt; : Resultado de elevar $ a a la potencia $ b'th (introducido en PHP 5.6)</target>
        </trans-unit>
        <trans-unit id="3ec8302278fed692595a4b4f194311f6c00ea9ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a **= $b&lt;/strong&gt; : Same as $a = $a ** $b</source>
          <target state="translated">&lt;strong&gt;$ a ** = $ b&lt;/strong&gt; : igual que $ a = $ a ** $ b</target>
        </trans-unit>
        <trans-unit id="2e589312eb3646f517ada1606a31418e7e19b40d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a *= $b&lt;/strong&gt; : Same as $a = $a * $b</source>
          <target state="translated">&lt;strong&gt;$ a * = $ b&lt;/strong&gt; : igual que $ a = $ a * $ b</target>
        </trans-unit>
        <trans-unit id="3fa5dd25b0a6853d1f8ce2a305648a3b73ca667a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a + $b&lt;/strong&gt; : Sum of $a and $b.</source>
          <target state="translated">&lt;strong&gt;$ a + $ b&lt;/strong&gt; : Suma de $ a y $ b.</target>
        </trans-unit>
        <trans-unit id="179d0831f29c67b208972815098c0e33feb59041" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a + $b&lt;/strong&gt; : Union of $a and $b.</source>
          <target state="translated">&lt;strong&gt;$ a + $ b&lt;/strong&gt; : Uni&amp;oacute;n de $ a y $ b.</target>
        </trans-unit>
        <trans-unit id="73e820866297c468d7c1403a31a7e19e6a571114" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a += $b&lt;/strong&gt; : Same as $a = $a + $b</source>
          <target state="translated">&lt;strong&gt;$ a + = $ b&lt;/strong&gt; : igual que $ a = $ a + $ b</target>
        </trans-unit>
        <trans-unit id="4675f045290fa7a0478fe10d4085fbd9249eb1ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a - $b&lt;/strong&gt; : Difference of $a and $b.</source>
          <target state="translated">&lt;strong&gt;$ a - $ b&lt;/strong&gt; : diferencia de $ a y $ b.</target>
        </trans-unit>
        <trans-unit id="a8bbc74dfb95cca038219e62e75c6b03f73b8861" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a -= $b&lt;/strong&gt; : Same as $a = $a - $b</source>
          <target state="translated">&lt;strong&gt;$ a - = $ b&lt;/strong&gt; : igual que $ a = $ a - $ b</target>
        </trans-unit>
        <trans-unit id="9f2442658f0e5c56372460e6bf8509d09b3e9a2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a . $b&lt;/strong&gt; : Concatenation of $a and $b.</source>
          <target state="translated">&lt;strong&gt;$ a.&lt;/strong&gt; &lt;strong&gt;$ b&lt;/strong&gt; : Concatenaci&amp;oacute;n de $ a y $ b.</target>
        </trans-unit>
        <trans-unit id="7946b0c477eb5e95b34d0725218786c3c5533101" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a .= $b&lt;/strong&gt; : Same as $a = $a . $b</source>
          <target state="translated">&lt;strong&gt;$ a. = $ b&lt;/strong&gt; : igual que $ a = $ a. $ b</target>
        </trans-unit>
        <trans-unit id="ce56deb8a68ef52d875888b48e23047e7b7849f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a / $b&lt;/strong&gt; : Quotient of $a and $b.</source>
          <target state="translated">&lt;strong&gt;$ a / $ b&lt;/strong&gt; : Cociente de $ a y $ b.</target>
        </trans-unit>
        <trans-unit id="24305b39d6e7107b6387c6616d396714a686c78f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a /= $b&lt;/strong&gt; : Same as $a = $a / $b</source>
          <target state="translated">&lt;strong&gt;$ a / = $ b&lt;/strong&gt; : igual que $ a = $ a / $ b</target>
        </trans-unit>
        <trans-unit id="0d5e35c27d1ffc2ea1cb416120d21cae3272590f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a = $b&lt;/strong&gt; : The value of $b is assigned to $a</source>
          <target state="translated">&lt;strong&gt;$ a = $ b&lt;/strong&gt; : el valor de $ b se asigna a $ a</target>
        </trans-unit>
        <trans-unit id="cf32777ea5dfd28ff12cc6f8f9e63a8a92bddf1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a == $b :&lt;/strong&gt; TRUE if $a is equal to $b after type juggling.</source>
          <target state="translated">&lt;strong&gt;$ a == $ b:&lt;/strong&gt; VERDADERO si $ a es igual a $ b despu&amp;eacute;s del malabarismo de tipos.</target>
        </trans-unit>
        <trans-unit id="1d159487b8b14de4d2cfe28e785be1e955ac5c5d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a == $b&lt;/strong&gt; : TRUE if $a and $b have the same key/value pairs.</source>
          <target state="translated">&lt;strong&gt;$ a == $ b&lt;/strong&gt; : VERDADERO si $ a y $ b tienen los mismos pares clave / valor.</target>
        </trans-unit>
        <trans-unit id="b4651c65250010a35b1d7dd86db7938701de7212" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a === $b   :&lt;/strong&gt; TRUE if $a is equal to $b, and they are of the same type.</source>
          <target state="translated">&lt;strong&gt;$ a === $ b:&lt;/strong&gt; VERDADERO si $ a es igual a $ b, y son del mismo tipo.</target>
        </trans-unit>
        <trans-unit id="dae00ef0f9b997c18ab208c8470bb36c781e4ece" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a === $b&lt;/strong&gt; : TRUE if $a and $b have the same key/value pairs in the same order and of the same types.</source>
          <target state="translated">&lt;strong&gt;$ a === $ b&lt;/strong&gt; : VERDADERO si $ a y $ b tienen los mismos pares clave / valor en el mismo orden y de los mismos tipos.</target>
        </trans-unit>
        <trans-unit id="159517afe9bf0c8f686d7ac9957ec81f5acb1104" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a ? $b : $c&lt;/strong&gt; : if $a return $b else return $c (&lt;a href=&quot;http://php.net/manual/en/language.operators.comparison.php#language.operators.comparison.ternary&quot;&gt;&lt;strong&gt;ternary operator&lt;/strong&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;strong&gt;$ a?&lt;/strong&gt; &lt;strong&gt;$ b: $ c&lt;/strong&gt; : si $ a devuelve $ b m&amp;aacute;s devuelve $ c ( &lt;a href=&quot;http://php.net/manual/en/language.operators.comparison.php#language.operators.comparison.ternary&quot;&gt;&lt;strong&gt;operador ternario&lt;/strong&gt;&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="4192da2fc36e47c3207bbe2c00b7e23a154ba124" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a ?? $c&lt;/strong&gt; : Same as $a ? $a : $c (&lt;a href=&quot;http://php.net/manual/en/language.operators.comparison.php#language.operators.comparison.coalesce&quot;&gt;&lt;strong&gt;null coalescing operator&lt;/strong&gt;&lt;/a&gt; - requires PHP&amp;gt;=7)</source>
          <target state="translated">&lt;strong&gt;$ a ??&lt;/strong&gt; &lt;strong&gt;$ c&lt;/strong&gt; : &amp;iquest;Lo mismo que $ a? $ a: $ c ( &lt;a href=&quot;http://php.net/manual/en/language.operators.comparison.php#language.operators.comparison.coalesce&quot;&gt;&lt;strong&gt;operador de fusi&amp;oacute;n nulo&lt;/strong&gt;&lt;/a&gt; ; requiere PHP&amp;gt; = 7)</target>
        </trans-unit>
        <trans-unit id="338264d1b648ea92d10106e40aba11c441dc4f46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a ^ $b&lt;/strong&gt; : Bits that are set in $a or $b but not both are set.</source>
          <target state="translated">&lt;strong&gt;$ a ^ $ b&lt;/strong&gt; : Bits que se establecen en $ a o $ b pero no ambos.</target>
        </trans-unit>
        <trans-unit id="8db0561cc74aac14b0b5476212fbf890cc94c52b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a ^= $b&lt;/strong&gt; : Same as $a = $a ^ $b</source>
          <target state="translated">&lt;strong&gt;$ a ^ = $ b&lt;/strong&gt; : igual que $ a = $ a ^ $ b</target>
        </trans-unit>
        <trans-unit id="d37c6785c394972b1b338d085fadb5295b81ca65" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a and $b :&lt;/strong&gt; TRUE if both $a and $b are TRUE.</source>
          <target state="translated">&lt;strong&gt;$ a y $ b:&lt;/strong&gt; VERDADERO si $ a y $ b son VERDADEROS.</target>
        </trans-unit>
        <trans-unit id="1e9c1463803066607f39c7713f3e6ba3f8d11cdf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a or $b :&lt;/strong&gt; TRUE if either $a or $b is TRUE.</source>
          <target state="translated">&lt;strong&gt;$ a o $ b:&lt;/strong&gt; VERDADERO si $ a o $ b es VERDADERO.</target>
        </trans-unit>
        <trans-unit id="ebbebca5ce3039692ff7928d76684516b8be2f11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a xor $b :&lt;/strong&gt; TRUE if either $a or $b is TRUE, but not both.</source>
          <target state="translated">&lt;strong&gt;$ a xor $ b:&lt;/strong&gt; VERDADERO si $ a o $ b es VERDADERO, pero no ambos.</target>
        </trans-unit>
        <trans-unit id="9fe78deb98faa59797de25c73a75b0d286f3abcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a | $b&lt;/strong&gt; : Bits that are set in either $a or $b are set.</source>
          <target state="translated">&lt;strong&gt;$ a |&lt;/strong&gt; &lt;strong&gt;$ b&lt;/strong&gt; : se establecen los bits que se establecen en $ a o $ b.</target>
        </trans-unit>
        <trans-unit id="49b07e8c9cdf279ad33a768c5a0c6d7b7a7cb4e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a |= $b&lt;/strong&gt; : Same as $a = $a | $b</source>
          <target state="translated">&lt;strong&gt;$ a | = $ b&lt;/strong&gt; : igual que $ a = $ a | $ b</target>
        </trans-unit>
        <trans-unit id="fb8d5a04d7b9410cea85a9414323e938ae54653f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a || $b :&lt;/strong&gt; TRUE if either $a or $b is TRUE.</source>
          <target state="translated">&lt;strong&gt;$ a ||&lt;/strong&gt; &lt;strong&gt;$ b:&lt;/strong&gt; VERDADERO si $ a o $ b es VERDADERO.</target>
        </trans-unit>
        <trans-unit id="f931e64629b2cac7fbe8e408c3f78f41767b482a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a++&lt;/strong&gt; : Returns $a, then increments $a by one.</source>
          <target state="translated">&lt;strong&gt;$ a ++&lt;/strong&gt; : Devuelve $ a, luego incrementa $ a en uno.</target>
        </trans-unit>
        <trans-unit id="f6712687ffaa07c5c9abba51f24292c5e02f7a15" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$a--&lt;/strong&gt; : Returns $a, then decrements $a by one.</source>
          <target state="translated">&lt;strong&gt;$ a--&lt;/strong&gt; : Devuelve $ a, luego disminuye $ a por uno.</target>
        </trans-unit>
        <trans-unit id="84aed8e0269f024183775b6af8b6e50e79f24ce1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&amp;amp;&lt;/strong&gt; usually checks bits that are set in both $a and $b are set.</source>
          <target state="translated">&lt;strong&gt;&amp;amp;&lt;/strong&gt; generalmente verifica los bits que se establecen en $ a y $ b.</target>
        </trans-unit>
        <trans-unit id="7be472541313fec9a3ec24e057f2eeb719679e25" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;++$a&lt;/strong&gt; : Increments $a by one, then returns $a.</source>
          <target state="translated">&lt;strong&gt;++ $ a&lt;/strong&gt; : Incrementa $ a en uno, luego devuelve $ a.</target>
        </trans-unit>
        <trans-unit id="b02c4c5a1c00bb0982d2ab84f1f59d5d7f29bcd1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;-$a&lt;/strong&gt; : Opposite of $a.</source>
          <target state="translated">&lt;strong&gt;- $ a&lt;/strong&gt; : opuesto a $ a.</target>
        </trans-unit>
        <trans-unit id="435041dc79ada8540924cdd20361a54f6499045c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;--$a&lt;/strong&gt; : Decrements $a by one, then returns $a.</source>
          <target state="translated">&lt;strong&gt;- $ a&lt;/strong&gt; : disminuye $ a en uno, luego devuelve $ a.</target>
        </trans-unit>
        <trans-unit id="03e2999d7d1fe8e36e0849f73ec52f41b8bb90f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1) Single Quote Strings:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;1) Cadenas de comillas simples:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5419894189be920cdcf99b23b8eb8b792f568faa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2) Double Quote Strings:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;2) Cadenas de comillas dobles:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="71ca065dec1e26480e93fe1d5bc2bdce48488230" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;3) Heredoc:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;3) Heredoc:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="792f6e4a27ed68cd5e728786f234e13ebb2b41b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;4) Nowdoc (since PHP 5.3.0):&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;4) Nowdoc (desde PHP 5.3.0):&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2de5f90f70cd0b2b62b100939dda7470fc2b5d2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://codepad.org/5ZD3j0xb&quot;&gt;Live example&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://codepad.org/5ZD3j0xb&quot;&gt;Ejemplo en vivo&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b96395a1dce0bb268fefc5bde3ec05d07a898a26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://php.net/manual/en/language.operators.increment.php&quot;&gt;Incrementing / Decrementing Operators&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://php.net/manual/en/language.operators.increment.php&quot;&gt;Operadores en aumento / decremento&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d59bfcc13dd67afa7fc8f9028079b6a5222ad6ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1968371/understanding-incrementing&quot;&gt;Understanding Incrementing&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1968371/understanding-incrementing&quot;&gt;Comprensi&amp;oacute;n Incremento&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="78a203742b521feffadaf22089b55c7234ec551a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ANSWER:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ANSWER:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c1c82130acb6e7b96ccfaa38ae68645889c3944b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;As of PHP 7.1.0, return values can be marked as nullable by prefixing the type name with a question mark (?). This signifies that the function returns either the specified type or NULL.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;A partir de PHP 7.1.0, los valores de retorno se pueden marcar como anulables al prefijar el nombre del tipo con un signo de interrogaci&amp;oacute;n (?).&lt;/strong&gt; &lt;strong&gt;Esto significa que la funci&amp;oacute;n devuelve el tipo especificado o NULL.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8979f473a595992fccb54902b65d519a8190f8bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ELABORATING:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ELABORATING:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4905e064b51c87a9e64466f301de9f5691beee56" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;FINAL POINT:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PUNTO FINAL:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="16047fbce0838b416ac5edaa052dd7b67668db78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Magic constants&lt;/strong&gt;: Although these are not just symbols but important part of this token family. There are eight magical constants that change depending on where they are used.</source>
          <target state="translated">&lt;strong&gt;Constantes m&amp;aacute;gicas&lt;/strong&gt; : aunque estos no son solo s&amp;iacute;mbolos sino parte importante de esta familia de fichas. Hay ocho constantes m&amp;aacute;gicas que cambian dependiendo de d&amp;oacute;nde se usan.</target>
        </trans-unit>
        <trans-unit id="407f91bf1c7f571966ceb1bb634986062bb24d30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Null coalescing operator (??)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Operador de fusi&amp;oacute;n nula (??)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="90ff99b5075f777f003a89611a809f44be84c3d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PHP &quot;&amp;amp;&quot; operator&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Operador PHP &quot;&amp;amp;&quot;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="30c2e4208aeb48cbb1652f224512112856dcc41b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PHP Strings:&lt;/strong&gt;
PHP Strings can be specified in four ways not just two ways:</source>
          <target state="translated">&lt;strong&gt;Cadenas PHP: Las cadenas&lt;/strong&gt; PHP se pueden especificar de cuatro maneras, no solo de dos maneras:</target>
        </trans-unit>
        <trans-unit id="c8f50df1ddb5574b8312113464b6da8041aea481" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;QUESTION:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;QUESTION:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c587a1bb9ca563541cf77bb86482fc8e3fa10e85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Question&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Question&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="dc1f96ff4b5c4c345c12336126290b5d20bc0b16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Above Example &lt;code&gt;$a&lt;/code&gt; is a object of the &lt;code&gt;mclass&lt;/code&gt; so use only a &lt;code&gt;mclass&lt;/code&gt; data not instance of with the &lt;code&gt;sclass&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Motivo: el&lt;/strong&gt; ejemplo anterior &lt;code&gt;$a&lt;/code&gt; es un objeto de &lt;code&gt;mclass&lt;/code&gt; , por lo tanto, use solo datos de &lt;code&gt;mclass&lt;/code&gt; que no sean una instancia de &lt;code&gt;sclass&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf8308e79a74758f6a22cb274de402dde7ef640b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Second example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Segundo ejemplo&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a222243be16d5da1c7aac6a732d8f0b59c3212d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Spaceship Operator &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;&lt;/strong&gt; (Added in PHP 7)</source>
          <target state="translated">&lt;strong&gt;Operador de nave espacial &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; &lt;/strong&gt; (agregado en PHP 7)</target>
        </trans-unit>
        <trans-unit id="0d551dd14491b761d0ec603676b95fe32e0764a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Stack Overflow Posts:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Publicaciones de desbordamiento de pila:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2c3828e3ba8c1fc6ffa0dfae59fef398b94b9a73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Three DOTS as Splat Operator (...)&lt;/strong&gt; (since PHP 5.6)</source>
          <target state="translated">&lt;strong&gt;Tres DOTS como operador de Splat (...)&lt;/strong&gt; (desde PHP 5.6)</target>
        </trans-unit>
        <trans-unit id="65900c0d319a909ecf9dc53c1ce2c380ccdf8373" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What should I do here?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&amp;iquest;Qu&amp;eacute; debo hacer aqu&amp;iacute;?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="beb731526b45cd7e2d146706f2dd952e1005b579" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;~ $a&lt;/strong&gt; : Bits that are set in $a are not set, and vice versa.</source>
          <target state="translated">&lt;strong&gt;~ $ a&lt;/strong&gt; : los bits que se establecen en $ a no se establecen, y viceversa.</target>
        </trans-unit>
        <trans-unit id="0a7f9b30a0c3f33f4709641fdb7d576e4ddd6e36" translate="yes" xml:space="preserve">
          <source>?: operator (the 'Elvis operator') in PHP</source>
          <target state="translated">?:operador (el 'operador de Elvis')en PHP</target>
        </trans-unit>
        <trans-unit id="9229bf6d29f973f8ef73ec942f1e00db3c67c756" translate="yes" xml:space="preserve">
          <source>A few examples for better understanding</source>
          <target state="translated">Algunos ejemplos para comprender mejor</target>
        </trans-unit>
        <trans-unit id="cefd585636eb92717a12ee7f2a084a6941fc498b" translate="yes" xml:space="preserve">
          <source>A good practical application of using this operator would be in comparison type callbacks that are expected to return a zero, negative, or positive integer based on a three-way comparison between two values. The comparison function passed to &lt;a href=&quot;http://php.net/manual/en/function.usort.php&quot;&gt;&lt;code&gt;usort&lt;/code&gt;&lt;/a&gt; is one such example.</source>
          <target state="translated">Una buena aplicaci&amp;oacute;n pr&amp;aacute;ctica del uso de este operador ser&amp;iacute;a en devoluciones de llamada de tipo de comparaci&amp;oacute;n que se espera que devuelvan un entero cero, negativo o positivo basado en una comparaci&amp;oacute;n tripartita entre dos valores. La funci&amp;oacute;n de comparaci&amp;oacute;n pasada a &lt;a href=&quot;http://php.net/manual/en/function.usort.php&quot;&gt; &lt;code&gt;usort&lt;/code&gt; &lt;/a&gt; es uno de esos ejemplos.</target>
        </trans-unit>
        <trans-unit id="fecdf9247b9c389a0182c00bf306fc6bea99ab96" translate="yes" xml:space="preserve">
          <source>Added in PHP 7</source>
          <target state="translated">Añadido en PHP 7</target>
        </trans-unit>
        <trans-unit id="749ba84ffe7c934d20c7a7d822755ef40b735566" translate="yes" xml:space="preserve">
          <source>An overview of &lt;a href=&quot;http://php.net/manual/en/language.operators.php&quot;&gt;&lt;strong&gt;operators in PHP&lt;/strong&gt;&lt;/a&gt;:</source>
          <target state="translated">Una descripci&amp;oacute;n general de los &lt;a href=&quot;http://php.net/manual/en/language.operators.php&quot;&gt;&lt;strong&gt;operadores en PHP&lt;/strong&gt;&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="230a38b5de85cd8ebba22867e657f4addbf870f0" translate="yes" xml:space="preserve">
          <source>And now, to receive the same output as before, the &lt;code&gt;key&lt;/code&gt; value would be used in the arrays index:</source>
          <target state="translated">Y ahora, para recibir el mismo resultado que antes, el valor &lt;code&gt;key&lt;/code&gt; se usar&amp;iacute;a en el &amp;iacute;ndice de matrices:</target>
        </trans-unit>
        <trans-unit id="78f725d64e9b255480b6afc099046bc3ee05c66b" translate="yes" xml:space="preserve">
          <source>And some words about last post</source>
          <target state="translated">Y algunas palabras sobre el último post</target>
        </trans-unit>
        <trans-unit id="c87ffc4d0d7d1d1555436641c20d35c9dc0a0a42" translate="yes" xml:space="preserve">
          <source>Answer below</source>
          <target state="translated">Respuesta a continuación</target>
        </trans-unit>
        <trans-unit id="5c0e2e21cef0d3e07a258f7e57c7abc7926b0392" translate="yes" xml:space="preserve">
          <source>Are PHP short tags acceptable to use?</source>
          <target state="translated">¿Son aceptables las etiquetas cortas de PHP?</target>
        </trans-unit>
        <trans-unit id="dc948bf7702ca0dd5d989b2d93cf1ba3a496cfa8" translate="yes" xml:space="preserve">
          <source>Arithmetic Operators:</source>
          <target state="translated">Operadores Aritméticos:</target>
        </trans-unit>
        <trans-unit id="68eeb3cf38d1a23ed2dd8de89e52367df4c2503c" translate="yes" xml:space="preserve">
          <source>Array Operators:</source>
          <target state="translated">Operadores de la matriz:</target>
        </trans-unit>
        <trans-unit id="403d27b0b277b9dad913cf4b22fe84c1c21de2a2" translate="yes" xml:space="preserve">
          <source>Assignment Operators:</source>
          <target state="translated">Operadores de asignación:</target>
        </trans-unit>
        <trans-unit id="fe63e68c651be08601ddca318c553d7f4c118c48" translate="yes" xml:space="preserve">
          <source>Backslash in PHP -- what does it mean?</source>
          <target state="translated">Barra invertida en PHP...¿qué significa?</target>
        </trans-unit>
        <trans-unit id="26965663ce24bc204bbadf51b89da9ba50516555" translate="yes" xml:space="preserve">
          <source>Before PHP 7 you would write...</source>
          <target state="translated">Antes de PHP 7 escribías...</target>
        </trans-unit>
        <trans-unit id="16ef355e7f915391810467951c40173360ffd897" translate="yes" xml:space="preserve">
          <source>Bitwise Operator</source>
          <target state="translated">operador de bits</target>
        </trans-unit>
        <trans-unit id="946e2771b4c4f1d0f3de41419222166c3e1aea44" translate="yes" xml:space="preserve">
          <source>Bitwise Operators:</source>
          <target state="translated">Operadores de Bitwise:</target>
        </trans-unit>
        <trans-unit id="cf41b6c97f086b566a13adc5d1cb1bf945ab6778" translate="yes" xml:space="preserve">
          <source>Blocks - curly braces/no curly braces?</source>
          <target state="translated">Bloques...frenillos...¿no frenillos?</target>
        </trans-unit>
        <trans-unit id="0bed019990a84d5cdc2263ee30ffdc0e5a02aecc" translate="yes" xml:space="preserve">
          <source>C#'s null coalescing operator (??) in PHP</source>
          <target state="translated">El operador de coalescencia nula de C#(??)en PHP</target>
        </trans-unit>
        <trans-unit id="4708ed4fa9ee4d8753848045c418e31d8d4a22ac" translate="yes" xml:space="preserve">
          <source>Can I use hashes for comments in PHP?</source>
          <target state="translated">¿Puedo usar hashes para los comentarios en PHP?</target>
        </trans-unit>
        <trans-unit id="a7de33d110c915ab8e665813e77fafb72e84afb2" translate="yes" xml:space="preserve">
          <source>Comparison operators:</source>
          <target state="translated">Operadores de comparación:</target>
        </trans-unit>
        <trans-unit id="1cae8019ca197b28ea8e711159eae84be53cfddc" translate="yes" xml:space="preserve">
          <source>Curly braces in string in PHP</source>
          <target state="translated">Tirantes rizados en cadena en PHP</target>
        </trans-unit>
        <trans-unit id="e51f5fb2fbb16d09f2610657434b0c3e4c80f81a" translate="yes" xml:space="preserve">
          <source>Difference between &amp;amp; and &amp;amp;&amp;amp; in PHP</source>
          <target state="translated">Diferencia entre &amp;amp; y &amp;amp;&amp;amp; en PHP</target>
        </trans-unit>
        <trans-unit id="7be324d3d97c57ff0cb7bc27d328781edb7045b7" translate="yes" xml:space="preserve">
          <source>Difference between period and comma when concatenating with echo versus return?</source>
          <target state="translated">¿Diferencia entre punto y coma al concatenar con eco versus retorno?</target>
        </trans-unit>
        <trans-unit id="a91be50c9169601a129ef164efa658b66c66d915" translate="yes" xml:space="preserve">
          <source>Differences (&lt;em&gt;between a sequential and associative array&lt;/em&gt;):</source>
          <target state="translated">Diferencias ( &lt;em&gt;entre una matriz secuencial y asociativa&lt;/em&gt; ):</target>
        </trans-unit>
        <trans-unit id="ce78c66dd47caeb4ee4327bd55357860f9bee17a" translate="yes" xml:space="preserve">
          <source>Double not (!!) operator in PHP</source>
          <target state="translated">Doble no (!!)operador en PHP</target>
        </trans-unit>
        <trans-unit id="18386429ed75254ed5b9684ad4d250388b8473b8" translate="yes" xml:space="preserve">
          <source>Durring the declaration of an Associative Array, you don't only include the &lt;code&gt;value&lt;/code&gt; of what you want to put in the array, but you also put the index value (called the &lt;code&gt;key&lt;/code&gt;) which you want to use when calling the array in later parts of the code. The following syntax is used during it's declaration: &lt;code&gt;&quot;key&quot; =&amp;gt; &quot;value&quot;&lt;/code&gt;.</source>
          <target state="translated">Durante la declaraci&amp;oacute;n de una matriz asociativa, no solo incluye el &lt;code&gt;value&lt;/code&gt; de lo que desea poner en la matriz, sino que tambi&amp;eacute;n coloca el valor de &amp;iacute;ndice (llamado &lt;code&gt;key&lt;/code&gt; ) que desea usar al llamar la matriz en partes posteriores del c&amp;oacute;digo La siguiente sintaxis se usa durante su declaraci&amp;oacute;n: &lt;code&gt;&quot;key&quot; =&amp;gt; &quot;value&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eed24c3eea4e43e07ca6cf93bab2d47d077cfa27" translate="yes" xml:space="preserve">
          <source>Each arguments of calculateNumbers() function pass through $params as an array when use &quot;&amp;hellip; &quot;.</source>
          <target state="translated">Cada argumento de la funci&amp;oacute;n CalculateNumbers () pasa a trav&amp;eacute;s de $ params como una matriz cuando se usa &quot;...&quot;.</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="8ef2e1210c47909b18d1b60b9c30a0116c39a246" translate="yes" xml:space="preserve">
          <source>Example 1:</source>
          <target state="translated">Ejemplo 1:</target>
        </trans-unit>
        <trans-unit id="e11895e8b0e4fd9700bfd1eef21691b78b345f1b" translate="yes" xml:space="preserve">
          <source>Example 2:</source>
          <target state="translated">Ejemplo 2:</target>
        </trans-unit>
        <trans-unit id="1d4166bf97179d81c42dccef3ab9d1594a5dec5d" translate="yes" xml:space="preserve">
          <source>Example 3:</source>
          <target state="translated">Ejemplo 3:</target>
        </trans-unit>
        <trans-unit id="03ec6da7759c5970d9f2e19e70d29ff9d6d694d2" translate="yes" xml:space="preserve">
          <source>Example 4:</source>
          <target state="translated">Ejemplo 4:</target>
        </trans-unit>
        <trans-unit id="0822a849422ef51702e4e4fb13c1092061af60a4" translate="yes" xml:space="preserve">
          <source>Example That you 'll love</source>
          <target state="translated">Ejemplo que te encantará</target>
        </trans-unit>
        <trans-unit id="77fe6b598a036b9845bfadbbc943b71dfc519cb1" translate="yes" xml:space="preserve">
          <source>Example with Clone</source>
          <target state="translated">Ejemplo con Clon</target>
        </trans-unit>
        <trans-unit id="d5dabf0c74597cbd7f8286974b1016373bba62b9" translate="yes" xml:space="preserve">
          <source>Example with inheritance</source>
          <target state="translated">Ejemplo con la herencia</target>
        </trans-unit>
        <trans-unit id="52174e0cfa4e2cbbd0f28172026d13e09e286c8c" translate="yes" xml:space="preserve">
          <source>Examples for &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; Spaceship operator (PHP 7, Source: PHP Manual):</source>
          <target state="translated">Ejemplos para &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; Operador de nave espacial (PHP 7, Fuente: Manual PHP):</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="abc897209b2f98b7966665fa36a5eddbbc44f66d" translate="yes" xml:space="preserve">
          <source>For instance:</source>
          <target state="translated">Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="65859c28f90d01686d1011cfb9e708225e958f2b" translate="yes" xml:space="preserve">
          <source>Greater than &lt;code&gt;0&lt;/code&gt; when the left-hand operand is greater than the right-hand operand</source>
          <target state="translated">Mayor que &lt;code&gt;0&lt;/code&gt; cuando el operando de la izquierda es mayor que el operando de la derecha</target>
        </trans-unit>
        <trans-unit id="a20d22ea233c95cab0a2cca61b39598d845badbe" translate="yes" xml:space="preserve">
          <source>How do the PHP equality (== double equals) and identity (=== triple equals) comparison operators differ?</source>
          <target state="translated">¿En qué se diferencian los operadores de comparación de igualdad (==dobles iguales)e identidad (===triples iguales)del PHP?</target>
        </trans-unit>
        <trans-unit id="e38233aefd871fc7a03a4438bc7cf67e19c274af" translate="yes" xml:space="preserve">
          <source>How does the &quot;&amp;amp;&quot; operator work in a PHP function?</source>
          <target state="translated">&amp;iquest;C&amp;oacute;mo funciona el operador &quot;&amp;amp;&quot; en una funci&amp;oacute;n PHP?</target>
        </trans-unit>
        <trans-unit id="0e2a359c62d2893ac20cdd4e6a3632760ec240fb" translate="yes" xml:space="preserve">
          <source>How does the bitwise operator XOR ('^') work?</source>
          <target state="translated">¿Cómo funciona el operador de bits XOR ('^')?</target>
        </trans-unit>
        <trans-unit id="2394528dc0bea39221d0030eb1b7cff1e2e00619" translate="yes" xml:space="preserve">
          <source>However, you must use &lt;code&gt;$apples--&lt;/code&gt;, since first, you want to display the current number of apples, and &lt;strong&gt;then&lt;/strong&gt; you want to subtract one from it.</source>
          <target state="translated">Sin embargo, debe usar &lt;code&gt;$apples--&lt;/code&gt; , ya que primero desea mostrar el n&amp;uacute;mero actual de manzanas y &lt;strong&gt;luego&lt;/strong&gt; quiere restarle una.</target>
        </trans-unit>
        <trans-unit id="9b53c820697201bb9f919a486c502c674d64561c" translate="yes" xml:space="preserve">
          <source>If put before the variable, the increment/decrement operation is done to the variable &lt;strong&gt;first&lt;/strong&gt; then the result is returned. If put after the variable, the variable is &lt;strong&gt;first&lt;/strong&gt; returned, then the increment/decrement operation is done.</source>
          <target state="translated">Si se coloca antes de la variable, la operaci&amp;oacute;n de incremento / decremento se realiza &lt;strong&gt;primero&lt;/strong&gt; en la variable y luego se devuelve el resultado. Si se coloca despu&amp;eacute;s de la variable, la variable se devuelve &lt;strong&gt;primero&lt;/strong&gt; , luego se realiza la operaci&amp;oacute;n de incremento / decremento.</target>
        </trans-unit>
        <trans-unit id="dae00f2b7f34dbcc7d4b25e7ea65b7b55bdf1d6e" translate="yes" xml:space="preserve">
          <source>If you have been pointed here by someone because you have asked such a question, please find the particular syntax below. The linked pages to the &lt;a href=&quot;http://php.net/manual/en/index.php&quot;&gt;PHP manual&lt;/a&gt; along with the linked questions will likely answer your question then. If so, you are encouraged to upvote the answer. This list is not meant as a substitute to the help others provided.</source>
          <target state="translated">Si alguien te ha se&amp;ntilde;alado aqu&amp;iacute; porque has hecho esa pregunta, busca la sintaxis particular a continuaci&amp;oacute;n. Las p&amp;aacute;ginas vinculadas al &lt;a href=&quot;http://php.net/manual/en/index.php&quot;&gt;manual de PHP&lt;/a&gt; junto con las preguntas vinculadas probablemente responder&amp;aacute;n a su pregunta en ese momento. Si es as&amp;iacute;, se le anima a votar la respuesta. Esta lista no pretende ser un sustituto de la ayuda que otros proporcionaron.</target>
        </trans-unit>
        <trans-unit id="451eaaf2eecc228a89e97505d6e6d5275451db51" translate="yes" xml:space="preserve">
          <source>If your particular token is not listed below, you might find it in the &lt;a href=&quot;http://secure.php.net/manual/en/tokens.php&quot;&gt;List of Parser Tokens&lt;/a&gt;.</source>
          <target state="translated">Si su token en particular no se enumera a continuaci&amp;oacute;n, puede encontrarlo en la &lt;a href=&quot;http://secure.php.net/manual/en/tokens.php&quot;&gt;Lista de tokens de analizador&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="937ef98cf4c77016adb983ad436b4c378fc8df0b" translate="yes" xml:space="preserve">
          <source>In PHP 5, we already have a ternary operator, which tests a value, and then returns the second element if that returns true and the third if it doesn't:</source>
          <target state="translated">En PHP 5,ya tenemos un operador ternario,que prueba un valor,y luego devuelve el segundo elemento si es verdadero y el tercero si no lo es:</target>
        </trans-unit>
        <trans-unit id="3c30755892650b2704a3e9257be901820f3bb4b2" translate="yes" xml:space="preserve">
          <source>In PHP 7 we additionally get the ?? operator which rather than indicating extreme confusion which is how I would usually use two question marks together instead allows us to chain together a string of values. Reading from left to right, the first value which exists and is not null is the value that will be returned.</source>
          <target state="translated">En PHP 7,adicionalmente obtenemos el operador ?? que en lugar de indicar una confusión extrema,que es como normalmente utilizaría dos signos de interrogación juntos,en su lugar nos permite encadenar una cadena de valores.Leyendo de izquierda a derecha,el primer valor que existe y no es nulo es el valor que será devuelto.</target>
        </trans-unit>
        <trans-unit id="aaebbe1e86697d58c964216ae8655612c659f88d" translate="yes" xml:space="preserve">
          <source>In PHP, what does &quot;&amp;lt;&amp;lt;&amp;lt;&quot; represent?</source>
          <target state="translated">En PHP, &amp;iquest;qu&amp;eacute; representa &quot;&amp;lt;&amp;lt;&amp;lt;&quot;?</target>
        </trans-unit>
        <trans-unit id="e55e103b7b30ea66386bf20d5b53787376304144" translate="yes" xml:space="preserve">
          <source>In most cases you will probably want to use &lt;strong&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;||&lt;/code&gt;&lt;/strong&gt;, which behave in a way known from languages like C, Java or JavaScript.</source>
          <target state="translated">En la mayor&amp;iacute;a de los casos, probablemente desee utilizar &lt;strong&gt; &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; &lt;/strong&gt; y &lt;strong&gt; &lt;code&gt;||&lt;/code&gt; &lt;/strong&gt; , que se comportan de una manera conocida desde lenguajes como C, Java o JavaScript.</target>
        </trans-unit>
        <trans-unit id="af67ffc1b32387677e81f4b105c257760a1cf779" translate="yes" xml:space="preserve">
          <source>In the case above &lt;code&gt;++$i&lt;/code&gt; is used, since it is faster. &lt;code&gt;$i++&lt;/code&gt; would have the same results.</source>
          <target state="translated">En el caso anterior se usa &lt;code&gt;++$i&lt;/code&gt; , ya que es m&amp;aacute;s r&amp;aacute;pido. &lt;code&gt;$i++&lt;/code&gt; tendr&amp;iacute;a los mismos resultados.</target>
        </trans-unit>
        <trans-unit id="bcf155e82f03790704c842dd338991bb07d58894" translate="yes" xml:space="preserve">
          <source>Incrementing/Decrementing Operators:</source>
          <target state="translated">Operadores en aumento/disminución:</target>
        </trans-unit>
        <trans-unit id="edc1eac10f65cdff88e6ab117f0998ac23964856" translate="yes" xml:space="preserve">
          <source>Integers, Floats, Strings, Arrays &amp;amp; objects for Three-way comparison of variables.</source>
          <target state="translated">N&amp;uacute;meros enteros, flotantes, cadenas, matrices y objetos para la comparaci&amp;oacute;n tripartita de variables.</target>
        </trans-unit>
        <trans-unit id="df65827376278eb9127b9d2661d7460718bc0e9d" translate="yes" xml:space="preserve">
          <source>Is there a difference between !== and != in PHP?</source>
          <target state="translated">¿Hay alguna diferencia entre !==y !=en PHP?</target>
        </trans-unit>
        <trans-unit id="2ec0f11f5d0769ec34787bec9f2ddf23b726e6f7" translate="yes" xml:space="preserve">
          <source>Is there any difference between &quot;and&quot; and &quot;&amp;amp;&amp;amp;&quot; operators in PHP?</source>
          <target state="translated">&amp;iquest;Hay alguna diferencia entre los operadores &quot;y&quot; y &quot;&amp;amp;&amp;amp;&quot; en PHP?</target>
        </trans-unit>
        <trans-unit id="b9205a6b4262f7d151ac16cd1d527857972ad5ea" translate="yes" xml:space="preserve">
          <source>It used to be hard to find questions about operators and other syntax tokens.&amp;sup1;</source>
          <target state="translated">Sol&amp;iacute;a ​​ser dif&amp;iacute;cil encontrar preguntas sobre operadores y otros tokens de sintaxis.</target>
        </trans-unit>
        <trans-unit id="e6bb96c8a33facc1487ccdb5f0b146f81554180d" translate="yes" xml:space="preserve">
          <source>Less than &lt;code&gt;0&lt;/code&gt; when the left-hand operand is less than the right-hand operand</source>
          <target state="translated">Menos de &lt;code&gt;0&lt;/code&gt; cuando el operando de la izquierda es menor que el operando de la derecha</target>
        </trans-unit>
        <trans-unit id="7516945e79aa523eccb878372b39a21c6a846398" translate="yes" xml:space="preserve">
          <source>Logical Operators:</source>
          <target state="translated">Operadores Lógicos:</target>
        </trans-unit>
        <trans-unit id="c200734be54f0d8d24609d679341d30abb998d89" translate="yes" xml:space="preserve">
          <source>Makes life more easier once we get used to it..(check example below carefully)</source>
          <target state="translated">Hace la vida más fácil una vez que nos acostumbramos a ella ...(ver ejemplo a continuación con cuidado)</target>
        </trans-unit>
        <trans-unit id="99996ae3fe87eb2b9707f341877f1d7df4716763" translate="yes" xml:space="preserve">
          <source>Most people have already read the docs but didn't reliase the real world use case of these bitwise operators.</source>
          <target state="translated">La mayoría de la gente ya ha leído los documentos,pero no confió en el caso de uso en el mundo real de estos operadores poco inteligentes.</target>
        </trans-unit>
        <trans-unit id="f4043d5ec852812f47115ba6796712c0228fcfe8" translate="yes" xml:space="preserve">
          <source>Not the catchiest name for an operator, but PHP 7 brings in the rather handy null coalesce so I thought I'd share an example.</source>
          <target state="translated">No es el nombre más pegadizo para un operador,pero PHP 7 trae un nulo coalescente bastante práctico,así que pensé en compartir un ejemplo.</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="f28b8bd9a051c1b22d384ae410c22c82df6bc704" translate="yes" xml:space="preserve">
          <source>Note that character variables can be incremented but not decremented and even so only plain ASCII characters (a-z and A-Z) are supported.</source>
          <target state="translated">Obsérvese que las variables de caracteres pueden incrementarse pero no disminuirse,e incluso así sólo se admiten los caracteres ASCII simples (a-z y A-Z).</target>
        </trans-unit>
        <trans-unit id="443ba4fcbac94fc6cfac1e6a4f4b13672ae602a6" translate="yes" xml:space="preserve">
          <source>Note: Since January 2013, Stack Overflow &lt;a href=&quot;https://meta.stackexchange.com/questions/160100/a-new-search-engine-for-stack-exchange&quot;&gt;does support special characters&lt;/a&gt;. Just surround the search terms by quotes, e.g. &lt;a href=&quot;https://stackoverflow.com/search?q=%5Bphp%5D%20%22===%22%20vs%20%22==%22&quot;&gt;&lt;code&gt;[php] &quot;==&quot; vs &quot;===&quot;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Nota: desde enero de 2013, Stack Overflow &lt;a href=&quot;https://meta.stackexchange.com/questions/160100/a-new-search-engine-for-stack-exchange&quot;&gt;admite caracteres especiales&lt;/a&gt; . Simplemente rodee los t&amp;eacute;rminos de b&amp;uacute;squeda entre comillas, por ejemplo, &lt;a href=&quot;https://stackoverflow.com/search?q=%5Bphp%5D%20%22===%22%20vs%20%22==%22&quot;&gt; &lt;code&gt;[php] &quot;==&quot; vs &quot;===&quot;&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d06dc73b02f6ce803c3875d9aacee4b8e021a8e8" translate="yes" xml:space="preserve">
          <source>Null Coalesce operator &quot;??&quot; (Added in PHP 7)</source>
          <target state="translated">Operador de Null Coalesce &quot;?&quot; (Añadido en PHP 7)</target>
        </trans-unit>
        <trans-unit id="afe173f15f5772c4119ccf257996c90e710bd6ae" translate="yes" xml:space="preserve">
          <source>Nullable return type declaration</source>
          <target state="translated">Declaración de tipo de devolución nula</target>
        </trans-unit>
        <trans-unit id="2fd953dbf48f21b4675ed43e6fb4e7539de446e9" translate="yes" xml:space="preserve">
          <source>Once &lt;code&gt;z&lt;/code&gt; is reached &lt;code&gt;aa&lt;/code&gt; is next, and so on.</source>
          <target state="translated">Una vez que se alcanza &lt;code&gt;z&lt;/code&gt; , &lt;code&gt;aa&lt;/code&gt; es el siguiente, y as&amp;iacute; sucesivamente.</target>
        </trans-unit>
        <trans-unit id="99b8bbb1c7d5441c29c6d0ffb205bb87d0514576" translate="yes" xml:space="preserve">
          <source>One usefull case of these is easy configurations like give below, so a single integer field can store thousands of combos for you.</source>
          <target state="translated">Un caso útil de estos es la fácil configuración como la que se muestra a continuación,por lo que un solo campo entero puede almacenar miles de combos para usted.</target>
        </trans-unit>
        <trans-unit id="78b65f50039c4541d3a0c51a12258dbb1b353c62" translate="yes" xml:space="preserve">
          <source>PHP != and == operators</source>
          <target state="translated">PHP !=y ==operadores</target>
        </trans-unit>
        <trans-unit id="db4a97f407945295300bb592129ec35ff93d048f" translate="yes" xml:space="preserve">
          <source>PHP &quot;&amp;amp;&quot; operator</source>
          <target state="translated">Operador PHP &quot;&amp;amp;&quot;</target>
        </trans-unit>
        <trans-unit id="d5056ccc4c828b8a1829d025570838c2e67c0249" translate="yes" xml:space="preserve">
          <source>PHP - and / or keywords</source>
          <target state="translated">PHP-y o palabras clave</target>
        </trans-unit>
        <trans-unit id="c70b1fab4fbb591bd3ab50e08d270dc150be6d1f" translate="yes" xml:space="preserve">
          <source>PHP 7 adds support for return type declarations. Similarly to argument type declarations, return type declarations specify the type of value that will be returned from a function. The same types are available for return type declarations as are available for argument type declarations.</source>
          <target state="translated">PHP 7 añade soporte para declaraciones de tipo de retorno.De manera similar a las declaraciones de tipo de argumento,las declaraciones de tipo de retorno especifican el tipo de valor que será devuelto desde una función.Los mismos tipos están disponibles para las declaraciones de tipo de retorno que están disponibles para las declaraciones de tipo de argumento.</target>
        </trans-unit>
        <trans-unit id="c2fe2e6e48b4d5e03e9e8058805f6f53bf1ac681" translate="yes" xml:space="preserve">
          <source>PHP arrays... What is/are the meaning(s) of an empty bracket?</source>
          <target state="translated">Matrices PHP...¿Cuál es el significado de un paréntesis vacío?</target>
        </trans-unit>
        <trans-unit id="8ace6ed77a4488977ddf85093c0307074848d98c" translate="yes" xml:space="preserve">
          <source>PHP curly braces in array notation</source>
          <target state="translated">Los tirantes rizados PHP en notación de matriz</target>
        </trans-unit>
        <trans-unit id="1c4115cd9193d37edb1d2119060b9a4ce586c923" translate="yes" xml:space="preserve">
          <source>PHP expression &amp;lt;&amp;lt;&amp;lt;EOB</source>
          <target state="translated">Expresi&amp;oacute;n PHP &amp;lt;&amp;lt;&amp;lt; EOB</target>
        </trans-unit>
        <trans-unit id="ee1eb788005713e51dc285dc4ff0ac06953cfa2f" translate="yes" xml:space="preserve">
          <source>PHP functions and @functions</source>
          <target state="translated">Funciones PHP y @funciones</target>
        </trans-unit>
        <trans-unit id="0d7f48d98c3579ff0942801c080fa4ddd6efcac1" translate="yes" xml:space="preserve">
          <source>PHP has an operator &quot;...&quot; (Three dots) which is referred as Splat Operator. It is used to pass arbitrary number of parameters in a function and this type of function is called Variadic Functions. Let&amp;rsquo;s take examples to use of &quot;...&quot; (Three dots).</source>
          <target state="translated">PHP tiene un operador &quot;...&quot; (Tres puntos) que se denomina Operador Splat. Se utiliza para pasar un n&amp;uacute;mero arbitrario de par&amp;aacute;metros en una funci&amp;oacute;n y este tipo de funci&amp;oacute;n se llama Funciones Variadas. Tomemos ejemplos de uso de &quot;...&quot; (Tres puntos).</target>
        </trans-unit>
        <trans-unit id="c14776cf9af4894479aefe34a4e66e1b29e04a24" translate="yes" xml:space="preserve">
          <source>PHP operator &amp;lt;&amp;gt;</source>
          <target state="translated">Operador PHP &amp;lt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8ca5bc31f5ee5ded5b9fe2bd570c13954cf43be4" translate="yes" xml:space="preserve">
          <source>PHP's &amp;lt;&amp;gt; operator</source>
          <target state="translated">Operador &amp;lt;&amp;gt; de PHP</target>
        </trans-unit>
        <trans-unit id="00f80d3b85e8bf8b64393fdeee25dad1a4566c5c" translate="yes" xml:space="preserve">
          <source>Php array_push() vs myArray[]</source>
          <target state="translated">Php array_push()vs myArray[]</target>
        </trans-unit>
        <trans-unit id="1a4c7e2f68916c7a0d1e9b4a720a4bdce8861129" translate="yes" xml:space="preserve">
          <source>Pre-increment is a little bit faster because it really increments the variable and after that 'returns' the result. Post-increment creates a special variable, copies there the value of the first variable and only after the first variable is used, replaces its value with second's.</source>
          <target state="translated">El preincremento es un poco más rápido porque realmente incrementa la variable y después de eso &quot;devuelve&quot; el resultado.El post-incremento crea una variable especial,copia allí el valor de la primera variable y sólo después de que la primera variable es usada,reemplaza su valor con el de la segunda.</target>
        </trans-unit>
        <trans-unit id="d506691543844e227dd07a003a1906030b537b90" translate="yes" xml:space="preserve">
          <source>Reference assignment operator in PHP, =&amp;amp;</source>
          <target state="translated">Operador de asignaci&amp;oacute;n de referencia en PHP, = &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c0091bdc65a3bf05a513d61184df9c6814aa1000" translate="yes" xml:space="preserve">
          <source>Reference — What does this symbol mean in PHP</source>
          <target state="translated">Reference-¿Qué significa este símbolo en PHP</target>
        </trans-unit>
        <trans-unit id="b7f3271352bc9999571d7b53daec3de5367a4f25" translate="yes" xml:space="preserve">
          <source>Shorthand for arrays: literal &lt;code&gt;$var = []&lt;/code&gt; empty array</source>
          <target state="translated">Taquigraf&amp;iacute;a para matrices: literal &lt;code&gt;$var = []&lt;/code&gt; matriz vac&amp;iacute;a</target>
        </trans-unit>
        <trans-unit id="c8670119466ef25e9bb16b2a4613f28d2a6c47b8" translate="yes" xml:space="preserve">
          <source>Should I use @ in my PHP code?</source>
          <target state="translated">¿Debo usar @ en mi código PHP?</target>
        </trans-unit>
        <trans-unit id="90ced0572717334e6aa98203bcbd54c5e047aab3" translate="yes" xml:space="preserve">
          <source>Since PHP 7 you can write...</source>
          <target state="translated">Desde PHP 7 puedes escribir...</target>
        </trans-unit>
        <trans-unit id="417ab1132decf23985a3e7ac8ff150401460c832" translate="yes" xml:space="preserve">
          <source>So behind all above is game of bitwise operator and bits.</source>
          <target state="translated">Así que detrás de todo lo anterior está el juego de operador y bits.</target>
        </trans-unit>
        <trans-unit id="ec861622cd65f610b5638218634906a58754ac13" translate="yes" xml:space="preserve">
          <source>So far so good. However, as humans, we might find it hard to remember that index &lt;code&gt;[0]&lt;/code&gt; of the array is the value of the &lt;strong&gt;year&lt;/strong&gt; 2016, index &lt;code&gt;[1]&lt;/code&gt; of the array is a &lt;strong&gt;greetings&lt;/strong&gt;, and index &lt;code&gt;[2]&lt;/code&gt; of the array is a simple &lt;strong&gt;integer value&lt;/strong&gt;. The alternative we would then have is to use what is called an &lt;strong&gt;Associative Array&lt;/strong&gt;. An Associative array has a few differences from a &lt;strong&gt;Sequential Array&lt;/strong&gt;
(&lt;em&gt;which is what the previous cases were since they increment the index used in a predetermined sequence, by incrementing by 1 for each following value&lt;/em&gt;).</source>
          <target state="translated">Hasta aqu&amp;iacute; todo bien. Sin embargo, como humanos, podr&amp;iacute;amos tener dificultades para recordar que el &amp;iacute;ndice &lt;code&gt;[0]&lt;/code&gt; de la matriz es el valor del &lt;strong&gt;a&amp;ntilde;o&lt;/strong&gt; 2016, el &amp;iacute;ndice &lt;code&gt;[1]&lt;/code&gt; de la matriz es un &lt;strong&gt;saludo&lt;/strong&gt; , y el &amp;iacute;ndice &lt;code&gt;[2]&lt;/code&gt; de la matriz es un simple &lt;strong&gt;valor entero&lt;/strong&gt; La alternativa que tendr&amp;iacute;amos es usar lo que se llama una &lt;strong&gt;matriz asociativa&lt;/strong&gt; . Una matriz asociativa tiene algunas diferencias con respecto a una &lt;strong&gt;matriz secuencial&lt;/strong&gt; ( &lt;em&gt;que es lo que eran los casos anteriores, ya que incrementan el &amp;iacute;ndice utilizado en una secuencia predeterminada, incrementando en 1 para cada valor siguiente&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="15d74399e3b848e2289fa525d66a3e8d7b018938" translate="yes" xml:space="preserve">
          <source>So from the above example, it is pretty easy to see that the &lt;code&gt;=&amp;gt;&lt;/code&gt; symbol is used to express the relationship of an Associative Array between each of the &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; pairs in an array &lt;strong&gt;DURING&lt;/strong&gt; the initiation of the values within the array.</source>
          <target state="translated">Entonces, a partir del ejemplo anterior, es bastante f&amp;aacute;cil ver que el s&amp;iacute;mbolo &lt;code&gt;=&amp;gt;&lt;/code&gt; se usa para expresar la relaci&amp;oacute;n de una matriz asociativa entre cada uno de los pares de &lt;code&gt;key&lt;/code&gt; y &lt;code&gt;value&lt;/code&gt; en una matriz &lt;strong&gt;DURANTE&lt;/strong&gt; el inicio de los valores dentro de la matriz.</target>
        </trans-unit>
        <trans-unit id="1d664510a00b37cf9471c21bcd07179b395ed4c9" translate="yes" xml:space="preserve">
          <source>So you can see from the table the only bit they share together is the 8 bit.</source>
          <target state="translated">Así que puedes ver en la mesa que la única parte que comparten juntos es la de 8 bits.</target>
        </trans-unit>
        <trans-unit id="6da13addb000b67d42a6d66391713819e634149f" translate="yes" xml:space="preserve">
          <source>Source</source>
          <target state="translated">Source</target>
        </trans-unit>
        <trans-unit id="82014a2d56ce2da7cf61bead569c6c65d974d4e5" translate="yes" xml:space="preserve">
          <source>Spaceship (three way comparison) operator</source>
          <target state="translated">Operador de la nave espacial (comparación de tres vías)</target>
        </trans-unit>
        <trans-unit id="b585244fe9c1f5f349660280e57b19a123323ee7" translate="yes" xml:space="preserve">
          <source>Strange print behaviour in PHP?</source>
          <target state="translated">¿Comportamiento de impresión extraño en PHP?</target>
        </trans-unit>
        <trans-unit id="a8f1c2bbe054a873ed19a72e9a6b090e97cadf88" translate="yes" xml:space="preserve">
          <source>Strict typing also has an effect on return type declarations. In the default weak mode, returned values will be coerced to the correct type if they are not already of that type. In strong mode, the returned value must be of the correct type, otherwise, a TypeError will be thrown.</source>
          <target state="translated">La mecanografía estricta también tiene un efecto en las declaraciones del tipo de devolución.En el modo débil por defecto,los valores devueltos serán coaccionados al tipo correcto si no son ya de ese tipo.En el modo fuerte,el valor devuelto debe ser del tipo correcto,de lo contrario,se lanzará un TypeError.</target>
        </trans-unit>
        <trans-unit id="c07d68578d6f3eabbcb0fbb5f49f77ce31b78f1e" translate="yes" xml:space="preserve">
          <source>String Operators:</source>
          <target state="translated">Operadores de cuerdas:</target>
        </trans-unit>
        <trans-unit id="8bcb8a067482da7537a0c553d5112a31f6393122" translate="yes" xml:space="preserve">
          <source>The &quot;AND&quot; operator: &lt;code&gt;&amp;amp;&lt;/code&gt;</source>
          <target state="translated">El operador &quot;Y&quot;: &lt;code&gt;&amp;amp;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d91c7bd454258ff1f962cdb94f8cca2a513b835" translate="yes" xml:space="preserve">
          <source>The &quot;Or&quot; operator: &lt;code&gt;|&lt;/code&gt;</source>
          <target state="translated">El operador &quot;O&quot;: &lt;code&gt;|&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="380ec1237cab6d1ade13b72b28e24379847c10ed" translate="yes" xml:space="preserve">
          <source>The 3 different equals</source>
          <target state="translated">Los 3 iguales diferentes</target>
        </trans-unit>
        <trans-unit id="b9e1926264be6a4d4e1e124c420af995e530194b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://php.net/language.operators.comparison&quot;&gt;spaceship operator&lt;/a&gt;&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; is the latest comparison operator added in PHP 7. It is a &lt;em&gt;non-associative&lt;/em&gt; binary operator with the same precedence as equality operators (&lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;===&lt;/code&gt;, &lt;code&gt;!==&lt;/code&gt;). This operator allows for simpler three-way comparison between left-hand and right-hand operands.</source>
          <target state="translated">El &lt;a href=&quot;http://php.net/language.operators.comparison&quot;&gt;operador de nave espacial&lt;/a&gt; &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; es el &amp;uacute;ltimo operador de comparaci&amp;oacute;n agregado en PHP 7. Es un operador binario &lt;em&gt;no asociativo&lt;/em&gt; con la misma precedencia que los operadores de igualdad ( &lt;code&gt;==&lt;/code&gt; ,! &lt;code&gt;!=&lt;/code&gt; , &lt;code&gt;===&lt;/code&gt; ,! &lt;code&gt;!==&lt;/code&gt; ). Este operador permite una comparaci&amp;oacute;n tripartita m&amp;aacute;s simple entre los operandos izquierdo y derecho.</target>
        </trans-unit>
        <trans-unit id="af098634b8f9d4af928dcdcc0efe77baa4ab419d" translate="yes" xml:space="preserve">
          <source>The List</source>
          <target state="translated">La lista</target>
        </trans-unit>
        <trans-unit id="f8de94159b1436873c4b4e839ba7c48668266a81" translate="yes" xml:space="preserve">
          <source>The above example will output:</source>
          <target state="translated">El ejemplo anterior dará como resultado:</target>
        </trans-unit>
        <trans-unit id="c83554429778b3dfa5de1c673c42d4f75cde521b" translate="yes" xml:space="preserve">
          <source>The behaviour of the or operator in PHP</source>
          <target state="translated">El comportamiento del o el operador en PHP</target>
        </trans-unit>
        <trans-unit id="b307715f7121eb42b0ba5c92057dd5e6f3450ef2" translate="yes" xml:space="preserve">
          <source>The main idea is to have links to existing questions on Stack Overflow, so it's easier for us to reference them, not to copy over content from the PHP Manual.</source>
          <target state="translated">La idea principal es tener enlaces a las preguntas existentes sobre el desbordamiento de la pila,así es más fácil para nosotros referirnos a ellas,no copiar el contenido del Manual de PHP.</target>
        </trans-unit>
        <trans-unit id="b103a039fff6a3f3f62801d4623182353cd864b7" translate="yes" xml:space="preserve">
          <source>The operator results in an integer expression of:</source>
          <target state="translated">El operador da como resultado una expresión entera de:</target>
        </trans-unit>
        <trans-unit id="71a433feae8c96536313021fba856194a233b381" translate="yes" xml:space="preserve">
          <source>The two shared bits are 32 and 4, which when added together return 36.</source>
          <target state="translated">Los dos bits compartidos son 32 y 4,que al sumarlos dan 36.</target>
        </trans-unit>
        <trans-unit id="c1dc73629ac0bce26454b31f13ecb425dc0155cf" translate="yes" xml:space="preserve">
          <source>The underscore character '_' as in &lt;code&gt;_()&lt;/code&gt; is an alias to the &lt;a href=&quot;http://php.net/function.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">El car&amp;aacute;cter de subrayado '_' como en &lt;code&gt;_()&lt;/code&gt; es un alias de la funci&amp;oacute;n &lt;a href=&quot;http://php.net/function.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6c71dbcd4ca50d2494076bb55b1ad62982a03722" translate="yes" xml:space="preserve">
          <source>There are many different ways to use &quot;&amp;hellip; &quot;  operator. Below some examples:</source>
          <target state="translated">Hay muchas formas diferentes de utilizar el operador &quot;...&quot;. A continuaci&amp;oacute;n algunos ejemplos:</target>
        </trans-unit>
        <trans-unit id="de1bd1b628926937a41adc5617acc0a9958ca0eb" translate="yes" xml:space="preserve">
          <source>There is also a shorthand for that which allows you to skip the second element if it's the same as the first one: echo $count ?: 10; // also outputs 10</source>
          <target state="translated">También hay una abreviatura para eso que le permite saltar el segundo elemento si es el mismo que el primero:eco $cuenta ?:10;/también sale 10</target>
        </trans-unit>
        <trans-unit id="a8866485f3cdec4b3c5f23eb85a882371875c982" translate="yes" xml:space="preserve">
          <source>These can go before or after the variable.</source>
          <target state="translated">Estos pueden ir antes o después de la variable.</target>
        </trans-unit>
        <trans-unit id="0e8932b925419f4da15914241b903761904e6a3a" translate="yes" xml:space="preserve">
          <source>This construct is useful for giving priority to one or more values coming perhaps from user input or existing configuration, and safely falling back on a given default if that configuration is missing. It's kind of a small feature but it's one that I know I'll be using as soon as my applications upgrade to PHP 7.</source>
          <target state="translated">Esta construcción es útil para dar prioridad a uno o más valores procedentes quizás de la entrada del usuario o de la configuración existente,y para recurrir con seguridad a un determinado valor por defecto si falta esa configuración.Es una pequeña característica pero es una que sé que usaré tan pronto como mis aplicaciones se actualicen a PHP 7.</target>
        </trans-unit>
        <trans-unit id="1076188e123d2d706fac7e86497c67f9ca552b3c" translate="yes" xml:space="preserve">
          <source>This is a collection of questions that come up every now and then about syntax in PHP. This is also a Community Wiki, so everyone is invited to participate in maintaining this list.</source>
          <target state="translated">Esta es una colección de preguntas que surgen de vez en cuando sobre la sintaxis en PHP.Este es también un Wiki de la Comunidad,así que todos están invitados a participar en el mantenimiento de esta lista.</target>
        </trans-unit>
        <trans-unit id="69cddca8fbe4383fb63c6f713236ca8294afdee0" translate="yes" xml:space="preserve">
          <source>This means that &lt;code&gt;$a = true and false;&lt;/code&gt; is equivalent to &lt;code&gt;($a = true) and false&lt;/code&gt;.</source>
          <target state="translated">Esto significa que &lt;code&gt;$a = true and false;&lt;/code&gt; es equivalente a &lt;code&gt;($a = true) and false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48100611c8db877fd50a037c179e93fa3784bc32" translate="yes" xml:space="preserve">
          <source>This operator has been added in PHP 7.0 for the common case of needing to use a ternary operator in conjunction with &lt;code&gt;isset()&lt;/code&gt;. It returns its first operand if it exists and is not &lt;code&gt;NULL&lt;/code&gt;; otherwise it returns its second operand.</source>
          <target state="translated">Este operador se ha agregado en PHP 7.0 para el caso com&amp;uacute;n de necesitar usar un operador ternario junto con &lt;code&gt;isset()&lt;/code&gt; . Devuelve su primer operando si existe y no es &lt;code&gt;NULL&lt;/code&gt; ; de lo contrario, devuelve su segundo operando.</target>
        </trans-unit>
        <trans-unit id="146a2cfe0939a134c6ca1a7979b3dcf543aa2b35" translate="yes" xml:space="preserve">
          <source>This representation of 1 Byte</source>
          <target state="translated">Esta representación de 1 Byte</target>
        </trans-unit>
        <trans-unit id="de37e970fbdf0aa86ed78c1b770aaebe803e18be" translate="yes" xml:space="preserve">
          <source>This would output the number 11. Why?</source>
          <target state="translated">Esto daría como resultado el número 11.¿Por qué?</target>
        </trans-unit>
        <trans-unit id="aff8b277ec8fc893be84ba8353de1cdc890dc0f7" translate="yes" xml:space="preserve">
          <source>This would output the number 8. Why? Well let's see using our table example.</source>
          <target state="translated">Esto daría como resultado el número 8.¿Por qué? Bueno,veamos usando nuestro ejemplo de la tabla.</target>
        </trans-unit>
        <trans-unit id="6a0baf7cce063108636c88bbbfdb3730504a2d50" translate="yes" xml:space="preserve">
          <source>To understand a line of PHP</source>
          <target state="translated">Para entender una línea de PHP</target>
        </trans-unit>
        <trans-unit id="44ba738d34260d3833b259b9b7f241404408dcd6" translate="yes" xml:space="preserve">
          <source>To understand this, we have to know what Associative Arrays are. The first thing that comes up when a conventional programmer thinks of an array (&lt;strong&gt;in PHP&lt;/strong&gt;) would be something similar to:</source>
          <target state="translated">Para entender esto, tenemos que saber qu&amp;eacute; son las matrices asociativas. Lo primero que surge cuando un programador convencional piensa en una matriz ( &lt;strong&gt;en PHP&lt;/strong&gt; ) ser&amp;iacute;a algo similar a:</target>
        </trans-unit>
        <trans-unit id="a13ae1279809745a712d847542e2456d682b93e1" translate="yes" xml:space="preserve">
          <source>Type Operators</source>
          <target state="translated">Operadores de tipo</target>
        </trans-unit>
        <trans-unit id="3625a86089316a4f69729518e7595e3ce5cd7cd4" translate="yes" xml:space="preserve">
          <source>Type-juggling and (strict) greater/lesser-than comparisons in PHP</source>
          <target state="translated">El malabarismo de tipos y las comparaciones (estrictas)más pequeñas que en el PHP</target>
        </trans-unit>
        <trans-unit id="fdac5312900fb75ed3785729c8918337b2b9d77f" translate="yes" xml:space="preserve">
          <source>Understanding Incrementing</source>
          <target state="translated">Entendiendo el incremento</target>
        </trans-unit>
        <trans-unit id="d5e5b4c886882efe8e2bea8d1eddd1c3741c01db" translate="yes" xml:space="preserve">
          <source>Understanding PHP &amp;amp; (ampersand, bitwise and) operator</source>
          <target state="translated">Comprensi&amp;oacute;n del operador PHP &amp;amp; (ampersand, bitwise and)</target>
        </trans-unit>
        <trans-unit id="0f58f5a00fd8e93c65de1c9d14b6954ed145519c" translate="yes" xml:space="preserve">
          <source>Unexpected T_PAAMAYIM_NEKUDOTAYIM, expecting T_NS_Separator</source>
          <target state="translated">Inesperado T_PAAMAYIM_NEKUDOTAYIM,esperando T_NS_Separator</target>
        </trans-unit>
        <trans-unit id="45f97f8044f8b8d7ed21973b5e4ec900001ea2c5" translate="yes" xml:space="preserve">
          <source>Use of =&amp;gt; in PHP</source>
          <target state="translated">Uso de =&amp;gt; en PHP</target>
        </trans-unit>
        <trans-unit id="d8887427c5d422260f4d988c5f549142246428fd" translate="yes" xml:space="preserve">
          <source>Using &amp;lt;&amp;lt;&amp;lt;CON in PHP</source>
          <target state="translated">Usando &amp;lt;&amp;lt;&amp;lt; CON en PHP</target>
        </trans-unit>
        <trans-unit id="d2dd9e2c3a0c5bd8b44512ae995b70400c715627" translate="yes" xml:space="preserve">
          <source>Using PHP 5.3 ?: operator</source>
          <target state="translated">Usando PHP 5.3 ?:operador</target>
        </trans-unit>
        <trans-unit id="eea194a7ccea38af53e6e98838c11e73bd9bce7b" translate="yes" xml:space="preserve">
          <source>What Does Using A Single Pipe '|' In A Function Argument Do?</source>
          <target state="translated">' In A Function Argument Do?</target>
        </trans-unit>
        <trans-unit id="49b00c012ec06c30de374d799af0fd4136a6dbb0" translate="yes" xml:space="preserve">
          <source>What are the PHP operators &quot;?&quot; and &quot;:&quot; called and what do they do?</source>
          <target state="translated">¿Cómo se llaman los operadores de PHP &quot;?&quot; y &quot;:&quot; y qué hacen?</target>
        </trans-unit>
        <trans-unit id="a30a8227618cf79b4d2eb8a4a100b1984e430f7d" translate="yes" xml:space="preserve">
          <source>What are the backticks `` called?</source>
          <target state="translated">¿Cómo se llaman los palos traseros?</target>
        </trans-unit>
        <trans-unit id="17d85750b181e352e3e10255feed1998657df068" translate="yes" xml:space="preserve">
          <source>What do commas mean in a variable declaration?</source>
          <target state="translated">¿Qué significan las comas en una declaración variable?</target>
        </trans-unit>
        <trans-unit id="7b2463eb67f1bdd3ceecfd83176ad75be36da74c" translate="yes" xml:space="preserve">
          <source>What do the &quot;=&amp;amp;&quot; and &quot;&amp;amp;=&quot; operators in PHP mean?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; significan los operadores &quot;= &amp;amp;&quot; y &quot;&amp;amp; =&quot; en PHP?</target>
        </trans-unit>
        <trans-unit id="f688ad456aee149fe2f8229a29c0a111fd0f1229" translate="yes" xml:space="preserve">
          <source>What do the '&amp;amp;=' and '=&amp;amp;' operators do?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; hacen los operadores '&amp;amp; =' y '= &amp;amp;'?</target>
        </trans-unit>
        <trans-unit id="f9538e15ebc2b3e060ebcbdd9c8567705fe0eee3" translate="yes" xml:space="preserve">
          <source>What do two colons mean in PHP?</source>
          <target state="translated">¿Qué significan dos colones en PHP?</target>
        </trans-unit>
        <trans-unit id="309bac072093a4237bd60bfcdfb879a1d96d34f9" translate="yes" xml:space="preserve">
          <source>What does !== comparison operator in PHP mean?</source>
          <target state="translated">¿Qué significa el operador de comparación !==en PHP?</target>
        </trans-unit>
        <trans-unit id="d832e34cefc6646a7f9ffd51c4b49ccd576f20c5" translate="yes" xml:space="preserve">
          <source>What does &quot;&amp;amp;&quot; mean here in PHP?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; significa &quot;&amp;amp;&quot; aqu&amp;iacute; en PHP?</target>
        </trans-unit>
        <trans-unit id="e6bd19b39268ea0b0607729b237c2dbfef294346" translate="yes" xml:space="preserve">
          <source>What does &quot;&amp;amp;&quot; mean in this case?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; significa &quot;&amp;amp;&quot; en este caso?</target>
        </trans-unit>
        <trans-unit id="0834c24eb11615f12f3ad6f5551765371f7190a7" translate="yes" xml:space="preserve">
          <source>What does &quot;-&amp;gt;&quot; mean/refer to in PHP?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; significa &quot;-&amp;gt;&quot; significa / se refiere en PHP?</target>
        </trans-unit>
        <trans-unit id="3a95f8fcb217a96d55f4f087089cf1bc9aaaa896" translate="yes" xml:space="preserve">
          <source>What does &quot;:&quot; mean in PHP?</source>
          <target state="translated">¿Qué significa &quot;:&quot; en PHP?</target>
        </trans-unit>
        <trans-unit id="a8f9f5c9c59544c403e5b2b80da23647f40cb6c3" translate="yes" xml:space="preserve">
          <source>What does &quot;=&amp;gt;&quot; mean in PHP?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; significa &quot;=&amp;gt;&quot; en PHP?</target>
        </trans-unit>
        <trans-unit id="cf6b8f693e48fd9df782b22d88df15b8ee7c069e" translate="yes" xml:space="preserve">
          <source>What does &quot;===&quot; mean?</source>
          <target state="translated">¿Qué significa &quot;===&quot;?</target>
        </trans-unit>
        <trans-unit id="208e6fe6daf41669d071b5c602d9c150ec6859b7" translate="yes" xml:space="preserve">
          <source>What does $$ (dollar dollar or double dollar) mean in PHP?</source>
          <target state="translated">¿Qué significa $$ (dólar dólar o doble dólar)en PHP?</target>
        </trans-unit>
        <trans-unit id="49cf48c1c9df1240571e1e8981bd0e564b92db38" translate="yes" xml:space="preserve">
          <source>What does $k =&amp;gt; $v in foreach($ex as $k=&amp;gt;$v) mean?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; significa $ k =&amp;gt; $ v en foreach ($ ex como $ k =&amp;gt; $ v)?</target>
        </trans-unit>
        <trans-unit id="6d57f438db9ace82107b248eed8b29ae701fa108" translate="yes" xml:space="preserve">
          <source>What does &amp;amp; in &amp;amp;2 mean in PHP?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; significa &amp;amp; in &amp;amp; 2 en PHP?</target>
        </trans-unit>
        <trans-unit id="2fca3b5767eb29a8700f9e70aa4618375d6ba386" translate="yes" xml:space="preserve">
          <source>What does &amp;gt;&amp;gt; mean in PHP?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; significa &amp;gt;&amp;gt; en PHP?</target>
        </trans-unit>
        <trans-unit id="d4cbff3188ad396cf01184872a5ea335bdc3cf82" translate="yes" xml:space="preserve">
          <source>What does &amp;lt;&amp;lt;&amp;lt;END mean in PHP?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; significa &amp;lt;&amp;lt;&amp;lt; END en PHP?</target>
        </trans-unit>
        <trans-unit id="7f28896b623ea179cad168e58cdd182cd4246588" translate="yes" xml:space="preserve">
          <source>What does &amp;lt;?= mean?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; significa &amp;lt;? =</target>
        </trans-unit>
        <trans-unit id="6e16d82dd7f6eff2949d0c07d7094b04617bab86" translate="yes" xml:space="preserve">
          <source>What does '&amp;lt;?=' mean in PHP?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; significa '&amp;lt;? =' En PHP?</target>
        </trans-unit>
        <trans-unit id="d2e33899340ff19770b25e781e5bd020b00a63d5" translate="yes" xml:space="preserve">
          <source>What does &lt;code&gt;=&amp;gt;&lt;/code&gt; mean?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; significa &lt;code&gt;=&amp;gt;&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="fbbd533f1b24521be9ce8ac134840da61ae25a2e" translate="yes" xml:space="preserve">
          <source>What does =&amp;amp; mean in PHP?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; significa = &amp;amp; en PHP?</target>
        </trans-unit>
        <trans-unit id="0848ac8dd2ad970d9bca5277b1d5959b62743362" translate="yes" xml:space="preserve">
          <source>What does @ mean in PHP?</source>
          <target state="translated">¿Qué significa @ en PHP?</target>
        </trans-unit>
        <trans-unit id="5fdf3ec79f30a4604c7bbcac3dd5494048adf76a" translate="yes" xml:space="preserve">
          <source>What does [] mean when reading from a PHP array?</source>
          <target state="translated">¿Qué significa []cuando se lee de una matriz PHP?</target>
        </trans-unit>
        <trans-unit id="b7b9c42562c414d3327ba78c62b565320a6ff07d" translate="yes" xml:space="preserve">
          <source>What does ^ mean in PHP?</source>
          <target state="translated">¿Qué significa ^ en PHP?</target>
        </trans-unit>
        <trans-unit id="35458f745449c1c66905be73d63eaeee023340a7" translate="yes" xml:space="preserve">
          <source>What does `$page -= 1` in my PHP document mean?</source>
          <target state="translated">¿Qué significa &quot;$página -=1&quot; en mi documento PHP?</target>
        </trans-unit>
        <trans-unit id="c29c541283687cd3fcc85eab541aed4c8bcb3e6d" translate="yes" xml:space="preserve">
          <source>What does a . (dot) do in PHP?</source>
          <target state="translated">¿Qué hace un.(punto)en PHP?</target>
        </trans-unit>
        <trans-unit id="27f42aed1b704277acce72143fea346b85f55c7a" translate="yes" xml:space="preserve">
          <source>What does a \ (backslash) do in PHP (5.3+)?</source>
          <target state="translated">¿Qué hace una barra invertida en PHP (5.3+)?</target>
        </trans-unit>
        <trans-unit id="b8e2e8986f8b4de65768b3c335b34bf171fc0628" translate="yes" xml:space="preserve">
          <source>What does it mean to start a PHP function with an ampersand?</source>
          <target state="translated">¿Qué significa iniciar una función PHP con un ampersand?</target>
        </trans-unit>
        <trans-unit id="44c4680d63b5d21a8401b59a9ad3143fd690ded6" translate="yes" xml:space="preserve">
          <source>What does the &quot;&amp;amp;&quot; sign mean in PHP?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; significa el signo &quot;&amp;amp;&quot; en PHP?</target>
        </trans-unit>
        <trans-unit id="66c44e4f821f75f222f37db41112a0f3d04664ed" translate="yes" xml:space="preserve">
          <source>What does the PHP syntax $var1-&amp;gt;$var2 mean?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; significa la sintaxis PHP $ var1 -&amp;gt; $ var2?</target>
        </trans-unit>
        <trans-unit id="382b8e5b7c686d3ca9c24584f41b074f8143652b" translate="yes" xml:space="preserve">
          <source>What does the percent sign mean in PHP?</source>
          <target state="translated">¿Qué significa el signo de porcentaje en PHP?</target>
        </trans-unit>
        <trans-unit id="77ed27ec4f32ba25f5c36229184c70cf5c24c969" translate="yes" xml:space="preserve">
          <source>What does this signature mean (&amp;amp;) in PHP?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; significa esta firma (&amp;amp;) en PHP?</target>
        </trans-unit>
        <trans-unit id="ee59d86be146a2e2c11df09932c60c1b39f520bf" translate="yes" xml:space="preserve">
          <source>What does this symbol mean in PHP &amp;lt;?=</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; significa este s&amp;iacute;mbolo en PHP &amp;lt;? =</target>
        </trans-unit>
        <trans-unit id="57c42f05710da4d21c628c2132f3f7c02a845f4e" translate="yes" xml:space="preserve">
          <source>What does this ~ operator mean here?</source>
          <target state="translated">¿Qué significa este operador aquí?</target>
        </trans-unit>
        <trans-unit id="c2c0b3f338bfa3252accf1ee6e59a3356eb73bfb" translate="yes" xml:space="preserve">
          <source>What exactly are late static bindings in PHP?</source>
          <target state="translated">¿Qué son exactamente los enlaces estáticos tardíos en PHP?</target>
        </trans-unit>
        <trans-unit id="411019d813ba3c0ffa0ffcfbd0223cc1414991ba" translate="yes" xml:space="preserve">
          <source>What exactly does || mean?</source>
          <target state="translated">| mean?</target>
        </trans-unit>
        <trans-unit id="ab89f89137d9856a1b366932c41d11693423abb1" translate="yes" xml:space="preserve">
          <source>What is &quot;:&quot; in PHP?</source>
          <target state="translated">¿Qué es &quot;:&quot; en PHP?</target>
        </trans-unit>
        <trans-unit id="c6d9f86bfb4468d1192b49e65f1741d0170d2de6" translate="yes" xml:space="preserve">
          <source>What is += used for?</source>
          <target state="translated">¿Para qué se usa el +=?</target>
        </trans-unit>
        <trans-unit id="d4eadeb59ec12e9c69d4a80a1d1d6e62d198765b" translate="yes" xml:space="preserve">
          <source>What is a bit? A bit is a representation of 1 or 0. Basically OFF(0) and ON(1)</source>
          <target state="translated">¿Qué es un poco? Un bit es una representación de 1 o 0.Básicamente OFF(0)y ON(1)</target>
        </trans-unit>
        <trans-unit id="d7f9c9571f750026dd019284659f08f51e0bb8de" translate="yes" xml:space="preserve">
          <source>What is a byte? A byte is made up of 8 bits and the highest value of a byte is 255, which would mean every bit is set. We will look at why a byte's maximum value is 255.</source>
          <target state="translated">¿Qué es un byte? Un byte está formado por 8 bits y el valor más alto de un byte es 255,lo que significaría que cada bit está fijado.Veremos por qué el valor máximo de un byte es 255.</target>
        </trans-unit>
        <trans-unit id="3630a66989b0cc3109490b691ba21c18ac5f6595" translate="yes" xml:space="preserve">
          <source>What is the &quot;-&amp;gt;&quot; PHP operator called and how do you say it when reading code out loud?</source>
          <target state="translated">&amp;iquest;C&amp;oacute;mo se llama el operador PHP &quot;-&amp;gt;&quot; y c&amp;oacute;mo se dice al leer el c&amp;oacute;digo en voz alta?</target>
        </trans-unit>
        <trans-unit id="b0213d48601f4bc633b5ea41dc326e87183b3af8" translate="yes" xml:space="preserve">
          <source>What is the PHP operator % and how do I use it in real-world examples?</source>
          <target state="translated">¿Qué es el operador PHP % y cómo lo uso en ejemplos del mundo real?</target>
        </trans-unit>
        <trans-unit id="f07a90c8e1a10fe48d228c48f866af7caf06357d" translate="yes" xml:space="preserve">
          <source>What is the difference between &amp;lt;&amp;gt; and !=</source>
          <target state="translated">&amp;iquest;Cu&amp;aacute;l es la diferencia entre &amp;lt;&amp;gt; y! =</target>
        </trans-unit>
        <trans-unit id="2d10bab6fadd2632db3f77f78ab2df1256ff7c14" translate="yes" xml:space="preserve">
          <source>What is the difference between .= and += in PHP?</source>
          <target state="translated">¿Cuál es la diferencia entre .=y +=en PHP?</target>
        </trans-unit>
        <trans-unit id="fc8226b1c997844f1eabb6c3def69e4da76074c3" translate="yes" xml:space="preserve">
          <source>What is the difference between the | and || operators?</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="b7f2116a82c0eb02d2a3246a4ab3210c95e64b67" translate="yes" xml:space="preserve">
          <source>What is the meaning of []</source>
          <target state="translated">¿Cuál es el significado de []</target>
        </trans-unit>
        <trans-unit id="8f71a3d1b1df6c7482b30e69b7840d780c3c3903" translate="yes" xml:space="preserve">
          <source>What is the use of the @ symbol in PHP?</source>
          <target state="translated">¿Cuál es el uso del símbolo @ en PHP?</target>
        </trans-unit>
        <trans-unit id="dd8082be77e9211f033a55131c1a6360f12b0e1d" translate="yes" xml:space="preserve">
          <source>What is this?</source>
          <target state="translated">¿Qué es esto?</target>
        </trans-unit>
        <trans-unit id="e65d11641f74fc614e80347710cc195a1873cc9d" translate="yes" xml:space="preserve">
          <source>What's the difference between :: (double colon) and -&amp;gt; (arrow) in PHP?</source>
          <target state="translated">&amp;iquest;Cu&amp;aacute;l es la diferencia entre :: (doble colon) y -&amp;gt; (flecha) en PHP?</target>
        </trans-unit>
        <trans-unit id="c5e4ee8209fbcae2b59e508eb841e346c4e6a447" translate="yes" xml:space="preserve">
          <source>What's the meaning of the PHP token name T_PAAMAYIM_NEKUDOTAYIM?</source>
          <target state="translated">¿Cuál es el significado del nombre del token PHP T_PAAMAYIM_NEKUDOTAYIM?</target>
        </trans-unit>
        <trans-unit id="ed2f2360e32ddadd95e375cb7d32cba7f4eded49" translate="yes" xml:space="preserve">
          <source>What's this kind of syntax in PHP?</source>
          <target state="translated">¿Qué es este tipo de sintaxis en PHP?</target>
        </trans-unit>
        <trans-unit id="b7b020a7924be57fc3cebba9bb44410d75fdb644" translate="yes" xml:space="preserve">
          <source>When should I use a bitwise operator?</source>
          <target state="translated">¿Cuándo debo usar un operador poco inteligente?</target>
        </trans-unit>
        <trans-unit id="977e69a4c6c9753fa29b01440336be40e7f67f37" translate="yes" xml:space="preserve">
          <source>When using the Associative Array, the &lt;code&gt;key&lt;/code&gt; value would then be placed inside the index of the array to retrieve the desired &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">Cuando se utiliza la matriz asociativa, el valor &lt;code&gt;key&lt;/code&gt; se colocar&amp;iacute;a dentro del &amp;iacute;ndice de la matriz para recuperar el &lt;code&gt;value&lt;/code&gt; deseado.</target>
        </trans-unit>
        <trans-unit id="c0a861f490d43b812932814cfde2436f94144afb" translate="yes" xml:space="preserve">
          <source>Where as, if we wanted to call the array in some later part of the code, we could do:</source>
          <target state="translated">Donde como,si quisiéramos llamar a la matriz en alguna parte posterior del código,podríamos hacer:</target>
        </trans-unit>
        <trans-unit id="8a992ca5cbe22cf34c30a0fd933659f7f1a4f18a" translate="yes" xml:space="preserve">
          <source>Where can I read about conditionals done with &quot;?&quot; and &quot;:&quot; (colon)?</source>
          <target state="translated">¿Dónde puedo leer sobre los condicionales hechos con &quot;?&quot; y &quot;:&quot; (dos puntos)?</target>
        </trans-unit>
        <trans-unit id="df1c7422e392b51b24028da3551b7a58611cdc83" translate="yes" xml:space="preserve">
          <source>Where do we use the object operator &quot;-&amp;gt;&quot; in PHP?</source>
          <target state="translated">&amp;iquest;D&amp;oacute;nde usamos el operador de objeto &quot;-&amp;gt;&quot; en PHP?</target>
        </trans-unit>
        <trans-unit id="9d863fbd4a4b35d1abc87eb5fac9e58af686e66b" translate="yes" xml:space="preserve">
          <source>Why is this?</source>
          <target state="translated">¿Por qué?</target>
        </trans-unit>
        <trans-unit id="091eab9223f7cc9777c4aea9679c481780dce533" translate="yes" xml:space="preserve">
          <source>You can also increment letters in PHP:</source>
          <target state="translated">También puedes incrementar las letras en PHP:</target>
        </trans-unit>
        <trans-unit id="40052fed22d269470d8be0b9c9b766ec16085a27" translate="yes" xml:space="preserve">
          <source>You will notice that we have 3 bits set, in the 8, 2, and 1 columns. Add those up: 8+2+1=11.</source>
          <target state="translated">Notarán que tenemos un conjunto de 3 bits,en las columnas 8,2 y 1.Súmenlos:8+2+1=11.</target>
        </trans-unit>
        <trans-unit id="d0bfc452d079979e657de7f447231b82561194e7" translate="yes" xml:space="preserve">
          <source>comparing, !== versus !=</source>
          <target state="translated">comparando,!==contra !=</target>
        </trans-unit>
        <trans-unit id="7f53a68d324346fc8457a1665141697dcc97ee86" translate="yes" xml:space="preserve">
          <source>e.g.</source>
          <target state="translated">e.g.</target>
        </trans-unit>
        <trans-unit id="beda1183a248c33e9d286c84bb826143eb339d4a" translate="yes" xml:space="preserve">
          <source>have you even noticed how these calls works?</source>
          <target state="translated">¿te has dado cuenta de cómo funcionan estas llamadas?</target>
        </trans-unit>
        <trans-unit id="c14aa39d5e24bb8bf753b622cd1c88aba5f20a07" translate="yes" xml:space="preserve">
          <source>php method argument type hinting with question mark (?type)</source>
          <target state="translated">método php tipo de argumento insinuando con signo de interrogación (?tipo)</target>
        </trans-unit>
        <trans-unit id="471e8804517679ed9cd68d8beb1af40c3cbdea47" translate="yes" xml:space="preserve">
          <source>static::staticFunctionName()</source>
          <target state="translated">static::staticFunctionName()</target>
        </trans-unit>
        <trans-unit id="1a2c7b99d18d3c66f48ac2eb89adcbbe8e873533" translate="yes" xml:space="preserve">
          <source>what is &quot;$$&quot; in PHP</source>
          <target state="translated">¿Qué es &quot;$$&quot; en PHP?</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
