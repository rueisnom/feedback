<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/37549594">
    <body>
      <group id="37549594">
        <trans-unit id="a1bc79838f4eef6a3d87780b2925b83ba71e9c88" translate="yes" xml:space="preserve">
          <source>(In real life, don't forget to check the return value from &lt;code&gt;scanf()&lt;/code&gt;!)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（在现实生活中，不要忘记检查&lt;/font&gt;&lt;/font&gt; &lt;code&gt;scanf()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的返回值&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;！）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d3a68f80aa9108cafbd9a9d034ed20c2774b2bc5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Further reading:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;进一步阅读：&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5b0092b09a5ca9ad4a7504c41bbb47dad31e5fff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pointers pointing at invalid data&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指向无效数据的指针&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6efe807afe849b727915aaedd35a09a87665ba6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Segmentation fault and causes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;细分故障及原因&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d4d329d14df1e6cb604d2ce11a8d4e0176214668" translate="yes" xml:space="preserve">
          <source>A pointer is a special type of variable, which can only contain an address of another variable. It cannot contain any data. You cannot &quot;copy/store data into a pointer&quot; - that doesn't make any sense. You can only set a pointer to point at data allocated elsewhere.</source>
          <target state="translated">指针是一种特殊类型的变量,它只能包含另一个变量的地址。它不能包含任何数据。你不能 &quot;将数据复制存储到指针中&quot;--这没有任何意义。你只能设置一个指针指向其他地方分配的数据。</target>
        </trans-unit>
        <trans-unit id="9f36cbf061e6c80c8fa26d6b3905f2bff23c04c6" translate="yes" xml:space="preserve">
          <source>Can a local variable's memory be accessed outside its scope?</source>
          <target state="translated">局部变量的内存可以在其范围外访问吗?</target>
        </trans-unit>
        <trans-unit id="fec9fe6620202f9443ba5bc73f05d87edc2057ee" translate="yes" xml:space="preserve">
          <source>Crash or “segmentation fault” when data is copied/scanned/read to an uninitialized pointer</source>
          <target state="translated">当数据被复制扫描读取到未初始化指针时发生崩溃或 &quot;分段故障&quot;。</target>
        </trans-unit>
        <trans-unit id="28c503a9005e3feb8b81fe3368b63287f8d079f0" translate="yes" xml:space="preserve">
          <source>Definitive List of Common Reasons for Segmentation Faults</source>
          <target state="translated">分区故障的常见原因的明确列表</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="efffd72e61486eb7eaecb8c68d2e7e403921fad9" translate="yes" xml:space="preserve">
          <source>For making a modifiable copy of a string, instead of using &lt;code&gt;malloc&lt;/code&gt;, &lt;code&gt;strlen&lt;/code&gt; and &lt;code&gt;strcpy&lt;/code&gt;, the POSIX C library has a handy function called &lt;code&gt;strdup&lt;/code&gt; in &lt;code&gt;&amp;lt;string.h&amp;gt;&lt;/code&gt; that will return a copy of the passed-in null-terminated string with allocated storage duration. After use the pointer should be released with &lt;code&gt;free&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为了制作字符串的可修改副本&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，POSIX C库&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt; &lt;code&gt;&amp;lt;string.h&amp;gt;&lt;/code&gt; 中使用&lt;font style=&quot;vertical-align: inherit;&quot;&gt;了&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名为&lt;/font&gt; &lt;code&gt;strdup&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;的便捷函数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，而不是使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;malloc&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;strlen&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;strcpy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，该函数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将返回传入的以null结束的字符串的副本，其中储存期限。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用后，指针应与&lt;/font&gt; &lt;code&gt;free&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;一起&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;释放&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="83c0be6b5f3db94844f9dccba12c2bd769247af5" translate="yes" xml:space="preserve">
          <source>How to access a local variable from a different function using pointers?</source>
          <target state="translated">如何使用指针从不同的函数访问本地变量?</target>
        </trans-unit>
        <trans-unit id="9b7a711036d826fe233a5f1366dbf12cadc49590" translate="yes" xml:space="preserve">
          <source>In C, &lt;code&gt;'h'&lt;/code&gt; is a single character literal, while &lt;code&gt;&quot;h&quot;&lt;/code&gt; is a string literal containing an &lt;code&gt;'h'&lt;/code&gt; and a null terminator &lt;code&gt;\0&lt;/code&gt; (that is, a 2 char array). Also, in C, the type of a character literal is &lt;code&gt;int&lt;/code&gt;, that is, &lt;code&gt;sizeof('h')&lt;/code&gt; is equivalent to &lt;code&gt;sizeof(int)&lt;/code&gt;, while &lt;code&gt;sizeof(char)&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在C语言中，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;'h'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是一个单字符文字，而&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;h&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是一个字符串文字，其中包含一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;'h'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和一个空终止符&lt;/font&gt;&lt;/font&gt; &lt;code&gt;\0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（即2个字符的数组）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同样，在C语言中，字符文字的类型为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，即&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sizeof('h')&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;等同于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sizeof(int)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，而&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sizeof(char)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9e7f973f8676f748f5200453dbaff5863291024b" translate="yes" xml:space="preserve">
          <source>In most cases &lt;strong&gt;&quot;segmentation fault&quot;&lt;/strong&gt; happens due to error in &lt;em&gt;memory allocation&lt;/em&gt; or &lt;em&gt;array out of bound&lt;/em&gt; cases.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在大多数情况下，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo;分段错误&amp;rdquo;是&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内存分配&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;错误&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数组超出范围而发生的&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eac122db52ec165712d61e779daa2652165526e3" translate="yes" xml:space="preserve">
          <source>Instead, you must ensure that the pointer points at (enough) allocated memory:</source>
          <target state="translated">相反,你必须确保指针指向(足够的)分配的内存。</target>
        </trans-unit>
        <trans-unit id="3554c22716aa233d983a1f30cf5e5a988370731a" translate="yes" xml:space="preserve">
          <source>It is always a bug to use a pointer before it has been initialized. It does not yet point at valid memory.</source>
          <target state="translated">指针还没有被初始化之前就使用指针,这一直是个BUG。它还没有指向有效的内存。</target>
        </trans-unit>
        <trans-unit id="800866a5adcd315b9047dc241b454e0b6cee927b" translate="yes" xml:space="preserve">
          <source>Note that you can also set a pointer to point at a well-defined &quot;nowhere&quot;, by letting it point to &lt;code&gt;NULL&lt;/code&gt;. This makes it a &lt;em&gt;null pointer&lt;/em&gt;, which is a pointer that is guaranteed not to point at any valid memory. This is different from leaving the pointer completely uninitialized.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请注意，您还可以通过将指针指向&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来设置指向明确定义的&amp;ldquo; nowhere&amp;rdquo;的指针&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这使其成为一个&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;null指针&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，这是一个保证不指向任何有效内存的指针。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这与使指针完全未初始化不同。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="afa92b7ab254d8feac32d73d80ee14eba6da64f4" translate="yes" xml:space="preserve">
          <source>One situation that frequently occurs while learning C is trying to use single quotes to denote a string literal:</source>
          <target state="translated">在学习C语言时,经常出现的一种情况是试图用单引号来表示字符串的字段。</target>
        </trans-unit>
        <trans-unit id="dd772888bf66b9a8fc1134939a13ce0f0cbc61f1" translate="yes" xml:space="preserve">
          <source>Or memory allocated dynamically on the heap:</source>
          <target state="translated">或者是堆上动态分配的内存。</target>
        </trans-unit>
        <trans-unit id="0a20af9fd475dcac9091eabf70c88fab876a7e77" translate="yes" xml:space="preserve">
          <source>Pointers only point to a memory location. You created a pointer but you did not bind to a memory location yet. &lt;code&gt;strcpy&lt;/code&gt; wants you to pass two pointers (&lt;em&gt;first one mustn't be constant&lt;/em&gt;) that point to two character arrays like this signature:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指针仅指向存储位置。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您创建了一个指针，但尚未绑定到内存位置。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;strcpy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;希望您传递两个指向&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;两个字符数组的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指针（&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;第一个&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指针&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不能为常量&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;），例如：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2cff72a59fdf5a7ea7ffbaeee7dc75a86db4b0d3" translate="yes" xml:space="preserve">
          <source>Size of &lt;em&gt;dynamically allocated memory&lt;/em&gt; can be changed by using &lt;code&gt;realloc()&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以通过使用&lt;/font&gt; &lt;code&gt;realloc()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;来更改&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;动态分配的内存的&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;大小&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a4e92e474d6c8551b60729b305e40e67978a16c2" translate="yes" xml:space="preserve">
          <source>The solution for null pointer exception bugs is the same: you must set the pointer to point at valid memory before using it.</source>
          <target state="translated">空指针异常BUG的解决方法是一样的:在使用前必须将指针设置为指向有效内存。</target>
        </trans-unit>
        <trans-unit id="30640f140a73a491f59d0e691af6b7bf74aeb5b2" translate="yes" xml:space="preserve">
          <source>These examples could all lead to program crashes or other kinds of unexpected behavior, such as &quot;segmentation faults&quot;:</source>
          <target state="translated">这些例子都可能导致程序崩溃或其他类型的意外行为,如 &quot;分段故障 &quot;等。</target>
        </trans-unit>
        <trans-unit id="bf2800cdeb32bc9b35fa61fb737faf427f182cce" translate="yes" xml:space="preserve">
          <source>This happens because you have &lt;strong&gt;not allocated&lt;/strong&gt; memory for the &lt;strong&gt;pointer&lt;/strong&gt;&lt;code&gt;char* ptr&lt;/code&gt; .
In this case you have to &lt;em&gt;dynamically allocate&lt;/em&gt; memory for the pointer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;发生这种情况是因为&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;尚未&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指针&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt; &lt;code&gt;char* ptr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;分配&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内存&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在这种情况下，您必须&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为指针&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;动态分配&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内存。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75d0f9510ecbf090c260a92f53ef58d30f978ac3" translate="yes" xml:space="preserve">
          <source>This means that in order for a pointer to be meaningful, it must always point at a valid memory location. For example it could point at memory allocated on the stack:</source>
          <target state="translated">这意味着,为了使指针有意义,它必须始终指向一个有效的内存位置。例如,它可以指向栈上分配的内存。</target>
        </trans-unit>
        <trans-unit id="4363dccea7be1178f7d8d99f83fd2d742ddf158f" translate="yes" xml:space="preserve">
          <source>This question is meant to be used as reference for all frequently asked questions of the nature:</source>
          <target state="translated">这道题是用来作为所有性质的常考题的参考。</target>
        </trans-unit>
        <trans-unit id="0d98c3ed9e51871b7e3864c8328a5315c0a88cdf" translate="yes" xml:space="preserve">
          <source>Try this code :-</source>
          <target state="translated">试试这个代码 :-</target>
        </trans-unit>
        <trans-unit id="9a20f5a77aa576b6bb7cd3666194e8181530fc92" translate="yes" xml:space="preserve">
          <source>Two functions &lt;code&gt;malloc()&lt;/code&gt; and &lt;code&gt;calloc()&lt;/code&gt; can be used for &lt;code&gt;dynamic memory allocation&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;两个函数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;malloc()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;calloc()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可用于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;dynamic memory allocation&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="961a198b5a8bd26ae551bfa6cdb0faa07ce13216" translate="yes" xml:space="preserve">
          <source>What is a bus error?</source>
          <target state="translated">什么是总线错误?</target>
        </trans-unit>
        <trans-unit id="066a518f519181bf8283235df8c28f946e88e332" translate="yes" xml:space="preserve">
          <source>What is a segmentation fault?</source>
          <target state="translated">什么是分段断层?</target>
        </trans-unit>
        <trans-unit id="ce8c587486665519bb96ec0d8acac27ddb41143a" translate="yes" xml:space="preserve">
          <source>What is the difference between char s[] and char *s?</source>
          <target state="translated">char s[]和char *s的区别是什么?</target>
        </trans-unit>
        <trans-unit id="83c352feda4a47aff8c4e90ff3ecd02e1d054c74" translate="yes" xml:space="preserve">
          <source>When the use of &lt;code&gt;*ptr&lt;/code&gt; over don't forget to &lt;em&gt;deallocate memory&lt;/em&gt; allocated for &lt;code&gt;*ptr&lt;/code&gt; .This can be done using &lt;code&gt;free()&lt;/code&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;*ptr&lt;/code&gt; 时&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，不要忘记&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;释放&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;*ptr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;分配的内存&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。这可以使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;free()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来完成&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="25e63e805d5cba210b412a239870a8f64993572c" translate="yes" xml:space="preserve">
          <source>Why do I get a mysterious crash or &quot;segmentation fault&quot; when I copy/scan data to the address where an uninitialised pointer points to?</source>
          <target state="translated">当我将数据复制扫描到未初始化指针指向的地址时,为什么会出现神秘的崩溃或 &quot;分段故障&quot;?</target>
        </trans-unit>
        <trans-unit id="027283df8fa127f36c097b4ed1939f7fa3359405" translate="yes" xml:space="preserve">
          <source>Why do I get a segmentation fault when writing to a string initialized with &quot;char *s&quot; but not &quot;char s[]&quot;?</source>
          <target state="translated">为什么我在写入初始化为 &quot;char *s &quot;而不是 &quot;char s[]&quot;的字符串时,会出现分段故障?</target>
        </trans-unit>
        <trans-unit id="c7405163ef0e04c2a411ca33fa2b96fe32d9de7c" translate="yes" xml:space="preserve">
          <source>Yet, should you attempt to access the memory pointed at by a null pointer, you can get similar problems as when using an uninitialized pointer: crashes or segmentation faults. In the best case, your system notices that you are trying to access the address null and then throws a &quot;null pointer exception&quot;.</source>
          <target state="translated">然而,如果你试图访问空指针所指向的内存,你可能会遇到类似于使用未初始化指针时的问题:崩溃或分段故障。在最好的情况下,你的系统会注意到你试图访问地址为空,然后抛出一个 &quot;空指针异常&quot;。</target>
        </trans-unit>
        <trans-unit id="0de777731e3f5a92e145e8269ec09dfda997ef69" translate="yes" xml:space="preserve">
          <source>You can try the following code snippet to read string until reaching newline character (*you can also add other whitespace characters like &lt;code&gt;&quot;%[^\t\n]s&quot;&lt;/code&gt;(&lt;em&gt;tab, newline&lt;/em&gt;) or &lt;code&gt;&quot;%[^ \t\n]s&quot;&lt;/code&gt; (&lt;em&gt;space, tab, newline&lt;/em&gt;)).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以尝试使用以下代码片段读取字符串，直到到达换行符为止（*您还可以添加其他空格字符，例如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;%[^\t\n]s&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;制表符，换行符&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;%[^ \t\n]s&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;空格，制表符，换行符&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;））。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="8d71f3a9af19cfa9a2e295c715aa19ee5751b04f" translate="yes" xml:space="preserve">
          <source>sample usage:</source>
          <target state="translated">样的用法。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
