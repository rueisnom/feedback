<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/195951">
    <body>
      <group id="195951">
        <trans-unit id="a768be6d54ef6b70b8eb7eb41a34fe951c12c7d5" translate="yes" xml:space="preserve">
          <source>(Note that &lt;code&gt;$&lt;/code&gt; here is the jQuery object.)</source>
          <target state="translated">（请注意，这里的 &lt;code&gt;$&lt;/code&gt; 是jQuery对象。）</target>
        </trans-unit>
        <trans-unit id="d123c3198499240df126cca6365e40a09e0871c9" translate="yes" xml:space="preserve">
          <source>(Note that the window.onload part is required so that the contents of that function are executed &lt;em&gt;after&lt;/em&gt; the HTML has finished loading - without this, the MyElement might not exist when the JavaScript code is called, so that line would fail.)</source>
          <target state="translated">（请注意，需要window.onload部分，以便在HTML加载完成&lt;em&gt;后&lt;/em&gt;执行该函数的内容-否则，在调用JavaScript代码时MyElement可能不存在，因此该行将失败。）</target>
        </trans-unit>
        <trans-unit id="36928cac6793ea8d612194e79d98f04c583c786a" translate="yes" xml:space="preserve">
          <source>(You can use a space-delimited list to apply multiple classes.)</source>
          <target state="translated">(你可以使用一个空间有限的列表来应用多个类)。</target>
        </trans-unit>
        <trans-unit id="f3cc2818b3bab70c11222a1b4f8abfca8398fcbb" translate="yes" xml:space="preserve">
          <source>100 is the timeout delay during which the class is changed.</source>
          <target state="translated">100是改变类的超时延迟。</target>
        </trans-unit>
        <trans-unit id="6d71e42eee17ebac46990c6ec99f72c1dd004e2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style&quot;&gt;&lt;code&gt;style&lt;/code&gt;&lt;/a&gt; vs. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/classList&quot;&gt;&lt;code&gt;classList&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style&quot;&gt; &lt;code&gt;style&lt;/code&gt; &lt;/a&gt;与&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/classList&quot;&gt; &lt;code&gt;classList&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ac22d11bf59761da3e60890d35e15d0d9759e4ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;classList&lt;/code&gt; DOM API:</source>
          <target state="translated">&lt;code&gt;classList&lt;/code&gt; DOM API：</target>
        </trans-unit>
        <trans-unit id="35d5c193432c9ac6d34504aee935b45f1cc01387" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(Very roughly, a library is a set of tools designed for a specific task, whilst a framework generally contains multiple libraries and performs a complete set of duties.)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;（大致来说，库是为特定任务而设计的一组工具，而框架通常包含多个库并执行一整套职责。）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8f5a8c84807804c1921f9174da4957c65cc014f6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;OR&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;OR&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5a24ffdcf9b11f1ea933600cf7404e7c7ae64feb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;That's it.&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;而已。&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="65dcf051b0f8d4d6b70a92dd10d98dbbb05e7cdd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Note:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="846706ae5b3085b8e60517b9648cefa810a047c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TL;DR :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;TL; DR：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60fd6f81fd03c694bc80a47ab2a3e466af102521" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;&lt;em&gt;(It is not required to have this code in script tags, this is simply for brevity of example, and including the JavaScript in a distinct file may be more appropriate.)&lt;/em&gt;&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;em&gt;（不需要在脚本标签中包含此代码，这只是为了简化示例，将JavaScript包含在不同的文件中可能更合适。）&lt;/em&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="810348209a0b4e13051f087361ee127f63bc4329" translate="yes" xml:space="preserve">
          <source>A couple of minor notes and tweaks on the previous regexes:</source>
          <target state="translated">对之前的regex的一些小注意和调整。</target>
        </trans-unit>
        <trans-unit id="d6b1af0ad5192ae9298436ae976275ddc41ddadf" translate="yes" xml:space="preserve">
          <source>A very convenient manner of adding and removing classes is the &lt;code&gt;classList&lt;/code&gt; DOM API. This API allows us to select all classes of a specific DOM element in order to modify the list using javascript. For example:</source>
          <target state="translated">添加和删​​除类的一种非常方便的方法是 &lt;code&gt;classList&lt;/code&gt; DOM API。 该API允许我们选择特定DOM元素的所有类，以便使用javascript修改列表。 例如：</target>
        </trans-unit>
        <trans-unit id="cb7131c5592f111393c51e123879700b86ec932a" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;class-c&lt;/code&gt;</source>
          <target state="translated">添加 &lt;code&gt;class-c&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a03308e049943bb29a3be1a514a07bad3ce3ccbc" translate="yes" xml:space="preserve">
          <source>An explanation of this regex is as follows:</source>
          <target state="translated">对这一汇辑表的解释如下:</target>
        </trans-unit>
        <trans-unit id="a58a4783015366888789805b6147216ea09fb6f6" translate="yes" xml:space="preserve">
          <source>And then just use like this (on click will add or remove class):</source>
          <target state="translated">然后就用这样的方式(点击就会添加或删除类)。</target>
        </trans-unit>
        <trans-unit id="e2c4d1291801df4b64d46bea22d9f2ef3fc8971b" translate="yes" xml:space="preserve">
          <source>And to toggle a class (remove if exists else add it):</source>
          <target state="translated">而要切换一个类(如果存在则删除,否则添加它)。</target>
        </trans-unit>
        <trans-unit id="5483156a29c5a8e4c97d3f23db1a476796c14e0d" translate="yes" xml:space="preserve">
          <source>And, if you really want to know the why and educate yourself then I suggest reading &lt;a href=&quot;https://stackoverflow.com/a/196038/1804013&quot;&gt;Peter Boughton's answer&lt;/a&gt;, it's perfect.</source>
          <target state="translated">而且，如果您真的想知道原因并进行自我教育，那么我建议您阅读&lt;a href=&quot;https://stackoverflow.com/a/196038/1804013&quot;&gt;Peter Boughton的答案&lt;/a&gt; ，这很完美。</target>
        </trans-unit>
        <trans-unit id="cd4baaffd7536020926a70beb3e2efb64cb86fd9" translate="yes" xml:space="preserve">
          <source>As well you could extend HTMLElement object, in order to add methods to add, remove, toggle and check classes (&lt;a href=&quot;https://gist.github.com/Maksims/5356227&quot;&gt;gist&lt;/a&gt;):</source>
          <target state="translated">同样，您可以扩展HTMLElement对象，以添加添加，删除，切换和检查类的方法（ &lt;a href=&quot;https://gist.github.com/Maksims/5356227&quot;&gt;gist&lt;/a&gt; ）：</target>
        </trans-unit>
        <trans-unit id="25ca1d082ae349e38f065bdbc50243133e174924" translate="yes" xml:space="preserve">
          <source>Assigning a function to a click event with jQuery:</source>
          <target state="translated">用jQuery分配一个函数到一个点击事件。</target>
        </trans-unit>
        <trans-unit id="81cd875fdefe7d87a7e655d0e8dbf87cbc24858d" translate="yes" xml:space="preserve">
          <source>Assigning these actions to onclick events:</source>
          <target state="translated">将这些操作分配给onclick事件。</target>
        </trans-unit>
        <trans-unit id="f47ff05370efe7ed97f1acf5d6c11d0c6d917e1c" translate="yes" xml:space="preserve">
          <source>By now for sure it would just be better to use jQuery.</source>
          <target state="translated">到了现在肯定是用jQuery就好了。</target>
        </trans-unit>
        <trans-unit id="04ebcbcd410dca3c8893aa799b291cf05659c42e" translate="yes" xml:space="preserve">
          <source>Change an element's CSS class with JavaScript in &lt;a href=&quot;http://en.wikipedia.org/wiki/ASP.NET&quot;&gt;ASP.NET&lt;/a&gt;:</source>
          <target state="translated">在&lt;a href=&quot;http://en.wikipedia.org/wiki/ASP.NET&quot;&gt;ASP.NET中&lt;/a&gt;使用JavaScript更改元素的CSS类：</target>
        </trans-unit>
        <trans-unit id="28de79fc7eab9290622fc6284f484baaec85cc51" translate="yes" xml:space="preserve">
          <source>Change an element's class in vanilla JavaScript with IE6 support</source>
          <target state="translated">在支持IE6的vanilla JavaScript中更改元素的类</target>
        </trans-unit>
        <trans-unit id="c2c8e05d349c3d878a6aac29e41f9479d5692cbb" translate="yes" xml:space="preserve">
          <source>Changing Classes with jQuery:</source>
          <target state="translated">用jQuery改变类。</target>
        </trans-unit>
        <trans-unit id="50791437da96975496871fe477000ce3054031f7" translate="yes" xml:space="preserve">
          <source>Class to add is the new class that you want to add.</source>
          <target state="translated">要添加的类是你要添加的新类。</target>
        </trans-unit>
        <trans-unit id="95d4a75327fb38b62efc8349327eca2efa53bc92" translate="yes" xml:space="preserve">
          <source>Class1 is a listener for an event.</source>
          <target state="translated">类1是一个事件的听众。</target>
        </trans-unit>
        <trans-unit id="cd425ecec02ec2a70c426364c0a9d91a8bec4844" translate="yes" xml:space="preserve">
          <source>Classtoremove is the old class you have.</source>
          <target state="translated">Classtoremove是你所拥有的旧类。</target>
        </trans-unit>
        <trans-unit id="10c4fefdc3c690986b64bf3a9b02f4ea909e714f" translate="yes" xml:space="preserve">
          <source>Credit - &lt;a href=&quot;https://jaischool.com/javascript-lang/how-to-change-class-name-of-an-html-element-in-javascript.html&quot;&gt;https://jaischool.com/javascript-lang/how-to-change-class-name-of-an-html-element-in-javascript.html&lt;/a&gt;</source>
          <target state="translated">信用-https: &lt;a href=&quot;https://jaischool.com/javascript-lang/how-to-change-class-name-of-an-html-element-in-javascript.html&quot;&gt;//jaischool.com/javascript-lang/how-to-change-class-name-of-an-html-element-in-javascript.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">扩展片段</target>
        </trans-unit>
        <trans-unit id="ee8a847853d723642646551f6895a7e50b2f059f" translate="yes" xml:space="preserve">
          <source>Good Luck.</source>
          <target state="translated">好运。</target>
        </trans-unit>
        <trans-unit id="0c41f1b8245e9cf6c1f960925bde5e81ea9ce040" translate="yes" xml:space="preserve">
          <source>Here is &lt;a href=&quot;http://jsfiddle.net/5QMgR/&quot;&gt;demo&lt;/a&gt;.</source>
          <target state="translated">这是&lt;a href=&quot;http://jsfiddle.net/5QMgR/&quot;&gt;演示&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="c5c09b52afff0b0af82cb064ab1ed16b1be3cd36" translate="yes" xml:space="preserve">
          <source>Here is a little style vs. classList examples to get you to see what are the options you have available and how to use &lt;code&gt;classList&lt;/code&gt; to do what you want.</source>
          <target state="translated">这是一个样式vs.classList的小示例，让您了解可用的选项以及如何使用 &lt;code&gt;classList&lt;/code&gt; 进行所需的操作。</target>
        </trans-unit>
        <trans-unit id="5ef00fc58916319da7dbc65f7d5cc5a0b9fbfbaa" translate="yes" xml:space="preserve">
          <source>Here is simple jQuery code to do that.</source>
          <target state="translated">这里有一个简单的jQuery代码来完成。</target>
        </trans-unit>
        <trans-unit id="df180310b6bd56954465ab73a5bf66ab501fa669" translate="yes" xml:space="preserve">
          <source>Here's a toggleClass to toggle/add/remove a class on an element:</source>
          <target state="translated">这里有一个toggleClass,可以在一个元素上切换addremove类。</target>
        </trans-unit>
        <trans-unit id="d3a5a55861d63e399b0920c3fec51d2bc02e0f36" translate="yes" xml:space="preserve">
          <source>Here's my version, fully working:</source>
          <target state="translated">这是我的版本,完全可行。</target>
        </trans-unit>
        <trans-unit id="3d080817ae211b70ffb8548327b1435f255163a6" translate="yes" xml:space="preserve">
          <source>Here,</source>
          <target state="translated">Here,</target>
        </trans-unit>
        <trans-unit id="c4c7170745ea8afb708618b6359b9d5cd438ac34" translate="yes" xml:space="preserve">
          <source>How can I change a class of an HTML element in response to an &lt;code&gt;onclick&lt;/code&gt; event using JavaScript?</source>
          <target state="translated">如何使用JavaScript更改HTML元素的类以响应 &lt;code&gt;onclick&lt;/code&gt; 事件？</target>
        </trans-unit>
        <trans-unit id="9bd005ab00fefa0cb963f924ab7344480c4649d9" translate="yes" xml:space="preserve">
          <source>How can I change an element's class with JavaScript</source>
          <target state="translated">如何使用JavaScript改变元素的类?</target>
        </trans-unit>
        <trans-unit id="5144dc7f15c6b38fa4a868f7c62a32aa8860fb50" translate="yes" xml:space="preserve">
          <source>I use the following vanilla JavaScript functions in my code. They use regular expressions and &lt;code&gt;indexOf&lt;/code&gt; but do not require quoting special characters in regular expressions.</source>
          <target state="translated">我在代码中使用了以下普通JavaScript函数。 它们使用正则表达式和 &lt;code&gt;indexOf&lt;/code&gt; ,但不需要在正则表达式中引用特殊字符。</target>
        </trans-unit>
        <trans-unit id="444d425d90f140f1bc68fea87162358f6b6b2aee" translate="yes" xml:space="preserve">
          <source>I would use jQuery and write something like this:</source>
          <target state="translated">我想用jQuery,写一些这样的东西。</target>
        </trans-unit>
        <trans-unit id="0f8d83066a49e3f5f08eddd11c5dbb438196d99a" translate="yes" xml:space="preserve">
          <source>I'd like to do something like below as methods to my javascript framework to add few functionalities which handle adding classes, deleting classes, etc similar to jQuery, this is fully supported in IE9+, also my code is written in ES6, so you need to make sure your browser support it or you using something like babel, otherwise need to use ES5 syntax in your code, also in this way, we finding element via ID, which means the element needs to have an ID to be selected:</source>
          <target state="translated">我想在我的javascript框架中添加一些类似于jQuery的功能,比如添加类,删除类等,这在IE9+中是完全支持的,而且我的代码是用ES6写的,所以你需要确保你的浏览器支持它,或者你使用的是babel之类的东西,否则需要在你的代码中使用ES5语法,另外,在这种方式中,我们通过ID来查找元素,也就是元素需要有一个ID才能被选中。</target>
        </trans-unit>
        <trans-unit id="6f8c167593b08d2edd8b2935fa90038fcc0b4d44" translate="yes" xml:space="preserve">
          <source>If you want to add &lt;code&gt;margin-top&lt;/code&gt; property into an element, you would do in such:</source>
          <target state="translated">如果要将 &lt;code&gt;margin-top&lt;/code&gt; 属性添加到元素中，可以这样做：</target>
        </trans-unit>
        <trans-unit id="55228e1e70409a67210cc788673caf2ac79f08bd" translate="yes" xml:space="preserve">
          <source>In addition, jQuery provides a shortcut for adding a class if it doesn't apply, or removing a class that does:</source>
          <target state="translated">此外,jQuery还提供了一个快捷方式,如果不适用的话,可以添加一个类,或者删除一个不适用的类。</target>
        </trans-unit>
        <trans-unit id="61047c026ab7dab583128874055d31d4cb393da8" translate="yes" xml:space="preserve">
          <source>In one of my old projects that did not use jQuery, I built the following functions for adding, removing and checking if element has class:</source>
          <target state="translated">在我以前的一个没有使用jQuery的项目中,我建立了以下函数,用于添加、删除和检查元素是否有类。</target>
        </trans-unit>
        <trans-unit id="61623482f521e375c25248bf66ba277cbaa4a4e2" translate="yes" xml:space="preserve">
          <source>JavaScript Frameworks and Libraries</source>
          <target state="translated">JavaScript Frameworks and Libraries</target>
        </trans-unit>
        <trans-unit id="86a7411a1f3468909af35695eccc8479028d6f7c" translate="yes" xml:space="preserve">
          <source>Just thought I'd throw this in:</source>
          <target state="translated">我只是想把这个扔进去</target>
        </trans-unit>
        <trans-unit id="87b355bfe37c01d1c8a3096edac72baff56af530" translate="yes" xml:space="preserve">
          <source>Just to add on information from another popular framework, Google Closures, see their &lt;a href=&quot;http://closure-library.googlecode.com/svn/docs/closure_goog_dom_classes.js.html&quot;&gt;dom/classes&lt;/a&gt; class:</source>
          <target state="translated">只是为了补充来自另一个流行框架Google Closures的信息，请参见其&lt;a href=&quot;http://closure-library.googlecode.com/svn/docs/closure_goog_dom_classes.js.html&quot;&gt;dom / classs&lt;/a&gt;类：</target>
        </trans-unit>
        <trans-unit id="6a235429c43f03c2a3e0d684e6357aa9eb0d584e" translate="yes" xml:space="preserve">
          <source>Let say we have a &lt;code&gt;&amp;lt;div class=&quot;class-a class-b&quot;&amp;gt;&lt;/code&gt;, in this case, we have 2 classes added to our div element already, &lt;code&gt;class-a&lt;/code&gt; and &lt;code&gt;class-b&lt;/code&gt;, and we want to control what classes &lt;strong&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/strong&gt; and what class to &lt;strong&gt;&lt;code&gt;add&lt;/code&gt;&lt;/strong&gt;. This is where &lt;code&gt;classList&lt;/code&gt; becomes handy.</source>
          <target state="translated">假设我们有一个 &lt;code&gt;&amp;lt;div class=&quot;class-a class-b&quot;&amp;gt;&lt;/code&gt; ，在这种情况下，我们已经在div元素中添加了2个类，即 &lt;code&gt;class-a&lt;/code&gt; 和 &lt;code&gt;class-b&lt;/code&gt; ，并且我们想控制要&lt;strong&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/strong&gt;类以及要&lt;strong&gt; &lt;code&gt;add&lt;/code&gt; &lt;/strong&gt;类。 这是 &lt;code&gt;classList&lt;/code&gt; 变得方便的地方。</target>
        </trans-unit>
        <trans-unit id="9aadc6ee7db9b4612898502d2c388d6ab5216cbc" translate="yes" xml:space="preserve">
          <source>Lots of answers, lots of good answers.</source>
          <target state="translated">很多答案,很多好的答案。</target>
        </trans-unit>
        <trans-unit id="d9a7e31e31b8f3bd9a139a31f77774a0e65ce73c" translate="yes" xml:space="preserve">
          <source>Modern HTML5 Techniques for changing classes</source>
          <target state="translated">现代HTML5换类技术</target>
        </trans-unit>
        <trans-unit id="53b6498141fe9e946f9d83338c1323888885539c" translate="yes" xml:space="preserve">
          <source>Modern browsers have added &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/element.classList&quot;&gt;&lt;strong&gt;classList&lt;/strong&gt;&lt;/a&gt; which provides methods to make it easier to manipulate classes without needing a library:</source>
          <target state="translated">现代浏览器添加了&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/element.classList&quot;&gt;&lt;strong&gt;classList&lt;/strong&gt;&lt;/a&gt; ， &lt;strong&gt;该类&lt;/strong&gt;提供了一些方法，可以在不需要库的情况下更轻松地操作类：</target>
        </trans-unit>
        <trans-unit id="2f2684301d059bae8e20d1ae1d416f855beb6ef4" translate="yes" xml:space="preserve">
          <source>OK, I think in this case you should use jQuery or write your own Methods in pure javascript, my preference is adding my own methods rather than injecting all jQuery to my application if I don't need that for other reasons.</source>
          <target state="translated">OK,我认为在这种情况下,你应该使用jQuery或者用纯javascript写出自己的Methods,我的偏好是添加自己的方法,而不是因为其他原因不需要的情况下,将jQuery全部注入到我的应用程序中。</target>
        </trans-unit>
        <trans-unit id="1ef9dca9eda5714499e41e3ca4a0e48e33dbbe28" translate="yes" xml:space="preserve">
          <source>One option for selecting the element is using &lt;a href=&quot;http://closure-library.googlecode.com/svn/docs/closure_third_party_closure_goog_dojo_dom_query.js.html&quot;&gt;goog.dom.query&lt;/a&gt; with a CSS3 selector:</source>
          <target state="translated">选择元素的一种方法是将&lt;a href=&quot;http://closure-library.googlecode.com/svn/docs/closure_third_party_closure_goog_dojo_dom_query.js.html&quot;&gt;goog.dom.query&lt;/a&gt;与CSS3选择器结合使用：</target>
        </trans-unit>
        <trans-unit id="d1444b408953dffefa3796fb5a3ae7ad577a264b" translate="yes" xml:space="preserve">
          <source>Remove &lt;code&gt;class-b&lt;/code&gt;</source>
          <target state="translated">删除B &lt;code&gt;class-b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a84d3a8d544500165b73389e73283e9b948dd48f" translate="yes" xml:space="preserve">
          <source>Simple cross-browser solution</source>
          <target state="translated">简单的跨浏览器解决方案</target>
        </trans-unit>
        <trans-unit id="08ce43c5a07356aa85adc99bb2b20090aa6f7085" translate="yes" xml:space="preserve">
          <source>So, for example, if I want &lt;code&gt;onclick&lt;/code&gt; to add some class to the button I can use this:</source>
          <target state="translated">因此，例如，如果我想 &lt;code&gt;onclick&lt;/code&gt; 向按钮添加一些类，则可以使用以下方法：</target>
        </trans-unit>
        <trans-unit id="82e37b239faacaa8959a8d69b660b614bf4c2fa7" translate="yes" xml:space="preserve">
          <source>Style Example</source>
          <target state="translated">风格示例</target>
        </trans-unit>
        <trans-unit id="91c9cbe8cc1c3f27afb20c2b59f50563feab5826" translate="yes" xml:space="preserve">
          <source>THE OPTIONS.</source>
          <target state="translated">选择权:</target>
        </trans-unit>
        <trans-unit id="97cba4858411c435e526dd651157aac20178222c" translate="yes" xml:space="preserve">
          <source>Thanks</source>
          <target state="translated">Thanks</target>
        </trans-unit>
        <trans-unit id="809e675605bb64b7a742959f5e5f320bbad3ef59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;g&lt;/code&gt; flag tells the replace to repeat as required, in case the class name has been added multiple times.</source>
          <target state="translated">如果已多次添加类名，则 &lt;code&gt;g&lt;/code&gt; 标志指示替换根据需要重复。</target>
        </trans-unit>
        <trans-unit id="f109cbca15dfc6fad07e4a2495c3da8663565914" translate="yes" xml:space="preserve">
          <source>The above code is all in standard JavaScript, however it is common practise to use either a framework or a library to simplify common tasks, as well as benefit from fixed bugs and edge cases that you might not think of when writing your code.</source>
          <target state="translated">上面的代码都是标准的JavaScript,然而,使用框架或库来简化常见的任务,以及在写代码时可能不会想到的固定bug和边缘案例中受益。</target>
        </trans-unit>
        <trans-unit id="5198c4d1f7e534bfad2402d9b1aaaffe7950a33a" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;style&lt;/code&gt; and &lt;code&gt;classList&lt;/code&gt; is that with &lt;code&gt;style&lt;/code&gt; you're adding to the style properties of the element, but &lt;code&gt;classList&lt;/code&gt; is kinda controlling the class(es) of the element (&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;toggle&lt;/code&gt;, &lt;code&gt;contain&lt;/code&gt;), I will show you how to use the &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;remove&lt;/code&gt; method since those are the popular ones.</source>
          <target state="translated">&lt;code&gt;style&lt;/code&gt; 和 &lt;code&gt;classList&lt;/code&gt; 之间的区别在于，使用 &lt;code&gt;style&lt;/code&gt; 可以将其添加到元素的样式属性中，但是 &lt;code&gt;classList&lt;/code&gt; 可以控制元素的类（ &lt;code&gt;add&lt;/code&gt; ， &lt;code&gt;remove&lt;/code&gt; ， &lt;code&gt;toggle&lt;/code&gt; ， contains ），我将向您展示使用 &lt;code&gt;add&lt;/code&gt; 和 &lt;code&gt;remove&lt;/code&gt; 方法，因为那些是流行的方法。</target>
        </trans-unit>
        <trans-unit id="802cc9ac94ea0229ccc58b8933817563982dcd5b" translate="yes" xml:space="preserve">
          <source>The examples above have been reproduced below using &lt;a href=&quot;http://jquery.com&quot;&gt;jQuery&lt;/a&gt;, probably the most commonly used JavaScript library (though there are others worth investigating too).</source>
          <target state="translated">上面的示例已在下面使用&lt;a href=&quot;http://jquery.com&quot;&gt;jQuery&lt;/a&gt;进行了复制，而jQuery可能是最常用的JavaScript库（尽管还有其他值得研究的地方）。</target>
        </trans-unit>
        <trans-unit id="8c2e62157cbf5e76464f1a58b2c8fbf328eb8eae" translate="yes" xml:space="preserve">
          <source>The first step to achieving this is by creating a function, and calling the function in the onclick attribute, for example:</source>
          <target state="translated">实现这一目标的第一步是创建一个函数,并在onclick属性中调用该函数,例如。</target>
        </trans-unit>
        <trans-unit id="aadca0f8a80a4a50095ad4e6b56ce361c1429e29" translate="yes" xml:space="preserve">
          <source>The line</source>
          <target state="translated">这条线</target>
        </trans-unit>
        <trans-unit id="f27f110864aa7b0ab899e89c904ecec388deab91" translate="yes" xml:space="preserve">
          <source>The parent class is the class which hosts the class you want to change</source>
          <target state="translated">父类是承载你要更改的类的类。</target>
        </trans-unit>
        <trans-unit id="d66979c7c47838b441389e2b4f1298a23668dc2c" translate="yes" xml:space="preserve">
          <source>The same regex used above for removing a class can also be used as a check as to whether a particular class exists:</source>
          <target state="translated">上文中用于删除类的相同的regex也可以作为检查某类是否存在的检查。</target>
        </trans-unit>
        <trans-unit id="6d367e8fd27562239e6dd8d9724b0944a0278ec9" translate="yes" xml:space="preserve">
          <source>The second step is to move the onclick event out of the HTML and into JavaScript, for example using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/element.addEventListener&quot;&gt;addEventListener&lt;/a&gt;</source>
          <target state="translated">第二步是将onclick事件移出HTML并移入JavaScript，例如使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/element.addEventListener&quot;&gt;addEventListener&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59ab9f7231f32dd0779c50c42535f57fe064563c" translate="yes" xml:space="preserve">
          <source>The standard JavaScript way to select an element is using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/document.getElementById&quot;&gt;&lt;code&gt;document.getElementById(&quot;Id&quot;)&lt;/code&gt;&lt;/a&gt;, which is what the following examples use - you can of course obtain elements in other ways, and in the right situation may simply use &lt;code&gt;this&lt;/code&gt; instead - however, going into detail on this is beyond the scope of the answer.</source>
          <target state="translated">选择元素的标准JavaScript方法是使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/document.getElementById&quot;&gt; &lt;code&gt;document.getElementById(&quot;Id&quot;)&lt;/code&gt; &lt;/a&gt; ，以下示例使用此方法-您当然可以通过其他方式获得元素，并且在正确的情况下，可以简单地使用 &lt;code&gt;this&lt;/code&gt; -但是，对此进行详细讨论超出了答案的范围。</target>
        </trans-unit>
        <trans-unit id="489687111187a344e9a7a781aa504a5ea41a719a" translate="yes" xml:space="preserve">
          <source>There is a property &lt;strong&gt;className&lt;/strong&gt; in javascript to change the name of the class of an HTML element. The existing class value will be replaced with the new one, that you have assigned in className.</source>
          <target state="translated">javascript中有一个&lt;strong&gt;className&lt;/strong&gt;属性，用于更改HTML元素的类的名称。 现有的类值将替换为您在className中分配的新值。</target>
        </trans-unit>
        <trans-unit id="5b09087a6589bae3223dadbbf1e77d1894938cfe" translate="yes" xml:space="preserve">
          <source>This code adds a function to be called when an element of the id &lt;strong&gt;some-element&lt;/strong&gt; is clicked. The function appends &lt;strong&gt;clicked&lt;/strong&gt; to the element's class attribute if it's not already part of it, and removes it if it's there.</source>
          <target state="translated">此代码添加了单击id &lt;strong&gt;some-element&lt;/strong&gt;的元素时要调用的函数。 如果该元素尚不包含在元素的class属性中，则该函数会将其追加到该元素的class属性中，如果存在，则将其删除。</target>
        </trans-unit>
        <trans-unit id="0e707381938a6a661f919aabba934bfb4b3ccf4e" translate="yes" xml:space="preserve">
          <source>This is easiest with a library like jQuery:</source>
          <target state="translated">这在jQuery这样的库中是最简单的。</target>
        </trans-unit>
        <trans-unit id="dc573b44a05ace5f21d2372a8a801e2bd6199be2" translate="yes" xml:space="preserve">
          <source>This is possible with (&lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document&quot;&gt;document&lt;/a&gt;&lt;/em&gt; or &lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Event/target&quot;&gt;event&lt;/a&gt;&lt;/em&gt;):</source>
          <target state="translated">这可能与（ &lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document&quot;&gt;document&lt;/a&gt;&lt;/em&gt;或&lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Event/target&quot;&gt;event&lt;/a&gt;&lt;/em&gt; ）：</target>
        </trans-unit>
        <trans-unit id="38c168024e08a8054d26329d0c0f976b30921624" translate="yes" xml:space="preserve">
          <source>This is working for me:</source>
          <target state="translated">这对我来说是有效的。</target>
        </trans-unit>
        <trans-unit id="eb8f2abc21aa254f1460919841cddd6f01f02b3e" translate="yes" xml:space="preserve">
          <source>This regex is case insensitive so that bugs in class names may show up before the code is used on a browser that doesn't care about case in class names.</source>
          <target state="translated">这个regex是不区分大小写的,这样在不关心类名大小写的浏览器上使用之前,类名中的bug就可能会出现。</target>
        </trans-unit>
        <trans-unit id="62aada228665b7ac74330150a0132927affdc977" translate="yes" xml:space="preserve">
          <source>This should work in IE5.5 and up according to &lt;a href=&quot;http://quirksmode.org/dom/w3c_html.html&quot;&gt;PPK&lt;/a&gt;.</source>
          <target state="translated">根据&lt;a href=&quot;http://quirksmode.org/dom/w3c_html.html&quot;&gt;PPK，&lt;/a&gt;这应该在IE5.5及更高版本中有效。</target>
        </trans-unit>
        <trans-unit id="9b749cd770922aa3a623093381390cf0d5db53d9" translate="yes" xml:space="preserve">
          <source>To add a class to an element, without removing/affecting existing values, append a space and the new classname, like so:</source>
          <target state="translated">要给元素添加一个类,在不影响现有值的情况下,添加一个类,请在后面加上一个空格和新的类名,就像这样。</target>
        </trans-unit>
        <trans-unit id="8e7efe5740ff9fd6d48b4f00cbe50c9051686c0e" translate="yes" xml:space="preserve">
          <source>To add an additional class to an element:</source>
          <target state="translated">要给一个元素添加一个额外的类。</target>
        </trans-unit>
        <trans-unit id="73abf1481eb676e9293b69e7f019f109c8657117" translate="yes" xml:space="preserve">
          <source>To change all classes for an element:</source>
          <target state="translated">要改变一个元素的所有类。</target>
        </trans-unit>
        <trans-unit id="50e0b49cd6b8b58a346e7c33c3e9bd8f1cec7660" translate="yes" xml:space="preserve">
          <source>To check if a class is already applied to an element:</source>
          <target state="translated">要检查一个类是否已经应用于一个元素。</target>
        </trans-unit>
        <trans-unit id="cb9baef3d60b0f3f7acad12fd534cc28250d6a4f" translate="yes" xml:space="preserve">
          <source>To remove a class from an element:</source>
          <target state="translated">要从一个元素中删除一个类。</target>
        </trans-unit>
        <trans-unit id="69d384e61e5fbd7d856b08dad5b11917d9ba21c8" translate="yes" xml:space="preserve">
          <source>To remove a single class to an element, without affecting other potential classes, a simple regex replace is required:</source>
          <target state="translated">要在不影响其他可能的类的情况下,删除一个元素的单个类,需要一个简单的regex替换。</target>
        </trans-unit>
        <trans-unit id="dc137be8b1c7b909d2562a3c2ea33cfe92ef60e5" translate="yes" xml:space="preserve">
          <source>To replace all existing classes with one or more new classes, set the className attribute:</source>
          <target state="translated">要用一个或多个新类替换所有现有的类,请设置className属性。</target>
        </trans-unit>
        <trans-unit id="501a20a1a736caecdc3e2f0e7eb0ef5f0c089e5f" translate="yes" xml:space="preserve">
          <source>Unfortunately, these do not work in Internet Explorer prior to v10, though there is a &lt;a href=&quot;http://en.wikipedia.org/wiki/Shim_(computing)&quot;&gt;shim&lt;/a&gt; to add support for it to IE8 and IE9, available from &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/element.classList&quot;&gt;this page&lt;/a&gt;. It is, though, getting more and more &lt;a href=&quot;http://caniuse.com/#feat=classlist&quot;&gt;supported&lt;/a&gt;.</source>
          <target state="translated">不幸的是，尽管有一些&lt;a href=&quot;http://en.wikipedia.org/wiki/Shim_(computing)&quot;&gt;垫片&lt;/a&gt;可以将其支持添加到IE8和IE9中，但这些功能在v10之前的Internet Explorer中无法使用，可从此&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/element.classList&quot;&gt;页面获得&lt;/a&gt; 。 但是，它越来越受到&lt;a href=&quot;http://caniuse.com/#feat=classlist&quot;&gt;支持&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="3763ecb76eb6808c48b43d7256f8f7eff55850af" translate="yes" xml:space="preserve">
          <source>Using pure JavaScript code:</source>
          <target state="translated">使用纯JavaScript代码。</target>
        </trans-unit>
        <trans-unit id="61a759c3d499ce06a238dcee087f0fa8236894c7" translate="yes" xml:space="preserve">
          <source>We can observe in the log that we are getting back an object with not only the classes of the element, but also many auxiliary methods and properties. This object inherits from the interface &lt;strong&gt;DOMTokenList&lt;/strong&gt;, an interface which is used in the DOM to represent a set of space separated tokens (like classes).</source>
          <target state="translated">我们可以在日志中观察到，我们返回的对象不仅具有元素的类，还具有许多辅助方法和属性。 该对象从接口&lt;strong&gt;DOMTokenList&lt;/strong&gt;继承，该接口在DOM中用于表示一组用空格分隔的标记（如类）。</target>
        </trans-unit>
        <trans-unit id="57d18cd19c6cab5150b2ceeea6112eaadef727bf" translate="yes" xml:space="preserve">
          <source>Whilst it is possible to write JavaScript directly inside the HTML event attributes (such as &lt;code&gt;onclick=&quot;this.className+=' MyClass'&quot;&lt;/code&gt;) this is not recommended behaviour. Especially on larger applications, more maintainable code is achieved by separating HTML markup from JavaScript interaction logic.</source>
          <target state="translated">虽然可以直接在HTML事件属性（例如 &lt;code&gt;onclick=&quot;this.className+=' MyClass'&quot;&lt;/code&gt; ）内部编写JavaScript，但不建议这样做。 特别是在较大的应用程序上，通过将HTML标记与JavaScript交互逻辑分开，可以实现更具可维护性的代码。</target>
        </trans-unit>
        <trans-unit id="b806fdcc0f9506960490ba9941432148ed8978c6" translate="yes" xml:space="preserve">
          <source>Whilst some people consider it overkill to add a ~50&amp;nbsp;KB framework for simply changing a class, if you are doing any substantial amount of JavaScript work, or anything that might have unusual cross-browser behaviour, it is well worth considering.</source>
          <target state="translated">尽管有些人认为添加一个约50 KB的框架来简单地更改类是过大的，但是，如果您正在做大量的JavaScript工作，或者可能有不寻常的跨浏览器行为，则值得考虑。</target>
        </trans-unit>
        <trans-unit id="2bef323620981b3d4d07ac66ccfeb416b3353236" translate="yes" xml:space="preserve">
          <source>Working JavaScript code:</source>
          <target state="translated">工作中的JavaScript代码。</target>
        </trans-unit>
        <trans-unit id="89a43e4cb3f23d141e19de5b3fcd541c78fdd5c6" translate="yes" xml:space="preserve">
          <source>Wow, surprised there are so many overkill answers here...</source>
          <target state="translated">哇,惊讶于这里有这么多过激的答案......</target>
        </trans-unit>
        <trans-unit id="c451d1ad6a4d5cbe7bbfaf91349e059ac69e4679" translate="yes" xml:space="preserve">
          <source>Yes there is many ways to do this. In ES6 syntax we can achieve easily. 
Use this code toggle add and remove class.</source>
          <target state="translated">是的,有很多方法可以做到这一点。在ES6的语法中,我们可以轻松实现。使用这段代码切换添加和删除类。</target>
        </trans-unit>
        <trans-unit id="5c078f38414ba1760eef21af5bb1b97b869cff55" translate="yes" xml:space="preserve">
          <source>Yes you do need to add a reference to the jQuery library in your page to use this code, but at least you can feel confident the most functions in the library would work on pretty much all the modern browsers, and it will save you time implementing your own code to do the same.</source>
          <target state="translated">是的,你确实需要在你的页面中添加一个jQuery库的引用来使用这段代码,但至少你可以确信库中的大部分函数可以在几乎所有的现代浏览器上工作,而且可以节省你实现自己的代码的时间。</target>
        </trans-unit>
        <trans-unit id="779a1eca62ea7675679ac97dc2b3cf99a2dc248d" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element.classList&quot;&gt;element.classList&lt;/a&gt; in modern browsers.</source>
          <target state="translated">您也可以在现代浏览器中使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element.classList&quot;&gt;element.classList&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="2073ffabd4a76c98c79aca958b1b4250b6b901b1" translate="yes" xml:space="preserve">
          <source>You can download a working code from &lt;a href=&quot;http://ownanswers.com/question/add-remove-and-replace-class-in-javascript/&quot;&gt;this link&lt;/a&gt;.</source>
          <target state="translated">您可以从此&lt;a href=&quot;http://ownanswers.com/question/add-remove-and-replace-class-in-javascript/&quot;&gt;链接&lt;/a&gt;下载工作代码。</target>
        </trans-unit>
        <trans-unit id="db77731b31769883c1ff93aac72570acd0e3be88" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;node.className&lt;/code&gt; like so:</source>
          <target state="translated">您可以像这样使用 &lt;code&gt;node.className&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="58645f5bd88f1d1ea50e196cb3b6f7ff58127e45" translate="yes" xml:space="preserve">
          <source>You could also just do:</source>
          <target state="translated">你也可以只做。</target>
        </trans-unit>
        <trans-unit id="39ffd4a52c91c462b35cb89b3f90e5f22b397db2" translate="yes" xml:space="preserve">
          <source>You may try to use node &lt;code&gt;attributes&lt;/code&gt; property to keep compatibility with old browsers even IE6:</source>
          <target state="translated">您可以尝试使用节点 &lt;code&gt;attributes&lt;/code&gt; 属性来保持与旧浏览器甚至IE6的兼容性：</target>
        </trans-unit>
        <trans-unit id="f29a69aa96b6fc7e9c8021743be2d5fc272e597d" translate="yes" xml:space="preserve">
          <source>You'll want to do it globally in case the class list has the class name more than once. And, you'll probably want to strip spaces from the ends of the class list and convert multiple spaces to one space to keep from getting runs of spaces. None of these things should be a problem if the only code dinking with the class names uses the regex below and removes a name before adding it. But. Well, who knows who might be dinking with the class name list.</source>
          <target state="translated">如果类列表中的类名不止一次,你需要在全局中进行。而且,你可能会想把类列表两端的空格去掉,并把多个空格转换为一个空格,以避免出现空格的情况。如果在添加类名的时候只使用了下面的regex,并且在添加类名之前删除了一个名字,那么这些都不是问题。但是。好吧,谁知道谁可能会在类名列表中掺杂着类名。</target>
        </trans-unit>
        <trans-unit id="5bff639cd0e1ed09143f3251f2d3269e6c679ba0" translate="yes" xml:space="preserve">
          <source>add class:</source>
          <target state="translated">增加类。</target>
        </trans-unit>
        <trans-unit id="b2d0a9425da9c1a7688f388c159ae2f51402a35b" translate="yes" xml:space="preserve">
          <source>also see my answer &lt;a href=&quot;https://stackoverflow.com/a/42941303/460084&quot;&gt;here&lt;/a&gt; for creating a new class dynamically</source>
          <target state="translated">也可以&lt;a href=&quot;https://stackoverflow.com/a/42941303/460084&quot;&gt;在这里&lt;/a&gt;查看我的答案以动态创建新类</target>
        </trans-unit>
        <trans-unit id="2cec0d24d4756c3eb835e2279403508b7473c9d1" translate="yes" xml:space="preserve">
          <source>and you can simply call use them as below, imagine your element has id of 'id' and class of 'class', make sure you pass them as a string, you can use the util as below:</source>
          <target state="translated">和你可以简单地调用使用它们,想象一下你的元素有'id'的id和'class'的class,确保你把它们传给一个字符串,你可以使用下面的util。</target>
        </trans-unit>
        <trans-unit id="beda66c7dd170a20cbcc826daa70a673348bf8e6" translate="yes" xml:space="preserve">
          <source>classList Example</source>
          <target state="translated">类列表示例</target>
        </trans-unit>
        <trans-unit id="4344283e6773e5616b960a3d1c7abce23528db8d" translate="yes" xml:space="preserve">
          <source>just say &lt;code&gt;myElement.classList=&quot;new-class&quot;&lt;/code&gt; unless you need to maintain other existing classes in which case you can use the &lt;code&gt;classList.add, .remove&lt;/code&gt; methods.</source>
          <target state="translated">只需说出 &lt;code&gt;myElement.classList=&quot;new-class&quot;&lt;/code&gt; 除非您需要维护其他现有类，在这种情况下，您可以使用 &lt;code&gt;classList.add, .remove&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="be1191975874be54dcd827ea2526360978f7007e" translate="yes" xml:space="preserve">
          <source>or, without needing an id:</source>
          <target state="translated">或者,不需要身份证。</target>
        </trans-unit>
        <trans-unit id="449f07da0c3f27ae36a0fa1a28e3ba5583d3afd9" translate="yes" xml:space="preserve">
          <source>remove class:</source>
          <target state="translated">移除类。</target>
        </trans-unit>
        <trans-unit id="be1bfaca7c9611304df5a957a9c220beefab134c" translate="yes" xml:space="preserve">
          <source>see &lt;a href=&quot;https://jsfiddle.net/dLuhp9se/&quot;&gt;jsfiddle&lt;/a&gt;</source>
          <target state="translated">见&lt;a href=&quot;https://jsfiddle.net/dLuhp9se/&quot;&gt;jsfiddle&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="75fc35662c682299e21a69af3f3a1a20f1a84f82" translate="yes" xml:space="preserve">
          <source>should be:</source>
          <target state="translated">应该是:</target>
        </trans-unit>
        <trans-unit id="3240aa0fe3ca15051680641a59e8d7b61c286b23" translate="yes" xml:space="preserve">
          <source>try</source>
          <target state="translated">try</target>
        </trans-unit>
        <trans-unit id="f34524b2be7c870d723513286d415d594020cd80" translate="yes" xml:space="preserve">
          <source>using the accepted answer above here is a simple cross-browser function to add and remove class</source>
          <target state="translated">使用上面公认的答案,这里有一个简单的跨浏览器的函数来添加和删除类。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
