<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/195951">
    <body>
      <group id="195951">
        <trans-unit id="a768be6d54ef6b70b8eb7eb41a34fe951c12c7d5" translate="yes" xml:space="preserve">
          <source>(Note that &lt;code&gt;$&lt;/code&gt; here is the jQuery object.)</source>
          <target state="translated">여기서 &lt;code&gt;$&lt;/code&gt; 는 jQuery 객체입니다.</target>
        </trans-unit>
        <trans-unit id="d123c3198499240df126cca6365e40a09e0871c9" translate="yes" xml:space="preserve">
          <source>(Note that the window.onload part is required so that the contents of that function are executed &lt;em&gt;after&lt;/em&gt; the HTML has finished loading - without this, the MyElement might not exist when the JavaScript code is called, so that line would fail.)</source>
          <target state="translated">(window.onload 부분은 HTML로드가 완료된 &lt;em&gt;후&lt;/em&gt; 해당 함수의 내용이 실행되도록하는 데 필요합니다. 그렇지 않으면 JavaScript 코드가 호출 될 때 MyElement가 존재하지 않아 행이 실패합니다.)</target>
        </trans-unit>
        <trans-unit id="36928cac6793ea8d612194e79d98f04c583c786a" translate="yes" xml:space="preserve">
          <source>(You can use a space-delimited list to apply multiple classes.)</source>
          <target state="translated">공백으로 구분 된 목록을 사용하여 여러 클래스를 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3cc2818b3bab70c11222a1b4f8abfca8398fcbb" translate="yes" xml:space="preserve">
          <source>100 is the timeout delay during which the class is changed.</source>
          <target state="translated">100은 클래스가 변경되는 시간 종료 지연입니다.</target>
        </trans-unit>
        <trans-unit id="6d71e42eee17ebac46990c6ec99f72c1dd004e2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style&quot;&gt;&lt;code&gt;style&lt;/code&gt;&lt;/a&gt; vs. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/classList&quot;&gt;&lt;code&gt;classList&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style&quot;&gt; &lt;code&gt;style&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/classList&quot;&gt; &lt;code&gt;classList&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ac22d11bf59761da3e60890d35e15d0d9759e4ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;classList&lt;/code&gt; DOM API:</source>
          <target state="translated">&lt;code&gt;classList&lt;/code&gt; DOM API :</target>
        </trans-unit>
        <trans-unit id="35d5c193432c9ac6d34504aee935b45f1cc01387" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(Very roughly, a library is a set of tools designed for a specific task, whilst a framework generally contains multiple libraries and performs a complete set of duties.)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(거의 대략, 라이브러리는 특정 작업을 위해 설계된 도구 세트이며, 프레임 워크는 일반적으로 여러 라이브러리를 포함하고 완전한 의무 세트를 수행합니다.)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8f5a8c84807804c1921f9174da4957c65cc014f6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;OR&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;OR&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5a24ffdcf9b11f1ea933600cf7404e7c7ae64feb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;That's it.&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;그게 다야.&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="65dcf051b0f8d4d6b70a92dd10d98dbbb05e7cdd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Note:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="846706ae5b3085b8e60517b9648cefa810a047c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TL;DR :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;TL; DR :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60fd6f81fd03c694bc80a47ab2a3e466af102521" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;&lt;em&gt;(It is not required to have this code in script tags, this is simply for brevity of example, and including the JavaScript in a distinct file may be more appropriate.)&lt;/em&gt;&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;em&gt;(이 코드를 스크립트 태그에 포함 할 필요는 없습니다. 이는 간단한 예일 뿐이므로 별도의 파일에 JavaScript를 포함하는 것이 더 적절할 수 있습니다.)&lt;/em&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="810348209a0b4e13051f087361ee127f63bc4329" translate="yes" xml:space="preserve">
          <source>A couple of minor notes and tweaks on the previous regexes:</source>
          <target state="translated">이전 정규식에 대한 몇 가지 사소한 참고 사항과 조정 사항 :</target>
        </trans-unit>
        <trans-unit id="d6b1af0ad5192ae9298436ae976275ddc41ddadf" translate="yes" xml:space="preserve">
          <source>A very convenient manner of adding and removing classes is the &lt;code&gt;classList&lt;/code&gt; DOM API. This API allows us to select all classes of a specific DOM element in order to modify the list using javascript. For example:</source>
          <target state="translated">클래스를 추가하고 제거하는 매우 편리한 방법은 &lt;code&gt;classList&lt;/code&gt; DOM API입니다. 이 API를 사용하면 javascript를 사용하여 목록을 수정하기 위해 특정 DOM 요소의 모든 클래스를 선택할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cb7131c5592f111393c51e123879700b86ec932a" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;class-c&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;class-c&lt;/code&gt; 추가</target>
        </trans-unit>
        <trans-unit id="a03308e049943bb29a3be1a514a07bad3ce3ccbc" translate="yes" xml:space="preserve">
          <source>An explanation of this regex is as follows:</source>
          <target state="translated">이 정규식에 대한 설명은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a58a4783015366888789805b6147216ea09fb6f6" translate="yes" xml:space="preserve">
          <source>And then just use like this (on click will add or remove class):</source>
          <target state="translated">그런 다음 다음과 같이 사용하십시오 (클릭하면 클래스를 추가하거나 제거합니다).</target>
        </trans-unit>
        <trans-unit id="e2c4d1291801df4b64d46bea22d9f2ef3fc8971b" translate="yes" xml:space="preserve">
          <source>And to toggle a class (remove if exists else add it):</source>
          <target state="translated">그리고 클래스를 토글하려면 (존재하는 경우 제거하고 추가하십시오) :</target>
        </trans-unit>
        <trans-unit id="5483156a29c5a8e4c97d3f23db1a476796c14e0d" translate="yes" xml:space="preserve">
          <source>And, if you really want to know the why and educate yourself then I suggest reading &lt;a href=&quot;https://stackoverflow.com/a/196038/1804013&quot;&gt;Peter Boughton's answer&lt;/a&gt;, it's perfect.</source>
          <target state="translated">그리고 왜 그 이유를 알고 자신을 교육하고 싶다면 &lt;a href=&quot;https://stackoverflow.com/a/196038/1804013&quot;&gt;Peter Boughton의 답변을&lt;/a&gt; 읽는 것이 좋습니다. 완벽합니다.</target>
        </trans-unit>
        <trans-unit id="cd4baaffd7536020926a70beb3e2efb64cb86fd9" translate="yes" xml:space="preserve">
          <source>As well you could extend HTMLElement object, in order to add methods to add, remove, toggle and check classes (&lt;a href=&quot;https://gist.github.com/Maksims/5356227&quot;&gt;gist&lt;/a&gt;):</source>
          <target state="translated">또한 클래스를 추가, 제거, 토글 및 확인하는 메소드 ( &lt;a href=&quot;https://gist.github.com/Maksims/5356227&quot;&gt;gist&lt;/a&gt; )를 추가하기 위해 HTMLElement 객체를 확장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="25ca1d082ae349e38f065bdbc50243133e174924" translate="yes" xml:space="preserve">
          <source>Assigning a function to a click event with jQuery:</source>
          <target state="translated">jQuery를 사용하여 클릭 이벤트에 함수 할당 :</target>
        </trans-unit>
        <trans-unit id="81cd875fdefe7d87a7e655d0e8dbf87cbc24858d" translate="yes" xml:space="preserve">
          <source>Assigning these actions to onclick events:</source>
          <target state="translated">onclick 이벤트에 다음 조치를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="f47ff05370efe7ed97f1acf5d6c11d0c6d917e1c" translate="yes" xml:space="preserve">
          <source>By now for sure it would just be better to use jQuery.</source>
          <target state="translated">지금까지는 jQuery를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="04ebcbcd410dca3c8893aa799b291cf05659c42e" translate="yes" xml:space="preserve">
          <source>Change an element's CSS class with JavaScript in &lt;a href=&quot;http://en.wikipedia.org/wiki/ASP.NET&quot;&gt;ASP.NET&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/ASP.NET&quot;&gt;ASP.NET&lt;/a&gt; 에서 JavaScript로 요소의 CSS 클래스를 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="28de79fc7eab9290622fc6284f484baaec85cc51" translate="yes" xml:space="preserve">
          <source>Change an element's class in vanilla JavaScript with IE6 support</source>
          <target state="translated">IE6 지원으로 바닐라 자바 ​​스크립트에서 요소 클래스 변경</target>
        </trans-unit>
        <trans-unit id="c2c8e05d349c3d878a6aac29e41f9479d5692cbb" translate="yes" xml:space="preserve">
          <source>Changing Classes with jQuery:</source>
          <target state="translated">jQuery로 클래스 변경 :</target>
        </trans-unit>
        <trans-unit id="50791437da96975496871fe477000ce3054031f7" translate="yes" xml:space="preserve">
          <source>Class to add is the new class that you want to add.</source>
          <target state="translated">추가 할 클래스는 추가하려는 새 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="95d4a75327fb38b62efc8349327eca2efa53bc92" translate="yes" xml:space="preserve">
          <source>Class1 is a listener for an event.</source>
          <target state="translated">Class1은 이벤트의 리스너입니다.</target>
        </trans-unit>
        <trans-unit id="cd425ecec02ec2a70c426364c0a9d91a8bec4844" translate="yes" xml:space="preserve">
          <source>Classtoremove is the old class you have.</source>
          <target state="translated">Classtoremove는 이전 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="10c4fefdc3c690986b64bf3a9b02f4ea909e714f" translate="yes" xml:space="preserve">
          <source>Credit - &lt;a href=&quot;https://jaischool.com/javascript-lang/how-to-change-class-name-of-an-html-element-in-javascript.html&quot;&gt;https://jaischool.com/javascript-lang/how-to-change-class-name-of-an-html-element-in-javascript.html&lt;/a&gt;</source>
          <target state="translated">크레딧-https: &lt;a href=&quot;https://jaischool.com/javascript-lang/how-to-change-class-name-of-an-html-element-in-javascript.html&quot;&gt;//jaischool.com/javascript-lang/how-to-change-class-name-of-an-html-element-in-javascript.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">스 니펫 확장</target>
        </trans-unit>
        <trans-unit id="ee8a847853d723642646551f6895a7e50b2f059f" translate="yes" xml:space="preserve">
          <source>Good Luck.</source>
          <target state="translated">행운을 빕니다.</target>
        </trans-unit>
        <trans-unit id="0c41f1b8245e9cf6c1f960925bde5e81ea9ce040" translate="yes" xml:space="preserve">
          <source>Here is &lt;a href=&quot;http://jsfiddle.net/5QMgR/&quot;&gt;demo&lt;/a&gt;.</source>
          <target state="translated">여기 &lt;a href=&quot;http://jsfiddle.net/5QMgR/&quot;&gt;데모가&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5c09b52afff0b0af82cb064ab1ed16b1be3cd36" translate="yes" xml:space="preserve">
          <source>Here is a little style vs. classList examples to get you to see what are the options you have available and how to use &lt;code&gt;classList&lt;/code&gt; to do what you want.</source>
          <target state="translated">다음은 사용 가능한 옵션이 무엇인지, &lt;code&gt;classList&lt;/code&gt; 를 사용하여 원하는 것을 수행하는 방법을 보여주는 작은 스타일 vs. classList 예제입니다.</target>
        </trans-unit>
        <trans-unit id="5ef00fc58916319da7dbc65f7d5cc5a0b9fbfbaa" translate="yes" xml:space="preserve">
          <source>Here is simple jQuery code to do that.</source>
          <target state="translated">여기에 간단한 jQuery 코드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="df180310b6bd56954465ab73a5bf66ab501fa669" translate="yes" xml:space="preserve">
          <source>Here's a toggleClass to toggle/add/remove a class on an element:</source>
          <target state="translated">다음은 요소에서 클래스를 토글 / 추가 / 제거하는 toggleClass입니다.</target>
        </trans-unit>
        <trans-unit id="d3a5a55861d63e399b0920c3fec51d2bc02e0f36" translate="yes" xml:space="preserve">
          <source>Here's my version, fully working:</source>
          <target state="translated">완전히 작동하는 내 버전은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3d080817ae211b70ffb8548327b1435f255163a6" translate="yes" xml:space="preserve">
          <source>Here,</source>
          <target state="translated">Here,</target>
        </trans-unit>
        <trans-unit id="c4c7170745ea8afb708618b6359b9d5cd438ac34" translate="yes" xml:space="preserve">
          <source>How can I change a class of an HTML element in response to an &lt;code&gt;onclick&lt;/code&gt; event using JavaScript?</source>
          <target state="translated">JavaScript를 사용하여 &lt;code&gt;onclick&lt;/code&gt; 이벤트에 대한 응답으로 HTML 요소 클래스를 변경하려면 어떻게해야합니까?</target>
        </trans-unit>
        <trans-unit id="9bd005ab00fefa0cb963f924ab7344480c4649d9" translate="yes" xml:space="preserve">
          <source>How can I change an element's class with JavaScript</source>
          <target state="translated">JavaScript로 요소 클래스를 변경하는 방법</target>
        </trans-unit>
        <trans-unit id="5144dc7f15c6b38fa4a868f7c62a32aa8860fb50" translate="yes" xml:space="preserve">
          <source>I use the following vanilla JavaScript functions in my code. They use regular expressions and &lt;code&gt;indexOf&lt;/code&gt; but do not require quoting special characters in regular expressions.</source>
          <target state="translated">내 코드에 다음 바닐라 JavaScript 함수를 사용합니다. 정규식과 &lt;code&gt;indexOf&lt;/code&gt; 를 사용 하지만 정규식에 특수 문자를 인용 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="444d425d90f140f1bc68fea87162358f6b6b2aee" translate="yes" xml:space="preserve">
          <source>I would use jQuery and write something like this:</source>
          <target state="translated">jQuery를 사용하고 다음과 같이 작성합니다.</target>
        </trans-unit>
        <trans-unit id="0f8d83066a49e3f5f08eddd11c5dbb438196d99a" translate="yes" xml:space="preserve">
          <source>I'd like to do something like below as methods to my javascript framework to add few functionalities which handle adding classes, deleting classes, etc similar to jQuery, this is fully supported in IE9+, also my code is written in ES6, so you need to make sure your browser support it or you using something like babel, otherwise need to use ES5 syntax in your code, also in this way, we finding element via ID, which means the element needs to have an ID to be selected:</source>
          <target state="translated">jQuery와 유사한 클래스 추가, 클래스 삭제 등을 처리하는 기능을 거의 추가하지 않기 위해 자바 스크립트 프레임 워크에 대한 메소드로 아래와 같은 작업을 수행하고 싶습니다. 이는 IE9 +에서 완벽하게 지원되며 코드는 ES6로 작성되므로 필요합니다. 브라우저가 그것을 지원하거나 babel과 같은 것을 사용하도록하려면 코드에서 ES5 구문을 사용해야합니다.이 방법으로도 ID를 통해 요소를 찾습니다. 요소를 선택하려면 요소를 선택해야합니다.</target>
        </trans-unit>
        <trans-unit id="6f8c167593b08d2edd8b2935fa90038fcc0b4d44" translate="yes" xml:space="preserve">
          <source>If you want to add &lt;code&gt;margin-top&lt;/code&gt; property into an element, you would do in such:</source>
          <target state="translated">&lt;code&gt;margin-top&lt;/code&gt; 속성을 요소에 추가하려면 다음과 같이하십시오.</target>
        </trans-unit>
        <trans-unit id="55228e1e70409a67210cc788673caf2ac79f08bd" translate="yes" xml:space="preserve">
          <source>In addition, jQuery provides a shortcut for adding a class if it doesn't apply, or removing a class that does:</source>
          <target state="translated">또한 jQuery는 클래스가 적용되지 않는 경우 클래스를 추가하거나 제거하는 클래스를 제거하는 바로 가기를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="61047c026ab7dab583128874055d31d4cb393da8" translate="yes" xml:space="preserve">
          <source>In one of my old projects that did not use jQuery, I built the following functions for adding, removing and checking if element has class:</source>
          <target state="translated">jQuery를 사용하지 않은 이전 프로젝트 중 하나에서 요소에 클래스가 있는지 추가, 제거 및 확인하기 위해 다음 함수를 작성했습니다.</target>
        </trans-unit>
        <trans-unit id="61623482f521e375c25248bf66ba277cbaa4a4e2" translate="yes" xml:space="preserve">
          <source>JavaScript Frameworks and Libraries</source>
          <target state="translated">자바 스크립트 프레임 워크 및 라이브러리</target>
        </trans-unit>
        <trans-unit id="86a7411a1f3468909af35695eccc8479028d6f7c" translate="yes" xml:space="preserve">
          <source>Just thought I'd throw this in:</source>
          <target state="translated">방금 내가 이것을 던질 것이라고 생각했습니다.</target>
        </trans-unit>
        <trans-unit id="87b355bfe37c01d1c8a3096edac72baff56af530" translate="yes" xml:space="preserve">
          <source>Just to add on information from another popular framework, Google Closures, see their &lt;a href=&quot;http://closure-library.googlecode.com/svn/docs/closure_goog_dom_classes.js.html&quot;&gt;dom/classes&lt;/a&gt; class:</source>
          <target state="translated">다른 인기있는 프레임 워크 인 Google Closures의 정보를 추가하려면 &lt;a href=&quot;http://closure-library.googlecode.com/svn/docs/closure_goog_dom_classes.js.html&quot;&gt;dom / classes&lt;/a&gt; 클래스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6a235429c43f03c2a3e0d684e6357aa9eb0d584e" translate="yes" xml:space="preserve">
          <source>Let say we have a &lt;code&gt;&amp;lt;div class=&quot;class-a class-b&quot;&amp;gt;&lt;/code&gt;, in this case, we have 2 classes added to our div element already, &lt;code&gt;class-a&lt;/code&gt; and &lt;code&gt;class-b&lt;/code&gt;, and we want to control what classes &lt;strong&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/strong&gt; and what class to &lt;strong&gt;&lt;code&gt;add&lt;/code&gt;&lt;/strong&gt;. This is where &lt;code&gt;classList&lt;/code&gt; becomes handy.</source>
          <target state="translated">&lt;code&gt;&amp;lt;div class=&quot;class-a class-b&quot;&amp;gt;&lt;/code&gt; 가 있다고 가정 해 봅시다.이 경우에는 div 요소에 이미 2 개의 클래스 ( &lt;code&gt;class-a&lt;/code&gt; 및 &lt;code&gt;class-b&lt;/code&gt; )가 추가되었으며 어떤 클래스를 &lt;strong&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/strong&gt; 할지 제어하려고 &lt;strong&gt;합니다.&lt;/strong&gt; 어떤 클래스를 &lt;strong&gt; &lt;code&gt;add&lt;/code&gt; &lt;/strong&gt; 해야 &lt;strong&gt;합니까&lt;/strong&gt; ? 이것이 &lt;code&gt;classList&lt;/code&gt; 가 편리한 곳입니다.</target>
        </trans-unit>
        <trans-unit id="9aadc6ee7db9b4612898502d2c388d6ab5216cbc" translate="yes" xml:space="preserve">
          <source>Lots of answers, lots of good answers.</source>
          <target state="translated">많은 답변, 많은 좋은 답변.</target>
        </trans-unit>
        <trans-unit id="d9a7e31e31b8f3bd9a139a31f77774a0e65ce73c" translate="yes" xml:space="preserve">
          <source>Modern HTML5 Techniques for changing classes</source>
          <target state="translated">클래스 변경을위한 최신 HTML5 기술</target>
        </trans-unit>
        <trans-unit id="53b6498141fe9e946f9d83338c1323888885539c" translate="yes" xml:space="preserve">
          <source>Modern browsers have added &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/element.classList&quot;&gt;&lt;strong&gt;classList&lt;/strong&gt;&lt;/a&gt; which provides methods to make it easier to manipulate classes without needing a library:</source>
          <target state="translated">최신 브라우저에는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/element.classList&quot;&gt;&lt;strong&gt;classList&lt;/strong&gt;&lt;/a&gt; 가 추가되어 라이브러리가 없어도 클래스를보다 쉽게 ​​조작 할 수있는 메소드가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="2f2684301d059bae8e20d1ae1d416f855beb6ef4" translate="yes" xml:space="preserve">
          <source>OK, I think in this case you should use jQuery or write your own Methods in pure javascript, my preference is adding my own methods rather than injecting all jQuery to my application if I don't need that for other reasons.</source>
          <target state="translated">좋아,이 경우 jQuery를 사용하거나 순수 자바 스크립트로 자신의 Methods를 작성해야한다고 생각합니다. 다른 이유로 필요하지 않으면 모든 jQuery를 내 응용 프로그램에 주입하는 대신 내 자신의 메소드를 추가하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="1ef9dca9eda5714499e41e3ca4a0e48e33dbbe28" translate="yes" xml:space="preserve">
          <source>One option for selecting the element is using &lt;a href=&quot;http://closure-library.googlecode.com/svn/docs/closure_third_party_closure_goog_dojo_dom_query.js.html&quot;&gt;goog.dom.query&lt;/a&gt; with a CSS3 selector:</source>
          <target state="translated">요소를 선택하는 한 가지 옵션은 CSS3 선택기와 함께 &lt;a href=&quot;http://closure-library.googlecode.com/svn/docs/closure_third_party_closure_goog_dojo_dom_query.js.html&quot;&gt;goog.dom.query&lt;/a&gt; 를 사용하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="d1444b408953dffefa3796fb5a3ae7ad577a264b" translate="yes" xml:space="preserve">
          <source>Remove &lt;code&gt;class-b&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;class-b&lt;/code&gt; 제거</target>
        </trans-unit>
        <trans-unit id="a84d3a8d544500165b73389e73283e9b948dd48f" translate="yes" xml:space="preserve">
          <source>Simple cross-browser solution</source>
          <target state="translated">간단한 크로스 브라우저 솔루션</target>
        </trans-unit>
        <trans-unit id="08ce43c5a07356aa85adc99bb2b20090aa6f7085" translate="yes" xml:space="preserve">
          <source>So, for example, if I want &lt;code&gt;onclick&lt;/code&gt; to add some class to the button I can use this:</source>
          <target state="translated">예를 들어, &lt;code&gt;onclick&lt;/code&gt; 을 클릭 하여 클래스를 버튼에 추가하려면 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="82e37b239faacaa8959a8d69b660b614bf4c2fa7" translate="yes" xml:space="preserve">
          <source>Style Example</source>
          <target state="translated">스타일 예</target>
        </trans-unit>
        <trans-unit id="91c9cbe8cc1c3f27afb20c2b59f50563feab5826" translate="yes" xml:space="preserve">
          <source>THE OPTIONS.</source>
          <target state="translated">옵션.</target>
        </trans-unit>
        <trans-unit id="97cba4858411c435e526dd651157aac20178222c" translate="yes" xml:space="preserve">
          <source>Thanks</source>
          <target state="translated">Thanks</target>
        </trans-unit>
        <trans-unit id="809e675605bb64b7a742959f5e5f320bbad3ef59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;g&lt;/code&gt; flag tells the replace to repeat as required, in case the class name has been added multiple times.</source>
          <target state="translated">&lt;code&gt;g&lt;/code&gt; 플래그는 클래스 이름이 여러 번 추가 된 경우 필요에 따라 바꾸기가 반복하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="f109cbca15dfc6fad07e4a2495c3da8663565914" translate="yes" xml:space="preserve">
          <source>The above code is all in standard JavaScript, however it is common practise to use either a framework or a library to simplify common tasks, as well as benefit from fixed bugs and edge cases that you might not think of when writing your code.</source>
          <target state="translated">위의 코드는 모두 표준 JavaScript로되어 있지만 프레임 워크 또는 라이브러리를 사용하여 일반적인 작업을 단순화하고 코드를 작성할 때 생각할 수없는 고정 버그 및 엣지 사례를 활용하는 것이 일반적입니다.</target>
        </trans-unit>
        <trans-unit id="5198c4d1f7e534bfad2402d9b1aaaffe7950a33a" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;style&lt;/code&gt; and &lt;code&gt;classList&lt;/code&gt; is that with &lt;code&gt;style&lt;/code&gt; you're adding to the style properties of the element, but &lt;code&gt;classList&lt;/code&gt; is kinda controlling the class(es) of the element (&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;toggle&lt;/code&gt;, &lt;code&gt;contain&lt;/code&gt;), I will show you how to use the &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;remove&lt;/code&gt; method since those are the popular ones.</source>
          <target state="translated">&lt;code&gt;style&lt;/code&gt; 과 &lt;code&gt;classList&lt;/code&gt; 의 차이점은 스타일 을 사용하여 요소의 스타일 속성에 추가하고 있지만 &lt;code&gt;classList&lt;/code&gt; 는 요소의 클래스 ( &lt;code&gt;add&lt;/code&gt; , &lt;code&gt;remove&lt;/code&gt; , &lt;code&gt;toggle&lt;/code&gt; , contains )를 제어하는 ​​것입니다. &lt;code&gt;add&lt;/code&gt; 및 &lt;code&gt;remove&lt;/code&gt; 메소드를 사용하는 것이 일반적입니다.</target>
        </trans-unit>
        <trans-unit id="802cc9ac94ea0229ccc58b8933817563982dcd5b" translate="yes" xml:space="preserve">
          <source>The examples above have been reproduced below using &lt;a href=&quot;http://jquery.com&quot;&gt;jQuery&lt;/a&gt;, probably the most commonly used JavaScript library (though there are others worth investigating too).</source>
          <target state="translated">위의 예제는 아마도 가장 일반적으로 사용되는 JavaScript 라이브러리 인 &lt;a href=&quot;http://jquery.com&quot;&gt;jQuery를&lt;/a&gt; 사용하여 아래에서 재현되었습니다 (조사 할 가치가있는 다른 것들도 있음).</target>
        </trans-unit>
        <trans-unit id="8c2e62157cbf5e76464f1a58b2c8fbf328eb8eae" translate="yes" xml:space="preserve">
          <source>The first step to achieving this is by creating a function, and calling the function in the onclick attribute, for example:</source>
          <target state="translated">이를 달성하기위한 첫 번째 단계는 함수를 작성하고 onclick 속성에서 함수를 호출하는 것입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="aadca0f8a80a4a50095ad4e6b56ce361c1429e29" translate="yes" xml:space="preserve">
          <source>The line</source>
          <target state="translated">라인</target>
        </trans-unit>
        <trans-unit id="f27f110864aa7b0ab899e89c904ecec388deab91" translate="yes" xml:space="preserve">
          <source>The parent class is the class which hosts the class you want to change</source>
          <target state="translated">부모 클래스는 변경하려는 클래스를 호스팅하는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="d66979c7c47838b441389e2b4f1298a23668dc2c" translate="yes" xml:space="preserve">
          <source>The same regex used above for removing a class can also be used as a check as to whether a particular class exists:</source>
          <target state="translated">클래스를 제거하기 위해 위에서 사용한 것과 같은 정규 표현식을 사용하여 특정 클래스가 존재하는지 여부를 확인할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d367e8fd27562239e6dd8d9724b0944a0278ec9" translate="yes" xml:space="preserve">
          <source>The second step is to move the onclick event out of the HTML and into JavaScript, for example using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/element.addEventListener&quot;&gt;addEventListener&lt;/a&gt;</source>
          <target state="translated">두 번째 단계는 onclick 이벤트를 HTML 및 JavaScript로 이동하는 것입니다 (예 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/element.addEventListener&quot;&gt;addEventListener&lt;/a&gt; 사용).</target>
        </trans-unit>
        <trans-unit id="59ab9f7231f32dd0779c50c42535f57fe064563c" translate="yes" xml:space="preserve">
          <source>The standard JavaScript way to select an element is using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/document.getElementById&quot;&gt;&lt;code&gt;document.getElementById(&quot;Id&quot;)&lt;/code&gt;&lt;/a&gt;, which is what the following examples use - you can of course obtain elements in other ways, and in the right situation may simply use &lt;code&gt;this&lt;/code&gt; instead - however, going into detail on this is beyond the scope of the answer.</source>
          <target state="translated">요소를 선택하는 표준 JavaScript 방법은 다음 예제에서 사용하는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/document.getElementById&quot;&gt; &lt;code&gt;document.getElementById(&quot;Id&quot;)&lt;/code&gt; &lt;/a&gt; 를 사용하는 것입니다. 물론 다른 방법으로 요소를 얻을 수 있지만 올바른 상황에서는 &lt;code&gt;this&lt;/code&gt; 대신 사용할 수 있습니다. 이것에 대해 자세히 설명하는 것은 대답의 범위를 벗어납니다.</target>
        </trans-unit>
        <trans-unit id="489687111187a344e9a7a781aa504a5ea41a719a" translate="yes" xml:space="preserve">
          <source>There is a property &lt;strong&gt;className&lt;/strong&gt; in javascript to change the name of the class of an HTML element. The existing class value will be replaced with the new one, that you have assigned in className.</source>
          <target state="translated">HTML 요소의 클래스 이름을 변경하기 위해 javascript에 &lt;strong&gt;className&lt;/strong&gt; 속성이 있습니다. 기존 클래스 값은 className에 지정한 새 값으로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="5b09087a6589bae3223dadbbf1e77d1894938cfe" translate="yes" xml:space="preserve">
          <source>This code adds a function to be called when an element of the id &lt;strong&gt;some-element&lt;/strong&gt; is clicked. The function appends &lt;strong&gt;clicked&lt;/strong&gt; to the element's class attribute if it's not already part of it, and removes it if it's there.</source>
          <target state="translated">이 코드는 id &lt;strong&gt;some-element의 요소&lt;/strong&gt; 를 클릭 할 때 호출 할 함수를 추가합니다. 이 함수는 요소의 일부가 아닌 경우 요소의 클래스 속성에 &lt;strong&gt;clicked&lt;/strong&gt; 를 추가하고 해당 요소가 있으면 제거합니다.</target>
        </trans-unit>
        <trans-unit id="0e707381938a6a661f919aabba934bfb4b3ccf4e" translate="yes" xml:space="preserve">
          <source>This is easiest with a library like jQuery:</source>
          <target state="translated">이것은 jQuery와 같은 라이브러리에서 가장 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="dc573b44a05ace5f21d2372a8a801e2bd6199be2" translate="yes" xml:space="preserve">
          <source>This is possible with (&lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document&quot;&gt;document&lt;/a&gt;&lt;/em&gt; or &lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Event/target&quot;&gt;event&lt;/a&gt;&lt;/em&gt;):</source>
          <target state="translated">( &lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document&quot;&gt;document&lt;/a&gt;&lt;/em&gt; 또는 &lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Event/target&quot;&gt;event&lt;/a&gt;&lt;/em&gt; )를 사용하면 가능합니다.</target>
        </trans-unit>
        <trans-unit id="38c168024e08a8054d26329d0c0f976b30921624" translate="yes" xml:space="preserve">
          <source>This is working for me:</source>
          <target state="translated">이것은 나를 위해 일하고 있습니다 :</target>
        </trans-unit>
        <trans-unit id="eb8f2abc21aa254f1460919841cddd6f01f02b3e" translate="yes" xml:space="preserve">
          <source>This regex is case insensitive so that bugs in class names may show up before the code is used on a browser that doesn't care about case in class names.</source>
          <target state="translated">이 정규식은 대소 문자를 구분하지 않으므로 클래스 이름의 대소 문자를 신경 쓰지 않는 브라우저에서 코드를 사용하기 전에 클래스 이름의 버그가 나타날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="62aada228665b7ac74330150a0132927affdc977" translate="yes" xml:space="preserve">
          <source>This should work in IE5.5 and up according to &lt;a href=&quot;http://quirksmode.org/dom/w3c_html.html&quot;&gt;PPK&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://quirksmode.org/dom/w3c_html.html&quot;&gt;PPK&lt;/a&gt; 에 따르면 IE5.5 이상에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="9b749cd770922aa3a623093381390cf0d5db53d9" translate="yes" xml:space="preserve">
          <source>To add a class to an element, without removing/affecting existing values, append a space and the new classname, like so:</source>
          <target state="translated">기존 값을 제거하거나 영향을주지 않고 요소에 클래스를 추가하려면 다음과 같이 공백과 새 클래스 이름을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="8e7efe5740ff9fd6d48b4f00cbe50c9051686c0e" translate="yes" xml:space="preserve">
          <source>To add an additional class to an element:</source>
          <target state="translated">요소에 클래스를 추가하려면</target>
        </trans-unit>
        <trans-unit id="73abf1481eb676e9293b69e7f019f109c8657117" translate="yes" xml:space="preserve">
          <source>To change all classes for an element:</source>
          <target state="translated">요소의 모든 클래스를 변경하려면</target>
        </trans-unit>
        <trans-unit id="50e0b49cd6b8b58a346e7c33c3e9bd8f1cec7660" translate="yes" xml:space="preserve">
          <source>To check if a class is already applied to an element:</source>
          <target state="translated">클래스가 요소에 이미 적용되어 있는지 확인하려면</target>
        </trans-unit>
        <trans-unit id="cb9baef3d60b0f3f7acad12fd534cc28250d6a4f" translate="yes" xml:space="preserve">
          <source>To remove a class from an element:</source>
          <target state="translated">요소에서 클래스를 제거하려면</target>
        </trans-unit>
        <trans-unit id="69d384e61e5fbd7d856b08dad5b11917d9ba21c8" translate="yes" xml:space="preserve">
          <source>To remove a single class to an element, without affecting other potential classes, a simple regex replace is required:</source>
          <target state="translated">다른 잠재적 클래스에 영향을 미치지 않고 요소에 대한 단일 클래스를 제거하려면 간단한 정규식 바꾸기가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="dc137be8b1c7b909d2562a3c2ea33cfe92ef60e5" translate="yes" xml:space="preserve">
          <source>To replace all existing classes with one or more new classes, set the className attribute:</source>
          <target state="translated">기존의 모든 클래스를 하나 이상의 새 클래스로 바꾸려면 className 속성을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="501a20a1a736caecdc3e2f0e7eb0ef5f0c089e5f" translate="yes" xml:space="preserve">
          <source>Unfortunately, these do not work in Internet Explorer prior to v10, though there is a &lt;a href=&quot;http://en.wikipedia.org/wiki/Shim_(computing)&quot;&gt;shim&lt;/a&gt; to add support for it to IE8 and IE9, available from &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/element.classList&quot;&gt;this page&lt;/a&gt;. It is, though, getting more and more &lt;a href=&quot;http://caniuse.com/#feat=classlist&quot;&gt;supported&lt;/a&gt;.</source>
          <target state="translated">불행히도 v10 이전의 Internet Explorer에서는 작동하지 않지만 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/element.classList&quot;&gt;이 페이지&lt;/a&gt; 에서 제공되는 IE8 및 IE9에 대한 지원을 추가 할 수 있습니다. 그러나 점점 더 많은 &lt;a href=&quot;http://caniuse.com/#feat=classlist&quot;&gt;지원을&lt;/a&gt; 받고 있습니다.</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="3763ecb76eb6808c48b43d7256f8f7eff55850af" translate="yes" xml:space="preserve">
          <source>Using pure JavaScript code:</source>
          <target state="translated">순수한 JavaScript 코드 사용하기 :</target>
        </trans-unit>
        <trans-unit id="61a759c3d499ce06a238dcee087f0fa8236894c7" translate="yes" xml:space="preserve">
          <source>We can observe in the log that we are getting back an object with not only the classes of the element, but also many auxiliary methods and properties. This object inherits from the interface &lt;strong&gt;DOMTokenList&lt;/strong&gt;, an interface which is used in the DOM to represent a set of space separated tokens (like classes).</source>
          <target state="translated">우리는 로그에서 요소의 클래스뿐만 아니라 많은 보조 메소드와 속성을 가진 객체를 되찾고 있음을 알 수 있습니다. 이 객체는 &lt;strong&gt;DOMTokenList&lt;/strong&gt; 인터페이스를 상속합니다.이 인터페이스는 DOM에서 공백으로 구분 된 토큰 세트 (예 : 클래스)를 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="57d18cd19c6cab5150b2ceeea6112eaadef727bf" translate="yes" xml:space="preserve">
          <source>Whilst it is possible to write JavaScript directly inside the HTML event attributes (such as &lt;code&gt;onclick=&quot;this.className+=' MyClass'&quot;&lt;/code&gt;) this is not recommended behaviour. Especially on larger applications, more maintainable code is achieved by separating HTML markup from JavaScript interaction logic.</source>
          <target state="translated">HTML 이벤트 속성 (예 : &lt;code&gt;onclick=&quot;this.className+=' MyClass'&quot;&lt;/code&gt; ) 내에 JavaScript를 직접 작성할 수는 있지만 이는 권장되지 않습니다. 특히 더 큰 응용 프로그램에서는 HTML 마크 업을 JavaScript 상호 작용 논리와 분리하여 유지 관리하기 쉬운 코드를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b806fdcc0f9506960490ba9941432148ed8978c6" translate="yes" xml:space="preserve">
          <source>Whilst some people consider it overkill to add a ~50&amp;nbsp;KB framework for simply changing a class, if you are doing any substantial amount of JavaScript work, or anything that might have unusual cross-browser behaviour, it is well worth considering.</source>
          <target state="translated">일부 사람들은 단순히 클래스를 변경하기 위해 ~ 50KB 프레임 워크를 추가하는 것이 과도하다고 생각하지만, 상당한 양의 JavaScript 작업을 수행하거나 브라우저 간 비정상적인 동작이 발생할 수있는 작업을 수행하는 경우 고려할 가치가 있습니다.</target>
        </trans-unit>
        <trans-unit id="2bef323620981b3d4d07ac66ccfeb416b3353236" translate="yes" xml:space="preserve">
          <source>Working JavaScript code:</source>
          <target state="translated">작동하는 JavaScript 코드 :</target>
        </trans-unit>
        <trans-unit id="89a43e4cb3f23d141e19de5b3fcd541c78fdd5c6" translate="yes" xml:space="preserve">
          <source>Wow, surprised there are so many overkill answers here...</source>
          <target state="translated">와, 여기에 너무 많은 과잉 답변이 있다는 것에 놀랐습니다.</target>
        </trans-unit>
        <trans-unit id="c451d1ad6a4d5cbe7bbfaf91349e059ac69e4679" translate="yes" xml:space="preserve">
          <source>Yes there is many ways to do this. In ES6 syntax we can achieve easily. 
Use this code toggle add and remove class.</source>
          <target state="translated">예, 여러 가지 방법이 있습니다. ES6 구문에서는 쉽게 달성 할 수 있습니다. 이 코드 토글을 사용하여 클래스를 추가 및 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="5c078f38414ba1760eef21af5bb1b97b869cff55" translate="yes" xml:space="preserve">
          <source>Yes you do need to add a reference to the jQuery library in your page to use this code, but at least you can feel confident the most functions in the library would work on pretty much all the modern browsers, and it will save you time implementing your own code to do the same.</source>
          <target state="translated">예,이 코드를 사용하려면 페이지에서 jQuery 라이브러리에 대한 참조를 추가해야하지만 최소한 라이브러리의 대부분의 기능이 거의 모든 최신 브라우저에서 작동한다는 확신을 가질 수 있으며 구현 시간을 절약 할 수 있습니다 동일한 코드를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="779a1eca62ea7675679ac97dc2b3cf99a2dc248d" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element.classList&quot;&gt;element.classList&lt;/a&gt; in modern browsers.</source>
          <target state="translated">최신 브라우저에서 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element.classList&quot;&gt;element.classList&lt;/a&gt; 를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="2073ffabd4a76c98c79aca958b1b4250b6b901b1" translate="yes" xml:space="preserve">
          <source>You can download a working code from &lt;a href=&quot;http://ownanswers.com/question/add-remove-and-replace-class-in-javascript/&quot;&gt;this link&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://ownanswers.com/question/add-remove-and-replace-class-in-javascript/&quot;&gt;이 링크&lt;/a&gt; 에서 작동 코드를 다운로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db77731b31769883c1ff93aac72570acd0e3be88" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;node.className&lt;/code&gt; like so:</source>
          <target state="translated">&lt;code&gt;node.className&lt;/code&gt; 과 같이 node.className 을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="58645f5bd88f1d1ea50e196cb3b6f7ff58127e45" translate="yes" xml:space="preserve">
          <source>You could also just do:</source>
          <target state="translated">당신은 또한 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="39ffd4a52c91c462b35cb89b3f90e5f22b397db2" translate="yes" xml:space="preserve">
          <source>You may try to use node &lt;code&gt;attributes&lt;/code&gt; property to keep compatibility with old browsers even IE6:</source>
          <target state="translated">IE6조차도 이전 브라우저와의 호환성을 유지하기 위해 노드 &lt;code&gt;attributes&lt;/code&gt; 속성을 사용하려고 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f29a69aa96b6fc7e9c8021743be2d5fc272e597d" translate="yes" xml:space="preserve">
          <source>You'll want to do it globally in case the class list has the class name more than once. And, you'll probably want to strip spaces from the ends of the class list and convert multiple spaces to one space to keep from getting runs of spaces. None of these things should be a problem if the only code dinking with the class names uses the regex below and removes a name before adding it. But. Well, who knows who might be dinking with the class name list.</source>
          <target state="translated">클래스 목록의 클래스 이름이 두 번 이상인 경우 전역 적으로 수행하려고합니다. 또한 클래스 목록 끝에서 공백을 제거하고 여러 공백을 하나의 공백으로 변환하여 공백이 발생하지 않도록 할 수 있습니다. 클래스 이름으로 코드를 지정하는 유일한 코드가 아래의 정규 표현식을 사용하고 이름을 추가하기 전에 제거하면 문제가되지 않습니다. 그러나. 누가 클래스 이름 목록을 가지고 식사하는지 알고 있습니다.</target>
        </trans-unit>
        <trans-unit id="5bff639cd0e1ed09143f3251f2d3269e6c679ba0" translate="yes" xml:space="preserve">
          <source>add class:</source>
          <target state="translated">수업 추가 :</target>
        </trans-unit>
        <trans-unit id="b2d0a9425da9c1a7688f388c159ae2f51402a35b" translate="yes" xml:space="preserve">
          <source>also see my answer &lt;a href=&quot;https://stackoverflow.com/a/42941303/460084&quot;&gt;here&lt;/a&gt; for creating a new class dynamically</source>
          <target state="translated">또한 새로운 클래스를 동적으로 만드는 &lt;a href=&quot;https://stackoverflow.com/a/42941303/460084&quot;&gt;여기에&lt;/a&gt; 대한 대답을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2cec0d24d4756c3eb835e2279403508b7473c9d1" translate="yes" xml:space="preserve">
          <source>and you can simply call use them as below, imagine your element has id of 'id' and class of 'class', make sure you pass them as a string, you can use the util as below:</source>
          <target state="translated">그리고 아래처럼 use를 호출하고 요소에 'id'와 'class'의 클래스가 있다고 가정하고 문자열로 전달해야합니다. 아래와 같이 util을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="beda66c7dd170a20cbcc826daa70a673348bf8e6" translate="yes" xml:space="preserve">
          <source>classList Example</source>
          <target state="translated">classList 예제</target>
        </trans-unit>
        <trans-unit id="4344283e6773e5616b960a3d1c7abce23528db8d" translate="yes" xml:space="preserve">
          <source>just say &lt;code&gt;myElement.classList=&quot;new-class&quot;&lt;/code&gt; unless you need to maintain other existing classes in which case you can use the &lt;code&gt;classList.add, .remove&lt;/code&gt; methods.</source>
          <target state="translated">다른 기존 클래스를 유지해야하는 경우가 아니라면 &lt;code&gt;myElement.classList=&quot;new-class&quot;&lt;/code&gt; 라고 말하십시오.이 경우 &lt;code&gt;classList.add, .remove&lt;/code&gt; 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be1191975874be54dcd827ea2526360978f7007e" translate="yes" xml:space="preserve">
          <source>or, without needing an id:</source>
          <target state="translated">또는 ID가 필요하지 않은 경우 :</target>
        </trans-unit>
        <trans-unit id="449f07da0c3f27ae36a0fa1a28e3ba5583d3afd9" translate="yes" xml:space="preserve">
          <source>remove class:</source>
          <target state="translated">수업 제거 :</target>
        </trans-unit>
        <trans-unit id="be1bfaca7c9611304df5a957a9c220beefab134c" translate="yes" xml:space="preserve">
          <source>see &lt;a href=&quot;https://jsfiddle.net/dLuhp9se/&quot;&gt;jsfiddle&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://jsfiddle.net/dLuhp9se/&quot;&gt;jsfiddle&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="75fc35662c682299e21a69af3f3a1a20f1a84f82" translate="yes" xml:space="preserve">
          <source>should be:</source>
          <target state="translated">해야한다:</target>
        </trans-unit>
        <trans-unit id="3240aa0fe3ca15051680641a59e8d7b61c286b23" translate="yes" xml:space="preserve">
          <source>try</source>
          <target state="translated">try</target>
        </trans-unit>
        <trans-unit id="f34524b2be7c870d723513286d415d594020cd80" translate="yes" xml:space="preserve">
          <source>using the accepted answer above here is a simple cross-browser function to add and remove class</source>
          <target state="translated">위의 허용 된 답변을 사용하면 클래스를 추가하고 제거하는 간단한 크로스 브라우저 기능이 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
