<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/4968406">
    <body>
      <group id="4968406">
        <trans-unit id="68c822705550a0fe3eba2f4b6cfc0ee6243f9cab" translate="yes" xml:space="preserve">
          <source>(Sourced from &lt;a href=&quot;http://www.dev-archive.net/articles/js-dot-notation/&quot;&gt;here&lt;/a&gt;.)</source>
          <target state="translated">( &lt;a href=&quot;http://www.dev-archive.net/articles/js-dot-notation/&quot;&gt;여기&lt;/a&gt; 에서 출처)</target>
        </trans-unit>
        <trans-unit id="9ce5191381a8198893fdecfac7d98f7531ebc4d2" translate="yes" xml:space="preserve">
          <source>1) When the property names are dynamically determined (when the exact names are not known until runtime).</source>
          <target state="translated">1) 속성 이름이 동적으로 결정될 때 (정확한 이름이 런타임까지 알려지지 않은 경우)</target>
        </trans-unit>
        <trans-unit id="9a62f2473c548b2946734289be132a1b2c4af6db" translate="yes" xml:space="preserve">
          <source>2) When using a for..in loop to go through all the properties of an object.</source>
          <target state="translated">2) for..in 루프를 사용하여 객체의 모든 속성을 살펴볼 때.</target>
        </trans-unit>
        <trans-unit id="4298c03650ff5961fb699fb4f2f5411bf6bcfa57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;obj.x&lt;/code&gt; would not work in this case.</source>
          <target state="translated">이 경우 &lt;code&gt;obj.x&lt;/code&gt; 가 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="576a6319c26d2317f097f1506336f636c5537b0a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;In case of Arrays&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;배열의 경우&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7642826e1b724ce145f183b960f9bb0c97d22df6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Roundup:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Roundup:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c982f6b78d4bb7e6e57f366c80865102763bea5d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Secondly, square bracket notation is useful when dealing with
 property names which vary in a predictable way:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;둘째, 대괄호 표기법은 예측 가능한 방식으로 다른 속성 이름을 처리 할 때 유용합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b81f4e37c52163f07a459864ccf172d22bb1eacd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Square bracket notation allows the use of characters that can't be used with dot notation:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;대괄호 표기법을 사용하면 점 표기법과 함께 사용할 수없는 문자를 사용할 수 있습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60b74803c404c167295ffa0db73d3552a104679a" translate="yes" xml:space="preserve">
          <source>An example where the dot notation fails</source>
          <target state="translated">도트 표기법이 실패하는 예</target>
        </trans-unit>
        <trans-unit id="3f674b6ada34031bf6feea8efd249c8998c1829a" translate="yes" xml:space="preserve">
          <source>And this triggers the dreaded &quot;expected indentifier&quot; (at least on IE8 on windows xp, I havn't tried other environments). The simple fix for that is to switch to bracket notation:</source>
          <target state="translated">그리고 이것은 두려운 &quot;예상 식별자&quot;를 유발합니다 (적어도 Windows XP의 IE8에서는 다른 환경을 시도하지 않았습니다). 이를위한 간단한 수정은 대괄호 표기법으로 전환하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="5dc5d18f133a30daf0ccdd6189a324ec2391bd3c" translate="yes" xml:space="preserve">
          <source>Another example of characters that can't be used with dot notation is &lt;em&gt;property names that themselves contain a dot&lt;/em&gt;.</source>
          <target state="translated">점 표기법과 함께 사용할 수없는 문자의 또 다른 예는 &lt;em&gt;자체적으로 점이 포함 된 속성 이름입니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="8e073952115ceef863efbd2eace19e459436c161" translate="yes" xml:space="preserve">
          <source>Be careful while using these notations:
For eg. if we want to access a function present in the parent of a window.
In IE :</source>
          <target state="translated">다음 표기법을 사용할 때는주의하십시오. 예를 들어. 창의 부모에 존재하는 함수에 액세스하려면 IE에서 :</target>
        </trans-unit>
        <trans-unit id="d171d992a686a126b04cdc83c74acd6624e57fbe" translate="yes" xml:space="preserve">
          <source>Bracket notation can use variables, so it is useful in two instances where dot notation will not work:</source>
          <target state="translated">대괄호 표기법은 변수를 사용할 수 있으므로 점 표기법이 작동하지 않는 두 가지 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="2a920be382886a91227215e2cbe3929f1922ce88" translate="yes" xml:space="preserve">
          <source>Case where &lt;code&gt;[]&lt;/code&gt; notation is helpful :</source>
          <target state="translated">&lt;code&gt;[]&lt;/code&gt; 표기법이 도움이되는 경우 :</target>
        </trans-unit>
        <trans-unit id="52268d1dbc202579e36bf5059baa879b522e7994" translate="yes" xml:space="preserve">
          <source>Context: I've written a code generator which produces these expressions and I'm wondering which is preferable.</source>
          <target state="translated">컨텍스트 : 이러한 표현식을 생성하는 코드 생성기를 작성했으며 어느 것이 바람직한 지 궁금합니다.</target>
        </trans-unit>
        <trans-unit id="441362377355832c552abe72650e6087cdb95875" translate="yes" xml:space="preserve">
          <source>Dot notation does not work with some keywords (like &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;class&lt;/code&gt;) in internet explorer 8.</source>
          <target state="translated">Internet Explorer 8의 일부 키워드 (예 : &lt;code&gt;new&lt;/code&gt; 및 &lt;code&gt;class&lt;/code&gt; )에서는 점 표기법이 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="553fbdba630d44fe728a198543023944e7be36b2" translate="yes" xml:space="preserve">
          <source>Dot notation is always preferable. If you are using some &quot;smarter&quot; IDE or text editor, it will show undefined names from that object. 
Use brackets notation only when you have the name with like dashes or something similar invalid. And also if the name is stored in a variable.</source>
          <target state="translated">점 표기법이 항상 바람직합니다. &quot;스마트 한&quot;IDE 또는 텍스트 편집기를 사용하는 경우 해당 개체에서 정의되지 않은 이름이 표시됩니다. 이름이 대시 또는 이와 유사한 이름이 아닌 경우에만 대괄호 표기법을 사용하십시오. 또한 이름이 변수에 저장된 경우.</target>
        </trans-unit>
        <trans-unit id="1e697b0d1ef4b88b0d38f2d0852f24918bc7f934" translate="yes" xml:space="preserve">
          <source>Dot notation is faster to write and clearer to read.</source>
          <target state="translated">도트 표기법은 쓰기 속도가 빠르고 읽기 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="f895079bdd18c5762ee3e0ff0c543a0738d1a65b" translate="yes" xml:space="preserve">
          <source>For example a json response could contain a property called &lt;code&gt;bar.Baz&lt;/code&gt;.</source>
          <target state="translated">예를 들어 json 응답에는 &lt;code&gt;bar.Baz&lt;/code&gt; 라는 속성이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd9d6579a7429ed6c0277fe551439e624a237930" translate="yes" xml:space="preserve">
          <source>Generally speaking, they do the same job.</source>
          <target state="translated">일반적으로, 그들은 같은 일을합니다.</target>
        </trans-unit>
        <trans-unit id="717b2226b7373507849d3c1a378cd42efa31de45" translate="yes" xml:space="preserve">
          <source>I had this code:</source>
          <target state="translated">나는이 코드를 가지고 있었다 :</target>
        </trans-unit>
        <trans-unit id="7ad05d8e74b6d958d7ae67dd66bbbccdf4205e3a" translate="yes" xml:space="preserve">
          <source>If your object is dynamic and there could be some random values in keys like &lt;code&gt;number&lt;/code&gt; and &lt;code&gt;[]&lt;/code&gt;or any other special character, for example -</source>
          <target state="translated">객체가 동적이고 &lt;code&gt;number&lt;/code&gt; 및 &lt;code&gt;[]&lt;/code&gt; 또는 기타 특수 문자와 같은 키에 임의의 값이있을 수있는 경우 (예 :-</target>
        </trans-unit>
        <trans-unit id="da6adb2e9c618356084933ae4271293e912a777e" translate="yes" xml:space="preserve">
          <source>In code:</source>
          <target state="translated">코드에서 :</target>
        </trans-unit>
        <trans-unit id="c472cca6e6bf36e74839b54bba2499756d60d09f" translate="yes" xml:space="preserve">
          <source>JavaScript property access: dot notation vs. brackets</source>
          <target state="translated">자바 스크립트 속성 액세스 : 점 표기법 대 괄호</target>
        </trans-unit>
        <trans-unit id="29fe38adf472b0f4375786c3da37ab2d093f5a1f" translate="yes" xml:space="preserve">
          <source>Let me add some more use case of the square-bracket notation. If you want to access a property say &lt;code&gt;x-proxy&lt;/code&gt; in a object, then &lt;code&gt;-&lt;/code&gt; will be interpreted wrongly. Their are some other cases too like space, dot, etc., where dot operation will not help you. Also if u have the key in a variable then only way to access the value of the key in a object is by bracket notation. Hope you get some more context.</source>
          <target state="translated">대괄호 표기법의 사용 사례를 더 추가하겠습니다. 객체의 &lt;code&gt;x-proxy&lt;/code&gt; 와 같은 속성에 액세스하려면 &lt;code&gt;-&lt;/code&gt; 가 잘못 해석됩니다. 그것들은 공간, 도트 등과 같은 다른 어떤 경우들입니다. 도트 연산이 도움이되지 않습니다. 또한 u에 변수에 키가있는 경우 객체의 키 값에 액세스하는 유일한 방법은 대괄호 표기법입니다. 더 많은 컨텍스트를 얻으시기 바랍니다.</target>
        </trans-unit>
        <trans-unit id="6cfbe36c7cc4a548384f006f6913749eab42d335" translate="yes" xml:space="preserve">
          <source>Nevertheless, the bracket notation gives you the opportunity to do stuff that you can't do with dot notation, like</source>
          <target state="translated">그럼에도 불구하고 대괄호 표기법은 도트 표기법으로 할 수없는 일을 할 수있는 기회를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ba34fdeefe54feab2e2d0eb871271fe427028c31" translate="yes" xml:space="preserve">
          <source>Now if you try to access in like &lt;code&gt;a.1&lt;/code&gt; it will through an error, because it is expecting an string over there.</source>
          <target state="translated">이제 &lt;code&gt;a.1&lt;/code&gt; 과 같이 액세스하려고하면 거기에 문자열이 있기 때문에 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5cdd08676026a1b36ac9eeff2563f1c0eef895e9" translate="yes" xml:space="preserve">
          <source>Other than that, I suppose it's just a matter of taste. IMHO, the dot notation is shorter and it makes it more obvious that it's a property rather than an array element (although of course JavaScript does not have associative arrays anyway).</source>
          <target state="translated">그 외에는 맛의 문제라고 생각합니다. IMHO, 도트 표기법이 더 짧고 배열 요소가 아닌 속성임을 분명히합니다 (물론 JavaScript에는 연관 배열이 없지만).</target>
        </trans-unit>
        <trans-unit id="0716ff8bc348eed265bcaff7ddd6eb20c259b73e" translate="yes" xml:space="preserve">
          <source>Other than the obvious fact that the first form could use a variable and not just a string literal, is there any reason to use one over the other, and if so under which cases?</source>
          <target state="translated">첫 번째 형식은 문자열 리터럴이 아니라 변수를 사용할 수 있다는 명백한 사실 외에 다른 것을 사용하는 이유가 있습니까?</target>
        </trans-unit>
        <trans-unit id="1957c0bcf72e8ddda94e7d7e622e19813539630e" translate="yes" xml:space="preserve">
          <source>So if you know that the property you are interested in is called &amp;ldquo;length&amp;rdquo;, you say &lt;code&gt;value.length&lt;/code&gt;. If you want to extract the property named by the value held in the variable &lt;code&gt;i&lt;/code&gt;, you say &lt;code&gt;value[i]&lt;/code&gt;. And because property names can be any string, if you want to access a property named &lt;code&gt;&amp;ldquo;2&amp;rdquo;&lt;/code&gt; or &lt;code&gt;&amp;ldquo;John Doe&amp;rdquo;&lt;/code&gt;, you must use square brackets: &lt;code&gt;value[2] or value[&quot;John Doe&quot;]&lt;/code&gt;. This is the case even though you know the precise name of the property in advance, because neither &lt;code&gt;&amp;ldquo;2&amp;rdquo; nor &amp;ldquo;John Doe&amp;rdquo;&lt;/code&gt; is a valid variable name and so cannot be accessed through dot notation.</source>
          <target state="translated">따라서 관심있는 속성을 &quot;길이&quot;라고하면 &lt;code&gt;value.length&lt;/code&gt; 라고합니다. 변수 &lt;code&gt;i&lt;/code&gt; 에 포함 된 값으로 명명 된 속성을 추출하려면 &lt;code&gt;value[i]&lt;/code&gt; 라고 말합니다. 속성 이름은 임의의 문자열 일 수 있으므로 &lt;code&gt;&amp;ldquo;2&amp;rdquo;&lt;/code&gt; 또는 &lt;code&gt;&amp;ldquo;John Doe&amp;rdquo;&lt;/code&gt; 속성에 액세스하려면 &lt;code&gt;value[2] or value[&quot;John Doe&quot;]&lt;/code&gt; 괄호를 사용해야합니다. &lt;code&gt;&amp;ldquo;2&amp;rdquo; nor &amp;ldquo;John Doe&amp;rdquo;&lt;/code&gt; 가 유효한 변수 이름이 아니므로 점 표기법을 통해 액세스 할 수 없으므로 속성의 정확한 이름을 미리 알고있는 경우에도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="5e21d8c1b6386b5f1efafef90dd5637c815cf2dd" translate="yes" xml:space="preserve">
          <source>Square bracket notation allows access to properties containing
  special characters and selection of
  properties using variables</source>
          <target state="translated">대괄호 표기법을 사용하면 특수 문자가 포함 된 속성에 액세스하고 변수를 사용하여 속성을 선택할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="ad1afec469e0c0cc1572ad17a698b4a1ddc1ef74" translate="yes" xml:space="preserve">
          <source>The bracket notation allows you to access properties by name stored in a variable:</source>
          <target state="translated">대괄호 표기법을 사용하면 변수에 저장된 이름으로 속성에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="833eeeeb8cf9f9fb7e2cbc64b35b085d470c2ad3" translate="yes" xml:space="preserve">
          <source>The elements in an array are stored in properties. Because the names of these properties are numbers and we often need to get their name from a variable, we have to use the bracket syntax to access them. &lt;strong&gt;The length property of an array tells us how many elements it contains. This property name is a valid variable name, and we know its name in advance, so to find the length of an array, you typically write &lt;code&gt;array.length&lt;/code&gt; because that is easier to write than &lt;code&gt;array[&quot;length&quot;]&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="translated">배열의 요소는 속성에 저장됩니다. 이러한 속성의 이름은 숫자이므로 변수에서 이름을 가져와야하는 경우가 많으므로 대괄호 구문을 사용하여 액세스해야합니다. &lt;strong&gt;배열의 길이 속성은 얼마나 많은 요소가 포함되어 있는지 알려줍니다.&lt;/strong&gt; &lt;strong&gt;이 프로퍼티 이름은 유효한 변수 이름이며, 그 이름을 미리 알고 있으므로 배열의 길이를 찾으려면 일반적으로 &lt;code&gt;array.length&lt;/code&gt; 를 작성합니다. &lt;code&gt;array[&quot;length&quot;]&lt;/code&gt; 보다 쓰기가 더 쉽기 때문입니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="96e702e80019dc89f76e72ce8abeb11feb23b761" translate="yes" xml:space="preserve">
          <source>The property name has special character.</source>
          <target state="translated">속성 이름에는 특수 문자가 있습니다.</target>
        </trans-unit>
        <trans-unit id="d0429d01e094779d75926b775a3e82736d16c0cc" translate="yes" xml:space="preserve">
          <source>The property name is assigned to a variable and you want to access the 
property value by this variable.</source>
          <target state="translated">특성 이름이 변수에 지정되며이 변수로 특성 값에 액세스하려고합니다.</target>
        </trans-unit>
        <trans-unit id="ec939e09f11e2966b48c72dff871ba9d164e8fd1" translate="yes" xml:space="preserve">
          <source>The property name is number.</source>
          <target state="translated">속성 이름은 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="4d5d53e36b3cdbf6797d824518c41e58846af6c9" translate="yes" xml:space="preserve">
          <source>The property names shouldn't interfere with the syntax rules of javascript for you to be able to access them as &lt;code&gt;json.property_name&lt;/code&gt;</source>
          <target state="translated">속성 이름은 &lt;code&gt;json.property_name&lt;/code&gt; 으로 액세스 할 수 있도록 자바 스크립트의 구문 규칙을 방해해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="0174754bd065de20c90fe39ddb21f9021f02702c" translate="yes" xml:space="preserve">
          <source>The two most common ways to access properties in JavaScript are with a dot and with square brackets. Both &lt;code&gt;value.x and value[x]&lt;/code&gt; access a property on value&amp;mdash;but not necessarily the same property. &lt;strong&gt;The difference is in how x is interpreted. When using a dot, the part after the dot must be a valid variable name, and it directly names the property. When using square brackets, the expression between the brackets is evaluated to get the property name. Whereas value.x fetches the property of value named &amp;ldquo;x&amp;rdquo;, value[x] tries to evaluate the expression x and uses the result as the property name.&lt;/strong&gt;</source>
          <target state="translated">JavaScript에서 속성에 액세스하는 가장 일반적인 두 가지 방법은 점과 대괄호를 사용하는 것입니다. &lt;code&gt;value.x and value[x]&lt;/code&gt; 모두 value 의 속성에 액세스하지만 반드시 동일한 속성 일 필요는 없습니다. &lt;strong&gt;차이점은 x가 해석되는 방식에 있습니다.&lt;/strong&gt; &lt;strong&gt;점을 사용할 때 점 뒤의 부분은 유효한 변수 이름이어야하며 속성 이름을 직접 지정합니다.&lt;/strong&gt; &lt;strong&gt;대괄호를 사용할 때 대괄호 사이의 표현식은 특성 이름을 가져 오도록 평가됩니다.&lt;/strong&gt; &lt;strong&gt;value.x는&amp;ldquo;x&amp;rdquo;라는 이름의 속성을 가져 오는 반면, value [x]는 표현식 x를 평가하고 그 결과를 속성 이름으로 사용합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cc8e61c69da1eb568c4c2ae5ec53e80e9ef89168" translate="yes" xml:space="preserve">
          <source>This can be extended to any property containing special characters.</source>
          <target state="translated">특수 문자를 포함하는 모든 속성으로 확장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="188955539a5ea31bd9d0392cd55ac3af147a90df" translate="yes" xml:space="preserve">
          <source>We may either use:</source>
          <target state="translated">우리는 다음 중 하나를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d116589e64a7b5343fab4435bfef941d355c1a0f" translate="yes" xml:space="preserve">
          <source>You have to use square bracket notation when -</source>
          <target state="translated">다음과 같은 경우 대괄호 표기법을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="07e289f45e4d3b0c50c47d696dcc865687745d6b" translate="yes" xml:space="preserve">
          <source>You need to use brackets if the property names has special characters:</source>
          <target state="translated">속성 이름에 특수 문자가있는 경우 대괄호를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="a95791318de7e005ccd3c1777299c0ebcdebc783" translate="yes" xml:space="preserve">
          <source>including non-ASCII (UTF-8) characters, as in &lt;code&gt;myForm[&quot;ダ&quot;]&lt;/code&gt; (&lt;a href=&quot;https://stackoverflow.com/q/30929233/287948&quot;&gt;more examples&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;myForm[&quot;ダ&quot;]&lt;/code&gt; 에서와 같이 비 ASCII (UTF-8) 문자 포함 ( &lt;a href=&quot;https://stackoverflow.com/q/30929233/287948&quot;&gt;더 많은 예제&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e225a3570f34b8e8c1d42219eee0eff711b61a1d" translate="yes" xml:space="preserve">
          <source>is not equivalent to</source>
          <target state="translated">같지 않다</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="7491bbbbc6dee872715550f1d7ad8e4845a55563" translate="yes" xml:space="preserve">
          <source>source: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects&lt;/a&gt;</source>
          <target state="translated">출처 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1df81d62610a87a7f253064deec3ef3fa1de58d8" translate="yes" xml:space="preserve">
          <source>to access it</source>
          <target state="translated">그것에 접근</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
