<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/4968406">
    <body>
      <group id="4968406">
        <trans-unit id="68c822705550a0fe3eba2f4b6cfc0ee6243f9cab" translate="yes" xml:space="preserve">
          <source>(Sourced from &lt;a href=&quot;http://www.dev-archive.net/articles/js-dot-notation/&quot;&gt;here&lt;/a&gt;.)</source>
          <target state="translated">(Procedente de &lt;a href=&quot;http://www.dev-archive.net/articles/js-dot-notation/&quot;&gt;aqu&amp;iacute;&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="9ce5191381a8198893fdecfac7d98f7531ebc4d2" translate="yes" xml:space="preserve">
          <source>1) When the property names are dynamically determined (when the exact names are not known until runtime).</source>
          <target state="translated">1)Cuando los nombres de las propiedades se determinan dinámicamente (cuando los nombres exactos no se conocen hasta el tiempo de ejecución).</target>
        </trans-unit>
        <trans-unit id="9a62f2473c548b2946734289be132a1b2c4af6db" translate="yes" xml:space="preserve">
          <source>2) When using a for..in loop to go through all the properties of an object.</source>
          <target state="translated">2)Cuando se utiliza un for...en bucle para recorrer todas las propiedades de un objeto.</target>
        </trans-unit>
        <trans-unit id="4298c03650ff5961fb699fb4f2f5411bf6bcfa57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;obj.x&lt;/code&gt; would not work in this case.</source>
          <target state="translated">&lt;code&gt;obj.x&lt;/code&gt; no funcionar&amp;iacute;a en este caso.</target>
        </trans-unit>
        <trans-unit id="576a6319c26d2317f097f1506336f636c5537b0a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;In case of Arrays&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;En caso de matrices&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7642826e1b724ce145f183b960f9bb0c97d22df6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Roundup:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Roundup:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c982f6b78d4bb7e6e57f366c80865102763bea5d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Secondly, square bracket notation is useful when dealing with
 property names which vary in a predictable way:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;En segundo lugar, la notaci&amp;oacute;n de corchetes es &amp;uacute;til cuando se trata de nombres de propiedades que var&amp;iacute;an de manera predecible:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b81f4e37c52163f07a459864ccf172d22bb1eacd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Square bracket notation allows the use of characters that can't be used with dot notation:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;La notaci&amp;oacute;n de corchetes permite el uso de caracteres que no se pueden usar con la notaci&amp;oacute;n de puntos:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60b74803c404c167295ffa0db73d3552a104679a" translate="yes" xml:space="preserve">
          <source>An example where the dot notation fails</source>
          <target state="translated">Un ejemplo en el que la notación de puntos falla</target>
        </trans-unit>
        <trans-unit id="3f674b6ada34031bf6feea8efd249c8998c1829a" translate="yes" xml:space="preserve">
          <source>And this triggers the dreaded &quot;expected indentifier&quot; (at least on IE8 on windows xp, I havn't tried other environments). The simple fix for that is to switch to bracket notation:</source>
          <target state="translated">Y esto desencadena el temido &quot;identificador esperado&quot; (al menos en IE8 en windows xp,no he probado otros entornos).La solución simple para eso es cambiar a la notación de paréntesis:</target>
        </trans-unit>
        <trans-unit id="5dc5d18f133a30daf0ccdd6189a324ec2391bd3c" translate="yes" xml:space="preserve">
          <source>Another example of characters that can't be used with dot notation is &lt;em&gt;property names that themselves contain a dot&lt;/em&gt;.</source>
          <target state="translated">Otro ejemplo de caracteres que no se pueden usar con notaci&amp;oacute;n de puntos son &lt;em&gt;los nombres de propiedades que contienen un punto&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="8e073952115ceef863efbd2eace19e459436c161" translate="yes" xml:space="preserve">
          <source>Be careful while using these notations:
For eg. if we want to access a function present in the parent of a window.
In IE :</source>
          <target state="translated">Tenga cuidado al usar estas anotaciones:Por ejemplo,si queremos acceder a una función presente en el padre de una ventana.En IE :</target>
        </trans-unit>
        <trans-unit id="d171d992a686a126b04cdc83c74acd6624e57fbe" translate="yes" xml:space="preserve">
          <source>Bracket notation can use variables, so it is useful in two instances where dot notation will not work:</source>
          <target state="translated">La notación de corchetes puede utilizar variables,por lo que es útil en dos casos en los que la notación por puntos no funcionará:</target>
        </trans-unit>
        <trans-unit id="2a920be382886a91227215e2cbe3929f1922ce88" translate="yes" xml:space="preserve">
          <source>Case where &lt;code&gt;[]&lt;/code&gt; notation is helpful :</source>
          <target state="translated">Caso donde la notaci&amp;oacute;n &lt;code&gt;[]&lt;/code&gt; es &amp;uacute;til:</target>
        </trans-unit>
        <trans-unit id="52268d1dbc202579e36bf5059baa879b522e7994" translate="yes" xml:space="preserve">
          <source>Context: I've written a code generator which produces these expressions and I'm wondering which is preferable.</source>
          <target state="translated">Contexto:He escrito un generador de código que produce estas expresiones y me pregunto qué es preferible.</target>
        </trans-unit>
        <trans-unit id="441362377355832c552abe72650e6087cdb95875" translate="yes" xml:space="preserve">
          <source>Dot notation does not work with some keywords (like &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;class&lt;/code&gt;) in internet explorer 8.</source>
          <target state="translated">La notaci&amp;oacute;n de puntos no funciona con algunas palabras clave (como &lt;code&gt;new&lt;/code&gt; y &lt;code&gt;class&lt;/code&gt; ) en internet explorer 8.</target>
        </trans-unit>
        <trans-unit id="553fbdba630d44fe728a198543023944e7be36b2" translate="yes" xml:space="preserve">
          <source>Dot notation is always preferable. If you are using some &quot;smarter&quot; IDE or text editor, it will show undefined names from that object. 
Use brackets notation only when you have the name with like dashes or something similar invalid. And also if the name is stored in a variable.</source>
          <target state="translated">La notación de puntos es siempre preferible.Si utiliza algún IDE o editor de texto &quot;más inteligente&quot;,mostrará los nombres no definidos de ese objeto.Utilice la notación de corchetes sólo cuando tenga el nombre con guiones similares o algo similar inválido.Y también si el nombre está almacenado en una variable.</target>
        </trans-unit>
        <trans-unit id="1e697b0d1ef4b88b0d38f2d0852f24918bc7f934" translate="yes" xml:space="preserve">
          <source>Dot notation is faster to write and clearer to read.</source>
          <target state="translated">La notación por puntos es más rápida de escribir y más clara de leer.</target>
        </trans-unit>
        <trans-unit id="f895079bdd18c5762ee3e0ff0c543a0738d1a65b" translate="yes" xml:space="preserve">
          <source>For example a json response could contain a property called &lt;code&gt;bar.Baz&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, una respuesta json podr&amp;iacute;a contener una propiedad llamada &lt;code&gt;bar.Baz&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd9d6579a7429ed6c0277fe551439e624a237930" translate="yes" xml:space="preserve">
          <source>Generally speaking, they do the same job.</source>
          <target state="translated">En general,hacen el mismo trabajo.</target>
        </trans-unit>
        <trans-unit id="717b2226b7373507849d3c1a378cd42efa31de45" translate="yes" xml:space="preserve">
          <source>I had this code:</source>
          <target state="translated">Tenía este código:</target>
        </trans-unit>
        <trans-unit id="7ad05d8e74b6d958d7ae67dd66bbbccdf4205e3a" translate="yes" xml:space="preserve">
          <source>If your object is dynamic and there could be some random values in keys like &lt;code&gt;number&lt;/code&gt; and &lt;code&gt;[]&lt;/code&gt;or any other special character, for example -</source>
          <target state="translated">Si su objeto es din&amp;aacute;mico y podr&amp;iacute;a haber algunos valores aleatorios en claves como &lt;code&gt;number&lt;/code&gt; y &lt;code&gt;[]&lt;/code&gt; o cualquier otro car&amp;aacute;cter especial, por ejemplo:</target>
        </trans-unit>
        <trans-unit id="da6adb2e9c618356084933ae4271293e912a777e" translate="yes" xml:space="preserve">
          <source>In code:</source>
          <target state="translated">En código:</target>
        </trans-unit>
        <trans-unit id="c472cca6e6bf36e74839b54bba2499756d60d09f" translate="yes" xml:space="preserve">
          <source>JavaScript property access: dot notation vs. brackets</source>
          <target state="translated">Acceso a la propiedad JavaScript:notación de puntos vs.paréntesis</target>
        </trans-unit>
        <trans-unit id="29fe38adf472b0f4375786c3da37ab2d093f5a1f" translate="yes" xml:space="preserve">
          <source>Let me add some more use case of the square-bracket notation. If you want to access a property say &lt;code&gt;x-proxy&lt;/code&gt; in a object, then &lt;code&gt;-&lt;/code&gt; will be interpreted wrongly. Their are some other cases too like space, dot, etc., where dot operation will not help you. Also if u have the key in a variable then only way to access the value of the key in a object is by bracket notation. Hope you get some more context.</source>
          <target state="translated">Perm&amp;iacute;tanme agregar un caso de uso m&amp;aacute;s de la notaci&amp;oacute;n de corchetes. Si desea acceder a una propiedad, por ejemplo, &lt;code&gt;x-proxy&lt;/code&gt; en un objeto, se interpretar&amp;aacute; incorrectamente. Tambi&amp;eacute;n hay otros casos como espacio, punto, etc., donde la operaci&amp;oacute;n de puntos no lo ayudar&amp;aacute;. Adem&amp;aacute;s, si tiene la clave en una variable, entonces la &amp;uacute;nica forma de acceder al valor de la clave en un objeto es mediante notaci&amp;oacute;n de par&amp;eacute;ntesis. Espero que tengas m&amp;aacute;s contexto.</target>
        </trans-unit>
        <trans-unit id="6cfbe36c7cc4a548384f006f6913749eab42d335" translate="yes" xml:space="preserve">
          <source>Nevertheless, the bracket notation gives you the opportunity to do stuff that you can't do with dot notation, like</source>
          <target state="translated">Sin embargo,la notación de paréntesis te da la oportunidad de hacer cosas que no puedes hacer con la notación de puntos,como</target>
        </trans-unit>
        <trans-unit id="ba34fdeefe54feab2e2d0eb871271fe427028c31" translate="yes" xml:space="preserve">
          <source>Now if you try to access in like &lt;code&gt;a.1&lt;/code&gt; it will through an error, because it is expecting an string over there.</source>
          <target state="translated">Ahora, si intenta acceder como &lt;code&gt;a.1&lt;/code&gt; , lo har&amp;aacute; a trav&amp;eacute;s de un error, ya que espera una cadena all&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="5cdd08676026a1b36ac9eeff2563f1c0eef895e9" translate="yes" xml:space="preserve">
          <source>Other than that, I suppose it's just a matter of taste. IMHO, the dot notation is shorter and it makes it more obvious that it's a property rather than an array element (although of course JavaScript does not have associative arrays anyway).</source>
          <target state="translated">Aparte de eso,supongo que es sólo una cuestión de gusto.IMHO,la notación por puntos es más corta y hace más obvio que es una propiedad en lugar de un elemento de matriz (aunque por supuesto JavaScript no tiene matrices asociativas de todos modos).</target>
        </trans-unit>
        <trans-unit id="0716ff8bc348eed265bcaff7ddd6eb20c259b73e" translate="yes" xml:space="preserve">
          <source>Other than the obvious fact that the first form could use a variable and not just a string literal, is there any reason to use one over the other, and if so under which cases?</source>
          <target state="translated">Aparte del hecho obvio de que la primera forma podría usar una variable y no sólo una cadena literal,¿hay alguna razón para usar una sobre la otra,y si es así,en qué casos?</target>
        </trans-unit>
        <trans-unit id="1957c0bcf72e8ddda94e7d7e622e19813539630e" translate="yes" xml:space="preserve">
          <source>So if you know that the property you are interested in is called &amp;ldquo;length&amp;rdquo;, you say &lt;code&gt;value.length&lt;/code&gt;. If you want to extract the property named by the value held in the variable &lt;code&gt;i&lt;/code&gt;, you say &lt;code&gt;value[i]&lt;/code&gt;. And because property names can be any string, if you want to access a property named &lt;code&gt;&amp;ldquo;2&amp;rdquo;&lt;/code&gt; or &lt;code&gt;&amp;ldquo;John Doe&amp;rdquo;&lt;/code&gt;, you must use square brackets: &lt;code&gt;value[2] or value[&quot;John Doe&quot;]&lt;/code&gt;. This is the case even though you know the precise name of the property in advance, because neither &lt;code&gt;&amp;ldquo;2&amp;rdquo; nor &amp;ldquo;John Doe&amp;rdquo;&lt;/code&gt; is a valid variable name and so cannot be accessed through dot notation.</source>
          <target state="translated">Entonces, si sabe que la propiedad que le interesa se llama &quot;longitud&quot;, diga &lt;code&gt;value.length&lt;/code&gt; . Si desea extraer la propiedad nombrada por el valor contenido en la variable &lt;code&gt;i&lt;/code&gt; , diga &lt;code&gt;value[i]&lt;/code&gt; . Y debido a que los nombres de propiedad pueden ser cualquier cadena, si desea acceder a una propiedad llamada &lt;code&gt;&amp;ldquo;2&amp;rdquo;&lt;/code&gt; o &lt;code&gt;&amp;ldquo;John Doe&amp;rdquo;&lt;/code&gt; , debe usar corchetes: &lt;code&gt;value[2] or value[&quot;John Doe&quot;]&lt;/code&gt; . Este es el caso a pesar de que conoce el nombre preciso de la propiedad de antemano, porque ni &lt;code&gt;&amp;ldquo;2&amp;rdquo; nor &amp;ldquo;John Doe&amp;rdquo;&lt;/code&gt; es un nombre de variable v&amp;aacute;lido y, por lo tanto, no se puede acceder a trav&amp;eacute;s de la notaci&amp;oacute;n de puntos.</target>
        </trans-unit>
        <trans-unit id="5e21d8c1b6386b5f1efafef90dd5637c815cf2dd" translate="yes" xml:space="preserve">
          <source>Square bracket notation allows access to properties containing
  special characters and selection of
  properties using variables</source>
          <target state="translated">La notación entre corchetes permite el acceso a las propiedades que contienen caracteres especiales y la selección de propiedades utilizando variables</target>
        </trans-unit>
        <trans-unit id="ad1afec469e0c0cc1572ad17a698b4a1ddc1ef74" translate="yes" xml:space="preserve">
          <source>The bracket notation allows you to access properties by name stored in a variable:</source>
          <target state="translated">La notación entre paréntesis permite acceder a las propiedades por nombre almacenadas en una variable:</target>
        </trans-unit>
        <trans-unit id="833eeeeb8cf9f9fb7e2cbc64b35b085d470c2ad3" translate="yes" xml:space="preserve">
          <source>The elements in an array are stored in properties. Because the names of these properties are numbers and we often need to get their name from a variable, we have to use the bracket syntax to access them. &lt;strong&gt;The length property of an array tells us how many elements it contains. This property name is a valid variable name, and we know its name in advance, so to find the length of an array, you typically write &lt;code&gt;array.length&lt;/code&gt; because that is easier to write than &lt;code&gt;array[&quot;length&quot;]&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="translated">Los elementos en una matriz se almacenan en propiedades. Debido a que los nombres de estas propiedades son n&amp;uacute;meros y, a menudo, necesitamos obtener su nombre de una variable, tenemos que usar la sintaxis de par&amp;eacute;ntesis para acceder a ellos. &lt;strong&gt;La propiedad de longitud de una matriz nos dice cu&amp;aacute;ntos elementos contiene.&lt;/strong&gt; &lt;strong&gt;Este nombre de propiedad es un nombre de variable v&amp;aacute;lido, y conocemos su nombre de antemano, por lo que para encontrar la longitud de una matriz, normalmente escribe &lt;code&gt;array.length&lt;/code&gt; porque es m&amp;aacute;s f&amp;aacute;cil de escribir que la &lt;code&gt;array[&quot;length&quot;]&lt;/code&gt; .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="96e702e80019dc89f76e72ce8abeb11feb23b761" translate="yes" xml:space="preserve">
          <source>The property name has special character.</source>
          <target state="translated">El nombre de la propiedad tiene un carácter especial.</target>
        </trans-unit>
        <trans-unit id="d0429d01e094779d75926b775a3e82736d16c0cc" translate="yes" xml:space="preserve">
          <source>The property name is assigned to a variable and you want to access the 
property value by this variable.</source>
          <target state="translated">El nombre de la propiedad se asigna a una variable y usted quiere acceder al valor de la propiedad por esta variable.</target>
        </trans-unit>
        <trans-unit id="ec939e09f11e2966b48c72dff871ba9d164e8fd1" translate="yes" xml:space="preserve">
          <source>The property name is number.</source>
          <target state="translated">El nombre de la propiedad es el número.</target>
        </trans-unit>
        <trans-unit id="4d5d53e36b3cdbf6797d824518c41e58846af6c9" translate="yes" xml:space="preserve">
          <source>The property names shouldn't interfere with the syntax rules of javascript for you to be able to access them as &lt;code&gt;json.property_name&lt;/code&gt;</source>
          <target state="translated">Los nombres de propiedad no deber&amp;iacute;an interferir con las reglas de sintaxis de javascript para que pueda acceder a ellos como &lt;code&gt;json.property_name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0174754bd065de20c90fe39ddb21f9021f02702c" translate="yes" xml:space="preserve">
          <source>The two most common ways to access properties in JavaScript are with a dot and with square brackets. Both &lt;code&gt;value.x and value[x]&lt;/code&gt; access a property on value&amp;mdash;but not necessarily the same property. &lt;strong&gt;The difference is in how x is interpreted. When using a dot, the part after the dot must be a valid variable name, and it directly names the property. When using square brackets, the expression between the brackets is evaluated to get the property name. Whereas value.x fetches the property of value named &amp;ldquo;x&amp;rdquo;, value[x] tries to evaluate the expression x and uses the result as the property name.&lt;/strong&gt;</source>
          <target state="translated">Las dos formas m&amp;aacute;s comunes de acceder a las propiedades en JavaScript son con un punto y entre corchetes. Tanto &lt;code&gt;value.x and value[x]&lt;/code&gt; acceden a una propiedad en value, pero no necesariamente a la misma propiedad. &lt;strong&gt;La diferencia est&amp;aacute; en c&amp;oacute;mo se interpreta x.&lt;/strong&gt; &lt;strong&gt;Cuando se utiliza un punto, la parte que sigue al punto debe ser un nombre de variable v&amp;aacute;lido y nombra directamente la propiedad.&lt;/strong&gt; &lt;strong&gt;Al usar corchetes, la expresi&amp;oacute;n entre corchetes se eval&amp;uacute;a para obtener el nombre de la propiedad.&lt;/strong&gt; &lt;strong&gt;Mientras que value.x obtiene la propiedad del valor llamado &quot;x&quot;, el valor [x] intenta evaluar la expresi&amp;oacute;n x y utiliza el resultado como el nombre de la propiedad.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cc8e61c69da1eb568c4c2ae5ec53e80e9ef89168" translate="yes" xml:space="preserve">
          <source>This can be extended to any property containing special characters.</source>
          <target state="translated">Esto puede extenderse a cualquier propiedad que contenga caracteres especiales.</target>
        </trans-unit>
        <trans-unit id="188955539a5ea31bd9d0392cd55ac3af147a90df" translate="yes" xml:space="preserve">
          <source>We may either use:</source>
          <target state="translated">Podemos usar cualquiera de los dos:</target>
        </trans-unit>
        <trans-unit id="d116589e64a7b5343fab4435bfef941d355c1a0f" translate="yes" xml:space="preserve">
          <source>You have to use square bracket notation when -</source>
          <target state="translated">Tienes que usar la notación de corchetes cuando...</target>
        </trans-unit>
        <trans-unit id="07e289f45e4d3b0c50c47d696dcc865687745d6b" translate="yes" xml:space="preserve">
          <source>You need to use brackets if the property names has special characters:</source>
          <target state="translated">Hay que usar paréntesis si los nombres de las propiedades tienen caracteres especiales:</target>
        </trans-unit>
        <trans-unit id="a95791318de7e005ccd3c1777299c0ebcdebc783" translate="yes" xml:space="preserve">
          <source>including non-ASCII (UTF-8) characters, as in &lt;code&gt;myForm[&quot;ダ&quot;]&lt;/code&gt; (&lt;a href=&quot;https://stackoverflow.com/q/30929233/287948&quot;&gt;more examples&lt;/a&gt;).</source>
          <target state="translated">incluidos caracteres no ASCII (UTF-8), como en &lt;code&gt;myForm[&quot;ダ&quot;]&lt;/code&gt; ( &lt;a href=&quot;https://stackoverflow.com/q/30929233/287948&quot;&gt;m&amp;aacute;s ejemplos&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e225a3570f34b8e8c1d42219eee0eff711b61a1d" translate="yes" xml:space="preserve">
          <source>is not equivalent to</source>
          <target state="translated">no es equivalente a</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="7491bbbbc6dee872715550f1d7ad8e4845a55563" translate="yes" xml:space="preserve">
          <source>source: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects&lt;/a&gt;</source>
          <target state="translated">fuente: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1df81d62610a87a7f253064deec3ef3fa1de58d8" translate="yes" xml:space="preserve">
          <source>to access it</source>
          <target state="translated">para acceder a ella</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
