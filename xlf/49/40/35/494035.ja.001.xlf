<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/494035">
    <body>
      <group id="494035">
        <trans-unit id="b4b547ed4e65a207f90055849a187215d0169cee" translate="yes" xml:space="preserve">
          <source>And the coffeescript version of Steven Penny's answer, since this is #2 google result....even if coffee is just javascript with a lot of characters removed...;)</source>
          <target state="translated">そして、スティーブン・ペニーの回答のcoffeescript版ですが、これはgoogleの結果が2位なので......たとえcoffeescriptがjavascriptで文字数が多く削除されていたとしても.....;)</target>
        </trans-unit>
        <trans-unit id="58a7124e04e8fb36f38515e8703fec6da46cd2d6" translate="yes" xml:space="preserve">
          <source>And use it like this:</source>
          <target state="translated">そして、こんな風に使います。</target>
        </trans-unit>
        <trans-unit id="3752b1e40253c2707011839dd3b4de10dda02931" translate="yes" xml:space="preserve">
          <source>As Eric Wendelin mentioned, you can do something like this:</source>
          <target state="translated">エリック・ウェンデリンさんがおっしゃっていたように、こんなことができます。</target>
        </trans-unit>
        <trans-unit id="4ae5c8948c694b4b8ca0e8ce82c2634d6b3170b9" translate="yes" xml:space="preserve">
          <source>As always: don't use regex unless you have to. For a simple string replace, the idiom is:</source>
          <target state="translated">いつものように:必要がない限り正規表現は使わないでください。単純な文字列の置換では、イディオムは次のようになります。</target>
        </trans-unit>
        <trans-unit id="7e29fa5b2e692e13b271d44c701f4ba62315380f" translate="yes" xml:space="preserve">
          <source>But I want to do something like this:</source>
          <target state="translated">でも、こんなことをしてみたいと思っています。</target>
        </trans-unit>
        <trans-unit id="4ba50bf8d37451c15e52405d4ba01db54ab54767" translate="yes" xml:space="preserve">
          <source>But obviously this will only replace the text &lt;code&gt;&quot;replaceThis&quot;&lt;/code&gt;...so how do I pass this variable in to my regex string?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、明らかにこれは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;replaceThis&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;というテキストのみを置き換えます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;...では、この変数を正規表現文字列に渡すにはどうすればよいですか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">スニペットを展開</target>
        </trans-unit>
        <trans-unit id="b013726e1568e95b7e6b3fbbf6438db2828f7888" translate="yes" xml:space="preserve">
          <source>For anyone looking to use variable with the &lt;strong&gt;match&lt;/strong&gt; method, this worked for me</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;match&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数を使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したい人にとって、これは私にとってうまくいきました&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="162f2c512508b9c32b4b8c1788b5cd43a317665f" translate="yes" xml:space="preserve">
          <source>For multiple replace without regular expressions I went with the following:</source>
          <target state="translated">正規表現を使わない複数の置換については、以下のようにしました。</target>
        </trans-unit>
        <trans-unit id="8d56c2e749391baff43ad8ba0fc8301adad9f6b0" translate="yes" xml:space="preserve">
          <source>Here's another replaceAll implementation:</source>
          <target state="translated">ここに別のreplaceAllの実装があります。</target>
        </trans-unit>
        <trans-unit id="bb3f94a4b4c7a9148312fefa1a01e5958686cd66" translate="yes" xml:space="preserve">
          <source>How do you use a variable in a regular expression</source>
          <target state="translated">正規表現での変数の使用方法</target>
        </trans-unit>
        <trans-unit id="49a5e7f50fd6607ebfa92469b7b4f048f377d040" translate="yes" xml:space="preserve">
          <source>I would like to create a &lt;code&gt;String.replaceAll()&lt;/code&gt; method in JavaScript and I'm thinking that using a regex would be most terse way to do it.  However, I can't figure out how to pass a variable in to a regex.  I can do this already which will replace all the instances of &lt;code&gt;&quot;B&quot;&lt;/code&gt; with &lt;code&gt;&quot;A&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptで&lt;/font&gt;&lt;/font&gt; &lt;code&gt;String.replaceAll()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッド&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を作成したいの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ですが、正規表現を使用するのが最も簡単な方法だと思います。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、変数を正規表現に渡す方法がわかりません。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;B&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてのインスタンス&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;A&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;置き換えることで、すでにこれを行うことができます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="094887dae80df4ee43670bf601517548332e891b" translate="yes" xml:space="preserve">
          <source>If you are using jQuery UI you can use that function, or copy its definition &lt;a href=&quot;https://github.com/jquery/jquery-ui/blob/master/ui/widgets/autocomplete.js&quot;&gt;from the source&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;jQuery UIを使用している場合は、その関数を使用するか、その定義&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/jquery/jquery-ui/blob/master/ui/widgets/autocomplete.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をソースから&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コピーできます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c8c30c662a82a7c87b623de0a2e7f8a12aba792" translate="yes" xml:space="preserve">
          <source>If you want to get ALL occurrences (&lt;code&gt;g&lt;/code&gt;), be case insensitive (&lt;code&gt;i&lt;/code&gt;), and use boundaries so that it isn't a word within another word (&lt;code&gt;\\b&lt;/code&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてのオカレンス（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;g&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を取得する場合は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、大文字と小文字を区別せず（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）、境界を使用して、別の単語（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;\\b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内の単語にならないようにします&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31d287ed95c5a902443a369e390ec20353fbc861" translate="yes" xml:space="preserve">
          <source>Instead of using the &lt;code&gt;/regex/g&lt;/code&gt; syntax, you can construct a new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Guide/Regular_Expressions&quot;&gt;RegExp&lt;/a&gt; object:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;/regex/g&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;構文&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用する代わりに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、新しい&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Guide/Regular_Expressions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;RegExp&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作成でき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e502c7f83bf5cde585f1a137c15ffeb7d78bd71e" translate="yes" xml:space="preserve">
          <source>JavaScript code:</source>
          <target state="translated">JavaScriptのコードです。</target>
        </trans-unit>
        <trans-unit id="adf714773c686142422edea673949020d6cc0123" translate="yes" xml:space="preserve">
          <source>None of these answers were clear to me. I eventually found a good explanation at &lt;a href=&quot;http://burnignorance.com/php-programming-tips/how-to-use-a-variable-in-replace-function-of-javascript/&quot;&gt;http://burnignorance.com/php-programming-tips/how-to-use-a-variable-in-replace-function-of-javascript/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらの答えはどれも私には明確ではありませんでした。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私は最終的に&lt;/font&gt;&lt;a href=&quot;http://burnignorance.com/php-programming-tips/how-to-use-a-variable-in-replace-function-of-javascript/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://burnignorance.com/php-programming-tips/how-to-use-a-variable-in-replace-function-of-javascript/で&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;良い説明を見つけました&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3172d253a380b39c261818c547bba5aacc41daae" translate="yes" xml:space="preserve">
          <source>Pass a variable to regular expression.</source>
          <target state="translated">正規表現に変数を渡します。</target>
        </trans-unit>
        <trans-unit id="23deac8948fd985b0064ecd85fae55f86ea78c5c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.w3schools.com/jsref/jsref_obj_regexp.asp&quot;&gt;http://www.w3schools.com/jsref/jsref_obj_regexp.asp&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://www.w3schools.com/jsref/jsref_obj_regexp.asp&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://www.w3schools.com/jsref/jsref_obj_regexp.aspを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a9f7c713b881b87736387e14afe1eb9ed77aa0e" translate="yes" xml:space="preserve">
          <source>So now You can pass variable in replace function.</source>
          <target state="translated">これで、置換関数に変数を渡すことができるようになりました。</target>
        </trans-unit>
        <trans-unit id="5e749de9f4b04fe61ef1821e4ae0fa82b30018e7" translate="yes" xml:space="preserve">
          <source>Test it like:</source>
          <target state="translated">テストしてみてください。</target>
        </trans-unit>
        <trans-unit id="d70c7f060ba1c30d0b468b9af71811393802ec56" translate="yes" xml:space="preserve">
          <source>Test with this &lt;a href=&quot;http://www.pagecolumn.com/tool/regtest.htm&quot;&gt;tool&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この&lt;/font&gt;&lt;a href=&quot;http://www.pagecolumn.com/tool/regtest.htm&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ツールで&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テストする&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f17343f22d5046c3d3467bbdd03bc1ca0fe90b1c" translate="yes" xml:space="preserve">
          <source>The important part of the solution was found here</source>
          <target state="translated">解決策の重要な部分はここにありました。</target>
        </trans-unit>
        <trans-unit id="6ed19221b1043313dd5c5cfa3a12c98f9cd6acb3" translate="yes" xml:space="preserve">
          <source>The one which I have implemented is by taking the value from a text field which is the one you want to replace and another is the &quot;replace with&quot; text field, getting the value from text-field in a variable and setting the variable to RegExp function to further replace. In my case I am using Jquery, you also can do it by only JavaScript too.</source>
          <target state="translated">私が実装したのは、置換したいテキストフィールドと「置換」したいテキストフィールドから値を取得し、変数にテキストフィールドの値を取得し、変数をRegExp関数に設定してさらに置換するというものです。私の場合はJqueryを使用していますが、JavaScriptだけでも可能です。</target>
        </trans-unit>
        <trans-unit id="55030c3a2228a822a3d9d996edd38209b329bef7" translate="yes" xml:space="preserve">
          <source>The simple answer is:</source>
          <target state="translated">シンプルな答えは</target>
        </trans-unit>
        <trans-unit id="eeae1384b2f94311d0148155d4105806167ce513" translate="yes" xml:space="preserve">
          <source>Then you can do:</source>
          <target state="translated">ならば、あなたはできるのです。</target>
        </trans-unit>
        <trans-unit id="1366b5f7e15f62eba20ee9a5e749184834ca2af4" translate="yes" xml:space="preserve">
          <source>Then you don't have to worry about the quoting issues mentioned in Gracenotes's answer.</source>
          <target state="translated">そうすれば、Gracenotesさんの回答にある引用問題を気にする必要はありません。</target>
        </trans-unit>
        <trans-unit id="ada3844fecb22ce69c028c531544fa8bde5025ec" translate="yes" xml:space="preserve">
          <source>This code is on Onclick event of a button, you can put this in a function to call.</source>
          <target state="translated">このコードはボタンのOnclickイベントで、これを関数に入れて呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="ac12475f5d1ea299d13b939a7b0b3043fce67463" translate="yes" xml:space="preserve">
          <source>This doesn&amp;rsquo;t go into an infinite loop when the replacement contains the match.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;置換に一致するものが含まれている場合、これは無限ループに入りません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="14770d23488adfd8f0f35c100b520fac029fd4d4" translate="yes" xml:space="preserve">
          <source>This is because, although &lt;code&gt;&quot;.&quot;&lt;/code&gt; is a String, in the RegExp constructor it's still interpreted as a regular expression, meaning any non-line-break character, meaning every character in the string. For this purpose, the following function may be useful:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;.&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列です。RegExpコンストラクタでは、正規表現として解釈されます。つまり、改行以外の文字、つまり文字列内のすべての文字を意味します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この目的のために、次の関数が役立つ場合があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a099807c27ca2eb69659ed6e9e698848625118e5" translate="yes" xml:space="preserve">
          <source>This self calling function will iterate over replacerItems using an index, and change replacerItems[index] globally on the string with each pass.</source>
          <target state="translated">この自己呼び出し関数は、インデックスを使用して replacerItems を反復処理し、渡すたびに文字列上で replacerItems[index]をグローバルに変更します。</target>
        </trans-unit>
        <trans-unit id="e8502300320fc09c2ecf85582241399a8eb3acb6" translate="yes" xml:space="preserve">
          <source>This yields &lt;code&gt;&quot;regex matching .&quot;&lt;/code&gt;. However, it will fail if str1 is &lt;code&gt;&quot;.&quot;&lt;/code&gt;. You'd expect the result to be &lt;code&gt;&quot;pattern matching regex&quot;&lt;/code&gt;, replacing the period with &lt;code&gt;&quot;regex&quot;&lt;/code&gt;, but it'll turn out to be...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これにより、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;regex matching .&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;生成され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、str1が&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;.&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合は失敗し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;結果は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;pattern matching regex&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;であり、ピリオドを&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;regex&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;置き換え&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ますが、結果は次のよう&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;になります...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cf5b7c750a4b16617dfd7cff20be48990a9d7985" translate="yes" xml:space="preserve">
          <source>This:</source>
          <target state="translated">This:</target>
        </trans-unit>
        <trans-unit id="1c3c432db3c089ccca7c57e754c73dcf04162460" translate="yes" xml:space="preserve">
          <source>To satisfy my need to insert a variable/alias/function into a Regular Expression, this is what I came up with:</source>
          <target state="translated">正規表現に変数alias関数を挿入したいという私のニーズを満たすために、私が思いついたのがこのようなものです。</target>
        </trans-unit>
        <trans-unit id="d52acfe68942b0438b0d736af1d098acc4ab8028" translate="yes" xml:space="preserve">
          <source>While you can make dynamically-created RegExp's (as per the other responses to this question), I'll echo my comment from a &lt;a href=&quot;https://stackoverflow.com/questions/487509/passing-variable-to-a-regexp-in-javascript/488133#488133&quot;&gt;similar post&lt;/a&gt;: The functional form of &lt;a href=&quot;https://developer.mozilla.org/En/Core_JavaScript_1.5_Reference/Global_Objects/String/Replace&quot;&gt;String.replace()&lt;/a&gt; is extremely useful and in many cases reduces the need for dynamically-created RegExp objects. (which are kind of a pain 'cause you have to express the input to the RegExp constructor as a string rather than use the slashes /[A-Z]+/ regexp literal format)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;動的に作成されたRegExpを（この質問に対する他の応答に従って）作成できますが、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/487509/passing-variable-to-a-regexp-in-javascript/488133#488133&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同様の投稿&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;からコメントをエコーし​​ます&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/En/Core_JavaScript_1.5_Reference/Global_Objects/String/Replace&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。String.replace（）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の関数形式&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は非常に便利であり、多くの場合、動的に作成されたRegExpオブジェクト。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（これは、スラッシュ/ [AZ] + / regexpリテラル形式を使用するのではなく、RegExpコンストラクタへの入力を文字列として表現する必要があるため、一種の苦痛です）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="66b0c11481ea5b15822a88c4013b766f7e3ffbb4" translate="yes" xml:space="preserve">
          <source>You can always use &lt;code&gt;indexOf&lt;/code&gt; repeatedly:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いつでも&lt;/font&gt;&lt;/font&gt; &lt;code&gt;indexOf&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;繰り返し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f95b8bd3baeaf7fe37c6eb0fb0d69d1ced411ad2" translate="yes" xml:space="preserve">
          <source>You can dynamically create regex objects this way. Then you will do:</source>
          <target state="translated">このようにして動的に正規表現オブジェクトを作成することができます。そうすると、あなたはそうします。</target>
        </trans-unit>
        <trans-unit id="f53e1c57515c3744865c450418e26d1406c93a31" translate="yes" xml:space="preserve">
          <source>You can use this if $1 not work with you</source>
          <target state="translated">1ドルでは無理な場合に使えます。</target>
        </trans-unit>
        <trans-unit id="101fe416a64881406982af877f7d2e573990cca3" translate="yes" xml:space="preserve">
          <source>You want to build the regular expression dynamically and for this the proper solutuion is to use the &lt;code&gt;new RegExp(string)&lt;/code&gt; constructor. In order for constructor to treat special characters &lt;em&gt;literally&lt;/em&gt;, you must escape them. There is a built-in function in &lt;a href=&quot;https://api.jqueryui.com/autocomplete/&quot;&gt;jQuery UI autocomplete widget&lt;/a&gt; called &lt;code&gt;$.ui.autocomplete.escapeRegex&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正規表現を動的に構築したい場合、適切な解決策は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new RegExp(string)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンストラクター&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用すること&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンストラクターが特殊文字を&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字どおり&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に処理するために&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、それらをエスケープする必要があります。&lt;/font&gt; &lt;code&gt;$.ui.autocomplete.escapeRegex&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;という&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://api.jqueryui.com/autocomplete/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;jQuery UIオートコンプリートウィジェットに&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;組み込み関数があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba8458d585be58265a683f4ab4ffe96b6f8e83c0" translate="yes" xml:space="preserve">
          <source>Your solution is here:</source>
          <target state="translated">あなたの解決策はここにあります。</target>
        </trans-unit>
        <trans-unit id="1027f98df4735fae6e658182c14ad8326b9b1fa4" translate="yes" xml:space="preserve">
          <source>[...] you can make use of the built-in
  &lt;code&gt;$.ui.autocomplete.escapeRegex&lt;/code&gt; function. It'll take a single string
  argument and escape all regex characters, making the result safe to
  pass to &lt;code&gt;new RegExp()&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[...]組み込みの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$.ui.autocomplete.escapeRegex&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を利用でき &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;単一の文字列引数を取り、すべての正規表現文字をエスケープし、結果を&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new RegExp()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;安全に渡せるようにし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="63e4b1363ea3e1ab49e1370be1bbf79e46eddb9a" translate="yes" xml:space="preserve">
          <source>and in my particular case</source>
          <target state="translated">そして、私の場合は</target>
        </trans-unit>
        <trans-unit id="5cffe5ee80305aeabc52048276f1acf872533639" translate="yes" xml:space="preserve">
          <source>is equivalent to this:</source>
          <target state="translated">がこれに相当します。</target>
        </trans-unit>
        <trans-unit id="ae1d5bdb16e76f279986afa0cb3b97a855d313eb" translate="yes" xml:space="preserve">
          <source>where 'oldre' is the original regexp that I want to insert a variable,
'xx' is the placeholder for that variable/alias/function,
and 'yy' is the actual variable name, alias, or function.</source>
          <target state="translated">oldre' は変数を挿入したい元の正規表現、'xx' はその変数aliasfunctionのプレースホルダ、'yy' は実際の変数名、エイリアス、関数です。</target>
        </trans-unit>
        <trans-unit id="29f377c843ad719460dad98ee19a03f94cf7c22a" translate="yes" xml:space="preserve">
          <source>yielding &lt;code&gt;&quot;pattern matching regex&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;&quot;pattern matching regex&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を生成し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
