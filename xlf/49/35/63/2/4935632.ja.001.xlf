<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/4935632">
    <body>
      <group id="4935632">
        <trans-unit id="0349fad84e1b6f292de01d0f81462d4b4159781e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;WARNING!&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a9053054f2e85076717b3bed84af7f987167797" translate="yes" xml:space="preserve">
          <source>After that, I would recommend using a JavaScript library such as jQuery or Prototype if you can because these things are handled well in those libraries.</source>
          <target state="translated">その後、できればjQueryやPrototypeなどのJavaScriptライブラリを使うことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="88c29beed74863afeed8bfe498b63006afdaf487" translate="yes" xml:space="preserve">
          <source>An easy way to do it:</source>
          <target state="translated">簡単にできる方法。</target>
        </trans-unit>
        <trans-unit id="b7c7414cad01426cb44ff3f852f342cc54578e26" translate="yes" xml:space="preserve">
          <source>And you can access the fields using &lt;code&gt;jsonObject.result&lt;/code&gt; and &lt;code&gt;jsonObject.count&lt;/code&gt;.</source>
          <target state="translated">また、 &lt;code&gt;jsonObject.result&lt;/code&gt; および &lt;code&gt;jsonObject.count&lt;/code&gt; を使用してフィールドにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="f323db856233695ec78a2c5d2f6c52a2afc0b738" translate="yes" xml:space="preserve">
          <source>As mentioned by numerous others, most browsers support &lt;code&gt;JSON.parse&lt;/code&gt; and &lt;code&gt;JSON.stringify&lt;/code&gt;.</source>
          <target state="translated">他の多くの人が述べたように、ほとんどのブラウザは &lt;code&gt;JSON.parse&lt;/code&gt; と &lt;code&gt;JSON.stringify&lt;/code&gt; をサポートしています 。</target>
        </trans-unit>
        <trans-unit id="e262aa4c560f1ae35fd6e5cf5ac45462ea46ecc8" translate="yes" xml:space="preserve">
          <source>F12</source>
          <target state="translated">F12</target>
        </trans-unit>
        <trans-unit id="4d75718a0632ac0b52b678b9a1f75f8b38e09c76" translate="yes" xml:space="preserve">
          <source>First of all, you have to make sure that the JSON code is valid.</source>
          <target state="translated">まず、JSONコードが有効であることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="da8abb62295ea48a0ff010267aff9688a2fcd2cb" translate="yes" xml:space="preserve">
          <source>For better understanding, press</source>
          <target state="translated">理解を深めるためには、プレス</target>
        </trans-unit>
        <trans-unit id="363e96bd0f8a3e2de8bc57e502b1a975b73aca5d" translate="yes" xml:space="preserve">
          <source>Here is an example of using the eval function:</source>
          <target state="translated">eval関数を使用した例を示します。</target>
        </trans-unit>
        <trans-unit id="74a78ebc97924254ae91b4cc1ad9b8db9a2997fc" translate="yes" xml:space="preserve">
          <source>How can I get the values &lt;code&gt;result&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; from this?</source>
          <target state="translated">これから値の &lt;code&gt;result&lt;/code&gt; と &lt;code&gt;count&lt;/code&gt; を取得するにはどうすればよいですか？</target>
        </trans-unit>
        <trans-unit id="248f07d53299c45f5939ea344c6f9bdc62aacc50" translate="yes" xml:space="preserve">
          <source>I just wanted to add the stuff about AngularJS to provide another option. NOTE that AngularJS doesn't officially support Internet&amp;nbsp;Explorer&amp;nbsp;8 (and older versions, for that matter), though through experience most of the stuff seems to work pretty well.</source>
          <target state="translated">AngularJSに関するものを追加して、別のオプションを提供したかっただけです。 AngularJSはInternet Explorer 8（およびそれより古いバージョン）を正式にはサポートしていませんが、経験上、ほとんどのものはかなりうまく機能しているようです。</target>
        </trans-unit>
        <trans-unit id="e021da450d15c8da0a0e88a6537bb59fb2df1d7a" translate="yes" xml:space="preserve">
          <source>I thought &lt;code&gt;JSON.parse(myObject)&lt;/code&gt; would work. But depending on the browsers, it might be worth using &lt;code&gt;eval('('+myObject+')')&lt;/code&gt;. The only issue I can recommend watching out for is the multi-level list in JSON.</source>
          <target state="translated">&lt;code&gt;JSON.parse(myObject)&lt;/code&gt; が機能すると思いました 。 しかし、ブラウザによっては、 &lt;code&gt;eval('('+myObject+')')&lt;/code&gt; を使用する価値があるかもしれません。 私が注意することをお勧めできる唯一の問題は、JSONのマルチレベルリストです。</target>
        </trans-unit>
        <trans-unit id="0caba7e02df90bff80552404e51f0aa21bb7314b" translate="yes" xml:space="preserve">
          <source>I want to parse a JSON string in JavaScript. The response is something like</source>
          <target state="translated">JavaScriptでJSON文字列をパースしたい。レスポンスは以下のようなものです。</target>
        </trans-unit>
        <trans-unit id="e4c102816cbbdeaee5e7b4ca19ed527110e66cc0" translate="yes" xml:space="preserve">
          <source>If you are getting this from an outside site it might be helpful to use jQuery's getJSON. If it's a list you can iterate through it with $.each</source>
          <target state="translated">外部サイトから取得する場合は、jQueryのgetJSONを使うと便利かもしれません。リストの場合は、$.each を使って反復処理を行うことができます。</target>
        </trans-unit>
        <trans-unit id="57c040b546c8bffee654280bc53886eaf65efc7b" translate="yes" xml:space="preserve">
          <source>If you control what browser is being used or you are not worried people with an older browser, you can always use the JSON.parse method.</source>
          <target state="translated">どのブラウザを使っているかをコントロールしたり、古いブラウザを使っている人が心配しないのであれば、いつでもJSON.parseメソッドを使うことができます。</target>
        </trans-unit>
        <trans-unit id="095cde20fad186a0657de9edc9081d90b4304c0a" translate="yes" xml:space="preserve">
          <source>If you like</source>
          <target state="translated">お好きな方は</target>
        </trans-unit>
        <trans-unit id="3c741ce5f1ea82b0eca4578f390ac989ce190e66" translate="yes" xml:space="preserve">
          <source>If you pass a string variable (a well-formed JSON string) to JSON.parse from MVC @Viewbag that has doublequote, '&quot;', as quotes, you need to process it before JSON.parse (&lt;code&gt;jsonstring&lt;/code&gt;)</source>
          <target state="translated">文字列変数（整形式のJSON文字列）を、引用符として二重引用符「」を含むMVC @ViewbagからJSON.parseに渡す場合、JSON.parse（ &lt;code&gt;jsonstring&lt;/code&gt; ）の前に処理する必要があります。</target>
        </trans-unit>
        <trans-unit id="ff1acb82b33acc0575ba3b0232c33fbd2dbc67b9" translate="yes" xml:space="preserve">
          <source>If you use &lt;a href=&quot;http://en.wikipedia.org/wiki/Dojo_Toolkit&quot;&gt;Dojo Toolkit&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Dojo_Toolkit&quot;&gt;Dojo Toolkit&lt;/a&gt;を使用する場合：</target>
        </trans-unit>
        <trans-unit id="0237ef1b49f43ddc0312c8e39d86e61541478f83" translate="yes" xml:space="preserve">
          <source>If you use jQuery, it is simple:</source>
          <target state="translated">jQueryを使えば簡単です。</target>
        </trans-unit>
        <trans-unit id="d984ae7e9ea4330b3f24d2c443ab2a3465830fec" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;a href=&quot;http://bestiejs.github.com/json3/&quot;&gt;JSON 3&lt;/a&gt; for older browsers, you can load it conditionally with:</source>
          <target state="translated">古いブラウザで&lt;a href=&quot;http://bestiejs.github.com/json3/&quot;&gt;JSON 3&lt;/a&gt;を使用したい場合は、次のように条件付きでロードできます。</target>
        </trans-unit>
        <trans-unit id="811f56caed9def69b1d2f6e636ab86e26b351106" translate="yes" xml:space="preserve">
          <source>If your output is &lt;code&gt;undefined&lt;/code&gt; then you need to follow &lt;a href=&quot;https://stackoverflow.com/questions/10046010/jquery-ajax-returned-data-json-displays-as-undefined&quot;&gt;THIS answer&lt;/a&gt;. Maybe your json string has an array format. You need to access the json object properties like this</source>
          <target state="translated">出力が &lt;code&gt;undefined&lt;/code&gt; 場合は、 &lt;a href=&quot;https://stackoverflow.com/questions/10046010/jquery-ajax-returned-data-json-displays-as-undefined&quot;&gt;この回答&lt;/a&gt;に従う必要があります 。 多分あなたのjson文字列は配列フォーマットを持っています。 あなたはこのようなjsonオブジェクトのプロパティにアクセスする必要があります</target>
        </trans-unit>
        <trans-unit id="d1915bf4b11ebed34ac65fb02ac60ffd8a185dc7" translate="yes" xml:space="preserve">
          <source>In order to use that object, you can assign it to the variable, let's say &lt;code&gt;obj&lt;/code&gt;:</source>
          <target state="translated">そのオブジェクトを使用するために、それを変数に割り当てることができます、例えば &lt;code&gt;obj&lt;/code&gt; としましょう：</target>
        </trans-unit>
        <trans-unit id="d6ac1acb4090a048536d172334228594ad83c339" translate="yes" xml:space="preserve">
          <source>JSON.parse() converts any JSON String passed into the function, to a JSON object.</source>
          <target state="translated">JSON.parse()は、関数に渡された JSON 文字列を JSON オブジェクトに変換します。</target>
        </trans-unit>
        <trans-unit id="d80c0549dec7db7d1d3d1d0e4ecd04a0e62b7881" translate="yes" xml:space="preserve">
          <source>Now by using &lt;code&gt;obj&lt;/code&gt; and the dot(.) operator you can access properties of the JSON Object.</source>
          <target state="translated">これで、 &lt;code&gt;obj&lt;/code&gt; およびdot（。）演算子を使用して、JSONオブジェクトのプロパティにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="4388a629844d1e218caf70a2955c9a4b440b5c64" translate="yes" xml:space="preserve">
          <source>Now run the command:</source>
          <target state="translated">ここでコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="845eb73f39331cd87f9d7d432dc213cbffc3e004" translate="yes" xml:space="preserve">
          <source>Now the standard &lt;code&gt;window.JSON&lt;/code&gt; object is available to you no matter what browser a client is running.</source>
          <target state="translated">これで、クライアントが実行しているブラウザーに関係なく、標準の &lt;code&gt;window.JSON&lt;/code&gt; オブジェクトを使用できます。</target>
        </trans-unit>
        <trans-unit id="f9f22c1846bcf7068581f714435df9bbf6781f49" translate="yes" xml:space="preserve">
          <source>Now, I'd also like to add that if you are using &lt;a href=&quot;https://angularjs.org/&quot;&gt;AngularJS&lt;/a&gt; (which I highly recommend), then it also provides the functionality that you require:</source>
          <target state="translated">ここで、 &lt;a href=&quot;https://angularjs.org/&quot;&gt;AngularJS&lt;/a&gt; （私が強くお勧めします）を使用している場合は、必要な機能も提供することも付け加えておきます。</target>
        </trans-unit>
        <trans-unit id="f579c523960af1aec824c6fdc57af6d4abd76a1f" translate="yes" xml:space="preserve">
          <source>OR</source>
          <target state="translated">OR</target>
        </trans-unit>
        <trans-unit id="ceed99935cfaf49d5667d5f715faac58d62f1c6b" translate="yes" xml:space="preserve">
          <source>On the other hand, if you don't want to use a library and you can vouch for the validity of the JSON object, I would simply wrap the string in an anonymous function and use the eval function.</source>
          <target state="translated">一方、ライブラリを使いたくなくて、JSONオブジェクトの妥当性を証明できるのであれば、私は単純に文字列を匿名関数でラップしてeval関数を使うことにします。</target>
        </trans-unit>
        <trans-unit id="b02a717ba6a874fc5d1b8c43bbd9670e95a09064" translate="yes" xml:space="preserve">
          <source>Parse JSON in JavaScript</source>
          <target state="translated">JavaScriptでJSONをパースする</target>
        </trans-unit>
        <trans-unit id="07064dad4c842bc7c565c31e3b78ad1104dc733a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; API was introduced with &lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#5th_Edition&quot;&gt;ES5&lt;/a&gt; (2011) and has since been implemented in &amp;gt;99% of browsers by market share, and Node.js. Its usage is simple:</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;/a&gt; APIは&lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#5th_Edition&quot;&gt;ES5&lt;/a&gt; （2011）で導入され、市場シェアおよびNode.jsによってブラウザの99％以上に実装されています。 使い方は簡単です：</target>
        </trans-unit>
        <trans-unit id="2e5aa47160cf17adb2e8b35d6524fa9ec332d0c7" translate="yes" xml:space="preserve">
          <source>The easiest way using &lt;code&gt;parse()&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;parse()&lt;/code&gt; メソッドを使用する最も簡単な方法：</target>
        </trans-unit>
        <trans-unit id="20ddeb0d4aa7cb091c457389e08086c1f67e4b63" translate="yes" xml:space="preserve">
          <source>The following example will make it clear:</source>
          <target state="translated">以下の例を見れば一目瞭然です。</target>
        </trans-unit>
        <trans-unit id="d2cd4b0e2ce01d5ccf86a998bff081ec97f3c72b" translate="yes" xml:space="preserve">
          <source>The only time you won't be able to use &lt;code&gt;JSON.parse()&lt;/code&gt; is if you are programming for an ancient browser, such as IE 7 (2006), IE 6 (2001), Firefox 3 (2008), Safari 3.x (2009), etc. Alternatively, you may be in an esoteric JavaScript environment that doesn't include the standard APIs. In these cases, use &lt;a href=&quot;https://github.com/douglascrockford/JSON-js/blob/master/json2.js&quot;&gt;json2.js&lt;/a&gt;, the reference implementation of JSON written by &lt;a href=&quot;https://en.wikipedia.org/wiki/Douglas_Crockford&quot;&gt;Douglas Crockford&lt;/a&gt;, the inventor of JSON. That library will provide an implementation of &lt;code&gt;JSON.parse()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JSON.parse()&lt;/code&gt; を使用できないのは、IE 7（2006）、IE 6（2001）、Firefox 3（2008）、Safari 3.xなどの古いブラウザー用にプログラミングしている場合のみです。 （2009）など。または、標準APIを含まない難解なJavaScript環境にいる可能性があります。 このような場合は、JSONの発明者である&lt;a href=&quot;https://en.wikipedia.org/wiki/Douglas_Crockford&quot;&gt;Douglas Crockfordが&lt;/a&gt;記述したJSONのリファレンス実装である&lt;a href=&quot;https://github.com/douglascrockford/JSON-js/blob/master/json2.js&quot;&gt;json2.jsを&lt;/a&gt;使用してください 。 そのライブラリーは &lt;code&gt;JSON.parse()&lt;/code&gt; の実装を提供します。</target>
        </trans-unit>
        <trans-unit id="5d9f2bf0dcfe42acee4480d8241af6c332410fc0" translate="yes" xml:space="preserve">
          <source>The standard way to parse JSON in JavaScript is &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/cc836466(v=vs.85).aspx&quot;&gt;&lt;strong&gt;&lt;code&gt;JSON.parse()&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">JavaScriptでJSONを解析する標準的な方法は&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/cc836466(v=vs.85).aspx&quot;&gt;&lt;strong&gt; &lt;code&gt;JSON.parse()&lt;/code&gt; です&lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9f5264b1d93d588ced1037f1cdf2dc718042324" translate="yes" xml:space="preserve">
          <source>This answer stems from an ancient era of JavaScript programming during which there was no builtin way to parse JSON. The advice given here is no longer applicable and probably dangerous. From a modern perspective, parsing JSON by involving jQuery or calling eval() is nonsense. Unless you need to support IE 7 or Firefox 3.0, the correct way to parse JSON is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse&quot;&gt;JSON.parse()&lt;/a&gt;.</source>
          <target state="translated">この答えは、JSONを解析する組み込みの方法がなかったJavaScriptプログラミングの古代の時代に由来します。 ここで与えられたアドバイスはもはや適用されず、おそらく危険です。 現代の観点から見ると、jQueryを使用したりeval（）を呼び出してJSONを解析することは意味がありません。 IE 7またはFirefox 3.0をサポートする必要がない限り、JSONを解析する正しい方法は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse&quot;&gt;JSON.parse（）&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="1e547be1c699e82e0843db663dc488834c9519d0" translate="yes" xml:space="preserve">
          <source>This is not recommended if you are getting the JSON object from another source that isn't absolutely trusted because the eval function allows for renegade code if you will.</source>
          <target state="translated">これは、絶対に信頼できない別のソースからJSONオブジェクトを取得している場合にはお勧めできません。</target>
        </trans-unit>
        <trans-unit id="f9b7a63002af0b4ebe59e69981d46fe8238743d8" translate="yes" xml:space="preserve">
          <source>This is really the ideal solution for the future.</source>
          <target state="translated">これは本当に理想的な解決策だと思います。</target>
        </trans-unit>
        <trans-unit id="850833b9085fb74cb4f4d20d309aacb83f1c5c1e" translate="yes" xml:space="preserve">
          <source>Try to run the command</source>
          <target state="translated">コマンドを実行してみてください</target>
        </trans-unit>
        <trans-unit id="acf72ff8536cb7c07913f02c5d05cbe20402fc3e" translate="yes" xml:space="preserve">
          <source>Update:</source>
          <target state="translated">Update:</target>
        </trans-unit>
        <trans-unit id="79c0b2a0ad50a87c9e4da5db88db4d97e275bfe3" translate="yes" xml:space="preserve">
          <source>When processing extremely large JSON files, &lt;code&gt;JSON.parse()&lt;/code&gt; may choke because of its synchronous nature and design. To resolve this, the JSON website recommends third-party libraries such as &lt;a href=&quot;http://oboejs.com/&quot;&gt;Oboe.js&lt;/a&gt; and &lt;a href=&quot;https://github.com/dscape/clarinet&quot;&gt;clarinet&lt;/a&gt;, which provide streaming JSON parsing.</source>
          <target state="translated">非常に大きなJSONファイルを処理する場合、 &lt;code&gt;JSON.parse()&lt;/code&gt; は、同期の性質と設計のためにチョークする可能性があります。 これを解決するために、JSON Webサイトでは、ストリーミングJSON解析を提供する&lt;a href=&quot;http://oboejs.com/&quot;&gt;Oboe.js&lt;/a&gt;や&lt;a href=&quot;https://github.com/dscape/clarinet&quot;&gt;clarinet&lt;/a&gt;などのサードパーティライブラリを推奨しています。</target>
        </trans-unit>
        <trans-unit id="17a5cf2d43adcdc095441db82200f0c9d1d4c57e" translate="yes" xml:space="preserve">
          <source>Without using a library you can use &lt;code&gt;eval&lt;/code&gt; - the only time you should use. It's safer to use a library though.</source>
          <target state="translated">ライブラリを使用しなくても、 &lt;code&gt;eval&lt;/code&gt; を使用できます。 ライブラリを使用する方が安全です。</target>
        </trans-unit>
        <trans-unit id="6fc3a685b7831dda1db9d2aec5dd9f209c2a8333" translate="yes" xml:space="preserve">
          <source>You can either use the eval function as in some other answers. (Don't forget the extra braces.) You will know why when you dig deeper), or simply use the jQuery function &lt;code&gt;parseJSON&lt;/code&gt;:</source>
          <target state="translated">他の回答と同様に、eval関数を使用することもできます。 （余分な中かっこを忘れないでください。）深く掘り下げると、その理由がわかります）、または単にjQuery関数 &lt;code&gt;parseJSON&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="f63522718d077723e2766e1017a25f291ee74fa2" translate="yes" xml:space="preserve">
          <source>You can use this below code.</source>
          <target state="translated">下記のコードをご利用ください。</target>
        </trans-unit>
        <trans-unit id="43269062870042bd6898c8edc5c65d413358df3e" translate="yes" xml:space="preserve">
          <source>You'll get output as Object {result: true, count: 1}.</source>
          <target state="translated">Object {result:true,count.1}.</target>
        </trans-unit>
        <trans-unit id="c42f086513ffef9412f0f67c9180d510257e95c4" translate="yes" xml:space="preserve">
          <source>eg...</source>
          <target state="translated">eg...</target>
        </trans-unit>
        <trans-unit id="78ff7f41963c42201e2181c0ea658da433e265ba" translate="yes" xml:space="preserve">
          <source>jQuery once had a &lt;a href=&quot;https://api.jquery.com/jQuery.parseJSON/&quot;&gt;&lt;code&gt;$.parseJSON()&lt;/code&gt;&lt;/a&gt; function, but it was deprecated with jQuery 3.0. In any case, for a long time it was nothing more than a wrapper around &lt;code&gt;JSON.parse()&lt;/code&gt;.</source>
          <target state="translated">jQueryにはかつて&lt;a href=&quot;https://api.jquery.com/jQuery.parseJSON/&quot;&gt; &lt;code&gt;$.parseJSON()&lt;/code&gt; &lt;/a&gt;関数がありましたが、jQuery 3.0では非推奨になりました。 いずれにしても、長い間、それは &lt;code&gt;JSON.parse()&lt;/code&gt; のラッパーにすぎませんでした。</target>
        </trans-unit>
        <trans-unit id="237d754b3a98a749cb65468b9728ab8f34eb2c02" translate="yes" xml:space="preserve">
          <source>this is an example of how to get values:</source>
          <target state="translated">これは値の取得方法の例です。</target>
        </trans-unit>
        <trans-unit id="9494031238376858891cc9ed341b376f0a5ee60e" translate="yes" xml:space="preserve">
          <source>to open the Inspect Element of your browser, and go to the console to write the following commands:</source>
          <target state="translated">でブラウザのInspect Elementを開き、コンソールに行って以下のコマンドを書きます。</target>
        </trans-unit>
        <trans-unit id="f5eb9ee8ee0525050c2fa984187be52aed6a745c" translate="yes" xml:space="preserve">
          <source>you can access the JSON elements by JsonObject with &lt;strong&gt;(.)&lt;/strong&gt; dot:</source>
          <target state="translated">&lt;strong&gt;（。）&lt;/strong&gt;ドットを使用して、JsonObjectでJSON要素にアクセスできます&lt;strong&gt;。&lt;/strong&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
