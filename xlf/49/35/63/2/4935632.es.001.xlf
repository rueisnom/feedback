<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/4935632">
    <body>
      <group id="4935632">
        <trans-unit id="0349fad84e1b6f292de01d0f81462d4b4159781e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;WARNING!&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a9053054f2e85076717b3bed84af7f987167797" translate="yes" xml:space="preserve">
          <source>After that, I would recommend using a JavaScript library such as jQuery or Prototype if you can because these things are handled well in those libraries.</source>
          <target state="translated">Después de eso,recomendaría usar una biblioteca de JavaScript como jQuery o Prototype si se puede,porque estas cosas se manejan bien en esas bibliotecas.</target>
        </trans-unit>
        <trans-unit id="88c29beed74863afeed8bfe498b63006afdaf487" translate="yes" xml:space="preserve">
          <source>An easy way to do it:</source>
          <target state="translated">Una forma fácil de hacerlo:</target>
        </trans-unit>
        <trans-unit id="b7c7414cad01426cb44ff3f852f342cc54578e26" translate="yes" xml:space="preserve">
          <source>And you can access the fields using &lt;code&gt;jsonObject.result&lt;/code&gt; and &lt;code&gt;jsonObject.count&lt;/code&gt;.</source>
          <target state="translated">Y puede acceder a los campos utilizando &lt;code&gt;jsonObject.result&lt;/code&gt; y &lt;code&gt;jsonObject.count&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f323db856233695ec78a2c5d2f6c52a2afc0b738" translate="yes" xml:space="preserve">
          <source>As mentioned by numerous others, most browsers support &lt;code&gt;JSON.parse&lt;/code&gt; and &lt;code&gt;JSON.stringify&lt;/code&gt;.</source>
          <target state="translated">Como lo mencionaron muchos otros, la mayor&amp;iacute;a de los navegadores admiten &lt;code&gt;JSON.parse&lt;/code&gt; y &lt;code&gt;JSON.stringify&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e262aa4c560f1ae35fd6e5cf5ac45462ea46ecc8" translate="yes" xml:space="preserve">
          <source>F12</source>
          <target state="translated">F12</target>
        </trans-unit>
        <trans-unit id="4d75718a0632ac0b52b678b9a1f75f8b38e09c76" translate="yes" xml:space="preserve">
          <source>First of all, you have to make sure that the JSON code is valid.</source>
          <target state="translated">En primer lugar,tienes que asegurarte de que el código JSON es válido.</target>
        </trans-unit>
        <trans-unit id="da8abb62295ea48a0ff010267aff9688a2fcd2cb" translate="yes" xml:space="preserve">
          <source>For better understanding, press</source>
          <target state="translated">Para una mejor comprensión,presione</target>
        </trans-unit>
        <trans-unit id="363e96bd0f8a3e2de8bc57e502b1a975b73aca5d" translate="yes" xml:space="preserve">
          <source>Here is an example of using the eval function:</source>
          <target state="translated">He aquí un ejemplo de utilización de la función de evaluación:</target>
        </trans-unit>
        <trans-unit id="74a78ebc97924254ae91b4cc1ad9b8db9a2997fc" translate="yes" xml:space="preserve">
          <source>How can I get the values &lt;code&gt;result&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; from this?</source>
          <target state="translated">&amp;iquest;C&amp;oacute;mo puedo obtener el &lt;code&gt;result&lt;/code&gt; ado de los valores y &lt;code&gt;count&lt;/code&gt; partir de esto?</target>
        </trans-unit>
        <trans-unit id="248f07d53299c45f5939ea344c6f9bdc62aacc50" translate="yes" xml:space="preserve">
          <source>I just wanted to add the stuff about AngularJS to provide another option. NOTE that AngularJS doesn't officially support Internet&amp;nbsp;Explorer&amp;nbsp;8 (and older versions, for that matter), though through experience most of the stuff seems to work pretty well.</source>
          <target state="translated">Solo quer&amp;iacute;a agregar cosas sobre AngularJS para proporcionar otra opci&amp;oacute;n. TEN EN CUENTA que AngularJS no admite oficialmente Internet Explorer 8 (y versiones anteriores, para el caso), aunque a trav&amp;eacute;s de la experiencia la mayor&amp;iacute;a de las cosas parecen funcionar bastante bien.</target>
        </trans-unit>
        <trans-unit id="e021da450d15c8da0a0e88a6537bb59fb2df1d7a" translate="yes" xml:space="preserve">
          <source>I thought &lt;code&gt;JSON.parse(myObject)&lt;/code&gt; would work. But depending on the browsers, it might be worth using &lt;code&gt;eval('('+myObject+')')&lt;/code&gt;. The only issue I can recommend watching out for is the multi-level list in JSON.</source>
          <target state="translated">Pens&amp;eacute; que &lt;code&gt;JSON.parse(myObject)&lt;/code&gt; funcionar&amp;iacute;a. Pero dependiendo de los navegadores, podr&amp;iacute;a valer la pena usar &lt;code&gt;eval('('+myObject+')')&lt;/code&gt; . El &amp;uacute;nico problema que puedo recomendar es la lista de varios niveles en JSON.</target>
        </trans-unit>
        <trans-unit id="0caba7e02df90bff80552404e51f0aa21bb7314b" translate="yes" xml:space="preserve">
          <source>I want to parse a JSON string in JavaScript. The response is something like</source>
          <target state="translated">Quiero analizar una cadena JSON en JavaScript.La respuesta es algo como</target>
        </trans-unit>
        <trans-unit id="e4c102816cbbdeaee5e7b4ca19ed527110e66cc0" translate="yes" xml:space="preserve">
          <source>If you are getting this from an outside site it might be helpful to use jQuery's getJSON. If it's a list you can iterate through it with $.each</source>
          <target state="translated">Si estás obteniendo esto de un sitio externo podría ser útil usar el getJSON de jQuery.Si es una lista,puedes iterar a través de ella con $.cada uno</target>
        </trans-unit>
        <trans-unit id="57c040b546c8bffee654280bc53886eaf65efc7b" translate="yes" xml:space="preserve">
          <source>If you control what browser is being used or you are not worried people with an older browser, you can always use the JSON.parse method.</source>
          <target state="translated">Si controlas qué navegador se está usando o no te preocupa la gente con un navegador más antiguo,siempre puedes usar el método JSON.parse.</target>
        </trans-unit>
        <trans-unit id="095cde20fad186a0657de9edc9081d90b4304c0a" translate="yes" xml:space="preserve">
          <source>If you like</source>
          <target state="translated">Si quieres...</target>
        </trans-unit>
        <trans-unit id="3c741ce5f1ea82b0eca4578f390ac989ce190e66" translate="yes" xml:space="preserve">
          <source>If you pass a string variable (a well-formed JSON string) to JSON.parse from MVC @Viewbag that has doublequote, '&quot;', as quotes, you need to process it before JSON.parse (&lt;code&gt;jsonstring&lt;/code&gt;)</source>
          <target state="translated">Si pasa una variable de cadena (una cadena JSON bien formada) a JSON.parse desde MVC @Viewbag que tiene una comilla doble, '&quot;', como comillas, debe procesarla antes de JSON.parse ( &lt;code&gt;jsonstring&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ff1acb82b33acc0575ba3b0232c33fbd2dbc67b9" translate="yes" xml:space="preserve">
          <source>If you use &lt;a href=&quot;http://en.wikipedia.org/wiki/Dojo_Toolkit&quot;&gt;Dojo Toolkit&lt;/a&gt;:</source>
          <target state="translated">Si usa &lt;a href=&quot;http://en.wikipedia.org/wiki/Dojo_Toolkit&quot;&gt;Dojo Toolkit&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="0237ef1b49f43ddc0312c8e39d86e61541478f83" translate="yes" xml:space="preserve">
          <source>If you use jQuery, it is simple:</source>
          <target state="translated">Si usas jQuery,es simple:</target>
        </trans-unit>
        <trans-unit id="d984ae7e9ea4330b3f24d2c443ab2a3465830fec" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;a href=&quot;http://bestiejs.github.com/json3/&quot;&gt;JSON 3&lt;/a&gt; for older browsers, you can load it conditionally with:</source>
          <target state="translated">Si desea utilizar &lt;a href=&quot;http://bestiejs.github.com/json3/&quot;&gt;JSON 3&lt;/a&gt; para navegadores antiguos, puede cargarlo condicionalmente con:</target>
        </trans-unit>
        <trans-unit id="811f56caed9def69b1d2f6e636ab86e26b351106" translate="yes" xml:space="preserve">
          <source>If your output is &lt;code&gt;undefined&lt;/code&gt; then you need to follow &lt;a href=&quot;https://stackoverflow.com/questions/10046010/jquery-ajax-returned-data-json-displays-as-undefined&quot;&gt;THIS answer&lt;/a&gt;. Maybe your json string has an array format. You need to access the json object properties like this</source>
          <target state="translated">Si su salida &lt;code&gt;undefined&lt;/code&gt; est&amp;aacute; definida, entonces debe seguir &lt;a href=&quot;https://stackoverflow.com/questions/10046010/jquery-ajax-returned-data-json-displays-as-undefined&quot;&gt;ESTA respuesta&lt;/a&gt; . Tal vez su cadena json tiene un formato de matriz. Necesita acceder a las propiedades del objeto json como esta</target>
        </trans-unit>
        <trans-unit id="d1915bf4b11ebed34ac65fb02ac60ffd8a185dc7" translate="yes" xml:space="preserve">
          <source>In order to use that object, you can assign it to the variable, let's say &lt;code&gt;obj&lt;/code&gt;:</source>
          <target state="translated">Para usar ese objeto, puede asignarlo a la variable, digamos &lt;code&gt;obj&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d6ac1acb4090a048536d172334228594ad83c339" translate="yes" xml:space="preserve">
          <source>JSON.parse() converts any JSON String passed into the function, to a JSON object.</source>
          <target state="translated">JSON.parse()convierte cualquier JSON String pasado a la función,en un objeto JSON.</target>
        </trans-unit>
        <trans-unit id="d80c0549dec7db7d1d3d1d0e4ecd04a0e62b7881" translate="yes" xml:space="preserve">
          <source>Now by using &lt;code&gt;obj&lt;/code&gt; and the dot(.) operator you can access properties of the JSON Object.</source>
          <target state="translated">Ahora, usando &lt;code&gt;obj&lt;/code&gt; y el operador de punto (.) Puede acceder a las propiedades del objeto JSON.</target>
        </trans-unit>
        <trans-unit id="4388a629844d1e218caf70a2955c9a4b440b5c64" translate="yes" xml:space="preserve">
          <source>Now run the command:</source>
          <target state="translated">Ahora ejecuta el comando:</target>
        </trans-unit>
        <trans-unit id="845eb73f39331cd87f9d7d432dc213cbffc3e004" translate="yes" xml:space="preserve">
          <source>Now the standard &lt;code&gt;window.JSON&lt;/code&gt; object is available to you no matter what browser a client is running.</source>
          <target state="translated">Ahora el objeto est&amp;aacute;ndar &lt;code&gt;window.JSON&lt;/code&gt; est&amp;aacute; disponible para usted sin importar qu&amp;eacute; navegador est&amp;eacute; ejecutando un cliente.</target>
        </trans-unit>
        <trans-unit id="f9f22c1846bcf7068581f714435df9bbf6781f49" translate="yes" xml:space="preserve">
          <source>Now, I'd also like to add that if you are using &lt;a href=&quot;https://angularjs.org/&quot;&gt;AngularJS&lt;/a&gt; (which I highly recommend), then it also provides the functionality that you require:</source>
          <target state="translated">Ahora, tambi&amp;eacute;n me gustar&amp;iacute;a agregar que si est&amp;aacute; utilizando &lt;a href=&quot;https://angularjs.org/&quot;&gt;AngularJS&lt;/a&gt; (lo cual recomiendo), tambi&amp;eacute;n proporciona la funcionalidad que necesita:</target>
        </trans-unit>
        <trans-unit id="f579c523960af1aec824c6fdc57af6d4abd76a1f" translate="yes" xml:space="preserve">
          <source>OR</source>
          <target state="translated">OR</target>
        </trans-unit>
        <trans-unit id="ceed99935cfaf49d5667d5f715faac58d62f1c6b" translate="yes" xml:space="preserve">
          <source>On the other hand, if you don't want to use a library and you can vouch for the validity of the JSON object, I would simply wrap the string in an anonymous function and use the eval function.</source>
          <target state="translated">Por otro lado,si no quieres usar una biblioteca y puedes dar fe de la validez del objeto JSON,simplemente envolvería la cadena en una función anónima y usaría la función de evaluación.</target>
        </trans-unit>
        <trans-unit id="b02a717ba6a874fc5d1b8c43bbd9670e95a09064" translate="yes" xml:space="preserve">
          <source>Parse JSON in JavaScript</source>
          <target state="translated">Parse JSON en JavaScript</target>
        </trans-unit>
        <trans-unit id="07064dad4c842bc7c565c31e3b78ad1104dc733a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; API was introduced with &lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#5th_Edition&quot;&gt;ES5&lt;/a&gt; (2011) and has since been implemented in &amp;gt;99% of browsers by market share, and Node.js. Its usage is simple:</source>
          <target state="translated">La API &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;/a&gt; se introdujo con &lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#5th_Edition&quot;&gt;ES5&lt;/a&gt; (2011) y desde entonces se ha implementado en&amp;gt; 99% de los navegadores por cuota de mercado, y Node.js. Su uso es simple:</target>
        </trans-unit>
        <trans-unit id="2e5aa47160cf17adb2e8b35d6524fa9ec332d0c7" translate="yes" xml:space="preserve">
          <source>The easiest way using &lt;code&gt;parse()&lt;/code&gt; method:</source>
          <target state="translated">La forma m&amp;aacute;s f&amp;aacute;cil de usar el m&amp;eacute;todo &lt;code&gt;parse()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="20ddeb0d4aa7cb091c457389e08086c1f67e4b63" translate="yes" xml:space="preserve">
          <source>The following example will make it clear:</source>
          <target state="translated">El siguiente ejemplo lo dejará claro:</target>
        </trans-unit>
        <trans-unit id="d2cd4b0e2ce01d5ccf86a998bff081ec97f3c72b" translate="yes" xml:space="preserve">
          <source>The only time you won't be able to use &lt;code&gt;JSON.parse()&lt;/code&gt; is if you are programming for an ancient browser, such as IE 7 (2006), IE 6 (2001), Firefox 3 (2008), Safari 3.x (2009), etc. Alternatively, you may be in an esoteric JavaScript environment that doesn't include the standard APIs. In these cases, use &lt;a href=&quot;https://github.com/douglascrockford/JSON-js/blob/master/json2.js&quot;&gt;json2.js&lt;/a&gt;, the reference implementation of JSON written by &lt;a href=&quot;https://en.wikipedia.org/wiki/Douglas_Crockford&quot;&gt;Douglas Crockford&lt;/a&gt;, the inventor of JSON. That library will provide an implementation of &lt;code&gt;JSON.parse()&lt;/code&gt;.</source>
          <target state="translated">La &amp;uacute;nica vez que no podr&amp;aacute; usar &lt;code&gt;JSON.parse()&lt;/code&gt; es si est&amp;aacute; programando para un navegador antiguo, como IE 7 (2006), IE 6 (2001), Firefox 3 (2008), Safari 3.x (2009), etc. Alternativamente, puede estar en un entorno de JavaScript esot&amp;eacute;rico que no incluye las API est&amp;aacute;ndar. En estos casos, use &lt;a href=&quot;https://github.com/douglascrockford/JSON-js/blob/master/json2.js&quot;&gt;json2.js&lt;/a&gt; , la implementaci&amp;oacute;n de referencia de JSON escrita por &lt;a href=&quot;https://en.wikipedia.org/wiki/Douglas_Crockford&quot;&gt;Douglas Crockford&lt;/a&gt; , el inventor de JSON. Esa biblioteca proporcionar&amp;aacute; una implementaci&amp;oacute;n de &lt;code&gt;JSON.parse()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d9f2bf0dcfe42acee4480d8241af6c332410fc0" translate="yes" xml:space="preserve">
          <source>The standard way to parse JSON in JavaScript is &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/cc836466(v=vs.85).aspx&quot;&gt;&lt;strong&gt;&lt;code&gt;JSON.parse()&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">La forma est&amp;aacute;ndar de analizar JSON en JavaScript es &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/cc836466(v=vs.85).aspx&quot;&gt;&lt;strong&gt; &lt;code&gt;JSON.parse()&lt;/code&gt; &lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9f5264b1d93d588ced1037f1cdf2dc718042324" translate="yes" xml:space="preserve">
          <source>This answer stems from an ancient era of JavaScript programming during which there was no builtin way to parse JSON. The advice given here is no longer applicable and probably dangerous. From a modern perspective, parsing JSON by involving jQuery or calling eval() is nonsense. Unless you need to support IE 7 or Firefox 3.0, the correct way to parse JSON is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse&quot;&gt;JSON.parse()&lt;/a&gt;.</source>
          <target state="translated">Esta respuesta proviene de una era antigua de programaci&amp;oacute;n de JavaScript durante la cual no hab&amp;iacute;a forma integrada de analizar JSON. El consejo aqu&amp;iacute; dado ya no es aplicable y probablemente sea peligroso. Desde una perspectiva moderna, analizar JSON al involucrar jQuery o llamar a eval () no tiene sentido. A menos que necesite admitir IE 7 o Firefox 3.0, la forma correcta de analizar JSON es &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse&quot;&gt;JSON.parse ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1e547be1c699e82e0843db663dc488834c9519d0" translate="yes" xml:space="preserve">
          <source>This is not recommended if you are getting the JSON object from another source that isn't absolutely trusted because the eval function allows for renegade code if you will.</source>
          <target state="translated">Esto no es recomendable si está obteniendo el objeto JSON de otra fuente que no es absolutamente confiable porque la función de evaluación permite un código renegado si se quiere.</target>
        </trans-unit>
        <trans-unit id="f9b7a63002af0b4ebe59e69981d46fe8238743d8" translate="yes" xml:space="preserve">
          <source>This is really the ideal solution for the future.</source>
          <target state="translated">Esta es realmente la solución ideal para el futuro.</target>
        </trans-unit>
        <trans-unit id="850833b9085fb74cb4f4d20d309aacb83f1c5c1e" translate="yes" xml:space="preserve">
          <source>Try to run the command</source>
          <target state="translated">Intenta ejecutar el comando</target>
        </trans-unit>
        <trans-unit id="acf72ff8536cb7c07913f02c5d05cbe20402fc3e" translate="yes" xml:space="preserve">
          <source>Update:</source>
          <target state="translated">Update:</target>
        </trans-unit>
        <trans-unit id="79c0b2a0ad50a87c9e4da5db88db4d97e275bfe3" translate="yes" xml:space="preserve">
          <source>When processing extremely large JSON files, &lt;code&gt;JSON.parse()&lt;/code&gt; may choke because of its synchronous nature and design. To resolve this, the JSON website recommends third-party libraries such as &lt;a href=&quot;http://oboejs.com/&quot;&gt;Oboe.js&lt;/a&gt; and &lt;a href=&quot;https://github.com/dscape/clarinet&quot;&gt;clarinet&lt;/a&gt;, which provide streaming JSON parsing.</source>
          <target state="translated">Al procesar archivos JSON extremadamente grandes, &lt;code&gt;JSON.parse()&lt;/code&gt; puede ahogarse debido a su naturaleza y dise&amp;ntilde;o s&amp;iacute;ncronos. Para resolver esto, el sitio web de JSON recomienda bibliotecas de terceros como &lt;a href=&quot;http://oboejs.com/&quot;&gt;Oboe.js&lt;/a&gt; y &lt;a href=&quot;https://github.com/dscape/clarinet&quot;&gt;clarinet&lt;/a&gt; , que proporcionan an&amp;aacute;lisis JSON de transmisi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="17a5cf2d43adcdc095441db82200f0c9d1d4c57e" translate="yes" xml:space="preserve">
          <source>Without using a library you can use &lt;code&gt;eval&lt;/code&gt; - the only time you should use. It's safer to use a library though.</source>
          <target state="translated">Sin usar una biblioteca, puede usar &lt;code&gt;eval&lt;/code&gt; , la &amp;uacute;nica vez que debe usar. Sin embargo, es m&amp;aacute;s seguro usar una biblioteca.</target>
        </trans-unit>
        <trans-unit id="6fc3a685b7831dda1db9d2aec5dd9f209c2a8333" translate="yes" xml:space="preserve">
          <source>You can either use the eval function as in some other answers. (Don't forget the extra braces.) You will know why when you dig deeper), or simply use the jQuery function &lt;code&gt;parseJSON&lt;/code&gt;:</source>
          <target state="translated">Puede usar la funci&amp;oacute;n eval como en algunas otras respuestas. (No olvide las llaves adicionales). Sabr&amp;aacute; por qu&amp;eacute; cuando profundice), o simplemente use la funci&amp;oacute;n jQuery &lt;code&gt;parseJSON&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f63522718d077723e2766e1017a25f291ee74fa2" translate="yes" xml:space="preserve">
          <source>You can use this below code.</source>
          <target state="translated">Puedes usar el siguiente código.</target>
        </trans-unit>
        <trans-unit id="43269062870042bd6898c8edc5c65d413358df3e" translate="yes" xml:space="preserve">
          <source>You'll get output as Object {result: true, count: 1}.</source>
          <target state="translated">Tendrás la salida como Objeto {resultado:cierto,cuenta:1}.</target>
        </trans-unit>
        <trans-unit id="c42f086513ffef9412f0f67c9180d510257e95c4" translate="yes" xml:space="preserve">
          <source>eg...</source>
          <target state="translated">eg...</target>
        </trans-unit>
        <trans-unit id="78ff7f41963c42201e2181c0ea658da433e265ba" translate="yes" xml:space="preserve">
          <source>jQuery once had a &lt;a href=&quot;https://api.jquery.com/jQuery.parseJSON/&quot;&gt;&lt;code&gt;$.parseJSON()&lt;/code&gt;&lt;/a&gt; function, but it was deprecated with jQuery 3.0. In any case, for a long time it was nothing more than a wrapper around &lt;code&gt;JSON.parse()&lt;/code&gt;.</source>
          <target state="translated">jQuery una vez tuvo una funci&amp;oacute;n &lt;a href=&quot;https://api.jquery.com/jQuery.parseJSON/&quot;&gt; &lt;code&gt;$.parseJSON()&lt;/code&gt; &lt;/a&gt; , pero qued&amp;oacute; en desuso con jQuery 3.0. En cualquier caso, durante mucho tiempo no fue m&amp;aacute;s que un contenedor alrededor de &lt;code&gt;JSON.parse()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="237d754b3a98a749cb65468b9728ab8f34eb2c02" translate="yes" xml:space="preserve">
          <source>this is an example of how to get values:</source>
          <target state="translated">este es un ejemplo de cómo obtener valores:</target>
        </trans-unit>
        <trans-unit id="9494031238376858891cc9ed341b376f0a5ee60e" translate="yes" xml:space="preserve">
          <source>to open the Inspect Element of your browser, and go to the console to write the following commands:</source>
          <target state="translated">para abrir el elemento de inspección de su navegador,e ir a la consola para escribir los siguientes comandos:</target>
        </trans-unit>
        <trans-unit id="f5eb9ee8ee0525050c2fa984187be52aed6a745c" translate="yes" xml:space="preserve">
          <source>you can access the JSON elements by JsonObject with &lt;strong&gt;(.)&lt;/strong&gt; dot:</source>
          <target state="translated">puede acceder a los elementos JSON por JsonObject con &lt;strong&gt;(.)&lt;/strong&gt; punto:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
