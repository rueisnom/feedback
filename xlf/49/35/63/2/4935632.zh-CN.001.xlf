<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/4935632">
    <body>
      <group id="4935632">
        <trans-unit id="0349fad84e1b6f292de01d0f81462d4b4159781e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;WARNING!&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a9053054f2e85076717b3bed84af7f987167797" translate="yes" xml:space="preserve">
          <source>After that, I would recommend using a JavaScript library such as jQuery or Prototype if you can because these things are handled well in those libraries.</source>
          <target state="translated">之后,如果可以的话,我建议使用jQuery或Prototype等JavaScript库,因为这些东西在这些库中都能很好的处理。</target>
        </trans-unit>
        <trans-unit id="88c29beed74863afeed8bfe498b63006afdaf487" translate="yes" xml:space="preserve">
          <source>An easy way to do it:</source>
          <target state="translated">一个简单的方法。</target>
        </trans-unit>
        <trans-unit id="b7c7414cad01426cb44ff3f852f342cc54578e26" translate="yes" xml:space="preserve">
          <source>And you can access the fields using &lt;code&gt;jsonObject.result&lt;/code&gt; and &lt;code&gt;jsonObject.count&lt;/code&gt;.</source>
          <target state="translated">您可以使用 &lt;code&gt;jsonObject.result&lt;/code&gt; 和 &lt;code&gt;jsonObject.count&lt;/code&gt; 访问这些字段。</target>
        </trans-unit>
        <trans-unit id="f323db856233695ec78a2c5d2f6c52a2afc0b738" translate="yes" xml:space="preserve">
          <source>As mentioned by numerous others, most browsers support &lt;code&gt;JSON.parse&lt;/code&gt; and &lt;code&gt;JSON.stringify&lt;/code&gt;.</source>
          <target state="translated">正如其他许多人提到的那样，大多数浏览器都支持 &lt;code&gt;JSON.parse&lt;/code&gt; 和 &lt;code&gt;JSON.stringify&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e262aa4c560f1ae35fd6e5cf5ac45462ea46ecc8" translate="yes" xml:space="preserve">
          <source>F12</source>
          <target state="translated">F12</target>
        </trans-unit>
        <trans-unit id="4d75718a0632ac0b52b678b9a1f75f8b38e09c76" translate="yes" xml:space="preserve">
          <source>First of all, you have to make sure that the JSON code is valid.</source>
          <target state="translated">首先,你必须确保JSON代码是有效的。</target>
        </trans-unit>
        <trans-unit id="da8abb62295ea48a0ff010267aff9688a2fcd2cb" translate="yes" xml:space="preserve">
          <source>For better understanding, press</source>
          <target state="translated">为了更好地理解,请按</target>
        </trans-unit>
        <trans-unit id="363e96bd0f8a3e2de8bc57e502b1a975b73aca5d" translate="yes" xml:space="preserve">
          <source>Here is an example of using the eval function:</source>
          <target state="translated">下面是一个使用评价函数的例子。</target>
        </trans-unit>
        <trans-unit id="74a78ebc97924254ae91b4cc1ad9b8db9a2997fc" translate="yes" xml:space="preserve">
          <source>How can I get the values &lt;code&gt;result&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; from this?</source>
          <target state="translated">我怎样才能得到数值 &lt;code&gt;result&lt;/code&gt; 并以此 &lt;code&gt;count&lt;/code&gt; 呢？</target>
        </trans-unit>
        <trans-unit id="248f07d53299c45f5939ea344c6f9bdc62aacc50" translate="yes" xml:space="preserve">
          <source>I just wanted to add the stuff about AngularJS to provide another option. NOTE that AngularJS doesn't officially support Internet&amp;nbsp;Explorer&amp;nbsp;8 (and older versions, for that matter), though through experience most of the stuff seems to work pretty well.</source>
          <target state="translated">我只是想添加有关AngularJS的内容，以提供另一个选项。 请注意，尽管通过经验，AngularJS并没有正式支持Internet Explorer 8（和旧版本），尽管大多数经验似乎都很好。</target>
        </trans-unit>
        <trans-unit id="e021da450d15c8da0a0e88a6537bb59fb2df1d7a" translate="yes" xml:space="preserve">
          <source>I thought &lt;code&gt;JSON.parse(myObject)&lt;/code&gt; would work. But depending on the browsers, it might be worth using &lt;code&gt;eval('('+myObject+')')&lt;/code&gt;. The only issue I can recommend watching out for is the multi-level list in JSON.</source>
          <target state="translated">我认为 &lt;code&gt;JSON.parse(myObject)&lt;/code&gt; 可以工作。 但是，根据浏览器的不同，可能值得使用 &lt;code&gt;eval('('+myObject+')')&lt;/code&gt; 。 我可以建议注意的唯一问题是JSON中的多级列表。</target>
        </trans-unit>
        <trans-unit id="0caba7e02df90bff80552404e51f0aa21bb7314b" translate="yes" xml:space="preserve">
          <source>I want to parse a JSON string in JavaScript. The response is something like</source>
          <target state="translated">我想用JavaScript解析一个JSON字符串。响应是这样的</target>
        </trans-unit>
        <trans-unit id="e4c102816cbbdeaee5e7b4ca19ed527110e66cc0" translate="yes" xml:space="preserve">
          <source>If you are getting this from an outside site it might be helpful to use jQuery's getJSON. If it's a list you can iterate through it with $.each</source>
          <target state="translated">如果你从外部网站获取这个信息,使用jQuery的getJSON可能会有帮助。如果是一个列表,你可以用$.each</target>
        </trans-unit>
        <trans-unit id="57c040b546c8bffee654280bc53886eaf65efc7b" translate="yes" xml:space="preserve">
          <source>If you control what browser is being used or you are not worried people with an older browser, you can always use the JSON.parse method.</source>
          <target state="translated">如果你控制使用的是什么浏览器,或者你不担心使用老式浏览器的人,可以随时使用JSON.parse方法。</target>
        </trans-unit>
        <trans-unit id="095cde20fad186a0657de9edc9081d90b4304c0a" translate="yes" xml:space="preserve">
          <source>If you like</source>
          <target state="translated">如果你喜欢</target>
        </trans-unit>
        <trans-unit id="3c741ce5f1ea82b0eca4578f390ac989ce190e66" translate="yes" xml:space="preserve">
          <source>If you pass a string variable (a well-formed JSON string) to JSON.parse from MVC @Viewbag that has doublequote, '&quot;', as quotes, you need to process it before JSON.parse (&lt;code&gt;jsonstring&lt;/code&gt;)</source>
          <target state="translated">如果从MVC @Viewbag将带有双引号'&amp;ldquo;&amp;rdquo;的字符串变量（格式正确的JSON字符串）传递给JSON.parse，则需要在JSON.parse（ &lt;code&gt;jsonstring&lt;/code&gt; ）之前进行处理。</target>
        </trans-unit>
        <trans-unit id="ff1acb82b33acc0575ba3b0232c33fbd2dbc67b9" translate="yes" xml:space="preserve">
          <source>If you use &lt;a href=&quot;http://en.wikipedia.org/wiki/Dojo_Toolkit&quot;&gt;Dojo Toolkit&lt;/a&gt;:</source>
          <target state="translated">如果您使用&lt;a href=&quot;http://en.wikipedia.org/wiki/Dojo_Toolkit&quot;&gt;Dojo Toolkit&lt;/a&gt; ：</target>
        </trans-unit>
        <trans-unit id="0237ef1b49f43ddc0312c8e39d86e61541478f83" translate="yes" xml:space="preserve">
          <source>If you use jQuery, it is simple:</source>
          <target state="translated">如果你使用jQuery,很简单。</target>
        </trans-unit>
        <trans-unit id="d984ae7e9ea4330b3f24d2c443ab2a3465830fec" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;a href=&quot;http://bestiejs.github.com/json3/&quot;&gt;JSON 3&lt;/a&gt; for older browsers, you can load it conditionally with:</source>
          <target state="translated">如果要将&lt;a href=&quot;http://bestiejs.github.com/json3/&quot;&gt;JSON 3&lt;/a&gt;用于较旧的浏览器，则可以有条件地使用以下命令加载它：</target>
        </trans-unit>
        <trans-unit id="811f56caed9def69b1d2f6e636ab86e26b351106" translate="yes" xml:space="preserve">
          <source>If your output is &lt;code&gt;undefined&lt;/code&gt; then you need to follow &lt;a href=&quot;https://stackoverflow.com/questions/10046010/jquery-ajax-returned-data-json-displays-as-undefined&quot;&gt;THIS answer&lt;/a&gt;. Maybe your json string has an array format. You need to access the json object properties like this</source>
          <target state="translated">如果您的输出 &lt;code&gt;undefined&lt;/code&gt; 则需要遵循&lt;a href=&quot;https://stackoverflow.com/questions/10046010/jquery-ajax-returned-data-json-displays-as-undefined&quot;&gt;此答案&lt;/a&gt; 。 也许您的json字符串具有数组格式。 您需要像这样访问json对象的属性</target>
        </trans-unit>
        <trans-unit id="d1915bf4b11ebed34ac65fb02ac60ffd8a185dc7" translate="yes" xml:space="preserve">
          <source>In order to use that object, you can assign it to the variable, let's say &lt;code&gt;obj&lt;/code&gt;:</source>
          <target state="translated">为了使用该对象，您可以将其分配给变量，比如 &lt;code&gt;obj&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d6ac1acb4090a048536d172334228594ad83c339" translate="yes" xml:space="preserve">
          <source>JSON.parse() converts any JSON String passed into the function, to a JSON object.</source>
          <target state="translated">JSON.parse()将传递到函数中的任何JSON字符串转换为JSON对象。</target>
        </trans-unit>
        <trans-unit id="d80c0549dec7db7d1d3d1d0e4ecd04a0e62b7881" translate="yes" xml:space="preserve">
          <source>Now by using &lt;code&gt;obj&lt;/code&gt; and the dot(.) operator you can access properties of the JSON Object.</source>
          <target state="translated">现在，通过使用 &lt;code&gt;obj&lt;/code&gt; 和dot（。）运算符，您可以访问JSON对象的属性。</target>
        </trans-unit>
        <trans-unit id="4388a629844d1e218caf70a2955c9a4b440b5c64" translate="yes" xml:space="preserve">
          <source>Now run the command:</source>
          <target state="translated">现在运行该命令。</target>
        </trans-unit>
        <trans-unit id="845eb73f39331cd87f9d7d432dc213cbffc3e004" translate="yes" xml:space="preserve">
          <source>Now the standard &lt;code&gt;window.JSON&lt;/code&gt; object is available to you no matter what browser a client is running.</source>
          <target state="translated">现在，无论客户端运行哪种浏览器，都可以使用标准的 &lt;code&gt;window.JSON&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="f9f22c1846bcf7068581f714435df9bbf6781f49" translate="yes" xml:space="preserve">
          <source>Now, I'd also like to add that if you are using &lt;a href=&quot;https://angularjs.org/&quot;&gt;AngularJS&lt;/a&gt; (which I highly recommend), then it also provides the functionality that you require:</source>
          <target state="translated">现在，我还要补充一点，如果您使用的是&lt;a href=&quot;https://angularjs.org/&quot;&gt;AngularJS&lt;/a&gt; （我强烈建议），那么它还提供了所需的功能：</target>
        </trans-unit>
        <trans-unit id="f579c523960af1aec824c6fdc57af6d4abd76a1f" translate="yes" xml:space="preserve">
          <source>OR</source>
          <target state="translated">OR</target>
        </trans-unit>
        <trans-unit id="ceed99935cfaf49d5667d5f715faac58d62f1c6b" translate="yes" xml:space="preserve">
          <source>On the other hand, if you don't want to use a library and you can vouch for the validity of the JSON object, I would simply wrap the string in an anonymous function and use the eval function.</source>
          <target state="translated">另一方面,如果你不想使用库,而且你可以保证JSON对象的有效性,我会简单地将字符串封装在一个匿名函数中,然后使用eval函数。</target>
        </trans-unit>
        <trans-unit id="b02a717ba6a874fc5d1b8c43bbd9670e95a09064" translate="yes" xml:space="preserve">
          <source>Parse JSON in JavaScript</source>
          <target state="translated">用JavaScript解析JSON</target>
        </trans-unit>
        <trans-unit id="07064dad4c842bc7c565c31e3b78ad1104dc733a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; API was introduced with &lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#5th_Edition&quot;&gt;ES5&lt;/a&gt; (2011) and has since been implemented in &amp;gt;99% of browsers by market share, and Node.js. Its usage is simple:</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;/a&gt; API是在&lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#5th_Edition&quot;&gt;ES5&lt;/a&gt; （2011）中引入的，此后按市场份额和Node.js在超过99％的浏览器中已实现。 它的用法很简单：</target>
        </trans-unit>
        <trans-unit id="2e5aa47160cf17adb2e8b35d6524fa9ec332d0c7" translate="yes" xml:space="preserve">
          <source>The easiest way using &lt;code&gt;parse()&lt;/code&gt; method:</source>
          <target state="translated">使用 &lt;code&gt;parse()&lt;/code&gt; 方法的最简单方法是：</target>
        </trans-unit>
        <trans-unit id="20ddeb0d4aa7cb091c457389e08086c1f67e4b63" translate="yes" xml:space="preserve">
          <source>The following example will make it clear:</source>
          <target state="translated">下面的例子就能说明问题。</target>
        </trans-unit>
        <trans-unit id="d2cd4b0e2ce01d5ccf86a998bff081ec97f3c72b" translate="yes" xml:space="preserve">
          <source>The only time you won't be able to use &lt;code&gt;JSON.parse()&lt;/code&gt; is if you are programming for an ancient browser, such as IE 7 (2006), IE 6 (2001), Firefox 3 (2008), Safari 3.x (2009), etc. Alternatively, you may be in an esoteric JavaScript environment that doesn't include the standard APIs. In these cases, use &lt;a href=&quot;https://github.com/douglascrockford/JSON-js/blob/master/json2.js&quot;&gt;json2.js&lt;/a&gt;, the reference implementation of JSON written by &lt;a href=&quot;https://en.wikipedia.org/wiki/Douglas_Crockford&quot;&gt;Douglas Crockford&lt;/a&gt;, the inventor of JSON. That library will provide an implementation of &lt;code&gt;JSON.parse()&lt;/code&gt;.</source>
          <target state="translated">唯一无法使用 &lt;code&gt;JSON.parse()&lt;/code&gt; 的地方是，如果您正在为旧版浏览器进行编程，例如IE 7（2006），IE 6（2001），Firefox 3（2008），Safari 3.x （2009）等。或者，您可能处于不包含标准API的深奥JavaScript环境中。 在这种情况下，请使用&lt;a href=&quot;https://github.com/douglascrockford/JSON-js/blob/master/json2.js&quot;&gt;JSON2.js&lt;/a&gt; ，这是JSON的发明者&lt;a href=&quot;https://en.wikipedia.org/wiki/Douglas_Crockford&quot;&gt;Douglas Crockford&lt;/a&gt;编写的JSON参考实现。 该库将提供 &lt;code&gt;JSON.parse()&lt;/code&gt; 的实现。</target>
        </trans-unit>
        <trans-unit id="5d9f2bf0dcfe42acee4480d8241af6c332410fc0" translate="yes" xml:space="preserve">
          <source>The standard way to parse JSON in JavaScript is &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/cc836466(v=vs.85).aspx&quot;&gt;&lt;strong&gt;&lt;code&gt;JSON.parse()&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">在JavaScript中解析JSON的标准方法是&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/cc836466(v=vs.85).aspx&quot;&gt;&lt;strong&gt; &lt;code&gt;JSON.parse()&lt;/code&gt; &lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9f5264b1d93d588ced1037f1cdf2dc718042324" translate="yes" xml:space="preserve">
          <source>This answer stems from an ancient era of JavaScript programming during which there was no builtin way to parse JSON. The advice given here is no longer applicable and probably dangerous. From a modern perspective, parsing JSON by involving jQuery or calling eval() is nonsense. Unless you need to support IE 7 or Firefox 3.0, the correct way to parse JSON is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse&quot;&gt;JSON.parse()&lt;/a&gt;.</source>
          <target state="translated">这个答案源自一个古老的JavaScript编程时代，在那个时代没有内置的方法可以解析JSON。 此处给出的建议不再适用，可能很危险。 从现代的角度来看，通过涉及jQuery或调用eval（）来解析JSON是胡说八道。 除非您需要支持IE 7或Firefox 3.0，否则解析JSON的正确方法是&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse&quot;&gt;JSON.parse（）&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e547be1c699e82e0843db663dc488834c9519d0" translate="yes" xml:space="preserve">
          <source>This is not recommended if you are getting the JSON object from another source that isn't absolutely trusted because the eval function allows for renegade code if you will.</source>
          <target state="translated">如果你从其他不是绝对信任的源头获取JSON对象,不建议使用这个方法,因为eval函数允许重写代码。</target>
        </trans-unit>
        <trans-unit id="f9b7a63002af0b4ebe59e69981d46fe8238743d8" translate="yes" xml:space="preserve">
          <source>This is really the ideal solution for the future.</source>
          <target state="translated">这确实是未来的理想解决方案。</target>
        </trans-unit>
        <trans-unit id="850833b9085fb74cb4f4d20d309aacb83f1c5c1e" translate="yes" xml:space="preserve">
          <source>Try to run the command</source>
          <target state="translated">试着运行该命令</target>
        </trans-unit>
        <trans-unit id="acf72ff8536cb7c07913f02c5d05cbe20402fc3e" translate="yes" xml:space="preserve">
          <source>Update:</source>
          <target state="translated">Update:</target>
        </trans-unit>
        <trans-unit id="79c0b2a0ad50a87c9e4da5db88db4d97e275bfe3" translate="yes" xml:space="preserve">
          <source>When processing extremely large JSON files, &lt;code&gt;JSON.parse()&lt;/code&gt; may choke because of its synchronous nature and design. To resolve this, the JSON website recommends third-party libraries such as &lt;a href=&quot;http://oboejs.com/&quot;&gt;Oboe.js&lt;/a&gt; and &lt;a href=&quot;https://github.com/dscape/clarinet&quot;&gt;clarinet&lt;/a&gt;, which provide streaming JSON parsing.</source>
          <target state="translated">在处理超大JSON文件时， &lt;code&gt;JSON.parse()&lt;/code&gt; 可能由于其同步特性和设计而感到窒息。 为了解决这个问题，JSON网站推荐了第三方库，例如&lt;a href=&quot;http://oboejs.com/&quot;&gt;Oboe.js&lt;/a&gt;和&lt;a href=&quot;https://github.com/dscape/clarinet&quot;&gt;clarinet&lt;/a&gt; ，它们提供了流JSON解析。</target>
        </trans-unit>
        <trans-unit id="17a5cf2d43adcdc095441db82200f0c9d1d4c57e" translate="yes" xml:space="preserve">
          <source>Without using a library you can use &lt;code&gt;eval&lt;/code&gt; - the only time you should use. It's safer to use a library though.</source>
          <target state="translated">如果不使用库，则可以使用 &lt;code&gt;eval&lt;/code&gt; -应该唯一使用的时间。 不过使用库更安全。</target>
        </trans-unit>
        <trans-unit id="6fc3a685b7831dda1db9d2aec5dd9f209c2a8333" translate="yes" xml:space="preserve">
          <source>You can either use the eval function as in some other answers. (Don't forget the extra braces.) You will know why when you dig deeper), or simply use the jQuery function &lt;code&gt;parseJSON&lt;/code&gt;:</source>
          <target state="translated">您可以像其他一些答案一样使用eval函数。 （别忘了多余的花括号。）当您深入研究时，您将知道为什么），或者干脆使用jQuery函数 &lt;code&gt;parseJSON&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="f63522718d077723e2766e1017a25f291ee74fa2" translate="yes" xml:space="preserve">
          <source>You can use this below code.</source>
          <target state="translated">你可以使用下面的代码。</target>
        </trans-unit>
        <trans-unit id="43269062870042bd6898c8edc5c65d413358df3e" translate="yes" xml:space="preserve">
          <source>You'll get output as Object {result: true, count: 1}.</source>
          <target state="translated">你会得到输出为Object {result:true,count:1}.</target>
        </trans-unit>
        <trans-unit id="c42f086513ffef9412f0f67c9180d510257e95c4" translate="yes" xml:space="preserve">
          <source>eg...</source>
          <target state="translated">eg...</target>
        </trans-unit>
        <trans-unit id="78ff7f41963c42201e2181c0ea658da433e265ba" translate="yes" xml:space="preserve">
          <source>jQuery once had a &lt;a href=&quot;https://api.jquery.com/jQuery.parseJSON/&quot;&gt;&lt;code&gt;$.parseJSON()&lt;/code&gt;&lt;/a&gt; function, but it was deprecated with jQuery 3.0. In any case, for a long time it was nothing more than a wrapper around &lt;code&gt;JSON.parse()&lt;/code&gt;.</source>
          <target state="translated">jQuery曾经有一个&lt;a href=&quot;https://api.jquery.com/jQuery.parseJSON/&quot;&gt; &lt;code&gt;$.parseJSON()&lt;/code&gt; &lt;/a&gt;函数，但jQuery 3.0弃用了它。 无论如何，长期以来，它不过是 &lt;code&gt;JSON.parse()&lt;/code&gt; 的包装。</target>
        </trans-unit>
        <trans-unit id="237d754b3a98a749cb65468b9728ab8f34eb2c02" translate="yes" xml:space="preserve">
          <source>this is an example of how to get values:</source>
          <target state="translated">这是一个如何获取数值的例子。</target>
        </trans-unit>
        <trans-unit id="9494031238376858891cc9ed341b376f0a5ee60e" translate="yes" xml:space="preserve">
          <source>to open the Inspect Element of your browser, and go to the console to write the following commands:</source>
          <target state="translated">来打开浏览器的检查元素,到控制台中写下以下命令。</target>
        </trans-unit>
        <trans-unit id="f5eb9ee8ee0525050c2fa984187be52aed6a745c" translate="yes" xml:space="preserve">
          <source>you can access the JSON elements by JsonObject with &lt;strong&gt;(.)&lt;/strong&gt; dot:</source>
          <target state="translated">您可以使用&lt;strong&gt;（。）&lt;/strong&gt;点通过JsonObject访问JSON元素：</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
